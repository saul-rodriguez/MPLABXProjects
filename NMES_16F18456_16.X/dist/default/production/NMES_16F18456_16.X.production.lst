

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Mar 27 15:51:22 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	16F18456
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    22                           	psect	stringtext17,global,class=STRCODE,delta=2,noexec
    23                           	psect	stringtext18,global,class=STRCODE,delta=2,noexec
    24                           	psect	stringtext19,global,class=STRCODE,delta=2,noexec
    25                           	psect	stringtext20,global,class=STRCODE,delta=2,noexec
    26                           	psect	stringtext21,global,class=STRCODE,delta=2,noexec
    27                           	psect	stringtext22,global,class=STRCODE,delta=2,noexec
    28                           	psect	stringtext23,global,class=STRCODE,delta=2,noexec
    29                           	psect	stringtext24,global,class=STRCODE,delta=2,noexec
    30                           	psect	stringtext25,global,class=STRCODE,delta=2,noexec
    31                           	psect	stringtext26,global,class=STRCODE,delta=2,noexec
    32                           	psect	stringtext27,global,class=STRCODE,delta=2,noexec
    33                           	psect	stringtext28,global,class=STRCODE,delta=2,noexec
    34                           	psect	stringtext29,global,class=STRCODE,delta=2,noexec
    35                           	psect	stringtext30,global,class=STRCODE,delta=2,noexec
    36                           	psect	stringtext31,global,class=STRCODE,delta=2,noexec
    37                           	psect	stringtext32,global,class=STRCODE,delta=2,noexec
    38                           	psect	stringtext33,global,class=STRCODE,delta=2,noexec
    39                           	psect	stringtext34,global,class=STRCODE,delta=2,noexec
    40                           	psect	stringtext35,global,class=STRCODE,delta=2,noexec
    41                           	psect	stringtext36,global,class=STRCODE,delta=2,noexec
    42                           	psect	stringtext37,global,class=STRCODE,delta=2,noexec
    43                           	psect	stringtext38,global,class=STRCODE,delta=2,noexec
    44                           	psect	stringtext39,global,class=STRCODE,delta=2,noexec
    45                           	psect	stringtext40,global,class=STRCODE,delta=2,noexec
    46                           	psect	stringtext41,global,class=STRCODE,delta=2,noexec
    47                           	psect	stringtext42,global,class=STRCODE,delta=2,noexec
    48                           	psect	cinit,global,class=CODE,merge=1,delta=2
    49                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    50                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    51                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    52                           	psect	clrtext,global,class=CODE,delta=2
    53                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    54                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    55                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    56                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    57                           	psect	text1,local,class=CODE,merge=1,delta=2
    58                           	psect	text2,local,class=CODE,merge=1,delta=2
    59                           	psect	text3,local,class=CODE,merge=1,delta=2
    60                           	psect	text4,local,class=CODE,merge=1,delta=2
    61                           	psect	text5,local,class=CODE,merge=1,delta=2
    62                           	psect	text6,local,class=CODE,merge=1,delta=2
    63                           	psect	text7,local,class=CODE,merge=1,delta=2
    64                           	psect	text8,local,class=CODE,merge=1,delta=2
    65                           	psect	text9,local,class=CODE,merge=1,delta=2
    66                           	psect	text10,local,class=CODE,merge=1,delta=2
    67                           	psect	text11,local,class=CODE,merge=1,delta=2
    68                           	psect	text12,local,class=CODE,merge=1,delta=2
    69                           	psect	text13,local,class=CODE,merge=1,delta=2
    70                           	psect	text14,local,class=CODE,merge=1,delta=2
    71                           	psect	text15,local,class=CODE,merge=1,delta=2
    72                           	psect	text16,local,class=CODE,merge=1,delta=2
    73                           	psect	text17,local,class=CODE,merge=1,delta=2
    74                           	psect	text18,local,class=CODE,merge=1,delta=2
    75                           	psect	text19,local,class=CODE,merge=1,delta=2
    76                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    77                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    78                           	psect	text22,local,class=CODE,merge=1,delta=2
    79                           	psect	text23,local,class=CODE,merge=1,delta=2
    80                           	psect	text24,local,class=CODE,merge=1,delta=2
    81                           	psect	text25,local,class=CODE,merge=1,delta=2
    82                           	psect	text26,local,class=CODE,merge=1,delta=2
    83                           	psect	text27,local,class=CODE,merge=1,delta=2
    84                           	psect	text28,local,class=CODE,merge=1,delta=2
    85                           	psect	text29,local,class=CODE,merge=1,delta=2
    86                           	psect	text30,local,class=CODE,merge=1,delta=2
    87                           	psect	text31,local,class=CODE,merge=1,delta=2
    88                           	psect	text32,local,class=CODE,merge=1,delta=2
    89                           	psect	text33,local,class=CODE,merge=1,delta=2
    90                           	psect	text34,local,class=CODE,merge=1,delta=2,group=1
    91                           	psect	text35,local,class=CODE,merge=1,delta=2
    92                           	psect	text36,local,class=CODE,merge=1,delta=2
    93                           	psect	text37,local,class=CODE,merge=1,delta=2
    94                           	psect	text38,local,class=CODE,merge=1,delta=2
    95                           	psect	text39,local,class=CODE,merge=1,delta=2
    96                           	psect	text40,local,class=CODE,merge=1,delta=2
    97                           	psect	text41,local,class=CODE,merge=1,delta=2
    98                           	psect	text42,local,class=CODE,merge=1,delta=2,group=1
    99                           	psect	text43,local,class=CODE,merge=1,delta=2,group=1
   100                           	psect	text44,local,class=CODE,merge=1,delta=2
   101                           	psect	text45,local,class=CODE,merge=1,delta=2
   102                           	psect	text46,local,class=CODE,merge=1,delta=2
   103                           	psect	text47,local,class=CODE,merge=1,delta=2
   104                           	psect	text48,local,class=CODE,merge=1,delta=2
   105                           	psect	text49,local,class=CODE,merge=1,delta=2
   106                           	psect	text50,local,class=CODE,merge=1,delta=2
   107                           	psect	text51,local,class=CODE,merge=1,delta=2
   108                           	psect	intentry,global,class=CODE,delta=2
   109                           	psect	text53,local,class=CODE,merge=1,delta=2
   110                           	psect	text54,local,class=CODE,merge=1,delta=2
   111                           	psect	text55,local,class=CODE,merge=1,delta=2
   112                           	psect	text56,local,class=CODE,merge=1,delta=2
   113                           	psect	text57,local,class=CODE,merge=1,delta=2
   114                           	psect	text58,local,class=CODE,merge=1,delta=2
   115                           	psect	text59,local,class=CODE,merge=1,delta=2
   116                           	psect	text60,local,class=CODE,merge=1,delta=2
   117                           	psect	text61,local,class=CODE,merge=1,delta=2
   118                           	psect	text62,local,class=CODE,merge=1,delta=2
   119                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   120                           	dabs	1,0xCA0,32
   121                           	dabs	1,0xC20,80
   122                           	dabs	1,0xBA0,80
   123                           	dabs	1,0xB4A,38
   124                           	dabs	1,0x270A,0,_waveform
   125                           	dabs	1,0x7E,2
   126  0000                     
   127                           ; Version 2.32
   128                           ; Generated 02/02/2021 GMT
   129                           ; 
   130                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   131                           ; All rights reserved.
   132                           ; 
   133                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   134                           ; 
   135                           ; Redistribution and use in source and binary forms, with or without modification, are
   136                           ; permitted provided that the following conditions are met:
   137                           ; 
   138                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   139                           ;        conditions and the following disclaimer.
   140                           ; 
   141                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   142                           ;        of conditions and the following disclaimer in the documentation and/or other
   143                           ;        materials provided with the distribution. Publication is not required when
   144                           ;        this file is used in an embedded application.
   145                           ; 
   146                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   147                           ;        software without specific prior written permission.
   148                           ; 
   149                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   150                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   151                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   152                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   153                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   154                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   155                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   156                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   157                           ; 
   158                           ; 
   159                           ; Code-generator required, PIC16F18456 Definitions
   160                           ; 
   161                           ; SFR Addresses
   162  0000                     	;# 
   163  0001                     	;# 
   164  0002                     	;# 
   165  0003                     	;# 
   166  0004                     	;# 
   167  0005                     	;# 
   168  0006                     	;# 
   169  0007                     	;# 
   170  0008                     	;# 
   171  0009                     	;# 
   172  000A                     	;# 
   173  000B                     	;# 
   174  000C                     	;# 
   175  000D                     	;# 
   176  000E                     	;# 
   177  0010                     	;# 
   178  0012                     	;# 
   179  0013                     	;# 
   180  0014                     	;# 
   181  0016                     	;# 
   182  0018                     	;# 
   183  0019                     	;# 
   184  001A                     	;# 
   185  001C                     	;# 
   186  008C                     	;# 
   187  008C                     	;# 
   188  008D                     	;# 
   189  008E                     	;# 
   190  008E                     	;# 
   191  008F                     	;# 
   192  0090                     	;# 
   193  0090                     	;# 
   194  0091                     	;# 
   195  0092                     	;# 
   196  0092                     	;# 
   197  0093                     	;# 
   198  0094                     	;# 
   199  0094                     	;# 
   200  0095                     	;# 
   201  0096                     	;# 
   202  0096                     	;# 
   203  0097                     	;# 
   204  0098                     	;# 
   205  0099                     	;# 
   206  009A                     	;# 
   207  009B                     	;# 
   208  009B                     	;# 
   209  009C                     	;# 
   210  009D                     	;# 
   211  009D                     	;# 
   212  009E                     	;# 
   213  009F                     	;# 
   214  010C                     	;# 
   215  010C                     	;# 
   216  010D                     	;# 
   217  010E                     	;# 
   218  010F                     	;# 
   219  010F                     	;# 
   220  0110                     	;# 
   221  0111                     	;# 
   222  0112                     	;# 
   223  0113                     	;# 
   224  0114                     	;# 
   225  0115                     	;# 
   226  0116                     	;# 
   227  0117                     	;# 
   228  0118                     	;# 
   229  0119                     	;# 
   230  0119                     	;# 
   231  0119                     	;# 
   232  011A                     	;# 
   233  011A                     	;# 
   234  011A                     	;# 
   235  011B                     	;# 
   236  011B                     	;# 
   237  011B                     	;# 
   238  011B                     	;# 
   239  011B                     	;# 
   240  011C                     	;# 
   241  011C                     	;# 
   242  011C                     	;# 
   243  011D                     	;# 
   244  011D                     	;# 
   245  011D                     	;# 
   246  011E                     	;# 
   247  011E                     	;# 
   248  011E                     	;# 
   249  011F                     	;# 
   250  011F                     	;# 
   251  011F                     	;# 
   252  011F                     	;# 
   253  011F                     	;# 
   254  018C                     	;# 
   255  018D                     	;# 
   256  018E                     	;# 
   257  018F                     	;# 
   258  0190                     	;# 
   259  0191                     	;# 
   260  0192                     	;# 
   261  0196                     	;# 
   262  0197                     	;# 
   263  0198                     	;# 
   264  0199                     	;# 
   265  019A                     	;# 
   266  019B                     	;# 
   267  019C                     	;# 
   268  020C                     	;# 
   269  020D                     	;# 
   270  020E                     	;# 
   271  020E                     	;# 
   272  020F                     	;# 
   273  020F                     	;# 
   274  0210                     	;# 
   275  0210                     	;# 
   276  0211                     	;# 
   277  0211                     	;# 
   278  0212                     	;# 
   279  0213                     	;# 
   280  0214                     	;# 
   281  0214                     	;# 
   282  0215                     	;# 
   283  0215                     	;# 
   284  0216                     	;# 
   285  0216                     	;# 
   286  0217                     	;# 
   287  0217                     	;# 
   288  0218                     	;# 
   289  0219                     	;# 
   290  021A                     	;# 
   291  021A                     	;# 
   292  021B                     	;# 
   293  021B                     	;# 
   294  021C                     	;# 
   295  021C                     	;# 
   296  021D                     	;# 
   297  021D                     	;# 
   298  021E                     	;# 
   299  021F                     	;# 
   300  028C                     	;# 
   301  028C                     	;# 
   302  028D                     	;# 
   303  028D                     	;# 
   304  028E                     	;# 
   305  028F                     	;# 
   306  0290                     	;# 
   307  0291                     	;# 
   308  0292                     	;# 
   309  0292                     	;# 
   310  0293                     	;# 
   311  0293                     	;# 
   312  0294                     	;# 
   313  0295                     	;# 
   314  0296                     	;# 
   315  0297                     	;# 
   316  0298                     	;# 
   317  0298                     	;# 
   318  0299                     	;# 
   319  0299                     	;# 
   320  029A                     	;# 
   321  029B                     	;# 
   322  029C                     	;# 
   323  029D                     	;# 
   324  029F                     	;# 
   325  030C                     	;# 
   326  030C                     	;# 
   327  030D                     	;# 
   328  030E                     	;# 
   329  030F                     	;# 
   330  0310                     	;# 
   331  0310                     	;# 
   332  0311                     	;# 
   333  0312                     	;# 
   334  0313                     	;# 
   335  0314                     	;# 
   336  0314                     	;# 
   337  0315                     	;# 
   338  0316                     	;# 
   339  0317                     	;# 
   340  0318                     	;# 
   341  0318                     	;# 
   342  0319                     	;# 
   343  031A                     	;# 
   344  031B                     	;# 
   345  031C                     	;# 
   346  031C                     	;# 
   347  031D                     	;# 
   348  031E                     	;# 
   349  031F                     	;# 
   350  038C                     	;# 
   351  038C                     	;# 
   352  038D                     	;# 
   353  038E                     	;# 
   354  0390                     	;# 
   355  0390                     	;# 
   356  0391                     	;# 
   357  0392                     	;# 
   358  048C                     	;# 
   359  048C                     	;# 
   360  048D                     	;# 
   361  048E                     	;# 
   362  048F                     	;# 
   363  048F                     	;# 
   364  0490                     	;# 
   365  0491                     	;# 
   366  0492                     	;# 
   367  0492                     	;# 
   368  0493                     	;# 
   369  0494                     	;# 
   370  0495                     	;# 
   371  0495                     	;# 
   372  0496                     	;# 
   373  0497                     	;# 
   374  0498                     	;# 
   375  0499                     	;# 
   376  049A                     	;# 
   377  049B                     	;# 
   378  049C                     	;# 
   379  049D                     	;# 
   380  050C                     	;# 
   381  050C                     	;# 
   382  050D                     	;# 
   383  050E                     	;# 
   384  050F                     	;# 
   385  050F                     	;# 
   386  0510                     	;# 
   387  0511                     	;# 
   388  0512                     	;# 
   389  0512                     	;# 
   390  0513                     	;# 
   391  0514                     	;# 
   392  0515                     	;# 
   393  0515                     	;# 
   394  0516                     	;# 
   395  0517                     	;# 
   396  0518                     	;# 
   397  0519                     	;# 
   398  051A                     	;# 
   399  051B                     	;# 
   400  051C                     	;# 
   401  051D                     	;# 
   402  058C                     	;# 
   403  058C                     	;# 
   404  058D                     	;# 
   405  058E                     	;# 
   406  058F                     	;# 
   407  058F                     	;# 
   408  0590                     	;# 
   409  0591                     	;# 
   410  0592                     	;# 
   411  0593                     	;# 
   412  059C                     	;# 
   413  059C                     	;# 
   414  059D                     	;# 
   415  059D                     	;# 
   416  059E                     	;# 
   417  059F                     	;# 
   418  060C                     	;# 
   419  060C                     	;# 
   420  060D                     	;# 
   421  060D                     	;# 
   422  060E                     	;# 
   423  060F                     	;# 
   424  0610                     	;# 
   425  0611                     	;# 
   426  0612                     	;# 
   427  0613                     	;# 
   428  0614                     	;# 
   429  0616                     	;# 
   430  0616                     	;# 
   431  0617                     	;# 
   432  0617                     	;# 
   433  0618                     	;# 
   434  0619                     	;# 
   435  061A                     	;# 
   436  061B                     	;# 
   437  061C                     	;# 
   438  061D                     	;# 
   439  061E                     	;# 
   440  068C                     	;# 
   441  068D                     	;# 
   442  068E                     	;# 
   443  068F                     	;# 
   444  0690                     	;# 
   445  0691                     	;# 
   446  0692                     	;# 
   447  0693                     	;# 
   448  0694                     	;# 
   449  070C                     	;# 
   450  070D                     	;# 
   451  070E                     	;# 
   452  070F                     	;# 
   453  0710                     	;# 
   454  0711                     	;# 
   455  0712                     	;# 
   456  0713                     	;# 
   457  0714                     	;# 
   458  0716                     	;# 
   459  0717                     	;# 
   460  0718                     	;# 
   461  0719                     	;# 
   462  071A                     	;# 
   463  071B                     	;# 
   464  071C                     	;# 
   465  071D                     	;# 
   466  071E                     	;# 
   467  0796                     	;# 
   468  0797                     	;# 
   469  0798                     	;# 
   470  0799                     	;# 
   471  079A                     	;# 
   472  079B                     	;# 
   473  079C                     	;# 
   474  079D                     	;# 
   475  080C                     	;# 
   476  080D                     	;# 
   477  080E                     	;# 
   478  080F                     	;# 
   479  0810                     	;# 
   480  0811                     	;# 
   481  0812                     	;# 
   482  0813                     	;# 
   483  0814                     	;# 
   484  081A                     	;# 
   485  081A                     	;# 
   486  081B                     	;# 
   487  081C                     	;# 
   488  081C                     	;# 
   489  081D                     	;# 
   490  081E                     	;# 
   491  081F                     	;# 
   492  088C                     	;# 
   493  088D                     	;# 
   494  088E                     	;# 
   495  088F                     	;# 
   496  0890                     	;# 
   497  0891                     	;# 
   498  0892                     	;# 
   499  0893                     	;# 
   500  0895                     	;# 
   501  0896                     	;# 
   502  0897                     	;# 
   503  0898                     	;# 
   504  0899                     	;# 
   505  089A                     	;# 
   506  089B                     	;# 
   507  090C                     	;# 
   508  090E                     	;# 
   509  090F                     	;# 
   510  091F                     	;# 
   511  098F                     	;# 
   512  098F                     	;# 
   513  0990                     	;# 
   514  0991                     	;# 
   515  0992                     	;# 
   516  0993                     	;# 
   517  0994                     	;# 
   518  0995                     	;# 
   519  0996                     	;# 
   520  0997                     	;# 
   521  0A19                     	;# 
   522  0A19                     	;# 
   523  0A1A                     	;# 
   524  0A1A                     	;# 
   525  0A1B                     	;# 
   526  0A1B                     	;# 
   527  0A1B                     	;# 
   528  0A1C                     	;# 
   529  0A1C                     	;# 
   530  0A1D                     	;# 
   531  0A1D                     	;# 
   532  0A1E                     	;# 
   533  0A1E                     	;# 
   534  0A1F                     	;# 
   535  0A1F                     	;# 
   536  0A1F                     	;# 
   537  1E0F                     	;# 
   538  1E10                     	;# 
   539  1E11                     	;# 
   540  1E12                     	;# 
   541  1E13                     	;# 
   542  1E14                     	;# 
   543  1E15                     	;# 
   544  1E16                     	;# 
   545  1E17                     	;# 
   546  1E18                     	;# 
   547  1E19                     	;# 
   548  1E1A                     	;# 
   549  1E1B                     	;# 
   550  1E1C                     	;# 
   551  1E1D                     	;# 
   552  1E1E                     	;# 
   553  1E1F                     	;# 
   554  1E20                     	;# 
   555  1E21                     	;# 
   556  1E22                     	;# 
   557  1E23                     	;# 
   558  1E24                     	;# 
   559  1E25                     	;# 
   560  1E26                     	;# 
   561  1E27                     	;# 
   562  1E28                     	;# 
   563  1E29                     	;# 
   564  1E2A                     	;# 
   565  1E2B                     	;# 
   566  1E2C                     	;# 
   567  1E2D                     	;# 
   568  1E2E                     	;# 
   569  1E2F                     	;# 
   570  1E30                     	;# 
   571  1E31                     	;# 
   572  1E32                     	;# 
   573  1E33                     	;# 
   574  1E34                     	;# 
   575  1E35                     	;# 
   576  1E36                     	;# 
   577  1E37                     	;# 
   578  1E8F                     	;# 
   579  1E90                     	;# 
   580  1E91                     	;# 
   581  1E92                     	;# 
   582  1E93                     	;# 
   583  1E94                     	;# 
   584  1E95                     	;# 
   585  1E96                     	;# 
   586  1E97                     	;# 
   587  1E9C                     	;# 
   588  1E9D                     	;# 
   589  1E9E                     	;# 
   590  1EA1                     	;# 
   591  1EA2                     	;# 
   592  1EA3                     	;# 
   593  1EA4                     	;# 
   594  1EA5                     	;# 
   595  1EA9                     	;# 
   596  1EAA                     	;# 
   597  1EAB                     	;# 
   598  1EAC                     	;# 
   599  1EB1                     	;# 
   600  1EB2                     	;# 
   601  1EB3                     	;# 
   602  1EB8                     	;# 
   603  1EB9                     	;# 
   604  1EBA                     	;# 
   605  1EBB                     	;# 
   606  1EBC                     	;# 
   607  1EBD                     	;# 
   608  1EBE                     	;# 
   609  1EC3                     	;# 
   610  1EC5                     	;# 
   611  1EC6                     	;# 
   612  1EC7                     	;# 
   613  1EC8                     	;# 
   614  1EC9                     	;# 
   615  1ECA                     	;# 
   616  1ECB                     	;# 
   617  1ECB                     	;# 
   618  1ECB                     	;# 
   619  1ECC                     	;# 
   620  1ECC                     	;# 
   621  1ECC                     	;# 
   622  1ECD                     	;# 
   623  1ECD                     	;# 
   624  1ECE                     	;# 
   625  1ECE                     	;# 
   626  1F10                     	;# 
   627  1F11                     	;# 
   628  1F12                     	;# 
   629  1F13                     	;# 
   630  1F14                     	;# 
   631  1F15                     	;# 
   632  1F16                     	;# 
   633  1F17                     	;# 
   634  1F18                     	;# 
   635  1F19                     	;# 
   636  1F1A                     	;# 
   637  1F1B                     	;# 
   638  1F1C                     	;# 
   639  1F1D                     	;# 
   640  1F1E                     	;# 
   641  1F1F                     	;# 
   642  1F20                     	;# 
   643  1F21                     	;# 
   644  1F22                     	;# 
   645  1F23                     	;# 
   646  1F24                     	;# 
   647  1F25                     	;# 
   648  1F26                     	;# 
   649  1F27                     	;# 
   650  1F38                     	;# 
   651  1F39                     	;# 
   652  1F3A                     	;# 
   653  1F3B                     	;# 
   654  1F3C                     	;# 
   655  1F3D                     	;# 
   656  1F3E                     	;# 
   657  1F3F                     	;# 
   658  1F43                     	;# 
   659  1F44                     	;# 
   660  1F45                     	;# 
   661  1F46                     	;# 
   662  1F47                     	;# 
   663  1F48                     	;# 
   664  1F49                     	;# 
   665  1F4A                     	;# 
   666  1F4E                     	;# 
   667  1F4F                     	;# 
   668  1F50                     	;# 
   669  1F51                     	;# 
   670  1F52                     	;# 
   671  1F53                     	;# 
   672  1F54                     	;# 
   673  1F55                     	;# 
   674  1F65                     	;# 
   675  1F66                     	;# 
   676  1F67                     	;# 
   677  1F68                     	;# 
   678  1F69                     	;# 
   679  1F6A                     	;# 
   680  1F6B                     	;# 
   681  1FE4                     	;# 
   682  1FE5                     	;# 
   683  1FE6                     	;# 
   684  1FE7                     	;# 
   685  1FE8                     	;# 
   686  1FE8                     	;# 
   687  1FE9                     	;# 
   688  1FEA                     	;# 
   689  1FEB                     	;# 
   690  1FED                     	;# 
   691  1FEE                     	;# 
   692  1FEF                     	;# 
   693  0000                     	;# 
   694  0001                     	;# 
   695  0002                     	;# 
   696  0003                     	;# 
   697  0004                     	;# 
   698  0005                     	;# 
   699  0006                     	;# 
   700  0007                     	;# 
   701  0008                     	;# 
   702  0009                     	;# 
   703  000A                     	;# 
   704  000B                     	;# 
   705  000C                     	;# 
   706  000D                     	;# 
   707  000E                     	;# 
   708  0010                     	;# 
   709  0012                     	;# 
   710  0013                     	;# 
   711  0014                     	;# 
   712  0016                     	;# 
   713  0018                     	;# 
   714  0019                     	;# 
   715  001A                     	;# 
   716  001C                     	;# 
   717  008C                     	;# 
   718  008C                     	;# 
   719  008D                     	;# 
   720  008E                     	;# 
   721  008E                     	;# 
   722  008F                     	;# 
   723  0090                     	;# 
   724  0090                     	;# 
   725  0091                     	;# 
   726  0092                     	;# 
   727  0092                     	;# 
   728  0093                     	;# 
   729  0094                     	;# 
   730  0094                     	;# 
   731  0095                     	;# 
   732  0096                     	;# 
   733  0096                     	;# 
   734  0097                     	;# 
   735  0098                     	;# 
   736  0099                     	;# 
   737  009A                     	;# 
   738  009B                     	;# 
   739  009B                     	;# 
   740  009C                     	;# 
   741  009D                     	;# 
   742  009D                     	;# 
   743  009E                     	;# 
   744  009F                     	;# 
   745  010C                     	;# 
   746  010C                     	;# 
   747  010D                     	;# 
   748  010E                     	;# 
   749  010F                     	;# 
   750  010F                     	;# 
   751  0110                     	;# 
   752  0111                     	;# 
   753  0112                     	;# 
   754  0113                     	;# 
   755  0114                     	;# 
   756  0115                     	;# 
   757  0116                     	;# 
   758  0117                     	;# 
   759  0118                     	;# 
   760  0119                     	;# 
   761  0119                     	;# 
   762  0119                     	;# 
   763  011A                     	;# 
   764  011A                     	;# 
   765  011A                     	;# 
   766  011B                     	;# 
   767  011B                     	;# 
   768  011B                     	;# 
   769  011B                     	;# 
   770  011B                     	;# 
   771  011C                     	;# 
   772  011C                     	;# 
   773  011C                     	;# 
   774  011D                     	;# 
   775  011D                     	;# 
   776  011D                     	;# 
   777  011E                     	;# 
   778  011E                     	;# 
   779  011E                     	;# 
   780  011F                     	;# 
   781  011F                     	;# 
   782  011F                     	;# 
   783  011F                     	;# 
   784  011F                     	;# 
   785  018C                     	;# 
   786  018D                     	;# 
   787  018E                     	;# 
   788  018F                     	;# 
   789  0190                     	;# 
   790  0191                     	;# 
   791  0192                     	;# 
   792  0196                     	;# 
   793  0197                     	;# 
   794  0198                     	;# 
   795  0199                     	;# 
   796  019A                     	;# 
   797  019B                     	;# 
   798  019C                     	;# 
   799  020C                     	;# 
   800  020D                     	;# 
   801  020E                     	;# 
   802  020E                     	;# 
   803  020F                     	;# 
   804  020F                     	;# 
   805  0210                     	;# 
   806  0210                     	;# 
   807  0211                     	;# 
   808  0211                     	;# 
   809  0212                     	;# 
   810  0213                     	;# 
   811  0214                     	;# 
   812  0214                     	;# 
   813  0215                     	;# 
   814  0215                     	;# 
   815  0216                     	;# 
   816  0216                     	;# 
   817  0217                     	;# 
   818  0217                     	;# 
   819  0218                     	;# 
   820  0219                     	;# 
   821  021A                     	;# 
   822  021A                     	;# 
   823  021B                     	;# 
   824  021B                     	;# 
   825  021C                     	;# 
   826  021C                     	;# 
   827  021D                     	;# 
   828  021D                     	;# 
   829  021E                     	;# 
   830  021F                     	;# 
   831  028C                     	;# 
   832  028C                     	;# 
   833  028D                     	;# 
   834  028D                     	;# 
   835  028E                     	;# 
   836  028F                     	;# 
   837  0290                     	;# 
   838  0291                     	;# 
   839  0292                     	;# 
   840  0292                     	;# 
   841  0293                     	;# 
   842  0293                     	;# 
   843  0294                     	;# 
   844  0295                     	;# 
   845  0296                     	;# 
   846  0297                     	;# 
   847  0298                     	;# 
   848  0298                     	;# 
   849  0299                     	;# 
   850  0299                     	;# 
   851  029A                     	;# 
   852  029B                     	;# 
   853  029C                     	;# 
   854  029D                     	;# 
   855  029F                     	;# 
   856  030C                     	;# 
   857  030C                     	;# 
   858  030D                     	;# 
   859  030E                     	;# 
   860  030F                     	;# 
   861  0310                     	;# 
   862  0310                     	;# 
   863  0311                     	;# 
   864  0312                     	;# 
   865  0313                     	;# 
   866  0314                     	;# 
   867  0314                     	;# 
   868  0315                     	;# 
   869  0316                     	;# 
   870  0317                     	;# 
   871  0318                     	;# 
   872  0318                     	;# 
   873  0319                     	;# 
   874  031A                     	;# 
   875  031B                     	;# 
   876  031C                     	;# 
   877  031C                     	;# 
   878  031D                     	;# 
   879  031E                     	;# 
   880  031F                     	;# 
   881  038C                     	;# 
   882  038C                     	;# 
   883  038D                     	;# 
   884  038E                     	;# 
   885  0390                     	;# 
   886  0390                     	;# 
   887  0391                     	;# 
   888  0392                     	;# 
   889  048C                     	;# 
   890  048C                     	;# 
   891  048D                     	;# 
   892  048E                     	;# 
   893  048F                     	;# 
   894  048F                     	;# 
   895  0490                     	;# 
   896  0491                     	;# 
   897  0492                     	;# 
   898  0492                     	;# 
   899  0493                     	;# 
   900  0494                     	;# 
   901  0495                     	;# 
   902  0495                     	;# 
   903  0496                     	;# 
   904  0497                     	;# 
   905  0498                     	;# 
   906  0499                     	;# 
   907  049A                     	;# 
   908  049B                     	;# 
   909  049C                     	;# 
   910  049D                     	;# 
   911  050C                     	;# 
   912  050C                     	;# 
   913  050D                     	;# 
   914  050E                     	;# 
   915  050F                     	;# 
   916  050F                     	;# 
   917  0510                     	;# 
   918  0511                     	;# 
   919  0512                     	;# 
   920  0512                     	;# 
   921  0513                     	;# 
   922  0514                     	;# 
   923  0515                     	;# 
   924  0515                     	;# 
   925  0516                     	;# 
   926  0517                     	;# 
   927  0518                     	;# 
   928  0519                     	;# 
   929  051A                     	;# 
   930  051B                     	;# 
   931  051C                     	;# 
   932  051D                     	;# 
   933  058C                     	;# 
   934  058C                     	;# 
   935  058D                     	;# 
   936  058E                     	;# 
   937  058F                     	;# 
   938  058F                     	;# 
   939  0590                     	;# 
   940  0591                     	;# 
   941  0592                     	;# 
   942  0593                     	;# 
   943  059C                     	;# 
   944  059C                     	;# 
   945  059D                     	;# 
   946  059D                     	;# 
   947  059E                     	;# 
   948  059F                     	;# 
   949  060C                     	;# 
   950  060C                     	;# 
   951  060D                     	;# 
   952  060D                     	;# 
   953  060E                     	;# 
   954  060F                     	;# 
   955  0610                     	;# 
   956  0611                     	;# 
   957  0612                     	;# 
   958  0613                     	;# 
   959  0614                     	;# 
   960  0616                     	;# 
   961  0616                     	;# 
   962  0617                     	;# 
   963  0617                     	;# 
   964  0618                     	;# 
   965  0619                     	;# 
   966  061A                     	;# 
   967  061B                     	;# 
   968  061C                     	;# 
   969  061D                     	;# 
   970  061E                     	;# 
   971  068C                     	;# 
   972  068D                     	;# 
   973  068E                     	;# 
   974  068F                     	;# 
   975  0690                     	;# 
   976  0691                     	;# 
   977  0692                     	;# 
   978  0693                     	;# 
   979  0694                     	;# 
   980  070C                     	;# 
   981  070D                     	;# 
   982  070E                     	;# 
   983  070F                     	;# 
   984  0710                     	;# 
   985  0711                     	;# 
   986  0712                     	;# 
   987  0713                     	;# 
   988  0714                     	;# 
   989  0716                     	;# 
   990  0717                     	;# 
   991  0718                     	;# 
   992  0719                     	;# 
   993  071A                     	;# 
   994  071B                     	;# 
   995  071C                     	;# 
   996  071D                     	;# 
   997  071E                     	;# 
   998  0796                     	;# 
   999  0797                     	;# 
  1000  0798                     	;# 
  1001  0799                     	;# 
  1002  079A                     	;# 
  1003  079B                     	;# 
  1004  079C                     	;# 
  1005  079D                     	;# 
  1006  080C                     	;# 
  1007  080D                     	;# 
  1008  080E                     	;# 
  1009  080F                     	;# 
  1010  0810                     	;# 
  1011  0811                     	;# 
  1012  0812                     	;# 
  1013  0813                     	;# 
  1014  0814                     	;# 
  1015  081A                     	;# 
  1016  081A                     	;# 
  1017  081B                     	;# 
  1018  081C                     	;# 
  1019  081C                     	;# 
  1020  081D                     	;# 
  1021  081E                     	;# 
  1022  081F                     	;# 
  1023  088C                     	;# 
  1024  088D                     	;# 
  1025  088E                     	;# 
  1026  088F                     	;# 
  1027  0890                     	;# 
  1028  0891                     	;# 
  1029  0892                     	;# 
  1030  0893                     	;# 
  1031  0895                     	;# 
  1032  0896                     	;# 
  1033  0897                     	;# 
  1034  0898                     	;# 
  1035  0899                     	;# 
  1036  089A                     	;# 
  1037  089B                     	;# 
  1038  090C                     	;# 
  1039  090E                     	;# 
  1040  090F                     	;# 
  1041  091F                     	;# 
  1042  098F                     	;# 
  1043  098F                     	;# 
  1044  0990                     	;# 
  1045  0991                     	;# 
  1046  0992                     	;# 
  1047  0993                     	;# 
  1048  0994                     	;# 
  1049  0995                     	;# 
  1050  0996                     	;# 
  1051  0997                     	;# 
  1052  0A19                     	;# 
  1053  0A19                     	;# 
  1054  0A1A                     	;# 
  1055  0A1A                     	;# 
  1056  0A1B                     	;# 
  1057  0A1B                     	;# 
  1058  0A1B                     	;# 
  1059  0A1C                     	;# 
  1060  0A1C                     	;# 
  1061  0A1D                     	;# 
  1062  0A1D                     	;# 
  1063  0A1E                     	;# 
  1064  0A1E                     	;# 
  1065  0A1F                     	;# 
  1066  0A1F                     	;# 
  1067  0A1F                     	;# 
  1068  1E0F                     	;# 
  1069  1E10                     	;# 
  1070  1E11                     	;# 
  1071  1E12                     	;# 
  1072  1E13                     	;# 
  1073  1E14                     	;# 
  1074  1E15                     	;# 
  1075  1E16                     	;# 
  1076  1E17                     	;# 
  1077  1E18                     	;# 
  1078  1E19                     	;# 
  1079  1E1A                     	;# 
  1080  1E1B                     	;# 
  1081  1E1C                     	;# 
  1082  1E1D                     	;# 
  1083  1E1E                     	;# 
  1084  1E1F                     	;# 
  1085  1E20                     	;# 
  1086  1E21                     	;# 
  1087  1E22                     	;# 
  1088  1E23                     	;# 
  1089  1E24                     	;# 
  1090  1E25                     	;# 
  1091  1E26                     	;# 
  1092  1E27                     	;# 
  1093  1E28                     	;# 
  1094  1E29                     	;# 
  1095  1E2A                     	;# 
  1096  1E2B                     	;# 
  1097  1E2C                     	;# 
  1098  1E2D                     	;# 
  1099  1E2E                     	;# 
  1100  1E2F                     	;# 
  1101  1E30                     	;# 
  1102  1E31                     	;# 
  1103  1E32                     	;# 
  1104  1E33                     	;# 
  1105  1E34                     	;# 
  1106  1E35                     	;# 
  1107  1E36                     	;# 
  1108  1E37                     	;# 
  1109  1E8F                     	;# 
  1110  1E90                     	;# 
  1111  1E91                     	;# 
  1112  1E92                     	;# 
  1113  1E93                     	;# 
  1114  1E94                     	;# 
  1115  1E95                     	;# 
  1116  1E96                     	;# 
  1117  1E97                     	;# 
  1118  1E9C                     	;# 
  1119  1E9D                     	;# 
  1120  1E9E                     	;# 
  1121  1EA1                     	;# 
  1122  1EA2                     	;# 
  1123  1EA3                     	;# 
  1124  1EA4                     	;# 
  1125  1EA5                     	;# 
  1126  1EA9                     	;# 
  1127  1EAA                     	;# 
  1128  1EAB                     	;# 
  1129  1EAC                     	;# 
  1130  1EB1                     	;# 
  1131  1EB2                     	;# 
  1132  1EB3                     	;# 
  1133  1EB8                     	;# 
  1134  1EB9                     	;# 
  1135  1EBA                     	;# 
  1136  1EBB                     	;# 
  1137  1EBC                     	;# 
  1138  1EBD                     	;# 
  1139  1EBE                     	;# 
  1140  1EC3                     	;# 
  1141  1EC5                     	;# 
  1142  1EC6                     	;# 
  1143  1EC7                     	;# 
  1144  1EC8                     	;# 
  1145  1EC9                     	;# 
  1146  1ECA                     	;# 
  1147  1ECB                     	;# 
  1148  1ECB                     	;# 
  1149  1ECB                     	;# 
  1150  1ECC                     	;# 
  1151  1ECC                     	;# 
  1152  1ECC                     	;# 
  1153  1ECD                     	;# 
  1154  1ECD                     	;# 
  1155  1ECE                     	;# 
  1156  1ECE                     	;# 
  1157  1F10                     	;# 
  1158  1F11                     	;# 
  1159  1F12                     	;# 
  1160  1F13                     	;# 
  1161  1F14                     	;# 
  1162  1F15                     	;# 
  1163  1F16                     	;# 
  1164  1F17                     	;# 
  1165  1F18                     	;# 
  1166  1F19                     	;# 
  1167  1F1A                     	;# 
  1168  1F1B                     	;# 
  1169  1F1C                     	;# 
  1170  1F1D                     	;# 
  1171  1F1E                     	;# 
  1172  1F1F                     	;# 
  1173  1F20                     	;# 
  1174  1F21                     	;# 
  1175  1F22                     	;# 
  1176  1F23                     	;# 
  1177  1F24                     	;# 
  1178  1F25                     	;# 
  1179  1F26                     	;# 
  1180  1F27                     	;# 
  1181  1F38                     	;# 
  1182  1F39                     	;# 
  1183  1F3A                     	;# 
  1184  1F3B                     	;# 
  1185  1F3C                     	;# 
  1186  1F3D                     	;# 
  1187  1F3E                     	;# 
  1188  1F3F                     	;# 
  1189  1F43                     	;# 
  1190  1F44                     	;# 
  1191  1F45                     	;# 
  1192  1F46                     	;# 
  1193  1F47                     	;# 
  1194  1F48                     	;# 
  1195  1F49                     	;# 
  1196  1F4A                     	;# 
  1197  1F4E                     	;# 
  1198  1F4F                     	;# 
  1199  1F50                     	;# 
  1200  1F51                     	;# 
  1201  1F52                     	;# 
  1202  1F53                     	;# 
  1203  1F54                     	;# 
  1204  1F55                     	;# 
  1205  1F65                     	;# 
  1206  1F66                     	;# 
  1207  1F67                     	;# 
  1208  1F68                     	;# 
  1209  1F69                     	;# 
  1210  1F6A                     	;# 
  1211  1F6B                     	;# 
  1212  1FE4                     	;# 
  1213  1FE5                     	;# 
  1214  1FE6                     	;# 
  1215  1FE7                     	;# 
  1216  1FE8                     	;# 
  1217  1FE8                     	;# 
  1218  1FE9                     	;# 
  1219  1FEA                     	;# 
  1220  1FEB                     	;# 
  1221  1FED                     	;# 
  1222  1FEE                     	;# 
  1223  1FEF                     	;# 
  1224  0000                     	;# 
  1225  0001                     	;# 
  1226  0002                     	;# 
  1227  0003                     	;# 
  1228  0004                     	;# 
  1229  0005                     	;# 
  1230  0006                     	;# 
  1231  0007                     	;# 
  1232  0008                     	;# 
  1233  0009                     	;# 
  1234  000A                     	;# 
  1235  000B                     	;# 
  1236  000C                     	;# 
  1237  000D                     	;# 
  1238  000E                     	;# 
  1239  0010                     	;# 
  1240  0012                     	;# 
  1241  0013                     	;# 
  1242  0014                     	;# 
  1243  0016                     	;# 
  1244  0018                     	;# 
  1245  0019                     	;# 
  1246  001A                     	;# 
  1247  001C                     	;# 
  1248  008C                     	;# 
  1249  008C                     	;# 
  1250  008D                     	;# 
  1251  008E                     	;# 
  1252  008E                     	;# 
  1253  008F                     	;# 
  1254  0090                     	;# 
  1255  0090                     	;# 
  1256  0091                     	;# 
  1257  0092                     	;# 
  1258  0092                     	;# 
  1259  0093                     	;# 
  1260  0094                     	;# 
  1261  0094                     	;# 
  1262  0095                     	;# 
  1263  0096                     	;# 
  1264  0096                     	;# 
  1265  0097                     	;# 
  1266  0098                     	;# 
  1267  0099                     	;# 
  1268  009A                     	;# 
  1269  009B                     	;# 
  1270  009B                     	;# 
  1271  009C                     	;# 
  1272  009D                     	;# 
  1273  009D                     	;# 
  1274  009E                     	;# 
  1275  009F                     	;# 
  1276  010C                     	;# 
  1277  010C                     	;# 
  1278  010D                     	;# 
  1279  010E                     	;# 
  1280  010F                     	;# 
  1281  010F                     	;# 
  1282  0110                     	;# 
  1283  0111                     	;# 
  1284  0112                     	;# 
  1285  0113                     	;# 
  1286  0114                     	;# 
  1287  0115                     	;# 
  1288  0116                     	;# 
  1289  0117                     	;# 
  1290  0118                     	;# 
  1291  0119                     	;# 
  1292  0119                     	;# 
  1293  0119                     	;# 
  1294  011A                     	;# 
  1295  011A                     	;# 
  1296  011A                     	;# 
  1297  011B                     	;# 
  1298  011B                     	;# 
  1299  011B                     	;# 
  1300  011B                     	;# 
  1301  011B                     	;# 
  1302  011C                     	;# 
  1303  011C                     	;# 
  1304  011C                     	;# 
  1305  011D                     	;# 
  1306  011D                     	;# 
  1307  011D                     	;# 
  1308  011E                     	;# 
  1309  011E                     	;# 
  1310  011E                     	;# 
  1311  011F                     	;# 
  1312  011F                     	;# 
  1313  011F                     	;# 
  1314  011F                     	;# 
  1315  011F                     	;# 
  1316  018C                     	;# 
  1317  018D                     	;# 
  1318  018E                     	;# 
  1319  018F                     	;# 
  1320  0190                     	;# 
  1321  0191                     	;# 
  1322  0192                     	;# 
  1323  0196                     	;# 
  1324  0197                     	;# 
  1325  0198                     	;# 
  1326  0199                     	;# 
  1327  019A                     	;# 
  1328  019B                     	;# 
  1329  019C                     	;# 
  1330  020C                     	;# 
  1331  020D                     	;# 
  1332  020E                     	;# 
  1333  020E                     	;# 
  1334  020F                     	;# 
  1335  020F                     	;# 
  1336  0210                     	;# 
  1337  0210                     	;# 
  1338  0211                     	;# 
  1339  0211                     	;# 
  1340  0212                     	;# 
  1341  0213                     	;# 
  1342  0214                     	;# 
  1343  0214                     	;# 
  1344  0215                     	;# 
  1345  0215                     	;# 
  1346  0216                     	;# 
  1347  0216                     	;# 
  1348  0217                     	;# 
  1349  0217                     	;# 
  1350  0218                     	;# 
  1351  0219                     	;# 
  1352  021A                     	;# 
  1353  021A                     	;# 
  1354  021B                     	;# 
  1355  021B                     	;# 
  1356  021C                     	;# 
  1357  021C                     	;# 
  1358  021D                     	;# 
  1359  021D                     	;# 
  1360  021E                     	;# 
  1361  021F                     	;# 
  1362  028C                     	;# 
  1363  028C                     	;# 
  1364  028D                     	;# 
  1365  028D                     	;# 
  1366  028E                     	;# 
  1367  028F                     	;# 
  1368  0290                     	;# 
  1369  0291                     	;# 
  1370  0292                     	;# 
  1371  0292                     	;# 
  1372  0293                     	;# 
  1373  0293                     	;# 
  1374  0294                     	;# 
  1375  0295                     	;# 
  1376  0296                     	;# 
  1377  0297                     	;# 
  1378  0298                     	;# 
  1379  0298                     	;# 
  1380  0299                     	;# 
  1381  0299                     	;# 
  1382  029A                     	;# 
  1383  029B                     	;# 
  1384  029C                     	;# 
  1385  029D                     	;# 
  1386  029F                     	;# 
  1387  030C                     	;# 
  1388  030C                     	;# 
  1389  030D                     	;# 
  1390  030E                     	;# 
  1391  030F                     	;# 
  1392  0310                     	;# 
  1393  0310                     	;# 
  1394  0311                     	;# 
  1395  0312                     	;# 
  1396  0313                     	;# 
  1397  0314                     	;# 
  1398  0314                     	;# 
  1399  0315                     	;# 
  1400  0316                     	;# 
  1401  0317                     	;# 
  1402  0318                     	;# 
  1403  0318                     	;# 
  1404  0319                     	;# 
  1405  031A                     	;# 
  1406  031B                     	;# 
  1407  031C                     	;# 
  1408  031C                     	;# 
  1409  031D                     	;# 
  1410  031E                     	;# 
  1411  031F                     	;# 
  1412  038C                     	;# 
  1413  038C                     	;# 
  1414  038D                     	;# 
  1415  038E                     	;# 
  1416  0390                     	;# 
  1417  0390                     	;# 
  1418  0391                     	;# 
  1419  0392                     	;# 
  1420  048C                     	;# 
  1421  048C                     	;# 
  1422  048D                     	;# 
  1423  048E                     	;# 
  1424  048F                     	;# 
  1425  048F                     	;# 
  1426  0490                     	;# 
  1427  0491                     	;# 
  1428  0492                     	;# 
  1429  0492                     	;# 
  1430  0493                     	;# 
  1431  0494                     	;# 
  1432  0495                     	;# 
  1433  0495                     	;# 
  1434  0496                     	;# 
  1435  0497                     	;# 
  1436  0498                     	;# 
  1437  0499                     	;# 
  1438  049A                     	;# 
  1439  049B                     	;# 
  1440  049C                     	;# 
  1441  049D                     	;# 
  1442  050C                     	;# 
  1443  050C                     	;# 
  1444  050D                     	;# 
  1445  050E                     	;# 
  1446  050F                     	;# 
  1447  050F                     	;# 
  1448  0510                     	;# 
  1449  0511                     	;# 
  1450  0512                     	;# 
  1451  0512                     	;# 
  1452  0513                     	;# 
  1453  0514                     	;# 
  1454  0515                     	;# 
  1455  0515                     	;# 
  1456  0516                     	;# 
  1457  0517                     	;# 
  1458  0518                     	;# 
  1459  0519                     	;# 
  1460  051A                     	;# 
  1461  051B                     	;# 
  1462  051C                     	;# 
  1463  051D                     	;# 
  1464  058C                     	;# 
  1465  058C                     	;# 
  1466  058D                     	;# 
  1467  058E                     	;# 
  1468  058F                     	;# 
  1469  058F                     	;# 
  1470  0590                     	;# 
  1471  0591                     	;# 
  1472  0592                     	;# 
  1473  0593                     	;# 
  1474  059C                     	;# 
  1475  059C                     	;# 
  1476  059D                     	;# 
  1477  059D                     	;# 
  1478  059E                     	;# 
  1479  059F                     	;# 
  1480  060C                     	;# 
  1481  060C                     	;# 
  1482  060D                     	;# 
  1483  060D                     	;# 
  1484  060E                     	;# 
  1485  060F                     	;# 
  1486  0610                     	;# 
  1487  0611                     	;# 
  1488  0612                     	;# 
  1489  0613                     	;# 
  1490  0614                     	;# 
  1491  0616                     	;# 
  1492  0616                     	;# 
  1493  0617                     	;# 
  1494  0617                     	;# 
  1495  0618                     	;# 
  1496  0619                     	;# 
  1497  061A                     	;# 
  1498  061B                     	;# 
  1499  061C                     	;# 
  1500  061D                     	;# 
  1501  061E                     	;# 
  1502  068C                     	;# 
  1503  068D                     	;# 
  1504  068E                     	;# 
  1505  068F                     	;# 
  1506  0690                     	;# 
  1507  0691                     	;# 
  1508  0692                     	;# 
  1509  0693                     	;# 
  1510  0694                     	;# 
  1511  070C                     	;# 
  1512  070D                     	;# 
  1513  070E                     	;# 
  1514  070F                     	;# 
  1515  0710                     	;# 
  1516  0711                     	;# 
  1517  0712                     	;# 
  1518  0713                     	;# 
  1519  0714                     	;# 
  1520  0716                     	;# 
  1521  0717                     	;# 
  1522  0718                     	;# 
  1523  0719                     	;# 
  1524  071A                     	;# 
  1525  071B                     	;# 
  1526  071C                     	;# 
  1527  071D                     	;# 
  1528  071E                     	;# 
  1529  0796                     	;# 
  1530  0797                     	;# 
  1531  0798                     	;# 
  1532  0799                     	;# 
  1533  079A                     	;# 
  1534  079B                     	;# 
  1535  079C                     	;# 
  1536  079D                     	;# 
  1537  080C                     	;# 
  1538  080D                     	;# 
  1539  080E                     	;# 
  1540  080F                     	;# 
  1541  0810                     	;# 
  1542  0811                     	;# 
  1543  0812                     	;# 
  1544  0813                     	;# 
  1545  0814                     	;# 
  1546  081A                     	;# 
  1547  081A                     	;# 
  1548  081B                     	;# 
  1549  081C                     	;# 
  1550  081C                     	;# 
  1551  081D                     	;# 
  1552  081E                     	;# 
  1553  081F                     	;# 
  1554  088C                     	;# 
  1555  088D                     	;# 
  1556  088E                     	;# 
  1557  088F                     	;# 
  1558  0890                     	;# 
  1559  0891                     	;# 
  1560  0892                     	;# 
  1561  0893                     	;# 
  1562  0895                     	;# 
  1563  0896                     	;# 
  1564  0897                     	;# 
  1565  0898                     	;# 
  1566  0899                     	;# 
  1567  089A                     	;# 
  1568  089B                     	;# 
  1569  090C                     	;# 
  1570  090E                     	;# 
  1571  090F                     	;# 
  1572  091F                     	;# 
  1573  098F                     	;# 
  1574  098F                     	;# 
  1575  0990                     	;# 
  1576  0991                     	;# 
  1577  0992                     	;# 
  1578  0993                     	;# 
  1579  0994                     	;# 
  1580  0995                     	;# 
  1581  0996                     	;# 
  1582  0997                     	;# 
  1583  0A19                     	;# 
  1584  0A19                     	;# 
  1585  0A1A                     	;# 
  1586  0A1A                     	;# 
  1587  0A1B                     	;# 
  1588  0A1B                     	;# 
  1589  0A1B                     	;# 
  1590  0A1C                     	;# 
  1591  0A1C                     	;# 
  1592  0A1D                     	;# 
  1593  0A1D                     	;# 
  1594  0A1E                     	;# 
  1595  0A1E                     	;# 
  1596  0A1F                     	;# 
  1597  0A1F                     	;# 
  1598  0A1F                     	;# 
  1599  1E0F                     	;# 
  1600  1E10                     	;# 
  1601  1E11                     	;# 
  1602  1E12                     	;# 
  1603  1E13                     	;# 
  1604  1E14                     	;# 
  1605  1E15                     	;# 
  1606  1E16                     	;# 
  1607  1E17                     	;# 
  1608  1E18                     	;# 
  1609  1E19                     	;# 
  1610  1E1A                     	;# 
  1611  1E1B                     	;# 
  1612  1E1C                     	;# 
  1613  1E1D                     	;# 
  1614  1E1E                     	;# 
  1615  1E1F                     	;# 
  1616  1E20                     	;# 
  1617  1E21                     	;# 
  1618  1E22                     	;# 
  1619  1E23                     	;# 
  1620  1E24                     	;# 
  1621  1E25                     	;# 
  1622  1E26                     	;# 
  1623  1E27                     	;# 
  1624  1E28                     	;# 
  1625  1E29                     	;# 
  1626  1E2A                     	;# 
  1627  1E2B                     	;# 
  1628  1E2C                     	;# 
  1629  1E2D                     	;# 
  1630  1E2E                     	;# 
  1631  1E2F                     	;# 
  1632  1E30                     	;# 
  1633  1E31                     	;# 
  1634  1E32                     	;# 
  1635  1E33                     	;# 
  1636  1E34                     	;# 
  1637  1E35                     	;# 
  1638  1E36                     	;# 
  1639  1E37                     	;# 
  1640  1E8F                     	;# 
  1641  1E90                     	;# 
  1642  1E91                     	;# 
  1643  1E92                     	;# 
  1644  1E93                     	;# 
  1645  1E94                     	;# 
  1646  1E95                     	;# 
  1647  1E96                     	;# 
  1648  1E97                     	;# 
  1649  1E9C                     	;# 
  1650  1E9D                     	;# 
  1651  1E9E                     	;# 
  1652  1EA1                     	;# 
  1653  1EA2                     	;# 
  1654  1EA3                     	;# 
  1655  1EA4                     	;# 
  1656  1EA5                     	;# 
  1657  1EA9                     	;# 
  1658  1EAA                     	;# 
  1659  1EAB                     	;# 
  1660  1EAC                     	;# 
  1661  1EB1                     	;# 
  1662  1EB2                     	;# 
  1663  1EB3                     	;# 
  1664  1EB8                     	;# 
  1665  1EB9                     	;# 
  1666  1EBA                     	;# 
  1667  1EBB                     	;# 
  1668  1EBC                     	;# 
  1669  1EBD                     	;# 
  1670  1EBE                     	;# 
  1671  1EC3                     	;# 
  1672  1EC5                     	;# 
  1673  1EC6                     	;# 
  1674  1EC7                     	;# 
  1675  1EC8                     	;# 
  1676  1EC9                     	;# 
  1677  1ECA                     	;# 
  1678  1ECB                     	;# 
  1679  1ECB                     	;# 
  1680  1ECB                     	;# 
  1681  1ECC                     	;# 
  1682  1ECC                     	;# 
  1683  1ECC                     	;# 
  1684  1ECD                     	;# 
  1685  1ECD                     	;# 
  1686  1ECE                     	;# 
  1687  1ECE                     	;# 
  1688  1F10                     	;# 
  1689  1F11                     	;# 
  1690  1F12                     	;# 
  1691  1F13                     	;# 
  1692  1F14                     	;# 
  1693  1F15                     	;# 
  1694  1F16                     	;# 
  1695  1F17                     	;# 
  1696  1F18                     	;# 
  1697  1F19                     	;# 
  1698  1F1A                     	;# 
  1699  1F1B                     	;# 
  1700  1F1C                     	;# 
  1701  1F1D                     	;# 
  1702  1F1E                     	;# 
  1703  1F1F                     	;# 
  1704  1F20                     	;# 
  1705  1F21                     	;# 
  1706  1F22                     	;# 
  1707  1F23                     	;# 
  1708  1F24                     	;# 
  1709  1F25                     	;# 
  1710  1F26                     	;# 
  1711  1F27                     	;# 
  1712  1F38                     	;# 
  1713  1F39                     	;# 
  1714  1F3A                     	;# 
  1715  1F3B                     	;# 
  1716  1F3C                     	;# 
  1717  1F3D                     	;# 
  1718  1F3E                     	;# 
  1719  1F3F                     	;# 
  1720  1F43                     	;# 
  1721  1F44                     	;# 
  1722  1F45                     	;# 
  1723  1F46                     	;# 
  1724  1F47                     	;# 
  1725  1F48                     	;# 
  1726  1F49                     	;# 
  1727  1F4A                     	;# 
  1728  1F4E                     	;# 
  1729  1F4F                     	;# 
  1730  1F50                     	;# 
  1731  1F51                     	;# 
  1732  1F52                     	;# 
  1733  1F53                     	;# 
  1734  1F54                     	;# 
  1735  1F55                     	;# 
  1736  1F65                     	;# 
  1737  1F66                     	;# 
  1738  1F67                     	;# 
  1739  1F68                     	;# 
  1740  1F69                     	;# 
  1741  1F6A                     	;# 
  1742  1F6B                     	;# 
  1743  1FE4                     	;# 
  1744  1FE5                     	;# 
  1745  1FE6                     	;# 
  1746  1FE7                     	;# 
  1747  1FE8                     	;# 
  1748  1FE8                     	;# 
  1749  1FE9                     	;# 
  1750  1FEA                     	;# 
  1751  1FEB                     	;# 
  1752  1FED                     	;# 
  1753  1FEE                     	;# 
  1754  1FEF                     	;# 
  1755  0000                     	;# 
  1756  0001                     	;# 
  1757  0002                     	;# 
  1758  0003                     	;# 
  1759  0004                     	;# 
  1760  0005                     	;# 
  1761  0006                     	;# 
  1762  0007                     	;# 
  1763  0008                     	;# 
  1764  0009                     	;# 
  1765  000A                     	;# 
  1766  000B                     	;# 
  1767  000C                     	;# 
  1768  000D                     	;# 
  1769  000E                     	;# 
  1770  0010                     	;# 
  1771  0012                     	;# 
  1772  0013                     	;# 
  1773  0014                     	;# 
  1774  0016                     	;# 
  1775  0018                     	;# 
  1776  0019                     	;# 
  1777  001A                     	;# 
  1778  001C                     	;# 
  1779  008C                     	;# 
  1780  008C                     	;# 
  1781  008D                     	;# 
  1782  008E                     	;# 
  1783  008E                     	;# 
  1784  008F                     	;# 
  1785  0090                     	;# 
  1786  0090                     	;# 
  1787  0091                     	;# 
  1788  0092                     	;# 
  1789  0092                     	;# 
  1790  0093                     	;# 
  1791  0094                     	;# 
  1792  0094                     	;# 
  1793  0095                     	;# 
  1794  0096                     	;# 
  1795  0096                     	;# 
  1796  0097                     	;# 
  1797  0098                     	;# 
  1798  0099                     	;# 
  1799  009A                     	;# 
  1800  009B                     	;# 
  1801  009B                     	;# 
  1802  009C                     	;# 
  1803  009D                     	;# 
  1804  009D                     	;# 
  1805  009E                     	;# 
  1806  009F                     	;# 
  1807  010C                     	;# 
  1808  010C                     	;# 
  1809  010D                     	;# 
  1810  010E                     	;# 
  1811  010F                     	;# 
  1812  010F                     	;# 
  1813  0110                     	;# 
  1814  0111                     	;# 
  1815  0112                     	;# 
  1816  0113                     	;# 
  1817  0114                     	;# 
  1818  0115                     	;# 
  1819  0116                     	;# 
  1820  0117                     	;# 
  1821  0118                     	;# 
  1822  0119                     	;# 
  1823  0119                     	;# 
  1824  0119                     	;# 
  1825  011A                     	;# 
  1826  011A                     	;# 
  1827  011A                     	;# 
  1828  011B                     	;# 
  1829  011B                     	;# 
  1830  011B                     	;# 
  1831  011B                     	;# 
  1832  011B                     	;# 
  1833  011C                     	;# 
  1834  011C                     	;# 
  1835  011C                     	;# 
  1836  011D                     	;# 
  1837  011D                     	;# 
  1838  011D                     	;# 
  1839  011E                     	;# 
  1840  011E                     	;# 
  1841  011E                     	;# 
  1842  011F                     	;# 
  1843  011F                     	;# 
  1844  011F                     	;# 
  1845  011F                     	;# 
  1846  011F                     	;# 
  1847  018C                     	;# 
  1848  018D                     	;# 
  1849  018E                     	;# 
  1850  018F                     	;# 
  1851  0190                     	;# 
  1852  0191                     	;# 
  1853  0192                     	;# 
  1854  0196                     	;# 
  1855  0197                     	;# 
  1856  0198                     	;# 
  1857  0199                     	;# 
  1858  019A                     	;# 
  1859  019B                     	;# 
  1860  019C                     	;# 
  1861  020C                     	;# 
  1862  020D                     	;# 
  1863  020E                     	;# 
  1864  020E                     	;# 
  1865  020F                     	;# 
  1866  020F                     	;# 
  1867  0210                     	;# 
  1868  0210                     	;# 
  1869  0211                     	;# 
  1870  0211                     	;# 
  1871  0212                     	;# 
  1872  0213                     	;# 
  1873  0214                     	;# 
  1874  0214                     	;# 
  1875  0215                     	;# 
  1876  0215                     	;# 
  1877  0216                     	;# 
  1878  0216                     	;# 
  1879  0217                     	;# 
  1880  0217                     	;# 
  1881  0218                     	;# 
  1882  0219                     	;# 
  1883  021A                     	;# 
  1884  021A                     	;# 
  1885  021B                     	;# 
  1886  021B                     	;# 
  1887  021C                     	;# 
  1888  021C                     	;# 
  1889  021D                     	;# 
  1890  021D                     	;# 
  1891  021E                     	;# 
  1892  021F                     	;# 
  1893  028C                     	;# 
  1894  028C                     	;# 
  1895  028D                     	;# 
  1896  028D                     	;# 
  1897  028E                     	;# 
  1898  028F                     	;# 
  1899  0290                     	;# 
  1900  0291                     	;# 
  1901  0292                     	;# 
  1902  0292                     	;# 
  1903  0293                     	;# 
  1904  0293                     	;# 
  1905  0294                     	;# 
  1906  0295                     	;# 
  1907  0296                     	;# 
  1908  0297                     	;# 
  1909  0298                     	;# 
  1910  0298                     	;# 
  1911  0299                     	;# 
  1912  0299                     	;# 
  1913  029A                     	;# 
  1914  029B                     	;# 
  1915  029C                     	;# 
  1916  029D                     	;# 
  1917  029F                     	;# 
  1918  030C                     	;# 
  1919  030C                     	;# 
  1920  030D                     	;# 
  1921  030E                     	;# 
  1922  030F                     	;# 
  1923  0310                     	;# 
  1924  0310                     	;# 
  1925  0311                     	;# 
  1926  0312                     	;# 
  1927  0313                     	;# 
  1928  0314                     	;# 
  1929  0314                     	;# 
  1930  0315                     	;# 
  1931  0316                     	;# 
  1932  0317                     	;# 
  1933  0318                     	;# 
  1934  0318                     	;# 
  1935  0319                     	;# 
  1936  031A                     	;# 
  1937  031B                     	;# 
  1938  031C                     	;# 
  1939  031C                     	;# 
  1940  031D                     	;# 
  1941  031E                     	;# 
  1942  031F                     	;# 
  1943  038C                     	;# 
  1944  038C                     	;# 
  1945  038D                     	;# 
  1946  038E                     	;# 
  1947  0390                     	;# 
  1948  0390                     	;# 
  1949  0391                     	;# 
  1950  0392                     	;# 
  1951  048C                     	;# 
  1952  048C                     	;# 
  1953  048D                     	;# 
  1954  048E                     	;# 
  1955  048F                     	;# 
  1956  048F                     	;# 
  1957  0490                     	;# 
  1958  0491                     	;# 
  1959  0492                     	;# 
  1960  0492                     	;# 
  1961  0493                     	;# 
  1962  0494                     	;# 
  1963  0495                     	;# 
  1964  0495                     	;# 
  1965  0496                     	;# 
  1966  0497                     	;# 
  1967  0498                     	;# 
  1968  0499                     	;# 
  1969  049A                     	;# 
  1970  049B                     	;# 
  1971  049C                     	;# 
  1972  049D                     	;# 
  1973  050C                     	;# 
  1974  050C                     	;# 
  1975  050D                     	;# 
  1976  050E                     	;# 
  1977  050F                     	;# 
  1978  050F                     	;# 
  1979  0510                     	;# 
  1980  0511                     	;# 
  1981  0512                     	;# 
  1982  0512                     	;# 
  1983  0513                     	;# 
  1984  0514                     	;# 
  1985  0515                     	;# 
  1986  0515                     	;# 
  1987  0516                     	;# 
  1988  0517                     	;# 
  1989  0518                     	;# 
  1990  0519                     	;# 
  1991  051A                     	;# 
  1992  051B                     	;# 
  1993  051C                     	;# 
  1994  051D                     	;# 
  1995  058C                     	;# 
  1996  058C                     	;# 
  1997  058D                     	;# 
  1998  058E                     	;# 
  1999  058F                     	;# 
  2000  058F                     	;# 
  2001  0590                     	;# 
  2002  0591                     	;# 
  2003  0592                     	;# 
  2004  0593                     	;# 
  2005  059C                     	;# 
  2006  059C                     	;# 
  2007  059D                     	;# 
  2008  059D                     	;# 
  2009  059E                     	;# 
  2010  059F                     	;# 
  2011  060C                     	;# 
  2012  060C                     	;# 
  2013  060D                     	;# 
  2014  060D                     	;# 
  2015  060E                     	;# 
  2016  060F                     	;# 
  2017  0610                     	;# 
  2018  0611                     	;# 
  2019  0612                     	;# 
  2020  0613                     	;# 
  2021  0614                     	;# 
  2022  0616                     	;# 
  2023  0616                     	;# 
  2024  0617                     	;# 
  2025  0617                     	;# 
  2026  0618                     	;# 
  2027  0619                     	;# 
  2028  061A                     	;# 
  2029  061B                     	;# 
  2030  061C                     	;# 
  2031  061D                     	;# 
  2032  061E                     	;# 
  2033  068C                     	;# 
  2034  068D                     	;# 
  2035  068E                     	;# 
  2036  068F                     	;# 
  2037  0690                     	;# 
  2038  0691                     	;# 
  2039  0692                     	;# 
  2040  0693                     	;# 
  2041  0694                     	;# 
  2042  070C                     	;# 
  2043  070D                     	;# 
  2044  070E                     	;# 
  2045  070F                     	;# 
  2046  0710                     	;# 
  2047  0711                     	;# 
  2048  0712                     	;# 
  2049  0713                     	;# 
  2050  0714                     	;# 
  2051  0716                     	;# 
  2052  0717                     	;# 
  2053  0718                     	;# 
  2054  0719                     	;# 
  2055  071A                     	;# 
  2056  071B                     	;# 
  2057  071C                     	;# 
  2058  071D                     	;# 
  2059  071E                     	;# 
  2060  0796                     	;# 
  2061  0797                     	;# 
  2062  0798                     	;# 
  2063  0799                     	;# 
  2064  079A                     	;# 
  2065  079B                     	;# 
  2066  079C                     	;# 
  2067  079D                     	;# 
  2068  080C                     	;# 
  2069  080D                     	;# 
  2070  080E                     	;# 
  2071  080F                     	;# 
  2072  0810                     	;# 
  2073  0811                     	;# 
  2074  0812                     	;# 
  2075  0813                     	;# 
  2076  0814                     	;# 
  2077  081A                     	;# 
  2078  081A                     	;# 
  2079  081B                     	;# 
  2080  081C                     	;# 
  2081  081C                     	;# 
  2082  081D                     	;# 
  2083  081E                     	;# 
  2084  081F                     	;# 
  2085  088C                     	;# 
  2086  088D                     	;# 
  2087  088E                     	;# 
  2088  088F                     	;# 
  2089  0890                     	;# 
  2090  0891                     	;# 
  2091  0892                     	;# 
  2092  0893                     	;# 
  2093  0895                     	;# 
  2094  0896                     	;# 
  2095  0897                     	;# 
  2096  0898                     	;# 
  2097  0899                     	;# 
  2098  089A                     	;# 
  2099  089B                     	;# 
  2100  090C                     	;# 
  2101  090E                     	;# 
  2102  090F                     	;# 
  2103  091F                     	;# 
  2104  098F                     	;# 
  2105  098F                     	;# 
  2106  0990                     	;# 
  2107  0991                     	;# 
  2108  0992                     	;# 
  2109  0993                     	;# 
  2110  0994                     	;# 
  2111  0995                     	;# 
  2112  0996                     	;# 
  2113  0997                     	;# 
  2114  0A19                     	;# 
  2115  0A19                     	;# 
  2116  0A1A                     	;# 
  2117  0A1A                     	;# 
  2118  0A1B                     	;# 
  2119  0A1B                     	;# 
  2120  0A1B                     	;# 
  2121  0A1C                     	;# 
  2122  0A1C                     	;# 
  2123  0A1D                     	;# 
  2124  0A1D                     	;# 
  2125  0A1E                     	;# 
  2126  0A1E                     	;# 
  2127  0A1F                     	;# 
  2128  0A1F                     	;# 
  2129  0A1F                     	;# 
  2130  1E0F                     	;# 
  2131  1E10                     	;# 
  2132  1E11                     	;# 
  2133  1E12                     	;# 
  2134  1E13                     	;# 
  2135  1E14                     	;# 
  2136  1E15                     	;# 
  2137  1E16                     	;# 
  2138  1E17                     	;# 
  2139  1E18                     	;# 
  2140  1E19                     	;# 
  2141  1E1A                     	;# 
  2142  1E1B                     	;# 
  2143  1E1C                     	;# 
  2144  1E1D                     	;# 
  2145  1E1E                     	;# 
  2146  1E1F                     	;# 
  2147  1E20                     	;# 
  2148  1E21                     	;# 
  2149  1E22                     	;# 
  2150  1E23                     	;# 
  2151  1E24                     	;# 
  2152  1E25                     	;# 
  2153  1E26                     	;# 
  2154  1E27                     	;# 
  2155  1E28                     	;# 
  2156  1E29                     	;# 
  2157  1E2A                     	;# 
  2158  1E2B                     	;# 
  2159  1E2C                     	;# 
  2160  1E2D                     	;# 
  2161  1E2E                     	;# 
  2162  1E2F                     	;# 
  2163  1E30                     	;# 
  2164  1E31                     	;# 
  2165  1E32                     	;# 
  2166  1E33                     	;# 
  2167  1E34                     	;# 
  2168  1E35                     	;# 
  2169  1E36                     	;# 
  2170  1E37                     	;# 
  2171  1E8F                     	;# 
  2172  1E90                     	;# 
  2173  1E91                     	;# 
  2174  1E92                     	;# 
  2175  1E93                     	;# 
  2176  1E94                     	;# 
  2177  1E95                     	;# 
  2178  1E96                     	;# 
  2179  1E97                     	;# 
  2180  1E9C                     	;# 
  2181  1E9D                     	;# 
  2182  1E9E                     	;# 
  2183  1EA1                     	;# 
  2184  1EA2                     	;# 
  2185  1EA3                     	;# 
  2186  1EA4                     	;# 
  2187  1EA5                     	;# 
  2188  1EA9                     	;# 
  2189  1EAA                     	;# 
  2190  1EAB                     	;# 
  2191  1EAC                     	;# 
  2192  1EB1                     	;# 
  2193  1EB2                     	;# 
  2194  1EB3                     	;# 
  2195  1EB8                     	;# 
  2196  1EB9                     	;# 
  2197  1EBA                     	;# 
  2198  1EBB                     	;# 
  2199  1EBC                     	;# 
  2200  1EBD                     	;# 
  2201  1EBE                     	;# 
  2202  1EC3                     	;# 
  2203  1EC5                     	;# 
  2204  1EC6                     	;# 
  2205  1EC7                     	;# 
  2206  1EC8                     	;# 
  2207  1EC9                     	;# 
  2208  1ECA                     	;# 
  2209  1ECB                     	;# 
  2210  1ECB                     	;# 
  2211  1ECB                     	;# 
  2212  1ECC                     	;# 
  2213  1ECC                     	;# 
  2214  1ECC                     	;# 
  2215  1ECD                     	;# 
  2216  1ECD                     	;# 
  2217  1ECE                     	;# 
  2218  1ECE                     	;# 
  2219  1F10                     	;# 
  2220  1F11                     	;# 
  2221  1F12                     	;# 
  2222  1F13                     	;# 
  2223  1F14                     	;# 
  2224  1F15                     	;# 
  2225  1F16                     	;# 
  2226  1F17                     	;# 
  2227  1F18                     	;# 
  2228  1F19                     	;# 
  2229  1F1A                     	;# 
  2230  1F1B                     	;# 
  2231  1F1C                     	;# 
  2232  1F1D                     	;# 
  2233  1F1E                     	;# 
  2234  1F1F                     	;# 
  2235  1F20                     	;# 
  2236  1F21                     	;# 
  2237  1F22                     	;# 
  2238  1F23                     	;# 
  2239  1F24                     	;# 
  2240  1F25                     	;# 
  2241  1F26                     	;# 
  2242  1F27                     	;# 
  2243  1F38                     	;# 
  2244  1F39                     	;# 
  2245  1F3A                     	;# 
  2246  1F3B                     	;# 
  2247  1F3C                     	;# 
  2248  1F3D                     	;# 
  2249  1F3E                     	;# 
  2250  1F3F                     	;# 
  2251  1F43                     	;# 
  2252  1F44                     	;# 
  2253  1F45                     	;# 
  2254  1F46                     	;# 
  2255  1F47                     	;# 
  2256  1F48                     	;# 
  2257  1F49                     	;# 
  2258  1F4A                     	;# 
  2259  1F4E                     	;# 
  2260  1F4F                     	;# 
  2261  1F50                     	;# 
  2262  1F51                     	;# 
  2263  1F52                     	;# 
  2264  1F53                     	;# 
  2265  1F54                     	;# 
  2266  1F55                     	;# 
  2267  1F65                     	;# 
  2268  1F66                     	;# 
  2269  1F67                     	;# 
  2270  1F68                     	;# 
  2271  1F69                     	;# 
  2272  1F6A                     	;# 
  2273  1F6B                     	;# 
  2274  1FE4                     	;# 
  2275  1FE5                     	;# 
  2276  1FE6                     	;# 
  2277  1FE7                     	;# 
  2278  1FE8                     	;# 
  2279  1FE8                     	;# 
  2280  1FE9                     	;# 
  2281  1FEA                     	;# 
  2282  1FEB                     	;# 
  2283  1FED                     	;# 
  2284  1FEE                     	;# 
  2285  1FEF                     	;# 
  2286  0000                     	;# 
  2287  0001                     	;# 
  2288  0002                     	;# 
  2289  0003                     	;# 
  2290  0004                     	;# 
  2291  0005                     	;# 
  2292  0006                     	;# 
  2293  0007                     	;# 
  2294  0008                     	;# 
  2295  0009                     	;# 
  2296  000A                     	;# 
  2297  000B                     	;# 
  2298  000C                     	;# 
  2299  000D                     	;# 
  2300  000E                     	;# 
  2301  0010                     	;# 
  2302  0012                     	;# 
  2303  0013                     	;# 
  2304  0014                     	;# 
  2305  0016                     	;# 
  2306  0018                     	;# 
  2307  0019                     	;# 
  2308  001A                     	;# 
  2309  001C                     	;# 
  2310  008C                     	;# 
  2311  008C                     	;# 
  2312  008D                     	;# 
  2313  008E                     	;# 
  2314  008E                     	;# 
  2315  008F                     	;# 
  2316  0090                     	;# 
  2317  0090                     	;# 
  2318  0091                     	;# 
  2319  0092                     	;# 
  2320  0092                     	;# 
  2321  0093                     	;# 
  2322  0094                     	;# 
  2323  0094                     	;# 
  2324  0095                     	;# 
  2325  0096                     	;# 
  2326  0096                     	;# 
  2327  0097                     	;# 
  2328  0098                     	;# 
  2329  0099                     	;# 
  2330  009A                     	;# 
  2331  009B                     	;# 
  2332  009B                     	;# 
  2333  009C                     	;# 
  2334  009D                     	;# 
  2335  009D                     	;# 
  2336  009E                     	;# 
  2337  009F                     	;# 
  2338  010C                     	;# 
  2339  010C                     	;# 
  2340  010D                     	;# 
  2341  010E                     	;# 
  2342  010F                     	;# 
  2343  010F                     	;# 
  2344  0110                     	;# 
  2345  0111                     	;# 
  2346  0112                     	;# 
  2347  0113                     	;# 
  2348  0114                     	;# 
  2349  0115                     	;# 
  2350  0116                     	;# 
  2351  0117                     	;# 
  2352  0118                     	;# 
  2353  0119                     	;# 
  2354  0119                     	;# 
  2355  0119                     	;# 
  2356  011A                     	;# 
  2357  011A                     	;# 
  2358  011A                     	;# 
  2359  011B                     	;# 
  2360  011B                     	;# 
  2361  011B                     	;# 
  2362  011B                     	;# 
  2363  011B                     	;# 
  2364  011C                     	;# 
  2365  011C                     	;# 
  2366  011C                     	;# 
  2367  011D                     	;# 
  2368  011D                     	;# 
  2369  011D                     	;# 
  2370  011E                     	;# 
  2371  011E                     	;# 
  2372  011E                     	;# 
  2373  011F                     	;# 
  2374  011F                     	;# 
  2375  011F                     	;# 
  2376  011F                     	;# 
  2377  011F                     	;# 
  2378  018C                     	;# 
  2379  018D                     	;# 
  2380  018E                     	;# 
  2381  018F                     	;# 
  2382  0190                     	;# 
  2383  0191                     	;# 
  2384  0192                     	;# 
  2385  0196                     	;# 
  2386  0197                     	;# 
  2387  0198                     	;# 
  2388  0199                     	;# 
  2389  019A                     	;# 
  2390  019B                     	;# 
  2391  019C                     	;# 
  2392  020C                     	;# 
  2393  020D                     	;# 
  2394  020E                     	;# 
  2395  020E                     	;# 
  2396  020F                     	;# 
  2397  020F                     	;# 
  2398  0210                     	;# 
  2399  0210                     	;# 
  2400  0211                     	;# 
  2401  0211                     	;# 
  2402  0212                     	;# 
  2403  0213                     	;# 
  2404  0214                     	;# 
  2405  0214                     	;# 
  2406  0215                     	;# 
  2407  0215                     	;# 
  2408  0216                     	;# 
  2409  0216                     	;# 
  2410  0217                     	;# 
  2411  0217                     	;# 
  2412  0218                     	;# 
  2413  0219                     	;# 
  2414  021A                     	;# 
  2415  021A                     	;# 
  2416  021B                     	;# 
  2417  021B                     	;# 
  2418  021C                     	;# 
  2419  021C                     	;# 
  2420  021D                     	;# 
  2421  021D                     	;# 
  2422  021E                     	;# 
  2423  021F                     	;# 
  2424  028C                     	;# 
  2425  028C                     	;# 
  2426  028D                     	;# 
  2427  028D                     	;# 
  2428  028E                     	;# 
  2429  028F                     	;# 
  2430  0290                     	;# 
  2431  0291                     	;# 
  2432  0292                     	;# 
  2433  0292                     	;# 
  2434  0293                     	;# 
  2435  0293                     	;# 
  2436  0294                     	;# 
  2437  0295                     	;# 
  2438  0296                     	;# 
  2439  0297                     	;# 
  2440  0298                     	;# 
  2441  0298                     	;# 
  2442  0299                     	;# 
  2443  0299                     	;# 
  2444  029A                     	;# 
  2445  029B                     	;# 
  2446  029C                     	;# 
  2447  029D                     	;# 
  2448  029F                     	;# 
  2449  030C                     	;# 
  2450  030C                     	;# 
  2451  030D                     	;# 
  2452  030E                     	;# 
  2453  030F                     	;# 
  2454  0310                     	;# 
  2455  0310                     	;# 
  2456  0311                     	;# 
  2457  0312                     	;# 
  2458  0313                     	;# 
  2459  0314                     	;# 
  2460  0314                     	;# 
  2461  0315                     	;# 
  2462  0316                     	;# 
  2463  0317                     	;# 
  2464  0318                     	;# 
  2465  0318                     	;# 
  2466  0319                     	;# 
  2467  031A                     	;# 
  2468  031B                     	;# 
  2469  031C                     	;# 
  2470  031C                     	;# 
  2471  031D                     	;# 
  2472  031E                     	;# 
  2473  031F                     	;# 
  2474  038C                     	;# 
  2475  038C                     	;# 
  2476  038D                     	;# 
  2477  038E                     	;# 
  2478  0390                     	;# 
  2479  0390                     	;# 
  2480  0391                     	;# 
  2481  0392                     	;# 
  2482  048C                     	;# 
  2483  048C                     	;# 
  2484  048D                     	;# 
  2485  048E                     	;# 
  2486  048F                     	;# 
  2487  048F                     	;# 
  2488  0490                     	;# 
  2489  0491                     	;# 
  2490  0492                     	;# 
  2491  0492                     	;# 
  2492  0493                     	;# 
  2493  0494                     	;# 
  2494  0495                     	;# 
  2495  0495                     	;# 
  2496  0496                     	;# 
  2497  0497                     	;# 
  2498  0498                     	;# 
  2499  0499                     	;# 
  2500  049A                     	;# 
  2501  049B                     	;# 
  2502  049C                     	;# 
  2503  049D                     	;# 
  2504  050C                     	;# 
  2505  050C                     	;# 
  2506  050D                     	;# 
  2507  050E                     	;# 
  2508  050F                     	;# 
  2509  050F                     	;# 
  2510  0510                     	;# 
  2511  0511                     	;# 
  2512  0512                     	;# 
  2513  0512                     	;# 
  2514  0513                     	;# 
  2515  0514                     	;# 
  2516  0515                     	;# 
  2517  0515                     	;# 
  2518  0516                     	;# 
  2519  0517                     	;# 
  2520  0518                     	;# 
  2521  0519                     	;# 
  2522  051A                     	;# 
  2523  051B                     	;# 
  2524  051C                     	;# 
  2525  051D                     	;# 
  2526  058C                     	;# 
  2527  058C                     	;# 
  2528  058D                     	;# 
  2529  058E                     	;# 
  2530  058F                     	;# 
  2531  058F                     	;# 
  2532  0590                     	;# 
  2533  0591                     	;# 
  2534  0592                     	;# 
  2535  0593                     	;# 
  2536  059C                     	;# 
  2537  059C                     	;# 
  2538  059D                     	;# 
  2539  059D                     	;# 
  2540  059E                     	;# 
  2541  059F                     	;# 
  2542  060C                     	;# 
  2543  060C                     	;# 
  2544  060D                     	;# 
  2545  060D                     	;# 
  2546  060E                     	;# 
  2547  060F                     	;# 
  2548  0610                     	;# 
  2549  0611                     	;# 
  2550  0612                     	;# 
  2551  0613                     	;# 
  2552  0614                     	;# 
  2553  0616                     	;# 
  2554  0616                     	;# 
  2555  0617                     	;# 
  2556  0617                     	;# 
  2557  0618                     	;# 
  2558  0619                     	;# 
  2559  061A                     	;# 
  2560  061B                     	;# 
  2561  061C                     	;# 
  2562  061D                     	;# 
  2563  061E                     	;# 
  2564  068C                     	;# 
  2565  068D                     	;# 
  2566  068E                     	;# 
  2567  068F                     	;# 
  2568  0690                     	;# 
  2569  0691                     	;# 
  2570  0692                     	;# 
  2571  0693                     	;# 
  2572  0694                     	;# 
  2573  070C                     	;# 
  2574  070D                     	;# 
  2575  070E                     	;# 
  2576  070F                     	;# 
  2577  0710                     	;# 
  2578  0711                     	;# 
  2579  0712                     	;# 
  2580  0713                     	;# 
  2581  0714                     	;# 
  2582  0716                     	;# 
  2583  0717                     	;# 
  2584  0718                     	;# 
  2585  0719                     	;# 
  2586  071A                     	;# 
  2587  071B                     	;# 
  2588  071C                     	;# 
  2589  071D                     	;# 
  2590  071E                     	;# 
  2591  0796                     	;# 
  2592  0797                     	;# 
  2593  0798                     	;# 
  2594  0799                     	;# 
  2595  079A                     	;# 
  2596  079B                     	;# 
  2597  079C                     	;# 
  2598  079D                     	;# 
  2599  080C                     	;# 
  2600  080D                     	;# 
  2601  080E                     	;# 
  2602  080F                     	;# 
  2603  0810                     	;# 
  2604  0811                     	;# 
  2605  0812                     	;# 
  2606  0813                     	;# 
  2607  0814                     	;# 
  2608  081A                     	;# 
  2609  081A                     	;# 
  2610  081B                     	;# 
  2611  081C                     	;# 
  2612  081C                     	;# 
  2613  081D                     	;# 
  2614  081E                     	;# 
  2615  081F                     	;# 
  2616  088C                     	;# 
  2617  088D                     	;# 
  2618  088E                     	;# 
  2619  088F                     	;# 
  2620  0890                     	;# 
  2621  0891                     	;# 
  2622  0892                     	;# 
  2623  0893                     	;# 
  2624  0895                     	;# 
  2625  0896                     	;# 
  2626  0897                     	;# 
  2627  0898                     	;# 
  2628  0899                     	;# 
  2629  089A                     	;# 
  2630  089B                     	;# 
  2631  090C                     	;# 
  2632  090E                     	;# 
  2633  090F                     	;# 
  2634  091F                     	;# 
  2635  098F                     	;# 
  2636  098F                     	;# 
  2637  0990                     	;# 
  2638  0991                     	;# 
  2639  0992                     	;# 
  2640  0993                     	;# 
  2641  0994                     	;# 
  2642  0995                     	;# 
  2643  0996                     	;# 
  2644  0997                     	;# 
  2645  0A19                     	;# 
  2646  0A19                     	;# 
  2647  0A1A                     	;# 
  2648  0A1A                     	;# 
  2649  0A1B                     	;# 
  2650  0A1B                     	;# 
  2651  0A1B                     	;# 
  2652  0A1C                     	;# 
  2653  0A1C                     	;# 
  2654  0A1D                     	;# 
  2655  0A1D                     	;# 
  2656  0A1E                     	;# 
  2657  0A1E                     	;# 
  2658  0A1F                     	;# 
  2659  0A1F                     	;# 
  2660  0A1F                     	;# 
  2661  1E0F                     	;# 
  2662  1E10                     	;# 
  2663  1E11                     	;# 
  2664  1E12                     	;# 
  2665  1E13                     	;# 
  2666  1E14                     	;# 
  2667  1E15                     	;# 
  2668  1E16                     	;# 
  2669  1E17                     	;# 
  2670  1E18                     	;# 
  2671  1E19                     	;# 
  2672  1E1A                     	;# 
  2673  1E1B                     	;# 
  2674  1E1C                     	;# 
  2675  1E1D                     	;# 
  2676  1E1E                     	;# 
  2677  1E1F                     	;# 
  2678  1E20                     	;# 
  2679  1E21                     	;# 
  2680  1E22                     	;# 
  2681  1E23                     	;# 
  2682  1E24                     	;# 
  2683  1E25                     	;# 
  2684  1E26                     	;# 
  2685  1E27                     	;# 
  2686  1E28                     	;# 
  2687  1E29                     	;# 
  2688  1E2A                     	;# 
  2689  1E2B                     	;# 
  2690  1E2C                     	;# 
  2691  1E2D                     	;# 
  2692  1E2E                     	;# 
  2693  1E2F                     	;# 
  2694  1E30                     	;# 
  2695  1E31                     	;# 
  2696  1E32                     	;# 
  2697  1E33                     	;# 
  2698  1E34                     	;# 
  2699  1E35                     	;# 
  2700  1E36                     	;# 
  2701  1E37                     	;# 
  2702  1E8F                     	;# 
  2703  1E90                     	;# 
  2704  1E91                     	;# 
  2705  1E92                     	;# 
  2706  1E93                     	;# 
  2707  1E94                     	;# 
  2708  1E95                     	;# 
  2709  1E96                     	;# 
  2710  1E97                     	;# 
  2711  1E9C                     	;# 
  2712  1E9D                     	;# 
  2713  1E9E                     	;# 
  2714  1EA1                     	;# 
  2715  1EA2                     	;# 
  2716  1EA3                     	;# 
  2717  1EA4                     	;# 
  2718  1EA5                     	;# 
  2719  1EA9                     	;# 
  2720  1EAA                     	;# 
  2721  1EAB                     	;# 
  2722  1EAC                     	;# 
  2723  1EB1                     	;# 
  2724  1EB2                     	;# 
  2725  1EB3                     	;# 
  2726  1EB8                     	;# 
  2727  1EB9                     	;# 
  2728  1EBA                     	;# 
  2729  1EBB                     	;# 
  2730  1EBC                     	;# 
  2731  1EBD                     	;# 
  2732  1EBE                     	;# 
  2733  1EC3                     	;# 
  2734  1EC5                     	;# 
  2735  1EC6                     	;# 
  2736  1EC7                     	;# 
  2737  1EC8                     	;# 
  2738  1EC9                     	;# 
  2739  1ECA                     	;# 
  2740  1ECB                     	;# 
  2741  1ECB                     	;# 
  2742  1ECB                     	;# 
  2743  1ECC                     	;# 
  2744  1ECC                     	;# 
  2745  1ECC                     	;# 
  2746  1ECD                     	;# 
  2747  1ECD                     	;# 
  2748  1ECE                     	;# 
  2749  1ECE                     	;# 
  2750  1F10                     	;# 
  2751  1F11                     	;# 
  2752  1F12                     	;# 
  2753  1F13                     	;# 
  2754  1F14                     	;# 
  2755  1F15                     	;# 
  2756  1F16                     	;# 
  2757  1F17                     	;# 
  2758  1F18                     	;# 
  2759  1F19                     	;# 
  2760  1F1A                     	;# 
  2761  1F1B                     	;# 
  2762  1F1C                     	;# 
  2763  1F1D                     	;# 
  2764  1F1E                     	;# 
  2765  1F1F                     	;# 
  2766  1F20                     	;# 
  2767  1F21                     	;# 
  2768  1F22                     	;# 
  2769  1F23                     	;# 
  2770  1F24                     	;# 
  2771  1F25                     	;# 
  2772  1F26                     	;# 
  2773  1F27                     	;# 
  2774  1F38                     	;# 
  2775  1F39                     	;# 
  2776  1F3A                     	;# 
  2777  1F3B                     	;# 
  2778  1F3C                     	;# 
  2779  1F3D                     	;# 
  2780  1F3E                     	;# 
  2781  1F3F                     	;# 
  2782  1F43                     	;# 
  2783  1F44                     	;# 
  2784  1F45                     	;# 
  2785  1F46                     	;# 
  2786  1F47                     	;# 
  2787  1F48                     	;# 
  2788  1F49                     	;# 
  2789  1F4A                     	;# 
  2790  1F4E                     	;# 
  2791  1F4F                     	;# 
  2792  1F50                     	;# 
  2793  1F51                     	;# 
  2794  1F52                     	;# 
  2795  1F53                     	;# 
  2796  1F54                     	;# 
  2797  1F55                     	;# 
  2798  1F65                     	;# 
  2799  1F66                     	;# 
  2800  1F67                     	;# 
  2801  1F68                     	;# 
  2802  1F69                     	;# 
  2803  1F6A                     	;# 
  2804  1F6B                     	;# 
  2805  1FE4                     	;# 
  2806  1FE5                     	;# 
  2807  1FE6                     	;# 
  2808  1FE7                     	;# 
  2809  1FE8                     	;# 
  2810  1FE8                     	;# 
  2811  1FE9                     	;# 
  2812  1FEA                     	;# 
  2813  1FEB                     	;# 
  2814  1FED                     	;# 
  2815  1FEE                     	;# 
  2816  1FEF                     	;# 
  2817  0000                     	;# 
  2818  0001                     	;# 
  2819  0002                     	;# 
  2820  0003                     	;# 
  2821  0004                     	;# 
  2822  0005                     	;# 
  2823  0006                     	;# 
  2824  0007                     	;# 
  2825  0008                     	;# 
  2826  0009                     	;# 
  2827  000A                     	;# 
  2828  000B                     	;# 
  2829  000C                     	;# 
  2830  000D                     	;# 
  2831  000E                     	;# 
  2832  0010                     	;# 
  2833  0012                     	;# 
  2834  0013                     	;# 
  2835  0014                     	;# 
  2836  0016                     	;# 
  2837  0018                     	;# 
  2838  0019                     	;# 
  2839  001A                     	;# 
  2840  001C                     	;# 
  2841  008C                     	;# 
  2842  008C                     	;# 
  2843  008D                     	;# 
  2844  008E                     	;# 
  2845  008E                     	;# 
  2846  008F                     	;# 
  2847  0090                     	;# 
  2848  0090                     	;# 
  2849  0091                     	;# 
  2850  0092                     	;# 
  2851  0092                     	;# 
  2852  0093                     	;# 
  2853  0094                     	;# 
  2854  0094                     	;# 
  2855  0095                     	;# 
  2856  0096                     	;# 
  2857  0096                     	;# 
  2858  0097                     	;# 
  2859  0098                     	;# 
  2860  0099                     	;# 
  2861  009A                     	;# 
  2862  009B                     	;# 
  2863  009B                     	;# 
  2864  009C                     	;# 
  2865  009D                     	;# 
  2866  009D                     	;# 
  2867  009E                     	;# 
  2868  009F                     	;# 
  2869  010C                     	;# 
  2870  010C                     	;# 
  2871  010D                     	;# 
  2872  010E                     	;# 
  2873  010F                     	;# 
  2874  010F                     	;# 
  2875  0110                     	;# 
  2876  0111                     	;# 
  2877  0112                     	;# 
  2878  0113                     	;# 
  2879  0114                     	;# 
  2880  0115                     	;# 
  2881  0116                     	;# 
  2882  0117                     	;# 
  2883  0118                     	;# 
  2884  0119                     	;# 
  2885  0119                     	;# 
  2886  0119                     	;# 
  2887  011A                     	;# 
  2888  011A                     	;# 
  2889  011A                     	;# 
  2890  011B                     	;# 
  2891  011B                     	;# 
  2892  011B                     	;# 
  2893  011B                     	;# 
  2894  011B                     	;# 
  2895  011C                     	;# 
  2896  011C                     	;# 
  2897  011C                     	;# 
  2898  011D                     	;# 
  2899  011D                     	;# 
  2900  011D                     	;# 
  2901  011E                     	;# 
  2902  011E                     	;# 
  2903  011E                     	;# 
  2904  011F                     	;# 
  2905  011F                     	;# 
  2906  011F                     	;# 
  2907  011F                     	;# 
  2908  011F                     	;# 
  2909  018C                     	;# 
  2910  018D                     	;# 
  2911  018E                     	;# 
  2912  018F                     	;# 
  2913  0190                     	;# 
  2914  0191                     	;# 
  2915  0192                     	;# 
  2916  0196                     	;# 
  2917  0197                     	;# 
  2918  0198                     	;# 
  2919  0199                     	;# 
  2920  019A                     	;# 
  2921  019B                     	;# 
  2922  019C                     	;# 
  2923  020C                     	;# 
  2924  020D                     	;# 
  2925  020E                     	;# 
  2926  020E                     	;# 
  2927  020F                     	;# 
  2928  020F                     	;# 
  2929  0210                     	;# 
  2930  0210                     	;# 
  2931  0211                     	;# 
  2932  0211                     	;# 
  2933  0212                     	;# 
  2934  0213                     	;# 
  2935  0214                     	;# 
  2936  0214                     	;# 
  2937  0215                     	;# 
  2938  0215                     	;# 
  2939  0216                     	;# 
  2940  0216                     	;# 
  2941  0217                     	;# 
  2942  0217                     	;# 
  2943  0218                     	;# 
  2944  0219                     	;# 
  2945  021A                     	;# 
  2946  021A                     	;# 
  2947  021B                     	;# 
  2948  021B                     	;# 
  2949  021C                     	;# 
  2950  021C                     	;# 
  2951  021D                     	;# 
  2952  021D                     	;# 
  2953  021E                     	;# 
  2954  021F                     	;# 
  2955  028C                     	;# 
  2956  028C                     	;# 
  2957  028D                     	;# 
  2958  028D                     	;# 
  2959  028E                     	;# 
  2960  028F                     	;# 
  2961  0290                     	;# 
  2962  0291                     	;# 
  2963  0292                     	;# 
  2964  0292                     	;# 
  2965  0293                     	;# 
  2966  0293                     	;# 
  2967  0294                     	;# 
  2968  0295                     	;# 
  2969  0296                     	;# 
  2970  0297                     	;# 
  2971  0298                     	;# 
  2972  0298                     	;# 
  2973  0299                     	;# 
  2974  0299                     	;# 
  2975  029A                     	;# 
  2976  029B                     	;# 
  2977  029C                     	;# 
  2978  029D                     	;# 
  2979  029F                     	;# 
  2980  030C                     	;# 
  2981  030C                     	;# 
  2982  030D                     	;# 
  2983  030E                     	;# 
  2984  030F                     	;# 
  2985  0310                     	;# 
  2986  0310                     	;# 
  2987  0311                     	;# 
  2988  0312                     	;# 
  2989  0313                     	;# 
  2990  0314                     	;# 
  2991  0314                     	;# 
  2992  0315                     	;# 
  2993  0316                     	;# 
  2994  0317                     	;# 
  2995  0318                     	;# 
  2996  0318                     	;# 
  2997  0319                     	;# 
  2998  031A                     	;# 
  2999  031B                     	;# 
  3000  031C                     	;# 
  3001  031C                     	;# 
  3002  031D                     	;# 
  3003  031E                     	;# 
  3004  031F                     	;# 
  3005  038C                     	;# 
  3006  038C                     	;# 
  3007  038D                     	;# 
  3008  038E                     	;# 
  3009  0390                     	;# 
  3010  0390                     	;# 
  3011  0391                     	;# 
  3012  0392                     	;# 
  3013  048C                     	;# 
  3014  048C                     	;# 
  3015  048D                     	;# 
  3016  048E                     	;# 
  3017  048F                     	;# 
  3018  048F                     	;# 
  3019  0490                     	;# 
  3020  0491                     	;# 
  3021  0492                     	;# 
  3022  0492                     	;# 
  3023  0493                     	;# 
  3024  0494                     	;# 
  3025  0495                     	;# 
  3026  0495                     	;# 
  3027  0496                     	;# 
  3028  0497                     	;# 
  3029  0498                     	;# 
  3030  0499                     	;# 
  3031  049A                     	;# 
  3032  049B                     	;# 
  3033  049C                     	;# 
  3034  049D                     	;# 
  3035  050C                     	;# 
  3036  050C                     	;# 
  3037  050D                     	;# 
  3038  050E                     	;# 
  3039  050F                     	;# 
  3040  050F                     	;# 
  3041  0510                     	;# 
  3042  0511                     	;# 
  3043  0512                     	;# 
  3044  0512                     	;# 
  3045  0513                     	;# 
  3046  0514                     	;# 
  3047  0515                     	;# 
  3048  0515                     	;# 
  3049  0516                     	;# 
  3050  0517                     	;# 
  3051  0518                     	;# 
  3052  0519                     	;# 
  3053  051A                     	;# 
  3054  051B                     	;# 
  3055  051C                     	;# 
  3056  051D                     	;# 
  3057  058C                     	;# 
  3058  058C                     	;# 
  3059  058D                     	;# 
  3060  058E                     	;# 
  3061  058F                     	;# 
  3062  058F                     	;# 
  3063  0590                     	;# 
  3064  0591                     	;# 
  3065  0592                     	;# 
  3066  0593                     	;# 
  3067  059C                     	;# 
  3068  059C                     	;# 
  3069  059D                     	;# 
  3070  059D                     	;# 
  3071  059E                     	;# 
  3072  059F                     	;# 
  3073  060C                     	;# 
  3074  060C                     	;# 
  3075  060D                     	;# 
  3076  060D                     	;# 
  3077  060E                     	;# 
  3078  060F                     	;# 
  3079  0610                     	;# 
  3080  0611                     	;# 
  3081  0612                     	;# 
  3082  0613                     	;# 
  3083  0614                     	;# 
  3084  0616                     	;# 
  3085  0616                     	;# 
  3086  0617                     	;# 
  3087  0617                     	;# 
  3088  0618                     	;# 
  3089  0619                     	;# 
  3090  061A                     	;# 
  3091  061B                     	;# 
  3092  061C                     	;# 
  3093  061D                     	;# 
  3094  061E                     	;# 
  3095  068C                     	;# 
  3096  068D                     	;# 
  3097  068E                     	;# 
  3098  068F                     	;# 
  3099  0690                     	;# 
  3100  0691                     	;# 
  3101  0692                     	;# 
  3102  0693                     	;# 
  3103  0694                     	;# 
  3104  070C                     	;# 
  3105  070D                     	;# 
  3106  070E                     	;# 
  3107  070F                     	;# 
  3108  0710                     	;# 
  3109  0711                     	;# 
  3110  0712                     	;# 
  3111  0713                     	;# 
  3112  0714                     	;# 
  3113  0716                     	;# 
  3114  0717                     	;# 
  3115  0718                     	;# 
  3116  0719                     	;# 
  3117  071A                     	;# 
  3118  071B                     	;# 
  3119  071C                     	;# 
  3120  071D                     	;# 
  3121  071E                     	;# 
  3122  0796                     	;# 
  3123  0797                     	;# 
  3124  0798                     	;# 
  3125  0799                     	;# 
  3126  079A                     	;# 
  3127  079B                     	;# 
  3128  079C                     	;# 
  3129  079D                     	;# 
  3130  080C                     	;# 
  3131  080D                     	;# 
  3132  080E                     	;# 
  3133  080F                     	;# 
  3134  0810                     	;# 
  3135  0811                     	;# 
  3136  0812                     	;# 
  3137  0813                     	;# 
  3138  0814                     	;# 
  3139  081A                     	;# 
  3140  081A                     	;# 
  3141  081B                     	;# 
  3142  081C                     	;# 
  3143  081C                     	;# 
  3144  081D                     	;# 
  3145  081E                     	;# 
  3146  081F                     	;# 
  3147  088C                     	;# 
  3148  088D                     	;# 
  3149  088E                     	;# 
  3150  088F                     	;# 
  3151  0890                     	;# 
  3152  0891                     	;# 
  3153  0892                     	;# 
  3154  0893                     	;# 
  3155  0895                     	;# 
  3156  0896                     	;# 
  3157  0897                     	;# 
  3158  0898                     	;# 
  3159  0899                     	;# 
  3160  089A                     	;# 
  3161  089B                     	;# 
  3162  090C                     	;# 
  3163  090E                     	;# 
  3164  090F                     	;# 
  3165  091F                     	;# 
  3166  098F                     	;# 
  3167  098F                     	;# 
  3168  0990                     	;# 
  3169  0991                     	;# 
  3170  0992                     	;# 
  3171  0993                     	;# 
  3172  0994                     	;# 
  3173  0995                     	;# 
  3174  0996                     	;# 
  3175  0997                     	;# 
  3176  0A19                     	;# 
  3177  0A19                     	;# 
  3178  0A1A                     	;# 
  3179  0A1A                     	;# 
  3180  0A1B                     	;# 
  3181  0A1B                     	;# 
  3182  0A1B                     	;# 
  3183  0A1C                     	;# 
  3184  0A1C                     	;# 
  3185  0A1D                     	;# 
  3186  0A1D                     	;# 
  3187  0A1E                     	;# 
  3188  0A1E                     	;# 
  3189  0A1F                     	;# 
  3190  0A1F                     	;# 
  3191  0A1F                     	;# 
  3192  1E0F                     	;# 
  3193  1E10                     	;# 
  3194  1E11                     	;# 
  3195  1E12                     	;# 
  3196  1E13                     	;# 
  3197  1E14                     	;# 
  3198  1E15                     	;# 
  3199  1E16                     	;# 
  3200  1E17                     	;# 
  3201  1E18                     	;# 
  3202  1E19                     	;# 
  3203  1E1A                     	;# 
  3204  1E1B                     	;# 
  3205  1E1C                     	;# 
  3206  1E1D                     	;# 
  3207  1E1E                     	;# 
  3208  1E1F                     	;# 
  3209  1E20                     	;# 
  3210  1E21                     	;# 
  3211  1E22                     	;# 
  3212  1E23                     	;# 
  3213  1E24                     	;# 
  3214  1E25                     	;# 
  3215  1E26                     	;# 
  3216  1E27                     	;# 
  3217  1E28                     	;# 
  3218  1E29                     	;# 
  3219  1E2A                     	;# 
  3220  1E2B                     	;# 
  3221  1E2C                     	;# 
  3222  1E2D                     	;# 
  3223  1E2E                     	;# 
  3224  1E2F                     	;# 
  3225  1E30                     	;# 
  3226  1E31                     	;# 
  3227  1E32                     	;# 
  3228  1E33                     	;# 
  3229  1E34                     	;# 
  3230  1E35                     	;# 
  3231  1E36                     	;# 
  3232  1E37                     	;# 
  3233  1E8F                     	;# 
  3234  1E90                     	;# 
  3235  1E91                     	;# 
  3236  1E92                     	;# 
  3237  1E93                     	;# 
  3238  1E94                     	;# 
  3239  1E95                     	;# 
  3240  1E96                     	;# 
  3241  1E97                     	;# 
  3242  1E9C                     	;# 
  3243  1E9D                     	;# 
  3244  1E9E                     	;# 
  3245  1EA1                     	;# 
  3246  1EA2                     	;# 
  3247  1EA3                     	;# 
  3248  1EA4                     	;# 
  3249  1EA5                     	;# 
  3250  1EA9                     	;# 
  3251  1EAA                     	;# 
  3252  1EAB                     	;# 
  3253  1EAC                     	;# 
  3254  1EB1                     	;# 
  3255  1EB2                     	;# 
  3256  1EB3                     	;# 
  3257  1EB8                     	;# 
  3258  1EB9                     	;# 
  3259  1EBA                     	;# 
  3260  1EBB                     	;# 
  3261  1EBC                     	;# 
  3262  1EBD                     	;# 
  3263  1EBE                     	;# 
  3264  1EC3                     	;# 
  3265  1EC5                     	;# 
  3266  1EC6                     	;# 
  3267  1EC7                     	;# 
  3268  1EC8                     	;# 
  3269  1EC9                     	;# 
  3270  1ECA                     	;# 
  3271  1ECB                     	;# 
  3272  1ECB                     	;# 
  3273  1ECB                     	;# 
  3274  1ECC                     	;# 
  3275  1ECC                     	;# 
  3276  1ECC                     	;# 
  3277  1ECD                     	;# 
  3278  1ECD                     	;# 
  3279  1ECE                     	;# 
  3280  1ECE                     	;# 
  3281  1F10                     	;# 
  3282  1F11                     	;# 
  3283  1F12                     	;# 
  3284  1F13                     	;# 
  3285  1F14                     	;# 
  3286  1F15                     	;# 
  3287  1F16                     	;# 
  3288  1F17                     	;# 
  3289  1F18                     	;# 
  3290  1F19                     	;# 
  3291  1F1A                     	;# 
  3292  1F1B                     	;# 
  3293  1F1C                     	;# 
  3294  1F1D                     	;# 
  3295  1F1E                     	;# 
  3296  1F1F                     	;# 
  3297  1F20                     	;# 
  3298  1F21                     	;# 
  3299  1F22                     	;# 
  3300  1F23                     	;# 
  3301  1F24                     	;# 
  3302  1F25                     	;# 
  3303  1F26                     	;# 
  3304  1F27                     	;# 
  3305  1F38                     	;# 
  3306  1F39                     	;# 
  3307  1F3A                     	;# 
  3308  1F3B                     	;# 
  3309  1F3C                     	;# 
  3310  1F3D                     	;# 
  3311  1F3E                     	;# 
  3312  1F3F                     	;# 
  3313  1F43                     	;# 
  3314  1F44                     	;# 
  3315  1F45                     	;# 
  3316  1F46                     	;# 
  3317  1F47                     	;# 
  3318  1F48                     	;# 
  3319  1F49                     	;# 
  3320  1F4A                     	;# 
  3321  1F4E                     	;# 
  3322  1F4F                     	;# 
  3323  1F50                     	;# 
  3324  1F51                     	;# 
  3325  1F52                     	;# 
  3326  1F53                     	;# 
  3327  1F54                     	;# 
  3328  1F55                     	;# 
  3329  1F65                     	;# 
  3330  1F66                     	;# 
  3331  1F67                     	;# 
  3332  1F68                     	;# 
  3333  1F69                     	;# 
  3334  1F6A                     	;# 
  3335  1F6B                     	;# 
  3336  1FE4                     	;# 
  3337  1FE5                     	;# 
  3338  1FE6                     	;# 
  3339  1FE7                     	;# 
  3340  1FE8                     	;# 
  3341  1FE8                     	;# 
  3342  1FE9                     	;# 
  3343  1FEA                     	;# 
  3344  1FEB                     	;# 
  3345  1FED                     	;# 
  3346  1FEE                     	;# 
  3347  1FEF                     	;# 
  3348  0000                     	;# 
  3349  0001                     	;# 
  3350  0002                     	;# 
  3351  0003                     	;# 
  3352  0004                     	;# 
  3353  0005                     	;# 
  3354  0006                     	;# 
  3355  0007                     	;# 
  3356  0008                     	;# 
  3357  0009                     	;# 
  3358  000A                     	;# 
  3359  000B                     	;# 
  3360  000C                     	;# 
  3361  000D                     	;# 
  3362  000E                     	;# 
  3363  0010                     	;# 
  3364  0012                     	;# 
  3365  0013                     	;# 
  3366  0014                     	;# 
  3367  0016                     	;# 
  3368  0018                     	;# 
  3369  0019                     	;# 
  3370  001A                     	;# 
  3371  001C                     	;# 
  3372  008C                     	;# 
  3373  008C                     	;# 
  3374  008D                     	;# 
  3375  008E                     	;# 
  3376  008E                     	;# 
  3377  008F                     	;# 
  3378  0090                     	;# 
  3379  0090                     	;# 
  3380  0091                     	;# 
  3381  0092                     	;# 
  3382  0092                     	;# 
  3383  0093                     	;# 
  3384  0094                     	;# 
  3385  0094                     	;# 
  3386  0095                     	;# 
  3387  0096                     	;# 
  3388  0096                     	;# 
  3389  0097                     	;# 
  3390  0098                     	;# 
  3391  0099                     	;# 
  3392  009A                     	;# 
  3393  009B                     	;# 
  3394  009B                     	;# 
  3395  009C                     	;# 
  3396  009D                     	;# 
  3397  009D                     	;# 
  3398  009E                     	;# 
  3399  009F                     	;# 
  3400  010C                     	;# 
  3401  010C                     	;# 
  3402  010D                     	;# 
  3403  010E                     	;# 
  3404  010F                     	;# 
  3405  010F                     	;# 
  3406  0110                     	;# 
  3407  0111                     	;# 
  3408  0112                     	;# 
  3409  0113                     	;# 
  3410  0114                     	;# 
  3411  0115                     	;# 
  3412  0116                     	;# 
  3413  0117                     	;# 
  3414  0118                     	;# 
  3415  0119                     	;# 
  3416  0119                     	;# 
  3417  0119                     	;# 
  3418  011A                     	;# 
  3419  011A                     	;# 
  3420  011A                     	;# 
  3421  011B                     	;# 
  3422  011B                     	;# 
  3423  011B                     	;# 
  3424  011B                     	;# 
  3425  011B                     	;# 
  3426  011C                     	;# 
  3427  011C                     	;# 
  3428  011C                     	;# 
  3429  011D                     	;# 
  3430  011D                     	;# 
  3431  011D                     	;# 
  3432  011E                     	;# 
  3433  011E                     	;# 
  3434  011E                     	;# 
  3435  011F                     	;# 
  3436  011F                     	;# 
  3437  011F                     	;# 
  3438  011F                     	;# 
  3439  011F                     	;# 
  3440  018C                     	;# 
  3441  018D                     	;# 
  3442  018E                     	;# 
  3443  018F                     	;# 
  3444  0190                     	;# 
  3445  0191                     	;# 
  3446  0192                     	;# 
  3447  0196                     	;# 
  3448  0197                     	;# 
  3449  0198                     	;# 
  3450  0199                     	;# 
  3451  019A                     	;# 
  3452  019B                     	;# 
  3453  019C                     	;# 
  3454  020C                     	;# 
  3455  020D                     	;# 
  3456  020E                     	;# 
  3457  020E                     	;# 
  3458  020F                     	;# 
  3459  020F                     	;# 
  3460  0210                     	;# 
  3461  0210                     	;# 
  3462  0211                     	;# 
  3463  0211                     	;# 
  3464  0212                     	;# 
  3465  0213                     	;# 
  3466  0214                     	;# 
  3467  0214                     	;# 
  3468  0215                     	;# 
  3469  0215                     	;# 
  3470  0216                     	;# 
  3471  0216                     	;# 
  3472  0217                     	;# 
  3473  0217                     	;# 
  3474  0218                     	;# 
  3475  0219                     	;# 
  3476  021A                     	;# 
  3477  021A                     	;# 
  3478  021B                     	;# 
  3479  021B                     	;# 
  3480  021C                     	;# 
  3481  021C                     	;# 
  3482  021D                     	;# 
  3483  021D                     	;# 
  3484  021E                     	;# 
  3485  021F                     	;# 
  3486  028C                     	;# 
  3487  028C                     	;# 
  3488  028D                     	;# 
  3489  028D                     	;# 
  3490  028E                     	;# 
  3491  028F                     	;# 
  3492  0290                     	;# 
  3493  0291                     	;# 
  3494  0292                     	;# 
  3495  0292                     	;# 
  3496  0293                     	;# 
  3497  0293                     	;# 
  3498  0294                     	;# 
  3499  0295                     	;# 
  3500  0296                     	;# 
  3501  0297                     	;# 
  3502  0298                     	;# 
  3503  0298                     	;# 
  3504  0299                     	;# 
  3505  0299                     	;# 
  3506  029A                     	;# 
  3507  029B                     	;# 
  3508  029C                     	;# 
  3509  029D                     	;# 
  3510  029F                     	;# 
  3511  030C                     	;# 
  3512  030C                     	;# 
  3513  030D                     	;# 
  3514  030E                     	;# 
  3515  030F                     	;# 
  3516  0310                     	;# 
  3517  0310                     	;# 
  3518  0311                     	;# 
  3519  0312                     	;# 
  3520  0313                     	;# 
  3521  0314                     	;# 
  3522  0314                     	;# 
  3523  0315                     	;# 
  3524  0316                     	;# 
  3525  0317                     	;# 
  3526  0318                     	;# 
  3527  0318                     	;# 
  3528  0319                     	;# 
  3529  031A                     	;# 
  3530  031B                     	;# 
  3531  031C                     	;# 
  3532  031C                     	;# 
  3533  031D                     	;# 
  3534  031E                     	;# 
  3535  031F                     	;# 
  3536  038C                     	;# 
  3537  038C                     	;# 
  3538  038D                     	;# 
  3539  038E                     	;# 
  3540  0390                     	;# 
  3541  0390                     	;# 
  3542  0391                     	;# 
  3543  0392                     	;# 
  3544  048C                     	;# 
  3545  048C                     	;# 
  3546  048D                     	;# 
  3547  048E                     	;# 
  3548  048F                     	;# 
  3549  048F                     	;# 
  3550  0490                     	;# 
  3551  0491                     	;# 
  3552  0492                     	;# 
  3553  0492                     	;# 
  3554  0493                     	;# 
  3555  0494                     	;# 
  3556  0495                     	;# 
  3557  0495                     	;# 
  3558  0496                     	;# 
  3559  0497                     	;# 
  3560  0498                     	;# 
  3561  0499                     	;# 
  3562  049A                     	;# 
  3563  049B                     	;# 
  3564  049C                     	;# 
  3565  049D                     	;# 
  3566  050C                     	;# 
  3567  050C                     	;# 
  3568  050D                     	;# 
  3569  050E                     	;# 
  3570  050F                     	;# 
  3571  050F                     	;# 
  3572  0510                     	;# 
  3573  0511                     	;# 
  3574  0512                     	;# 
  3575  0512                     	;# 
  3576  0513                     	;# 
  3577  0514                     	;# 
  3578  0515                     	;# 
  3579  0515                     	;# 
  3580  0516                     	;# 
  3581  0517                     	;# 
  3582  0518                     	;# 
  3583  0519                     	;# 
  3584  051A                     	;# 
  3585  051B                     	;# 
  3586  051C                     	;# 
  3587  051D                     	;# 
  3588  058C                     	;# 
  3589  058C                     	;# 
  3590  058D                     	;# 
  3591  058E                     	;# 
  3592  058F                     	;# 
  3593  058F                     	;# 
  3594  0590                     	;# 
  3595  0591                     	;# 
  3596  0592                     	;# 
  3597  0593                     	;# 
  3598  059C                     	;# 
  3599  059C                     	;# 
  3600  059D                     	;# 
  3601  059D                     	;# 
  3602  059E                     	;# 
  3603  059F                     	;# 
  3604  060C                     	;# 
  3605  060C                     	;# 
  3606  060D                     	;# 
  3607  060D                     	;# 
  3608  060E                     	;# 
  3609  060F                     	;# 
  3610  0610                     	;# 
  3611  0611                     	;# 
  3612  0612                     	;# 
  3613  0613                     	;# 
  3614  0614                     	;# 
  3615  0616                     	;# 
  3616  0616                     	;# 
  3617  0617                     	;# 
  3618  0617                     	;# 
  3619  0618                     	;# 
  3620  0619                     	;# 
  3621  061A                     	;# 
  3622  061B                     	;# 
  3623  061C                     	;# 
  3624  061D                     	;# 
  3625  061E                     	;# 
  3626  068C                     	;# 
  3627  068D                     	;# 
  3628  068E                     	;# 
  3629  068F                     	;# 
  3630  0690                     	;# 
  3631  0691                     	;# 
  3632  0692                     	;# 
  3633  0693                     	;# 
  3634  0694                     	;# 
  3635  070C                     	;# 
  3636  070D                     	;# 
  3637  070E                     	;# 
  3638  070F                     	;# 
  3639  0710                     	;# 
  3640  0711                     	;# 
  3641  0712                     	;# 
  3642  0713                     	;# 
  3643  0714                     	;# 
  3644  0716                     	;# 
  3645  0717                     	;# 
  3646  0718                     	;# 
  3647  0719                     	;# 
  3648  071A                     	;# 
  3649  071B                     	;# 
  3650  071C                     	;# 
  3651  071D                     	;# 
  3652  071E                     	;# 
  3653  0796                     	;# 
  3654  0797                     	;# 
  3655  0798                     	;# 
  3656  0799                     	;# 
  3657  079A                     	;# 
  3658  079B                     	;# 
  3659  079C                     	;# 
  3660  079D                     	;# 
  3661  080C                     	;# 
  3662  080D                     	;# 
  3663  080E                     	;# 
  3664  080F                     	;# 
  3665  0810                     	;# 
  3666  0811                     	;# 
  3667  0812                     	;# 
  3668  0813                     	;# 
  3669  0814                     	;# 
  3670  081A                     	;# 
  3671  081A                     	;# 
  3672  081B                     	;# 
  3673  081C                     	;# 
  3674  081C                     	;# 
  3675  081D                     	;# 
  3676  081E                     	;# 
  3677  081F                     	;# 
  3678  088C                     	;# 
  3679  088D                     	;# 
  3680  088E                     	;# 
  3681  088F                     	;# 
  3682  0890                     	;# 
  3683  0891                     	;# 
  3684  0892                     	;# 
  3685  0893                     	;# 
  3686  0895                     	;# 
  3687  0896                     	;# 
  3688  0897                     	;# 
  3689  0898                     	;# 
  3690  0899                     	;# 
  3691  089A                     	;# 
  3692  089B                     	;# 
  3693  090C                     	;# 
  3694  090E                     	;# 
  3695  090F                     	;# 
  3696  091F                     	;# 
  3697  098F                     	;# 
  3698  098F                     	;# 
  3699  0990                     	;# 
  3700  0991                     	;# 
  3701  0992                     	;# 
  3702  0993                     	;# 
  3703  0994                     	;# 
  3704  0995                     	;# 
  3705  0996                     	;# 
  3706  0997                     	;# 
  3707  0A19                     	;# 
  3708  0A19                     	;# 
  3709  0A1A                     	;# 
  3710  0A1A                     	;# 
  3711  0A1B                     	;# 
  3712  0A1B                     	;# 
  3713  0A1B                     	;# 
  3714  0A1C                     	;# 
  3715  0A1C                     	;# 
  3716  0A1D                     	;# 
  3717  0A1D                     	;# 
  3718  0A1E                     	;# 
  3719  0A1E                     	;# 
  3720  0A1F                     	;# 
  3721  0A1F                     	;# 
  3722  0A1F                     	;# 
  3723  1E0F                     	;# 
  3724  1E10                     	;# 
  3725  1E11                     	;# 
  3726  1E12                     	;# 
  3727  1E13                     	;# 
  3728  1E14                     	;# 
  3729  1E15                     	;# 
  3730  1E16                     	;# 
  3731  1E17                     	;# 
  3732  1E18                     	;# 
  3733  1E19                     	;# 
  3734  1E1A                     	;# 
  3735  1E1B                     	;# 
  3736  1E1C                     	;# 
  3737  1E1D                     	;# 
  3738  1E1E                     	;# 
  3739  1E1F                     	;# 
  3740  1E20                     	;# 
  3741  1E21                     	;# 
  3742  1E22                     	;# 
  3743  1E23                     	;# 
  3744  1E24                     	;# 
  3745  1E25                     	;# 
  3746  1E26                     	;# 
  3747  1E27                     	;# 
  3748  1E28                     	;# 
  3749  1E29                     	;# 
  3750  1E2A                     	;# 
  3751  1E2B                     	;# 
  3752  1E2C                     	;# 
  3753  1E2D                     	;# 
  3754  1E2E                     	;# 
  3755  1E2F                     	;# 
  3756  1E30                     	;# 
  3757  1E31                     	;# 
  3758  1E32                     	;# 
  3759  1E33                     	;# 
  3760  1E34                     	;# 
  3761  1E35                     	;# 
  3762  1E36                     	;# 
  3763  1E37                     	;# 
  3764  1E8F                     	;# 
  3765  1E90                     	;# 
  3766  1E91                     	;# 
  3767  1E92                     	;# 
  3768  1E93                     	;# 
  3769  1E94                     	;# 
  3770  1E95                     	;# 
  3771  1E96                     	;# 
  3772  1E97                     	;# 
  3773  1E9C                     	;# 
  3774  1E9D                     	;# 
  3775  1E9E                     	;# 
  3776  1EA1                     	;# 
  3777  1EA2                     	;# 
  3778  1EA3                     	;# 
  3779  1EA4                     	;# 
  3780  1EA5                     	;# 
  3781  1EA9                     	;# 
  3782  1EAA                     	;# 
  3783  1EAB                     	;# 
  3784  1EAC                     	;# 
  3785  1EB1                     	;# 
  3786  1EB2                     	;# 
  3787  1EB3                     	;# 
  3788  1EB8                     	;# 
  3789  1EB9                     	;# 
  3790  1EBA                     	;# 
  3791  1EBB                     	;# 
  3792  1EBC                     	;# 
  3793  1EBD                     	;# 
  3794  1EBE                     	;# 
  3795  1EC3                     	;# 
  3796  1EC5                     	;# 
  3797  1EC6                     	;# 
  3798  1EC7                     	;# 
  3799  1EC8                     	;# 
  3800  1EC9                     	;# 
  3801  1ECA                     	;# 
  3802  1ECB                     	;# 
  3803  1ECB                     	;# 
  3804  1ECB                     	;# 
  3805  1ECC                     	;# 
  3806  1ECC                     	;# 
  3807  1ECC                     	;# 
  3808  1ECD                     	;# 
  3809  1ECD                     	;# 
  3810  1ECE                     	;# 
  3811  1ECE                     	;# 
  3812  1F10                     	;# 
  3813  1F11                     	;# 
  3814  1F12                     	;# 
  3815  1F13                     	;# 
  3816  1F14                     	;# 
  3817  1F15                     	;# 
  3818  1F16                     	;# 
  3819  1F17                     	;# 
  3820  1F18                     	;# 
  3821  1F19                     	;# 
  3822  1F1A                     	;# 
  3823  1F1B                     	;# 
  3824  1F1C                     	;# 
  3825  1F1D                     	;# 
  3826  1F1E                     	;# 
  3827  1F1F                     	;# 
  3828  1F20                     	;# 
  3829  1F21                     	;# 
  3830  1F22                     	;# 
  3831  1F23                     	;# 
  3832  1F24                     	;# 
  3833  1F25                     	;# 
  3834  1F26                     	;# 
  3835  1F27                     	;# 
  3836  1F38                     	;# 
  3837  1F39                     	;# 
  3838  1F3A                     	;# 
  3839  1F3B                     	;# 
  3840  1F3C                     	;# 
  3841  1F3D                     	;# 
  3842  1F3E                     	;# 
  3843  1F3F                     	;# 
  3844  1F43                     	;# 
  3845  1F44                     	;# 
  3846  1F45                     	;# 
  3847  1F46                     	;# 
  3848  1F47                     	;# 
  3849  1F48                     	;# 
  3850  1F49                     	;# 
  3851  1F4A                     	;# 
  3852  1F4E                     	;# 
  3853  1F4F                     	;# 
  3854  1F50                     	;# 
  3855  1F51                     	;# 
  3856  1F52                     	;# 
  3857  1F53                     	;# 
  3858  1F54                     	;# 
  3859  1F55                     	;# 
  3860  1F65                     	;# 
  3861  1F66                     	;# 
  3862  1F67                     	;# 
  3863  1F68                     	;# 
  3864  1F69                     	;# 
  3865  1F6A                     	;# 
  3866  1F6B                     	;# 
  3867  1FE4                     	;# 
  3868  1FE5                     	;# 
  3869  1FE6                     	;# 
  3870  1FE7                     	;# 
  3871  1FE8                     	;# 
  3872  1FE8                     	;# 
  3873  1FE9                     	;# 
  3874  1FEA                     	;# 
  3875  1FEB                     	;# 
  3876  1FED                     	;# 
  3877  1FEE                     	;# 
  3878  1FEF                     	;# 
  3879  0000                     	;# 
  3880  0001                     	;# 
  3881  0002                     	;# 
  3882  0003                     	;# 
  3883  0004                     	;# 
  3884  0005                     	;# 
  3885  0006                     	;# 
  3886  0007                     	;# 
  3887  0008                     	;# 
  3888  0009                     	;# 
  3889  000A                     	;# 
  3890  000B                     	;# 
  3891  000C                     	;# 
  3892  000D                     	;# 
  3893  000E                     	;# 
  3894  0010                     	;# 
  3895  0012                     	;# 
  3896  0013                     	;# 
  3897  0014                     	;# 
  3898  0016                     	;# 
  3899  0018                     	;# 
  3900  0019                     	;# 
  3901  001A                     	;# 
  3902  001C                     	;# 
  3903  008C                     	;# 
  3904  008C                     	;# 
  3905  008D                     	;# 
  3906  008E                     	;# 
  3907  008E                     	;# 
  3908  008F                     	;# 
  3909  0090                     	;# 
  3910  0090                     	;# 
  3911  0091                     	;# 
  3912  0092                     	;# 
  3913  0092                     	;# 
  3914  0093                     	;# 
  3915  0094                     	;# 
  3916  0094                     	;# 
  3917  0095                     	;# 
  3918  0096                     	;# 
  3919  0096                     	;# 
  3920  0097                     	;# 
  3921  0098                     	;# 
  3922  0099                     	;# 
  3923  009A                     	;# 
  3924  009B                     	;# 
  3925  009B                     	;# 
  3926  009C                     	;# 
  3927  009D                     	;# 
  3928  009D                     	;# 
  3929  009E                     	;# 
  3930  009F                     	;# 
  3931  010C                     	;# 
  3932  010C                     	;# 
  3933  010D                     	;# 
  3934  010E                     	;# 
  3935  010F                     	;# 
  3936  010F                     	;# 
  3937  0110                     	;# 
  3938  0111                     	;# 
  3939  0112                     	;# 
  3940  0113                     	;# 
  3941  0114                     	;# 
  3942  0115                     	;# 
  3943  0116                     	;# 
  3944  0117                     	;# 
  3945  0118                     	;# 
  3946  0119                     	;# 
  3947  0119                     	;# 
  3948  0119                     	;# 
  3949  011A                     	;# 
  3950  011A                     	;# 
  3951  011A                     	;# 
  3952  011B                     	;# 
  3953  011B                     	;# 
  3954  011B                     	;# 
  3955  011B                     	;# 
  3956  011B                     	;# 
  3957  011C                     	;# 
  3958  011C                     	;# 
  3959  011C                     	;# 
  3960  011D                     	;# 
  3961  011D                     	;# 
  3962  011D                     	;# 
  3963  011E                     	;# 
  3964  011E                     	;# 
  3965  011E                     	;# 
  3966  011F                     	;# 
  3967  011F                     	;# 
  3968  011F                     	;# 
  3969  011F                     	;# 
  3970  011F                     	;# 
  3971  018C                     	;# 
  3972  018D                     	;# 
  3973  018E                     	;# 
  3974  018F                     	;# 
  3975  0190                     	;# 
  3976  0191                     	;# 
  3977  0192                     	;# 
  3978  0196                     	;# 
  3979  0197                     	;# 
  3980  0198                     	;# 
  3981  0199                     	;# 
  3982  019A                     	;# 
  3983  019B                     	;# 
  3984  019C                     	;# 
  3985  020C                     	;# 
  3986  020D                     	;# 
  3987  020E                     	;# 
  3988  020E                     	;# 
  3989  020F                     	;# 
  3990  020F                     	;# 
  3991  0210                     	;# 
  3992  0210                     	;# 
  3993  0211                     	;# 
  3994  0211                     	;# 
  3995  0212                     	;# 
  3996  0213                     	;# 
  3997  0214                     	;# 
  3998  0214                     	;# 
  3999  0215                     	;# 
  4000  0215                     	;# 
  4001  0216                     	;# 
  4002  0216                     	;# 
  4003  0217                     	;# 
  4004  0217                     	;# 
  4005  0218                     	;# 
  4006  0219                     	;# 
  4007  021A                     	;# 
  4008  021A                     	;# 
  4009  021B                     	;# 
  4010  021B                     	;# 
  4011  021C                     	;# 
  4012  021C                     	;# 
  4013  021D                     	;# 
  4014  021D                     	;# 
  4015  021E                     	;# 
  4016  021F                     	;# 
  4017  028C                     	;# 
  4018  028C                     	;# 
  4019  028D                     	;# 
  4020  028D                     	;# 
  4021  028E                     	;# 
  4022  028F                     	;# 
  4023  0290                     	;# 
  4024  0291                     	;# 
  4025  0292                     	;# 
  4026  0292                     	;# 
  4027  0293                     	;# 
  4028  0293                     	;# 
  4029  0294                     	;# 
  4030  0295                     	;# 
  4031  0296                     	;# 
  4032  0297                     	;# 
  4033  0298                     	;# 
  4034  0298                     	;# 
  4035  0299                     	;# 
  4036  0299                     	;# 
  4037  029A                     	;# 
  4038  029B                     	;# 
  4039  029C                     	;# 
  4040  029D                     	;# 
  4041  029F                     	;# 
  4042  030C                     	;# 
  4043  030C                     	;# 
  4044  030D                     	;# 
  4045  030E                     	;# 
  4046  030F                     	;# 
  4047  0310                     	;# 
  4048  0310                     	;# 
  4049  0311                     	;# 
  4050  0312                     	;# 
  4051  0313                     	;# 
  4052  0314                     	;# 
  4053  0314                     	;# 
  4054  0315                     	;# 
  4055  0316                     	;# 
  4056  0317                     	;# 
  4057  0318                     	;# 
  4058  0318                     	;# 
  4059  0319                     	;# 
  4060  031A                     	;# 
  4061  031B                     	;# 
  4062  031C                     	;# 
  4063  031C                     	;# 
  4064  031D                     	;# 
  4065  031E                     	;# 
  4066  031F                     	;# 
  4067  038C                     	;# 
  4068  038C                     	;# 
  4069  038D                     	;# 
  4070  038E                     	;# 
  4071  0390                     	;# 
  4072  0390                     	;# 
  4073  0391                     	;# 
  4074  0392                     	;# 
  4075  048C                     	;# 
  4076  048C                     	;# 
  4077  048D                     	;# 
  4078  048E                     	;# 
  4079  048F                     	;# 
  4080  048F                     	;# 
  4081  0490                     	;# 
  4082  0491                     	;# 
  4083  0492                     	;# 
  4084  0492                     	;# 
  4085  0493                     	;# 
  4086  0494                     	;# 
  4087  0495                     	;# 
  4088  0495                     	;# 
  4089  0496                     	;# 
  4090  0497                     	;# 
  4091  0498                     	;# 
  4092  0499                     	;# 
  4093  049A                     	;# 
  4094  049B                     	;# 
  4095  049C                     	;# 
  4096  049D                     	;# 
  4097  050C                     	;# 
  4098  050C                     	;# 
  4099  050D                     	;# 
  4100  050E                     	;# 
  4101  050F                     	;# 
  4102  050F                     	;# 
  4103  0510                     	;# 
  4104  0511                     	;# 
  4105  0512                     	;# 
  4106  0512                     	;# 
  4107  0513                     	;# 
  4108  0514                     	;# 
  4109  0515                     	;# 
  4110  0515                     	;# 
  4111  0516                     	;# 
  4112  0517                     	;# 
  4113  0518                     	;# 
  4114  0519                     	;# 
  4115  051A                     	;# 
  4116  051B                     	;# 
  4117  051C                     	;# 
  4118  051D                     	;# 
  4119  058C                     	;# 
  4120  058C                     	;# 
  4121  058D                     	;# 
  4122  058E                     	;# 
  4123  058F                     	;# 
  4124  058F                     	;# 
  4125  0590                     	;# 
  4126  0591                     	;# 
  4127  0592                     	;# 
  4128  0593                     	;# 
  4129  059C                     	;# 
  4130  059C                     	;# 
  4131  059D                     	;# 
  4132  059D                     	;# 
  4133  059E                     	;# 
  4134  059F                     	;# 
  4135  060C                     	;# 
  4136  060C                     	;# 
  4137  060D                     	;# 
  4138  060D                     	;# 
  4139  060E                     	;# 
  4140  060F                     	;# 
  4141  0610                     	;# 
  4142  0611                     	;# 
  4143  0612                     	;# 
  4144  0613                     	;# 
  4145  0614                     	;# 
  4146  0616                     	;# 
  4147  0616                     	;# 
  4148  0617                     	;# 
  4149  0617                     	;# 
  4150  0618                     	;# 
  4151  0619                     	;# 
  4152  061A                     	;# 
  4153  061B                     	;# 
  4154  061C                     	;# 
  4155  061D                     	;# 
  4156  061E                     	;# 
  4157  068C                     	;# 
  4158  068D                     	;# 
  4159  068E                     	;# 
  4160  068F                     	;# 
  4161  0690                     	;# 
  4162  0691                     	;# 
  4163  0692                     	;# 
  4164  0693                     	;# 
  4165  0694                     	;# 
  4166  070C                     	;# 
  4167  070D                     	;# 
  4168  070E                     	;# 
  4169  070F                     	;# 
  4170  0710                     	;# 
  4171  0711                     	;# 
  4172  0712                     	;# 
  4173  0713                     	;# 
  4174  0714                     	;# 
  4175  0716                     	;# 
  4176  0717                     	;# 
  4177  0718                     	;# 
  4178  0719                     	;# 
  4179  071A                     	;# 
  4180  071B                     	;# 
  4181  071C                     	;# 
  4182  071D                     	;# 
  4183  071E                     	;# 
  4184  0796                     	;# 
  4185  0797                     	;# 
  4186  0798                     	;# 
  4187  0799                     	;# 
  4188  079A                     	;# 
  4189  079B                     	;# 
  4190  079C                     	;# 
  4191  079D                     	;# 
  4192  080C                     	;# 
  4193  080D                     	;# 
  4194  080E                     	;# 
  4195  080F                     	;# 
  4196  0810                     	;# 
  4197  0811                     	;# 
  4198  0812                     	;# 
  4199  0813                     	;# 
  4200  0814                     	;# 
  4201  081A                     	;# 
  4202  081A                     	;# 
  4203  081B                     	;# 
  4204  081C                     	;# 
  4205  081C                     	;# 
  4206  081D                     	;# 
  4207  081E                     	;# 
  4208  081F                     	;# 
  4209  088C                     	;# 
  4210  088D                     	;# 
  4211  088E                     	;# 
  4212  088F                     	;# 
  4213  0890                     	;# 
  4214  0891                     	;# 
  4215  0892                     	;# 
  4216  0893                     	;# 
  4217  0895                     	;# 
  4218  0896                     	;# 
  4219  0897                     	;# 
  4220  0898                     	;# 
  4221  0899                     	;# 
  4222  089A                     	;# 
  4223  089B                     	;# 
  4224  090C                     	;# 
  4225  090E                     	;# 
  4226  090F                     	;# 
  4227  091F                     	;# 
  4228  098F                     	;# 
  4229  098F                     	;# 
  4230  0990                     	;# 
  4231  0991                     	;# 
  4232  0992                     	;# 
  4233  0993                     	;# 
  4234  0994                     	;# 
  4235  0995                     	;# 
  4236  0996                     	;# 
  4237  0997                     	;# 
  4238  0A19                     	;# 
  4239  0A19                     	;# 
  4240  0A1A                     	;# 
  4241  0A1A                     	;# 
  4242  0A1B                     	;# 
  4243  0A1B                     	;# 
  4244  0A1B                     	;# 
  4245  0A1C                     	;# 
  4246  0A1C                     	;# 
  4247  0A1D                     	;# 
  4248  0A1D                     	;# 
  4249  0A1E                     	;# 
  4250  0A1E                     	;# 
  4251  0A1F                     	;# 
  4252  0A1F                     	;# 
  4253  0A1F                     	;# 
  4254  1E0F                     	;# 
  4255  1E10                     	;# 
  4256  1E11                     	;# 
  4257  1E12                     	;# 
  4258  1E13                     	;# 
  4259  1E14                     	;# 
  4260  1E15                     	;# 
  4261  1E16                     	;# 
  4262  1E17                     	;# 
  4263  1E18                     	;# 
  4264  1E19                     	;# 
  4265  1E1A                     	;# 
  4266  1E1B                     	;# 
  4267  1E1C                     	;# 
  4268  1E1D                     	;# 
  4269  1E1E                     	;# 
  4270  1E1F                     	;# 
  4271  1E20                     	;# 
  4272  1E21                     	;# 
  4273  1E22                     	;# 
  4274  1E23                     	;# 
  4275  1E24                     	;# 
  4276  1E25                     	;# 
  4277  1E26                     	;# 
  4278  1E27                     	;# 
  4279  1E28                     	;# 
  4280  1E29                     	;# 
  4281  1E2A                     	;# 
  4282  1E2B                     	;# 
  4283  1E2C                     	;# 
  4284  1E2D                     	;# 
  4285  1E2E                     	;# 
  4286  1E2F                     	;# 
  4287  1E30                     	;# 
  4288  1E31                     	;# 
  4289  1E32                     	;# 
  4290  1E33                     	;# 
  4291  1E34                     	;# 
  4292  1E35                     	;# 
  4293  1E36                     	;# 
  4294  1E37                     	;# 
  4295  1E8F                     	;# 
  4296  1E90                     	;# 
  4297  1E91                     	;# 
  4298  1E92                     	;# 
  4299  1E93                     	;# 
  4300  1E94                     	;# 
  4301  1E95                     	;# 
  4302  1E96                     	;# 
  4303  1E97                     	;# 
  4304  1E9C                     	;# 
  4305  1E9D                     	;# 
  4306  1E9E                     	;# 
  4307  1EA1                     	;# 
  4308  1EA2                     	;# 
  4309  1EA3                     	;# 
  4310  1EA4                     	;# 
  4311  1EA5                     	;# 
  4312  1EA9                     	;# 
  4313  1EAA                     	;# 
  4314  1EAB                     	;# 
  4315  1EAC                     	;# 
  4316  1EB1                     	;# 
  4317  1EB2                     	;# 
  4318  1EB3                     	;# 
  4319  1EB8                     	;# 
  4320  1EB9                     	;# 
  4321  1EBA                     	;# 
  4322  1EBB                     	;# 
  4323  1EBC                     	;# 
  4324  1EBD                     	;# 
  4325  1EBE                     	;# 
  4326  1EC3                     	;# 
  4327  1EC5                     	;# 
  4328  1EC6                     	;# 
  4329  1EC7                     	;# 
  4330  1EC8                     	;# 
  4331  1EC9                     	;# 
  4332  1ECA                     	;# 
  4333  1ECB                     	;# 
  4334  1ECB                     	;# 
  4335  1ECB                     	;# 
  4336  1ECC                     	;# 
  4337  1ECC                     	;# 
  4338  1ECC                     	;# 
  4339  1ECD                     	;# 
  4340  1ECD                     	;# 
  4341  1ECE                     	;# 
  4342  1ECE                     	;# 
  4343  1F10                     	;# 
  4344  1F11                     	;# 
  4345  1F12                     	;# 
  4346  1F13                     	;# 
  4347  1F14                     	;# 
  4348  1F15                     	;# 
  4349  1F16                     	;# 
  4350  1F17                     	;# 
  4351  1F18                     	;# 
  4352  1F19                     	;# 
  4353  1F1A                     	;# 
  4354  1F1B                     	;# 
  4355  1F1C                     	;# 
  4356  1F1D                     	;# 
  4357  1F1E                     	;# 
  4358  1F1F                     	;# 
  4359  1F20                     	;# 
  4360  1F21                     	;# 
  4361  1F22                     	;# 
  4362  1F23                     	;# 
  4363  1F24                     	;# 
  4364  1F25                     	;# 
  4365  1F26                     	;# 
  4366  1F27                     	;# 
  4367  1F38                     	;# 
  4368  1F39                     	;# 
  4369  1F3A                     	;# 
  4370  1F3B                     	;# 
  4371  1F3C                     	;# 
  4372  1F3D                     	;# 
  4373  1F3E                     	;# 
  4374  1F3F                     	;# 
  4375  1F43                     	;# 
  4376  1F44                     	;# 
  4377  1F45                     	;# 
  4378  1F46                     	;# 
  4379  1F47                     	;# 
  4380  1F48                     	;# 
  4381  1F49                     	;# 
  4382  1F4A                     	;# 
  4383  1F4E                     	;# 
  4384  1F4F                     	;# 
  4385  1F50                     	;# 
  4386  1F51                     	;# 
  4387  1F52                     	;# 
  4388  1F53                     	;# 
  4389  1F54                     	;# 
  4390  1F55                     	;# 
  4391  1F65                     	;# 
  4392  1F66                     	;# 
  4393  1F67                     	;# 
  4394  1F68                     	;# 
  4395  1F69                     	;# 
  4396  1F6A                     	;# 
  4397  1F6B                     	;# 
  4398  1FE4                     	;# 
  4399  1FE5                     	;# 
  4400  1FE6                     	;# 
  4401  1FE7                     	;# 
  4402  1FE8                     	;# 
  4403  1FE8                     	;# 
  4404  1FE9                     	;# 
  4405  1FEA                     	;# 
  4406  1FEB                     	;# 
  4407  1FED                     	;# 
  4408  1FEE                     	;# 
  4409  1FEF                     	;# 
  4410  0000                     	;# 
  4411  0001                     	;# 
  4412  0002                     	;# 
  4413  0003                     	;# 
  4414  0004                     	;# 
  4415  0005                     	;# 
  4416  0006                     	;# 
  4417  0007                     	;# 
  4418  0008                     	;# 
  4419  0009                     	;# 
  4420  000A                     	;# 
  4421  000B                     	;# 
  4422  000C                     	;# 
  4423  000D                     	;# 
  4424  000E                     	;# 
  4425  0010                     	;# 
  4426  0012                     	;# 
  4427  0013                     	;# 
  4428  0014                     	;# 
  4429  0016                     	;# 
  4430  0018                     	;# 
  4431  0019                     	;# 
  4432  001A                     	;# 
  4433  001C                     	;# 
  4434  008C                     	;# 
  4435  008C                     	;# 
  4436  008D                     	;# 
  4437  008E                     	;# 
  4438  008E                     	;# 
  4439  008F                     	;# 
  4440  0090                     	;# 
  4441  0090                     	;# 
  4442  0091                     	;# 
  4443  0092                     	;# 
  4444  0092                     	;# 
  4445  0093                     	;# 
  4446  0094                     	;# 
  4447  0094                     	;# 
  4448  0095                     	;# 
  4449  0096                     	;# 
  4450  0096                     	;# 
  4451  0097                     	;# 
  4452  0098                     	;# 
  4453  0099                     	;# 
  4454  009A                     	;# 
  4455  009B                     	;# 
  4456  009B                     	;# 
  4457  009C                     	;# 
  4458  009D                     	;# 
  4459  009D                     	;# 
  4460  009E                     	;# 
  4461  009F                     	;# 
  4462  010C                     	;# 
  4463  010C                     	;# 
  4464  010D                     	;# 
  4465  010E                     	;# 
  4466  010F                     	;# 
  4467  010F                     	;# 
  4468  0110                     	;# 
  4469  0111                     	;# 
  4470  0112                     	;# 
  4471  0113                     	;# 
  4472  0114                     	;# 
  4473  0115                     	;# 
  4474  0116                     	;# 
  4475  0117                     	;# 
  4476  0118                     	;# 
  4477  0119                     	;# 
  4478  0119                     	;# 
  4479  0119                     	;# 
  4480  011A                     	;# 
  4481  011A                     	;# 
  4482  011A                     	;# 
  4483  011B                     	;# 
  4484  011B                     	;# 
  4485  011B                     	;# 
  4486  011B                     	;# 
  4487  011B                     	;# 
  4488  011C                     	;# 
  4489  011C                     	;# 
  4490  011C                     	;# 
  4491  011D                     	;# 
  4492  011D                     	;# 
  4493  011D                     	;# 
  4494  011E                     	;# 
  4495  011E                     	;# 
  4496  011E                     	;# 
  4497  011F                     	;# 
  4498  011F                     	;# 
  4499  011F                     	;# 
  4500  011F                     	;# 
  4501  011F                     	;# 
  4502  018C                     	;# 
  4503  018D                     	;# 
  4504  018E                     	;# 
  4505  018F                     	;# 
  4506  0190                     	;# 
  4507  0191                     	;# 
  4508  0192                     	;# 
  4509  0196                     	;# 
  4510  0197                     	;# 
  4511  0198                     	;# 
  4512  0199                     	;# 
  4513  019A                     	;# 
  4514  019B                     	;# 
  4515  019C                     	;# 
  4516  020C                     	;# 
  4517  020D                     	;# 
  4518  020E                     	;# 
  4519  020E                     	;# 
  4520  020F                     	;# 
  4521  020F                     	;# 
  4522  0210                     	;# 
  4523  0210                     	;# 
  4524  0211                     	;# 
  4525  0211                     	;# 
  4526  0212                     	;# 
  4527  0213                     	;# 
  4528  0214                     	;# 
  4529  0214                     	;# 
  4530  0215                     	;# 
  4531  0215                     	;# 
  4532  0216                     	;# 
  4533  0216                     	;# 
  4534  0217                     	;# 
  4535  0217                     	;# 
  4536  0218                     	;# 
  4537  0219                     	;# 
  4538  021A                     	;# 
  4539  021A                     	;# 
  4540  021B                     	;# 
  4541  021B                     	;# 
  4542  021C                     	;# 
  4543  021C                     	;# 
  4544  021D                     	;# 
  4545  021D                     	;# 
  4546  021E                     	;# 
  4547  021F                     	;# 
  4548  028C                     	;# 
  4549  028C                     	;# 
  4550  028D                     	;# 
  4551  028D                     	;# 
  4552  028E                     	;# 
  4553  028F                     	;# 
  4554  0290                     	;# 
  4555  0291                     	;# 
  4556  0292                     	;# 
  4557  0292                     	;# 
  4558  0293                     	;# 
  4559  0293                     	;# 
  4560  0294                     	;# 
  4561  0295                     	;# 
  4562  0296                     	;# 
  4563  0297                     	;# 
  4564  0298                     	;# 
  4565  0298                     	;# 
  4566  0299                     	;# 
  4567  0299                     	;# 
  4568  029A                     	;# 
  4569  029B                     	;# 
  4570  029C                     	;# 
  4571  029D                     	;# 
  4572  029F                     	;# 
  4573  030C                     	;# 
  4574  030C                     	;# 
  4575  030D                     	;# 
  4576  030E                     	;# 
  4577  030F                     	;# 
  4578  0310                     	;# 
  4579  0310                     	;# 
  4580  0311                     	;# 
  4581  0312                     	;# 
  4582  0313                     	;# 
  4583  0314                     	;# 
  4584  0314                     	;# 
  4585  0315                     	;# 
  4586  0316                     	;# 
  4587  0317                     	;# 
  4588  0318                     	;# 
  4589  0318                     	;# 
  4590  0319                     	;# 
  4591  031A                     	;# 
  4592  031B                     	;# 
  4593  031C                     	;# 
  4594  031C                     	;# 
  4595  031D                     	;# 
  4596  031E                     	;# 
  4597  031F                     	;# 
  4598  038C                     	;# 
  4599  038C                     	;# 
  4600  038D                     	;# 
  4601  038E                     	;# 
  4602  0390                     	;# 
  4603  0390                     	;# 
  4604  0391                     	;# 
  4605  0392                     	;# 
  4606  048C                     	;# 
  4607  048C                     	;# 
  4608  048D                     	;# 
  4609  048E                     	;# 
  4610  048F                     	;# 
  4611  048F                     	;# 
  4612  0490                     	;# 
  4613  0491                     	;# 
  4614  0492                     	;# 
  4615  0492                     	;# 
  4616  0493                     	;# 
  4617  0494                     	;# 
  4618  0495                     	;# 
  4619  0495                     	;# 
  4620  0496                     	;# 
  4621  0497                     	;# 
  4622  0498                     	;# 
  4623  0499                     	;# 
  4624  049A                     	;# 
  4625  049B                     	;# 
  4626  049C                     	;# 
  4627  049D                     	;# 
  4628  050C                     	;# 
  4629  050C                     	;# 
  4630  050D                     	;# 
  4631  050E                     	;# 
  4632  050F                     	;# 
  4633  050F                     	;# 
  4634  0510                     	;# 
  4635  0511                     	;# 
  4636  0512                     	;# 
  4637  0512                     	;# 
  4638  0513                     	;# 
  4639  0514                     	;# 
  4640  0515                     	;# 
  4641  0515                     	;# 
  4642  0516                     	;# 
  4643  0517                     	;# 
  4644  0518                     	;# 
  4645  0519                     	;# 
  4646  051A                     	;# 
  4647  051B                     	;# 
  4648  051C                     	;# 
  4649  051D                     	;# 
  4650  058C                     	;# 
  4651  058C                     	;# 
  4652  058D                     	;# 
  4653  058E                     	;# 
  4654  058F                     	;# 
  4655  058F                     	;# 
  4656  0590                     	;# 
  4657  0591                     	;# 
  4658  0592                     	;# 
  4659  0593                     	;# 
  4660  059C                     	;# 
  4661  059C                     	;# 
  4662  059D                     	;# 
  4663  059D                     	;# 
  4664  059E                     	;# 
  4665  059F                     	;# 
  4666  060C                     	;# 
  4667  060C                     	;# 
  4668  060D                     	;# 
  4669  060D                     	;# 
  4670  060E                     	;# 
  4671  060F                     	;# 
  4672  0610                     	;# 
  4673  0611                     	;# 
  4674  0612                     	;# 
  4675  0613                     	;# 
  4676  0614                     	;# 
  4677  0616                     	;# 
  4678  0616                     	;# 
  4679  0617                     	;# 
  4680  0617                     	;# 
  4681  0618                     	;# 
  4682  0619                     	;# 
  4683  061A                     	;# 
  4684  061B                     	;# 
  4685  061C                     	;# 
  4686  061D                     	;# 
  4687  061E                     	;# 
  4688  068C                     	;# 
  4689  068D                     	;# 
  4690  068E                     	;# 
  4691  068F                     	;# 
  4692  0690                     	;# 
  4693  0691                     	;# 
  4694  0692                     	;# 
  4695  0693                     	;# 
  4696  0694                     	;# 
  4697  070C                     	;# 
  4698  070D                     	;# 
  4699  070E                     	;# 
  4700  070F                     	;# 
  4701  0710                     	;# 
  4702  0711                     	;# 
  4703  0712                     	;# 
  4704  0713                     	;# 
  4705  0714                     	;# 
  4706  0716                     	;# 
  4707  0717                     	;# 
  4708  0718                     	;# 
  4709  0719                     	;# 
  4710  071A                     	;# 
  4711  071B                     	;# 
  4712  071C                     	;# 
  4713  071D                     	;# 
  4714  071E                     	;# 
  4715  0796                     	;# 
  4716  0797                     	;# 
  4717  0798                     	;# 
  4718  0799                     	;# 
  4719  079A                     	;# 
  4720  079B                     	;# 
  4721  079C                     	;# 
  4722  079D                     	;# 
  4723  080C                     	;# 
  4724  080D                     	;# 
  4725  080E                     	;# 
  4726  080F                     	;# 
  4727  0810                     	;# 
  4728  0811                     	;# 
  4729  0812                     	;# 
  4730  0813                     	;# 
  4731  0814                     	;# 
  4732  081A                     	;# 
  4733  081A                     	;# 
  4734  081B                     	;# 
  4735  081C                     	;# 
  4736  081C                     	;# 
  4737  081D                     	;# 
  4738  081E                     	;# 
  4739  081F                     	;# 
  4740  088C                     	;# 
  4741  088D                     	;# 
  4742  088E                     	;# 
  4743  088F                     	;# 
  4744  0890                     	;# 
  4745  0891                     	;# 
  4746  0892                     	;# 
  4747  0893                     	;# 
  4748  0895                     	;# 
  4749  0896                     	;# 
  4750  0897                     	;# 
  4751  0898                     	;# 
  4752  0899                     	;# 
  4753  089A                     	;# 
  4754  089B                     	;# 
  4755  090C                     	;# 
  4756  090E                     	;# 
  4757  090F                     	;# 
  4758  091F                     	;# 
  4759  098F                     	;# 
  4760  098F                     	;# 
  4761  0990                     	;# 
  4762  0991                     	;# 
  4763  0992                     	;# 
  4764  0993                     	;# 
  4765  0994                     	;# 
  4766  0995                     	;# 
  4767  0996                     	;# 
  4768  0997                     	;# 
  4769  0A19                     	;# 
  4770  0A19                     	;# 
  4771  0A1A                     	;# 
  4772  0A1A                     	;# 
  4773  0A1B                     	;# 
  4774  0A1B                     	;# 
  4775  0A1B                     	;# 
  4776  0A1C                     	;# 
  4777  0A1C                     	;# 
  4778  0A1D                     	;# 
  4779  0A1D                     	;# 
  4780  0A1E                     	;# 
  4781  0A1E                     	;# 
  4782  0A1F                     	;# 
  4783  0A1F                     	;# 
  4784  0A1F                     	;# 
  4785  1E0F                     	;# 
  4786  1E10                     	;# 
  4787  1E11                     	;# 
  4788  1E12                     	;# 
  4789  1E13                     	;# 
  4790  1E14                     	;# 
  4791  1E15                     	;# 
  4792  1E16                     	;# 
  4793  1E17                     	;# 
  4794  1E18                     	;# 
  4795  1E19                     	;# 
  4796  1E1A                     	;# 
  4797  1E1B                     	;# 
  4798  1E1C                     	;# 
  4799  1E1D                     	;# 
  4800  1E1E                     	;# 
  4801  1E1F                     	;# 
  4802  1E20                     	;# 
  4803  1E21                     	;# 
  4804  1E22                     	;# 
  4805  1E23                     	;# 
  4806  1E24                     	;# 
  4807  1E25                     	;# 
  4808  1E26                     	;# 
  4809  1E27                     	;# 
  4810  1E28                     	;# 
  4811  1E29                     	;# 
  4812  1E2A                     	;# 
  4813  1E2B                     	;# 
  4814  1E2C                     	;# 
  4815  1E2D                     	;# 
  4816  1E2E                     	;# 
  4817  1E2F                     	;# 
  4818  1E30                     	;# 
  4819  1E31                     	;# 
  4820  1E32                     	;# 
  4821  1E33                     	;# 
  4822  1E34                     	;# 
  4823  1E35                     	;# 
  4824  1E36                     	;# 
  4825  1E37                     	;# 
  4826  1E8F                     	;# 
  4827  1E90                     	;# 
  4828  1E91                     	;# 
  4829  1E92                     	;# 
  4830  1E93                     	;# 
  4831  1E94                     	;# 
  4832  1E95                     	;# 
  4833  1E96                     	;# 
  4834  1E97                     	;# 
  4835  1E9C                     	;# 
  4836  1E9D                     	;# 
  4837  1E9E                     	;# 
  4838  1EA1                     	;# 
  4839  1EA2                     	;# 
  4840  1EA3                     	;# 
  4841  1EA4                     	;# 
  4842  1EA5                     	;# 
  4843  1EA9                     	;# 
  4844  1EAA                     	;# 
  4845  1EAB                     	;# 
  4846  1EAC                     	;# 
  4847  1EB1                     	;# 
  4848  1EB2                     	;# 
  4849  1EB3                     	;# 
  4850  1EB8                     	;# 
  4851  1EB9                     	;# 
  4852  1EBA                     	;# 
  4853  1EBB                     	;# 
  4854  1EBC                     	;# 
  4855  1EBD                     	;# 
  4856  1EBE                     	;# 
  4857  1EC3                     	;# 
  4858  1EC5                     	;# 
  4859  1EC6                     	;# 
  4860  1EC7                     	;# 
  4861  1EC8                     	;# 
  4862  1EC9                     	;# 
  4863  1ECA                     	;# 
  4864  1ECB                     	;# 
  4865  1ECB                     	;# 
  4866  1ECB                     	;# 
  4867  1ECC                     	;# 
  4868  1ECC                     	;# 
  4869  1ECC                     	;# 
  4870  1ECD                     	;# 
  4871  1ECD                     	;# 
  4872  1ECE                     	;# 
  4873  1ECE                     	;# 
  4874  1F10                     	;# 
  4875  1F11                     	;# 
  4876  1F12                     	;# 
  4877  1F13                     	;# 
  4878  1F14                     	;# 
  4879  1F15                     	;# 
  4880  1F16                     	;# 
  4881  1F17                     	;# 
  4882  1F18                     	;# 
  4883  1F19                     	;# 
  4884  1F1A                     	;# 
  4885  1F1B                     	;# 
  4886  1F1C                     	;# 
  4887  1F1D                     	;# 
  4888  1F1E                     	;# 
  4889  1F1F                     	;# 
  4890  1F20                     	;# 
  4891  1F21                     	;# 
  4892  1F22                     	;# 
  4893  1F23                     	;# 
  4894  1F24                     	;# 
  4895  1F25                     	;# 
  4896  1F26                     	;# 
  4897  1F27                     	;# 
  4898  1F38                     	;# 
  4899  1F39                     	;# 
  4900  1F3A                     	;# 
  4901  1F3B                     	;# 
  4902  1F3C                     	;# 
  4903  1F3D                     	;# 
  4904  1F3E                     	;# 
  4905  1F3F                     	;# 
  4906  1F43                     	;# 
  4907  1F44                     	;# 
  4908  1F45                     	;# 
  4909  1F46                     	;# 
  4910  1F47                     	;# 
  4911  1F48                     	;# 
  4912  1F49                     	;# 
  4913  1F4A                     	;# 
  4914  1F4E                     	;# 
  4915  1F4F                     	;# 
  4916  1F50                     	;# 
  4917  1F51                     	;# 
  4918  1F52                     	;# 
  4919  1F53                     	;# 
  4920  1F54                     	;# 
  4921  1F55                     	;# 
  4922  1F65                     	;# 
  4923  1F66                     	;# 
  4924  1F67                     	;# 
  4925  1F68                     	;# 
  4926  1F69                     	;# 
  4927  1F6A                     	;# 
  4928  1F6B                     	;# 
  4929  1FE4                     	;# 
  4930  1FE5                     	;# 
  4931  1FE6                     	;# 
  4932  1FE7                     	;# 
  4933  1FE8                     	;# 
  4934  1FE8                     	;# 
  4935  1FE9                     	;# 
  4936  1FEA                     	;# 
  4937  1FEB                     	;# 
  4938  1FED                     	;# 
  4939  1FEE                     	;# 
  4940  1FEF                     	;# 
  4941  0000                     	;# 
  4942  0001                     	;# 
  4943  0002                     	;# 
  4944  0003                     	;# 
  4945  0004                     	;# 
  4946  0005                     	;# 
  4947  0006                     	;# 
  4948  0007                     	;# 
  4949  0008                     	;# 
  4950  0009                     	;# 
  4951  000A                     	;# 
  4952  000B                     	;# 
  4953  000C                     	;# 
  4954  000D                     	;# 
  4955  000E                     	;# 
  4956  0010                     	;# 
  4957  0012                     	;# 
  4958  0013                     	;# 
  4959  0014                     	;# 
  4960  0016                     	;# 
  4961  0018                     	;# 
  4962  0019                     	;# 
  4963  001A                     	;# 
  4964  001C                     	;# 
  4965  008C                     	;# 
  4966  008C                     	;# 
  4967  008D                     	;# 
  4968  008E                     	;# 
  4969  008E                     	;# 
  4970  008F                     	;# 
  4971  0090                     	;# 
  4972  0090                     	;# 
  4973  0091                     	;# 
  4974  0092                     	;# 
  4975  0092                     	;# 
  4976  0093                     	;# 
  4977  0094                     	;# 
  4978  0094                     	;# 
  4979  0095                     	;# 
  4980  0096                     	;# 
  4981  0096                     	;# 
  4982  0097                     	;# 
  4983  0098                     	;# 
  4984  0099                     	;# 
  4985  009A                     	;# 
  4986  009B                     	;# 
  4987  009B                     	;# 
  4988  009C                     	;# 
  4989  009D                     	;# 
  4990  009D                     	;# 
  4991  009E                     	;# 
  4992  009F                     	;# 
  4993  010C                     	;# 
  4994  010C                     	;# 
  4995  010D                     	;# 
  4996  010E                     	;# 
  4997  010F                     	;# 
  4998  010F                     	;# 
  4999  0110                     	;# 
  5000  0111                     	;# 
  5001  0112                     	;# 
  5002  0113                     	;# 
  5003  0114                     	;# 
  5004  0115                     	;# 
  5005  0116                     	;# 
  5006  0117                     	;# 
  5007  0118                     	;# 
  5008  0119                     	;# 
  5009  0119                     	;# 
  5010  0119                     	;# 
  5011  011A                     	;# 
  5012  011A                     	;# 
  5013  011A                     	;# 
  5014  011B                     	;# 
  5015  011B                     	;# 
  5016  011B                     	;# 
  5017  011B                     	;# 
  5018  011B                     	;# 
  5019  011C                     	;# 
  5020  011C                     	;# 
  5021  011C                     	;# 
  5022  011D                     	;# 
  5023  011D                     	;# 
  5024  011D                     	;# 
  5025  011E                     	;# 
  5026  011E                     	;# 
  5027  011E                     	;# 
  5028  011F                     	;# 
  5029  011F                     	;# 
  5030  011F                     	;# 
  5031  011F                     	;# 
  5032  011F                     	;# 
  5033  018C                     	;# 
  5034  018D                     	;# 
  5035  018E                     	;# 
  5036  018F                     	;# 
  5037  0190                     	;# 
  5038  0191                     	;# 
  5039  0192                     	;# 
  5040  0196                     	;# 
  5041  0197                     	;# 
  5042  0198                     	;# 
  5043  0199                     	;# 
  5044  019A                     	;# 
  5045  019B                     	;# 
  5046  019C                     	;# 
  5047  020C                     	;# 
  5048  020D                     	;# 
  5049  020E                     	;# 
  5050  020E                     	;# 
  5051  020F                     	;# 
  5052  020F                     	;# 
  5053  0210                     	;# 
  5054  0210                     	;# 
  5055  0211                     	;# 
  5056  0211                     	;# 
  5057  0212                     	;# 
  5058  0213                     	;# 
  5059  0214                     	;# 
  5060  0214                     	;# 
  5061  0215                     	;# 
  5062  0215                     	;# 
  5063  0216                     	;# 
  5064  0216                     	;# 
  5065  0217                     	;# 
  5066  0217                     	;# 
  5067  0218                     	;# 
  5068  0219                     	;# 
  5069  021A                     	;# 
  5070  021A                     	;# 
  5071  021B                     	;# 
  5072  021B                     	;# 
  5073  021C                     	;# 
  5074  021C                     	;# 
  5075  021D                     	;# 
  5076  021D                     	;# 
  5077  021E                     	;# 
  5078  021F                     	;# 
  5079  028C                     	;# 
  5080  028C                     	;# 
  5081  028D                     	;# 
  5082  028D                     	;# 
  5083  028E                     	;# 
  5084  028F                     	;# 
  5085  0290                     	;# 
  5086  0291                     	;# 
  5087  0292                     	;# 
  5088  0292                     	;# 
  5089  0293                     	;# 
  5090  0293                     	;# 
  5091  0294                     	;# 
  5092  0295                     	;# 
  5093  0296                     	;# 
  5094  0297                     	;# 
  5095  0298                     	;# 
  5096  0298                     	;# 
  5097  0299                     	;# 
  5098  0299                     	;# 
  5099  029A                     	;# 
  5100  029B                     	;# 
  5101  029C                     	;# 
  5102  029D                     	;# 
  5103  029F                     	;# 
  5104  030C                     	;# 
  5105  030C                     	;# 
  5106  030D                     	;# 
  5107  030E                     	;# 
  5108  030F                     	;# 
  5109  0310                     	;# 
  5110  0310                     	;# 
  5111  0311                     	;# 
  5112  0312                     	;# 
  5113  0313                     	;# 
  5114  0314                     	;# 
  5115  0314                     	;# 
  5116  0315                     	;# 
  5117  0316                     	;# 
  5118  0317                     	;# 
  5119  0318                     	;# 
  5120  0318                     	;# 
  5121  0319                     	;# 
  5122  031A                     	;# 
  5123  031B                     	;# 
  5124  031C                     	;# 
  5125  031C                     	;# 
  5126  031D                     	;# 
  5127  031E                     	;# 
  5128  031F                     	;# 
  5129  038C                     	;# 
  5130  038C                     	;# 
  5131  038D                     	;# 
  5132  038E                     	;# 
  5133  0390                     	;# 
  5134  0390                     	;# 
  5135  0391                     	;# 
  5136  0392                     	;# 
  5137  048C                     	;# 
  5138  048C                     	;# 
  5139  048D                     	;# 
  5140  048E                     	;# 
  5141  048F                     	;# 
  5142  048F                     	;# 
  5143  0490                     	;# 
  5144  0491                     	;# 
  5145  0492                     	;# 
  5146  0492                     	;# 
  5147  0493                     	;# 
  5148  0494                     	;# 
  5149  0495                     	;# 
  5150  0495                     	;# 
  5151  0496                     	;# 
  5152  0497                     	;# 
  5153  0498                     	;# 
  5154  0499                     	;# 
  5155  049A                     	;# 
  5156  049B                     	;# 
  5157  049C                     	;# 
  5158  049D                     	;# 
  5159  050C                     	;# 
  5160  050C                     	;# 
  5161  050D                     	;# 
  5162  050E                     	;# 
  5163  050F                     	;# 
  5164  050F                     	;# 
  5165  0510                     	;# 
  5166  0511                     	;# 
  5167  0512                     	;# 
  5168  0512                     	;# 
  5169  0513                     	;# 
  5170  0514                     	;# 
  5171  0515                     	;# 
  5172  0515                     	;# 
  5173  0516                     	;# 
  5174  0517                     	;# 
  5175  0518                     	;# 
  5176  0519                     	;# 
  5177  051A                     	;# 
  5178  051B                     	;# 
  5179  051C                     	;# 
  5180  051D                     	;# 
  5181  058C                     	;# 
  5182  058C                     	;# 
  5183  058D                     	;# 
  5184  058E                     	;# 
  5185  058F                     	;# 
  5186  058F                     	;# 
  5187  0590                     	;# 
  5188  0591                     	;# 
  5189  0592                     	;# 
  5190  0593                     	;# 
  5191  059C                     	;# 
  5192  059C                     	;# 
  5193  059D                     	;# 
  5194  059D                     	;# 
  5195  059E                     	;# 
  5196  059F                     	;# 
  5197  060C                     	;# 
  5198  060C                     	;# 
  5199  060D                     	;# 
  5200  060D                     	;# 
  5201  060E                     	;# 
  5202  060F                     	;# 
  5203  0610                     	;# 
  5204  0611                     	;# 
  5205  0612                     	;# 
  5206  0613                     	;# 
  5207  0614                     	;# 
  5208  0616                     	;# 
  5209  0616                     	;# 
  5210  0617                     	;# 
  5211  0617                     	;# 
  5212  0618                     	;# 
  5213  0619                     	;# 
  5214  061A                     	;# 
  5215  061B                     	;# 
  5216  061C                     	;# 
  5217  061D                     	;# 
  5218  061E                     	;# 
  5219  068C                     	;# 
  5220  068D                     	;# 
  5221  068E                     	;# 
  5222  068F                     	;# 
  5223  0690                     	;# 
  5224  0691                     	;# 
  5225  0692                     	;# 
  5226  0693                     	;# 
  5227  0694                     	;# 
  5228  070C                     	;# 
  5229  070D                     	;# 
  5230  070E                     	;# 
  5231  070F                     	;# 
  5232  0710                     	;# 
  5233  0711                     	;# 
  5234  0712                     	;# 
  5235  0713                     	;# 
  5236  0714                     	;# 
  5237  0716                     	;# 
  5238  0717                     	;# 
  5239  0718                     	;# 
  5240  0719                     	;# 
  5241  071A                     	;# 
  5242  071B                     	;# 
  5243  071C                     	;# 
  5244  071D                     	;# 
  5245  071E                     	;# 
  5246  0796                     	;# 
  5247  0797                     	;# 
  5248  0798                     	;# 
  5249  0799                     	;# 
  5250  079A                     	;# 
  5251  079B                     	;# 
  5252  079C                     	;# 
  5253  079D                     	;# 
  5254  080C                     	;# 
  5255  080D                     	;# 
  5256  080E                     	;# 
  5257  080F                     	;# 
  5258  0810                     	;# 
  5259  0811                     	;# 
  5260  0812                     	;# 
  5261  0813                     	;# 
  5262  0814                     	;# 
  5263  081A                     	;# 
  5264  081A                     	;# 
  5265  081B                     	;# 
  5266  081C                     	;# 
  5267  081C                     	;# 
  5268  081D                     	;# 
  5269  081E                     	;# 
  5270  081F                     	;# 
  5271  088C                     	;# 
  5272  088D                     	;# 
  5273  088E                     	;# 
  5274  088F                     	;# 
  5275  0890                     	;# 
  5276  0891                     	;# 
  5277  0892                     	;# 
  5278  0893                     	;# 
  5279  0895                     	;# 
  5280  0896                     	;# 
  5281  0897                     	;# 
  5282  0898                     	;# 
  5283  0899                     	;# 
  5284  089A                     	;# 
  5285  089B                     	;# 
  5286  090C                     	;# 
  5287  090E                     	;# 
  5288  090F                     	;# 
  5289  091F                     	;# 
  5290  098F                     	;# 
  5291  098F                     	;# 
  5292  0990                     	;# 
  5293  0991                     	;# 
  5294  0992                     	;# 
  5295  0993                     	;# 
  5296  0994                     	;# 
  5297  0995                     	;# 
  5298  0996                     	;# 
  5299  0997                     	;# 
  5300  0A19                     	;# 
  5301  0A19                     	;# 
  5302  0A1A                     	;# 
  5303  0A1A                     	;# 
  5304  0A1B                     	;# 
  5305  0A1B                     	;# 
  5306  0A1B                     	;# 
  5307  0A1C                     	;# 
  5308  0A1C                     	;# 
  5309  0A1D                     	;# 
  5310  0A1D                     	;# 
  5311  0A1E                     	;# 
  5312  0A1E                     	;# 
  5313  0A1F                     	;# 
  5314  0A1F                     	;# 
  5315  0A1F                     	;# 
  5316  1E0F                     	;# 
  5317  1E10                     	;# 
  5318  1E11                     	;# 
  5319  1E12                     	;# 
  5320  1E13                     	;# 
  5321  1E14                     	;# 
  5322  1E15                     	;# 
  5323  1E16                     	;# 
  5324  1E17                     	;# 
  5325  1E18                     	;# 
  5326  1E19                     	;# 
  5327  1E1A                     	;# 
  5328  1E1B                     	;# 
  5329  1E1C                     	;# 
  5330  1E1D                     	;# 
  5331  1E1E                     	;# 
  5332  1E1F                     	;# 
  5333  1E20                     	;# 
  5334  1E21                     	;# 
  5335  1E22                     	;# 
  5336  1E23                     	;# 
  5337  1E24                     	;# 
  5338  1E25                     	;# 
  5339  1E26                     	;# 
  5340  1E27                     	;# 
  5341  1E28                     	;# 
  5342  1E29                     	;# 
  5343  1E2A                     	;# 
  5344  1E2B                     	;# 
  5345  1E2C                     	;# 
  5346  1E2D                     	;# 
  5347  1E2E                     	;# 
  5348  1E2F                     	;# 
  5349  1E30                     	;# 
  5350  1E31                     	;# 
  5351  1E32                     	;# 
  5352  1E33                     	;# 
  5353  1E34                     	;# 
  5354  1E35                     	;# 
  5355  1E36                     	;# 
  5356  1E37                     	;# 
  5357  1E8F                     	;# 
  5358  1E90                     	;# 
  5359  1E91                     	;# 
  5360  1E92                     	;# 
  5361  1E93                     	;# 
  5362  1E94                     	;# 
  5363  1E95                     	;# 
  5364  1E96                     	;# 
  5365  1E97                     	;# 
  5366  1E9C                     	;# 
  5367  1E9D                     	;# 
  5368  1E9E                     	;# 
  5369  1EA1                     	;# 
  5370  1EA2                     	;# 
  5371  1EA3                     	;# 
  5372  1EA4                     	;# 
  5373  1EA5                     	;# 
  5374  1EA9                     	;# 
  5375  1EAA                     	;# 
  5376  1EAB                     	;# 
  5377  1EAC                     	;# 
  5378  1EB1                     	;# 
  5379  1EB2                     	;# 
  5380  1EB3                     	;# 
  5381  1EB8                     	;# 
  5382  1EB9                     	;# 
  5383  1EBA                     	;# 
  5384  1EBB                     	;# 
  5385  1EBC                     	;# 
  5386  1EBD                     	;# 
  5387  1EBE                     	;# 
  5388  1EC3                     	;# 
  5389  1EC5                     	;# 
  5390  1EC6                     	;# 
  5391  1EC7                     	;# 
  5392  1EC8                     	;# 
  5393  1EC9                     	;# 
  5394  1ECA                     	;# 
  5395  1ECB                     	;# 
  5396  1ECB                     	;# 
  5397  1ECB                     	;# 
  5398  1ECC                     	;# 
  5399  1ECC                     	;# 
  5400  1ECC                     	;# 
  5401  1ECD                     	;# 
  5402  1ECD                     	;# 
  5403  1ECE                     	;# 
  5404  1ECE                     	;# 
  5405  1F10                     	;# 
  5406  1F11                     	;# 
  5407  1F12                     	;# 
  5408  1F13                     	;# 
  5409  1F14                     	;# 
  5410  1F15                     	;# 
  5411  1F16                     	;# 
  5412  1F17                     	;# 
  5413  1F18                     	;# 
  5414  1F19                     	;# 
  5415  1F1A                     	;# 
  5416  1F1B                     	;# 
  5417  1F1C                     	;# 
  5418  1F1D                     	;# 
  5419  1F1E                     	;# 
  5420  1F1F                     	;# 
  5421  1F20                     	;# 
  5422  1F21                     	;# 
  5423  1F22                     	;# 
  5424  1F23                     	;# 
  5425  1F24                     	;# 
  5426  1F25                     	;# 
  5427  1F26                     	;# 
  5428  1F27                     	;# 
  5429  1F38                     	;# 
  5430  1F39                     	;# 
  5431  1F3A                     	;# 
  5432  1F3B                     	;# 
  5433  1F3C                     	;# 
  5434  1F3D                     	;# 
  5435  1F3E                     	;# 
  5436  1F3F                     	;# 
  5437  1F43                     	;# 
  5438  1F44                     	;# 
  5439  1F45                     	;# 
  5440  1F46                     	;# 
  5441  1F47                     	;# 
  5442  1F48                     	;# 
  5443  1F49                     	;# 
  5444  1F4A                     	;# 
  5445  1F4E                     	;# 
  5446  1F4F                     	;# 
  5447  1F50                     	;# 
  5448  1F51                     	;# 
  5449  1F52                     	;# 
  5450  1F53                     	;# 
  5451  1F54                     	;# 
  5452  1F55                     	;# 
  5453  1F65                     	;# 
  5454  1F66                     	;# 
  5455  1F67                     	;# 
  5456  1F68                     	;# 
  5457  1F69                     	;# 
  5458  1F6A                     	;# 
  5459  1F6B                     	;# 
  5460  1FE4                     	;# 
  5461  1FE5                     	;# 
  5462  1FE6                     	;# 
  5463  1FE7                     	;# 
  5464  1FE8                     	;# 
  5465  1FE8                     	;# 
  5466  1FE9                     	;# 
  5467  1FEA                     	;# 
  5468  1FEB                     	;# 
  5469  1FED                     	;# 
  5470  1FEE                     	;# 
  5471  1FEF                     	;# 
  5472  0000                     	;# 
  5473  0001                     	;# 
  5474  0002                     	;# 
  5475  0003                     	;# 
  5476  0004                     	;# 
  5477  0005                     	;# 
  5478  0006                     	;# 
  5479  0007                     	;# 
  5480  0008                     	;# 
  5481  0009                     	;# 
  5482  000A                     	;# 
  5483  000B                     	;# 
  5484  000C                     	;# 
  5485  000D                     	;# 
  5486  000E                     	;# 
  5487  0010                     	;# 
  5488  0012                     	;# 
  5489  0013                     	;# 
  5490  0014                     	;# 
  5491  0016                     	;# 
  5492  0018                     	;# 
  5493  0019                     	;# 
  5494  001A                     	;# 
  5495  001C                     	;# 
  5496  008C                     	;# 
  5497  008C                     	;# 
  5498  008D                     	;# 
  5499  008E                     	;# 
  5500  008E                     	;# 
  5501  008F                     	;# 
  5502  0090                     	;# 
  5503  0090                     	;# 
  5504  0091                     	;# 
  5505  0092                     	;# 
  5506  0092                     	;# 
  5507  0093                     	;# 
  5508  0094                     	;# 
  5509  0094                     	;# 
  5510  0095                     	;# 
  5511  0096                     	;# 
  5512  0096                     	;# 
  5513  0097                     	;# 
  5514  0098                     	;# 
  5515  0099                     	;# 
  5516  009A                     	;# 
  5517  009B                     	;# 
  5518  009B                     	;# 
  5519  009C                     	;# 
  5520  009D                     	;# 
  5521  009D                     	;# 
  5522  009E                     	;# 
  5523  009F                     	;# 
  5524  010C                     	;# 
  5525  010C                     	;# 
  5526  010D                     	;# 
  5527  010E                     	;# 
  5528  010F                     	;# 
  5529  010F                     	;# 
  5530  0110                     	;# 
  5531  0111                     	;# 
  5532  0112                     	;# 
  5533  0113                     	;# 
  5534  0114                     	;# 
  5535  0115                     	;# 
  5536  0116                     	;# 
  5537  0117                     	;# 
  5538  0118                     	;# 
  5539  0119                     	;# 
  5540  0119                     	;# 
  5541  0119                     	;# 
  5542  011A                     	;# 
  5543  011A                     	;# 
  5544  011A                     	;# 
  5545  011B                     	;# 
  5546  011B                     	;# 
  5547  011B                     	;# 
  5548  011B                     	;# 
  5549  011B                     	;# 
  5550  011C                     	;# 
  5551  011C                     	;# 
  5552  011C                     	;# 
  5553  011D                     	;# 
  5554  011D                     	;# 
  5555  011D                     	;# 
  5556  011E                     	;# 
  5557  011E                     	;# 
  5558  011E                     	;# 
  5559  011F                     	;# 
  5560  011F                     	;# 
  5561  011F                     	;# 
  5562  011F                     	;# 
  5563  011F                     	;# 
  5564  018C                     	;# 
  5565  018D                     	;# 
  5566  018E                     	;# 
  5567  018F                     	;# 
  5568  0190                     	;# 
  5569  0191                     	;# 
  5570  0192                     	;# 
  5571  0196                     	;# 
  5572  0197                     	;# 
  5573  0198                     	;# 
  5574  0199                     	;# 
  5575  019A                     	;# 
  5576  019B                     	;# 
  5577  019C                     	;# 
  5578  020C                     	;# 
  5579  020D                     	;# 
  5580  020E                     	;# 
  5581  020E                     	;# 
  5582  020F                     	;# 
  5583  020F                     	;# 
  5584  0210                     	;# 
  5585  0210                     	;# 
  5586  0211                     	;# 
  5587  0211                     	;# 
  5588  0212                     	;# 
  5589  0213                     	;# 
  5590  0214                     	;# 
  5591  0214                     	;# 
  5592  0215                     	;# 
  5593  0215                     	;# 
  5594  0216                     	;# 
  5595  0216                     	;# 
  5596  0217                     	;# 
  5597  0217                     	;# 
  5598  0218                     	;# 
  5599  0219                     	;# 
  5600  021A                     	;# 
  5601  021A                     	;# 
  5602  021B                     	;# 
  5603  021B                     	;# 
  5604  021C                     	;# 
  5605  021C                     	;# 
  5606  021D                     	;# 
  5607  021D                     	;# 
  5608  021E                     	;# 
  5609  021F                     	;# 
  5610  028C                     	;# 
  5611  028C                     	;# 
  5612  028D                     	;# 
  5613  028D                     	;# 
  5614  028E                     	;# 
  5615  028F                     	;# 
  5616  0290                     	;# 
  5617  0291                     	;# 
  5618  0292                     	;# 
  5619  0292                     	;# 
  5620  0293                     	;# 
  5621  0293                     	;# 
  5622  0294                     	;# 
  5623  0295                     	;# 
  5624  0296                     	;# 
  5625  0297                     	;# 
  5626  0298                     	;# 
  5627  0298                     	;# 
  5628  0299                     	;# 
  5629  0299                     	;# 
  5630  029A                     	;# 
  5631  029B                     	;# 
  5632  029C                     	;# 
  5633  029D                     	;# 
  5634  029F                     	;# 
  5635  030C                     	;# 
  5636  030C                     	;# 
  5637  030D                     	;# 
  5638  030E                     	;# 
  5639  030F                     	;# 
  5640  0310                     	;# 
  5641  0310                     	;# 
  5642  0311                     	;# 
  5643  0312                     	;# 
  5644  0313                     	;# 
  5645  0314                     	;# 
  5646  0314                     	;# 
  5647  0315                     	;# 
  5648  0316                     	;# 
  5649  0317                     	;# 
  5650  0318                     	;# 
  5651  0318                     	;# 
  5652  0319                     	;# 
  5653  031A                     	;# 
  5654  031B                     	;# 
  5655  031C                     	;# 
  5656  031C                     	;# 
  5657  031D                     	;# 
  5658  031E                     	;# 
  5659  031F                     	;# 
  5660  038C                     	;# 
  5661  038C                     	;# 
  5662  038D                     	;# 
  5663  038E                     	;# 
  5664  0390                     	;# 
  5665  0390                     	;# 
  5666  0391                     	;# 
  5667  0392                     	;# 
  5668  048C                     	;# 
  5669  048C                     	;# 
  5670  048D                     	;# 
  5671  048E                     	;# 
  5672  048F                     	;# 
  5673  048F                     	;# 
  5674  0490                     	;# 
  5675  0491                     	;# 
  5676  0492                     	;# 
  5677  0492                     	;# 
  5678  0493                     	;# 
  5679  0494                     	;# 
  5680  0495                     	;# 
  5681  0495                     	;# 
  5682  0496                     	;# 
  5683  0497                     	;# 
  5684  0498                     	;# 
  5685  0499                     	;# 
  5686  049A                     	;# 
  5687  049B                     	;# 
  5688  049C                     	;# 
  5689  049D                     	;# 
  5690  050C                     	;# 
  5691  050C                     	;# 
  5692  050D                     	;# 
  5693  050E                     	;# 
  5694  050F                     	;# 
  5695  050F                     	;# 
  5696  0510                     	;# 
  5697  0511                     	;# 
  5698  0512                     	;# 
  5699  0512                     	;# 
  5700  0513                     	;# 
  5701  0514                     	;# 
  5702  0515                     	;# 
  5703  0515                     	;# 
  5704  0516                     	;# 
  5705  0517                     	;# 
  5706  0518                     	;# 
  5707  0519                     	;# 
  5708  051A                     	;# 
  5709  051B                     	;# 
  5710  051C                     	;# 
  5711  051D                     	;# 
  5712  058C                     	;# 
  5713  058C                     	;# 
  5714  058D                     	;# 
  5715  058E                     	;# 
  5716  058F                     	;# 
  5717  058F                     	;# 
  5718  0590                     	;# 
  5719  0591                     	;# 
  5720  0592                     	;# 
  5721  0593                     	;# 
  5722  059C                     	;# 
  5723  059C                     	;# 
  5724  059D                     	;# 
  5725  059D                     	;# 
  5726  059E                     	;# 
  5727  059F                     	;# 
  5728  060C                     	;# 
  5729  060C                     	;# 
  5730  060D                     	;# 
  5731  060D                     	;# 
  5732  060E                     	;# 
  5733  060F                     	;# 
  5734  0610                     	;# 
  5735  0611                     	;# 
  5736  0612                     	;# 
  5737  0613                     	;# 
  5738  0614                     	;# 
  5739  0616                     	;# 
  5740  0616                     	;# 
  5741  0617                     	;# 
  5742  0617                     	;# 
  5743  0618                     	;# 
  5744  0619                     	;# 
  5745  061A                     	;# 
  5746  061B                     	;# 
  5747  061C                     	;# 
  5748  061D                     	;# 
  5749  061E                     	;# 
  5750  068C                     	;# 
  5751  068D                     	;# 
  5752  068E                     	;# 
  5753  068F                     	;# 
  5754  0690                     	;# 
  5755  0691                     	;# 
  5756  0692                     	;# 
  5757  0693                     	;# 
  5758  0694                     	;# 
  5759  070C                     	;# 
  5760  070D                     	;# 
  5761  070E                     	;# 
  5762  070F                     	;# 
  5763  0710                     	;# 
  5764  0711                     	;# 
  5765  0712                     	;# 
  5766  0713                     	;# 
  5767  0714                     	;# 
  5768  0716                     	;# 
  5769  0717                     	;# 
  5770  0718                     	;# 
  5771  0719                     	;# 
  5772  071A                     	;# 
  5773  071B                     	;# 
  5774  071C                     	;# 
  5775  071D                     	;# 
  5776  071E                     	;# 
  5777  0796                     	;# 
  5778  0797                     	;# 
  5779  0798                     	;# 
  5780  0799                     	;# 
  5781  079A                     	;# 
  5782  079B                     	;# 
  5783  079C                     	;# 
  5784  079D                     	;# 
  5785  080C                     	;# 
  5786  080D                     	;# 
  5787  080E                     	;# 
  5788  080F                     	;# 
  5789  0810                     	;# 
  5790  0811                     	;# 
  5791  0812                     	;# 
  5792  0813                     	;# 
  5793  0814                     	;# 
  5794  081A                     	;# 
  5795  081A                     	;# 
  5796  081B                     	;# 
  5797  081C                     	;# 
  5798  081C                     	;# 
  5799  081D                     	;# 
  5800  081E                     	;# 
  5801  081F                     	;# 
  5802  088C                     	;# 
  5803  088D                     	;# 
  5804  088E                     	;# 
  5805  088F                     	;# 
  5806  0890                     	;# 
  5807  0891                     	;# 
  5808  0892                     	;# 
  5809  0893                     	;# 
  5810  0895                     	;# 
  5811  0896                     	;# 
  5812  0897                     	;# 
  5813  0898                     	;# 
  5814  0899                     	;# 
  5815  089A                     	;# 
  5816  089B                     	;# 
  5817  090C                     	;# 
  5818  090E                     	;# 
  5819  090F                     	;# 
  5820  091F                     	;# 
  5821  098F                     	;# 
  5822  098F                     	;# 
  5823  0990                     	;# 
  5824  0991                     	;# 
  5825  0992                     	;# 
  5826  0993                     	;# 
  5827  0994                     	;# 
  5828  0995                     	;# 
  5829  0996                     	;# 
  5830  0997                     	;# 
  5831  0A19                     	;# 
  5832  0A19                     	;# 
  5833  0A1A                     	;# 
  5834  0A1A                     	;# 
  5835  0A1B                     	;# 
  5836  0A1B                     	;# 
  5837  0A1B                     	;# 
  5838  0A1C                     	;# 
  5839  0A1C                     	;# 
  5840  0A1D                     	;# 
  5841  0A1D                     	;# 
  5842  0A1E                     	;# 
  5843  0A1E                     	;# 
  5844  0A1F                     	;# 
  5845  0A1F                     	;# 
  5846  0A1F                     	;# 
  5847  1E0F                     	;# 
  5848  1E10                     	;# 
  5849  1E11                     	;# 
  5850  1E12                     	;# 
  5851  1E13                     	;# 
  5852  1E14                     	;# 
  5853  1E15                     	;# 
  5854  1E16                     	;# 
  5855  1E17                     	;# 
  5856  1E18                     	;# 
  5857  1E19                     	;# 
  5858  1E1A                     	;# 
  5859  1E1B                     	;# 
  5860  1E1C                     	;# 
  5861  1E1D                     	;# 
  5862  1E1E                     	;# 
  5863  1E1F                     	;# 
  5864  1E20                     	;# 
  5865  1E21                     	;# 
  5866  1E22                     	;# 
  5867  1E23                     	;# 
  5868  1E24                     	;# 
  5869  1E25                     	;# 
  5870  1E26                     	;# 
  5871  1E27                     	;# 
  5872  1E28                     	;# 
  5873  1E29                     	;# 
  5874  1E2A                     	;# 
  5875  1E2B                     	;# 
  5876  1E2C                     	;# 
  5877  1E2D                     	;# 
  5878  1E2E                     	;# 
  5879  1E2F                     	;# 
  5880  1E30                     	;# 
  5881  1E31                     	;# 
  5882  1E32                     	;# 
  5883  1E33                     	;# 
  5884  1E34                     	;# 
  5885  1E35                     	;# 
  5886  1E36                     	;# 
  5887  1E37                     	;# 
  5888  1E8F                     	;# 
  5889  1E90                     	;# 
  5890  1E91                     	;# 
  5891  1E92                     	;# 
  5892  1E93                     	;# 
  5893  1E94                     	;# 
  5894  1E95                     	;# 
  5895  1E96                     	;# 
  5896  1E97                     	;# 
  5897  1E9C                     	;# 
  5898  1E9D                     	;# 
  5899  1E9E                     	;# 
  5900  1EA1                     	;# 
  5901  1EA2                     	;# 
  5902  1EA3                     	;# 
  5903  1EA4                     	;# 
  5904  1EA5                     	;# 
  5905  1EA9                     	;# 
  5906  1EAA                     	;# 
  5907  1EAB                     	;# 
  5908  1EAC                     	;# 
  5909  1EB1                     	;# 
  5910  1EB2                     	;# 
  5911  1EB3                     	;# 
  5912  1EB8                     	;# 
  5913  1EB9                     	;# 
  5914  1EBA                     	;# 
  5915  1EBB                     	;# 
  5916  1EBC                     	;# 
  5917  1EBD                     	;# 
  5918  1EBE                     	;# 
  5919  1EC3                     	;# 
  5920  1EC5                     	;# 
  5921  1EC6                     	;# 
  5922  1EC7                     	;# 
  5923  1EC8                     	;# 
  5924  1EC9                     	;# 
  5925  1ECA                     	;# 
  5926  1ECB                     	;# 
  5927  1ECB                     	;# 
  5928  1ECB                     	;# 
  5929  1ECC                     	;# 
  5930  1ECC                     	;# 
  5931  1ECC                     	;# 
  5932  1ECD                     	;# 
  5933  1ECD                     	;# 
  5934  1ECE                     	;# 
  5935  1ECE                     	;# 
  5936  1F10                     	;# 
  5937  1F11                     	;# 
  5938  1F12                     	;# 
  5939  1F13                     	;# 
  5940  1F14                     	;# 
  5941  1F15                     	;# 
  5942  1F16                     	;# 
  5943  1F17                     	;# 
  5944  1F18                     	;# 
  5945  1F19                     	;# 
  5946  1F1A                     	;# 
  5947  1F1B                     	;# 
  5948  1F1C                     	;# 
  5949  1F1D                     	;# 
  5950  1F1E                     	;# 
  5951  1F1F                     	;# 
  5952  1F20                     	;# 
  5953  1F21                     	;# 
  5954  1F22                     	;# 
  5955  1F23                     	;# 
  5956  1F24                     	;# 
  5957  1F25                     	;# 
  5958  1F26                     	;# 
  5959  1F27                     	;# 
  5960  1F38                     	;# 
  5961  1F39                     	;# 
  5962  1F3A                     	;# 
  5963  1F3B                     	;# 
  5964  1F3C                     	;# 
  5965  1F3D                     	;# 
  5966  1F3E                     	;# 
  5967  1F3F                     	;# 
  5968  1F43                     	;# 
  5969  1F44                     	;# 
  5970  1F45                     	;# 
  5971  1F46                     	;# 
  5972  1F47                     	;# 
  5973  1F48                     	;# 
  5974  1F49                     	;# 
  5975  1F4A                     	;# 
  5976  1F4E                     	;# 
  5977  1F4F                     	;# 
  5978  1F50                     	;# 
  5979  1F51                     	;# 
  5980  1F52                     	;# 
  5981  1F53                     	;# 
  5982  1F54                     	;# 
  5983  1F55                     	;# 
  5984  1F65                     	;# 
  5985  1F66                     	;# 
  5986  1F67                     	;# 
  5987  1F68                     	;# 
  5988  1F69                     	;# 
  5989  1F6A                     	;# 
  5990  1F6B                     	;# 
  5991  1FE4                     	;# 
  5992  1FE5                     	;# 
  5993  1FE6                     	;# 
  5994  1FE7                     	;# 
  5995  1FE8                     	;# 
  5996  1FE8                     	;# 
  5997  1FE9                     	;# 
  5998  1FEA                     	;# 
  5999  1FEB                     	;# 
  6000  1FED                     	;# 
  6001  1FEE                     	;# 
  6002  1FEF                     	;# 
  6003  0000                     	;# 
  6004  0001                     	;# 
  6005  0002                     	;# 
  6006  0003                     	;# 
  6007  0004                     	;# 
  6008  0005                     	;# 
  6009  0006                     	;# 
  6010  0007                     	;# 
  6011  0008                     	;# 
  6012  0009                     	;# 
  6013  000A                     	;# 
  6014  000B                     	;# 
  6015  000C                     	;# 
  6016  000D                     	;# 
  6017  000E                     	;# 
  6018  0010                     	;# 
  6019  0012                     	;# 
  6020  0013                     	;# 
  6021  0014                     	;# 
  6022  0016                     	;# 
  6023  0018                     	;# 
  6024  0019                     	;# 
  6025  001A                     	;# 
  6026  001C                     	;# 
  6027  008C                     	;# 
  6028  008C                     	;# 
  6029  008D                     	;# 
  6030  008E                     	;# 
  6031  008E                     	;# 
  6032  008F                     	;# 
  6033  0090                     	;# 
  6034  0090                     	;# 
  6035  0091                     	;# 
  6036  0092                     	;# 
  6037  0092                     	;# 
  6038  0093                     	;# 
  6039  0094                     	;# 
  6040  0094                     	;# 
  6041  0095                     	;# 
  6042  0096                     	;# 
  6043  0096                     	;# 
  6044  0097                     	;# 
  6045  0098                     	;# 
  6046  0099                     	;# 
  6047  009A                     	;# 
  6048  009B                     	;# 
  6049  009B                     	;# 
  6050  009C                     	;# 
  6051  009D                     	;# 
  6052  009D                     	;# 
  6053  009E                     	;# 
  6054  009F                     	;# 
  6055  010C                     	;# 
  6056  010C                     	;# 
  6057  010D                     	;# 
  6058  010E                     	;# 
  6059  010F                     	;# 
  6060  010F                     	;# 
  6061  0110                     	;# 
  6062  0111                     	;# 
  6063  0112                     	;# 
  6064  0113                     	;# 
  6065  0114                     	;# 
  6066  0115                     	;# 
  6067  0116                     	;# 
  6068  0117                     	;# 
  6069  0118                     	;# 
  6070  0119                     	;# 
  6071  0119                     	;# 
  6072  0119                     	;# 
  6073  011A                     	;# 
  6074  011A                     	;# 
  6075  011A                     	;# 
  6076  011B                     	;# 
  6077  011B                     	;# 
  6078  011B                     	;# 
  6079  011B                     	;# 
  6080  011B                     	;# 
  6081  011C                     	;# 
  6082  011C                     	;# 
  6083  011C                     	;# 
  6084  011D                     	;# 
  6085  011D                     	;# 
  6086  011D                     	;# 
  6087  011E                     	;# 
  6088  011E                     	;# 
  6089  011E                     	;# 
  6090  011F                     	;# 
  6091  011F                     	;# 
  6092  011F                     	;# 
  6093  011F                     	;# 
  6094  011F                     	;# 
  6095  018C                     	;# 
  6096  018D                     	;# 
  6097  018E                     	;# 
  6098  018F                     	;# 
  6099  0190                     	;# 
  6100  0191                     	;# 
  6101  0192                     	;# 
  6102  0196                     	;# 
  6103  0197                     	;# 
  6104  0198                     	;# 
  6105  0199                     	;# 
  6106  019A                     	;# 
  6107  019B                     	;# 
  6108  019C                     	;# 
  6109  020C                     	;# 
  6110  020D                     	;# 
  6111  020E                     	;# 
  6112  020E                     	;# 
  6113  020F                     	;# 
  6114  020F                     	;# 
  6115  0210                     	;# 
  6116  0210                     	;# 
  6117  0211                     	;# 
  6118  0211                     	;# 
  6119  0212                     	;# 
  6120  0213                     	;# 
  6121  0214                     	;# 
  6122  0214                     	;# 
  6123  0215                     	;# 
  6124  0215                     	;# 
  6125  0216                     	;# 
  6126  0216                     	;# 
  6127  0217                     	;# 
  6128  0217                     	;# 
  6129  0218                     	;# 
  6130  0219                     	;# 
  6131  021A                     	;# 
  6132  021A                     	;# 
  6133  021B                     	;# 
  6134  021B                     	;# 
  6135  021C                     	;# 
  6136  021C                     	;# 
  6137  021D                     	;# 
  6138  021D                     	;# 
  6139  021E                     	;# 
  6140  021F                     	;# 
  6141  028C                     	;# 
  6142  028C                     	;# 
  6143  028D                     	;# 
  6144  028D                     	;# 
  6145  028E                     	;# 
  6146  028F                     	;# 
  6147  0290                     	;# 
  6148  0291                     	;# 
  6149  0292                     	;# 
  6150  0292                     	;# 
  6151  0293                     	;# 
  6152  0293                     	;# 
  6153  0294                     	;# 
  6154  0295                     	;# 
  6155  0296                     	;# 
  6156  0297                     	;# 
  6157  0298                     	;# 
  6158  0298                     	;# 
  6159  0299                     	;# 
  6160  0299                     	;# 
  6161  029A                     	;# 
  6162  029B                     	;# 
  6163  029C                     	;# 
  6164  029D                     	;# 
  6165  029F                     	;# 
  6166  030C                     	;# 
  6167  030C                     	;# 
  6168  030D                     	;# 
  6169  030E                     	;# 
  6170  030F                     	;# 
  6171  0310                     	;# 
  6172  0310                     	;# 
  6173  0311                     	;# 
  6174  0312                     	;# 
  6175  0313                     	;# 
  6176  0314                     	;# 
  6177  0314                     	;# 
  6178  0315                     	;# 
  6179  0316                     	;# 
  6180  0317                     	;# 
  6181  0318                     	;# 
  6182  0318                     	;# 
  6183  0319                     	;# 
  6184  031A                     	;# 
  6185  031B                     	;# 
  6186  031C                     	;# 
  6187  031C                     	;# 
  6188  031D                     	;# 
  6189  031E                     	;# 
  6190  031F                     	;# 
  6191  038C                     	;# 
  6192  038C                     	;# 
  6193  038D                     	;# 
  6194  038E                     	;# 
  6195  0390                     	;# 
  6196  0390                     	;# 
  6197  0391                     	;# 
  6198  0392                     	;# 
  6199  048C                     	;# 
  6200  048C                     	;# 
  6201  048D                     	;# 
  6202  048E                     	;# 
  6203  048F                     	;# 
  6204  048F                     	;# 
  6205  0490                     	;# 
  6206  0491                     	;# 
  6207  0492                     	;# 
  6208  0492                     	;# 
  6209  0493                     	;# 
  6210  0494                     	;# 
  6211  0495                     	;# 
  6212  0495                     	;# 
  6213  0496                     	;# 
  6214  0497                     	;# 
  6215  0498                     	;# 
  6216  0499                     	;# 
  6217  049A                     	;# 
  6218  049B                     	;# 
  6219  049C                     	;# 
  6220  049D                     	;# 
  6221  050C                     	;# 
  6222  050C                     	;# 
  6223  050D                     	;# 
  6224  050E                     	;# 
  6225  050F                     	;# 
  6226  050F                     	;# 
  6227  0510                     	;# 
  6228  0511                     	;# 
  6229  0512                     	;# 
  6230  0512                     	;# 
  6231  0513                     	;# 
  6232  0514                     	;# 
  6233  0515                     	;# 
  6234  0515                     	;# 
  6235  0516                     	;# 
  6236  0517                     	;# 
  6237  0518                     	;# 
  6238  0519                     	;# 
  6239  051A                     	;# 
  6240  051B                     	;# 
  6241  051C                     	;# 
  6242  051D                     	;# 
  6243  058C                     	;# 
  6244  058C                     	;# 
  6245  058D                     	;# 
  6246  058E                     	;# 
  6247  058F                     	;# 
  6248  058F                     	;# 
  6249  0590                     	;# 
  6250  0591                     	;# 
  6251  0592                     	;# 
  6252  0593                     	;# 
  6253  059C                     	;# 
  6254  059C                     	;# 
  6255  059D                     	;# 
  6256  059D                     	;# 
  6257  059E                     	;# 
  6258  059F                     	;# 
  6259  060C                     	;# 
  6260  060C                     	;# 
  6261  060D                     	;# 
  6262  060D                     	;# 
  6263  060E                     	;# 
  6264  060F                     	;# 
  6265  0610                     	;# 
  6266  0611                     	;# 
  6267  0612                     	;# 
  6268  0613                     	;# 
  6269  0614                     	;# 
  6270  0616                     	;# 
  6271  0616                     	;# 
  6272  0617                     	;# 
  6273  0617                     	;# 
  6274  0618                     	;# 
  6275  0619                     	;# 
  6276  061A                     	;# 
  6277  061B                     	;# 
  6278  061C                     	;# 
  6279  061D                     	;# 
  6280  061E                     	;# 
  6281  068C                     	;# 
  6282  068D                     	;# 
  6283  068E                     	;# 
  6284  068F                     	;# 
  6285  0690                     	;# 
  6286  0691                     	;# 
  6287  0692                     	;# 
  6288  0693                     	;# 
  6289  0694                     	;# 
  6290  070C                     	;# 
  6291  070D                     	;# 
  6292  070E                     	;# 
  6293  070F                     	;# 
  6294  0710                     	;# 
  6295  0711                     	;# 
  6296  0712                     	;# 
  6297  0713                     	;# 
  6298  0714                     	;# 
  6299  0716                     	;# 
  6300  0717                     	;# 
  6301  0718                     	;# 
  6302  0719                     	;# 
  6303  071A                     	;# 
  6304  071B                     	;# 
  6305  071C                     	;# 
  6306  071D                     	;# 
  6307  071E                     	;# 
  6308  0796                     	;# 
  6309  0797                     	;# 
  6310  0798                     	;# 
  6311  0799                     	;# 
  6312  079A                     	;# 
  6313  079B                     	;# 
  6314  079C                     	;# 
  6315  079D                     	;# 
  6316  080C                     	;# 
  6317  080D                     	;# 
  6318  080E                     	;# 
  6319  080F                     	;# 
  6320  0810                     	;# 
  6321  0811                     	;# 
  6322  0812                     	;# 
  6323  0813                     	;# 
  6324  0814                     	;# 
  6325  081A                     	;# 
  6326  081A                     	;# 
  6327  081B                     	;# 
  6328  081C                     	;# 
  6329  081C                     	;# 
  6330  081D                     	;# 
  6331  081E                     	;# 
  6332  081F                     	;# 
  6333  088C                     	;# 
  6334  088D                     	;# 
  6335  088E                     	;# 
  6336  088F                     	;# 
  6337  0890                     	;# 
  6338  0891                     	;# 
  6339  0892                     	;# 
  6340  0893                     	;# 
  6341  0895                     	;# 
  6342  0896                     	;# 
  6343  0897                     	;# 
  6344  0898                     	;# 
  6345  0899                     	;# 
  6346  089A                     	;# 
  6347  089B                     	;# 
  6348  090C                     	;# 
  6349  090E                     	;# 
  6350  090F                     	;# 
  6351  091F                     	;# 
  6352  098F                     	;# 
  6353  098F                     	;# 
  6354  0990                     	;# 
  6355  0991                     	;# 
  6356  0992                     	;# 
  6357  0993                     	;# 
  6358  0994                     	;# 
  6359  0995                     	;# 
  6360  0996                     	;# 
  6361  0997                     	;# 
  6362  0A19                     	;# 
  6363  0A19                     	;# 
  6364  0A1A                     	;# 
  6365  0A1A                     	;# 
  6366  0A1B                     	;# 
  6367  0A1B                     	;# 
  6368  0A1B                     	;# 
  6369  0A1C                     	;# 
  6370  0A1C                     	;# 
  6371  0A1D                     	;# 
  6372  0A1D                     	;# 
  6373  0A1E                     	;# 
  6374  0A1E                     	;# 
  6375  0A1F                     	;# 
  6376  0A1F                     	;# 
  6377  0A1F                     	;# 
  6378  1E0F                     	;# 
  6379  1E10                     	;# 
  6380  1E11                     	;# 
  6381  1E12                     	;# 
  6382  1E13                     	;# 
  6383  1E14                     	;# 
  6384  1E15                     	;# 
  6385  1E16                     	;# 
  6386  1E17                     	;# 
  6387  1E18                     	;# 
  6388  1E19                     	;# 
  6389  1E1A                     	;# 
  6390  1E1B                     	;# 
  6391  1E1C                     	;# 
  6392  1E1D                     	;# 
  6393  1E1E                     	;# 
  6394  1E1F                     	;# 
  6395  1E20                     	;# 
  6396  1E21                     	;# 
  6397  1E22                     	;# 
  6398  1E23                     	;# 
  6399  1E24                     	;# 
  6400  1E25                     	;# 
  6401  1E26                     	;# 
  6402  1E27                     	;# 
  6403  1E28                     	;# 
  6404  1E29                     	;# 
  6405  1E2A                     	;# 
  6406  1E2B                     	;# 
  6407  1E2C                     	;# 
  6408  1E2D                     	;# 
  6409  1E2E                     	;# 
  6410  1E2F                     	;# 
  6411  1E30                     	;# 
  6412  1E31                     	;# 
  6413  1E32                     	;# 
  6414  1E33                     	;# 
  6415  1E34                     	;# 
  6416  1E35                     	;# 
  6417  1E36                     	;# 
  6418  1E37                     	;# 
  6419  1E8F                     	;# 
  6420  1E90                     	;# 
  6421  1E91                     	;# 
  6422  1E92                     	;# 
  6423  1E93                     	;# 
  6424  1E94                     	;# 
  6425  1E95                     	;# 
  6426  1E96                     	;# 
  6427  1E97                     	;# 
  6428  1E9C                     	;# 
  6429  1E9D                     	;# 
  6430  1E9E                     	;# 
  6431  1EA1                     	;# 
  6432  1EA2                     	;# 
  6433  1EA3                     	;# 
  6434  1EA4                     	;# 
  6435  1EA5                     	;# 
  6436  1EA9                     	;# 
  6437  1EAA                     	;# 
  6438  1EAB                     	;# 
  6439  1EAC                     	;# 
  6440  1EB1                     	;# 
  6441  1EB2                     	;# 
  6442  1EB3                     	;# 
  6443  1EB8                     	;# 
  6444  1EB9                     	;# 
  6445  1EBA                     	;# 
  6446  1EBB                     	;# 
  6447  1EBC                     	;# 
  6448  1EBD                     	;# 
  6449  1EBE                     	;# 
  6450  1EC3                     	;# 
  6451  1EC5                     	;# 
  6452  1EC6                     	;# 
  6453  1EC7                     	;# 
  6454  1EC8                     	;# 
  6455  1EC9                     	;# 
  6456  1ECA                     	;# 
  6457  1ECB                     	;# 
  6458  1ECB                     	;# 
  6459  1ECB                     	;# 
  6460  1ECC                     	;# 
  6461  1ECC                     	;# 
  6462  1ECC                     	;# 
  6463  1ECD                     	;# 
  6464  1ECD                     	;# 
  6465  1ECE                     	;# 
  6466  1ECE                     	;# 
  6467  1F10                     	;# 
  6468  1F11                     	;# 
  6469  1F12                     	;# 
  6470  1F13                     	;# 
  6471  1F14                     	;# 
  6472  1F15                     	;# 
  6473  1F16                     	;# 
  6474  1F17                     	;# 
  6475  1F18                     	;# 
  6476  1F19                     	;# 
  6477  1F1A                     	;# 
  6478  1F1B                     	;# 
  6479  1F1C                     	;# 
  6480  1F1D                     	;# 
  6481  1F1E                     	;# 
  6482  1F1F                     	;# 
  6483  1F20                     	;# 
  6484  1F21                     	;# 
  6485  1F22                     	;# 
  6486  1F23                     	;# 
  6487  1F24                     	;# 
  6488  1F25                     	;# 
  6489  1F26                     	;# 
  6490  1F27                     	;# 
  6491  1F38                     	;# 
  6492  1F39                     	;# 
  6493  1F3A                     	;# 
  6494  1F3B                     	;# 
  6495  1F3C                     	;# 
  6496  1F3D                     	;# 
  6497  1F3E                     	;# 
  6498  1F3F                     	;# 
  6499  1F43                     	;# 
  6500  1F44                     	;# 
  6501  1F45                     	;# 
  6502  1F46                     	;# 
  6503  1F47                     	;# 
  6504  1F48                     	;# 
  6505  1F49                     	;# 
  6506  1F4A                     	;# 
  6507  1F4E                     	;# 
  6508  1F4F                     	;# 
  6509  1F50                     	;# 
  6510  1F51                     	;# 
  6511  1F52                     	;# 
  6512  1F53                     	;# 
  6513  1F54                     	;# 
  6514  1F55                     	;# 
  6515  1F65                     	;# 
  6516  1F66                     	;# 
  6517  1F67                     	;# 
  6518  1F68                     	;# 
  6519  1F69                     	;# 
  6520  1F6A                     	;# 
  6521  1F6B                     	;# 
  6522  1FE4                     	;# 
  6523  1FE5                     	;# 
  6524  1FE6                     	;# 
  6525  1FE7                     	;# 
  6526  1FE8                     	;# 
  6527  1FE8                     	;# 
  6528  1FE9                     	;# 
  6529  1FEA                     	;# 
  6530  1FEB                     	;# 
  6531  1FED                     	;# 
  6532  1FEE                     	;# 
  6533  1FEF                     	;# 
  6534  0000                     	;# 
  6535  0001                     	;# 
  6536  0002                     	;# 
  6537  0003                     	;# 
  6538  0004                     	;# 
  6539  0005                     	;# 
  6540  0006                     	;# 
  6541  0007                     	;# 
  6542  0008                     	;# 
  6543  0009                     	;# 
  6544  000A                     	;# 
  6545  000B                     	;# 
  6546  000C                     	;# 
  6547  000D                     	;# 
  6548  000E                     	;# 
  6549  0010                     	;# 
  6550  0012                     	;# 
  6551  0013                     	;# 
  6552  0014                     	;# 
  6553  0016                     	;# 
  6554  0018                     	;# 
  6555  0019                     	;# 
  6556  001A                     	;# 
  6557  001C                     	;# 
  6558  008C                     	;# 
  6559  008C                     	;# 
  6560  008D                     	;# 
  6561  008E                     	;# 
  6562  008E                     	;# 
  6563  008F                     	;# 
  6564  0090                     	;# 
  6565  0090                     	;# 
  6566  0091                     	;# 
  6567  0092                     	;# 
  6568  0092                     	;# 
  6569  0093                     	;# 
  6570  0094                     	;# 
  6571  0094                     	;# 
  6572  0095                     	;# 
  6573  0096                     	;# 
  6574  0096                     	;# 
  6575  0097                     	;# 
  6576  0098                     	;# 
  6577  0099                     	;# 
  6578  009A                     	;# 
  6579  009B                     	;# 
  6580  009B                     	;# 
  6581  009C                     	;# 
  6582  009D                     	;# 
  6583  009D                     	;# 
  6584  009E                     	;# 
  6585  009F                     	;# 
  6586  010C                     	;# 
  6587  010C                     	;# 
  6588  010D                     	;# 
  6589  010E                     	;# 
  6590  010F                     	;# 
  6591  010F                     	;# 
  6592  0110                     	;# 
  6593  0111                     	;# 
  6594  0112                     	;# 
  6595  0113                     	;# 
  6596  0114                     	;# 
  6597  0115                     	;# 
  6598  0116                     	;# 
  6599  0117                     	;# 
  6600  0118                     	;# 
  6601  0119                     	;# 
  6602  0119                     	;# 
  6603  0119                     	;# 
  6604  011A                     	;# 
  6605  011A                     	;# 
  6606  011A                     	;# 
  6607  011B                     	;# 
  6608  011B                     	;# 
  6609  011B                     	;# 
  6610  011B                     	;# 
  6611  011B                     	;# 
  6612  011C                     	;# 
  6613  011C                     	;# 
  6614  011C                     	;# 
  6615  011D                     	;# 
  6616  011D                     	;# 
  6617  011D                     	;# 
  6618  011E                     	;# 
  6619  011E                     	;# 
  6620  011E                     	;# 
  6621  011F                     	;# 
  6622  011F                     	;# 
  6623  011F                     	;# 
  6624  011F                     	;# 
  6625  011F                     	;# 
  6626  018C                     	;# 
  6627  018D                     	;# 
  6628  018E                     	;# 
  6629  018F                     	;# 
  6630  0190                     	;# 
  6631  0191                     	;# 
  6632  0192                     	;# 
  6633  0196                     	;# 
  6634  0197                     	;# 
  6635  0198                     	;# 
  6636  0199                     	;# 
  6637  019A                     	;# 
  6638  019B                     	;# 
  6639  019C                     	;# 
  6640  020C                     	;# 
  6641  020D                     	;# 
  6642  020E                     	;# 
  6643  020E                     	;# 
  6644  020F                     	;# 
  6645  020F                     	;# 
  6646  0210                     	;# 
  6647  0210                     	;# 
  6648  0211                     	;# 
  6649  0211                     	;# 
  6650  0212                     	;# 
  6651  0213                     	;# 
  6652  0214                     	;# 
  6653  0214                     	;# 
  6654  0215                     	;# 
  6655  0215                     	;# 
  6656  0216                     	;# 
  6657  0216                     	;# 
  6658  0217                     	;# 
  6659  0217                     	;# 
  6660  0218                     	;# 
  6661  0219                     	;# 
  6662  021A                     	;# 
  6663  021A                     	;# 
  6664  021B                     	;# 
  6665  021B                     	;# 
  6666  021C                     	;# 
  6667  021C                     	;# 
  6668  021D                     	;# 
  6669  021D                     	;# 
  6670  021E                     	;# 
  6671  021F                     	;# 
  6672  028C                     	;# 
  6673  028C                     	;# 
  6674  028D                     	;# 
  6675  028D                     	;# 
  6676  028E                     	;# 
  6677  028F                     	;# 
  6678  0290                     	;# 
  6679  0291                     	;# 
  6680  0292                     	;# 
  6681  0292                     	;# 
  6682  0293                     	;# 
  6683  0293                     	;# 
  6684  0294                     	;# 
  6685  0295                     	;# 
  6686  0296                     	;# 
  6687  0297                     	;# 
  6688  0298                     	;# 
  6689  0298                     	;# 
  6690  0299                     	;# 
  6691  0299                     	;# 
  6692  029A                     	;# 
  6693  029B                     	;# 
  6694  029C                     	;# 
  6695  029D                     	;# 
  6696  029F                     	;# 
  6697  030C                     	;# 
  6698  030C                     	;# 
  6699  030D                     	;# 
  6700  030E                     	;# 
  6701  030F                     	;# 
  6702  0310                     	;# 
  6703  0310                     	;# 
  6704  0311                     	;# 
  6705  0312                     	;# 
  6706  0313                     	;# 
  6707  0314                     	;# 
  6708  0314                     	;# 
  6709  0315                     	;# 
  6710  0316                     	;# 
  6711  0317                     	;# 
  6712  0318                     	;# 
  6713  0318                     	;# 
  6714  0319                     	;# 
  6715  031A                     	;# 
  6716  031B                     	;# 
  6717  031C                     	;# 
  6718  031C                     	;# 
  6719  031D                     	;# 
  6720  031E                     	;# 
  6721  031F                     	;# 
  6722  038C                     	;# 
  6723  038C                     	;# 
  6724  038D                     	;# 
  6725  038E                     	;# 
  6726  0390                     	;# 
  6727  0390                     	;# 
  6728  0391                     	;# 
  6729  0392                     	;# 
  6730  048C                     	;# 
  6731  048C                     	;# 
  6732  048D                     	;# 
  6733  048E                     	;# 
  6734  048F                     	;# 
  6735  048F                     	;# 
  6736  0490                     	;# 
  6737  0491                     	;# 
  6738  0492                     	;# 
  6739  0492                     	;# 
  6740  0493                     	;# 
  6741  0494                     	;# 
  6742  0495                     	;# 
  6743  0495                     	;# 
  6744  0496                     	;# 
  6745  0497                     	;# 
  6746  0498                     	;# 
  6747  0499                     	;# 
  6748  049A                     	;# 
  6749  049B                     	;# 
  6750  049C                     	;# 
  6751  049D                     	;# 
  6752  050C                     	;# 
  6753  050C                     	;# 
  6754  050D                     	;# 
  6755  050E                     	;# 
  6756  050F                     	;# 
  6757  050F                     	;# 
  6758  0510                     	;# 
  6759  0511                     	;# 
  6760  0512                     	;# 
  6761  0512                     	;# 
  6762  0513                     	;# 
  6763  0514                     	;# 
  6764  0515                     	;# 
  6765  0515                     	;# 
  6766  0516                     	;# 
  6767  0517                     	;# 
  6768  0518                     	;# 
  6769  0519                     	;# 
  6770  051A                     	;# 
  6771  051B                     	;# 
  6772  051C                     	;# 
  6773  051D                     	;# 
  6774  058C                     	;# 
  6775  058C                     	;# 
  6776  058D                     	;# 
  6777  058E                     	;# 
  6778  058F                     	;# 
  6779  058F                     	;# 
  6780  0590                     	;# 
  6781  0591                     	;# 
  6782  0592                     	;# 
  6783  0593                     	;# 
  6784  059C                     	;# 
  6785  059C                     	;# 
  6786  059D                     	;# 
  6787  059D                     	;# 
  6788  059E                     	;# 
  6789  059F                     	;# 
  6790  060C                     	;# 
  6791  060C                     	;# 
  6792  060D                     	;# 
  6793  060D                     	;# 
  6794  060E                     	;# 
  6795  060F                     	;# 
  6796  0610                     	;# 
  6797  0611                     	;# 
  6798  0612                     	;# 
  6799  0613                     	;# 
  6800  0614                     	;# 
  6801  0616                     	;# 
  6802  0616                     	;# 
  6803  0617                     	;# 
  6804  0617                     	;# 
  6805  0618                     	;# 
  6806  0619                     	;# 
  6807  061A                     	;# 
  6808  061B                     	;# 
  6809  061C                     	;# 
  6810  061D                     	;# 
  6811  061E                     	;# 
  6812  068C                     	;# 
  6813  068D                     	;# 
  6814  068E                     	;# 
  6815  068F                     	;# 
  6816  0690                     	;# 
  6817  0691                     	;# 
  6818  0692                     	;# 
  6819  0693                     	;# 
  6820  0694                     	;# 
  6821  070C                     	;# 
  6822  070D                     	;# 
  6823  070E                     	;# 
  6824  070F                     	;# 
  6825  0710                     	;# 
  6826  0711                     	;# 
  6827  0712                     	;# 
  6828  0713                     	;# 
  6829  0714                     	;# 
  6830  0716                     	;# 
  6831  0717                     	;# 
  6832  0718                     	;# 
  6833  0719                     	;# 
  6834  071A                     	;# 
  6835  071B                     	;# 
  6836  071C                     	;# 
  6837  071D                     	;# 
  6838  071E                     	;# 
  6839  0796                     	;# 
  6840  0797                     	;# 
  6841  0798                     	;# 
  6842  0799                     	;# 
  6843  079A                     	;# 
  6844  079B                     	;# 
  6845  079C                     	;# 
  6846  079D                     	;# 
  6847  080C                     	;# 
  6848  080D                     	;# 
  6849  080E                     	;# 
  6850  080F                     	;# 
  6851  0810                     	;# 
  6852  0811                     	;# 
  6853  0812                     	;# 
  6854  0813                     	;# 
  6855  0814                     	;# 
  6856  081A                     	;# 
  6857  081A                     	;# 
  6858  081B                     	;# 
  6859  081C                     	;# 
  6860  081C                     	;# 
  6861  081D                     	;# 
  6862  081E                     	;# 
  6863  081F                     	;# 
  6864  088C                     	;# 
  6865  088D                     	;# 
  6866  088E                     	;# 
  6867  088F                     	;# 
  6868  0890                     	;# 
  6869  0891                     	;# 
  6870  0892                     	;# 
  6871  0893                     	;# 
  6872  0895                     	;# 
  6873  0896                     	;# 
  6874  0897                     	;# 
  6875  0898                     	;# 
  6876  0899                     	;# 
  6877  089A                     	;# 
  6878  089B                     	;# 
  6879  090C                     	;# 
  6880  090E                     	;# 
  6881  090F                     	;# 
  6882  091F                     	;# 
  6883  098F                     	;# 
  6884  098F                     	;# 
  6885  0990                     	;# 
  6886  0991                     	;# 
  6887  0992                     	;# 
  6888  0993                     	;# 
  6889  0994                     	;# 
  6890  0995                     	;# 
  6891  0996                     	;# 
  6892  0997                     	;# 
  6893  0A19                     	;# 
  6894  0A19                     	;# 
  6895  0A1A                     	;# 
  6896  0A1A                     	;# 
  6897  0A1B                     	;# 
  6898  0A1B                     	;# 
  6899  0A1B                     	;# 
  6900  0A1C                     	;# 
  6901  0A1C                     	;# 
  6902  0A1D                     	;# 
  6903  0A1D                     	;# 
  6904  0A1E                     	;# 
  6905  0A1E                     	;# 
  6906  0A1F                     	;# 
  6907  0A1F                     	;# 
  6908  0A1F                     	;# 
  6909  1E0F                     	;# 
  6910  1E10                     	;# 
  6911  1E11                     	;# 
  6912  1E12                     	;# 
  6913  1E13                     	;# 
  6914  1E14                     	;# 
  6915  1E15                     	;# 
  6916  1E16                     	;# 
  6917  1E17                     	;# 
  6918  1E18                     	;# 
  6919  1E19                     	;# 
  6920  1E1A                     	;# 
  6921  1E1B                     	;# 
  6922  1E1C                     	;# 
  6923  1E1D                     	;# 
  6924  1E1E                     	;# 
  6925  1E1F                     	;# 
  6926  1E20                     	;# 
  6927  1E21                     	;# 
  6928  1E22                     	;# 
  6929  1E23                     	;# 
  6930  1E24                     	;# 
  6931  1E25                     	;# 
  6932  1E26                     	;# 
  6933  1E27                     	;# 
  6934  1E28                     	;# 
  6935  1E29                     	;# 
  6936  1E2A                     	;# 
  6937  1E2B                     	;# 
  6938  1E2C                     	;# 
  6939  1E2D                     	;# 
  6940  1E2E                     	;# 
  6941  1E2F                     	;# 
  6942  1E30                     	;# 
  6943  1E31                     	;# 
  6944  1E32                     	;# 
  6945  1E33                     	;# 
  6946  1E34                     	;# 
  6947  1E35                     	;# 
  6948  1E36                     	;# 
  6949  1E37                     	;# 
  6950  1E8F                     	;# 
  6951  1E90                     	;# 
  6952  1E91                     	;# 
  6953  1E92                     	;# 
  6954  1E93                     	;# 
  6955  1E94                     	;# 
  6956  1E95                     	;# 
  6957  1E96                     	;# 
  6958  1E97                     	;# 
  6959  1E9C                     	;# 
  6960  1E9D                     	;# 
  6961  1E9E                     	;# 
  6962  1EA1                     	;# 
  6963  1EA2                     	;# 
  6964  1EA3                     	;# 
  6965  1EA4                     	;# 
  6966  1EA5                     	;# 
  6967  1EA9                     	;# 
  6968  1EAA                     	;# 
  6969  1EAB                     	;# 
  6970  1EAC                     	;# 
  6971  1EB1                     	;# 
  6972  1EB2                     	;# 
  6973  1EB3                     	;# 
  6974  1EB8                     	;# 
  6975  1EB9                     	;# 
  6976  1EBA                     	;# 
  6977  1EBB                     	;# 
  6978  1EBC                     	;# 
  6979  1EBD                     	;# 
  6980  1EBE                     	;# 
  6981  1EC3                     	;# 
  6982  1EC5                     	;# 
  6983  1EC6                     	;# 
  6984  1EC7                     	;# 
  6985  1EC8                     	;# 
  6986  1EC9                     	;# 
  6987  1ECA                     	;# 
  6988  1ECB                     	;# 
  6989  1ECB                     	;# 
  6990  1ECB                     	;# 
  6991  1ECC                     	;# 
  6992  1ECC                     	;# 
  6993  1ECC                     	;# 
  6994  1ECD                     	;# 
  6995  1ECD                     	;# 
  6996  1ECE                     	;# 
  6997  1ECE                     	;# 
  6998  1F10                     	;# 
  6999  1F11                     	;# 
  7000  1F12                     	;# 
  7001  1F13                     	;# 
  7002  1F14                     	;# 
  7003  1F15                     	;# 
  7004  1F16                     	;# 
  7005  1F17                     	;# 
  7006  1F18                     	;# 
  7007  1F19                     	;# 
  7008  1F1A                     	;# 
  7009  1F1B                     	;# 
  7010  1F1C                     	;# 
  7011  1F1D                     	;# 
  7012  1F1E                     	;# 
  7013  1F1F                     	;# 
  7014  1F20                     	;# 
  7015  1F21                     	;# 
  7016  1F22                     	;# 
  7017  1F23                     	;# 
  7018  1F24                     	;# 
  7019  1F25                     	;# 
  7020  1F26                     	;# 
  7021  1F27                     	;# 
  7022  1F38                     	;# 
  7023  1F39                     	;# 
  7024  1F3A                     	;# 
  7025  1F3B                     	;# 
  7026  1F3C                     	;# 
  7027  1F3D                     	;# 
  7028  1F3E                     	;# 
  7029  1F3F                     	;# 
  7030  1F43                     	;# 
  7031  1F44                     	;# 
  7032  1F45                     	;# 
  7033  1F46                     	;# 
  7034  1F47                     	;# 
  7035  1F48                     	;# 
  7036  1F49                     	;# 
  7037  1F4A                     	;# 
  7038  1F4E                     	;# 
  7039  1F4F                     	;# 
  7040  1F50                     	;# 
  7041  1F51                     	;# 
  7042  1F52                     	;# 
  7043  1F53                     	;# 
  7044  1F54                     	;# 
  7045  1F55                     	;# 
  7046  1F65                     	;# 
  7047  1F66                     	;# 
  7048  1F67                     	;# 
  7049  1F68                     	;# 
  7050  1F69                     	;# 
  7051  1F6A                     	;# 
  7052  1F6B                     	;# 
  7053  1FE4                     	;# 
  7054  1FE5                     	;# 
  7055  1FE6                     	;# 
  7056  1FE7                     	;# 
  7057  1FE8                     	;# 
  7058  1FE8                     	;# 
  7059  1FE9                     	;# 
  7060  1FEA                     	;# 
  7061  1FEB                     	;# 
  7062  1FED                     	;# 
  7063  1FEE                     	;# 
  7064  1FEF                     	;_waveform
  7065                           
  7066                           	psect	stringtext1
  7067  10AE                     __pstringtext1:
  7068  10AE                     _mux:
  7069  10AE  3410               	retlw	16
  7070  10AF  3411               	retlw	17
  7071  10B0  3412               	retlw	18
  7072  10B1  3413               	retlw	19
  7073  10B2  3414               	retlw	20
  7074  10B3  3415               	retlw	21
  7075  10B4  3416               	retlw	22
  7076  10B5  3417               	retlw	23
  7077  10B6  3418               	retlw	24
  7078  10B7  3419               	retlw	25
  7079  10B8  341A               	retlw	26
  7080  10B9  341B               	retlw	27
  7081  10BA  341C               	retlw	28
  7082  10BB  341D               	retlw	29
  7083  10BC  341E               	retlw	30
  7084  10BD  341F               	retlw	31
  7085  10BE                     __end_of_mux:
  7086                           
  7087                           	psect	nvBANK0
  7088  0066                     __pnvBANK0:
  7089  0066                     _TMR0_InterruptHandler:
  7090  0066                     	ds	2
  7091  0068                     _timer0ReloadVal16bit:
  7092  0068                     	ds	2
  7093  006A                     _EUSART1_RxDefaultInterruptHandler:
  7094  006A                     	ds	2
  7095  006C                     _EUSART1_TxDefaultInterruptHandler:
  7096  006C                     	ds	2
  7097  006E                     _eusart1TxBufferRemaining:
  7098  006E                     	ds	1
  7099                           
  7100                           	psect	nvBANK1
  7101  00A8                     __pnvBANK1:
  7102  00A8                     _EUSART1_ErrorHandler:
  7103  00A8                     	ds	2
  7104  00AA                     _EUSART1_OverrunErrorHandler:
  7105  00AA                     	ds	2
  7106  00AC                     _EUSART1_FramingErrorHandler:
  7107  00AC                     	ds	2
  7108  0003                     _STATUSbits	set	3
  7109  0018                     _LATAbits	set	24
  7110  000B                     _INTCONbits	set	11
  7111  0014                     _TRISC	set	20
  7112  0013                     _TRISB	set	19
  7113  0012                     _TRISA	set	18
  7114  0016                     _TRISE	set	22
  7115  001A                     _LATC	set	26
  7116  0019                     _LATB	set	25
  7117  0018                     _LATA	set	24
  7118  001C                     _LATE	set	28
  7119  0119                     _RC1REG	set	281
  7120  011D                     _RC1STAbits	set	285
  7121  011A                     _TX1REG	set	282
  7122  011C                     _SP1BRGH	set	284
  7123  011B                     _SP1BRGL	set	283
  7124  011E                     _TX1STA	set	286
  7125  011D                     _RC1STA	set	285
  7126  011F                     _BAUD1CON	set	287
  7127  059E                     _T0CON0bits	set	1438
  7128  059E                     _T0CON0	set	1438
  7129  059C                     _TMR0L	set	1436
  7130  059D                     _TMR0H	set	1437
  7131  059F                     _T0CON1	set	1439
  7132  070F                     _PIR3bits	set	1807
  7133  0716                     _PIE0bits	set	1814
  7134  070C                     _PIR0bits	set	1804
  7135  0719                     _PIE3bits	set	1817
  7136  079D                     _PMD7	set	1949
  7137  079C                     _PMD6	set	1948
  7138  079B                     _PMD5	set	1947
  7139  079A                     _PMD4	set	1946
  7140  0799                     _PMD3	set	1945
  7141  0798                     _PMD2	set	1944
  7142  0797                     _PMD1	set	1943
  7143  0796                     _PMD0	set	1942
  7144  081F                     _NVMCON2	set	2079
  7145  081D                     _NVMDATH	set	2077
  7146  081C                     _NVMDATL	set	2076
  7147  081B                     _NVMADRH	set	2075
  7148  081A                     _NVMADRL	set	2074
  7149  081E                     _NVMCON1bits	set	2078
  7150  0892                     _OSCTUNE	set	2194
  7151  0890                     _OSCSTAT	set	2192
  7152  0893                     _OSCFRQ	set	2195
  7153  0891                     _OSCEN	set	2193
  7154  088F                     _OSCCON3	set	2191
  7155  088D                     _OSCCON1	set	2189
  7156  090F                     _DAC1CON1	set	2319
  7157  090E                     _DAC1CON0	set	2318
  7158  090C                     _FVRCON	set	2316
  7159  1ECB                     _RX1DTPPS	set	7883
  7160  1F26                     _RC6PPS	set	7974
  7161  1F52                     _INLVLC	set	8018
  7162  1F47                     _INLVLB	set	8007
  7163  1F3C                     _INLVLA	set	7996
  7164  1F51                     _SLRCONC	set	8017
  7165  1F46                     _SLRCONB	set	8006
  7166  1F3B                     _SLRCONA	set	7995
  7167  1F50                     _ODCONC	set	8016
  7168  1F45                     _ODCONB	set	8005
  7169  1F3A                     _ODCONA	set	7994
  7170  1F66                     _ODCONE	set	8038
  7171  1F4F                     _WPUC	set	8015
  7172  1F39                     _WPUA	set	7993
  7173  1F44                     _WPUB	set	8004
  7174  1F65                     _WPUE	set	8037
  7175  1F38                     _ANSELA	set	7992
  7176  1F43                     _ANSELB	set	8003
  7177  1F4E                     _ANSELC	set	8014
  7178                           
  7179                           	psect	stringtext2
  7180  1000                     __pstringtext2:
  7181  1000                     STR_49:
  7182  1000  3445               	retlw	69	;'E'
  7183  1001  3472               	retlw	114	;'r'
  7184  1002  3472               	retlw	114	;'r'
  7185  1003  346F               	retlw	111	;'o'
  7186  1004  3472               	retlw	114	;'r'
  7187  1005  343A               	retlw	58	;':'
  7188  1006  3420               	retlw	32	;' '
  7189  1007  3463               	retlw	99	;'c'
  7190  1008  3468               	retlw	104	;'h'
  7191  1009  3461               	retlw	97	;'a'
  7192  100A  346E               	retlw	110	;'n'
  7193  100B  346E               	retlw	110	;'n'
  7194  100C  3465               	retlw	101	;'e'
  7195  100D  346C               	retlw	108	;'l'
  7196  100E  3431               	retlw	49	;'1'
  7197  100F  3420               	retlw	32	;' '
  7198  1010  343D               	retlw	61	;'='
  7199  1011  3420               	retlw	32	;' '
  7200  1012  3463               	retlw	99	;'c'
  7201  1013  3468               	retlw	104	;'h'
  7202  1014  3461               	retlw	97	;'a'
  7203  1015  346E               	retlw	110	;'n'
  7204  1016  346E               	retlw	110	;'n'
  7205  1017  3465               	retlw	101	;'e'
  7206  1018  346C               	retlw	108	;'l'
  7207  1019  3432               	retlw	50	;'2'
  7208  101A  340A               	retlw	10
  7209  101B  3400               	retlw	0
  7210                           
  7211                           	psect	stringtext3
  7212  101C                     __pstringtext3:
  7213  101C                     STR_25:
  7214  101C  3450               	retlw	80	;'P'
  7215  101D  3468               	retlw	104	;'h'
  7216  101E  3461               	retlw	97	;'a'
  7217  101F  3473               	retlw	115	;'s'
  7218  1020  3465               	retlw	101	;'e'
  7219  1021  3420               	retlw	32	;' '
  7220  1022  3464               	retlw	100	;'d'
  7221  1023  3475               	retlw	117	;'u'
  7222  1024  3472               	retlw	114	;'r'
  7223  1025  3461               	retlw	97	;'a'
  7224  1026  3474               	retlw	116	;'t'
  7225  1027  3469               	retlw	105	;'i'
  7226  1028  346F               	retlw	111	;'o'
  7227  1029  346E               	retlw	110	;'n'
  7228  102A  3420               	retlw	32	;' '
  7229  102B  3428               	retlw	40	;'('
  7230  102C  3475               	retlw	117	;'u'
  7231  102D  3473               	retlw	115	;'s'
  7232  102E  342F               	retlw	47	;'/'
  7233  102F  3435               	retlw	53	;'5'
  7234  1030  3430               	retlw	48	;'0'
  7235  1031  3429               	retlw	41	;')'
  7236  1032  343A               	retlw	58	;':'
  7237  1033  3420               	retlw	32	;' '
  7238  1034  3400               	retlw	0
  7239                           
  7240                           	psect	stringtext4
  7241  1035                     __pstringtext4:
  7242  1035                     STR_37:
  7243  1035  344E               	retlw	78	;'N'
  7244  1036  3475               	retlw	117	;'u'
  7245  1037  346D               	retlw	109	;'m'
  7246  1038  3462               	retlw	98	;'b'
  7247  1039  3465               	retlw	101	;'e'
  7248  103A  3472               	retlw	114	;'r'
  7249  103B  3420               	retlw	32	;' '
  7250  103C  346F               	retlw	111	;'o'
  7251  103D  3466               	retlw	102	;'f'
  7252  103E  3420               	retlw	32	;' '
  7253  103F  3463               	retlw	99	;'c'
  7254  1040  346F               	retlw	111	;'o'
  7255  1041  346E               	retlw	110	;'n'
  7256  1042  3474               	retlw	116	;'t'
  7257  1043  3472               	retlw	114	;'r'
  7258  1044  3461               	retlw	97	;'a'
  7259  1045  3463               	retlw	99	;'c'
  7260  1046  3474               	retlw	116	;'t'
  7261  1047  3469               	retlw	105	;'i'
  7262  1048  346F               	retlw	111	;'o'
  7263  1049  346E               	retlw	110	;'n'
  7264  104A  3473               	retlw	115	;'s'
  7265  104B  343A               	retlw	58	;':'
  7266  104C  3420               	retlw	32	;' '
  7267  104D  3400               	retlw	0
  7268                           
  7269                           	psect	stringtext5
  7270  104E                     __pstringtext5:
  7271  104E                     STR_35:
  7272  104E  3452               	retlw	82	;'R'
  7273  104F  3461               	retlw	97	;'a'
  7274  1050  346D               	retlw	109	;'m'
  7275  1051  3470               	retlw	112	;'p'
  7276  1052  3420               	retlw	32	;' '
  7277  1053  3464               	retlw	100	;'d'
  7278  1054  346F               	retlw	111	;'o'
  7279  1055  3477               	retlw	119	;'w'
  7280  1056  346E               	retlw	110	;'n'
  7281  1057  3420               	retlw	32	;' '
  7282  1058  3474               	retlw	116	;'t'
  7283  1059  3469               	retlw	105	;'i'
  7284  105A  346D               	retlw	109	;'m'
  7285  105B  3465               	retlw	101	;'e'
  7286  105C  3420               	retlw	32	;' '
  7287  105D  3428               	retlw	40	;'('
  7288  105E  3464               	retlw	100	;'d'
  7289  105F  3473               	retlw	115	;'s'
  7290  1060  3429               	retlw	41	;')'
  7291  1061  3420               	retlw	32	;' '
  7292  1062  343A               	retlw	58	;':'
  7293  1063  3420               	retlw	32	;' '
  7294  1064  3400               	retlw	0
  7295                           
  7296                           	psect	stringtext6
  7297  1065                     __pstringtext6:
  7298  1065                     STR_33:
  7299  1065  3452               	retlw	82	;'R'
  7300  1066  3461               	retlw	97	;'a'
  7301  1067  346D               	retlw	109	;'m'
  7302  1068  3470               	retlw	112	;'p'
  7303  1069  3420               	retlw	32	;' '
  7304  106A  3475               	retlw	117	;'u'
  7305  106B  3470               	retlw	112	;'p'
  7306  106C  3420               	retlw	32	;' '
  7307  106D  3474               	retlw	116	;'t'
  7308  106E  3469               	retlw	105	;'i'
  7309  106F  346D               	retlw	109	;'m'
  7310  1070  3465               	retlw	101	;'e'
  7311  1071  3420               	retlw	32	;' '
  7312  1072  3428               	retlw	40	;'('
  7313  1073  3464               	retlw	100	;'d'
  7314  1074  3473               	retlw	115	;'s'
  7315  1075  3429               	retlw	41	;')'
  7316  1076  3420               	retlw	32	;' '
  7317  1077  343A               	retlw	58	;':'
  7318  1078  3420               	retlw	32	;' '
  7319  1079  3400               	retlw	0
  7320                           
  7321                           	psect	stringtext7
  7322  107A                     __pstringtext7:
  7323  107A                     STR_27:
  7324  107A  3453               	retlw	83	;'S'
  7325  107B  3479               	retlw	121	;'y'
  7326  107C  346D               	retlw	109	;'m'
  7327  107D  346D               	retlw	109	;'m'
  7328  107E  3465               	retlw	101	;'e'
  7329  107F  3474               	retlw	116	;'t'
  7330  1080  3472               	retlw	114	;'r'
  7331  1081  3479               	retlw	121	;'y'
  7332  1082  3420               	retlw	32	;' '
  7333  1083  3466               	retlw	102	;'f'
  7334  1084  3461               	retlw	97	;'a'
  7335  1085  3463               	retlw	99	;'c'
  7336  1086  3474               	retlw	116	;'t'
  7337  1087  346F               	retlw	111	;'o'
  7338  1088  3472               	retlw	114	;'r'
  7339  1089  343A               	retlw	58	;':'
  7340  108A  3420               	retlw	32	;' '
  7341  108B  3400               	retlw	0
  7342                           
  7343                           	psect	stringtext8
  7344  108C                     __pstringtext8:
  7345  108C                     STR_21:
  7346  108C  3441               	retlw	65	;'A'
  7347  108D  346D               	retlw	109	;'m'
  7348  108E  3470               	retlw	112	;'p'
  7349  108F  346C               	retlw	108	;'l'
  7350  1090  3469               	retlw	105	;'i'
  7351  1091  3474               	retlw	116	;'t'
  7352  1092  3475               	retlw	117	;'u'
  7353  1093  3464               	retlw	100	;'d'
  7354  1094  3465               	retlw	101	;'e'
  7355  1095  3420               	retlw	32	;' '
  7356  1096  3428               	retlw	40	;'('
  7357  1097  346D               	retlw	109	;'m'
  7358  1098  3441               	retlw	65	;'A'
  7359  1099  3429               	retlw	41	;')'
  7360  109A  343A               	retlw	58	;':'
  7361  109B  3420               	retlw	32	;' '
  7362  109C  3400               	retlw	0
  7363                           
  7364                           	psect	stringtext9
  7365  109D                     __pstringtext9:
  7366  109D                     STR_23:
  7367  109D  3446               	retlw	70	;'F'
  7368  109E  3472               	retlw	114	;'r'
  7369  109F  3465               	retlw	101	;'e'
  7370  10A0  3471               	retlw	113	;'q'
  7371  10A1  3475               	retlw	117	;'u'
  7372  10A2  3465               	retlw	101	;'e'
  7373  10A3  346E               	retlw	110	;'n'
  7374  10A4  3463               	retlw	99	;'c'
  7375  10A5  3479               	retlw	121	;'y'
  7376  10A6  3420               	retlw	32	;' '
  7377  10A7  3428               	retlw	40	;'('
  7378  10A8  3448               	retlw	72	;'H'
  7379  10A9  347A               	retlw	122	;'z'
  7380  10AA  3429               	retlw	41	;')'
  7381  10AB  343A               	retlw	58	;':'
  7382  10AC  3420               	retlw	32	;' '
  7383  10AD  3400               	retlw	0
  7384                           
  7385                           	psect	stringtext10
  7386  10BE                     __pstringtext10:
  7387  10BE                     STR_31:
  7388  10BE  344F               	retlw	79	;'O'
  7389  10BF  3446               	retlw	70	;'F'
  7390  10C0  3446               	retlw	70	;'F'
  7391  10C1  3420               	retlw	32	;' '
  7392  10C2  3474               	retlw	116	;'t'
  7393  10C3  3469               	retlw	105	;'i'
  7394  10C4  346D               	retlw	109	;'m'
  7395  10C5  3465               	retlw	101	;'e'
  7396  10C6  3420               	retlw	32	;' '
  7397  10C7  3428               	retlw	40	;'('
  7398  10C8  3473               	retlw	115	;'s'
  7399  10C9  3429               	retlw	41	;')'
  7400  10CA  3420               	retlw	32	;' '
  7401  10CB  343A               	retlw	58	;':'
  7402  10CC  3420               	retlw	32	;' '
  7403  10CD  3400               	retlw	0
  7404                           
  7405                           	psect	stringtext11
  7406  10CE                     __pstringtext11:
  7407  10CE                     STR_20:
  7408  10CE  340A               	retlw	10
  7409  10CF  344E               	retlw	78	;'N'
  7410  10D0  3445               	retlw	69	;'E'
  7411  10D1  344D               	retlw	77	;'M'
  7412  10D2  3453               	retlw	83	;'S'
  7413  10D3  3420               	retlw	32	;' '
  7414  10D4  3470               	retlw	112	;'p'
  7415  10D5  3472               	retlw	114	;'r'
  7416  10D6  346F               	retlw	111	;'o'
  7417  10D7  3467               	retlw	103	;'g'
  7418  10D8  3472               	retlw	114	;'r'
  7419  10D9  3461               	retlw	97	;'a'
  7420  10DA  346D               	retlw	109	;'m'
  7421  10DB  340A               	retlw	10
  7422  10DC  3400               	retlw	0
  7423                           
  7424                           	psect	stringtext12
  7425  10DD                     __pstringtext12:
  7426  10DD                     STR_29:
  7427  10DD  344F               	retlw	79	;'O'
  7428  10DE  344E               	retlw	78	;'N'
  7429  10DF  3420               	retlw	32	;' '
  7430  10E0  3474               	retlw	116	;'t'
  7431  10E1  3469               	retlw	105	;'i'
  7432  10E2  346D               	retlw	109	;'m'
  7433  10E3  3465               	retlw	101	;'e'
  7434  10E4  3420               	retlw	32	;' '
  7435  10E5  3428               	retlw	40	;'('
  7436  10E6  3473               	retlw	115	;'s'
  7437  10E7  3429               	retlw	41	;')'
  7438  10E8  3420               	retlw	32	;' '
  7439  10E9  343A               	retlw	58	;':'
  7440  10EA  3420               	retlw	32	;' '
  7441  10EB  3400               	retlw	0
  7442                           
  7443                           	psect	stringtext13
  7444  10EC                     __pstringtext13:
  7445  10EC                     STR_39:
  7446  10EC  3443               	retlw	67	;'C'
  7447  10ED  3468               	retlw	104	;'h'
  7448  10EE  3461               	retlw	97	;'a'
  7449  10EF  346E               	retlw	110	;'n'
  7450  10F0  346E               	retlw	110	;'n'
  7451  10F1  3465               	retlw	101	;'e'
  7452  10F2  346C               	retlw	108	;'l'
  7453  10F3  3420               	retlw	32	;' '
  7454  10F4  3431               	retlw	49	;'1'
  7455  10F5  343A               	retlw	58	;':'
  7456  10F6  3420               	retlw	32	;' '
  7457  10F7  3400               	retlw	0
  7458                           
  7459                           	psect	stringtext14
  7460  10F8                     __pstringtext14:
  7461  10F8                     STR_41:
  7462  10F8  3443               	retlw	67	;'C'
  7463  10F9  3468               	retlw	104	;'h'
  7464  10FA  3461               	retlw	97	;'a'
  7465  10FB  346E               	retlw	110	;'n'
  7466  10FC  346E               	retlw	110	;'n'
  7467  10FD  3465               	retlw	101	;'e'
  7468  10FE  346C               	retlw	108	;'l'
  7469  10FF  3420               	retlw	32	;' '
  7470  1100  3432               	retlw	50	;'2'
  7471  1101  343A               	retlw	58	;':'
  7472  1102  3420               	retlw	32	;' '
  7473  1103  3400               	retlw	0
  7474                           
  7475                           	psect	stringtext15
  7476  1104                     __pstringtext15:
  7477  1104                     STR_44:
  7478  1104  344D               	retlw	77	;'M'
  7479  1105  342D               	retlw	45	;'-'
  7480  1106  3465               	retlw	101	;'e'
  7481  1107  3472               	retlw	114	;'r'
  7482  1108  3472               	retlw	114	;'r'
  7483  1109  3420               	retlw	32	;' '
  7484  110A  3400               	retlw	0
  7485                           
  7486                           	psect	stringtext16
  7487  110B                     __pstringtext16:
  7488  110B                     STR_13:
  7489  110B  344F               	retlw	79	;'O'
  7490  110C  342D               	retlw	45	;'-'
  7491  110D  3465               	retlw	101	;'e'
  7492  110E  3472               	retlw	114	;'r'
  7493  110F  3472               	retlw	114	;'r'
  7494  1110  3420               	retlw	32	;' '
  7495  1111  3400               	retlw	0
  7496                           
  7497                           	psect	stringtext17
  7498  1112                     __pstringtext17:
  7499  1112                     STR_19:
  7500  1112  3452               	retlw	82	;'R'
  7501  1113  342D               	retlw	45	;'-'
  7502  1114  3465               	retlw	101	;'e'
  7503  1115  3472               	retlw	114	;'r'
  7504  1116  3472               	retlw	114	;'r'
  7505  1117  3420               	retlw	32	;' '
  7506  1118  3400               	retlw	0
  7507                           
  7508                           	psect	stringtext18
  7509  1119                     __pstringtext18:
  7510  1119                     STR_3:
  7511  1119  3461               	retlw	97	;'a'
  7512  111A  342D               	retlw	45	;'-'
  7513  111B  3465               	retlw	101	;'e'
  7514  111C  3472               	retlw	114	;'r'
  7515  111D  3472               	retlw	114	;'r'
  7516  111E  3420               	retlw	32	;' '
  7517  111F  3400               	retlw	0
  7518                           
  7519                           	psect	stringtext19
  7520  1120                     __pstringtext19:
  7521  1120                     STR_15:
  7522  1120  3463               	retlw	99	;'c'
  7523  1121  342D               	retlw	45	;'-'
  7524  1122  3465               	retlw	101	;'e'
  7525  1123  3472               	retlw	114	;'r'
  7526  1124  3472               	retlw	114	;'r'
  7527  1125  3420               	retlw	32	;' '
  7528  1126  3400               	retlw	0
  7529                           
  7530                           	psect	stringtext20
  7531  1127                     __pstringtext20:
  7532  1127                     STR_7:
  7533  1127  3464               	retlw	100	;'d'
  7534  1128  342D               	retlw	45	;'-'
  7535  1129  3465               	retlw	101	;'e'
  7536  112A  3472               	retlw	114	;'r'
  7537  112B  3472               	retlw	114	;'r'
  7538  112C  3420               	retlw	32	;' '
  7539  112D  3400               	retlw	0
  7540                           
  7541                           	psect	stringtext21
  7542  112E                     __pstringtext21:
  7543  112E                     STR_5:
  7544  112E  3466               	retlw	102	;'f'
  7545  112F  342D               	retlw	45	;'-'
  7546  1130  3465               	retlw	101	;'e'
  7547  1131  3472               	retlw	114	;'r'
  7548  1132  3472               	retlw	114	;'r'
  7549  1133  3420               	retlw	32	;' '
  7550  1134  3400               	retlw	0
  7551                           
  7552                           	psect	stringtext22
  7553  1135                     __pstringtext22:
  7554  1135                     STR_9:
  7555  1135  346B               	retlw	107	;'k'
  7556  1136  342D               	retlw	45	;'-'
  7557  1137  3465               	retlw	101	;'e'
  7558  1138  3472               	retlw	114	;'r'
  7559  1139  3472               	retlw	114	;'r'
  7560  113A  3420               	retlw	32	;' '
  7561  113B  3400               	retlw	0
  7562                           
  7563                           	psect	stringtext23
  7564  113C                     __pstringtext23:
  7565  113C                     STR_46:
  7566  113C  346D               	retlw	109	;'m'
  7567  113D  342D               	retlw	45	;'-'
  7568  113E  3465               	retlw	101	;'e'
  7569  113F  3472               	retlw	114	;'r'
  7570  1140  3472               	retlw	114	;'r'
  7571  1141  3420               	retlw	32	;' '
  7572  1142  3400               	retlw	0
  7573                           
  7574                           	psect	stringtext24
  7575  1143                     __pstringtext24:
  7576  1143                     STR_11:
  7577  1143  346F               	retlw	111	;'o'
  7578  1144  342D               	retlw	45	;'-'
  7579  1145  3465               	retlw	101	;'e'
  7580  1146  3472               	retlw	114	;'r'
  7581  1147  3472               	retlw	114	;'r'
  7582  1148  3420               	retlw	32	;' '
  7583  1149  3400               	retlw	0
  7584                           
  7585                           	psect	stringtext25
  7586  114A                     __pstringtext25:
  7587  114A                     STR_17:
  7588  114A  3472               	retlw	114	;'r'
  7589  114B  342D               	retlw	45	;'-'
  7590  114C  3465               	retlw	101	;'e'
  7591  114D  3472               	retlw	114	;'r'
  7592  114E  3472               	retlw	114	;'r'
  7593  114F  3420               	retlw	32	;' '
  7594  1150  3400               	retlw	0
  7595                           
  7596                           	psect	stringtext26
  7597  1151                     __pstringtext26:
  7598  1151                     STR_43:
  7599  1151  344D               	retlw	77	;'M'
  7600  1152  342D               	retlw	45	;'-'
  7601  1153  346F               	retlw	111	;'o'
  7602  1154  346B               	retlw	107	;'k'
  7603  1155  3420               	retlw	32	;' '
  7604  1156  3400               	retlw	0
  7605                           
  7606                           	psect	stringtext27
  7607  1157                     __pstringtext27:
  7608  1157                     STR_51:
  7609  1157  344E               	retlw	78	;'N'
  7610  1158  342D               	retlw	45	;'-'
  7611  1159  346F               	retlw	111	;'o'
  7612  115A  346B               	retlw	107	;'k'
  7613  115B  3420               	retlw	32	;' '
  7614  115C  3400               	retlw	0
  7615                           
  7616                           	psect	stringtext28
  7617  115D                     __pstringtext28:
  7618  115D                     STR_12:
  7619  115D  344F               	retlw	79	;'O'
  7620  115E  342D               	retlw	45	;'-'
  7621  115F  346F               	retlw	111	;'o'
  7622  1160  346B               	retlw	107	;'k'
  7623  1161  3420               	retlw	32	;' '
  7624  1162  3400               	retlw	0
  7625                           
  7626                           	psect	stringtext29
  7627  1163                     __pstringtext29:
  7628  1163                     STR_18:
  7629  1163  3452               	retlw	82	;'R'
  7630  1164  342D               	retlw	45	;'-'
  7631  1165  346F               	retlw	111	;'o'
  7632  1166  346B               	retlw	107	;'k'
  7633  1167  3420               	retlw	32	;' '
  7634  1168  3400               	retlw	0
  7635                           
  7636                           	psect	stringtext30
  7637  1169                     __pstringtext30:
  7638  1169                     STR_2:
  7639  1169  3461               	retlw	97	;'a'
  7640  116A  342D               	retlw	45	;'-'
  7641  116B  346F               	retlw	111	;'o'
  7642  116C  346B               	retlw	107	;'k'
  7643  116D  3420               	retlw	32	;' '
  7644  116E  3400               	retlw	0
  7645                           
  7646                           	psect	stringtext31
  7647  116F                     __pstringtext31:
  7648  116F                     STR_14:
  7649  116F  3463               	retlw	99	;'c'
  7650  1170  342D               	retlw	45	;'-'
  7651  1171  346F               	retlw	111	;'o'
  7652  1172  346B               	retlw	107	;'k'
  7653  1173  3420               	retlw	32	;' '
  7654  1174  3400               	retlw	0
  7655                           
  7656                           	psect	stringtext32
  7657  1175                     __pstringtext32:
  7658  1175                     STR_6:
  7659  1175  3464               	retlw	100	;'d'
  7660  1176  342D               	retlw	45	;'-'
  7661  1177  346F               	retlw	111	;'o'
  7662  1178  346B               	retlw	107	;'k'
  7663  1179  3420               	retlw	32	;' '
  7664  117A  3400               	retlw	0
  7665                           
  7666                           	psect	stringtext33
  7667  117B                     __pstringtext33:
  7668  117B                     STR_4:
  7669  117B  3466               	retlw	102	;'f'
  7670  117C  342D               	retlw	45	;'-'
  7671  117D  346F               	retlw	111	;'o'
  7672  117E  346B               	retlw	107	;'k'
  7673  117F  3420               	retlw	32	;' '
  7674  1180  3400               	retlw	0
  7675                           
  7676                           	psect	stringtext34
  7677  1181                     __pstringtext34:
  7678  1181                     STR_8:
  7679  1181  346B               	retlw	107	;'k'
  7680  1182  342D               	retlw	45	;'-'
  7681  1183  346F               	retlw	111	;'o'
  7682  1184  346B               	retlw	107	;'k'
  7683  1185  3420               	retlw	32	;' '
  7684  1186  3400               	retlw	0
  7685                           
  7686                           	psect	stringtext35
  7687  1187                     __pstringtext35:
  7688  1187                     STR_48:
  7689  1187  346C               	retlw	108	;'l'
  7690  1188  342D               	retlw	45	;'-'
  7691  1189  346F               	retlw	111	;'o'
  7692  118A  346B               	retlw	107	;'k'
  7693  118B  3420               	retlw	32	;' '
  7694  118C  3400               	retlw	0
  7695                           
  7696                           	psect	stringtext36
  7697  118D                     __pstringtext36:
  7698  118D                     STR_45:
  7699  118D  346D               	retlw	109	;'m'
  7700  118E  342D               	retlw	45	;'-'
  7701  118F  346F               	retlw	111	;'o'
  7702  1190  346B               	retlw	107	;'k'
  7703  1191  3420               	retlw	32	;' '
  7704  1192  3400               	retlw	0
  7705                           
  7706                           	psect	stringtext37
  7707  1193                     __pstringtext37:
  7708  1193                     STR_50:
  7709  1193  346E               	retlw	110	;'n'
  7710  1194  342D               	retlw	45	;'-'
  7711  1195  346F               	retlw	111	;'o'
  7712  1196  346B               	retlw	107	;'k'
  7713  1197  3420               	retlw	32	;' '
  7714  1198  3400               	retlw	0
  7715                           
  7716                           	psect	stringtext38
  7717  1199                     __pstringtext38:
  7718  1199                     STR_10:
  7719  1199  346F               	retlw	111	;'o'
  7720  119A  342D               	retlw	45	;'-'
  7721  119B  346F               	retlw	111	;'o'
  7722  119C  346B               	retlw	107	;'k'
  7723  119D  3420               	retlw	32	;' '
  7724  119E  3400               	retlw	0
  7725                           
  7726                           	psect	stringtext39
  7727  119F                     __pstringtext39:
  7728  119F                     STR_16:
  7729  119F  3472               	retlw	114	;'r'
  7730  11A0  342D               	retlw	45	;'-'
  7731  11A1  346F               	retlw	111	;'o'
  7732  11A2  346B               	retlw	107	;'k'
  7733  11A3  3420               	retlw	32	;' '
  7734  11A4  3400               	retlw	0
  7735                           
  7736                           	psect	stringtext40
  7737  11A5                     __pstringtext40:
  7738  11A5                     STR_47:
  7739  11A5  3473               	retlw	115	;'s'
  7740  11A6  342D               	retlw	45	;'-'
  7741  11A7  346F               	retlw	111	;'o'
  7742  11A8  346B               	retlw	107	;'k'
  7743  11A9  3420               	retlw	32	;' '
  7744  11AA  3400               	retlw	0
  7745                           
  7746                           	psect	stringtext41
  7747  11AB                     __pstringtext41:
  7748  11AB                     STR_1:
  7749  11AB  344F               	retlw	79	;'O'
  7750  11AC  346B               	retlw	107	;'k'
  7751  11AD  3420               	retlw	32	;' '
  7752  11AE  3400               	retlw	0
  7753                           
  7754                           	psect	stringtext42
  7755  0000                     __pstringtext42:
  7756  101A                     
  7757                           	psect	cinit
  7758  0027                     start_initialization:	
  7759                           ; #config settings
  7760                           
  7761  0027                     __initialization:	;BIGRAM
  7762                           
  7763                           ; Clear objects allocated to BIGRAM
  7764  0027  300A               	movlw	low (0+9994)
  7765  0028  0084               	movwf	4
  7766  0029  3027               	movlw	high (0+9994)
  7767  002A  0085               	movwf	5
  7768  002B  30E6               	movlw	230
  7769  002C  00FE               	movwf	btemp
  7770  002D  3000               	movlw	0
  7771  002E  00FF               	movwf	btemp+1
  7772  002F  318C  2401  3180   	fcall	clear_ram0
  7773                           
  7774                           ; Clear objects allocated to COMMON
  7775  0032  01F0               	clrf	__pbssCOMMON& (0+127)
  7776  0033  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  7777  0034  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  7778  0035  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  7779  0036  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  7780  0037  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  7781                           
  7782                           ; Clear objects allocated to BANK0
  7783  0038  3046               	movlw	low __pbssBANK0
  7784  0039  0084               	movwf	4
  7785  003A  3000               	movlw	high __pbssBANK0
  7786  003B  0085               	movwf	5
  7787  003C  3020               	movlw	32
  7788  003D  00FE               	movwf	btemp
  7789  003E  3000               	movlw	0
  7790  003F  00FF               	movwf	btemp+1
  7791  0040  318C  2401         	fcall	clear_ram0
  7792                           
  7793                           ; Clear objects allocated to BANK1
  7794  0042  0141               	movlb	1	; select bank1
  7795  0043  01A0               	clrf	__pbssBANK1& (0+127)
  7796  0044  01A1               	clrf	(__pbssBANK1+1)& (0+127)
  7797  0045  01A2               	clrf	(__pbssBANK1+2)& (0+127)
  7798  0046  01A3               	clrf	(__pbssBANK1+3)& (0+127)
  7799  0047  01A4               	clrf	(__pbssBANK1+4)& (0+127)
  7800  0048  01A5               	clrf	(__pbssBANK1+5)& (0+127)
  7801  0049  01A6               	clrf	(__pbssBANK1+6)& (0+127)
  7802  004A  01A7               	clrf	(__pbssBANK1+7)& (0+127)
  7803  004B                     end_of_initialization:	
  7804                           ;End of C runtime variable initialization code
  7805                           
  7806  004B                     __end_of__initialization:
  7807  004B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7808  004C  0140               	movlb	0
  7809  004D  318E  2E18         	ljmp	_main	;jump to C main() function
  7810                           
  7811                           	psect	bssCOMMON
  7812  0070                     __pbssCOMMON:
  7813  0070                     _NEMS_pulse_states:
  7814  0070                     	ds	1
  7815  0071                     _eusart1RxCount:
  7816  0071                     	ds	1
  7817  0072                     _eusart1RxTail:
  7818  0072                     	ds	1
  7819  0073                     _eusart1RxHead:
  7820  0073                     	ds	1
  7821  0074                     _eusart1TxTail:
  7822  0074                     	ds	1
  7823  0075                     _eusart1TxHead:
  7824  0075                     	ds	1
  7825                           
  7826                           	psect	bssBANK0
  7827  0046                     __pbssBANK0:
  7828  0046                     _eusart1RxStatusBuffer:
  7829  0046                     	ds	8
  7830  004E                     _eusart1TxBuffer:
  7831  004E                     	ds	8
  7832  0056                     _NEMS_pmux1:
  7833  0056                     	ds	1
  7834  0057                     _NEMS_nmux1:
  7835  0057                     	ds	1
  7836  0058                     _NEMS_wave_states:
  7837  0058                     	ds	1
  7838  0059                     _NEMS_states:
  7839  0059                     	ds	1
  7840  005A                     _eusart1RxLastError:
  7841  005A                     	ds	1
  7842  005B                     _program:
  7843  005B                     	ds	11
  7844                           
  7845                           	psect	bssBANK1
  7846  00A0                     __pbssBANK1:
  7847  00A0                     _eusart1RxBuffer:
  7848  00A0                     	ds	8
  7849                           
  7850                           	psect	clrtext
  7851  0C01                     clear_ram0:	
  7852                           ;	Called with FSR0 containing the base address, and
  7853                           ;	btemp/btemp+1 has the size to clear
  7854                           
  7855  0C01  0064               	clrwdt	;clear the watchdog before getting into this loop
  7856  0C02                     clrloop0:
  7857  0C02  0180               	clrf	0	;clear RAM location pointed to by FSR
  7858  0C03  3101               	addfsr 0,1
  7859  0C04  3001               	movlw	1
  7860  0C05  02FE               	subwf	126,f
  7861  0C06  3000               	movlw	0
  7862  0C07  3BFF               	subwfb	127,f
  7863  0C08  087F               	movf	127,w
  7864  0C09  047E               	iorwf	126,w
  7865  0C0A  1903               	btfsc	3,2
  7866  0C0B  3400               	retlw	0	;all done for this memory range, return
  7867  0C0C  2C02               	goto	clrloop0	;have we reached the end yet?
  7868                           
  7869                           	psect	cstackBANK1
  7870  00AE                     __pcstackBANK1:
  7871  00AE                     ??_main:
  7872                           
  7873                           ; 1 bytes @ 0x0
  7874  00AE                     	ds	2
  7875                           
  7876                           	psect	cstackCOMMON
  7877  0076                     __pcstackCOMMON:
  7878  0076                     ?_PMD_Initialize:
  7879  0076                     ?_OSCILLATOR_Initialize:	
  7880                           ; 1 bytes @ 0x0
  7881                           
  7882  0076                     ?_FVR_Initialize:	
  7883                           ; 1 bytes @ 0x0
  7884                           
  7885  0076                     ?_DAC1_Initialize:	
  7886                           ; 1 bytes @ 0x0
  7887                           
  7888  0076                     ?_TMR0_Initialize:	
  7889                           ; 1 bytes @ 0x0
  7890                           
  7891  0076                     ?_EUSART1_Initialize:	
  7892                           ; 1 bytes @ 0x0
  7893                           
  7894  0076                     ?_EUSART1_Receive_ISR:	
  7895                           ; 1 bytes @ 0x0
  7896                           
  7897  0076                     ?_EUSART1_Transmit_ISR:	
  7898                           ; 1 bytes @ 0x0
  7899                           
  7900  0076                     ??_EUSART1_Transmit_ISR:	
  7901                           ; 1 bytes @ 0x0
  7902                           
  7903  0076                     ?_EUSART1_DefaultFramingErrorHandler:	
  7904                           ; 1 bytes @ 0x0
  7905                           
  7906  0076                     ??_EUSART1_DefaultFramingErrorHandler:	
  7907                           ; 1 bytes @ 0x0
  7908                           
  7909  0076                     ?_EUSART1_DefaultOverrunErrorHandler:	
  7910                           ; 1 bytes @ 0x0
  7911                           
  7912  0076                     ??_EUSART1_DefaultOverrunErrorHandler:	
  7913                           ; 1 bytes @ 0x0
  7914                           
  7915  0076                     ?_EUSART1_DefaultErrorHandler:	
  7916                           ; 1 bytes @ 0x0
  7917                           
  7918  0076                     ?_EUSART1_RxDataHandler:	
  7919                           ; 1 bytes @ 0x0
  7920                           
  7921  0076                     ??_EUSART1_RxDataHandler:	
  7922                           ; 1 bytes @ 0x0
  7923                           
  7924  0076                     ?_TMR0_DefaultInterruptHandler:	
  7925                           ; 1 bytes @ 0x0
  7926                           
  7927  0076                     ??_TMR0_DefaultInterruptHandler:	
  7928                           ; 1 bytes @ 0x0
  7929                           
  7930  0076                     ?_NEMS_initialize:	
  7931                           ; 1 bytes @ 0x0
  7932                           
  7933  0076                     ?_NEMS_message_handler:	
  7934                           ; 1 bytes @ 0x0
  7935                           
  7936  0076                     ?_NEMS_timer:	
  7937                           ; 1 bytes @ 0x0
  7938                           
  7939  0076                     ?_NEMS_set_amplitude:	
  7940                           ; 1 bytes @ 0x0
  7941                           
  7942  0076                     ?_NEMS_set_frequency:	
  7943                           ; 1 bytes @ 0x0
  7944                           
  7945  0076                     ?_NEMS_set_phase_duration:	
  7946                           ; 1 bytes @ 0x0
  7947                           
  7948  0076                     ?_NEMS_set_symmetry_factor:	
  7949                           ; 1 bytes @ 0x0
  7950                           
  7951  0076                     ?_NEMS_set_ON_time:	
  7952                           ; 1 bytes @ 0x0
  7953                           
  7954  0076                     ?_NEMS_set_OFF_time:	
  7955                           ; 1 bytes @ 0x0
  7956                           
  7957  0076                     ?_NEMS_set_contractions:	
  7958                           ; 1 bytes @ 0x0
  7959                           
  7960  0076                     ?_NEMS_set_ramp_up:	
  7961                           ; 1 bytes @ 0x0
  7962                           
  7963  0076                     ?_NEMS_set_ramp_down:	
  7964                           ; 1 bytes @ 0x0
  7965                           
  7966  0076                     ?_NEMS_get_program:	
  7967                           ; 1 bytes @ 0x0
  7968                           
  7969  0076                     ?_NEMS_save_program:	
  7970                           ; 1 bytes @ 0x0
  7971                           
  7972  0076                     ?_NEMS_load_program:	
  7973                           ; 1 bytes @ 0x0
  7974                           
  7975  0076                     ?_NEMS_start_program:	
  7976                           ; 1 bytes @ 0x0
  7977                           
  7978  0076                     ?_NEMS_stop_program:	
  7979                           ; 1 bytes @ 0x0
  7980                           
  7981  0076                     ?_NEMS_set_channel1:	
  7982                           ; 1 bytes @ 0x0
  7983                           
  7984  0076                     ?_NEMS_set_channel2:	
  7985                           ; 1 bytes @ 0x0
  7986                           
  7987  0076                     ?_eeprom_read:	
  7988                           ; 1 bytes @ 0x0
  7989                           
  7990  0076                     ?_NEMS_calculate_ramp:	
  7991                           ; 1 bytes @ 0x0
  7992                           
  7993  0076                     ?_PIN_MANAGER_Initialize:	
  7994                           ; 1 bytes @ 0x0
  7995                           
  7996  0076                     ?_SYSTEM_Initialize:	
  7997                           ; 1 bytes @ 0x0
  7998                           
  7999  0076                     ?_EUSART1_is_tx_ready:	
  8000                           ; 1 bytes @ 0x0
  8001                           
  8002  0076                     ?_EUSART1_is_rx_ready:	
  8003                           ; 1 bytes @ 0x0
  8004                           
  8005  0076                     ?_EUSART1_Read:	
  8006                           ; 1 bytes @ 0x0
  8007                           
  8008  0076                     ?_EUSART1_Write:	
  8009                           ; 1 bytes @ 0x0
  8010                           
  8011  0076                     ?_DAC1_SetOutput:	
  8012                           ; 1 bytes @ 0x0
  8013                           
  8014  0076                     ?_TMR0_StartTimer:	
  8015                           ; 1 bytes @ 0x0
  8016                           
  8017  0076                     ?_TMR0_StopTimer:	
  8018                           ; 1 bytes @ 0x0
  8019                           
  8020  0076                     ?_TMR0_ISR:	
  8021                           ; 1 bytes @ 0x0
  8022                           
  8023  0076                     ?_INTERRUPT_InterruptManager:	
  8024                           ; 1 bytes @ 0x0
  8025                           
  8026  0076                     ?_main:	
  8027                           ; 1 bytes @ 0x0
  8028                           
  8029  0076                     ?_NEMS_get_packet:	
  8030                           ; 1 bytes @ 0x0
  8031                           
  8032  0076                     ?_NEMS_recalculate_program:	
  8033                           ; 1 bytes @ 0x0
  8034                           
  8035  0076                     ?i1_DAC1_SetOutput:	
  8036                           ; 1 bytes @ 0x0
  8037                           
  8038  0076                     ??i1_DAC1_SetOutput:	
  8039                           ; 1 bytes @ 0x0
  8040                           
  8041  0076                     i1DAC1_SetOutput@inputData:	
  8042                           ; 1 bytes @ 0x0
  8043                           
  8044                           
  8045                           ; 1 bytes @ 0x0
  8046  0076                     	ds	1
  8047  0077                     ??_EUSART1_Receive_ISR:
  8048  0077                     ??_EUSART1_DefaultErrorHandler:	
  8049                           ; 1 bytes @ 0x1
  8050                           
  8051  0077                     ??_NEMS_timer:	
  8052                           ; 1 bytes @ 0x1
  8053                           
  8054                           
  8055                           ; 1 bytes @ 0x1
  8056  0077                     	ds	5
  8057  007C                     ??_TMR0_ISR:
  8058  007C                     ??_INTERRUPT_InterruptManager:	
  8059                           ; 1 bytes @ 0x6
  8060                           
  8061                           
  8062                           	psect	cstackBANK0
  8063  0020                     __pcstackBANK0:	
  8064                           ; 1 bytes @ 0x6
  8065                           
  8066  0020                     ??_PMD_Initialize:
  8067  0020                     ??_OSCILLATOR_Initialize:	
  8068                           ; 1 bytes @ 0x0
  8069                           
  8070  0020                     ??_FVR_Initialize:	
  8071                           ; 1 bytes @ 0x0
  8072                           
  8073  0020                     ??_DAC1_Initialize:	
  8074                           ; 1 bytes @ 0x0
  8075                           
  8076  0020                     ?_EUSART1_SetRxInterruptHandler:	
  8077                           ; 1 bytes @ 0x0
  8078                           
  8079  0020                     ?_EUSART1_SetTxInterruptHandler:	
  8080                           ; 1 bytes @ 0x0
  8081                           
  8082  0020                     ?_EUSART1_SetFramingErrorHandler:	
  8083                           ; 1 bytes @ 0x0
  8084                           
  8085  0020                     ?_EUSART1_SetOverrunErrorHandler:	
  8086                           ; 1 bytes @ 0x0
  8087                           
  8088  0020                     ?_EUSART1_SetErrorHandler:	
  8089                           ; 1 bytes @ 0x0
  8090                           
  8091  0020                     ?_TMR0_SetInterruptHandler:	
  8092                           ; 1 bytes @ 0x0
  8093                           
  8094  0020                     ?_eeprom_write:	
  8095                           ; 1 bytes @ 0x0
  8096                           
  8097  0020                     ??_eeprom_read:	
  8098                           ; 1 bytes @ 0x0
  8099                           
  8100  0020                     ??_PIN_MANAGER_Initialize:	
  8101                           ; 1 bytes @ 0x0
  8102                           
  8103  0020                     ??_EUSART1_is_tx_ready:	
  8104                           ; 1 bytes @ 0x0
  8105                           
  8106  0020                     ??_EUSART1_is_rx_ready:	
  8107                           ; 1 bytes @ 0x0
  8108                           
  8109  0020                     ??_EUSART1_Read:	
  8110                           ; 1 bytes @ 0x0
  8111                           
  8112  0020                     ??_EUSART1_Write:	
  8113                           ; 1 bytes @ 0x0
  8114                           
  8115  0020                     ??_DAC1_SetOutput:	
  8116                           ; 1 bytes @ 0x0
  8117                           
  8118  0020                     ??_TMR0_StartTimer:	
  8119                           ; 1 bytes @ 0x0
  8120                           
  8121  0020                     ??_TMR0_StopTimer:	
  8122                           ; 1 bytes @ 0x0
  8123                           
  8124  0020                     ?___bmul:	
  8125                           ; 1 bytes @ 0x0
  8126                           
  8127  0020                     ?___lbmod:	
  8128                           ; 1 bytes @ 0x0
  8129                           
  8130  0020                     ?___wmul:	
  8131                           ; 1 bytes @ 0x0
  8132                           
  8133  0020                     DAC1_SetOutput@inputData:	
  8134                           ; 2 bytes @ 0x0
  8135                           
  8136  0020                     eeprom_read@addr:	
  8137                           ; 1 bytes @ 0x0
  8138                           
  8139  0020                     eeprom_write@value:	
  8140                           ; 1 bytes @ 0x0
  8141                           
  8142  0020                     ___bmul@multiplicand:	
  8143                           ; 1 bytes @ 0x0
  8144                           
  8145  0020                     ___lbmod@divisor:	
  8146                           ; 1 bytes @ 0x0
  8147                           
  8148  0020                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  8149                           ; 1 bytes @ 0x0
  8150                           
  8151  0020                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  8152                           ; 2 bytes @ 0x0
  8153                           
  8154  0020                     EUSART1_SetErrorHandler@interruptHandler:	
  8155                           ; 2 bytes @ 0x0
  8156                           
  8157  0020                     EUSART1_SetTxInterruptHandler@interruptHandler:	
  8158                           ; 2 bytes @ 0x0
  8159                           
  8160  0020                     EUSART1_SetRxInterruptHandler@interruptHandler:	
  8161                           ; 2 bytes @ 0x0
  8162                           
  8163  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
  8164                           ; 2 bytes @ 0x0
  8165                           
  8166  0020                     ___wmul@multiplier:	
  8167                           ; 2 bytes @ 0x0
  8168                           
  8169                           
  8170                           ; 2 bytes @ 0x0
  8171  0020                     	ds	1
  8172  0021                     ??_eeprom_write:
  8173  0021                     ??___bmul:	
  8174                           ; 1 bytes @ 0x1
  8175                           
  8176  0021                     ??___lbmod:	
  8177                           ; 1 bytes @ 0x1
  8178                           
  8179  0021                     EUSART1_Read@readValue:	
  8180                           ; 1 bytes @ 0x1
  8181                           
  8182  0021                     EUSART1_Write@txData:	
  8183                           ; 1 bytes @ 0x1
  8184                           
  8185  0021                     eeprom_write@addr:	
  8186                           ; 1 bytes @ 0x1
  8187                           
  8188                           
  8189                           ; 1 bytes @ 0x1
  8190  0021                     	ds	1
  8191  0022                     ??_TMR0_Initialize:
  8192  0022                     ??_EUSART1_Initialize:	
  8193                           ; 1 bytes @ 0x2
  8194                           
  8195  0022                     ??_EUSART1_SetRxInterruptHandler:	
  8196                           ; 1 bytes @ 0x2
  8197                           
  8198  0022                     ??_EUSART1_SetTxInterruptHandler:	
  8199                           ; 1 bytes @ 0x2
  8200                           
  8201  0022                     ??_EUSART1_SetFramingErrorHandler:	
  8202                           ; 1 bytes @ 0x2
  8203                           
  8204  0022                     ??_EUSART1_SetOverrunErrorHandler:	
  8205                           ; 1 bytes @ 0x2
  8206                           
  8207  0022                     ??_EUSART1_SetErrorHandler:	
  8208                           ; 1 bytes @ 0x2
  8209                           
  8210  0022                     ??_TMR0_SetInterruptHandler:	
  8211                           ; 1 bytes @ 0x2
  8212                           
  8213  0022                     ??_NEMS_initialize:	
  8214                           ; 1 bytes @ 0x2
  8215                           
  8216  0022                     ?__puts:	
  8217                           ; 1 bytes @ 0x2
  8218                           
  8219  0022                     ___bmul@product:	
  8220                           ; 1 bytes @ 0x2
  8221                           
  8222  0022                     __puts@pt:	
  8223                           ; 1 bytes @ 0x2
  8224                           
  8225  0022                     ___wmul@multiplicand:	
  8226                           ; 2 bytes @ 0x2
  8227                           
  8228                           
  8229                           ; 2 bytes @ 0x2
  8230  0022                     	ds	1
  8231  0023                     ??_SYSTEM_Initialize:
  8232  0023                     ___bmul@multiplier:	
  8233                           ; 1 bytes @ 0x3
  8234                           
  8235  0023                     ___lbmod@dividend:	
  8236                           ; 1 bytes @ 0x3
  8237                           
  8238                           
  8239                           ; 1 bytes @ 0x3
  8240  0023                     	ds	1
  8241  0024                     ??__puts:
  8242  0024                     ??_NEMS_get_packet:	
  8243                           ; 1 bytes @ 0x4
  8244                           
  8245  0024                     ??___wmul:	
  8246                           ; 1 bytes @ 0x4
  8247                           
  8248  0024                     ___lbmod@counter:	
  8249                           ; 1 bytes @ 0x4
  8250                           
  8251  0024                     ___wmul@product:	
  8252                           ; 1 bytes @ 0x4
  8253                           
  8254                           
  8255                           ; 2 bytes @ 0x4
  8256  0024                     	ds	1
  8257  0025                     ___lbmod@rem:
  8258                           
  8259                           ; 1 bytes @ 0x5
  8260  0025                     	ds	1
  8261  0026                     ?___awdiv:
  8262  0026                     ?___lwdiv:	
  8263                           ; 2 bytes @ 0x6
  8264                           
  8265  0026                     NEMS_get_packet@message:	
  8266                           ; 2 bytes @ 0x6
  8267                           
  8268  0026                     ___awdiv@divisor:	
  8269                           ; 2 bytes @ 0x6
  8270                           
  8271  0026                     ___lwdiv@divisor:	
  8272                           ; 2 bytes @ 0x6
  8273                           
  8274                           
  8275                           ; 2 bytes @ 0x6
  8276  0026                     	ds	1
  8277  0027                     __puts@index:
  8278                           
  8279                           ; 1 bytes @ 0x7
  8280  0027                     	ds	1
  8281  0028                     ??_NEMS_save_program:
  8282  0028                     ??_NEMS_load_program:	
  8283                           ; 1 bytes @ 0x8
  8284                           
  8285  0028                     ??_NEMS_stop_program:	
  8286                           ; 1 bytes @ 0x8
  8287                           
  8288  0028                     NEMS_get_packet@pt:	
  8289                           ; 1 bytes @ 0x8
  8290                           
  8291  0028                     ___awdiv@dividend:	
  8292                           ; 1 bytes @ 0x8
  8293                           
  8294  0028                     ___lwdiv@dividend:	
  8295                           ; 2 bytes @ 0x8
  8296                           
  8297                           
  8298                           ; 2 bytes @ 0x8
  8299  0028                     	ds	1
  8300  0029                     ??_NEMS_set_amplitude:
  8301  0029                     ??_NEMS_set_frequency:	
  8302                           ; 1 bytes @ 0x9
  8303                           
  8304  0029                     ??_NEMS_set_phase_duration:	
  8305                           ; 1 bytes @ 0x9
  8306                           
  8307  0029                     ??_NEMS_set_symmetry_factor:	
  8308                           ; 1 bytes @ 0x9
  8309                           
  8310  0029                     ??_NEMS_set_ON_time:	
  8311                           ; 1 bytes @ 0x9
  8312                           
  8313  0029                     ??_NEMS_set_OFF_time:	
  8314                           ; 1 bytes @ 0x9
  8315                           
  8316  0029                     ??_NEMS_set_contractions:	
  8317                           ; 1 bytes @ 0x9
  8318                           
  8319  0029                     ??_NEMS_set_ramp_up:	
  8320                           ; 1 bytes @ 0x9
  8321                           
  8322  0029                     ??_NEMS_set_ramp_down:	
  8323                           ; 1 bytes @ 0x9
  8324                           
  8325  0029                     ??_NEMS_set_channel1:	
  8326                           ; 1 bytes @ 0x9
  8327                           
  8328  0029                     ??_NEMS_set_channel2:	
  8329                           ; 1 bytes @ 0x9
  8330                           
  8331  0029                     NEMS_save_program@addr:	
  8332                           ; 1 bytes @ 0x9
  8333                           
  8334  0029                     NEMS_load_program@addr:	
  8335                           ; 1 bytes @ 0x9
  8336                           
  8337                           
  8338                           ; 2 bytes @ 0x9
  8339  0029                     	ds	1
  8340  002A                     ??___awdiv:
  8341  002A                     ??___lwdiv:	
  8342                           ; 1 bytes @ 0xA
  8343                           
  8344                           
  8345                           ; 1 bytes @ 0xA
  8346  002A                     	ds	1
  8347  002B                     ___awdiv@counter:
  8348  002B                     ___lwdiv@quotient:	
  8349                           ; 1 bytes @ 0xB
  8350                           
  8351                           
  8352                           ; 2 bytes @ 0xB
  8353  002B                     	ds	1
  8354  002C                     ___awdiv@sign:
  8355                           
  8356                           ; 1 bytes @ 0xC
  8357  002C                     	ds	1
  8358  002D                     ___lwdiv@counter:
  8359  002D                     ___awdiv@quotient:	
  8360                           ; 1 bytes @ 0xD
  8361                           
  8362                           
  8363                           ; 2 bytes @ 0xD
  8364  002D                     	ds	1
  8365  002E                     ??_NEMS_calculate_ramp:
  8366                           
  8367                           ; 1 bytes @ 0xE
  8368  002E                     	ds	1
  8369  002F                     ?__sprintf_u8b:
  8370  002F                     __sprintf_u8b@val:	
  8371                           ; 1 bytes @ 0xF
  8372                           
  8373                           
  8374                           ; 1 bytes @ 0xF
  8375  002F                     	ds	1
  8376  0030                     ??__sprintf_u8b:
  8377                           
  8378                           ; 1 bytes @ 0x10
  8379  0030                     	ds	3
  8380  0033                     __sprintf_u8b@aux:
  8381                           
  8382                           ; 1 bytes @ 0x13
  8383  0033                     	ds	1
  8384  0034                     __sprintf_u8b@buf:
  8385                           
  8386                           ; 3 bytes @ 0x14
  8387  0034                     	ds	3
  8388  0037                     __sprintf_u8b@mess:
  8389                           
  8390                           ; 1 bytes @ 0x17
  8391  0037                     	ds	1
  8392  0038                     ??_NEMS_get_program:
  8393                           
  8394                           ; 1 bytes @ 0x18
  8395  0038                     	ds	1
  8396  0039                     NEMS_get_program@aux:
  8397                           
  8398                           ; 4 bytes @ 0x19
  8399  0039                     	ds	2
  8400  003B                     NEMS_calculate_ramp@i:
  8401                           
  8402                           ; 1 bytes @ 0x1B
  8403  003B                     	ds	1
  8404  003C                     ??_NEMS_recalculate_program:
  8405                           
  8406                           ; 1 bytes @ 0x1C
  8407  003C                     	ds	6
  8408  0042                     ??_NEMS_start_program:
  8409                           
  8410                           ; 1 bytes @ 0x22
  8411  0042                     	ds	1
  8412  0043                     ??_NEMS_message_handler:
  8413                           
  8414                           ; 1 bytes @ 0x23
  8415  0043                     	ds	2
  8416  0045                     NEMS_message_handler@header:
  8417                           
  8418                           ; 1 bytes @ 0x25
  8419  0045                     	ds	1
  8420                           
  8421                           	psect	maintext
  8422  0E18                     __pmaintext:	
  8423 ;;
  8424 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  8425 ;;
  8426 ;; *************** function _main *****************
  8427 ;; Defined at:
  8428 ;;		line 52 in file "main.c"
  8429 ;; Parameters:    Size  Location     Type
  8430 ;;		None
  8431 ;; Auto vars:     Size  Location     Type
  8432 ;;		None
  8433 ;; Return value:  Size  Location     Type
  8434 ;;                  1    wreg      void 
  8435 ;; Registers used:
  8436 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8437 ;; Tracked objects:
  8438 ;;		On entry : B3F/0
  8439 ;;		On exit  : 3F/0
  8440 ;;		Unchanged: 0/0
  8441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8444 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8445 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8446 ;;Total ram usage:        2 bytes
  8447 ;; Hardware stack levels required when called: 9
  8448 ;; This function calls:
  8449 ;;		_EUSART1_is_rx_ready
  8450 ;;		_NEMS_initialize
  8451 ;;		_NEMS_message_handler
  8452 ;;		_SYSTEM_Initialize
  8453 ;; This function is called by:
  8454 ;;		Startup code after reset
  8455 ;; This function uses a non-reentrant model
  8456 ;;
  8457                           
  8458                           
  8459                           ;psect for function _main
  8460  0E18                     _main:
  8461                           
  8462                           ;main.c: 55:     SYSTEM_Initialize();
  8463                           
  8464                           ;incstack = 0
  8465                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8466  0E18  3187  27EB  318E   	fcall	_SYSTEM_Initialize
  8467                           
  8468                           ;main.c: 56:     NEMS_initialize();
  8469  0E1B  318F  273F  318E   	fcall	_NEMS_initialize
  8470                           
  8471                           ;main.c: 62:     (INTCONbits.GIE = 1);
  8472  0E1E  178B               	bsf	11,7	;volatile
  8473                           
  8474                           ;main.c: 65:     (INTCONbits.PEIE = 1);
  8475  0E1F  170B               	bsf	11,6	;volatile
  8476  0E20  1418               	bsf	24,0	;volatile
  8477                           
  8478                           ;main.c: 75:         _delay((unsigned long)((200)*(32000000/4000.0)));
  8479  0E21  3009               	movlw	9
  8480  0E22  0141               	movlb	1	; select bank1
  8481  0E23  00AF               	movwf	(??_main^(0+128)+1)
  8482  0E24  301E               	movlw	30
  8483  0E25  00AE               	movwf	??_main^(0+128)
  8484  0E26  30E4               	movlw	228
  8485  0E27                     u2107:
  8486  0E27  0B89               	decfsz	9,f
  8487  0E28  2E27               	goto	u2107
  8488  0E29  0BAE               	decfsz	??_main^(0+128),f
  8489  0E2A  2E27               	goto	u2107
  8490  0E2B  0BAF               	decfsz	(??_main^(0+128)+1),f
  8491  0E2C  2E27               	goto	u2107
  8492  0E2D  0000               	nop
  8493  0E2E  0140               	movlb	0	; select bank0
  8494  0E2F  1018               	bcf	24,0	;volatile
  8495  0E30                     l3945:
  8496                           
  8497                           ;main.c: 79:     {;main.c: 81:         if(EUSART1_is_rx_ready()) {
  8498  0E30  318B  23C7  318E   	fcall	_EUSART1_is_rx_ready
  8499  0E33  3A00               	xorlw	0
  8500  0E34  1903               	skipnz
  8501  0E35  2E30               	goto	l3945
  8502                           
  8503                           ;main.c: 82:             NEMS_message_handler();
  8504  0E36  3187  271E  318E   	fcall	_NEMS_message_handler
  8505  0E39  2E30               	goto	l3945
  8506  0E3A                     __end_of_main:
  8507                           
  8508                           	psect	text1
  8509  07EB                     __ptext1:	
  8510 ;; *************** function _SYSTEM_Initialize *****************
  8511 ;; Defined at:
  8512 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8513 ;; Parameters:    Size  Location     Type
  8514 ;;		None
  8515 ;; Auto vars:     Size  Location     Type
  8516 ;;		None
  8517 ;; Return value:  Size  Location     Type
  8518 ;;                  1    wreg      void 
  8519 ;; Registers used:
  8520 ;;		wreg, status,2, status,0, pclath, cstack
  8521 ;; Tracked objects:
  8522 ;;		On entry : B3F/0
  8523 ;;		On exit  : 3F/E
  8524 ;;		Unchanged: 0/0
  8525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8530 ;;Total ram usage:        0 bytes
  8531 ;; Hardware stack levels used: 1
  8532 ;; Hardware stack levels required when called: 6
  8533 ;; This function calls:
  8534 ;;		_DAC1_Initialize
  8535 ;;		_EUSART1_Initialize
  8536 ;;		_FVR_Initialize
  8537 ;;		_OSCILLATOR_Initialize
  8538 ;;		_PIN_MANAGER_Initialize
  8539 ;;		_PMD_Initialize
  8540 ;;		_TMR0_Initialize
  8541 ;; This function is called by:
  8542 ;;		_main
  8543 ;; This function uses a non-reentrant model
  8544 ;;
  8545                           
  8546                           
  8547                           ;psect for function _SYSTEM_Initialize
  8548  07EB                     _SYSTEM_Initialize:
  8549                           
  8550                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  8551                           
  8552                           ;incstack = 0
  8553                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8554  07EB  318B  23F7  3187   	fcall	_PMD_Initialize
  8555                           
  8556                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  8557  07EE  318E  26AB  3187   	fcall	_PIN_MANAGER_Initialize
  8558                           
  8559                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  8560  07F1  318B  23ED  3187   	fcall	_OSCILLATOR_Initialize
  8561                           
  8562                           ;mcc_generated_files/mcc.c: 55:     FVR_Initialize();
  8563  07F4  318B  23A9  3187   	fcall	_FVR_Initialize
  8564                           
  8565                           ;mcc_generated_files/mcc.c: 56:     DAC1_Initialize();
  8566  07F7  318B  23A5  3187   	fcall	_DAC1_Initialize
  8567                           
  8568                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  8569  07FA  318D  259E  3187   	fcall	_TMR0_Initialize
  8570                           
  8571                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  8572  07FD  318F  27BD         	fcall	_EUSART1_Initialize
  8573  07FF  0008               	return
  8574  0800                     __end_of_SYSTEM_Initialize:
  8575                           
  8576                           	psect	text2
  8577  0D9E                     __ptext2:	
  8578 ;; *************** function _TMR0_Initialize *****************
  8579 ;; Defined at:
  8580 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  8581 ;; Parameters:    Size  Location     Type
  8582 ;;		None
  8583 ;; Auto vars:     Size  Location     Type
  8584 ;;		None
  8585 ;; Return value:  Size  Location     Type
  8586 ;;                  1    wreg      void 
  8587 ;; Registers used:
  8588 ;;		wreg, status,2, status,0, pclath, cstack
  8589 ;; Tracked objects:
  8590 ;;		On entry : B3F/12
  8591 ;;		On exit  : 3F/B
  8592 ;;		Unchanged: 0/0
  8593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8598 ;;Total ram usage:        0 bytes
  8599 ;; Hardware stack levels used: 1
  8600 ;; Hardware stack levels required when called: 5
  8601 ;; This function calls:
  8602 ;;		_TMR0_SetInterruptHandler
  8603 ;; This function is called by:
  8604 ;;		_SYSTEM_Initialize
  8605 ;; This function uses a non-reentrant model
  8606 ;;
  8607                           
  8608                           
  8609                           ;psect for function _TMR0_Initialize
  8610  0D9E                     _TMR0_Initialize:
  8611                           
  8612                           ;mcc_generated_files/tmr0.c: 71:     T0CON1 = 0x40;
  8613                           
  8614                           ;incstack = 0
  8615                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8616  0D9E  3040               	movlw	64
  8617  0D9F  014B               	movlb	11	; select bank11
  8618  0DA0  009F               	movwf	31	;volatile
  8619                           
  8620                           ;mcc_generated_files/tmr0.c: 74:     TMR0H = 0xFE;
  8621  0DA1  30FE               	movlw	254
  8622  0DA2  009D               	movwf	29	;volatile
  8623                           
  8624                           ;mcc_generated_files/tmr0.c: 77:     TMR0L = 0x80;
  8625  0DA3  3080               	movlw	128
  8626  0DA4  009C               	movwf	28	;volatile
  8627                           
  8628                           ;mcc_generated_files/tmr0.c: 80:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
  8629  0DA5  081D               	movf	29,w	;volatile
  8630  0DA6  0140               	movlb	0	; select bank0
  8631  0DA7  00E9               	movwf	_timer0ReloadVal16bit+1	;volatile
  8632  0DA8  014B               	movlb	11	; select bank11
  8633  0DA9  081C               	movf	28,w	;volatile
  8634  0DAA  0140               	movlb	0	; select bank0
  8635  0DAB  00E8               	movwf	_timer0ReloadVal16bit	;volatile
  8636                           
  8637                           ;mcc_generated_files/tmr0.c: 83:     PIR0bits.TMR0IF = 0;
  8638  0DAC  014E               	movlb	14	; select bank14
  8639  0DAD  128C               	bcf	12,5	;volatile
  8640                           
  8641                           ;mcc_generated_files/tmr0.c: 86:     PIE0bits.TMR0IE = 1;
  8642  0DAE  1696               	bsf	22,5	;volatile
  8643                           
  8644                           ;mcc_generated_files/tmr0.c: 89:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  8645  0DAF  3003               	movlw	low _TMR0_DefaultInterruptHandler
  8646  0DB0  0140               	movlb	0	; select bank0
  8647  0DB1  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  8648  0DB2  3000               	movlw	high _TMR0_DefaultInterruptHandler
  8649  0DB3  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  8650  0DB4  318B  23B2         	fcall	_TMR0_SetInterruptHandler
  8651                           
  8652                           ;mcc_generated_files/tmr0.c: 92:     T0CON0 = 0x90;
  8653  0DB6  3090               	movlw	144
  8654  0DB7  014B               	movlb	11	; select bank11
  8655  0DB8  009E               	movwf	30	;volatile
  8656  0DB9  0008               	return
  8657  0DBA                     __end_of_TMR0_Initialize:
  8658                           
  8659                           	psect	text3
  8660  0BF7                     __ptext3:	
  8661 ;; *************** function _PMD_Initialize *****************
  8662 ;; Defined at:
  8663 ;;		line 77 in file "mcc_generated_files/mcc.c"
  8664 ;; Parameters:    Size  Location     Type
  8665 ;;		None
  8666 ;; Auto vars:     Size  Location     Type
  8667 ;;		None
  8668 ;; Return value:  Size  Location     Type
  8669 ;;                  1    wreg      void 
  8670 ;; Registers used:
  8671 ;;		status,2
  8672 ;; Tracked objects:
  8673 ;;		On entry : B3F/0
  8674 ;;		On exit  : B3F/F
  8675 ;;		Unchanged: B00/0
  8676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8681 ;;Total ram usage:        0 bytes
  8682 ;; Hardware stack levels used: 1
  8683 ;; Hardware stack levels required when called: 4
  8684 ;; This function calls:
  8685 ;;		Nothing
  8686 ;; This function is called by:
  8687 ;;		_SYSTEM_Initialize
  8688 ;; This function uses a non-reentrant model
  8689 ;;
  8690                           
  8691                           
  8692                           ;psect for function _PMD_Initialize
  8693  0BF7                     _PMD_Initialize:
  8694                           
  8695                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
  8696                           
  8697                           ;incstack = 0
  8698                           ; Regs used in _PMD_Initialize: [status,2]
  8699  0BF7  014F               	movlb	15	; select bank15
  8700  0BF8  0196               	clrf	22	;volatile
  8701                           
  8702                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
  8703  0BF9  0197               	clrf	23	;volatile
  8704                           
  8705                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
  8706  0BFA  0198               	clrf	24	;volatile
  8707                           
  8708                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
  8709  0BFB  0199               	clrf	25	;volatile
  8710                           
  8711                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
  8712  0BFC  019A               	clrf	26	;volatile
  8713                           
  8714                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
  8715  0BFD  019B               	clrf	27	;volatile
  8716                           
  8717                           ;mcc_generated_files/mcc.c: 92:     PMD6 = 0x00;
  8718  0BFE  019C               	clrf	28	;volatile
  8719                           
  8720                           ;mcc_generated_files/mcc.c: 94:     PMD7 = 0x00;
  8721  0BFF  019D               	clrf	29	;volatile
  8722  0C00  0008               	return
  8723  0C01                     __end_of_PMD_Initialize:
  8724                           
  8725                           	psect	text4
  8726  0EAB                     __ptext4:	
  8727 ;; *************** function _PIN_MANAGER_Initialize *****************
  8728 ;; Defined at:
  8729 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8730 ;; Parameters:    Size  Location     Type
  8731 ;;		None
  8732 ;; Auto vars:     Size  Location     Type
  8733 ;;		None
  8734 ;; Return value:  Size  Location     Type
  8735 ;;                  1    wreg      void 
  8736 ;; Registers used:
  8737 ;;		wreg, status,2
  8738 ;; Tracked objects:
  8739 ;;		On entry : B3F/F
  8740 ;;		On exit  : B3F/3D
  8741 ;;		Unchanged: B00/0
  8742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8747 ;;Total ram usage:        0 bytes
  8748 ;; Hardware stack levels used: 1
  8749 ;; Hardware stack levels required when called: 4
  8750 ;; This function calls:
  8751 ;;		Nothing
  8752 ;; This function is called by:
  8753 ;;		_SYSTEM_Initialize
  8754 ;; This function uses a non-reentrant model
  8755 ;;
  8756                           
  8757                           
  8758                           ;psect for function _PIN_MANAGER_Initialize
  8759  0EAB                     _PIN_MANAGER_Initialize:
  8760                           
  8761                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  8762                           
  8763                           ;incstack = 0
  8764                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8765  0EAB  0140               	movlb	0	; select bank0
  8766  0EAC  019C               	clrf	28	;volatile
  8767                           
  8768                           ;mcc_generated_files/pin_manager.c: 61:     LATA = 0x00;
  8769  0EAD  0198               	clrf	24	;volatile
  8770                           
  8771                           ;mcc_generated_files/pin_manager.c: 62:     LATB = 0x00;
  8772  0EAE  0199               	clrf	25	;volatile
  8773                           
  8774                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x00;
  8775  0EAF  019A               	clrf	26	;volatile
  8776                           
  8777                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0x08;
  8778  0EB0  3008               	movlw	8
  8779  0EB1  0096               	movwf	22	;volatile
  8780                           
  8781                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0xFE;
  8782  0EB2  30FE               	movlw	254
  8783  0EB3  0092               	movwf	18	;volatile
  8784                           
  8785                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xE0;
  8786  0EB4  30E0               	movlw	224
  8787  0EB5  0093               	movwf	19	;volatile
  8788                           
  8789                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0xA0;
  8790  0EB6  30A0               	movlw	160
  8791  0EB7  0094               	movwf	20	;volatile
  8792                           
  8793                           ;mcc_generated_files/pin_manager.c: 76:     ANSELC = 0x7F;
  8794  0EB8  307F               	movlw	127
  8795  0EB9  017E               	movlb	62	; select bank62
  8796  0EBA  00CE               	movwf	78	;volatile
  8797                           
  8798                           ;mcc_generated_files/pin_manager.c: 77:     ANSELB = 0xFF;
  8799  0EBB  30FF               	movlw	255
  8800  0EBC  00C3               	movwf	67	;volatile
  8801                           
  8802                           ;mcc_generated_files/pin_manager.c: 78:     ANSELA = 0xFF;
  8803  0EBD  30FF               	movlw	255
  8804  0EBE  00B8               	movwf	56	;volatile
  8805                           
  8806                           ;mcc_generated_files/pin_manager.c: 83:     WPUE = 0x00;
  8807  0EBF  01E5               	clrf	101	;volatile
  8808                           
  8809                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
  8810  0EC0  01C4               	clrf	68	;volatile
  8811                           
  8812                           ;mcc_generated_files/pin_manager.c: 85:     WPUA = 0x00;
  8813  0EC1  01B9               	clrf	57	;volatile
  8814                           
  8815                           ;mcc_generated_files/pin_manager.c: 86:     WPUC = 0x00;
  8816  0EC2  01CF               	clrf	79	;volatile
  8817                           
  8818                           ;mcc_generated_files/pin_manager.c: 91:     ODCONE = 0x00;
  8819  0EC3  01E6               	clrf	102	;volatile
  8820                           
  8821                           ;mcc_generated_files/pin_manager.c: 92:     ODCONA = 0x00;
  8822  0EC4  01BA               	clrf	58	;volatile
  8823                           
  8824                           ;mcc_generated_files/pin_manager.c: 93:     ODCONB = 0x00;
  8825  0EC5  01C5               	clrf	69	;volatile
  8826                           
  8827                           ;mcc_generated_files/pin_manager.c: 94:     ODCONC = 0x00;
  8828  0EC6  01D0               	clrf	80	;volatile
  8829                           
  8830                           ;mcc_generated_files/pin_manager.c: 99:     SLRCONA = 0xFF;
  8831  0EC7  30FF               	movlw	255
  8832  0EC8  00BB               	movwf	59	;volatile
  8833                           
  8834                           ;mcc_generated_files/pin_manager.c: 100:     SLRCONB = 0xFF;
  8835  0EC9  30FF               	movlw	255
  8836  0ECA  00C6               	movwf	70	;volatile
  8837                           
  8838                           ;mcc_generated_files/pin_manager.c: 101:     SLRCONC = 0xFF;
  8839  0ECB  30FF               	movlw	255
  8840  0ECC  00D1               	movwf	81	;volatile
  8841                           
  8842                           ;mcc_generated_files/pin_manager.c: 106:     INLVLA = 0x3F;
  8843  0ECD  303F               	movlw	63
  8844  0ECE  00BC               	movwf	60	;volatile
  8845                           
  8846                           ;mcc_generated_files/pin_manager.c: 107:     INLVLB = 0x3F;
  8847  0ECF  303F               	movlw	63
  8848  0ED0  00C7               	movwf	71	;volatile
  8849                           
  8850                           ;mcc_generated_files/pin_manager.c: 108:     INLVLC = 0x3F;
  8851  0ED1  303F               	movlw	63
  8852  0ED2  00D2               	movwf	82	;volatile
  8853                           
  8854                           ;mcc_generated_files/pin_manager.c: 117:     RC6PPS = 0x0F;
  8855  0ED3  300F               	movlw	15
  8856  0ED4  00A6               	movwf	38	;volatile
  8857                           
  8858                           ;mcc_generated_files/pin_manager.c: 118:     RX1DTPPS = 0x17;
  8859  0ED5  3017               	movlw	23
  8860  0ED6  017D               	movlb	61	; select bank61
  8861  0ED7  00CB               	movwf	75	;volatile
  8862  0ED8  0008               	return
  8863  0ED9                     __end_of_PIN_MANAGER_Initialize:
  8864                           
  8865                           	psect	text5
  8866  0BED                     __ptext5:	
  8867 ;; *************** function _OSCILLATOR_Initialize *****************
  8868 ;; Defined at:
  8869 ;;		line 61 in file "mcc_generated_files/mcc.c"
  8870 ;; Parameters:    Size  Location     Type
  8871 ;;		None
  8872 ;; Auto vars:     Size  Location     Type
  8873 ;;		None
  8874 ;; Return value:  Size  Location     Type
  8875 ;;                  1    wreg      void 
  8876 ;; Registers used:
  8877 ;;		wreg, status,2
  8878 ;; Tracked objects:
  8879 ;;		On entry : B3F/3D
  8880 ;;		On exit  : B3F/11
  8881 ;;		Unchanged: B00/0
  8882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8887 ;;Total ram usage:        0 bytes
  8888 ;; Hardware stack levels used: 1
  8889 ;; Hardware stack levels required when called: 4
  8890 ;; This function calls:
  8891 ;;		Nothing
  8892 ;; This function is called by:
  8893 ;;		_SYSTEM_Initialize
  8894 ;; This function uses a non-reentrant model
  8895 ;;
  8896                           
  8897                           
  8898                           ;psect for function _OSCILLATOR_Initialize
  8899  0BED                     _OSCILLATOR_Initialize:
  8900                           
  8901                           ;mcc_generated_files/mcc.c: 64:     OSCCON1 = 0x60;
  8902                           
  8903                           ;incstack = 0
  8904                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8905  0BED  3060               	movlw	96
  8906  0BEE  0151               	movlb	17	; select bank17
  8907  0BEF  008D               	movwf	13	;volatile
  8908                           
  8909                           ;mcc_generated_files/mcc.c: 66:     OSCCON3 = 0x00;
  8910  0BF0  018F               	clrf	15	;volatile
  8911                           
  8912                           ;mcc_generated_files/mcc.c: 68:     OSCEN = 0x00;
  8913  0BF1  0191               	clrf	17	;volatile
  8914                           
  8915                           ;mcc_generated_files/mcc.c: 70:     OSCFRQ = 0x06;
  8916  0BF2  3006               	movlw	6
  8917  0BF3  0093               	movwf	19	;volatile
  8918                           
  8919                           ;mcc_generated_files/mcc.c: 72:     OSCSTAT = 0x00;
  8920  0BF4  0190               	clrf	16	;volatile
  8921                           
  8922                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
  8923  0BF5  0192               	clrf	18	;volatile
  8924  0BF6  0008               	return
  8925  0BF7                     __end_of_OSCILLATOR_Initialize:
  8926                           
  8927                           	psect	text6
  8928  0BA9                     __ptext6:	
  8929 ;; *************** function _FVR_Initialize *****************
  8930 ;; Defined at:
  8931 ;;		line 58 in file "mcc_generated_files/fvr.c"
  8932 ;; Parameters:    Size  Location     Type
  8933 ;;		None
  8934 ;; Auto vars:     Size  Location     Type
  8935 ;;		None
  8936 ;; Return value:  Size  Location     Type
  8937 ;;                  1    wreg      void 
  8938 ;; Registers used:
  8939 ;;		wreg
  8940 ;; Tracked objects:
  8941 ;;		On entry : B3F/11
  8942 ;;		On exit  : B3F/12
  8943 ;;		Unchanged: B00/0
  8944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8949 ;;Total ram usage:        0 bytes
  8950 ;; Hardware stack levels used: 1
  8951 ;; Hardware stack levels required when called: 4
  8952 ;; This function calls:
  8953 ;;		Nothing
  8954 ;; This function is called by:
  8955 ;;		_SYSTEM_Initialize
  8956 ;; This function uses a non-reentrant model
  8957 ;;
  8958                           
  8959                           
  8960                           ;psect for function _FVR_Initialize
  8961  0BA9                     _FVR_Initialize:
  8962                           
  8963                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x84;
  8964                           
  8965                           ;incstack = 0
  8966                           ; Regs used in _FVR_Initialize: [wreg]
  8967  0BA9  3084               	movlw	132
  8968  0BAA  0152               	movlb	18	; select bank18
  8969  0BAB  008C               	movwf	12	;volatile
  8970  0BAC  0008               	return
  8971  0BAD                     __end_of_FVR_Initialize:
  8972                           
  8973                           	psect	text7
  8974  0FBD                     __ptext7:	
  8975 ;; *************** function _EUSART1_Initialize *****************
  8976 ;; Defined at:
  8977 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  8978 ;; Parameters:    Size  Location     Type
  8979 ;;		None
  8980 ;; Auto vars:     Size  Location     Type
  8981 ;;		None
  8982 ;; Return value:  Size  Location     Type
  8983 ;;                  1    wreg      void 
  8984 ;; Registers used:
  8985 ;;		wreg, status,2, status,0, pclath, cstack
  8986 ;; Tracked objects:
  8987 ;;		On entry : 3F/B
  8988 ;;		On exit  : 3F/E
  8989 ;;		Unchanged: 0/0
  8990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8993 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8994 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8995 ;;Total ram usage:        1 bytes
  8996 ;; Hardware stack levels used: 1
  8997 ;; Hardware stack levels required when called: 5
  8998 ;; This function calls:
  8999 ;;		_EUSART1_SetErrorHandler
  9000 ;;		_EUSART1_SetFramingErrorHandler
  9001 ;;		_EUSART1_SetOverrunErrorHandler
  9002 ;;		_EUSART1_SetRxInterruptHandler
  9003 ;;		_EUSART1_SetTxInterruptHandler
  9004 ;; This function is called by:
  9005 ;;		_SYSTEM_Initialize
  9006 ;; This function uses a non-reentrant model
  9007 ;;
  9008                           
  9009                           
  9010                           ;psect for function _EUSART1_Initialize
  9011  0FBD                     _EUSART1_Initialize:
  9012                           
  9013                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
  9014                           
  9015                           ;incstack = 0
  9016                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9017  0FBD  014E               	movlb	14	; select bank14
  9018  0FBE  1299               	bcf	25,5	;volatile
  9019                           
  9020                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  9021  0FBF  30D9               	movlw	low _EUSART1_Receive_ISR
  9022  0FC0  0140               	movlb	0	; select bank0
  9023  0FC1  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
  9024  0FC2  300E               	movlw	high _EUSART1_Receive_ISR
  9025  0FC3  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
  9026  0FC4  318B  23B7  318F   	fcall	_EUSART1_SetRxInterruptHandler
  9027                           
  9028                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
  9029  0FC7  014E               	movlb	14	; select bank14
  9030  0FC8  1219               	bcf	25,4	;volatile
  9031                           
  9032                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  9033  0FC9  3082               	movlw	low _EUSART1_Transmit_ISR
  9034  0FCA  0140               	movlb	0	; select bank0
  9035  0FCB  00A0               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler
  9036  0FCC  300D               	movlw	high _EUSART1_Transmit_ISR
  9037  0FCD  00A1               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1
  9038  0FCE  318B  23BC  318F   	fcall	_EUSART1_SetTxInterruptHandler
  9039                           
  9040                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
  9041  0FD1  3008               	movlw	8
  9042  0FD2  0142               	movlb	2	; select bank2
  9043  0FD3  009F               	movwf	31	;volatile
  9044                           
  9045                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
  9046  0FD4  3090               	movlw	144
  9047  0FD5  009D               	movwf	29	;volatile
  9048                           
  9049                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
  9050  0FD6  3024               	movlw	36
  9051  0FD7  009E               	movwf	30	;volatile
  9052                           
  9053                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x44;
  9054  0FD8  3044               	movlw	68
  9055  0FD9  009B               	movwf	27	;volatile
  9056                           
  9057                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x00;
  9058  0FDA  019C               	clrf	28	;volatile
  9059                           
  9060                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  9061  0FDB  3002               	movlw	low _EUSART1_DefaultFramingErrorHandler
  9062  0FDC  0140               	movlb	0	; select bank0
  9063  0FDD  00A0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
  9064  0FDE  3000               	movlw	high _EUSART1_DefaultFramingErrorHandler
  9065  0FDF  00A1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
  9066  0FE0  318B  23DD  318F   	fcall	_EUSART1_SetFramingErrorHandler
  9067                           
  9068                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  9069  0FE3  30A1               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  9070  0FE4  0140               	movlb	0	; select bank0
  9071  0FE5  00A0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
  9072  0FE6  300B               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  9073  0FE7  00A1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
  9074  0FE8  318B  23E5  318F   	fcall	_EUSART1_SetOverrunErrorHandler
  9075                           
  9076                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  9077  0FEB  3098               	movlw	low _EUSART1_DefaultErrorHandler
  9078  0FEC  0140               	movlb	0	; select bank0
  9079  0FED  00A0               	movwf	EUSART1_SetErrorHandler@interruptHandler
  9080  0FEE  300B               	movlw	high _EUSART1_DefaultErrorHandler
  9081  0FEF  00A1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
  9082  0FF0  318B  23D5         	fcall	_EUSART1_SetErrorHandler
  9083                           
  9084                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  9085  0FF2  0140               	movlb	0	; select bank0
  9086  0FF3  01DA               	clrf	_eusart1RxLastError	;volatile
  9087                           
  9088                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  9089  0FF4  01F5               	clrf	_eusart1TxHead	;volatile
  9090                           
  9091                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  9092  0FF5  01F4               	clrf	_eusart1TxTail	;volatile
  9093                           
  9094                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  9095  0FF6  3008               	movlw	8
  9096  0FF7  00A2               	movwf	??_EUSART1_Initialize
  9097  0FF8  0822               	movf	??_EUSART1_Initialize,w
  9098  0FF9  00EE               	movwf	_eusart1TxBufferRemaining	;volatile
  9099                           
  9100                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  9101  0FFA  01F3               	clrf	_eusart1RxHead	;volatile
  9102                           
  9103                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  9104  0FFB  01F2               	clrf	_eusart1RxTail	;volatile
  9105                           
  9106                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  9107  0FFC  01F1               	clrf	_eusart1RxCount	;volatile
  9108                           
  9109                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
  9110  0FFD  014E               	movlb	14	; select bank14
  9111  0FFE  1699               	bsf	25,5	;volatile
  9112  0FFF  0008               	return
  9113  1000                     __end_of_EUSART1_Initialize:
  9114                           
  9115                           	psect	text8
  9116  0BBC                     __ptext8:	
  9117 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  9118 ;; Defined at:
  9119 ;;		line 276 in file "mcc_generated_files/eusart1.c"
  9120 ;; Parameters:    Size  Location     Type
  9121 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9122 ;;		 -> EUSART1_Transmit_ISR(1), 
  9123 ;; Auto vars:     Size  Location     Type
  9124 ;;		None
  9125 ;; Return value:  Size  Location     Type
  9126 ;;                  1    wreg      void 
  9127 ;; Registers used:
  9128 ;;		wreg
  9129 ;; Tracked objects:
  9130 ;;		On entry : 3F/0
  9131 ;;		On exit  : 3F/0
  9132 ;;		Unchanged: 0/0
  9133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9134 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9137 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9138 ;;Total ram usage:        2 bytes
  9139 ;; Hardware stack levels used: 1
  9140 ;; Hardware stack levels required when called: 4
  9141 ;; This function calls:
  9142 ;;		Nothing
  9143 ;; This function is called by:
  9144 ;;		_EUSART1_Initialize
  9145 ;; This function uses a non-reentrant model
  9146 ;;
  9147                           
  9148                           
  9149                           ;psect for function _EUSART1_SetTxInterruptHandler
  9150  0BBC                     _EUSART1_SetTxInterruptHandler:
  9151                           
  9152                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  9153                           
  9154                           ;incstack = 0
  9155                           ; Regs used in _EUSART1_SetTxInterruptHandler: [wreg]
  9156  0BBC  0821               	movf	EUSART1_SetTxInterruptHandler@interruptHandler+1,w
  9157  0BBD  00ED               	movwf	_EUSART1_TxDefaultInterruptHandler+1
  9158  0BBE  0820               	movf	EUSART1_SetTxInterruptHandler@interruptHandler,w
  9159  0BBF  00EC               	movwf	_EUSART1_TxDefaultInterruptHandler
  9160  0BC0  0008               	return
  9161  0BC1                     __end_of_EUSART1_SetTxInterruptHandler:
  9162                           
  9163                           	psect	text9
  9164  0BB7                     __ptext9:	
  9165 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  9166 ;; Defined at:
  9167 ;;		line 280 in file "mcc_generated_files/eusart1.c"
  9168 ;; Parameters:    Size  Location     Type
  9169 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9170 ;;		 -> EUSART1_Receive_ISR(1), 
  9171 ;; Auto vars:     Size  Location     Type
  9172 ;;		None
  9173 ;; Return value:  Size  Location     Type
  9174 ;;                  1    wreg      void 
  9175 ;; Registers used:
  9176 ;;		wreg
  9177 ;; Tracked objects:
  9178 ;;		On entry : 3F/0
  9179 ;;		On exit  : 3F/0
  9180 ;;		Unchanged: 0/0
  9181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9182 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9185 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9186 ;;Total ram usage:        2 bytes
  9187 ;; Hardware stack levels used: 1
  9188 ;; Hardware stack levels required when called: 4
  9189 ;; This function calls:
  9190 ;;		Nothing
  9191 ;; This function is called by:
  9192 ;;		_EUSART1_Initialize
  9193 ;; This function uses a non-reentrant model
  9194 ;;
  9195                           
  9196                           
  9197                           ;psect for function _EUSART1_SetRxInterruptHandler
  9198  0BB7                     _EUSART1_SetRxInterruptHandler:
  9199                           
  9200                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  9201                           
  9202                           ;incstack = 0
  9203                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
  9204  0BB7  0821               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
  9205  0BB8  00EB               	movwf	_EUSART1_RxDefaultInterruptHandler+1
  9206  0BB9  0820               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
  9207  0BBA  00EA               	movwf	_EUSART1_RxDefaultInterruptHandler
  9208  0BBB  0008               	return
  9209  0BBC                     __end_of_EUSART1_SetRxInterruptHandler:
  9210                           
  9211                           	psect	text10
  9212  0BE5                     __ptext10:	
  9213 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  9214 ;; Defined at:
  9215 ;;		line 268 in file "mcc_generated_files/eusart1.c"
  9216 ;; Parameters:    Size  Location     Type
  9217 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9218 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  9219 ;; Auto vars:     Size  Location     Type
  9220 ;;		None
  9221 ;; Return value:  Size  Location     Type
  9222 ;;                  1    wreg      void 
  9223 ;; Registers used:
  9224 ;;		wreg
  9225 ;; Tracked objects:
  9226 ;;		On entry : 3F/0
  9227 ;;		On exit  : 3F/1
  9228 ;;		Unchanged: 0/0
  9229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9230 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9233 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9234 ;;Total ram usage:        2 bytes
  9235 ;; Hardware stack levels used: 1
  9236 ;; Hardware stack levels required when called: 4
  9237 ;; This function calls:
  9238 ;;		Nothing
  9239 ;; This function is called by:
  9240 ;;		_EUSART1_Initialize
  9241 ;; This function uses a non-reentrant model
  9242 ;;
  9243                           
  9244                           
  9245                           ;psect for function _EUSART1_SetOverrunErrorHandler
  9246  0BE5                     _EUSART1_SetOverrunErrorHandler:
  9247                           
  9248                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
  9249                           
  9250                           ;incstack = 0
  9251                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
  9252  0BE5  0821               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
  9253  0BE6  0141               	movlb	1	; select bank1
  9254  0BE7  00AB               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+128)
  9255  0BE8  0140               	movlb	0	; select bank0
  9256  0BE9  0820               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
  9257  0BEA  0141               	movlb	1	; select bank1
  9258  0BEB  00AA               	movwf	_EUSART1_OverrunErrorHandler^(0+128)
  9259  0BEC  0008               	return
  9260  0BED                     __end_of_EUSART1_SetOverrunErrorHandler:
  9261                           
  9262                           	psect	text11
  9263  0BDD                     __ptext11:	
  9264 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  9265 ;; Defined at:
  9266 ;;		line 264 in file "mcc_generated_files/eusart1.c"
  9267 ;; Parameters:    Size  Location     Type
  9268 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9269 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  9270 ;; Auto vars:     Size  Location     Type
  9271 ;;		None
  9272 ;; Return value:  Size  Location     Type
  9273 ;;                  1    wreg      void 
  9274 ;; Registers used:
  9275 ;;		wreg
  9276 ;; Tracked objects:
  9277 ;;		On entry : 3F/0
  9278 ;;		On exit  : 3F/1
  9279 ;;		Unchanged: 0/0
  9280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9281 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9284 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9285 ;;Total ram usage:        2 bytes
  9286 ;; Hardware stack levels used: 1
  9287 ;; Hardware stack levels required when called: 4
  9288 ;; This function calls:
  9289 ;;		Nothing
  9290 ;; This function is called by:
  9291 ;;		_EUSART1_Initialize
  9292 ;; This function uses a non-reentrant model
  9293 ;;
  9294                           
  9295                           
  9296                           ;psect for function _EUSART1_SetFramingErrorHandler
  9297  0BDD                     _EUSART1_SetFramingErrorHandler:
  9298                           
  9299                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
  9300                           
  9301                           ;incstack = 0
  9302                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
  9303  0BDD  0821               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
  9304  0BDE  0141               	movlb	1	; select bank1
  9305  0BDF  00AD               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+128)
  9306  0BE0  0140               	movlb	0	; select bank0
  9307  0BE1  0820               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
  9308  0BE2  0141               	movlb	1	; select bank1
  9309  0BE3  00AC               	movwf	_EUSART1_FramingErrorHandler^(0+128)
  9310  0BE4  0008               	return
  9311  0BE5                     __end_of_EUSART1_SetFramingErrorHandler:
  9312                           
  9313                           	psect	text12
  9314  0BD5                     __ptext12:	
  9315 ;; *************** function _EUSART1_SetErrorHandler *****************
  9316 ;; Defined at:
  9317 ;;		line 272 in file "mcc_generated_files/eusart1.c"
  9318 ;; Parameters:    Size  Location     Type
  9319 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9320 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  9321 ;; Auto vars:     Size  Location     Type
  9322 ;;		None
  9323 ;; Return value:  Size  Location     Type
  9324 ;;                  1    wreg      void 
  9325 ;; Registers used:
  9326 ;;		wreg
  9327 ;; Tracked objects:
  9328 ;;		On entry : 3F/0
  9329 ;;		On exit  : 3F/1
  9330 ;;		Unchanged: 0/0
  9331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9332 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9335 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9336 ;;Total ram usage:        2 bytes
  9337 ;; Hardware stack levels used: 1
  9338 ;; Hardware stack levels required when called: 4
  9339 ;; This function calls:
  9340 ;;		Nothing
  9341 ;; This function is called by:
  9342 ;;		_EUSART1_Initialize
  9343 ;; This function uses a non-reentrant model
  9344 ;;
  9345                           
  9346                           
  9347                           ;psect for function _EUSART1_SetErrorHandler
  9348  0BD5                     _EUSART1_SetErrorHandler:
  9349                           
  9350                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
  9351                           
  9352                           ;incstack = 0
  9353                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
  9354  0BD5  0821               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
  9355  0BD6  0141               	movlb	1	; select bank1
  9356  0BD7  00A9               	movwf	(_EUSART1_ErrorHandler+1)^(0+128)
  9357  0BD8  0140               	movlb	0	; select bank0
  9358  0BD9  0820               	movf	EUSART1_SetErrorHandler@interruptHandler,w
  9359  0BDA  0141               	movlb	1	; select bank1
  9360  0BDB  00A8               	movwf	_EUSART1_ErrorHandler^(0+128)
  9361  0BDC  0008               	return
  9362  0BDD                     __end_of_EUSART1_SetErrorHandler:
  9363                           
  9364                           	psect	text13
  9365  0BA5                     __ptext13:	
  9366 ;; *************** function _DAC1_Initialize *****************
  9367 ;; Defined at:
  9368 ;;		line 58 in file "mcc_generated_files/dac1.c"
  9369 ;; Parameters:    Size  Location     Type
  9370 ;;		None
  9371 ;; Auto vars:     Size  Location     Type
  9372 ;;		None
  9373 ;; Return value:  Size  Location     Type
  9374 ;;                  1    wreg      void 
  9375 ;; Registers used:
  9376 ;;		wreg, status,2
  9377 ;; Tracked objects:
  9378 ;;		On entry : B3F/12
  9379 ;;		On exit  : B3F/12
  9380 ;;		Unchanged: B00/0
  9381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9386 ;;Total ram usage:        0 bytes
  9387 ;; Hardware stack levels used: 1
  9388 ;; Hardware stack levels required when called: 4
  9389 ;; This function calls:
  9390 ;;		Nothing
  9391 ;; This function is called by:
  9392 ;;		_SYSTEM_Initialize
  9393 ;; This function uses a non-reentrant model
  9394 ;;
  9395                           
  9396                           
  9397                           ;psect for function _DAC1_Initialize
  9398  0BA5                     _DAC1_Initialize:
  9399                           
  9400                           ;mcc_generated_files/dac1.c: 61:     DAC1CON0 = 0xA8;
  9401                           
  9402                           ;incstack = 0
  9403                           ; Regs used in _DAC1_Initialize: [wreg+status,2]
  9404  0BA5  30A8               	movlw	168
  9405  0BA6  008E               	movwf	14	;volatile
  9406                           
  9407                           ;mcc_generated_files/dac1.c: 63:     DAC1CON1 = 0x00;
  9408  0BA7  018F               	clrf	15	;volatile
  9409  0BA8  0008               	return
  9410  0BA9                     __end_of_DAC1_Initialize:
  9411                           
  9412                           	psect	text14
  9413  071E                     __ptext14:	
  9414 ;; *************** function _NEMS_message_handler *****************
  9415 ;; Defined at:
  9416 ;;		line 81 in file "NEMS.c"
  9417 ;; Parameters:    Size  Location     Type
  9418 ;;		None
  9419 ;; Auto vars:     Size  Location     Type
  9420 ;;  header          1   37[BANK0 ] unsigned char 
  9421 ;; Return value:  Size  Location     Type
  9422 ;;                  1    wreg      void 
  9423 ;; Registers used:
  9424 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9425 ;; Tracked objects:
  9426 ;;		On entry : 0/0
  9427 ;;		On exit  : 3F/0
  9428 ;;		Unchanged: 0/0
  9429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9431 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9432 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9433 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9434 ;;Total ram usage:        3 bytes
  9435 ;; Hardware stack levels used: 1
  9436 ;; Hardware stack levels required when called: 8
  9437 ;; This function calls:
  9438 ;;		_EUSART1_Read
  9439 ;;		_NEMS_get_program
  9440 ;;		_NEMS_load_program
  9441 ;;		_NEMS_save_program
  9442 ;;		_NEMS_set_OFF_time
  9443 ;;		_NEMS_set_ON_time
  9444 ;;		_NEMS_set_amplitude
  9445 ;;		_NEMS_set_channel1
  9446 ;;		_NEMS_set_channel2
  9447 ;;		_NEMS_set_contractions
  9448 ;;		_NEMS_set_frequency
  9449 ;;		_NEMS_set_phase_duration
  9450 ;;		_NEMS_set_ramp_down
  9451 ;;		_NEMS_set_ramp_up
  9452 ;;		_NEMS_set_symmetry_factor
  9453 ;;		_NEMS_start_program
  9454 ;;		_NEMS_stop_program
  9455 ;;		__puts
  9456 ;; This function is called by:
  9457 ;;		_main
  9458 ;; This function uses a non-reentrant model
  9459 ;;
  9460                           
  9461                           
  9462                           ;psect for function _NEMS_message_handler
  9463  071E                     _NEMS_message_handler:
  9464                           
  9465                           ;NEMS.c: 83:     unsigned char header;;NEMS.c: 85:     header = EUSART1_Read();
  9466                           
  9467                           ;incstack = 0
  9468                           ; Regs used in _NEMS_message_handler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9469  071E  318E  265D  3187   	fcall	_EUSART1_Read
  9470  0721  00C3               	movwf	??_NEMS_message_handler
  9471  0722  0843               	movf	??_NEMS_message_handler,w
  9472  0723  00C5               	movwf	NEMS_message_handler@header
  9473                           
  9474                           ;NEMS.c: 87:     switch (header) {
  9475  0724  2F5C               	goto	l3927
  9476  0725                     l3891:
  9477                           
  9478                           ;NEMS.c: 89:             _puts("Ok ");
  9479  0725  30AB               	movlw	low (STR_1| (0+32768))
  9480  0726  00A2               	movwf	__puts@pt
  9481  0727  3091               	movlw	high (STR_1| (0+32768))
  9482  0728  00A3               	movwf	__puts@pt+1
  9483  0729  318E  2681         	fcall	__puts
  9484                           
  9485                           ;NEMS.c: 90:             break;
  9486  072B  0008               	return
  9487  072C                     l3893:
  9488                           
  9489                           ;NEMS.c: 93:             NEMS_set_amplitude();
  9490  072C  318C  2498         	fcall	_NEMS_set_amplitude
  9491                           
  9492                           ;NEMS.c: 94:             break;
  9493  072E  0008               	return
  9494  072F                     l3895:
  9495                           
  9496                           ;NEMS.c: 97:             NEMS_set_frequency();
  9497  072F  318C  24F4         	fcall	_NEMS_set_frequency
  9498                           
  9499                           ;NEMS.c: 98:             break;
  9500  0731  0008               	return
  9501  0732                     l3897:
  9502                           
  9503                           ;NEMS.c: 101:             NEMS_set_phase_duration();
  9504  0732  318D  250B         	fcall	_NEMS_set_phase_duration
  9505                           
  9506                           ;NEMS.c: 102:             break;
  9507  0734  0008               	return
  9508  0735                     l3899:
  9509                           
  9510                           ;NEMS.c: 105:             NEMS_set_symmetry_factor();
  9511  0735  318D  2550         	fcall	_NEMS_set_symmetry_factor
  9512                           
  9513                           ;NEMS.c: 106:             break;
  9514  0737  0008               	return
  9515  0738                     l3901:
  9516                           
  9517                           ;NEMS.c: 109:             NEMS_set_ON_time();
  9518  0738  318C  2481         	fcall	_NEMS_set_ON_time
  9519                           
  9520                           ;NEMS.c: 110:             break;
  9521  073A  0008               	return
  9522  073B                     l3903:
  9523                           
  9524                           ;NEMS.c: 113:             NEMS_set_OFF_time();
  9525  073B  318C  246A         	fcall	_NEMS_set_OFF_time
  9526                           
  9527                           ;NEMS.c: 114:             break;
  9528  073D  0008               	return
  9529  073E                     l3905:
  9530                           
  9531                           ;NEMS.c: 117:             NEMS_set_contractions();
  9532  073E  318C  24DD         	fcall	_NEMS_set_contractions
  9533                           
  9534                           ;NEMS.c: 118:             break;
  9535  0740  0008               	return
  9536  0741                     l3907:
  9537                           
  9538                           ;NEMS.c: 121:             NEMS_set_ramp_up();
  9539  0741  318D  2539         	fcall	_NEMS_set_ramp_up
  9540                           
  9541                           ;NEMS.c: 122:             break;
  9542  0743  0008               	return
  9543  0744                     l3909:
  9544                           
  9545                           ;NEMS.c: 125:             NEMS_set_ramp_down();
  9546  0744  318D  2522         	fcall	_NEMS_set_ramp_down
  9547                           
  9548                           ;NEMS.c: 126:             break;
  9549  0746  0008               	return
  9550  0747                     l3911:
  9551                           
  9552                           ;NEMS.c: 129:             NEMS_get_program();
  9553  0747  3183  2376         	fcall	_NEMS_get_program
  9554                           
  9555                           ;NEMS.c: 130:             break;
  9556  0749  0008               	return
  9557  074A                     l3913:
  9558                           
  9559                           ;NEMS.c: 133:             NEMS_save_program();
  9560  074A  3185  2571         	fcall	_NEMS_save_program
  9561                           
  9562                           ;NEMS.c: 134:             break;
  9563  074C  0008               	return
  9564  074D                     l3915:
  9565                           
  9566                           ;NEMS.c: 137:             NEMS_load_program();
  9567  074D  3186  2694         	fcall	_NEMS_load_program
  9568                           
  9569                           ;NEMS.c: 138:             break;
  9570  074F  0008               	return
  9571  0750                     l3917:
  9572                           
  9573                           ;NEMS.c: 141:             NEMS_start_program();
  9574  0750  318D  25BA         	fcall	_NEMS_start_program
  9575                           
  9576                           ;NEMS.c: 142:             break;
  9577  0752  0008               	return
  9578  0753                     l3919:
  9579                           
  9580                           ;NEMS.c: 145:             NEMS_stop_program();
  9581  0753  318C  242F         	fcall	_NEMS_stop_program
  9582                           
  9583                           ;NEMS.c: 146:             break;
  9584  0755  0008               	return
  9585  0756                     l3921:
  9586                           
  9587                           ;NEMS.c: 149:             NEMS_set_channel1();
  9588  0756  318C  24AF         	fcall	_NEMS_set_channel1
  9589                           
  9590                           ;NEMS.c: 150:             break;
  9591  0758  0008               	return
  9592  0759                     l3923:
  9593                           
  9594                           ;NEMS.c: 153:             NEMS_set_channel2();
  9595  0759  318C  24C6         	fcall	_NEMS_set_channel2
  9596                           
  9597                           ;NEMS.c: 154:             break;
  9598  075B  0008               	return
  9599  075C                     l3927:
  9600  075C  0845               	movf	NEMS_message_handler@header,w
  9601  075D  00C3               	movwf	??_NEMS_message_handler
  9602  075E  01C4               	clrf	??_NEMS_message_handler+1
  9603                           
  9604                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9605                           ; Switch size 1, requested type "simple"
  9606                           ; Number of cases is 1, Range of values is 0 to 0
  9607                           ; switch strategies available:
  9608                           ; Name         Instructions Cycles
  9609                           ; simple_byte            4     3 (average)
  9610                           ; direct_byte            8     6 (fixed)
  9611                           ; jumptable            260     6 (fixed)
  9612                           ;	Chosen strategy is simple_byte
  9613  075F  0844               	movf	??_NEMS_message_handler+1,w
  9614  0760  3A00               	xorlw	0	; case 0
  9615  0761  1903               	skipnz
  9616  0762  2F64               	goto	l3989
  9617  0763  2F99               	goto	l488
  9618  0764                     l3989:
  9619                           
  9620                           ; Switch size 1, requested type "simple"
  9621                           ; Number of cases is 17, Range of values is 77 to 116
  9622                           ; switch strategies available:
  9623                           ; Name         Instructions Cycles
  9624                           ; simple_byte           52    27 (average)
  9625                           ; direct_byte           89     9 (fixed)
  9626                           ; jumptable            263     9 (fixed)
  9627                           ;	Chosen strategy is simple_byte
  9628  0764  0843               	movf	??_NEMS_message_handler,w
  9629  0765  3A4D               	xorlw	77	; case 77
  9630  0766  1903               	skipnz
  9631  0767  2F56               	goto	l3921
  9632  0768  3A03               	xorlw	3	; case 78
  9633  0769  1903               	skipnz
  9634  076A  2F53               	goto	l3919
  9635  076B  3A01               	xorlw	1	; case 79
  9636  076C  1903               	skipnz
  9637  076D  2F3B               	goto	l3903
  9638  076E  3A1D               	xorlw	29	; case 82
  9639  076F  1903               	skipnz
  9640  0770  2F44               	goto	l3909
  9641  0771  3A33               	xorlw	51	; case 97
  9642  0772  1903               	skipnz
  9643  0773  2F2C               	goto	l3893
  9644  0774  3A02               	xorlw	2	; case 99
  9645  0775  1903               	skipnz
  9646  0776  2F3E               	goto	l3905
  9647  0777  3A07               	xorlw	7	; case 100
  9648  0778  1903               	skipnz
  9649  0779  2F32               	goto	l3897
  9650  077A  3A02               	xorlw	2	; case 102
  9651  077B  1903               	skipnz
  9652  077C  2F2F               	goto	l3895
  9653  077D  3A0D               	xorlw	13	; case 107
  9654  077E  1903               	skipnz
  9655  077F  2F35               	goto	l3899
  9656  0780  3A07               	xorlw	7	; case 108
  9657  0781  1903               	skipnz
  9658  0782  2F4D               	goto	l3915
  9659  0783  3A01               	xorlw	1	; case 109
  9660  0784  1903               	skipnz
  9661  0785  2F59               	goto	l3923
  9662  0786  3A03               	xorlw	3	; case 110
  9663  0787  1903               	skipnz
  9664  0788  2F50               	goto	l3917
  9665  0789  3A01               	xorlw	1	; case 111
  9666  078A  1903               	skipnz
  9667  078B  2F38               	goto	l3901
  9668  078C  3A1F               	xorlw	31	; case 112
  9669  078D  1903               	skipnz
  9670  078E  2F47               	goto	l3911
  9671  078F  3A02               	xorlw	2	; case 114
  9672  0790  1903               	skipnz
  9673  0791  2F41               	goto	l3907
  9674  0792  3A01               	xorlw	1	; case 115
  9675  0793  1903               	skipnz
  9676  0794  2F4A               	goto	l3913
  9677  0795  3A07               	xorlw	7	; case 116
  9678  0796  1903               	skipnz
  9679  0797  2F25               	goto	l3891
  9680  0798  2F99               	goto	l488
  9681  0799                     l488:
  9682  0799  0008               	return
  9683  079A                     __end_of_NEMS_message_handler:
  9684                           
  9685                           	psect	text15
  9686  0C2F                     __ptext15:	
  9687 ;; *************** function _NEMS_stop_program *****************
  9688 ;; Defined at:
  9689 ;;		line 560 in file "NEMS.c"
  9690 ;; Parameters:    Size  Location     Type
  9691 ;;		None
  9692 ;; Auto vars:     Size  Location     Type
  9693 ;;		None
  9694 ;; Return value:  Size  Location     Type
  9695 ;;                  1    wreg      void 
  9696 ;; Registers used:
  9697 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9698 ;; Tracked objects:
  9699 ;;		On entry : 0/0
  9700 ;;		On exit  : 3F/0
  9701 ;;		Unchanged: 0/0
  9702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9707 ;;Total ram usage:        0 bytes
  9708 ;; Hardware stack levels used: 1
  9709 ;; Hardware stack levels required when called: 6
  9710 ;; This function calls:
  9711 ;;		_DAC1_SetOutput
  9712 ;;		_TMR0_StopTimer
  9713 ;;		__puts
  9714 ;; This function is called by:
  9715 ;;		_NEMS_message_handler
  9716 ;; This function uses a non-reentrant model
  9717 ;;
  9718                           
  9719                           
  9720                           ;psect for function _NEMS_stop_program
  9721  0C2F                     _NEMS_stop_program:
  9722                           
  9723                           ;NEMS.c: 562:     NEMS_states = NEMS_DISABLED;
  9724                           
  9725                           ;incstack = 0
  9726                           ; Regs used in _NEMS_stop_program: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9727  0C2F  0140               	movlb	0	; select bank0
  9728  0C30  01D9               	clrf	_NEMS_states	;volatile
  9729                           
  9730                           ;NEMS.c: 563:     TMR0_StopTimer();
  9731  0C31  318B  239B  318C   	fcall	_TMR0_StopTimer
  9732                           
  9733                           ;NEMS.c: 564:     DAC1_SetOutput(0);
  9734  0C34  3000               	movlw	0
  9735  0C35  318B  23C1  318C   	fcall	_DAC1_SetOutput
  9736                           
  9737                           ;NEMS.c: 566:     _puts("N-ok ");
  9738  0C38  3057               	movlw	low (STR_51| (0+32768))
  9739  0C39  0140               	movlb	0	; select bank0
  9740  0C3A  00A2               	movwf	__puts@pt
  9741  0C3B  3091               	movlw	high (STR_51| (0+32768))
  9742  0C3C  00A3               	movwf	__puts@pt+1
  9743  0C3D  318E  2681         	fcall	__puts
  9744  0C3F  0008               	return
  9745  0C40                     __end_of_NEMS_stop_program:
  9746                           
  9747                           	psect	text16
  9748  0DBA                     __ptext16:	
  9749 ;; *************** function _NEMS_start_program *****************
  9750 ;; Defined at:
  9751 ;;		line 542 in file "NEMS.c"
  9752 ;; Parameters:    Size  Location     Type
  9753 ;;		None
  9754 ;; Auto vars:     Size  Location     Type
  9755 ;;		None
  9756 ;; Return value:  Size  Location     Type
  9757 ;;                  1    wreg      void 
  9758 ;; Registers used:
  9759 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9760 ;; Tracked objects:
  9761 ;;		On entry : 0/0
  9762 ;;		On exit  : 3F/0
  9763 ;;		Unchanged: 0/0
  9764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9767 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9768 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9769 ;;Total ram usage:        1 bytes
  9770 ;; Hardware stack levels used: 1
  9771 ;; Hardware stack levels required when called: 7
  9772 ;; This function calls:
  9773 ;;		_NEMS_recalculate_program
  9774 ;;		_TMR0_StartTimer
  9775 ;;		__puts
  9776 ;; This function is called by:
  9777 ;;		_NEMS_message_handler
  9778 ;; This function uses a non-reentrant model
  9779 ;;
  9780                           
  9781                           
  9782                           ;psect for function _NEMS_start_program
  9783  0DBA                     _NEMS_start_program:
  9784                           
  9785                           ;NEMS.c: 546:     if (program.channel1 == program.channel2) {
  9786                           
  9787                           ;incstack = 0
  9788                           ; Regs used in _NEMS_start_program: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9789  0DBA  0140               	movlb	0	; select bank0
  9790  0DBB  0864               	movf	_program+9,w	;volatile
  9791  0DBC  0665               	xorwf	_program+10,w	;volatile
  9792  0DBD  1D03               	skipz
  9793  0DBE  2DC6               	goto	l3807
  9794                           
  9795                           ;NEMS.c: 547:         _puts("Error: channel1 = channel2\n");
  9796  0DBF  3000               	movlw	low (STR_49| (0+32768))
  9797  0DC0  00A2               	movwf	__puts@pt
  9798  0DC1  3090               	movlw	high (STR_49| (0+32768))
  9799  0DC2  00A3               	movwf	__puts@pt+1
  9800  0DC3  318E  2681         	fcall	__puts
  9801  0DC5  0008               	return
  9802  0DC6                     l3807:
  9803                           
  9804                           ;NEMS.c: 552:     NEMS_recalculate_program();
  9805  0DC6  3182  220D  318D   	fcall	_NEMS_recalculate_program
  9806                           
  9807                           ;NEMS.c: 554:     NEMS_states = NEMS_ENABLED;
  9808  0DC9  3001               	movlw	1
  9809  0DCA  00C2               	movwf	??_NEMS_start_program
  9810  0DCB  0842               	movf	??_NEMS_start_program,w
  9811  0DCC  00D9               	movwf	_NEMS_states	;volatile
  9812                           
  9813                           ;NEMS.c: 555:     TMR0_StartTimer();
  9814  0DCD  318B  239E  318D   	fcall	_TMR0_StartTimer
  9815                           
  9816                           ;NEMS.c: 557:     _puts("n-ok ");
  9817  0DD0  3093               	movlw	low (STR_50| (0+32768))
  9818  0DD1  0140               	movlb	0	; select bank0
  9819  0DD2  00A2               	movwf	__puts@pt
  9820  0DD3  3091               	movlw	high (STR_50| (0+32768))
  9821  0DD4  00A3               	movwf	__puts@pt+1
  9822  0DD5  318E  2681         	fcall	__puts
  9823  0DD7  0008               	return
  9824  0DD8                     __end_of_NEMS_start_program:
  9825                           
  9826                           	psect	text17
  9827  0B9E                     __ptext17:	
  9828 ;; *************** function _TMR0_StartTimer *****************
  9829 ;; Defined at:
  9830 ;;		line 95 in file "mcc_generated_files/tmr0.c"
  9831 ;; Parameters:    Size  Location     Type
  9832 ;;		None
  9833 ;; Auto vars:     Size  Location     Type
  9834 ;;		None
  9835 ;; Return value:  Size  Location     Type
  9836 ;;                  1    wreg      void 
  9837 ;; Registers used:
  9838 ;;		None
  9839 ;; Tracked objects:
  9840 ;;		On entry : 3F/0
  9841 ;;		On exit  : 3F/B
  9842 ;;		Unchanged: 0/0
  9843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9848 ;;Total ram usage:        0 bytes
  9849 ;; Hardware stack levels used: 1
  9850 ;; Hardware stack levels required when called: 4
  9851 ;; This function calls:
  9852 ;;		Nothing
  9853 ;; This function is called by:
  9854 ;;		_NEMS_start_program
  9855 ;; This function uses a non-reentrant model
  9856 ;;
  9857                           
  9858                           
  9859                           ;psect for function _TMR0_StartTimer
  9860  0B9E                     _TMR0_StartTimer:
  9861                           
  9862                           ;mcc_generated_files/tmr0.c: 98:     T0CON0bits.T0EN = 1;
  9863                           
  9864                           ;incstack = 0
  9865                           ; Regs used in _TMR0_StartTimer: []
  9866  0B9E  014B               	movlb	11	; select bank11
  9867  0B9F  179E               	bsf	30,7	;volatile
  9868  0BA0  0008               	return
  9869  0BA1                     __end_of_TMR0_StartTimer:
  9870                           
  9871                           	psect	text18
  9872  020D                     __ptext18:	
  9873 ;; *************** function _NEMS_recalculate_program *****************
  9874 ;; Defined at:
  9875 ;;		line 402 in file "NEMS.c"
  9876 ;; Parameters:    Size  Location     Type
  9877 ;;		None
  9878 ;; Auto vars:     Size  Location     Type
  9879 ;;		None
  9880 ;; Return value:  Size  Location     Type
  9881 ;;                  1    wreg      void 
  9882 ;; Registers used:
  9883 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9884 ;; Tracked objects:
  9885 ;;		On entry : 3F/0
  9886 ;;		On exit  : 3F/0
  9887 ;;		Unchanged: 0/0
  9888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9891 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9892 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9893 ;;Total ram usage:        6 bytes
  9894 ;; Hardware stack levels used: 1
  9895 ;; Hardware stack levels required when called: 6
  9896 ;; This function calls:
  9897 ;;		_NEMS_calculate_ramp
  9898 ;;		___awdiv
  9899 ;;		___bmul
  9900 ;;		___lwdiv
  9901 ;;		___wmul
  9902 ;; This function is called by:
  9903 ;;		_NEMS_start_program
  9904 ;; This function uses a non-reentrant model
  9905 ;;
  9906                           
  9907                           
  9908                           ;psect for function _NEMS_recalculate_program
  9909  020D                     _NEMS_recalculate_program:
  9910                           
  9911                           ;NEMS.c: 404:     waveform.num_clocks_per_pulse = (unsigned short)20000/program.frequenc
      +                          y;
  9912                           
  9913                           ;incstack = 0
  9914                           ; Regs used in _NEMS_recalculate_program: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9915  020D  085C               	movf	_program+1,w	;volatile
  9916  020E  00BC               	movwf	??_NEMS_recalculate_program
  9917  020F  01BD               	clrf	??_NEMS_recalculate_program+1
  9918  0210  083C               	movf	??_NEMS_recalculate_program,w
  9919  0211  00A6               	movwf	___lwdiv@divisor
  9920  0212  083D               	movf	??_NEMS_recalculate_program+1,w
  9921  0213  00A7               	movwf	___lwdiv@divisor+1
  9922  0214  3020               	movlw	32
  9923  0215  00A8               	movwf	___lwdiv@dividend
  9924  0216  304E               	movlw	78
  9925  0217  00A9               	movwf	___lwdiv@dividend+1
  9926  0218  318F  270B  3182   	fcall	___lwdiv
  9927  021B  300A               	movlw	10
  9928  021C  0086               	movwf	6
  9929  021D  3027               	movlw	39
  9930  021E  0087               	movwf	7
  9931  021F  0826               	movf	?___lwdiv,w
  9932  0220  3FC0               	movwi [0]fsr1
  9933  0221  0827               	movf	?___lwdiv+1,w
  9934  0222  3FC1               	movwi [1]fsr1
  9935                           
  9936                           ;NEMS.c: 405:     waveform.clock_index = 0;
  9937  0223  300A               	movlw	10
  9938  0224  0086               	movwf	6
  9939  0225  3027               	movlw	39
  9940  0226  0087               	movwf	7
  9941  0227  3142               	addfsr 1,2
  9942  0228  3000               	movlw	0
  9943  0229  3FC0               	movwi [0]fsr1
  9944  022A  3FC1               	movwi [1]fsr1
  9945                           
  9946                           ;NEMS.c: 406:     waveform.pulse_index = 0;
  9947  022B  300A               	movlw	10
  9948  022C  0086               	movwf	6
  9949  022D  3027               	movlw	39
  9950  022E  0087               	movwf	7
  9951  022F  3144               	addfsr 1,4
  9952  0230  3000               	movlw	0
  9953  0231  3FC0               	movwi [0]fsr1
  9954  0232  3FC1               	movwi [1]fsr1
  9955                           
  9956                           ;NEMS.c: 408:     waveform.ramp_up_pulses = (program.ramp_up*program.frequency)/10;
  9957  0233  300A               	movlw	10
  9958  0234  00A6               	movwf	___awdiv@divisor
  9959  0235  3000               	movlw	0
  9960  0236  00A7               	movwf	___awdiv@divisor+1
  9961  0237  0862               	movf	_program+7,w	;volatile
  9962  0238  00BC               	movwf	??_NEMS_recalculate_program
  9963  0239  01BD               	clrf	??_NEMS_recalculate_program+1
  9964  023A  083C               	movf	??_NEMS_recalculate_program,w
  9965  023B  00A0               	movwf	___wmul@multiplier
  9966  023C  083D               	movf	??_NEMS_recalculate_program+1,w
  9967  023D  00A1               	movwf	___wmul@multiplier+1
  9968  023E  085C               	movf	_program+1,w	;volatile
  9969  023F  00BE               	movwf	??_NEMS_recalculate_program+2
  9970  0240  01BF               	clrf	??_NEMS_recalculate_program+3
  9971  0241  083E               	movf	??_NEMS_recalculate_program+2,w
  9972  0242  00A2               	movwf	___wmul@multiplicand
  9973  0243  083F               	movf	??_NEMS_recalculate_program+3,w
  9974  0244  00A3               	movwf	___wmul@multiplicand+1
  9975  0245  318D  2567  3182   	fcall	___wmul
  9976  0248  0821               	movf	?___wmul+1,w
  9977  0249  00A9               	movwf	___awdiv@dividend+1
  9978  024A  0820               	movf	?___wmul,w
  9979  024B  00A8               	movwf	___awdiv@dividend
  9980  024C  3187  279A  3182   	fcall	___awdiv
  9981  024F  3080               	movlw	128
  9982  0250  0086               	movwf	6
  9983  0251  3027               	movlw	39
  9984  0252  0087               	movwf	7
  9985  0253  0826               	movf	?___awdiv,w
  9986  0254  3FC0               	movwi [0]fsr1
  9987  0255  0827               	movf	?___awdiv+1,w
  9988  0256  3FC1               	movwi [1]fsr1
  9989                           
  9990                           ;NEMS.c: 409:     waveform.ramp_down_pulses = (program.ramp_down*program.frequency)/10;
  9991  0257  300A               	movlw	10
  9992  0258  00A6               	movwf	___awdiv@divisor
  9993  0259  3000               	movlw	0
  9994  025A  00A7               	movwf	___awdiv@divisor+1
  9995  025B  0863               	movf	_program+8,w	;volatile
  9996  025C  00BC               	movwf	??_NEMS_recalculate_program
  9997  025D  01BD               	clrf	??_NEMS_recalculate_program+1
  9998  025E  083C               	movf	??_NEMS_recalculate_program,w
  9999  025F  00A0               	movwf	___wmul@multiplier
 10000  0260  083D               	movf	??_NEMS_recalculate_program+1,w
 10001  0261  00A1               	movwf	___wmul@multiplier+1
 10002  0262  085C               	movf	_program+1,w	;volatile
 10003  0263  00BE               	movwf	??_NEMS_recalculate_program+2
 10004  0264  01BF               	clrf	??_NEMS_recalculate_program+3
 10005  0265  083E               	movf	??_NEMS_recalculate_program+2,w
 10006  0266  00A2               	movwf	___wmul@multiplicand
 10007  0267  083F               	movf	??_NEMS_recalculate_program+3,w
 10008  0268  00A3               	movwf	___wmul@multiplicand+1
 10009  0269  318D  2567  3182   	fcall	___wmul
 10010  026C  0821               	movf	?___wmul+1,w
 10011  026D  00A9               	movwf	___awdiv@dividend+1
 10012  026E  0820               	movf	?___wmul,w
 10013  026F  00A8               	movwf	___awdiv@dividend
 10014  0270  3187  279A  3182   	fcall	___awdiv
 10015  0273  30E8               	movlw	232
 10016  0274  0086               	movwf	6
 10017  0275  3027               	movlw	39
 10018  0276  0087               	movwf	7
 10019  0277  0826               	movf	?___awdiv,w
 10020  0278  3FC0               	movwi [0]fsr1
 10021  0279  0827               	movf	?___awdiv+1,w
 10022  027A  3FC1               	movwi [1]fsr1
 10023                           
 10024                           ;NEMS.c: 411:     waveform.ramp_up_time = waveform.ramp_up_pulses;
 10025  027B  3080               	movlw	128
 10026  027C  0086               	movwf	6
 10027  027D  3027               	movlw	39
 10028  027E  0087               	movwf	7
 10029  027F  3082               	movlw	130
 10030  0280  0084               	movwf	4
 10031  0281  3027               	movlw	39
 10032  0282  0085               	movwf	5
 10033  0283  3F40               	moviw [0]fsr1
 10034  0284  3F80               	movwi [0]fsr0
 10035  0285  3F41               	moviw [1]fsr1
 10036  0286  3F81               	movwi [1]fsr0
 10037                           
 10038                           ;NEMS.c: 413:     waveform.ON_time = program.ON_time*program.frequency + waveform.ramp_u
      +                          p_time;
 10039  0287  3082               	movlw	130
 10040  0288  0086               	movwf	6
 10041  0289  3027               	movlw	39
 10042  028A  0087               	movwf	7
 10043  028B  085F               	movf	_program+4,w	;volatile
 10044  028C  00BC               	movwf	??_NEMS_recalculate_program
 10045  028D  01BD               	clrf	??_NEMS_recalculate_program+1
 10046  028E  083C               	movf	??_NEMS_recalculate_program,w
 10047  028F  00A0               	movwf	___wmul@multiplier
 10048  0290  083D               	movf	??_NEMS_recalculate_program+1,w
 10049  0291  00A1               	movwf	___wmul@multiplier+1
 10050  0292  085C               	movf	_program+1,w	;volatile
 10051  0293  00BE               	movwf	??_NEMS_recalculate_program+2
 10052  0294  01BF               	clrf	??_NEMS_recalculate_program+3
 10053  0295  083E               	movf	??_NEMS_recalculate_program+2,w
 10054  0296  00A2               	movwf	___wmul@multiplicand
 10055  0297  083F               	movf	??_NEMS_recalculate_program+3,w
 10056  0298  00A3               	movwf	___wmul@multiplicand+1
 10057  0299  318D  2567  3182   	fcall	___wmul
 10058  029C  3F40               	moviw [0]fsr1
 10059  029D  0720               	addwf	?___wmul,w
 10060  029E  00C0               	movwf	??_NEMS_recalculate_program+4
 10061  029F  3F41               	moviw [1]fsr1
 10062  02A0  3D21               	addwfc	?___wmul+1,w
 10063  02A1  00C1               	movwf	??_NEMS_recalculate_program+5
 10064  02A2  300A               	movlw	10
 10065  02A3  0086               	movwf	6
 10066  02A4  3027               	movlw	39
 10067  02A5  0087               	movwf	7
 10068  02A6  314A               	addfsr 1,10
 10069  02A7  0840               	movf	??_NEMS_recalculate_program+4,w
 10070  02A8  3FC0               	movwi [0]fsr1
 10071  02A9  0841               	movf	??_NEMS_recalculate_program+5,w
 10072  02AA  3FC1               	movwi [1]fsr1
 10073                           
 10074                           ;NEMS.c: 414:     waveform.ramp_down_time = waveform.ramp_down_pulses + waveform.ON_time
      +                          ;
 10075  02AB  300A               	movlw	10
 10076  02AC  0086               	movwf	6
 10077  02AD  3027               	movlw	39
 10078  02AE  0087               	movwf	7
 10079  02AF  314A               	addfsr 1,10
 10080  02B0  30E8               	movlw	232
 10081  02B1  0084               	movwf	4
 10082  02B2  3027               	movlw	39
 10083  02B3  0085               	movwf	5
 10084  02B4  3F40               	moviw [0]fsr1
 10085  02B5  0700               	addwf	0,w
 10086  02B6  00BC               	movwf	??_NEMS_recalculate_program
 10087  02B7  3101               	addfsr 0,1
 10088  02B8  3F41               	moviw [1]fsr1
 10089  02B9  3D00               	addwfc	0,w
 10090  02BA  00BD               	movwf	??_NEMS_recalculate_program+1
 10091  02BB  30EA               	movlw	234
 10092  02BC  0086               	movwf	6
 10093  02BD  3027               	movlw	39
 10094  02BE  0087               	movwf	7
 10095  02BF  083C               	movf	??_NEMS_recalculate_program,w
 10096  02C0  3FC0               	movwi [0]fsr1
 10097  02C1  083D               	movf	??_NEMS_recalculate_program+1,w
 10098  02C2  3FC1               	movwi [1]fsr1
 10099                           
 10100                           ;NEMS.c: 415:     waveform.OFF_time = program.OFF_time*program.frequency + waveform.ON_t
      +                          ime;
 10101  02C3  300A               	movlw	10
 10102  02C4  0086               	movwf	6
 10103  02C5  3027               	movlw	39
 10104  02C6  0087               	movwf	7
 10105  02C7  314A               	addfsr 1,10
 10106  02C8  0860               	movf	_program+5,w	;volatile
 10107  02C9  00BC               	movwf	??_NEMS_recalculate_program
 10108  02CA  01BD               	clrf	??_NEMS_recalculate_program+1
 10109  02CB  083C               	movf	??_NEMS_recalculate_program,w
 10110  02CC  00A0               	movwf	___wmul@multiplier
 10111  02CD  083D               	movf	??_NEMS_recalculate_program+1,w
 10112  02CE  00A1               	movwf	___wmul@multiplier+1
 10113  02CF  085C               	movf	_program+1,w	;volatile
 10114  02D0  00BE               	movwf	??_NEMS_recalculate_program+2
 10115  02D1  01BF               	clrf	??_NEMS_recalculate_program+3
 10116  02D2  083E               	movf	??_NEMS_recalculate_program+2,w
 10117  02D3  00A2               	movwf	___wmul@multiplicand
 10118  02D4  083F               	movf	??_NEMS_recalculate_program+3,w
 10119  02D5  00A3               	movwf	___wmul@multiplicand+1
 10120  02D6  318D  2567  3182   	fcall	___wmul
 10121  02D9  3F40               	moviw [0]fsr1
 10122  02DA  0720               	addwf	?___wmul,w
 10123  02DB  00C0               	movwf	??_NEMS_recalculate_program+4
 10124  02DC  3F41               	moviw [1]fsr1
 10125  02DD  3D21               	addwfc	?___wmul+1,w
 10126  02DE  00C1               	movwf	??_NEMS_recalculate_program+5
 10127  02DF  300A               	movlw	10
 10128  02E0  0086               	movwf	6
 10129  02E1  3027               	movlw	39
 10130  02E2  0087               	movwf	7
 10131  02E3  314C               	addfsr 1,12
 10132  02E4  0840               	movf	??_NEMS_recalculate_program+4,w
 10133  02E5  3FC0               	movwi [0]fsr1
 10134  02E6  0841               	movf	??_NEMS_recalculate_program+5,w
 10135  02E7  3FC1               	movwi [1]fsr1
 10136                           
 10137                           ;NEMS.c: 417:     waveform.pulse_amplitude = 0;
 10138  02E8  300A               	movlw	10
 10139  02E9  0086               	movwf	6
 10140  02EA  3027               	movlw	39
 10141  02EB  0087               	movwf	7
 10142  02EC  314F               	addfsr 1,15
 10143  02ED  0181               	clrf	1
 10144                           
 10145                           ;NEMS.c: 418:     waveform.current_amplitude = 0;
 10146  02EE  300A               	movlw	10
 10147  02EF  0086               	movwf	6
 10148  02F0  3027               	movlw	39
 10149  02F1  0087               	movwf	7
 10150  02F2  3151               	addfsr 1,17
 10151  02F3  0181               	clrf	1
 10152                           
 10153                           ;NEMS.c: 419:     waveform.program_amplitude = program.amplitude;
 10154  02F4  3018               	movlw	24
 10155  02F5  0086               	movwf	6
 10156  02F6  3027               	movlw	39
 10157  02F7  0087               	movwf	7
 10158  02F8  085B               	movf	_program,w	;volatile
 10159  02F9  0081               	movwf	1
 10160                           
 10161                           ;NEMS.c: 421:     switch (program.symmetry_factor) {
 10162  02FA  2B15               	goto	l3457
 10163  02FB                     l3447:
 10164  02FB  300A               	movlw	10
 10165  02FC  0086               	movwf	6
 10166  02FD  3027               	movlw	39
 10167  02FE  0087               	movwf	7
 10168  02FF  3150               	addfsr 1,16
 10169  0300  0181               	clrf	1
 10170  0301  2B2B               	goto	l3459
 10171  0302                     l3449:
 10172  0302  301A               	movlw	26
 10173  0303  0086               	movwf	6
 10174  0304  3027               	movlw	39
 10175  0305  0087               	movwf	7
 10176  0306  3001               	movlw	1
 10177  0307  2B13               	goto	L2
 10178  0308                     l3451:
 10179  0308  301A               	movlw	26
 10180  0309  0086               	movwf	6
 10181  030A  3027               	movlw	39
 10182  030B  0087               	movwf	7
 10183  030C  3002               	movlw	2
 10184  030D  2B13               	goto	L2
 10185  030E                     l3453:
 10186  030E  301A               	movlw	26
 10187  030F  0086               	movwf	6
 10188  0310  3027               	movlw	39
 10189  0311  0087               	movwf	7
 10190  0312  3003               	movlw	3
 10191  0313                     L2:
 10192  0313  0081               	movwf	1
 10193  0314  2B2B               	goto	l3459
 10194  0315                     l3457:
 10195  0315  085E               	movf	_program+3,w	;volatile
 10196  0316  00BC               	movwf	??_NEMS_recalculate_program
 10197  0317  01BD               	clrf	??_NEMS_recalculate_program+1
 10198                           
 10199                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10200                           ; Switch size 1, requested type "simple"
 10201                           ; Number of cases is 1, Range of values is 0 to 0
 10202                           ; switch strategies available:
 10203                           ; Name         Instructions Cycles
 10204                           ; simple_byte            4     3 (average)
 10205                           ; direct_byte            8     6 (fixed)
 10206                           ; jumptable            260     6 (fixed)
 10207                           ;	Chosen strategy is simple_byte
 10208  0318  083D               	movf	??_NEMS_recalculate_program+1,w
 10209  0319  3A00               	xorlw	0	; case 0
 10210  031A  1903               	skipnz
 10211  031B  2B1D               	goto	l3991
 10212  031C  2AFB               	goto	l3447
 10213  031D                     l3991:
 10214                           
 10215                           ; Switch size 1, requested type "simple"
 10216                           ; Number of cases is 4, Range of values is 1 to 8
 10217                           ; switch strategies available:
 10218                           ; Name         Instructions Cycles
 10219                           ; simple_byte           13     7 (average)
 10220                           ; direct_byte           25     9 (fixed)
 10221                           ; jumptable            263     9 (fixed)
 10222                           ;	Chosen strategy is simple_byte
 10223  031D  083C               	movf	??_NEMS_recalculate_program,w
 10224  031E  3A01               	xorlw	1	; case 1
 10225  031F  1903               	skipnz
 10226  0320  2AFB               	goto	l3447
 10227  0321  3A03               	xorlw	3	; case 2
 10228  0322  1903               	skipnz
 10229  0323  2B02               	goto	l3449
 10230  0324  3A06               	xorlw	6	; case 4
 10231  0325  1903               	skipnz
 10232  0326  2B08               	goto	l3451
 10233  0327  3A0C               	xorlw	12	; case 8
 10234  0328  1903               	skipnz
 10235  0329  2B0E               	goto	l3453
 10236  032A  2AFB               	goto	l3447
 10237  032B                     l3459:
 10238                           
 10239                           ;NEMS.c: 430:     waveform.silence_phase_duration = program.phase_duration + 1;
 10240  032B  085D               	movf	_program+2,w	;volatile
 10241  032C  3E01               	addlw	1
 10242  032D  00BC               	movwf	??_NEMS_recalculate_program
 10243  032E  3012               	movlw	18
 10244  032F  0086               	movwf	6
 10245  0330  3027               	movlw	39
 10246  0331  0087               	movwf	7
 10247  0332  083C               	movf	??_NEMS_recalculate_program,w
 10248  0333  0081               	movwf	1
 10249                           
 10250                           ;NEMS.c: 431:     waveform.minus_phase_duration = program.phase_duration*program.symmetr
      +                          y_factor + program.phase_duration + 1;
 10251  0334  085E               	movf	_program+3,w	;volatile
 10252  0335  00BC               	movwf	??_NEMS_recalculate_program
 10253  0336  083C               	movf	??_NEMS_recalculate_program,w
 10254  0337  00A0               	movwf	___bmul@multiplicand
 10255  0338  085D               	movf	_program+2,w	;volatile
 10256  0339  318C  241E  3182   	fcall	___bmul
 10257  033C  075D               	addwf	_program+2,w	;volatile
 10258  033D  3E01               	addlw	1
 10259  033E  00BD               	movwf	??_NEMS_recalculate_program+1
 10260  033F  3013               	movlw	19
 10261  0340  0086               	movwf	6
 10262  0341  3027               	movlw	39
 10263  0342  0087               	movwf	7
 10264  0343  083D               	movf	??_NEMS_recalculate_program+1,w
 10265  0344  0081               	movwf	1
 10266                           
 10267                           ;NEMS.c: 434:     waveform.ramp_index = 0;
 10268  0345  30EC               	movlw	236
 10269  0346  0086               	movwf	6
 10270  0347  3027               	movlw	39
 10271  0348  0087               	movwf	7
 10272  0349  0181               	clrf	1
 10273                           
 10274                           ;NEMS.c: 435:     waveform.contractions_index = 0;
 10275  034A  30ED               	movlw	237
 10276  034B  0086               	movwf	6
 10277  034C  3027               	movlw	39
 10278  034D  0087               	movwf	7
 10279  034E  0181               	clrf	1
 10280                           
 10281                           ;NEMS.c: 437:     waveform.channel1 = mux[program.channel1];
 10282  034F  0864               	movf	_program+9,w	;volatile
 10283  0350  3EAE               	addlw	low (_mux| (0+32768))
 10284  0351  0084               	movwf	4
 10285  0352  3090               	movlw	high (_mux| (0+32768))
 10286  0353  1803               	skipnc
 10287  0354  3E01               	addlw	1
 10288  0355  0085               	movwf	5
 10289  0356  0800               	movf	0,w	;code access
 10290  0357  00BC               	movwf	??_NEMS_recalculate_program
 10291  0358  30EE               	movlw	238
 10292  0359  0086               	movwf	6
 10293  035A  3027               	movlw	39
 10294  035B  0087               	movwf	7
 10295  035C  083C               	movf	??_NEMS_recalculate_program,w
 10296  035D  0081               	movwf	1
 10297                           
 10298                           ;NEMS.c: 438:     waveform.channel2 = mux[program.channel2];
 10299  035E  0865               	movf	_program+10,w	;volatile
 10300  035F  3EAE               	addlw	low (_mux| (0+32768))
 10301  0360  0084               	movwf	4
 10302  0361  3090               	movlw	high (_mux| (0+32768))
 10303  0362  1803               	skipnc
 10304  0363  3E01               	addlw	1
 10305  0364  0085               	movwf	5
 10306  0365  0800               	movf	0,w	;code access
 10307  0366  00BC               	movwf	??_NEMS_recalculate_program
 10308  0367  30EF               	movlw	239
 10309  0368  0086               	movwf	6
 10310  0369  3027               	movlw	39
 10311  036A  0087               	movwf	7
 10312  036B  083C               	movf	??_NEMS_recalculate_program,w
 10313  036C  0081               	movwf	1
 10314                           
 10315                           ;NEMS.c: 440:     NEMS_calculate_ramp();
 10316  036D  3184  24BD         	fcall	_NEMS_calculate_ramp
 10317                           
 10318                           ;NEMS.c: 442:     NEMS_states = NEMS_DISABLED;
 10319  036F  01D9               	clrf	_NEMS_states	;volatile
 10320                           
 10321                           ;NEMS.c: 443:     NEMS_wave_states = NEMS_OFF_TIME;
 10322  0370  3001               	movlw	1
 10323  0371  00BC               	movwf	??_NEMS_recalculate_program
 10324  0372  083C               	movf	??_NEMS_recalculate_program,w
 10325  0373  00D8               	movwf	_NEMS_wave_states	;volatile
 10326                           
 10327                           ;NEMS.c: 444:     NEMS_pulse_states = NEMS_PULSE_OFF;
 10328  0374  01F0               	clrf	_NEMS_pulse_states	;volatile
 10329  0375  0008               	return
 10330  0376                     __end_of_NEMS_recalculate_program:
 10331                           
 10332                           	psect	text19
 10333  04BD                     __ptext19:	
 10334 ;; *************** function _NEMS_calculate_ramp *****************
 10335 ;; Defined at:
 10336 ;;		line 447 in file "NEMS.c"
 10337 ;; Parameters:    Size  Location     Type
 10338 ;;		None
 10339 ;; Auto vars:     Size  Location     Type
 10340 ;;  i               1   27[BANK0 ] unsigned char 
 10341 ;; Return value:  Size  Location     Type
 10342 ;;                  1    wreg      void 
 10343 ;; Registers used:
 10344 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10345 ;; Tracked objects:
 10346 ;;		On entry : 3F/0
 10347 ;;		On exit  : 3F/0
 10348 ;;		Unchanged: 0/0
 10349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10351 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10352 ;;      Temps:          0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10353 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10354 ;;Total ram usage:       14 bytes
 10355 ;; Hardware stack levels used: 1
 10356 ;; Hardware stack levels required when called: 5
 10357 ;; This function calls:
 10358 ;;		___lwdiv
 10359 ;;		___wmul
 10360 ;; This function is called by:
 10361 ;;		_NEMS_recalculate_program
 10362 ;; This function uses a non-reentrant model
 10363 ;;
 10364                           
 10365                           
 10366                           ;psect for function _NEMS_calculate_ramp
 10367  04BD                     _NEMS_calculate_ramp:
 10368                           
 10369                           ;NEMS.c: 449:     unsigned char i;;NEMS.c: 451:     for (i = 0; i < waveform.ramp_up_pul
      +                          ses; i++) {
 10370                           
 10371                           ;incstack = 0
 10372                           ; Regs used in _NEMS_calculate_ramp: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10373  04BD  01BB               	clrf	NEMS_calculate_ramp@i
 10374  04BE                     l3287:
 10375  04BE  3080               	movlw	128
 10376  04BF  0086               	movwf	6
 10377  04C0  3027               	movlw	39
 10378  04C1  0087               	movwf	7
 10379  04C2  3F40               	moviw [0]fsr1
 10380  04C3  00AE               	movwf	??_NEMS_calculate_ramp
 10381  04C4  3F41               	moviw [1]fsr1
 10382  04C5  00AF               	movwf	??_NEMS_calculate_ramp+1
 10383  04C6  083B               	movf	NEMS_calculate_ramp@i,w
 10384  04C7  00B0               	movwf	??_NEMS_calculate_ramp+2
 10385  04C8  01B1               	clrf	??_NEMS_calculate_ramp+3
 10386  04C9  082F               	movf	??_NEMS_calculate_ramp+1,w
 10387  04CA  0231               	subwf	??_NEMS_calculate_ramp+3,w
 10388  04CB  1D03               	skipz
 10389  04CC  2CCF               	goto	u1785
 10390  04CD  082E               	movf	??_NEMS_calculate_ramp,w
 10391  04CE  0230               	subwf	??_NEMS_calculate_ramp+2,w
 10392  04CF                     u1785:
 10393  04CF  1803               	btfsc	3,0
 10394  04D0  2D10               	goto	l3289
 10395                           
 10396                           ;NEMS.c: 452:         waveform.ramp_up_amplitude[i] = (unsigned short)(i*waveform.progra
      +                          m_amplitude)/waveform.ramp_up_pulses;
 10397  04D1  3080               	movlw	128
 10398  04D2  0086               	movwf	6
 10399  04D3  3027               	movlw	39
 10400  04D4  0087               	movwf	7
 10401  04D5  3F40               	moviw [0]fsr1
 10402  04D6  00A6               	movwf	___lwdiv@divisor
 10403  04D7  3F41               	moviw [1]fsr1
 10404  04D8  00A7               	movwf	___lwdiv@divisor+1
 10405  04D9  083B               	movf	NEMS_calculate_ramp@i,w
 10406  04DA  00AE               	movwf	??_NEMS_calculate_ramp
 10407  04DB  01AF               	clrf	??_NEMS_calculate_ramp+1
 10408  04DC  082E               	movf	??_NEMS_calculate_ramp,w
 10409  04DD  00A0               	movwf	___wmul@multiplier
 10410  04DE  082F               	movf	??_NEMS_calculate_ramp+1,w
 10411  04DF  00A1               	movwf	___wmul@multiplier+1
 10412  04E0  300A               	movlw	10
 10413  04E1  0086               	movwf	6
 10414  04E2  3027               	movlw	39
 10415  04E3  0087               	movwf	7
 10416  04E4  314E               	addfsr 1,14
 10417  04E5  0801               	movf	1,w
 10418  04E6  00B0               	movwf	??_NEMS_calculate_ramp+2
 10419  04E7  01B1               	clrf	??_NEMS_calculate_ramp+3
 10420  04E8  0830               	movf	??_NEMS_calculate_ramp+2,w
 10421  04E9  00A2               	movwf	___wmul@multiplicand
 10422  04EA  0831               	movf	??_NEMS_calculate_ramp+3,w
 10423  04EB  00A3               	movwf	___wmul@multiplicand+1
 10424  04EC  318D  2567  3184   	fcall	___wmul
 10425  04EF  0821               	movf	?___wmul+1,w
 10426  04F0  00A9               	movwf	___lwdiv@dividend+1
 10427  04F1  0820               	movf	?___wmul,w
 10428  04F2  00A8               	movwf	___lwdiv@dividend
 10429  04F3  318F  270B  3184   	fcall	___lwdiv
 10430  04F6  0826               	movf	?___lwdiv,w
 10431  04F7  00B2               	movwf	??_NEMS_calculate_ramp+4
 10432  04F8  083B               	movf	NEMS_calculate_ramp@i,w
 10433  04F9  00B3               	movwf	??_NEMS_calculate_ramp+5
 10434  04FA  01B4               	clrf	??_NEMS_calculate_ramp+6
 10435  04FB  301C               	movlw	28
 10436  04FC  00B5               	movwf	??_NEMS_calculate_ramp+7
 10437  04FD  3027               	movlw	39
 10438  04FE  00B6               	movwf	??_NEMS_calculate_ramp+8
 10439  04FF  0833               	movf	??_NEMS_calculate_ramp+5,w
 10440  0500  0735               	addwf	??_NEMS_calculate_ramp+7,w
 10441  0501  00B7               	movwf	??_NEMS_calculate_ramp+9
 10442  0502  0834               	movf	??_NEMS_calculate_ramp+6,w
 10443  0503  3D36               	addwfc	??_NEMS_calculate_ramp+8,w
 10444  0504  00B8               	movwf	??_NEMS_calculate_ramp+10
 10445  0505  0837               	movf	??_NEMS_calculate_ramp+9,w
 10446  0506  0086               	movwf	6
 10447  0507  0838               	movf	??_NEMS_calculate_ramp+10,w
 10448  0508  0087               	movwf	7
 10449  0509  0832               	movf	??_NEMS_calculate_ramp+4,w
 10450  050A  0081               	movwf	1
 10451                           
 10452                           ;NEMS.c: 453:     }
 10453  050B  3001               	movlw	1
 10454  050C  00AE               	movwf	??_NEMS_calculate_ramp
 10455  050D  082E               	movf	??_NEMS_calculate_ramp,w
 10456  050E  07BB               	addwf	NEMS_calculate_ramp@i,f
 10457  050F  2CBE               	goto	l3287
 10458  0510                     l3289:
 10459                           
 10460                           ;NEMS.c: 455:     for (i = 0; i < waveform.ramp_down_pulses; i++) {
 10461  0510  01BB               	clrf	NEMS_calculate_ramp@i
 10462  0511                     l3295:
 10463  0511  30E8               	movlw	232
 10464  0512  0086               	movwf	6
 10465  0513  3027               	movlw	39
 10466  0514  0087               	movwf	7
 10467  0515  3F40               	moviw [0]fsr1
 10468  0516  00AE               	movwf	??_NEMS_calculate_ramp
 10469  0517  3F41               	moviw [1]fsr1
 10470  0518  00AF               	movwf	??_NEMS_calculate_ramp+1
 10471  0519  083B               	movf	NEMS_calculate_ramp@i,w
 10472  051A  00B0               	movwf	??_NEMS_calculate_ramp+2
 10473  051B  01B1               	clrf	??_NEMS_calculate_ramp+3
 10474  051C  082F               	movf	??_NEMS_calculate_ramp+1,w
 10475  051D  0231               	subwf	??_NEMS_calculate_ramp+3,w
 10476  051E  1D03               	skipz
 10477  051F  2D22               	goto	u1795
 10478  0520  082E               	movf	??_NEMS_calculate_ramp,w
 10479  0521  0230               	subwf	??_NEMS_calculate_ramp+2,w
 10480  0522                     u1795:
 10481  0522  1803               	btfsc	3,0
 10482  0523  0008               	return
 10483                           
 10484                           ;NEMS.c: 456:         waveform.ramp_down_amplitude[i] = (unsigned short)((waveform.ramp_
      +                          down_pulses-i-1)*waveform.program_amplitude)/waveform.ramp_down_pulses;
 10485  0524  30E8               	movlw	232
 10486  0525  0086               	movwf	6
 10487  0526  3027               	movlw	39
 10488  0527  0087               	movwf	7
 10489  0528  3F40               	moviw [0]fsr1
 10490  0529  00A6               	movwf	___lwdiv@divisor
 10491  052A  3F41               	moviw [1]fsr1
 10492  052B  00A7               	movwf	___lwdiv@divisor+1
 10493  052C  30E8               	movlw	232
 10494  052D  0086               	movwf	6
 10495  052E  3027               	movlw	39
 10496  052F  0087               	movwf	7
 10497  0530  3F40               	moviw [0]fsr1
 10498  0531  00AE               	movwf	??_NEMS_calculate_ramp
 10499  0532  3F41               	moviw [1]fsr1
 10500  0533  00AF               	movwf	??_NEMS_calculate_ramp+1
 10501  0534  082F               	movf	??_NEMS_calculate_ramp+1,w
 10502  0535  00B1               	movwf	??_NEMS_calculate_ramp+3
 10503  0536  083B               	movf	NEMS_calculate_ramp@i,w
 10504  0537  022E               	subwf	??_NEMS_calculate_ramp,w
 10505  0538  00B0               	movwf	??_NEMS_calculate_ramp+2
 10506  0539  1C03               	skipc
 10507  053A  03B1               	decf	??_NEMS_calculate_ramp+3,f
 10508  053B  0830               	movf	??_NEMS_calculate_ramp+2,w
 10509  053C  3EFF               	addlw	255
 10510  053D  00A0               	movwf	___wmul@multiplier
 10511  053E  30FF               	movlw	255
 10512  053F  3D31               	addwfc	??_NEMS_calculate_ramp+3,w
 10513  0540  00A1               	movwf	___wmul@multiplier+1
 10514  0541  300A               	movlw	10
 10515  0542  0086               	movwf	6
 10516  0543  3027               	movlw	39
 10517  0544  0087               	movwf	7
 10518  0545  314E               	addfsr 1,14
 10519  0546  0801               	movf	1,w
 10520  0547  00B2               	movwf	??_NEMS_calculate_ramp+4
 10521  0548  01B3               	clrf	??_NEMS_calculate_ramp+5
 10522  0549  0832               	movf	??_NEMS_calculate_ramp+4,w
 10523  054A  00A2               	movwf	___wmul@multiplicand
 10524  054B  0833               	movf	??_NEMS_calculate_ramp+5,w
 10525  054C  00A3               	movwf	___wmul@multiplicand+1
 10526  054D  318D  2567  3184   	fcall	___wmul
 10527  0550  0821               	movf	?___wmul+1,w
 10528  0551  00A9               	movwf	___lwdiv@dividend+1
 10529  0552  0820               	movf	?___wmul,w
 10530  0553  00A8               	movwf	___lwdiv@dividend
 10531  0554  318F  270B  3184   	fcall	___lwdiv
 10532  0557  0826               	movf	?___lwdiv,w
 10533  0558  00B4               	movwf	??_NEMS_calculate_ramp+6
 10534  0559  083B               	movf	NEMS_calculate_ramp@i,w
 10535  055A  00B5               	movwf	??_NEMS_calculate_ramp+7
 10536  055B  01B6               	clrf	??_NEMS_calculate_ramp+8
 10537  055C  3084               	movlw	132
 10538  055D  00B7               	movwf	??_NEMS_calculate_ramp+9
 10539  055E  3027               	movlw	39
 10540  055F  00B8               	movwf	??_NEMS_calculate_ramp+10
 10541  0560  0835               	movf	??_NEMS_calculate_ramp+7,w
 10542  0561  0737               	addwf	??_NEMS_calculate_ramp+9,w
 10543  0562  00B9               	movwf	??_NEMS_calculate_ramp+11
 10544  0563  0836               	movf	??_NEMS_calculate_ramp+8,w
 10545  0564  3D38               	addwfc	??_NEMS_calculate_ramp+10,w
 10546  0565  00BA               	movwf	??_NEMS_calculate_ramp+12
 10547  0566  0839               	movf	??_NEMS_calculate_ramp+11,w
 10548  0567  0086               	movwf	6
 10549  0568  083A               	movf	??_NEMS_calculate_ramp+12,w
 10550  0569  0087               	movwf	7
 10551  056A  0834               	movf	??_NEMS_calculate_ramp+6,w
 10552  056B  0081               	movwf	1
 10553                           
 10554                           ;NEMS.c: 457:     }
 10555  056C  3001               	movlw	1
 10556  056D  00AE               	movwf	??_NEMS_calculate_ramp
 10557  056E  082E               	movf	??_NEMS_calculate_ramp,w
 10558  056F  07BB               	addwf	NEMS_calculate_ramp@i,f
 10559  0570  2D11               	goto	l3295
 10560  0571                     __end_of_NEMS_calculate_ramp:
 10561                           
 10562                           	psect	text20
 10563  0D67                     __ptext20:	
 10564 ;; *************** function ___wmul *****************
 10565 ;; Defined at:
 10566 ;;		line 15 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/Umul16.c"
 10567 ;; Parameters:    Size  Location     Type
 10568 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10569 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10570 ;; Auto vars:     Size  Location     Type
 10571 ;;  product         2    4[BANK0 ] unsigned int 
 10572 ;; Return value:  Size  Location     Type
 10573 ;;                  2    0[BANK0 ] unsigned int 
 10574 ;; Registers used:
 10575 ;;		wreg, status,2, status,0
 10576 ;; Tracked objects:
 10577 ;;		On entry : 3F/0
 10578 ;;		On exit  : 3F/0
 10579 ;;		Unchanged: 0/0
 10580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10581 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10582 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10584 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10585 ;;Total ram usage:        6 bytes
 10586 ;; Hardware stack levels used: 1
 10587 ;; Hardware stack levels required when called: 4
 10588 ;; This function calls:
 10589 ;;		Nothing
 10590 ;; This function is called by:
 10591 ;;		_NEMS_recalculate_program
 10592 ;;		_NEMS_calculate_ramp
 10593 ;; This function uses a non-reentrant model
 10594 ;;
 10595                           
 10596                           
 10597                           ;psect for function ___wmul
 10598  0D67                     ___wmul:
 10599                           
 10600                           ;incstack = 0
 10601                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10602  0D67  01A4               	clrf	___wmul@product
 10603  0D68  01A5               	clrf	___wmul@product+1
 10604  0D69                     l3225:
 10605  0D69  1C20               	btfss	___wmul@multiplier,0
 10606  0D6A  2D6F               	goto	l837
 10607  0D6B  0822               	movf	___wmul@multiplicand,w
 10608  0D6C  07A4               	addwf	___wmul@product,f
 10609  0D6D  0823               	movf	___wmul@multiplicand+1,w
 10610  0D6E  3DA5               	addwfc	___wmul@product+1,f
 10611  0D6F                     l837:
 10612  0D6F  3001               	movlw	1
 10613  0D70                     u1685:
 10614  0D70  35A2               	lslf	___wmul@multiplicand,f
 10615  0D71  0DA3               	rlf	___wmul@multiplicand+1,f
 10616  0D72  0B89               	decfsz	9,f
 10617  0D73  2D70               	goto	u1685
 10618  0D74  3001               	movlw	1
 10619  0D75                     u1695:
 10620  0D75  36A1               	lsrf	___wmul@multiplier+1,f
 10621  0D76  0CA0               	rrf	___wmul@multiplier,f
 10622  0D77  0B89               	decfsz	9,f
 10623  0D78  2D75               	goto	u1695
 10624  0D79  0820               	movf	___wmul@multiplier,w
 10625  0D7A  0421               	iorwf	___wmul@multiplier+1,w
 10626  0D7B  1D03               	btfss	3,2
 10627  0D7C  2D69               	goto	l3225
 10628  0D7D  0825               	movf	___wmul@product+1,w
 10629  0D7E  00A1               	movwf	?___wmul+1
 10630  0D7F  0824               	movf	___wmul@product,w
 10631  0D80  00A0               	movwf	?___wmul
 10632  0D81  0008               	return
 10633  0D82                     __end_of___wmul:
 10634                           
 10635                           	psect	text21
 10636  0F0B                     __ptext21:	
 10637 ;; *************** function ___lwdiv *****************
 10638 ;; Defined at:
 10639 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/lwdiv.c"
 10640 ;; Parameters:    Size  Location     Type
 10641 ;;  divisor         2    6[BANK0 ] unsigned int 
 10642 ;;  dividend        2    8[BANK0 ] unsigned int 
 10643 ;; Auto vars:     Size  Location     Type
 10644 ;;  quotient        2   11[BANK0 ] unsigned int 
 10645 ;;  counter         1   13[BANK0 ] unsigned char 
 10646 ;; Return value:  Size  Location     Type
 10647 ;;                  2    6[BANK0 ] unsigned int 
 10648 ;; Registers used:
 10649 ;;		wreg, status,2, status,0
 10650 ;; Tracked objects:
 10651 ;;		On entry : 3F/0
 10652 ;;		On exit  : 3F/0
 10653 ;;		Unchanged: 0/0
 10654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10655 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10656 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10657 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10658 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10659 ;;Total ram usage:        8 bytes
 10660 ;; Hardware stack levels used: 1
 10661 ;; Hardware stack levels required when called: 4
 10662 ;; This function calls:
 10663 ;;		Nothing
 10664 ;; This function is called by:
 10665 ;;		_NEMS_recalculate_program
 10666 ;;		_NEMS_calculate_ramp
 10667 ;; This function uses a non-reentrant model
 10668 ;;
 10669                           
 10670                           
 10671                           ;psect for function ___lwdiv
 10672  0F0B                     ___lwdiv:
 10673                           
 10674                           ;incstack = 0
 10675                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 10676  0F0B  01AB               	clrf	___lwdiv@quotient
 10677  0F0C  01AC               	clrf	___lwdiv@quotient+1
 10678  0F0D  0826               	movf	___lwdiv@divisor,w
 10679  0F0E  0427               	iorwf	___lwdiv@divisor+1,w
 10680  0F0F  1903               	btfsc	3,2
 10681  0F10  2F3A               	goto	l2339
 10682  0F11  01AD               	clrf	___lwdiv@counter
 10683  0F12  0AAD               	incf	___lwdiv@counter,f
 10684  0F13                     l2327:
 10685  0F13  1BA7               	btfsc	___lwdiv@divisor+1,7
 10686  0F14  2F1F               	goto	l2329
 10687  0F15  3001               	movlw	1
 10688  0F16                     u905:
 10689  0F16  35A6               	lslf	___lwdiv@divisor,f
 10690  0F17  0DA7               	rlf	___lwdiv@divisor+1,f
 10691  0F18  0B89               	decfsz	9,f
 10692  0F19  2F16               	goto	u905
 10693  0F1A  3001               	movlw	1
 10694  0F1B  00AA               	movwf	??___lwdiv
 10695  0F1C  082A               	movf	??___lwdiv,w
 10696  0F1D  07AD               	addwf	___lwdiv@counter,f
 10697  0F1E  2F13               	goto	l2327
 10698  0F1F                     l2329:
 10699  0F1F  3001               	movlw	1
 10700  0F20                     u925:
 10701  0F20  35AB               	lslf	___lwdiv@quotient,f
 10702  0F21  0DAC               	rlf	___lwdiv@quotient+1,f
 10703  0F22  0B89               	decfsz	9,f
 10704  0F23  2F20               	goto	u925
 10705  0F24  0827               	movf	___lwdiv@divisor+1,w
 10706  0F25  0229               	subwf	___lwdiv@dividend+1,w
 10707  0F26  1D03               	skipz
 10708  0F27  2F2A               	goto	u935
 10709  0F28  0826               	movf	___lwdiv@divisor,w
 10710  0F29  0228               	subwf	___lwdiv@dividend,w
 10711  0F2A                     u935:
 10712  0F2A  1C03               	skipc
 10713  0F2B  2F31               	goto	l2335
 10714  0F2C  0826               	movf	___lwdiv@divisor,w
 10715  0F2D  02A8               	subwf	___lwdiv@dividend,f
 10716  0F2E  0827               	movf	___lwdiv@divisor+1,w
 10717  0F2F  3BA9               	subwfb	___lwdiv@dividend+1,f
 10718  0F30  142B               	bsf	___lwdiv@quotient,0
 10719  0F31                     l2335:
 10720  0F31  3001               	movlw	1
 10721  0F32                     u945:
 10722  0F32  36A7               	lsrf	___lwdiv@divisor+1,f
 10723  0F33  0CA6               	rrf	___lwdiv@divisor,f
 10724  0F34  0B89               	decfsz	9,f
 10725  0F35  2F32               	goto	u945
 10726  0F36  3001               	movlw	1
 10727  0F37  02AD               	subwf	___lwdiv@counter,f
 10728  0F38  1D03               	btfss	3,2
 10729  0F39  2F1F               	goto	l2329
 10730  0F3A                     l2339:
 10731  0F3A  082C               	movf	___lwdiv@quotient+1,w
 10732  0F3B  00A7               	movwf	?___lwdiv+1
 10733  0F3C  082B               	movf	___lwdiv@quotient,w
 10734  0F3D  00A6               	movwf	?___lwdiv
 10735  0F3E  0008               	return
 10736  0F3F                     __end_of___lwdiv:
 10737                           
 10738                           	psect	text22
 10739  0D50                     __ptext22:	
 10740 ;; *************** function _NEMS_set_symmetry_factor *****************
 10741 ;; Defined at:
 10742 ;;		line 213 in file "NEMS.c"
 10743 ;; Parameters:    Size  Location     Type
 10744 ;;		None
 10745 ;; Auto vars:     Size  Location     Type
 10746 ;;		None
 10747 ;; Return value:  Size  Location     Type
 10748 ;;                  1    wreg      void 
 10749 ;; Registers used:
 10750 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10751 ;; Tracked objects:
 10752 ;;		On entry : 0/0
 10753 ;;		On exit  : 3F/0
 10754 ;;		Unchanged: 0/0
 10755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10760 ;;Total ram usage:        0 bytes
 10761 ;; Hardware stack levels used: 1
 10762 ;; Hardware stack levels required when called: 6
 10763 ;; This function calls:
 10764 ;;		_NEMS_get_packet
 10765 ;;		__puts
 10766 ;; This function is called by:
 10767 ;;		_NEMS_message_handler
 10768 ;; This function uses a non-reentrant model
 10769 ;;
 10770                           
 10771                           
 10772                           ;psect for function _NEMS_set_symmetry_factor
 10773  0D50                     _NEMS_set_symmetry_factor:
 10774                           
 10775                           ;NEMS.c: 215:     if(NEMS_get_packet(&program.symmetry_factor)) {
 10776                           
 10777                           ;incstack = 0
 10778                           ; Regs used in _NEMS_set_symmetry_factor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10779  0D50  305E               	movlw	(low ((_program| 0+3)))& (0+255)
 10780  0D51  318F  277E  318D   	fcall	_NEMS_get_packet
 10781  0D54  3A00               	xorlw	0
 10782  0D55  1903               	skipnz
 10783  0D56  2D5F               	goto	l3613
 10784                           
 10785                           ;NEMS.c: 216:         _puts("k-ok ");
 10786  0D57  3081               	movlw	low (STR_8| (0+32768))
 10787  0D58  0140               	movlb	0	; select bank0
 10788  0D59  00A2               	movwf	__puts@pt
 10789  0D5A  3091               	movlw	high (STR_8| (0+32768))
 10790  0D5B  00A3               	movwf	__puts@pt+1
 10791  0D5C  318E  2681         	fcall	__puts
 10792                           
 10793                           ;NEMS.c: 218:     } else {
 10794  0D5E  0008               	return
 10795  0D5F                     l3613:
 10796                           
 10797                           ;NEMS.c: 219:         _puts("k-err ");
 10798  0D5F  3035               	movlw	low (STR_9| (0+32768))
 10799  0D60  0140               	movlb	0	; select bank0
 10800  0D61  00A2               	movwf	__puts@pt
 10801  0D62  3091               	movlw	high (STR_9| (0+32768))
 10802  0D63  00A3               	movwf	__puts@pt+1
 10803  0D64  318E  2681         	fcall	__puts
 10804  0D66  0008               	return
 10805  0D67                     __end_of_NEMS_set_symmetry_factor:
 10806                           
 10807                           	psect	text23
 10808  0D39                     __ptext23:	
 10809 ;; *************** function _NEMS_set_ramp_up *****************
 10810 ;; Defined at:
 10811 ;;		line 254 in file "NEMS.c"
 10812 ;; Parameters:    Size  Location     Type
 10813 ;;		None
 10814 ;; Auto vars:     Size  Location     Type
 10815 ;;		None
 10816 ;; Return value:  Size  Location     Type
 10817 ;;                  1    wreg      void 
 10818 ;; Registers used:
 10819 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10820 ;; Tracked objects:
 10821 ;;		On entry : 0/0
 10822 ;;		On exit  : 3F/0
 10823 ;;		Unchanged: 0/0
 10824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10829 ;;Total ram usage:        0 bytes
 10830 ;; Hardware stack levels used: 1
 10831 ;; Hardware stack levels required when called: 6
 10832 ;; This function calls:
 10833 ;;		_NEMS_get_packet
 10834 ;;		__puts
 10835 ;; This function is called by:
 10836 ;;		_NEMS_message_handler
 10837 ;; This function uses a non-reentrant model
 10838 ;;
 10839                           
 10840                           
 10841                           ;psect for function _NEMS_set_ramp_up
 10842  0D39                     _NEMS_set_ramp_up:
 10843                           
 10844                           ;NEMS.c: 256:     if(NEMS_get_packet(&program.ramp_up)) {
 10845                           
 10846                           ;incstack = 0
 10847                           ; Regs used in _NEMS_set_ramp_up: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10848  0D39  3062               	movlw	(low ((_program| 0+7)))& (0+255)
 10849  0D3A  318F  277E  318D   	fcall	_NEMS_get_packet
 10850  0D3D  3A00               	xorlw	0
 10851  0D3E  1903               	skipnz
 10852  0D3F  2D48               	goto	l3637
 10853                           
 10854                           ;NEMS.c: 257:         _puts("r-ok ");
 10855  0D40  309F               	movlw	low (STR_16| (0+32768))
 10856  0D41  0140               	movlb	0	; select bank0
 10857  0D42  00A2               	movwf	__puts@pt
 10858  0D43  3091               	movlw	high (STR_16| (0+32768))
 10859  0D44  00A3               	movwf	__puts@pt+1
 10860  0D45  318E  2681         	fcall	__puts
 10861                           
 10862                           ;NEMS.c: 259:     } else {
 10863  0D47  0008               	return
 10864  0D48                     l3637:
 10865                           
 10866                           ;NEMS.c: 260:         _puts("r-err ");
 10867  0D48  304A               	movlw	low (STR_17| (0+32768))
 10868  0D49  0140               	movlb	0	; select bank0
 10869  0D4A  00A2               	movwf	__puts@pt
 10870  0D4B  3091               	movlw	high (STR_17| (0+32768))
 10871  0D4C  00A3               	movwf	__puts@pt+1
 10872  0D4D  318E  2681         	fcall	__puts
 10873  0D4F  0008               	return
 10874  0D50                     __end_of_NEMS_set_ramp_up:
 10875                           
 10876                           	psect	text24
 10877  0D22                     __ptext24:	
 10878 ;; *************** function _NEMS_set_ramp_down *****************
 10879 ;; Defined at:
 10880 ;;		line 265 in file "NEMS.c"
 10881 ;; Parameters:    Size  Location     Type
 10882 ;;		None
 10883 ;; Auto vars:     Size  Location     Type
 10884 ;;		None
 10885 ;; Return value:  Size  Location     Type
 10886 ;;                  1    wreg      void 
 10887 ;; Registers used:
 10888 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10889 ;; Tracked objects:
 10890 ;;		On entry : 0/0
 10891 ;;		On exit  : 3F/0
 10892 ;;		Unchanged: 0/0
 10893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10898 ;;Total ram usage:        0 bytes
 10899 ;; Hardware stack levels used: 1
 10900 ;; Hardware stack levels required when called: 6
 10901 ;; This function calls:
 10902 ;;		_NEMS_get_packet
 10903 ;;		__puts
 10904 ;; This function is called by:
 10905 ;;		_NEMS_message_handler
 10906 ;; This function uses a non-reentrant model
 10907 ;;
 10908                           
 10909                           
 10910                           ;psect for function _NEMS_set_ramp_down
 10911  0D22                     _NEMS_set_ramp_down:
 10912                           
 10913                           ;NEMS.c: 267:     if(NEMS_get_packet(&program.ramp_down)) {
 10914                           
 10915                           ;incstack = 0
 10916                           ; Regs used in _NEMS_set_ramp_down: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10917  0D22  3063               	movlw	(low ((_program| 0+8)))& (0+255)
 10918  0D23  318F  277E  318D   	fcall	_NEMS_get_packet
 10919  0D26  3A00               	xorlw	0
 10920  0D27  1903               	skipnz
 10921  0D28  2D31               	goto	l3643
 10922                           
 10923                           ;NEMS.c: 268:         _puts("R-ok ");
 10924  0D29  3063               	movlw	low (STR_18| (0+32768))
 10925  0D2A  0140               	movlb	0	; select bank0
 10926  0D2B  00A2               	movwf	__puts@pt
 10927  0D2C  3091               	movlw	high (STR_18| (0+32768))
 10928  0D2D  00A3               	movwf	__puts@pt+1
 10929  0D2E  318E  2681         	fcall	__puts
 10930                           
 10931                           ;NEMS.c: 270:     } else {
 10932  0D30  0008               	return
 10933  0D31                     l3643:
 10934                           
 10935                           ;NEMS.c: 271:         _puts("R-err ");
 10936  0D31  3012               	movlw	low (STR_19| (0+32768))
 10937  0D32  0140               	movlb	0	; select bank0
 10938  0D33  00A2               	movwf	__puts@pt
 10939  0D34  3091               	movlw	high (STR_19| (0+32768))
 10940  0D35  00A3               	movwf	__puts@pt+1
 10941  0D36  318E  2681         	fcall	__puts
 10942  0D38  0008               	return
 10943  0D39                     __end_of_NEMS_set_ramp_down:
 10944                           
 10945                           	psect	text25
 10946  0D0B                     __ptext25:	
 10947 ;; *************** function _NEMS_set_phase_duration *****************
 10948 ;; Defined at:
 10949 ;;		line 203 in file "NEMS.c"
 10950 ;; Parameters:    Size  Location     Type
 10951 ;;		None
 10952 ;; Auto vars:     Size  Location     Type
 10953 ;;		None
 10954 ;; Return value:  Size  Location     Type
 10955 ;;                  1    wreg      void 
 10956 ;; Registers used:
 10957 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10958 ;; Tracked objects:
 10959 ;;		On entry : 0/0
 10960 ;;		On exit  : 3F/0
 10961 ;;		Unchanged: 0/0
 10962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10967 ;;Total ram usage:        0 bytes
 10968 ;; Hardware stack levels used: 1
 10969 ;; Hardware stack levels required when called: 6
 10970 ;; This function calls:
 10971 ;;		_NEMS_get_packet
 10972 ;;		__puts
 10973 ;; This function is called by:
 10974 ;;		_NEMS_message_handler
 10975 ;; This function uses a non-reentrant model
 10976 ;;
 10977                           
 10978                           
 10979                           ;psect for function _NEMS_set_phase_duration
 10980  0D0B                     _NEMS_set_phase_duration:
 10981                           
 10982                           ;NEMS.c: 205:     if(NEMS_get_packet(&program.phase_duration)) {
 10983                           
 10984                           ;incstack = 0
 10985                           ; Regs used in _NEMS_set_phase_duration: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10986  0D0B  305D               	movlw	(low ((_program| 0+2)))& (0+255)
 10987  0D0C  318F  277E  318D   	fcall	_NEMS_get_packet
 10988  0D0F  3A00               	xorlw	0
 10989  0D10  1903               	skipnz
 10990  0D11  2D1A               	goto	l3607
 10991                           
 10992                           ;NEMS.c: 206:         _puts("d-ok ");
 10993  0D12  3075               	movlw	low (STR_6| (0+32768))
 10994  0D13  0140               	movlb	0	; select bank0
 10995  0D14  00A2               	movwf	__puts@pt
 10996  0D15  3091               	movlw	high (STR_6| (0+32768))
 10997  0D16  00A3               	movwf	__puts@pt+1
 10998  0D17  318E  2681         	fcall	__puts
 10999                           
 11000                           ;NEMS.c: 208:     } else {
 11001  0D19  0008               	return
 11002  0D1A                     l3607:
 11003                           
 11004                           ;NEMS.c: 209:         _puts("d-err ");
 11005  0D1A  3027               	movlw	low (STR_7| (0+32768))
 11006  0D1B  0140               	movlb	0	; select bank0
 11007  0D1C  00A2               	movwf	__puts@pt
 11008  0D1D  3091               	movlw	high (STR_7| (0+32768))
 11009  0D1E  00A3               	movwf	__puts@pt+1
 11010  0D1F  318E  2681         	fcall	__puts
 11011  0D21  0008               	return
 11012  0D22                     __end_of_NEMS_set_phase_duration:
 11013                           
 11014                           	psect	text26
 11015  0CF4                     __ptext26:	
 11016 ;; *************** function _NEMS_set_frequency *****************
 11017 ;; Defined at:
 11018 ;;		line 193 in file "NEMS.c"
 11019 ;; Parameters:    Size  Location     Type
 11020 ;;		None
 11021 ;; Auto vars:     Size  Location     Type
 11022 ;;		None
 11023 ;; Return value:  Size  Location     Type
 11024 ;;                  1    wreg      void 
 11025 ;; Registers used:
 11026 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11027 ;; Tracked objects:
 11028 ;;		On entry : 0/0
 11029 ;;		On exit  : 3F/0
 11030 ;;		Unchanged: 0/0
 11031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11036 ;;Total ram usage:        0 bytes
 11037 ;; Hardware stack levels used: 1
 11038 ;; Hardware stack levels required when called: 6
 11039 ;; This function calls:
 11040 ;;		_NEMS_get_packet
 11041 ;;		__puts
 11042 ;; This function is called by:
 11043 ;;		_NEMS_message_handler
 11044 ;; This function uses a non-reentrant model
 11045 ;;
 11046                           
 11047                           
 11048                           ;psect for function _NEMS_set_frequency
 11049  0CF4                     _NEMS_set_frequency:
 11050                           
 11051                           ;NEMS.c: 195:     if(NEMS_get_packet(&program.frequency)) {
 11052                           
 11053                           ;incstack = 0
 11054                           ; Regs used in _NEMS_set_frequency: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11055  0CF4  305C               	movlw	(low ((_program| 0+1)))& (0+255)
 11056  0CF5  318F  277E  318C   	fcall	_NEMS_get_packet
 11057  0CF8  3A00               	xorlw	0
 11058  0CF9  1903               	skipnz
 11059  0CFA  2D03               	goto	l3601
 11060                           
 11061                           ;NEMS.c: 196:         _puts("f-ok ");
 11062  0CFB  307B               	movlw	low (STR_4| (0+32768))
 11063  0CFC  0140               	movlb	0	; select bank0
 11064  0CFD  00A2               	movwf	__puts@pt
 11065  0CFE  3091               	movlw	high (STR_4| (0+32768))
 11066  0CFF  00A3               	movwf	__puts@pt+1
 11067  0D00  318E  2681         	fcall	__puts
 11068                           
 11069                           ;NEMS.c: 198:     } else {
 11070  0D02  0008               	return
 11071  0D03                     l3601:
 11072                           
 11073                           ;NEMS.c: 199:         _puts("f-err ");
 11074  0D03  302E               	movlw	low (STR_5| (0+32768))
 11075  0D04  0140               	movlb	0	; select bank0
 11076  0D05  00A2               	movwf	__puts@pt
 11077  0D06  3091               	movlw	high (STR_5| (0+32768))
 11078  0D07  00A3               	movwf	__puts@pt+1
 11079  0D08  318E  2681         	fcall	__puts
 11080  0D0A  0008               	return
 11081  0D0B                     __end_of_NEMS_set_frequency:
 11082                           
 11083                           	psect	text27
 11084  0CDD                     __ptext27:	
 11085 ;; *************** function _NEMS_set_contractions *****************
 11086 ;; Defined at:
 11087 ;;		line 244 in file "NEMS.c"
 11088 ;; Parameters:    Size  Location     Type
 11089 ;;		None
 11090 ;; Auto vars:     Size  Location     Type
 11091 ;;		None
 11092 ;; Return value:  Size  Location     Type
 11093 ;;                  1    wreg      void 
 11094 ;; Registers used:
 11095 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11096 ;; Tracked objects:
 11097 ;;		On entry : 0/0
 11098 ;;		On exit  : 3F/0
 11099 ;;		Unchanged: 0/0
 11100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11105 ;;Total ram usage:        0 bytes
 11106 ;; Hardware stack levels used: 1
 11107 ;; Hardware stack levels required when called: 6
 11108 ;; This function calls:
 11109 ;;		_NEMS_get_packet
 11110 ;;		__puts
 11111 ;; This function is called by:
 11112 ;;		_NEMS_message_handler
 11113 ;; This function uses a non-reentrant model
 11114 ;;
 11115                           
 11116                           
 11117                           ;psect for function _NEMS_set_contractions
 11118  0CDD                     _NEMS_set_contractions:
 11119                           
 11120                           ;NEMS.c: 246:     if(NEMS_get_packet(&program.contractions)) {
 11121                           
 11122                           ;incstack = 0
 11123                           ; Regs used in _NEMS_set_contractions: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11124  0CDD  3061               	movlw	(low ((_program| 0+6)))& (0+255)
 11125  0CDE  318F  277E  318C   	fcall	_NEMS_get_packet
 11126  0CE1  3A00               	xorlw	0
 11127  0CE2  1903               	skipnz
 11128  0CE3  2CEC               	goto	l3631
 11129                           
 11130                           ;NEMS.c: 247:         _puts("c-ok ");
 11131  0CE4  306F               	movlw	low (STR_14| (0+32768))
 11132  0CE5  0140               	movlb	0	; select bank0
 11133  0CE6  00A2               	movwf	__puts@pt
 11134  0CE7  3091               	movlw	high (STR_14| (0+32768))
 11135  0CE8  00A3               	movwf	__puts@pt+1
 11136  0CE9  318E  2681         	fcall	__puts
 11137                           
 11138                           ;NEMS.c: 249:     } else {
 11139  0CEB  0008               	return
 11140  0CEC                     l3631:
 11141                           
 11142                           ;NEMS.c: 250:         _puts("c-err ");
 11143  0CEC  3020               	movlw	low (STR_15| (0+32768))
 11144  0CED  0140               	movlb	0	; select bank0
 11145  0CEE  00A2               	movwf	__puts@pt
 11146  0CEF  3091               	movlw	high (STR_15| (0+32768))
 11147  0CF0  00A3               	movwf	__puts@pt+1
 11148  0CF1  318E  2681         	fcall	__puts
 11149  0CF3  0008               	return
 11150  0CF4                     __end_of_NEMS_set_contractions:
 11151                           
 11152                           	psect	text28
 11153  0CC6                     __ptext28:	
 11154 ;; *************** function _NEMS_set_channel2 *****************
 11155 ;; Defined at:
 11156 ;;		line 348 in file "NEMS.c"
 11157 ;; Parameters:    Size  Location     Type
 11158 ;;		None
 11159 ;; Auto vars:     Size  Location     Type
 11160 ;;		None
 11161 ;; Return value:  Size  Location     Type
 11162 ;;                  1    wreg      void 
 11163 ;; Registers used:
 11164 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11165 ;; Tracked objects:
 11166 ;;		On entry : 0/0
 11167 ;;		On exit  : 3F/0
 11168 ;;		Unchanged: 0/0
 11169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11174 ;;Total ram usage:        0 bytes
 11175 ;; Hardware stack levels used: 1
 11176 ;; Hardware stack levels required when called: 6
 11177 ;; This function calls:
 11178 ;;		_NEMS_get_packet
 11179 ;;		__puts
 11180 ;; This function is called by:
 11181 ;;		_NEMS_message_handler
 11182 ;; This function uses a non-reentrant model
 11183 ;;
 11184                           
 11185                           
 11186                           ;psect for function _NEMS_set_channel2
 11187  0CC6                     _NEMS_set_channel2:
 11188                           
 11189                           ;NEMS.c: 350:     if(NEMS_get_packet(&program.channel2)) {
 11190                           
 11191                           ;incstack = 0
 11192                           ; Regs used in _NEMS_set_channel2: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11193  0CC6  3065               	movlw	(low ((_program| 0+10)))& (0+255)
 11194  0CC7  318F  277E  318C   	fcall	_NEMS_get_packet
 11195  0CCA  3A00               	xorlw	0
 11196  0CCB  1903               	skipnz
 11197  0CCC  2CD5               	goto	l3833
 11198                           
 11199                           ;NEMS.c: 351:         _puts("m-ok ");
 11200  0CCD  308D               	movlw	low (STR_45| (0+32768))
 11201  0CCE  0140               	movlb	0	; select bank0
 11202  0CCF  00A2               	movwf	__puts@pt
 11203  0CD0  3091               	movlw	high (STR_45| (0+32768))
 11204  0CD1  00A3               	movwf	__puts@pt+1
 11205  0CD2  318E  2681         	fcall	__puts
 11206                           
 11207                           ;NEMS.c: 353:     } else {
 11208  0CD4  0008               	return
 11209  0CD5                     l3833:
 11210                           
 11211                           ;NEMS.c: 354:         _puts("m-err ");
 11212  0CD5  303C               	movlw	low (STR_46| (0+32768))
 11213  0CD6  0140               	movlb	0	; select bank0
 11214  0CD7  00A2               	movwf	__puts@pt
 11215  0CD8  3091               	movlw	high (STR_46| (0+32768))
 11216  0CD9  00A3               	movwf	__puts@pt+1
 11217  0CDA  318E  2681         	fcall	__puts
 11218  0CDC  0008               	return
 11219  0CDD                     __end_of_NEMS_set_channel2:
 11220                           
 11221                           	psect	text29
 11222  0CAF                     __ptext29:	
 11223 ;; *************** function _NEMS_set_channel1 *****************
 11224 ;; Defined at:
 11225 ;;		line 338 in file "NEMS.c"
 11226 ;; Parameters:    Size  Location     Type
 11227 ;;		None
 11228 ;; Auto vars:     Size  Location     Type
 11229 ;;		None
 11230 ;; Return value:  Size  Location     Type
 11231 ;;                  1    wreg      void 
 11232 ;; Registers used:
 11233 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11234 ;; Tracked objects:
 11235 ;;		On entry : 0/0
 11236 ;;		On exit  : 3F/0
 11237 ;;		Unchanged: 0/0
 11238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11243 ;;Total ram usage:        0 bytes
 11244 ;; Hardware stack levels used: 1
 11245 ;; Hardware stack levels required when called: 6
 11246 ;; This function calls:
 11247 ;;		_NEMS_get_packet
 11248 ;;		__puts
 11249 ;; This function is called by:
 11250 ;;		_NEMS_message_handler
 11251 ;; This function uses a non-reentrant model
 11252 ;;
 11253                           
 11254                           
 11255                           ;psect for function _NEMS_set_channel1
 11256  0CAF                     _NEMS_set_channel1:
 11257                           
 11258                           ;NEMS.c: 340:     if(NEMS_get_packet(&program.channel1)) {
 11259                           
 11260                           ;incstack = 0
 11261                           ; Regs used in _NEMS_set_channel1: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11262  0CAF  3064               	movlw	(low ((_program| 0+9)))& (0+255)
 11263  0CB0  318F  277E  318C   	fcall	_NEMS_get_packet
 11264  0CB3  3A00               	xorlw	0
 11265  0CB4  1903               	skipnz
 11266  0CB5  2CBE               	goto	l3827
 11267                           
 11268                           ;NEMS.c: 341:         _puts("M-ok ");
 11269  0CB6  3051               	movlw	low (STR_43| (0+32768))
 11270  0CB7  0140               	movlb	0	; select bank0
 11271  0CB8  00A2               	movwf	__puts@pt
 11272  0CB9  3091               	movlw	high (STR_43| (0+32768))
 11273  0CBA  00A3               	movwf	__puts@pt+1
 11274  0CBB  318E  2681         	fcall	__puts
 11275                           
 11276                           ;NEMS.c: 343:     } else {
 11277  0CBD  0008               	return
 11278  0CBE                     l3827:
 11279                           
 11280                           ;NEMS.c: 344:         _puts("M-err ");
 11281  0CBE  3004               	movlw	low (STR_44| (0+32768))
 11282  0CBF  0140               	movlb	0	; select bank0
 11283  0CC0  00A2               	movwf	__puts@pt
 11284  0CC1  3091               	movlw	high (STR_44| (0+32768))
 11285  0CC2  00A3               	movwf	__puts@pt+1
 11286  0CC3  318E  2681         	fcall	__puts
 11287  0CC5  0008               	return
 11288  0CC6                     __end_of_NEMS_set_channel1:
 11289                           
 11290                           	psect	text30
 11291  0C98                     __ptext30:	
 11292 ;; *************** function _NEMS_set_amplitude *****************
 11293 ;; Defined at:
 11294 ;;		line 183 in file "NEMS.c"
 11295 ;; Parameters:    Size  Location     Type
 11296 ;;		None
 11297 ;; Auto vars:     Size  Location     Type
 11298 ;;		None
 11299 ;; Return value:  Size  Location     Type
 11300 ;;                  1    wreg      void 
 11301 ;; Registers used:
 11302 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11303 ;; Tracked objects:
 11304 ;;		On entry : 0/0
 11305 ;;		On exit  : 3F/0
 11306 ;;		Unchanged: 0/0
 11307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11312 ;;Total ram usage:        0 bytes
 11313 ;; Hardware stack levels used: 1
 11314 ;; Hardware stack levels required when called: 6
 11315 ;; This function calls:
 11316 ;;		_NEMS_get_packet
 11317 ;;		__puts
 11318 ;; This function is called by:
 11319 ;;		_NEMS_message_handler
 11320 ;; This function uses a non-reentrant model
 11321 ;;
 11322                           
 11323                           
 11324                           ;psect for function _NEMS_set_amplitude
 11325  0C98                     _NEMS_set_amplitude:
 11326                           
 11327                           ;NEMS.c: 185:     if(NEMS_get_packet(&program.amplitude)) {
 11328                           
 11329                           ;incstack = 0
 11330                           ; Regs used in _NEMS_set_amplitude: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11331  0C98  305B               	movlw	(low (_program| 0))& (0+255)
 11332  0C99  318F  277E  318C   	fcall	_NEMS_get_packet
 11333  0C9C  3A00               	xorlw	0
 11334  0C9D  1903               	skipnz
 11335  0C9E  2CA7               	goto	l3595
 11336                           
 11337                           ;NEMS.c: 186:         _puts("a-ok ");
 11338  0C9F  3069               	movlw	low (STR_2| (0+32768))
 11339  0CA0  0140               	movlb	0	; select bank0
 11340  0CA1  00A2               	movwf	__puts@pt
 11341  0CA2  3091               	movlw	high (STR_2| (0+32768))
 11342  0CA3  00A3               	movwf	__puts@pt+1
 11343  0CA4  318E  2681         	fcall	__puts
 11344                           
 11345                           ;NEMS.c: 188:     } else {
 11346  0CA6  0008               	return
 11347  0CA7                     l3595:
 11348                           
 11349                           ;NEMS.c: 189:         _puts("a-err ");
 11350  0CA7  3019               	movlw	low (STR_3| (0+32768))
 11351  0CA8  0140               	movlb	0	; select bank0
 11352  0CA9  00A2               	movwf	__puts@pt
 11353  0CAA  3091               	movlw	high (STR_3| (0+32768))
 11354  0CAB  00A3               	movwf	__puts@pt+1
 11355  0CAC  318E  2681         	fcall	__puts
 11356  0CAE  0008               	return
 11357  0CAF                     __end_of_NEMS_set_amplitude:
 11358                           
 11359                           	psect	text31
 11360  0C81                     __ptext31:	
 11361 ;; *************** function _NEMS_set_ON_time *****************
 11362 ;; Defined at:
 11363 ;;		line 224 in file "NEMS.c"
 11364 ;; Parameters:    Size  Location     Type
 11365 ;;		None
 11366 ;; Auto vars:     Size  Location     Type
 11367 ;;		None
 11368 ;; Return value:  Size  Location     Type
 11369 ;;                  1    wreg      void 
 11370 ;; Registers used:
 11371 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11372 ;; Tracked objects:
 11373 ;;		On entry : 0/0
 11374 ;;		On exit  : 3F/0
 11375 ;;		Unchanged: 0/0
 11376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11381 ;;Total ram usage:        0 bytes
 11382 ;; Hardware stack levels used: 1
 11383 ;; Hardware stack levels required when called: 6
 11384 ;; This function calls:
 11385 ;;		_NEMS_get_packet
 11386 ;;		__puts
 11387 ;; This function is called by:
 11388 ;;		_NEMS_message_handler
 11389 ;; This function uses a non-reentrant model
 11390 ;;
 11391                           
 11392                           
 11393                           ;psect for function _NEMS_set_ON_time
 11394  0C81                     _NEMS_set_ON_time:
 11395                           
 11396                           ;NEMS.c: 226:     if(NEMS_get_packet(&program.ON_time)) {
 11397                           
 11398                           ;incstack = 0
 11399                           ; Regs used in _NEMS_set_ON_time: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11400  0C81  305F               	movlw	(low ((_program| 0+4)))& (0+255)
 11401  0C82  318F  277E  318C   	fcall	_NEMS_get_packet
 11402  0C85  3A00               	xorlw	0
 11403  0C86  1903               	skipnz
 11404  0C87  2C90               	goto	l3619
 11405                           
 11406                           ;NEMS.c: 227:         _puts("o-ok ");
 11407  0C88  3099               	movlw	low (STR_10| (0+32768))
 11408  0C89  0140               	movlb	0	; select bank0
 11409  0C8A  00A2               	movwf	__puts@pt
 11410  0C8B  3091               	movlw	high (STR_10| (0+32768))
 11411  0C8C  00A3               	movwf	__puts@pt+1
 11412  0C8D  318E  2681         	fcall	__puts
 11413                           
 11414                           ;NEMS.c: 229:     } else {
 11415  0C8F  0008               	return
 11416  0C90                     l3619:
 11417                           
 11418                           ;NEMS.c: 230:         _puts("o-err ");
 11419  0C90  3043               	movlw	low (STR_11| (0+32768))
 11420  0C91  0140               	movlb	0	; select bank0
 11421  0C92  00A2               	movwf	__puts@pt
 11422  0C93  3091               	movlw	high (STR_11| (0+32768))
 11423  0C94  00A3               	movwf	__puts@pt+1
 11424  0C95  318E  2681         	fcall	__puts
 11425  0C97  0008               	return
 11426  0C98                     __end_of_NEMS_set_ON_time:
 11427                           
 11428                           	psect	text32
 11429  0C6A                     __ptext32:	
 11430 ;; *************** function _NEMS_set_OFF_time *****************
 11431 ;; Defined at:
 11432 ;;		line 234 in file "NEMS.c"
 11433 ;; Parameters:    Size  Location     Type
 11434 ;;		None
 11435 ;; Auto vars:     Size  Location     Type
 11436 ;;		None
 11437 ;; Return value:  Size  Location     Type
 11438 ;;                  1    wreg      void 
 11439 ;; Registers used:
 11440 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11441 ;; Tracked objects:
 11442 ;;		On entry : 0/0
 11443 ;;		On exit  : 3F/0
 11444 ;;		Unchanged: 0/0
 11445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11450 ;;Total ram usage:        0 bytes
 11451 ;; Hardware stack levels used: 1
 11452 ;; Hardware stack levels required when called: 6
 11453 ;; This function calls:
 11454 ;;		_NEMS_get_packet
 11455 ;;		__puts
 11456 ;; This function is called by:
 11457 ;;		_NEMS_message_handler
 11458 ;; This function uses a non-reentrant model
 11459 ;;
 11460                           
 11461                           
 11462                           ;psect for function _NEMS_set_OFF_time
 11463  0C6A                     _NEMS_set_OFF_time:
 11464                           
 11465                           ;NEMS.c: 236:     if(NEMS_get_packet(&program.OFF_time)) {
 11466                           
 11467                           ;incstack = 0
 11468                           ; Regs used in _NEMS_set_OFF_time: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11469  0C6A  3060               	movlw	(low ((_program| 0+5)))& (0+255)
 11470  0C6B  318F  277E  318C   	fcall	_NEMS_get_packet
 11471  0C6E  3A00               	xorlw	0
 11472  0C6F  1903               	skipnz
 11473  0C70  2C79               	goto	l3625
 11474                           
 11475                           ;NEMS.c: 237:         _puts("O-ok ");
 11476  0C71  305D               	movlw	low (STR_12| (0+32768))
 11477  0C72  0140               	movlb	0	; select bank0
 11478  0C73  00A2               	movwf	__puts@pt
 11479  0C74  3091               	movlw	high (STR_12| (0+32768))
 11480  0C75  00A3               	movwf	__puts@pt+1
 11481  0C76  318E  2681         	fcall	__puts
 11482                           
 11483                           ;NEMS.c: 239:     } else {
 11484  0C78  0008               	return
 11485  0C79                     l3625:
 11486                           
 11487                           ;NEMS.c: 240:         _puts("O-err ");
 11488  0C79  300B               	movlw	low (STR_13| (0+32768))
 11489  0C7A  0140               	movlb	0	; select bank0
 11490  0C7B  00A2               	movwf	__puts@pt
 11491  0C7C  3091               	movlw	high (STR_13| (0+32768))
 11492  0C7D  00A3               	movwf	__puts@pt+1
 11493  0C7E  318E  2681         	fcall	__puts
 11494  0C80  0008               	return
 11495  0C81                     __end_of_NEMS_set_OFF_time:
 11496                           
 11497                           	psect	text33
 11498  0F7E                     __ptext33:	
 11499 ;; *************** function _NEMS_get_packet *****************
 11500 ;; Defined at:
 11501 ;;		line 163 in file "NEMS.c"
 11502 ;; Parameters:    Size  Location     Type
 11503 ;;  pt              1    wreg     PTR unsigned char 
 11504 ;;		 -> program.channel2(1), program.channel1(1), program.symmetry_factor(1), program.ramp_down(1), 
 11505 ;;		 -> program.ramp_up(1), program.contractions(1), program.OFF_time(1), program.ON_time(1), 
 11506 ;;		 -> program.phase_duration(1), program.frequency(1), program.amplitude(1), program(11), 
 11507 ;; Auto vars:     Size  Location     Type
 11508 ;;  pt              1    8[BANK0 ] PTR unsigned char 
 11509 ;;		 -> program.channel2(1), program.channel1(1), program.symmetry_factor(1), program.ramp_down(1), 
 11510 ;;		 -> program.ramp_up(1), program.contractions(1), program.OFF_time(1), program.ON_time(1), 
 11511 ;;		 -> program.phase_duration(1), program.frequency(1), program.amplitude(1), program(11), 
 11512 ;;  message         2    6[BANK0 ] unsigned char [2]
 11513 ;; Return value:  Size  Location     Type
 11514 ;;                  1    wreg      unsigned char 
 11515 ;; Registers used:
 11516 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11517 ;; Tracked objects:
 11518 ;;		On entry : 0/0
 11519 ;;		On exit  : 0/0
 11520 ;;		Unchanged: 0/0
 11521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11523 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11524 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11525 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11526 ;;Total ram usage:        5 bytes
 11527 ;; Hardware stack levels used: 1
 11528 ;; Hardware stack levels required when called: 5
 11529 ;; This function calls:
 11530 ;;		_EUSART1_Read
 11531 ;;		___bmul
 11532 ;; This function is called by:
 11533 ;;		_NEMS_set_amplitude
 11534 ;;		_NEMS_set_frequency
 11535 ;;		_NEMS_set_phase_duration
 11536 ;;		_NEMS_set_symmetry_factor
 11537 ;;		_NEMS_set_ON_time
 11538 ;;		_NEMS_set_OFF_time
 11539 ;;		_NEMS_set_contractions
 11540 ;;		_NEMS_set_ramp_up
 11541 ;;		_NEMS_set_ramp_down
 11542 ;;		_NEMS_set_channel1
 11543 ;;		_NEMS_set_channel2
 11544 ;; This function uses a non-reentrant model
 11545 ;;
 11546                           
 11547                           
 11548                           ;psect for function _NEMS_get_packet
 11549  0F7E                     _NEMS_get_packet:
 11550                           
 11551                           ;incstack = 0
 11552                           ; Regs used in _NEMS_get_packet: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11553                           ;NEMS_get_packet@pt stored from wreg
 11554  0F7E  0140               	movlb	0	; select bank0
 11555  0F7F  00A8               	movwf	NEMS_get_packet@pt
 11556                           
 11557                           ;NEMS.c: 163: unsigned char NEMS_get_packet(unsigned char* pt);NEMS.c: 164: {;NEMS.c: 16
      +                          5:     unsigned char message[2];;NEMS.c: 167:     _delay((unsigned long)((10)*(32000000/
      +                          4000.0)));
 11558  0F80  3068               	movlw	104
 11559  0F81  0140               	movlb	0	; select bank0
 11560  0F82  00A4               	movwf	??_NEMS_get_packet
 11561  0F83  30E4               	movlw	228
 11562  0F84                     u2117:
 11563  0F84  0B89               	decfsz	9,f
 11564  0F85  2F84               	goto	u2117
 11565  0F86  0BA4               	decfsz	??_NEMS_get_packet,f
 11566  0F87  2F84               	goto	u2117
 11567  0F88  0000               	nop
 11568                           
 11569                           ;NEMS.c: 169:     if (eusart1RxCount == 2) {
 11570  0F89  3002               	movlw	2
 11571  0F8A  0671               	xorwf	_eusart1RxCount,w	;volatile
 11572  0F8B  1D03               	btfss	3,2
 11573  0F8C  2FBB               	goto	l3371
 11574                           
 11575                           ;NEMS.c: 170:         message[0] = EUSART1_Read();
 11576  0F8D  318E  265D  318F   	fcall	_EUSART1_Read
 11577  0F90  00A4               	movwf	??_NEMS_get_packet
 11578  0F91  0824               	movf	??_NEMS_get_packet,w
 11579  0F92  00A6               	movwf	NEMS_get_packet@message
 11580                           
 11581                           ;NEMS.c: 171:         message[1] = EUSART1_Read();
 11582  0F93  318E  265D  318F   	fcall	_EUSART1_Read
 11583  0F96  00A4               	movwf	??_NEMS_get_packet
 11584  0F97  0824               	movf	??_NEMS_get_packet,w
 11585  0F98  00A7               	movwf	NEMS_get_packet@message+1
 11586                           
 11587                           ;NEMS.c: 173:         *pt = message[0] - '0';
 11588  0F99  0826               	movf	NEMS_get_packet@message,w
 11589  0F9A  3ED0               	addlw	208
 11590  0F9B  00A4               	movwf	??_NEMS_get_packet
 11591  0F9C  0828               	movf	NEMS_get_packet@pt,w
 11592  0F9D  0086               	movwf	6
 11593  0F9E  0187               	clrf	7
 11594  0F9F  0824               	movf	??_NEMS_get_packet,w
 11595  0FA0  0081               	movwf	1
 11596                           
 11597                           ;NEMS.c: 174:         *pt *= 10;
 11598  0FA1  0828               	movf	NEMS_get_packet@pt,w
 11599  0FA2  0086               	movwf	6
 11600  0FA3  0187               	clrf	7
 11601  0FA4  0801               	movf	1,w
 11602  0FA5  00A4               	movwf	??_NEMS_get_packet
 11603  0FA6  0824               	movf	??_NEMS_get_packet,w
 11604  0FA7  00A0               	movwf	___bmul@multiplicand
 11605  0FA8  300A               	movlw	10
 11606  0FA9  318C  241E         	fcall	___bmul
 11607  0FAB  00A5               	movwf	??_NEMS_get_packet+1
 11608  0FAC  0828               	movf	NEMS_get_packet@pt,w
 11609  0FAD  0086               	movwf	6
 11610  0FAE  0187               	clrf	7
 11611  0FAF  0825               	movf	??_NEMS_get_packet+1,w
 11612  0FB0  0081               	movwf	1
 11613                           
 11614                           ;NEMS.c: 175:         *pt += message[1] - '0';
 11615  0FB1  0827               	movf	NEMS_get_packet@message+1,w
 11616  0FB2  3ED0               	addlw	208
 11617  0FB3  00A4               	movwf	??_NEMS_get_packet
 11618  0FB4  0828               	movf	NEMS_get_packet@pt,w
 11619  0FB5  0086               	movwf	6
 11620  0FB6  0187               	clrf	7
 11621  0FB7  0824               	movf	??_NEMS_get_packet,w
 11622  0FB8  0781               	addwf	1,f
 11623                           
 11624                           ;NEMS.c: 177:         return 1;
 11625  0FB9  3001               	movlw	1
 11626  0FBA  0008               	return
 11627  0FBB                     l3371:
 11628                           
 11629                           ;NEMS.c: 179:         return 0;
 11630  0FBB  3000               	movlw	0
 11631  0FBC  0008               	return
 11632  0FBD                     __end_of_NEMS_get_packet:
 11633                           
 11634                           	psect	text34
 11635  0C1E                     __ptext34:	
 11636 ;; *************** function ___bmul *****************
 11637 ;; Defined at:
 11638 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/Umul8.c"
 11639 ;; Parameters:    Size  Location     Type
 11640 ;;  multiplier      1    wreg     unsigned char 
 11641 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 11642 ;; Auto vars:     Size  Location     Type
 11643 ;;  multiplier      1    3[BANK0 ] unsigned char 
 11644 ;;  product         1    2[BANK0 ] unsigned char 
 11645 ;; Return value:  Size  Location     Type
 11646 ;;                  1    wreg      unsigned char 
 11647 ;; Registers used:
 11648 ;;		wreg, status,2, status,0
 11649 ;; Tracked objects:
 11650 ;;		On entry : 3F/0
 11651 ;;		On exit  : 3F/0
 11652 ;;		Unchanged: 0/0
 11653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11654 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11655 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11656 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11657 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11658 ;;Total ram usage:        4 bytes
 11659 ;; Hardware stack levels used: 1
 11660 ;; Hardware stack levels required when called: 4
 11661 ;; This function calls:
 11662 ;;		Nothing
 11663 ;; This function is called by:
 11664 ;;		_NEMS_get_packet
 11665 ;;		_NEMS_recalculate_program
 11666 ;; This function uses a non-reentrant model
 11667 ;;
 11668                           
 11669                           
 11670                           ;psect for function ___bmul
 11671  0C1E                     ___bmul:
 11672                           
 11673                           ;incstack = 0
 11674                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 11675                           ;___bmul@multiplier stored from wreg
 11676  0C1E  00A3               	movwf	___bmul@multiplier
 11677  0C1F  01A2               	clrf	___bmul@product
 11678  0C20                     l3299:
 11679  0C20  1C23               	btfss	___bmul@multiplier,0
 11680  0C21  2C26               	goto	l3303
 11681  0C22  0820               	movf	___bmul@multiplicand,w
 11682  0C23  00A1               	movwf	??___bmul
 11683  0C24  0821               	movf	??___bmul,w
 11684  0C25  07A2               	addwf	___bmul@product,f
 11685  0C26                     l3303:
 11686  0C26  1003               	clrc
 11687  0C27  0DA0               	rlf	___bmul@multiplicand,f
 11688  0C28  1003               	clrc
 11689  0C29  0CA3               	rrf	___bmul@multiplier,f
 11690  0C2A  0823               	movf	___bmul@multiplier,w
 11691  0C2B  1D03               	btfss	3,2
 11692  0C2C  2C20               	goto	l3299
 11693  0C2D  0822               	movf	___bmul@product,w
 11694  0C2E  0008               	return
 11695  0C2F                     __end_of___bmul:
 11696                           
 11697                           	psect	text35
 11698  0E5D                     __ptext35:	
 11699 ;; *************** function _EUSART1_Read *****************
 11700 ;; Defined at:
 11701 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 11702 ;; Parameters:    Size  Location     Type
 11703 ;;		None
 11704 ;; Auto vars:     Size  Location     Type
 11705 ;;  readValue       1    1[BANK0 ] unsigned char 
 11706 ;; Return value:  Size  Location     Type
 11707 ;;                  1    wreg      unsigned char 
 11708 ;; Registers used:
 11709 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11710 ;; Tracked objects:
 11711 ;;		On entry : 0/0
 11712 ;;		On exit  : 3F/0
 11713 ;;		Unchanged: 0/0
 11714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11716 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11717 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11718 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11719 ;;Total ram usage:        2 bytes
 11720 ;; Hardware stack levels used: 1
 11721 ;; Hardware stack levels required when called: 4
 11722 ;; This function calls:
 11723 ;;		Nothing
 11724 ;; This function is called by:
 11725 ;;		_NEMS_message_handler
 11726 ;;		_NEMS_get_packet
 11727 ;; This function uses a non-reentrant model
 11728 ;;
 11729                           
 11730                           
 11731                           ;psect for function _EUSART1_Read
 11732  0E5D                     _EUSART1_Read:
 11733  0E5D                     l3243:	
 11734                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 11735                           
 11736                           ;incstack = 0
 11737                           ; Regs used in _EUSART1_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 11738                           
 11739                           
 11740                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 11741  0E5D  0871               	movf	_eusart1RxCount,w	;volatile
 11742  0E5E  1903               	btfsc	3,2
 11743  0E5F  2E5D               	goto	l3243
 11744                           
 11745                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 11746  0E60  0872               	movf	_eusart1RxTail,w	;volatile
 11747  0E61  3E46               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 11748  0E62  0086               	movwf	6
 11749  0E63  0187               	clrf	7
 11750  0E64  0801               	movf	1,w
 11751  0E65  0140               	movlb	0	; select bank0
 11752  0E66  00A0               	movwf	??_EUSART1_Read
 11753  0E67  0820               	movf	??_EUSART1_Read,w
 11754  0E68  00DA               	movwf	_eusart1RxLastError	;volatile
 11755                           
 11756                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 11757  0E69  0872               	movf	_eusart1RxTail,w
 11758  0E6A  3EA0               	addlw	(low (_eusart1RxBuffer| 0))& (0+255)
 11759  0E6B  0086               	movwf	6
 11760  0E6C  0187               	clrf	7
 11761  0E6D  0801               	movf	1,w
 11762  0E6E  00A0               	movwf	??_EUSART1_Read
 11763  0E6F  0820               	movf	??_EUSART1_Read,w
 11764  0E70  00A1               	movwf	EUSART1_Read@readValue
 11765  0E71  3001               	movlw	1
 11766  0E72  00A0               	movwf	??_EUSART1_Read
 11767  0E73  0820               	movf	??_EUSART1_Read,w
 11768  0E74  07F2               	addwf	_eusart1RxTail,f	;volatile
 11769                           
 11770                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 11771  0E75  3008               	movlw	8
 11772  0E76  0272               	subwf	_eusart1RxTail,w
 11773  0E77  1803               	btfsc	3,0
 11774                           
 11775                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 11776  0E78  01F2               	clrf	_eusart1RxTail	;volatile
 11777                           
 11778                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
 11779  0E79  014E               	movlb	14	; select bank14
 11780  0E7A  1299               	bcf	25,5	;volatile
 11781                           
 11782                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 11783  0E7B  3001               	movlw	1
 11784  0E7C  02F1               	subwf	_eusart1RxCount,f	;volatile
 11785                           
 11786                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
 11787  0E7D  1699               	bsf	25,5	;volatile
 11788                           
 11789                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 11790  0E7E  0140               	movlb	0	; select bank0
 11791  0E7F  0821               	movf	EUSART1_Read@readValue,w
 11792  0E80  0008               	return
 11793  0E81                     __end_of_EUSART1_Read:
 11794                           
 11795                           	psect	text36
 11796  0571                     __ptext36:	
 11797 ;; *************** function _NEMS_save_program *****************
 11798 ;; Defined at:
 11799 ;;		line 358 in file "NEMS.c"
 11800 ;; Parameters:    Size  Location     Type
 11801 ;;		None
 11802 ;; Auto vars:     Size  Location     Type
 11803 ;;  addr            1    9[BANK0 ] unsigned char 
 11804 ;; Return value:  Size  Location     Type
 11805 ;;                  1    wreg      void 
 11806 ;; Registers used:
 11807 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11808 ;; Tracked objects:
 11809 ;;		On entry : 0/0
 11810 ;;		On exit  : 3F/0
 11811 ;;		Unchanged: 0/0
 11812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11814 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11815 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11816 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11817 ;;Total ram usage:        2 bytes
 11818 ;; Hardware stack levels used: 1
 11819 ;; Hardware stack levels required when called: 6
 11820 ;; This function calls:
 11821 ;;		__puts
 11822 ;;		_eeprom_write
 11823 ;; This function is called by:
 11824 ;;		_NEMS_message_handler
 11825 ;; This function uses a non-reentrant model
 11826 ;;
 11827                           
 11828                           
 11829                           ;psect for function _NEMS_save_program
 11830  0571                     _NEMS_save_program:
 11831                           
 11832                           ;NEMS.c: 360:     unsigned char addr;;NEMS.c: 362:     addr = 0;
 11833                           
 11834                           ;incstack = 0
 11835                           ; Regs used in _NEMS_save_program: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11836  0571  0140               	movlb	0	; select bank0
 11837  0572  01A9               	clrf	NEMS_save_program@addr
 11838                           
 11839                           ;NEMS.c: 363:     eeprom_write(addr++,program.amplitude);
 11840  0573  085B               	movf	_program,w	;volatile
 11841  0574  00A8               	movwf	??_NEMS_save_program
 11842  0575  0828               	movf	??_NEMS_save_program,w
 11843  0576  00A0               	movwf	eeprom_write@value
 11844  0577  3000               	movlw	0
 11845  0578  318D  25F7  3185   	fcall	_eeprom_write
 11846  057B  3001               	movlw	1
 11847  057C  0140               	movlb	0	; select bank0
 11848  057D  00A8               	movwf	??_NEMS_save_program
 11849  057E  0828               	movf	??_NEMS_save_program,w
 11850  057F  07A9               	addwf	NEMS_save_program@addr,f
 11851                           
 11852                           ;NEMS.c: 364:     eeprom_write(addr++,program.frequency);
 11853  0580  085C               	movf	_program+1,w	;volatile
 11854  0581  00A8               	movwf	??_NEMS_save_program
 11855  0582  0828               	movf	??_NEMS_save_program,w
 11856  0583  00A0               	movwf	eeprom_write@value
 11857  0584  0829               	movf	NEMS_save_program@addr,w
 11858  0585  318D  25F7  3185   	fcall	_eeprom_write
 11859  0588  3001               	movlw	1
 11860  0589  0140               	movlb	0	; select bank0
 11861  058A  00A8               	movwf	??_NEMS_save_program
 11862  058B  0828               	movf	??_NEMS_save_program,w
 11863  058C  07A9               	addwf	NEMS_save_program@addr,f
 11864                           
 11865                           ;NEMS.c: 365:     eeprom_write(addr++,program.phase_duration);
 11866  058D  085D               	movf	_program+2,w	;volatile
 11867  058E  00A8               	movwf	??_NEMS_save_program
 11868  058F  0828               	movf	??_NEMS_save_program,w
 11869  0590  00A0               	movwf	eeprom_write@value
 11870  0591  0829               	movf	NEMS_save_program@addr,w
 11871  0592  318D  25F7  3185   	fcall	_eeprom_write
 11872  0595  3001               	movlw	1
 11873  0596  0140               	movlb	0	; select bank0
 11874  0597  00A8               	movwf	??_NEMS_save_program
 11875  0598  0828               	movf	??_NEMS_save_program,w
 11876  0599  07A9               	addwf	NEMS_save_program@addr,f
 11877                           
 11878                           ;NEMS.c: 366:     eeprom_write(addr++,program.symmetry_factor);
 11879  059A  085E               	movf	_program+3,w	;volatile
 11880  059B  00A8               	movwf	??_NEMS_save_program
 11881  059C  0828               	movf	??_NEMS_save_program,w
 11882  059D  00A0               	movwf	eeprom_write@value
 11883  059E  0829               	movf	NEMS_save_program@addr,w
 11884  059F  318D  25F7  3185   	fcall	_eeprom_write
 11885  05A2  3001               	movlw	1
 11886  05A3  0140               	movlb	0	; select bank0
 11887  05A4  00A8               	movwf	??_NEMS_save_program
 11888  05A5  0828               	movf	??_NEMS_save_program,w
 11889  05A6  07A9               	addwf	NEMS_save_program@addr,f
 11890                           
 11891                           ;NEMS.c: 367:     eeprom_write(addr++,program.ON_time);
 11892  05A7  085F               	movf	_program+4,w	;volatile
 11893  05A8  00A8               	movwf	??_NEMS_save_program
 11894  05A9  0828               	movf	??_NEMS_save_program,w
 11895  05AA  00A0               	movwf	eeprom_write@value
 11896  05AB  0829               	movf	NEMS_save_program@addr,w
 11897  05AC  318D  25F7  3185   	fcall	_eeprom_write
 11898  05AF  3001               	movlw	1
 11899  05B0  0140               	movlb	0	; select bank0
 11900  05B1  00A8               	movwf	??_NEMS_save_program
 11901  05B2  0828               	movf	??_NEMS_save_program,w
 11902  05B3  07A9               	addwf	NEMS_save_program@addr,f
 11903                           
 11904                           ;NEMS.c: 368:     eeprom_write(addr++,program.OFF_time);
 11905  05B4  0860               	movf	_program+5,w	;volatile
 11906  05B5  00A8               	movwf	??_NEMS_save_program
 11907  05B6  0828               	movf	??_NEMS_save_program,w
 11908  05B7  00A0               	movwf	eeprom_write@value
 11909  05B8  0829               	movf	NEMS_save_program@addr,w
 11910  05B9  318D  25F7  3185   	fcall	_eeprom_write
 11911  05BC  3001               	movlw	1
 11912  05BD  0140               	movlb	0	; select bank0
 11913  05BE  00A8               	movwf	??_NEMS_save_program
 11914  05BF  0828               	movf	??_NEMS_save_program,w
 11915  05C0  07A9               	addwf	NEMS_save_program@addr,f
 11916                           
 11917                           ;NEMS.c: 369:     eeprom_write(addr++,program.ramp_up);
 11918  05C1  0862               	movf	_program+7,w	;volatile
 11919  05C2  00A8               	movwf	??_NEMS_save_program
 11920  05C3  0828               	movf	??_NEMS_save_program,w
 11921  05C4  00A0               	movwf	eeprom_write@value
 11922  05C5  0829               	movf	NEMS_save_program@addr,w
 11923  05C6  318D  25F7  3185   	fcall	_eeprom_write
 11924  05C9  3001               	movlw	1
 11925  05CA  0140               	movlb	0	; select bank0
 11926  05CB  00A8               	movwf	??_NEMS_save_program
 11927  05CC  0828               	movf	??_NEMS_save_program,w
 11928  05CD  07A9               	addwf	NEMS_save_program@addr,f
 11929                           
 11930                           ;NEMS.c: 370:     eeprom_write(addr++,program.ramp_down);
 11931  05CE  0863               	movf	_program+8,w	;volatile
 11932  05CF  00A8               	movwf	??_NEMS_save_program
 11933  05D0  0828               	movf	??_NEMS_save_program,w
 11934  05D1  00A0               	movwf	eeprom_write@value
 11935  05D2  0829               	movf	NEMS_save_program@addr,w
 11936  05D3  318D  25F7  3185   	fcall	_eeprom_write
 11937  05D6  3001               	movlw	1
 11938  05D7  0140               	movlb	0	; select bank0
 11939  05D8  00A8               	movwf	??_NEMS_save_program
 11940  05D9  0828               	movf	??_NEMS_save_program,w
 11941  05DA  07A9               	addwf	NEMS_save_program@addr,f
 11942                           
 11943                           ;NEMS.c: 371:     eeprom_write(addr++,program.contractions);
 11944  05DB  0861               	movf	_program+6,w	;volatile
 11945  05DC  00A8               	movwf	??_NEMS_save_program
 11946  05DD  0828               	movf	??_NEMS_save_program,w
 11947  05DE  00A0               	movwf	eeprom_write@value
 11948  05DF  0829               	movf	NEMS_save_program@addr,w
 11949  05E0  318D  25F7  3185   	fcall	_eeprom_write
 11950  05E3  3001               	movlw	1
 11951  05E4  0140               	movlb	0	; select bank0
 11952  05E5  00A8               	movwf	??_NEMS_save_program
 11953  05E6  0828               	movf	??_NEMS_save_program,w
 11954  05E7  07A9               	addwf	NEMS_save_program@addr,f
 11955                           
 11956                           ;NEMS.c: 372:     eeprom_write(addr++,program.channel1);
 11957  05E8  0864               	movf	_program+9,w	;volatile
 11958  05E9  00A8               	movwf	??_NEMS_save_program
 11959  05EA  0828               	movf	??_NEMS_save_program,w
 11960  05EB  00A0               	movwf	eeprom_write@value
 11961  05EC  0829               	movf	NEMS_save_program@addr,w
 11962  05ED  318D  25F7  3185   	fcall	_eeprom_write
 11963  05F0  3001               	movlw	1
 11964  05F1  0140               	movlb	0	; select bank0
 11965  05F2  00A8               	movwf	??_NEMS_save_program
 11966  05F3  0828               	movf	??_NEMS_save_program,w
 11967  05F4  07A9               	addwf	NEMS_save_program@addr,f
 11968                           
 11969                           ;NEMS.c: 373:     eeprom_write(addr,program.channel2);
 11970  05F5  0865               	movf	_program+10,w	;volatile
 11971  05F6  00A8               	movwf	??_NEMS_save_program
 11972  05F7  0828               	movf	??_NEMS_save_program,w
 11973  05F8  00A0               	movwf	eeprom_write@value
 11974  05F9  0829               	movf	NEMS_save_program@addr,w
 11975  05FA  318D  25F7  3185   	fcall	_eeprom_write
 11976                           
 11977                           ;NEMS.c: 376:     _puts("s-ok ");
 11978  05FD  30A5               	movlw	low (STR_47| (0+32768))
 11979  05FE  0140               	movlb	0	; select bank0
 11980  05FF  00A2               	movwf	__puts@pt
 11981  0600  3091               	movlw	high (STR_47| (0+32768))
 11982  0601  00A3               	movwf	__puts@pt+1
 11983  0602  318E  2681         	fcall	__puts
 11984  0604  0008               	return
 11985  0605                     __end_of_NEMS_save_program:
 11986                           
 11987                           	psect	text37
 11988  0DF7                     __ptext37:	
 11989 ;; *************** function _eeprom_write *****************
 11990 ;; Defined at:
 11991 ;;		line 6 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eewrite.c"
 11992 ;; Parameters:    Size  Location     Type
 11993 ;;  addr            1    wreg     unsigned char 
 11994 ;;  value           1    0[BANK0 ] unsigned char 
 11995 ;; Auto vars:     Size  Location     Type
 11996 ;;  addr            1    1[BANK0 ] unsigned char 
 11997 ;; Return value:  Size  Location     Type
 11998 ;;                  1    wreg      void 
 11999 ;; Registers used:
 12000 ;;		wreg, status,2
 12001 ;; Tracked objects:
 12002 ;;		On entry : 3F/0
 12003 ;;		On exit  : 3F/10
 12004 ;;		Unchanged: 0/0
 12005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12006 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12007 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12009 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12010 ;;Total ram usage:        2 bytes
 12011 ;; Hardware stack levels used: 1
 12012 ;; Hardware stack levels required when called: 4
 12013 ;; This function calls:
 12014 ;;		Nothing
 12015 ;; This function is called by:
 12016 ;;		_NEMS_save_program
 12017 ;; This function uses a non-reentrant model
 12018 ;;
 12019                           
 12020                           
 12021                           ;psect for function _eeprom_write
 12022  0DF7                     _eeprom_write:
 12023                           
 12024                           ;incstack = 0
 12025                           ; Regs used in _eeprom_write: [wreg+status,2]
 12026                           ;eeprom_write@addr stored from wreg
 12027  0DF7  00A1               	movwf	eeprom_write@addr
 12028  0DF8                     l824:	
 12029                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eewrite.c: 6: eeprom_write(unsigned char
      +                           addr, unsigned char value);/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eewrite.c: 7:
      +                           {;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eewrite.c: 8:  do { while (NVMCON1bits
      +                          .WR) { continue; } NVMCON1bits.NVMREGS = 1; NVMADRL = (addr) & 0xFFU; NVMADRH = 0x70; NV
      +                          MDATH = 0; NVMDATL = (value) & 0xFFU; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUS
      +                          bits.CARRY = 1; } INTCONbits.GIE = 0; NVMCON1bits.WREN = 1; NVMCON2 = 0x55; NVMCON2 = 0x
      +                          AA; NVMCON1bits.WR = 1; while (NVMCON1bits.WR) { continue; } NVMCON1bits.WREN = 0; if (S
      +                          TATUSbits.CARRY) { INTCONbits.GIE = 1; } } while (0);
 12030                           
 12031  0DF8  0150               	movlb	16	; select bank16
 12032  0DF9  189E               	btfsc	30,1	;volsfr
 12033  0DFA  2DF8               	goto	l824
 12034  0DFB  171E               	bsf	30,6	;volsfr
 12035  0DFC  0140               	movlb	0	; select bank0
 12036  0DFD  0821               	movf	eeprom_write@addr,w
 12037  0DFE  0150               	movlb	16	; select bank16
 12038  0DFF  009A               	movwf	26	;volatile
 12039  0E00  3070               	movlw	112
 12040  0E01  009B               	movwf	27	;volatile
 12041  0E02  019D               	clrf	29	;volatile
 12042  0E03  0140               	movlb	0	; select bank0
 12043  0E04  0820               	movf	eeprom_write@value,w
 12044  0E05  0150               	movlb	16	; select bank16
 12045  0E06  009C               	movwf	28	;volatile
 12046  0E07  1003               	bcf	3,0	;volatile
 12047  0E08  1B8B               	btfsc	11,7	;volatile
 12048  0E09  1403               	bsf	3,0	;volatile
 12049  0E0A  138B               	bcf	11,7	;volatile
 12050  0E0B  151E               	bsf	30,2	;volsfr
 12051  0E0C  3055               	movlw	85
 12052  0E0D  009F               	movwf	31	;volsfr
 12053  0E0E  30AA               	movlw	170
 12054  0E0F  009F               	movwf	31	;volsfr
 12055  0E10  149E               	bsf	30,1	;volsfr
 12056  0E11                     l828:
 12057  0E11  189E               	btfsc	30,1	;volsfr
 12058  0E12  2E11               	goto	l828
 12059  0E13  111E               	bcf	30,2	;volsfr
 12060  0E14  1C03               	btfss	3,0	;volatile
 12061  0E15  0008               	return
 12062  0E16  178B               	bsf	11,7	;volatile
 12063  0E17  0008               	return
 12064  0E18                     __end_of_eeprom_write:
 12065                           
 12066                           	psect	text38
 12067  0694                     __ptext38:	
 12068 ;; *************** function _NEMS_load_program *****************
 12069 ;; Defined at:
 12070 ;;		line 380 in file "NEMS.c"
 12071 ;; Parameters:    Size  Location     Type
 12072 ;;		None
 12073 ;; Auto vars:     Size  Location     Type
 12074 ;;  addr            2    9[BANK0 ] unsigned short 
 12075 ;; Return value:  Size  Location     Type
 12076 ;;                  1    wreg      void 
 12077 ;; Registers used:
 12078 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12079 ;; Tracked objects:
 12080 ;;		On entry : 0/0
 12081 ;;		On exit  : 3F/0
 12082 ;;		Unchanged: 0/0
 12083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12085 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12086 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12087 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12088 ;;Total ram usage:        3 bytes
 12089 ;; Hardware stack levels used: 1
 12090 ;; Hardware stack levels required when called: 6
 12091 ;; This function calls:
 12092 ;;		__puts
 12093 ;;		_eeprom_read
 12094 ;; This function is called by:
 12095 ;;		_NEMS_message_handler
 12096 ;; This function uses a non-reentrant model
 12097 ;;
 12098                           
 12099                           
 12100                           ;psect for function _NEMS_load_program
 12101  0694                     _NEMS_load_program:
 12102                           
 12103                           ;NEMS.c: 382:     unsigned short addr;;NEMS.c: 384:     addr = 0;
 12104                           
 12105                           ;incstack = 0
 12106                           ; Regs used in _NEMS_load_program: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12107  0694  0140               	movlb	0	; select bank0
 12108  0695  01A9               	clrf	NEMS_load_program@addr
 12109  0696  01AA               	clrf	NEMS_load_program@addr+1
 12110                           
 12111                           ;NEMS.c: 386:     program.amplitude = eeprom_read(addr++);
 12112  0697  3000               	movlw	0
 12113  0698  318C  240D  3186   	fcall	_eeprom_read
 12114  069B  0140               	movlb	0	; select bank0
 12115  069C  00A8               	movwf	??_NEMS_load_program
 12116  069D  0828               	movf	??_NEMS_load_program,w
 12117  069E  00DB               	movwf	_program	;volatile
 12118  069F  3001               	movlw	1
 12119  06A0  07A9               	addwf	NEMS_load_program@addr,f
 12120  06A1  3000               	movlw	0
 12121  06A2  3DAA               	addwfc	NEMS_load_program@addr+1,f
 12122                           
 12123                           ;NEMS.c: 387:     program.frequency = eeprom_read(addr++);
 12124  06A3  0829               	movf	NEMS_load_program@addr,w
 12125  06A4  318C  240D  3186   	fcall	_eeprom_read
 12126  06A7  0140               	movlb	0	; select bank0
 12127  06A8  00A8               	movwf	??_NEMS_load_program
 12128  06A9  0828               	movf	??_NEMS_load_program,w
 12129  06AA  00DC               	movwf	_program+1	;volatile
 12130  06AB  3001               	movlw	1
 12131  06AC  07A9               	addwf	NEMS_load_program@addr,f
 12132  06AD  3000               	movlw	0
 12133  06AE  3DAA               	addwfc	NEMS_load_program@addr+1,f
 12134                           
 12135                           ;NEMS.c: 388:     program.phase_duration = eeprom_read(addr++);
 12136  06AF  0829               	movf	NEMS_load_program@addr,w
 12137  06B0  318C  240D  3186   	fcall	_eeprom_read
 12138  06B3  0140               	movlb	0	; select bank0
 12139  06B4  00A8               	movwf	??_NEMS_load_program
 12140  06B5  0828               	movf	??_NEMS_load_program,w
 12141  06B6  00DD               	movwf	_program+2	;volatile
 12142  06B7  3001               	movlw	1
 12143  06B8  07A9               	addwf	NEMS_load_program@addr,f
 12144  06B9  3000               	movlw	0
 12145  06BA  3DAA               	addwfc	NEMS_load_program@addr+1,f
 12146                           
 12147                           ;NEMS.c: 389:     program.symmetry_factor = eeprom_read(addr++);
 12148  06BB  0829               	movf	NEMS_load_program@addr,w
 12149  06BC  318C  240D  3186   	fcall	_eeprom_read
 12150  06BF  0140               	movlb	0	; select bank0
 12151  06C0  00A8               	movwf	??_NEMS_load_program
 12152  06C1  0828               	movf	??_NEMS_load_program,w
 12153  06C2  00DE               	movwf	_program+3	;volatile
 12154  06C3  3001               	movlw	1
 12155  06C4  07A9               	addwf	NEMS_load_program@addr,f
 12156  06C5  3000               	movlw	0
 12157  06C6  3DAA               	addwfc	NEMS_load_program@addr+1,f
 12158                           
 12159                           ;NEMS.c: 390:     program.ON_time = eeprom_read(addr++);
 12160  06C7  0829               	movf	NEMS_load_program@addr,w
 12161  06C8  318C  240D  3186   	fcall	_eeprom_read
 12162  06CB  0140               	movlb	0	; select bank0
 12163  06CC  00A8               	movwf	??_NEMS_load_program
 12164  06CD  0828               	movf	??_NEMS_load_program,w
 12165  06CE  00DF               	movwf	_program+4	;volatile
 12166  06CF  3001               	movlw	1
 12167  06D0  07A9               	addwf	NEMS_load_program@addr,f
 12168  06D1  3000               	movlw	0
 12169  06D2  3DAA               	addwfc	NEMS_load_program@addr+1,f
 12170                           
 12171                           ;NEMS.c: 391:     program.OFF_time = eeprom_read(addr++);
 12172  06D3  0829               	movf	NEMS_load_program@addr,w
 12173  06D4  318C  240D  3186   	fcall	_eeprom_read
 12174  06D7  0140               	movlb	0	; select bank0
 12175  06D8  00A8               	movwf	??_NEMS_load_program
 12176  06D9  0828               	movf	??_NEMS_load_program,w
 12177  06DA  00E0               	movwf	_program+5	;volatile
 12178  06DB  3001               	movlw	1
 12179  06DC  07A9               	addwf	NEMS_load_program@addr,f
 12180  06DD  3000               	movlw	0
 12181  06DE  3DAA               	addwfc	NEMS_load_program@addr+1,f
 12182                           
 12183                           ;NEMS.c: 392:     program.ramp_up = eeprom_read(addr++);
 12184  06DF  0829               	movf	NEMS_load_program@addr,w
 12185  06E0  318C  240D  3186   	fcall	_eeprom_read
 12186  06E3  0140               	movlb	0	; select bank0
 12187  06E4  00A8               	movwf	??_NEMS_load_program
 12188  06E5  0828               	movf	??_NEMS_load_program,w
 12189  06E6  00E2               	movwf	_program+7	;volatile
 12190  06E7  3001               	movlw	1
 12191  06E8  07A9               	addwf	NEMS_load_program@addr,f
 12192  06E9  3000               	movlw	0
 12193  06EA  3DAA               	addwfc	NEMS_load_program@addr+1,f
 12194                           
 12195                           ;NEMS.c: 393:     program.ramp_down = eeprom_read(addr++);
 12196  06EB  0829               	movf	NEMS_load_program@addr,w
 12197  06EC  318C  240D  3186   	fcall	_eeprom_read
 12198  06EF  0140               	movlb	0	; select bank0
 12199  06F0  00A8               	movwf	??_NEMS_load_program
 12200  06F1  0828               	movf	??_NEMS_load_program,w
 12201  06F2  00E3               	movwf	_program+8	;volatile
 12202  06F3  3001               	movlw	1
 12203  06F4  07A9               	addwf	NEMS_load_program@addr,f
 12204  06F5  3000               	movlw	0
 12205  06F6  3DAA               	addwfc	NEMS_load_program@addr+1,f
 12206                           
 12207                           ;NEMS.c: 394:     program.contractions = eeprom_read(addr++);
 12208  06F7  0829               	movf	NEMS_load_program@addr,w
 12209  06F8  318C  240D  3186   	fcall	_eeprom_read
 12210  06FB  0140               	movlb	0	; select bank0
 12211  06FC  00A8               	movwf	??_NEMS_load_program
 12212  06FD  0828               	movf	??_NEMS_load_program,w
 12213  06FE  00E1               	movwf	_program+6	;volatile
 12214  06FF  3001               	movlw	1
 12215  0700  07A9               	addwf	NEMS_load_program@addr,f
 12216  0701  3000               	movlw	0
 12217  0702  3DAA               	addwfc	NEMS_load_program@addr+1,f
 12218                           
 12219                           ;NEMS.c: 395:     program.channel1 = eeprom_read(addr++);
 12220  0703  0829               	movf	NEMS_load_program@addr,w
 12221  0704  318C  240D  3186   	fcall	_eeprom_read
 12222  0707  0140               	movlb	0	; select bank0
 12223  0708  00A8               	movwf	??_NEMS_load_program
 12224  0709  0828               	movf	??_NEMS_load_program,w
 12225  070A  00E4               	movwf	_program+9	;volatile
 12226  070B  3001               	movlw	1
 12227  070C  07A9               	addwf	NEMS_load_program@addr,f
 12228  070D  3000               	movlw	0
 12229  070E  3DAA               	addwfc	NEMS_load_program@addr+1,f
 12230                           
 12231                           ;NEMS.c: 396:     program.channel2 = eeprom_read(addr);
 12232  070F  0829               	movf	NEMS_load_program@addr,w
 12233  0710  318C  240D  3186   	fcall	_eeprom_read
 12234  0713  0140               	movlb	0	; select bank0
 12235  0714  00A8               	movwf	??_NEMS_load_program
 12236  0715  0828               	movf	??_NEMS_load_program,w
 12237  0716  00E5               	movwf	_program+10	;volatile
 12238                           
 12239                           ;NEMS.c: 399:     _puts("l-ok ");
 12240  0717  3087               	movlw	low (STR_48| (0+32768))
 12241  0718  00A2               	movwf	__puts@pt
 12242  0719  3091               	movlw	high (STR_48| (0+32768))
 12243  071A  00A3               	movwf	__puts@pt+1
 12244  071B  318E  2681         	fcall	__puts
 12245  071D  0008               	return
 12246  071E                     __end_of_NEMS_load_program:
 12247                           
 12248                           	psect	text39
 12249  0C0D                     __ptext39:	
 12250 ;; *************** function _eeprom_read *****************
 12251 ;; Defined at:
 12252 ;;		line 6 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeread.c"
 12253 ;; Parameters:    Size  Location     Type
 12254 ;;  addr            1    wreg     unsigned char 
 12255 ;; Auto vars:     Size  Location     Type
 12256 ;;  addr            1    0[BANK0 ] unsigned char 
 12257 ;; Return value:  Size  Location     Type
 12258 ;;                  1    wreg      unsigned char 
 12259 ;; Registers used:
 12260 ;;		wreg
 12261 ;; Tracked objects:
 12262 ;;		On entry : 3F/0
 12263 ;;		On exit  : 3F/10
 12264 ;;		Unchanged: 0/0
 12265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12267 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12269 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12270 ;;Total ram usage:        1 bytes
 12271 ;; Hardware stack levels used: 1
 12272 ;; Hardware stack levels required when called: 4
 12273 ;; This function calls:
 12274 ;;		Nothing
 12275 ;; This function is called by:
 12276 ;;		_NEMS_load_program
 12277 ;; This function uses a non-reentrant model
 12278 ;;
 12279                           
 12280                           
 12281                           ;psect for function _eeprom_read
 12282  0C0D                     _eeprom_read:
 12283                           
 12284                           ;incstack = 0
 12285                           ; Regs used in _eeprom_read: [wreg]
 12286                           ;eeprom_read@addr stored from wreg
 12287  0C0D  00A0               	movwf	eeprom_read@addr
 12288  0C0E  2C10               	goto	l802
 12289  0C0F                     u1941:
 12290  0C0F  0140               	movlb	0	; select bank0
 12291  0C10                     l802:	
 12292                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeread.c: 6: eeprom_read(unsigned char a
      +                          ddr);/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeread.c: 7: {;/opt/microchip/xc8/v2
      +                          .32/pic/sources/c99/pic/__eeread.c: 8:  do
 12293                           
 12294  0C10  0064               	clrwdt	;# 
 12295  0C11  0150               	movlb	16	; select bank16
 12296  0C12  189E               	btfsc	30,1	;volsfr
 12297  0C13  2C0F               	goto	u1941
 12298                           
 12299                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/pic/__eeread.c: 18:  return ( NVMCON1bits.NVMR
      +                          EGS = 1, NVMADRL = (addr) & 0xFFU, NVMADRH = 0x70, NVMCON1bits.RD = 1, NVMDATL);
 12300  0C14  171E               	bsf	30,6	;volsfr
 12301  0C15  0140               	movlb	0	; select bank0
 12302  0C16  0820               	movf	eeprom_read@addr,w
 12303  0C17  0150               	movlb	16	; select bank16
 12304  0C18  009A               	movwf	26	;volatile
 12305  0C19  3070               	movlw	112
 12306  0C1A  009B               	movwf	27	;volatile
 12307  0C1B  141E               	bsf	30,0	;volsfr
 12308  0C1C  081C               	movf	28,w	;volatile
 12309  0C1D  0008               	return
 12310  0C1E                     __end_of_eeprom_read:
 12311                           
 12312                           	psect	text40
 12313  0376                     __ptext40:	
 12314 ;; *************** function _NEMS_get_program *****************
 12315 ;; Defined at:
 12316 ;;		line 275 in file "NEMS.c"
 12317 ;; Parameters:    Size  Location     Type
 12318 ;;		None
 12319 ;; Auto vars:     Size  Location     Type
 12320 ;;  aux             4   25[BANK0 ] unsigned char [4]
 12321 ;; Return value:  Size  Location     Type
 12322 ;;                  1    wreg      void 
 12323 ;; Registers used:
 12324 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12325 ;; Tracked objects:
 12326 ;;		On entry : 0/0
 12327 ;;		On exit  : 3F/0
 12328 ;;		Unchanged: 0/0
 12329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12331 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12332 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12333 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12334 ;;Total ram usage:        5 bytes
 12335 ;; Hardware stack levels used: 1
 12336 ;; Hardware stack levels required when called: 6
 12337 ;; This function calls:
 12338 ;;		__puts
 12339 ;;		__sprintf_u8b
 12340 ;; This function is called by:
 12341 ;;		_NEMS_message_handler
 12342 ;; This function uses a non-reentrant model
 12343 ;;
 12344                           
 12345                           
 12346                           ;psect for function _NEMS_get_program
 12347  0376                     _NEMS_get_program:
 12348                           
 12349                           ;NEMS.c: 277:     unsigned char aux[4];;NEMS.c: 279:     _puts("\nNEMS program\n");
 12350                           
 12351                           ;incstack = 0
 12352                           ; Regs used in _NEMS_get_program: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12353  0376  30CE               	movlw	low (STR_20| (0+32768))
 12354  0377  0140               	movlb	0	; select bank0
 12355  0378  00A2               	movwf	__puts@pt
 12356  0379  3090               	movlw	high (STR_20| (0+32768))
 12357  037A  00A3               	movwf	__puts@pt+1
 12358  037B  318E  2681  3183   	fcall	__puts
 12359                           
 12360                           ;NEMS.c: 281:     _sprintf_u8b(aux,program.amplitude);
 12361  037E  085B               	movf	_program,w	;volatile
 12362  037F  00B8               	movwf	??_NEMS_get_program
 12363  0380  0838               	movf	??_NEMS_get_program,w
 12364  0381  00AF               	movwf	__sprintf_u8b@val
 12365  0382  3039               	movlw	(low (NEMS_get_program@aux| 0))& (0+255)
 12366  0383  3186  2605  3183   	fcall	__sprintf_u8b
 12367                           
 12368                           ;NEMS.c: 282:     _puts("Amplitude (mA): ");
 12369  0386  308C               	movlw	low (STR_21| (0+32768))
 12370  0387  00A2               	movwf	__puts@pt
 12371  0388  3090               	movlw	high (STR_21| (0+32768))
 12372  0389  00A3               	movwf	__puts@pt+1
 12373  038A  318E  2681  3183   	fcall	__puts
 12374                           
 12375                           ;NEMS.c: 283:     _puts(aux);
 12376  038D  3039               	movlw	low NEMS_get_program@aux
 12377  038E  00A2               	movwf	__puts@pt
 12378  038F  3000               	movlw	high NEMS_get_program@aux
 12379  0390  00A3               	movwf	__puts@pt+1
 12380  0391  318E  2681  3183   	fcall	__puts
 12381                           
 12382                           ;NEMS.c: 284:     _puts("\n");
 12383  0394  301A               	movlw	low ((STR_49+26)| (0+32768))
 12384  0395  00A2               	movwf	__puts@pt
 12385  0396  3090               	movlw	high ((STR_49+26)| (0+32768))
 12386  0397  00A3               	movwf	__puts@pt+1
 12387  0398  318E  2681  3183   	fcall	__puts
 12388                           
 12389                           ;NEMS.c: 286:     _sprintf_u8b(aux,program.frequency);
 12390  039B  085C               	movf	_program+1,w	;volatile
 12391  039C  00B8               	movwf	??_NEMS_get_program
 12392  039D  0838               	movf	??_NEMS_get_program,w
 12393  039E  00AF               	movwf	__sprintf_u8b@val
 12394  039F  3039               	movlw	(low (NEMS_get_program@aux| 0))& (0+255)
 12395  03A0  3186  2605  3183   	fcall	__sprintf_u8b
 12396                           
 12397                           ;NEMS.c: 287:     _puts("Frequency (Hz): ");
 12398  03A3  309D               	movlw	low (STR_23| (0+32768))
 12399  03A4  00A2               	movwf	__puts@pt
 12400  03A5  3090               	movlw	high (STR_23| (0+32768))
 12401  03A6  00A3               	movwf	__puts@pt+1
 12402  03A7  318E  2681  3183   	fcall	__puts
 12403                           
 12404                           ;NEMS.c: 288:     _puts(aux);
 12405  03AA  3039               	movlw	low NEMS_get_program@aux
 12406  03AB  00A2               	movwf	__puts@pt
 12407  03AC  3000               	movlw	high NEMS_get_program@aux
 12408  03AD  00A3               	movwf	__puts@pt+1
 12409  03AE  318E  2681  3183   	fcall	__puts
 12410                           
 12411                           ;NEMS.c: 289:     _puts("\n");
 12412  03B1  301A               	movlw	low ((STR_49+26)| (0+32768))
 12413  03B2  00A2               	movwf	__puts@pt
 12414  03B3  3090               	movlw	high ((STR_49+26)| (0+32768))
 12415  03B4  00A3               	movwf	__puts@pt+1
 12416  03B5  318E  2681  3183   	fcall	__puts
 12417                           
 12418                           ;NEMS.c: 291:     _sprintf_u8b(aux,program.phase_duration);
 12419  03B8  085D               	movf	_program+2,w	;volatile
 12420  03B9  00B8               	movwf	??_NEMS_get_program
 12421  03BA  0838               	movf	??_NEMS_get_program,w
 12422  03BB  00AF               	movwf	__sprintf_u8b@val
 12423  03BC  3039               	movlw	(low (NEMS_get_program@aux| 0))& (0+255)
 12424  03BD  3186  2605  3183   	fcall	__sprintf_u8b
 12425                           
 12426                           ;NEMS.c: 292:     _puts("Phase duration (us/50): ");
 12427  03C0  301C               	movlw	low (STR_25| (0+32768))
 12428  03C1  00A2               	movwf	__puts@pt
 12429  03C2  3090               	movlw	high (STR_25| (0+32768))
 12430  03C3  00A3               	movwf	__puts@pt+1
 12431  03C4  318E  2681  3183   	fcall	__puts
 12432                           
 12433                           ;NEMS.c: 293:     _puts(aux);
 12434  03C7  3039               	movlw	low NEMS_get_program@aux
 12435  03C8  00A2               	movwf	__puts@pt
 12436  03C9  3000               	movlw	high NEMS_get_program@aux
 12437  03CA  00A3               	movwf	__puts@pt+1
 12438  03CB  318E  2681  3183   	fcall	__puts
 12439                           
 12440                           ;NEMS.c: 294:     _puts("\n");
 12441  03CE  301A               	movlw	low ((STR_49+26)| (0+32768))
 12442  03CF  00A2               	movwf	__puts@pt
 12443  03D0  3090               	movlw	high ((STR_49+26)| (0+32768))
 12444  03D1  00A3               	movwf	__puts@pt+1
 12445  03D2  318E  2681  3183   	fcall	__puts
 12446                           
 12447                           ;NEMS.c: 296:      _sprintf_u8b(aux,program.symmetry_factor);
 12448  03D5  085E               	movf	_program+3,w	;volatile
 12449  03D6  00B8               	movwf	??_NEMS_get_program
 12450  03D7  0838               	movf	??_NEMS_get_program,w
 12451  03D8  00AF               	movwf	__sprintf_u8b@val
 12452  03D9  3039               	movlw	(low (NEMS_get_program@aux| 0))& (0+255)
 12453  03DA  3186  2605  3183   	fcall	__sprintf_u8b
 12454                           
 12455                           ;NEMS.c: 297:     _puts("Symmetry factor: ");
 12456  03DD  307A               	movlw	low (STR_27| (0+32768))
 12457  03DE  00A2               	movwf	__puts@pt
 12458  03DF  3090               	movlw	high (STR_27| (0+32768))
 12459  03E0  00A3               	movwf	__puts@pt+1
 12460  03E1  318E  2681  3183   	fcall	__puts
 12461                           
 12462                           ;NEMS.c: 298:     _puts(aux);
 12463  03E4  3039               	movlw	low NEMS_get_program@aux
 12464  03E5  00A2               	movwf	__puts@pt
 12465  03E6  3000               	movlw	high NEMS_get_program@aux
 12466  03E7  00A3               	movwf	__puts@pt+1
 12467  03E8  318E  2681  3183   	fcall	__puts
 12468                           
 12469                           ;NEMS.c: 299:     _puts("\n");
 12470  03EB  301A               	movlw	low ((STR_49+26)| (0+32768))
 12471  03EC  00A2               	movwf	__puts@pt
 12472  03ED  3090               	movlw	high ((STR_49+26)| (0+32768))
 12473  03EE  00A3               	movwf	__puts@pt+1
 12474  03EF  318E  2681  3183   	fcall	__puts
 12475                           
 12476                           ;NEMS.c: 301:     _sprintf_u8b(aux,program.ON_time);
 12477  03F2  085F               	movf	_program+4,w	;volatile
 12478  03F3  00B8               	movwf	??_NEMS_get_program
 12479  03F4  0838               	movf	??_NEMS_get_program,w
 12480  03F5  00AF               	movwf	__sprintf_u8b@val
 12481  03F6  3039               	movlw	(low (NEMS_get_program@aux| 0))& (0+255)
 12482  03F7  3186  2605  3183   	fcall	__sprintf_u8b
 12483                           
 12484                           ;NEMS.c: 302:     _puts("ON time (s) : ");
 12485  03FA  30DD               	movlw	low (STR_29| (0+32768))
 12486  03FB  00A2               	movwf	__puts@pt
 12487  03FC  3090               	movlw	high (STR_29| (0+32768))
 12488  03FD  00A3               	movwf	__puts@pt+1
 12489  03FE  318E  2681  3183   	fcall	__puts
 12490                           
 12491                           ;NEMS.c: 303:     _puts(aux);
 12492  0401  3039               	movlw	low NEMS_get_program@aux
 12493  0402  00A2               	movwf	__puts@pt
 12494  0403  3000               	movlw	high NEMS_get_program@aux
 12495  0404  00A3               	movwf	__puts@pt+1
 12496  0405  318E  2681  3183   	fcall	__puts
 12497                           
 12498                           ;NEMS.c: 304:     _puts("\n");
 12499  0408  301A               	movlw	low ((STR_49+26)| (0+32768))
 12500  0409  00A2               	movwf	__puts@pt
 12501  040A  3090               	movlw	high ((STR_49+26)| (0+32768))
 12502  040B  00A3               	movwf	__puts@pt+1
 12503  040C  318E  2681  3183   	fcall	__puts
 12504                           
 12505                           ;NEMS.c: 306:     _sprintf_u8b(aux,program.OFF_time);
 12506  040F  0860               	movf	_program+5,w	;volatile
 12507  0410  00B8               	movwf	??_NEMS_get_program
 12508  0411  0838               	movf	??_NEMS_get_program,w
 12509  0412  00AF               	movwf	__sprintf_u8b@val
 12510  0413  3039               	movlw	(low (NEMS_get_program@aux| 0))& (0+255)
 12511  0414  3186  2605  3183   	fcall	__sprintf_u8b
 12512                           
 12513                           ;NEMS.c: 307:     _puts("OFF time (s) : ");
 12514  0417  30BE               	movlw	low (STR_31| (0+32768))
 12515  0418  00A2               	movwf	__puts@pt
 12516  0419  3090               	movlw	high (STR_31| (0+32768))
 12517  041A  00A3               	movwf	__puts@pt+1
 12518  041B  318E  2681  3183   	fcall	__puts
 12519                           
 12520                           ;NEMS.c: 308:     _puts(aux);
 12521  041E  3039               	movlw	low NEMS_get_program@aux
 12522  041F  00A2               	movwf	__puts@pt
 12523  0420  3000               	movlw	high NEMS_get_program@aux
 12524  0421  00A3               	movwf	__puts@pt+1
 12525  0422  318E  2681  3183   	fcall	__puts
 12526                           
 12527                           ;NEMS.c: 309:     _puts("\n");
 12528  0425  301A               	movlw	low ((STR_49+26)| (0+32768))
 12529  0426  00A2               	movwf	__puts@pt
 12530  0427  3090               	movlw	high ((STR_49+26)| (0+32768))
 12531  0428  00A3               	movwf	__puts@pt+1
 12532  0429  318E  2681  3183   	fcall	__puts
 12533                           
 12534                           ;NEMS.c: 311:     _sprintf_u8b(aux,program.ramp_up);
 12535  042C  0862               	movf	_program+7,w	;volatile
 12536  042D  00B8               	movwf	??_NEMS_get_program
 12537  042E  0838               	movf	??_NEMS_get_program,w
 12538  042F  00AF               	movwf	__sprintf_u8b@val
 12539  0430  3039               	movlw	(low (NEMS_get_program@aux| 0))& (0+255)
 12540  0431  3186  2605  3183   	fcall	__sprintf_u8b
 12541                           
 12542                           ;NEMS.c: 312:     _puts("Ramp up time (ds) : ");
 12543  0434  3065               	movlw	low (STR_33| (0+32768))
 12544  0435  00A2               	movwf	__puts@pt
 12545  0436  3090               	movlw	high (STR_33| (0+32768))
 12546  0437  00A3               	movwf	__puts@pt+1
 12547  0438  318E  2681  3183   	fcall	__puts
 12548                           
 12549                           ;NEMS.c: 313:     _puts(aux);
 12550  043B  3039               	movlw	low NEMS_get_program@aux
 12551  043C  00A2               	movwf	__puts@pt
 12552  043D  3000               	movlw	high NEMS_get_program@aux
 12553  043E  00A3               	movwf	__puts@pt+1
 12554  043F  318E  2681  3183   	fcall	__puts
 12555                           
 12556                           ;NEMS.c: 314:     _puts("\n");
 12557  0442  301A               	movlw	low ((STR_49+26)| (0+32768))
 12558  0443  00A2               	movwf	__puts@pt
 12559  0444  3090               	movlw	high ((STR_49+26)| (0+32768))
 12560  0445  00A3               	movwf	__puts@pt+1
 12561  0446  318E  2681  3183   	fcall	__puts
 12562                           
 12563                           ;NEMS.c: 316:     _sprintf_u8b(aux,program.ramp_down);
 12564  0449  0863               	movf	_program+8,w	;volatile
 12565  044A  00B8               	movwf	??_NEMS_get_program
 12566  044B  0838               	movf	??_NEMS_get_program,w
 12567  044C  00AF               	movwf	__sprintf_u8b@val
 12568  044D  3039               	movlw	(low (NEMS_get_program@aux| 0))& (0+255)
 12569  044E  3186  2605  3183   	fcall	__sprintf_u8b
 12570                           
 12571                           ;NEMS.c: 317:     _puts("Ramp down time (ds) : ");
 12572  0451  304E               	movlw	low (STR_35| (0+32768))
 12573  0452  00A2               	movwf	__puts@pt
 12574  0453  3090               	movlw	high (STR_35| (0+32768))
 12575  0454  00A3               	movwf	__puts@pt+1
 12576  0455  318E  2681  3183   	fcall	__puts
 12577                           
 12578                           ;NEMS.c: 318:     _puts(aux);
 12579  0458  3039               	movlw	low NEMS_get_program@aux
 12580  0459  00A2               	movwf	__puts@pt
 12581  045A  3000               	movlw	high NEMS_get_program@aux
 12582  045B  00A3               	movwf	__puts@pt+1
 12583  045C  318E  2681  3183   	fcall	__puts
 12584                           
 12585                           ;NEMS.c: 319:     _puts("\n");
 12586  045F  301A               	movlw	low ((STR_49+26)| (0+32768))
 12587  0460  00A2               	movwf	__puts@pt
 12588  0461  3090               	movlw	high ((STR_49+26)| (0+32768))
 12589  0462  00A3               	movwf	__puts@pt+1
 12590  0463  318E  2681  3183   	fcall	__puts
 12591                           
 12592                           ;NEMS.c: 321:     _sprintf_u8b(aux,program.contractions);
 12593  0466  0861               	movf	_program+6,w	;volatile
 12594  0467  00B8               	movwf	??_NEMS_get_program
 12595  0468  0838               	movf	??_NEMS_get_program,w
 12596  0469  00AF               	movwf	__sprintf_u8b@val
 12597  046A  3039               	movlw	(low (NEMS_get_program@aux| 0))& (0+255)
 12598  046B  3186  2605  3183   	fcall	__sprintf_u8b
 12599                           
 12600                           ;NEMS.c: 322:     _puts("Number of contractions: ");
 12601  046E  3035               	movlw	low (STR_37| (0+32768))
 12602  046F  00A2               	movwf	__puts@pt
 12603  0470  3090               	movlw	high (STR_37| (0+32768))
 12604  0471  00A3               	movwf	__puts@pt+1
 12605  0472  318E  2681  3183   	fcall	__puts
 12606                           
 12607                           ;NEMS.c: 323:     _puts(aux);
 12608  0475  3039               	movlw	low NEMS_get_program@aux
 12609  0476  00A2               	movwf	__puts@pt
 12610  0477  3000               	movlw	high NEMS_get_program@aux
 12611  0478  00A3               	movwf	__puts@pt+1
 12612  0479  318E  2681  3183   	fcall	__puts
 12613                           
 12614                           ;NEMS.c: 324:     _puts("\n");
 12615  047C  301A               	movlw	low ((STR_49+26)| (0+32768))
 12616  047D  00A2               	movwf	__puts@pt
 12617  047E  3090               	movlw	high ((STR_49+26)| (0+32768))
 12618  047F  00A3               	movwf	__puts@pt+1
 12619  0480  318E  2681  3183   	fcall	__puts
 12620                           
 12621                           ;NEMS.c: 326:     _sprintf_u8b(aux,program.channel1);
 12622  0483  0864               	movf	_program+9,w	;volatile
 12623  0484  00B8               	movwf	??_NEMS_get_program
 12624  0485  0838               	movf	??_NEMS_get_program,w
 12625  0486  00AF               	movwf	__sprintf_u8b@val
 12626  0487  3039               	movlw	(low (NEMS_get_program@aux| 0))& (0+255)
 12627  0488  3186  2605  3183   	fcall	__sprintf_u8b
 12628                           
 12629                           ;NEMS.c: 327:     _puts("Channel 1: ");
 12630  048B  30EC               	movlw	low (STR_39| (0+32768))
 12631  048C  00A2               	movwf	__puts@pt
 12632  048D  3090               	movlw	high (STR_39| (0+32768))
 12633  048E  00A3               	movwf	__puts@pt+1
 12634  048F  318E  2681  3183   	fcall	__puts
 12635                           
 12636                           ;NEMS.c: 328:     _puts(aux);
 12637  0492  3039               	movlw	low NEMS_get_program@aux
 12638  0493  00A2               	movwf	__puts@pt
 12639  0494  3000               	movlw	high NEMS_get_program@aux
 12640  0495  00A3               	movwf	__puts@pt+1
 12641  0496  318E  2681  3183   	fcall	__puts
 12642                           
 12643                           ;NEMS.c: 329:     _puts("\n");
 12644  0499  301A               	movlw	low ((STR_49+26)| (0+32768))
 12645  049A  00A2               	movwf	__puts@pt
 12646  049B  3090               	movlw	high ((STR_49+26)| (0+32768))
 12647  049C  00A3               	movwf	__puts@pt+1
 12648  049D  318E  2681  3183   	fcall	__puts
 12649                           
 12650                           ;NEMS.c: 331:     _sprintf_u8b(aux,program.channel2);
 12651  04A0  0865               	movf	_program+10,w	;volatile
 12652  04A1  00B8               	movwf	??_NEMS_get_program
 12653  04A2  0838               	movf	??_NEMS_get_program,w
 12654  04A3  00AF               	movwf	__sprintf_u8b@val
 12655  04A4  3039               	movlw	(low (NEMS_get_program@aux| 0))& (0+255)
 12656  04A5  3186  2605  3183   	fcall	__sprintf_u8b
 12657                           
 12658                           ;NEMS.c: 332:     _puts("Channel 2: ");
 12659  04A8  30F8               	movlw	low (STR_41| (0+32768))
 12660  04A9  00A2               	movwf	__puts@pt
 12661  04AA  3090               	movlw	high (STR_41| (0+32768))
 12662  04AB  00A3               	movwf	__puts@pt+1
 12663  04AC  318E  2681  3183   	fcall	__puts
 12664                           
 12665                           ;NEMS.c: 333:     _puts(aux);
 12666  04AF  3039               	movlw	low NEMS_get_program@aux
 12667  04B0  00A2               	movwf	__puts@pt
 12668  04B1  3000               	movlw	high NEMS_get_program@aux
 12669  04B2  00A3               	movwf	__puts@pt+1
 12670  04B3  318E  2681  3183   	fcall	__puts
 12671                           
 12672                           ;NEMS.c: 334:     _puts("\n");
 12673  04B6  301A               	movlw	low ((STR_49+26)| (0+32768))
 12674  04B7  00A2               	movwf	__puts@pt
 12675  04B8  3090               	movlw	high ((STR_49+26)| (0+32768))
 12676  04B9  00A3               	movwf	__puts@pt+1
 12677  04BA  318E  2681         	fcall	__puts
 12678  04BC  0008               	return
 12679  04BD                     __end_of_NEMS_get_program:
 12680                           
 12681                           	psect	text41
 12682  0605                     __ptext41:	
 12683 ;; *************** function __sprintf_u8b *****************
 12684 ;; Defined at:
 12685 ;;		line 52 in file "comm.c"
 12686 ;; Parameters:    Size  Location     Type
 12687 ;;  mess            1    wreg     PTR unsigned char 
 12688 ;;		 -> NEMS_get_program@aux(4), 
 12689 ;;  val             1   15[BANK0 ] unsigned char 
 12690 ;; Auto vars:     Size  Location     Type
 12691 ;;  mess            1   23[BANK0 ] PTR unsigned char 
 12692 ;;		 -> NEMS_get_program@aux(4), 
 12693 ;;  buf             3   20[BANK0 ] unsigned char [3]
 12694 ;;  aux             1   19[BANK0 ] unsigned char 
 12695 ;; Return value:  Size  Location     Type
 12696 ;;                  1    wreg      void 
 12697 ;; Registers used:
 12698 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12699 ;; Tracked objects:
 12700 ;;		On entry : 3F/0
 12701 ;;		On exit  : 3F/0
 12702 ;;		Unchanged: 0/0
 12703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12704 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12705 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12706 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12707 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12708 ;;Total ram usage:        9 bytes
 12709 ;; Hardware stack levels used: 1
 12710 ;; Hardware stack levels required when called: 5
 12711 ;; This function calls:
 12712 ;;		___awdiv
 12713 ;;		___lbmod
 12714 ;; This function is called by:
 12715 ;;		_NEMS_get_program
 12716 ;; This function uses a non-reentrant model
 12717 ;;
 12718                           
 12719                           
 12720                           ;psect for function __sprintf_u8b
 12721  0605                     __sprintf_u8b:
 12722                           
 12723                           ;incstack = 0
 12724                           ; Regs used in __sprintf_u8b: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12725                           ;__sprintf_u8b@mess stored from wreg
 12726  0605  00B7               	movwf	__sprintf_u8b@mess
 12727                           
 12728                           ;comm.c: 52: void _sprintf_u8b(char* mess, unsigned char val);comm.c: 53: {;comm.c: 55: 
      +                              unsigned char aux;;comm.c: 56:     unsigned char buf[3];;comm.c: 58:     aux = val%1
      +                          0;
 12729  0606  300A               	movlw	10
 12730  0607  00B0               	movwf	??__sprintf_u8b
 12731  0608  0830               	movf	??__sprintf_u8b,w
 12732  0609  00A0               	movwf	___lbmod@divisor
 12733  060A  082F               	movf	__sprintf_u8b@val,w
 12734  060B  318D  25D8  3186   	fcall	___lbmod
 12735  060E  00B1               	movwf	??__sprintf_u8b+1
 12736  060F  0831               	movf	??__sprintf_u8b+1,w
 12737  0610  00B3               	movwf	__sprintf_u8b@aux
 12738                           
 12739                           ;comm.c: 59:     val /=10;
 12740  0611  300A               	movlw	10
 12741  0612  00A6               	movwf	___awdiv@divisor
 12742  0613  3000               	movlw	0
 12743  0614  00A7               	movwf	___awdiv@divisor+1
 12744  0615  082F               	movf	__sprintf_u8b@val,w
 12745  0616  00B0               	movwf	??__sprintf_u8b
 12746  0617  01B1               	clrf	??__sprintf_u8b+1
 12747  0618  0830               	movf	??__sprintf_u8b,w
 12748  0619  00A8               	movwf	___awdiv@dividend
 12749  061A  0831               	movf	??__sprintf_u8b+1,w
 12750  061B  00A9               	movwf	___awdiv@dividend+1
 12751  061C  3187  279A  3186   	fcall	___awdiv
 12752  061F  0826               	movf	?___awdiv,w
 12753  0620  00B2               	movwf	??__sprintf_u8b+2
 12754  0621  0832               	movf	??__sprintf_u8b+2,w
 12755  0622  00AF               	movwf	__sprintf_u8b@val
 12756                           
 12757                           ;comm.c: 61:     buf[2] = aux;
 12758  0623  0833               	movf	__sprintf_u8b@aux,w
 12759  0624  00B0               	movwf	??__sprintf_u8b
 12760  0625  0830               	movf	??__sprintf_u8b,w
 12761  0626  00B6               	movwf	__sprintf_u8b@buf+2
 12762                           
 12763                           ;comm.c: 63:     aux = val%10;
 12764  0627  300A               	movlw	10
 12765  0628  00B0               	movwf	??__sprintf_u8b
 12766  0629  0830               	movf	??__sprintf_u8b,w
 12767  062A  00A0               	movwf	___lbmod@divisor
 12768  062B  082F               	movf	__sprintf_u8b@val,w
 12769  062C  318D  25D8  3186   	fcall	___lbmod
 12770  062F  00B1               	movwf	??__sprintf_u8b+1
 12771  0630  0831               	movf	??__sprintf_u8b+1,w
 12772  0631  00B3               	movwf	__sprintf_u8b@aux
 12773                           
 12774                           ;comm.c: 64:     val /=10;
 12775  0632  300A               	movlw	10
 12776  0633  00A6               	movwf	___awdiv@divisor
 12777  0634  3000               	movlw	0
 12778  0635  00A7               	movwf	___awdiv@divisor+1
 12779  0636  082F               	movf	__sprintf_u8b@val,w
 12780  0637  00B0               	movwf	??__sprintf_u8b
 12781  0638  01B1               	clrf	??__sprintf_u8b+1
 12782  0639  0830               	movf	??__sprintf_u8b,w
 12783  063A  00A8               	movwf	___awdiv@dividend
 12784  063B  0831               	movf	??__sprintf_u8b+1,w
 12785  063C  00A9               	movwf	___awdiv@dividend+1
 12786  063D  3187  279A  3186   	fcall	___awdiv
 12787  0640  0826               	movf	?___awdiv,w
 12788  0641  00B2               	movwf	??__sprintf_u8b+2
 12789  0642  0832               	movf	??__sprintf_u8b+2,w
 12790  0643  00AF               	movwf	__sprintf_u8b@val
 12791                           
 12792                           ;comm.c: 66:     buf[1] = aux;
 12793  0644  0833               	movf	__sprintf_u8b@aux,w
 12794  0645  00B0               	movwf	??__sprintf_u8b
 12795  0646  0830               	movf	??__sprintf_u8b,w
 12796  0647  00B5               	movwf	__sprintf_u8b@buf+1
 12797                           
 12798                           ;comm.c: 67:     buf[0] = val;
 12799  0648  082F               	movf	__sprintf_u8b@val,w
 12800  0649  00B0               	movwf	??__sprintf_u8b
 12801  064A  0830               	movf	??__sprintf_u8b,w
 12802  064B  00B4               	movwf	__sprintf_u8b@buf
 12803                           
 12804                           ;comm.c: 69:     if (buf[0] != 0) {
 12805  064C  0834               	movf	__sprintf_u8b@buf,w
 12806  064D  1903               	btfsc	3,2
 12807  064E  2E6E               	goto	l3395
 12808                           
 12809                           ;comm.c: 70:         mess[0] = buf[0] + '0';
 12810  064F  0834               	movf	__sprintf_u8b@buf,w
 12811  0650  3E30               	addlw	48
 12812  0651  00B0               	movwf	??__sprintf_u8b
 12813  0652  0837               	movf	__sprintf_u8b@mess,w
 12814  0653  0086               	movwf	6
 12815  0654  0187               	clrf	7
 12816  0655  0830               	movf	??__sprintf_u8b,w
 12817  0656  0081               	movwf	1
 12818                           
 12819                           ;comm.c: 71:         mess[1] = buf[1] + '0';
 12820  0657  0835               	movf	__sprintf_u8b@buf+1,w
 12821  0658  3E30               	addlw	48
 12822  0659  00B0               	movwf	??__sprintf_u8b
 12823  065A  0A37               	incf	__sprintf_u8b@mess,w
 12824  065B  0086               	movwf	6
 12825  065C  0187               	clrf	7
 12826  065D  0830               	movf	??__sprintf_u8b,w
 12827  065E  0081               	movwf	1
 12828                           
 12829                           ;comm.c: 72:         mess[2] = buf[2] + '0';
 12830  065F  0836               	movf	__sprintf_u8b@buf+2,w
 12831  0660  3E30               	addlw	48
 12832  0661  00B0               	movwf	??__sprintf_u8b
 12833  0662  0837               	movf	__sprintf_u8b@mess,w
 12834  0663  3E02               	addlw	2
 12835  0664  0086               	movwf	6
 12836  0665  0187               	clrf	7
 12837  0666  0830               	movf	??__sprintf_u8b,w
 12838  0667  0081               	movwf	1
 12839                           
 12840                           ;comm.c: 73:         mess[3] = 0x00;
 12841  0668  0837               	movf	__sprintf_u8b@mess,w
 12842  0669  3E03               	addlw	3
 12843  066A  0086               	movwf	6
 12844  066B  0187               	clrf	7
 12845  066C  0181               	clrf	1
 12846  066D  0008               	return
 12847  066E                     l3395:
 12848  066E  0835               	movf	__sprintf_u8b@buf+1,w
 12849  066F  1903               	btfsc	3,2
 12850  0670  2E87               	goto	l3403
 12851                           
 12852                           ;comm.c: 77:         mess[0] = buf[1] + '0';
 12853  0671  0835               	movf	__sprintf_u8b@buf+1,w
 12854  0672  3E30               	addlw	48
 12855  0673  00B0               	movwf	??__sprintf_u8b
 12856  0674  0837               	movf	__sprintf_u8b@mess,w
 12857  0675  0086               	movwf	6
 12858  0676  0187               	clrf	7
 12859  0677  0830               	movf	??__sprintf_u8b,w
 12860  0678  0081               	movwf	1
 12861                           
 12862                           ;comm.c: 78:         mess[1] = buf[2] + '0';
 12863  0679  0836               	movf	__sprintf_u8b@buf+2,w
 12864  067A  3E30               	addlw	48
 12865  067B  00B0               	movwf	??__sprintf_u8b
 12866  067C  0A37               	incf	__sprintf_u8b@mess,w
 12867  067D  0086               	movwf	6
 12868  067E  0187               	clrf	7
 12869  067F  0830               	movf	??__sprintf_u8b,w
 12870  0680  0081               	movwf	1
 12871                           
 12872                           ;comm.c: 79:         mess[2] = 0x00;
 12873  0681  0837               	movf	__sprintf_u8b@mess,w
 12874  0682  3E02               	addlw	2
 12875  0683  0086               	movwf	6
 12876  0684  0187               	clrf	7
 12877  0685  0181               	clrf	1
 12878  0686  0008               	return
 12879  0687                     l3403:
 12880                           
 12881                           ;comm.c: 83:         mess[0] = buf[2] + '0';
 12882  0687  0836               	movf	__sprintf_u8b@buf+2,w
 12883  0688  3E30               	addlw	48
 12884  0689  00B0               	movwf	??__sprintf_u8b
 12885  068A  0837               	movf	__sprintf_u8b@mess,w
 12886  068B  0086               	movwf	6
 12887  068C  0187               	clrf	7
 12888  068D  0830               	movf	??__sprintf_u8b,w
 12889  068E  0081               	movwf	1
 12890                           
 12891                           ;comm.c: 84:         mess[1] = 0x00;
 12892  068F  0A37               	incf	__sprintf_u8b@mess,w
 12893  0690  0086               	movwf	6
 12894  0691  0187               	clrf	7
 12895  0692  0181               	clrf	1
 12896  0693  0008               	return
 12897  0694                     __end_of__sprintf_u8b:
 12898                           
 12899                           	psect	text42
 12900  0DD8                     __ptext42:	
 12901 ;; *************** function ___lbmod *****************
 12902 ;; Defined at:
 12903 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/lbmod.c"
 12904 ;; Parameters:    Size  Location     Type
 12905 ;;  dividend        1    wreg     unsigned char 
 12906 ;;  divisor         1    0[BANK0 ] unsigned char 
 12907 ;; Auto vars:     Size  Location     Type
 12908 ;;  dividend        1    3[BANK0 ] unsigned char 
 12909 ;;  rem             1    5[BANK0 ] unsigned char 
 12910 ;;  counter         1    4[BANK0 ] unsigned char 
 12911 ;; Return value:  Size  Location     Type
 12912 ;;                  1    wreg      unsigned char 
 12913 ;; Registers used:
 12914 ;;		wreg, status,2, status,0
 12915 ;; Tracked objects:
 12916 ;;		On entry : 3F/0
 12917 ;;		On exit  : 3F/0
 12918 ;;		Unchanged: 0/0
 12919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12920 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12921 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12922 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12923 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12924 ;;Total ram usage:        6 bytes
 12925 ;; Hardware stack levels used: 1
 12926 ;; Hardware stack levels required when called: 4
 12927 ;; This function calls:
 12928 ;;		Nothing
 12929 ;; This function is called by:
 12930 ;;		__sprintf_u8b
 12931 ;; This function uses a non-reentrant model
 12932 ;;
 12933                           
 12934                           
 12935                           ;psect for function ___lbmod
 12936  0DD8                     ___lbmod:
 12937                           
 12938                           ;incstack = 0
 12939                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
 12940                           ;___lbmod@dividend stored from wreg
 12941  0DD8  00A3               	movwf	___lbmod@dividend
 12942  0DD9  3008               	movlw	8
 12943  0DDA  00A1               	movwf	??___lbmod
 12944  0DDB  0821               	movf	??___lbmod,w
 12945  0DDC  00A4               	movwf	___lbmod@counter
 12946  0DDD  01A5               	clrf	___lbmod@rem
 12947  0DDE                     l3315:
 12948  0DDE  0823               	movf	___lbmod@dividend,w
 12949  0DDF  00A1               	movwf	??___lbmod
 12950  0DE0  3007               	movlw	7
 12951  0DE1                     u1825:
 12952  0DE1  36A1               	lsrf	??___lbmod,f
 12953  0DE2  0B89               	decfsz	9,f
 12954  0DE3  2DE1               	goto	u1825
 12955  0DE4  3525               	lslf	___lbmod@rem,w
 12956  0DE5  0421               	iorwf	??___lbmod,w
 12957  0DE6  00A2               	movwf	??___lbmod+1
 12958  0DE7  0822               	movf	??___lbmod+1,w
 12959  0DE8  00A5               	movwf	___lbmod@rem
 12960  0DE9  1003               	clrc
 12961  0DEA  0DA3               	rlf	___lbmod@dividend,f
 12962  0DEB  0820               	movf	___lbmod@divisor,w
 12963  0DEC  0225               	subwf	___lbmod@rem,w
 12964  0DED  1C03               	skipc
 12965  0DEE  2DF1               	goto	l1055
 12966  0DEF  0820               	movf	___lbmod@divisor,w
 12967  0DF0  02A5               	subwf	___lbmod@rem,f
 12968  0DF1                     l1055:
 12969  0DF1  3001               	movlw	1
 12970  0DF2  02A4               	subwf	___lbmod@counter,f
 12971  0DF3  1D03               	btfss	3,2
 12972  0DF4  2DDE               	goto	l3315
 12973  0DF5  0825               	movf	___lbmod@rem,w
 12974  0DF6  0008               	return
 12975  0DF7                     __end_of___lbmod:
 12976                           
 12977                           	psect	text43
 12978  079A                     __ptext43:	
 12979 ;; *************** function ___awdiv *****************
 12980 ;; Defined at:
 12981 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/awdiv.c"
 12982 ;; Parameters:    Size  Location     Type
 12983 ;;  divisor         2    6[BANK0 ] int 
 12984 ;;  dividend        2    8[BANK0 ] int 
 12985 ;; Auto vars:     Size  Location     Type
 12986 ;;  quotient        2   13[BANK0 ] int 
 12987 ;;  sign            1   12[BANK0 ] unsigned char 
 12988 ;;  counter         1   11[BANK0 ] unsigned char 
 12989 ;; Return value:  Size  Location     Type
 12990 ;;                  2    6[BANK0 ] int 
 12991 ;; Registers used:
 12992 ;;		wreg, status,2, status,0
 12993 ;; Tracked objects:
 12994 ;;		On entry : 3F/0
 12995 ;;		On exit  : 3F/0
 12996 ;;		Unchanged: 0/0
 12997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12998 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12999 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13000 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13001 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13002 ;;Total ram usage:        9 bytes
 13003 ;; Hardware stack levels used: 1
 13004 ;; Hardware stack levels required when called: 4
 13005 ;; This function calls:
 13006 ;;		Nothing
 13007 ;; This function is called by:
 13008 ;;		_NEMS_recalculate_program
 13009 ;;		__sprintf_u8b
 13010 ;; This function uses a non-reentrant model
 13011 ;;
 13012                           
 13013                           
 13014                           ;psect for function ___awdiv
 13015  079A                     ___awdiv:
 13016                           
 13017                           ;incstack = 0
 13018                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 13019  079A  01AC               	clrf	___awdiv@sign
 13020  079B  1FA7               	btfss	___awdiv@divisor+1,7
 13021  079C  2FA4               	goto	l2425
 13022  079D  09A6               	comf	___awdiv@divisor,f
 13023  079E  09A7               	comf	___awdiv@divisor+1,f
 13024  079F  0AA6               	incf	___awdiv@divisor,f
 13025  07A0  1903               	skipnz
 13026  07A1  0AA7               	incf	___awdiv@divisor+1,f
 13027  07A2  01AC               	clrf	___awdiv@sign
 13028  07A3  0AAC               	incf	___awdiv@sign,f
 13029  07A4                     l2425:
 13030  07A4  1FA9               	btfss	___awdiv@dividend+1,7
 13031  07A5  2FAF               	goto	l2431
 13032  07A6  09A8               	comf	___awdiv@dividend,f
 13033  07A7  09A9               	comf	___awdiv@dividend+1,f
 13034  07A8  0AA8               	incf	___awdiv@dividend,f
 13035  07A9  1903               	skipnz
 13036  07AA  0AA9               	incf	___awdiv@dividend+1,f
 13037  07AB  3001               	movlw	1
 13038  07AC  00AA               	movwf	??___awdiv
 13039  07AD  082A               	movf	??___awdiv,w
 13040  07AE  06AC               	xorwf	___awdiv@sign,f
 13041  07AF                     l2431:
 13042  07AF  01AD               	clrf	___awdiv@quotient
 13043  07B0  01AE               	clrf	___awdiv@quotient+1
 13044  07B1  0826               	movf	___awdiv@divisor,w
 13045  07B2  0427               	iorwf	___awdiv@divisor+1,w
 13046  07B3  1903               	btfsc	3,2
 13047  07B4  2FDE               	goto	l2453
 13048  07B5  01AB               	clrf	___awdiv@counter
 13049  07B6  0AAB               	incf	___awdiv@counter,f
 13050  07B7                     l2441:
 13051  07B7  1BA7               	btfsc	___awdiv@divisor+1,7
 13052  07B8  2FC3               	goto	l2443
 13053  07B9  3001               	movlw	1
 13054  07BA                     u1105:
 13055  07BA  35A6               	lslf	___awdiv@divisor,f
 13056  07BB  0DA7               	rlf	___awdiv@divisor+1,f
 13057  07BC  0B89               	decfsz	9,f
 13058  07BD  2FBA               	goto	u1105
 13059  07BE  3001               	movlw	1
 13060  07BF  00AA               	movwf	??___awdiv
 13061  07C0  082A               	movf	??___awdiv,w
 13062  07C1  07AB               	addwf	___awdiv@counter,f
 13063  07C2  2FB7               	goto	l2441
 13064  07C3                     l2443:
 13065  07C3  3001               	movlw	1
 13066  07C4                     u1125:
 13067  07C4  35AD               	lslf	___awdiv@quotient,f
 13068  07C5  0DAE               	rlf	___awdiv@quotient+1,f
 13069  07C6  0B89               	decfsz	9,f
 13070  07C7  2FC4               	goto	u1125
 13071  07C8  0827               	movf	___awdiv@divisor+1,w
 13072  07C9  0229               	subwf	___awdiv@dividend+1,w
 13073  07CA  1D03               	skipz
 13074  07CB  2FCE               	goto	u1135
 13075  07CC  0826               	movf	___awdiv@divisor,w
 13076  07CD  0228               	subwf	___awdiv@dividend,w
 13077  07CE                     u1135:
 13078  07CE  1C03               	skipc
 13079  07CF  2FD5               	goto	l2449
 13080  07D0  0826               	movf	___awdiv@divisor,w
 13081  07D1  02A8               	subwf	___awdiv@dividend,f
 13082  07D2  0827               	movf	___awdiv@divisor+1,w
 13083  07D3  3BA9               	subwfb	___awdiv@dividend+1,f
 13084  07D4  142D               	bsf	___awdiv@quotient,0
 13085  07D5                     l2449:
 13086  07D5  3001               	movlw	1
 13087  07D6                     u1145:
 13088  07D6  36A7               	lsrf	___awdiv@divisor+1,f
 13089  07D7  0CA6               	rrf	___awdiv@divisor,f
 13090  07D8  0B89               	decfsz	9,f
 13091  07D9  2FD6               	goto	u1145
 13092  07DA  3001               	movlw	1
 13093  07DB  02AB               	subwf	___awdiv@counter,f
 13094  07DC  1D03               	btfss	3,2
 13095  07DD  2FC3               	goto	l2443
 13096  07DE                     l2453:
 13097  07DE  082C               	movf	___awdiv@sign,w
 13098  07DF  1903               	btfsc	3,2
 13099  07E0  2FE6               	goto	l2457
 13100  07E1  09AD               	comf	___awdiv@quotient,f
 13101  07E2  09AE               	comf	___awdiv@quotient+1,f
 13102  07E3  0AAD               	incf	___awdiv@quotient,f
 13103  07E4  1903               	skipnz
 13104  07E5  0AAE               	incf	___awdiv@quotient+1,f
 13105  07E6                     l2457:
 13106  07E6  082E               	movf	___awdiv@quotient+1,w
 13107  07E7  00A7               	movwf	?___awdiv+1
 13108  07E8  082D               	movf	___awdiv@quotient,w
 13109  07E9  00A6               	movwf	?___awdiv
 13110  07EA  0008               	return
 13111  07EB                     __end_of___awdiv:
 13112                           
 13113                           	psect	text44
 13114  0E81                     __ptext44:	
 13115 ;; *************** function __puts *****************
 13116 ;; Defined at:
 13117 ;;		line 5 in file "comm.c"
 13118 ;; Parameters:    Size  Location     Type
 13119 ;;  pt              2    2[BANK0 ] PTR unsigned char 
 13120 ;;		 -> STR_51(6), STR_50(6), STR_49(28), STR_48(6), 
 13121 ;;		 -> STR_47(6), STR_46(7), STR_45(6), STR_44(7), 
 13122 ;;		 -> STR_43(6), STR_42(2), STR_41(12), STR_40(2), 
 13123 ;;		 -> STR_39(12), STR_38(2), STR_37(25), STR_36(2), 
 13124 ;;		 -> STR_35(23), STR_34(2), STR_33(21), STR_32(2), 
 13125 ;;		 -> STR_31(16), STR_30(2), STR_29(15), STR_28(2), 
 13126 ;;		 -> STR_27(18), STR_26(2), STR_25(25), STR_24(2), 
 13127 ;;		 -> STR_23(17), STR_22(2), STR_21(17), NEMS_get_program@aux(4), 
 13128 ;;		 -> STR_20(15), STR_19(7), STR_18(6), STR_17(7), 
 13129 ;;		 -> STR_16(6), STR_15(7), STR_14(6), STR_13(7), 
 13130 ;;		 -> STR_12(6), STR_11(7), STR_10(6), STR_9(7), 
 13131 ;;		 -> STR_8(6), STR_7(7), STR_6(6), STR_5(7), 
 13132 ;;		 -> STR_4(6), STR_3(7), STR_2(6), STR_1(4), 
 13133 ;; Auto vars:     Size  Location     Type
 13134 ;;  index           1    7[BANK0 ] unsigned char 
 13135 ;; Return value:  Size  Location     Type
 13136 ;;                  1    wreg      void 
 13137 ;; Registers used:
 13138 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13139 ;; Tracked objects:
 13140 ;;		On entry : 3F/0
 13141 ;;		On exit  : 3F/0
 13142 ;;		Unchanged: 0/0
 13143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13144 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13145 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13146 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13147 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13148 ;;Total ram usage:        6 bytes
 13149 ;; Hardware stack levels used: 1
 13150 ;; Hardware stack levels required when called: 5
 13151 ;; This function calls:
 13152 ;;		_EUSART1_Write
 13153 ;;		_EUSART1_is_tx_ready
 13154 ;; This function is called by:
 13155 ;;		_NEMS_message_handler
 13156 ;;		_NEMS_set_amplitude
 13157 ;;		_NEMS_set_frequency
 13158 ;;		_NEMS_set_phase_duration
 13159 ;;		_NEMS_set_symmetry_factor
 13160 ;;		_NEMS_set_ON_time
 13161 ;;		_NEMS_set_OFF_time
 13162 ;;		_NEMS_set_contractions
 13163 ;;		_NEMS_set_ramp_up
 13164 ;;		_NEMS_set_ramp_down
 13165 ;;		_NEMS_get_program
 13166 ;;		_NEMS_set_channel1
 13167 ;;		_NEMS_set_channel2
 13168 ;;		_NEMS_save_program
 13169 ;;		_NEMS_load_program
 13170 ;;		_NEMS_start_program
 13171 ;;		_NEMS_stop_program
 13172 ;; This function uses a non-reentrant model
 13173 ;;
 13174                           
 13175                           
 13176                           ;psect for function __puts
 13177  0E81                     __puts:
 13178                           
 13179                           ;comm.c: 5: void _puts(char *pt);comm.c: 6: {;comm.c: 7:     unsigned char index;;comm.c
      +                          : 8:     index = 0;
 13180                           
 13181                           ;incstack = 0
 13182                           ; Regs used in __puts: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13183  0E81  01A7               	clrf	__puts@index
 13184  0E82                     l3353:	
 13185                           ;comm.c: 9:     while(pt[index]) {
 13186                           
 13187                           
 13188                           ;comm.c: 9:     while(pt[index]) {
 13189  0E82  0823               	movf	__puts@pt+1,w
 13190  0E83  00A5               	movwf	??__puts+1
 13191  0E84  0822               	movf	__puts@pt,w
 13192  0E85  00A4               	movwf	??__puts
 13193  0E86  0827               	movf	__puts@index,w
 13194  0E87  0724               	addwf	??__puts,w
 13195  0E88  0084               	movwf	4
 13196  0E89  0825               	movf	??__puts+1,w
 13197  0E8A  1803               	skipnc
 13198  0E8B  0A25               	incf	??__puts+1,w
 13199  0E8C  0085               	movwf	5
 13200  0E8D  0012               	moviw fsr0++
 13201  0E8E  1903               	btfsc	3,2
 13202  0E8F  0008               	return
 13203  0E90                     l3347:
 13204  0E90  318B  23CE  318E   	fcall	_EUSART1_is_tx_ready
 13205  0E93  3A00               	xorlw	0
 13206  0E94  1903               	skipnz
 13207  0E95  2E90               	goto	l3347
 13208                           
 13209                           ;comm.c: 11:         EUSART1_Write(pt[index++]);
 13210  0E96  0823               	movf	__puts@pt+1,w
 13211  0E97  00A5               	movwf	??__puts+1
 13212  0E98  0822               	movf	__puts@pt,w
 13213  0E99  00A4               	movwf	??__puts
 13214  0E9A  0827               	movf	__puts@index,w
 13215  0E9B  0724               	addwf	??__puts,w
 13216  0E9C  0084               	movwf	4
 13217  0E9D  0825               	movf	??__puts+1,w
 13218  0E9E  1803               	skipnc
 13219  0E9F  0A25               	incf	??__puts+1,w
 13220  0EA0  0085               	movwf	5
 13221  0EA1  0800               	movf	0,w	;code access
 13222  0EA2  318E  263A  318E   	fcall	_EUSART1_Write
 13223  0EA5  3001               	movlw	1
 13224  0EA6  0140               	movlb	0	; select bank0
 13225  0EA7  00A4               	movwf	??__puts
 13226  0EA8  0824               	movf	??__puts,w
 13227  0EA9  07A7               	addwf	__puts@index,f
 13228  0EAA  2E82               	goto	l3353
 13229  0EAB                     __end_of__puts:
 13230                           
 13231                           	psect	text45
 13232  0BCE                     __ptext45:	
 13233 ;; *************** function _EUSART1_is_tx_ready *****************
 13234 ;; Defined at:
 13235 ;;		line 132 in file "mcc_generated_files/eusart1.c"
 13236 ;; Parameters:    Size  Location     Type
 13237 ;;		None
 13238 ;; Auto vars:     Size  Location     Type
 13239 ;;		None
 13240 ;; Return value:  Size  Location     Type
 13241 ;;                  1    wreg      _Bool 
 13242 ;; Registers used:
 13243 ;;		wreg, status,2, status,0
 13244 ;; Tracked objects:
 13245 ;;		On entry : 3F/0
 13246 ;;		On exit  : 3F/0
 13247 ;;		Unchanged: 0/0
 13248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13253 ;;Total ram usage:        0 bytes
 13254 ;; Hardware stack levels used: 1
 13255 ;; Hardware stack levels required when called: 4
 13256 ;; This function calls:
 13257 ;;		Nothing
 13258 ;; This function is called by:
 13259 ;;		__puts
 13260 ;; This function uses a non-reentrant model
 13261 ;;
 13262                           
 13263                           
 13264                           ;psect for function _EUSART1_is_tx_ready
 13265  0BCE                     _EUSART1_is_tx_ready:
 13266                           
 13267                           ;mcc_generated_files/eusart1.c: 134:     return (eusart1TxBufferRemaining ? 1 : 0);
 13268                           
 13269                           ;incstack = 0
 13270                           ; Regs used in _EUSART1_is_tx_ready: [wreg+status,2+status,0]
 13271  0BCE  086E               	movf	_eusart1TxBufferRemaining,w	;volatile
 13272  0BCF  1903               	btfsc	3,2
 13273  0BD0  2BD3               	goto	u1710
 13274  0BD1  3001               	movlw	1
 13275  0BD2  0008               	return
 13276  0BD3                     u1710:
 13277  0BD3  3000               	movlw	0
 13278  0BD4  0008               	return
 13279  0BD5                     __end_of_EUSART1_is_tx_ready:
 13280                           
 13281                           	psect	text46
 13282  0E3A                     __ptext46:	
 13283 ;; *************** function _EUSART1_Write *****************
 13284 ;; Defined at:
 13285 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 13286 ;; Parameters:    Size  Location     Type
 13287 ;;  txData          1    wreg     unsigned char 
 13288 ;; Auto vars:     Size  Location     Type
 13289 ;;  txData          1    1[BANK0 ] unsigned char 
 13290 ;; Return value:  Size  Location     Type
 13291 ;;                  1    wreg      void 
 13292 ;; Registers used:
 13293 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13294 ;; Tracked objects:
 13295 ;;		On entry : 3F/0
 13296 ;;		On exit  : 3F/E
 13297 ;;		Unchanged: 0/0
 13298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13300 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13301 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13302 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13303 ;;Total ram usage:        2 bytes
 13304 ;; Hardware stack levels used: 1
 13305 ;; Hardware stack levels required when called: 4
 13306 ;; This function calls:
 13307 ;;		Nothing
 13308 ;; This function is called by:
 13309 ;;		__puts
 13310 ;; This function uses a non-reentrant model
 13311 ;;
 13312                           
 13313                           
 13314                           ;psect for function _EUSART1_Write
 13315  0E3A                     _EUSART1_Write:
 13316                           
 13317                           ;incstack = 0
 13318                           ; Regs used in _EUSART1_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 13319                           ;EUSART1_Write@txData stored from wreg
 13320  0E3A  00A1               	movwf	EUSART1_Write@txData
 13321  0E3B                     l3265:	
 13322                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 13323                           
 13324                           
 13325                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 13326  0E3B  086E               	movf	_eusart1TxBufferRemaining,w	;volatile
 13327  0E3C  1903               	btfsc	3,2
 13328  0E3D  2E3B               	goto	l3265
 13329                           
 13330                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 13331  0E3E  014E               	movlb	14	; select bank14
 13332  0E3F  1A19               	btfsc	25,4	;volatile
 13333  0E40  2E46               	goto	l211
 13334                           
 13335                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 13336  0E41  0140               	movlb	0	; select bank0
 13337  0E42  0821               	movf	EUSART1_Write@txData,w
 13338  0E43  0142               	movlb	2	; select bank2
 13339  0E44  009A               	movwf	26	;volatile
 13340                           
 13341                           ;mcc_generated_files/eusart1.c: 182:     }
 13342  0E45  2E5A               	goto	l3279
 13343  0E46                     l211:	
 13344                           ;mcc_generated_files/eusart1.c: 183:     else
 13345                           
 13346                           
 13347                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 13348  0E46  1219               	bcf	25,4	;volatile
 13349                           
 13350                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 13351  0E47  0140               	movlb	0	; select bank0
 13352  0E48  0821               	movf	EUSART1_Write@txData,w
 13353  0E49  00A0               	movwf	??_EUSART1_Write
 13354  0E4A  0875               	movf	_eusart1TxHead,w
 13355  0E4B  3E4E               	addlw	(low (_eusart1TxBuffer| 0))& (0+255)
 13356  0E4C  0086               	movwf	6
 13357  0E4D  0187               	clrf	7
 13358  0E4E  0820               	movf	??_EUSART1_Write,w
 13359  0E4F  0081               	movwf	1
 13360  0E50  3001               	movlw	1
 13361  0E51  00A0               	movwf	??_EUSART1_Write
 13362  0E52  0820               	movf	??_EUSART1_Write,w
 13363  0E53  07F5               	addwf	_eusart1TxHead,f	;volatile
 13364                           
 13365                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 13366  0E54  3008               	movlw	8
 13367  0E55  0275               	subwf	_eusart1TxHead,w
 13368  0E56  1803               	btfsc	3,0
 13369                           
 13370                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 13371  0E57  01F5               	clrf	_eusart1TxHead	;volatile
 13372                           
 13373                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 13374  0E58  3001               	movlw	1
 13375  0E59  02EE               	subwf	_eusart1TxBufferRemaining,f	;volatile
 13376  0E5A                     l3279:
 13377                           
 13378                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 13379  0E5A  014E               	movlb	14	; select bank14
 13380  0E5B  1619               	bsf	25,4	;volatile
 13381  0E5C  0008               	return
 13382  0E5D                     __end_of_EUSART1_Write:
 13383                           
 13384                           	psect	text47
 13385  0F3F                     __ptext47:	
 13386 ;; *************** function _NEMS_initialize *****************
 13387 ;; Defined at:
 13388 ;;		line 38 in file "NEMS.c"
 13389 ;; Parameters:    Size  Location     Type
 13390 ;;		None
 13391 ;; Auto vars:     Size  Location     Type
 13392 ;;		None
 13393 ;; Return value:  Size  Location     Type
 13394 ;;                  1    wreg      void 
 13395 ;; Registers used:
 13396 ;;		wreg, status,2, status,0, pclath, cstack
 13397 ;; Tracked objects:
 13398 ;;		On entry : 3F/E
 13399 ;;		On exit  : 3F/0
 13400 ;;		Unchanged: 0/0
 13401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13404 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13405 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13406 ;;Total ram usage:        1 bytes
 13407 ;; Hardware stack levels used: 1
 13408 ;; Hardware stack levels required when called: 5
 13409 ;; This function calls:
 13410 ;;		_DAC1_SetOutput
 13411 ;;		_TMR0_SetInterruptHandler
 13412 ;;		_TMR0_StopTimer
 13413 ;; This function is called by:
 13414 ;;		_main
 13415 ;; This function uses a non-reentrant model
 13416 ;;
 13417                           
 13418                           
 13419                           ;psect for function _NEMS_initialize
 13420  0F3F                     _NEMS_initialize:
 13421                           
 13422                           ;NEMS.c: 41:     TMR0_StopTimer();
 13423                           
 13424                           ;incstack = 0
 13425                           ; Regs used in _NEMS_initialize: [wreg+status,2+status,0+pclath+cstack]
 13426  0F3F  318B  239B  318F   	fcall	_TMR0_StopTimer
 13427                           
 13428                           ;NEMS.c: 45:     program.amplitude = 1;
 13429  0F42  3001               	movlw	1
 13430  0F43  0140               	movlb	0	; select bank0
 13431  0F44  00A2               	movwf	??_NEMS_initialize
 13432  0F45  0822               	movf	??_NEMS_initialize,w
 13433  0F46  00DB               	movwf	_program	;volatile
 13434                           
 13435                           ;NEMS.c: 46:     program.frequency = 35;
 13436  0F47  3023               	movlw	35
 13437  0F48  00A2               	movwf	??_NEMS_initialize
 13438  0F49  0822               	movf	??_NEMS_initialize,w
 13439  0F4A  00DC               	movwf	_program+1	;volatile
 13440                           
 13441                           ;NEMS.c: 47:     program.phase_duration = 1;
 13442  0F4B  3001               	movlw	1
 13443  0F4C  00A2               	movwf	??_NEMS_initialize
 13444  0F4D  0822               	movf	??_NEMS_initialize,w
 13445  0F4E  00DD               	movwf	_program+2	;volatile
 13446                           
 13447                           ;NEMS.c: 48:     program.ON_time = 2;
 13448  0F4F  3002               	movlw	2
 13449  0F50  00A2               	movwf	??_NEMS_initialize
 13450  0F51  0822               	movf	??_NEMS_initialize,w
 13451  0F52  00DF               	movwf	_program+4	;volatile
 13452                           
 13453                           ;NEMS.c: 49:     program.OFF_time = 6;
 13454  0F53  3006               	movlw	6
 13455  0F54  00A2               	movwf	??_NEMS_initialize
 13456  0F55  0822               	movf	??_NEMS_initialize,w
 13457  0F56  00E0               	movwf	_program+5	;volatile
 13458                           
 13459                           ;NEMS.c: 50:     program.contractions = 5;
 13460  0F57  3005               	movlw	5
 13461  0F58  00A2               	movwf	??_NEMS_initialize
 13462  0F59  0822               	movf	??_NEMS_initialize,w
 13463  0F5A  00E1               	movwf	_program+6	;volatile
 13464                           
 13465                           ;NEMS.c: 51:     program.ramp_up = 10;
 13466  0F5B  300A               	movlw	10
 13467  0F5C  00A2               	movwf	??_NEMS_initialize
 13468  0F5D  0822               	movf	??_NEMS_initialize,w
 13469  0F5E  00E2               	movwf	_program+7	;volatile
 13470                           
 13471                           ;NEMS.c: 52:     program.ramp_down = 10;
 13472  0F5F  300A               	movlw	10
 13473  0F60  00A2               	movwf	??_NEMS_initialize
 13474  0F61  0822               	movf	??_NEMS_initialize,w
 13475  0F62  00E3               	movwf	_program+8	;volatile
 13476                           
 13477                           ;NEMS.c: 53:     program.symmetry_factor = 1;
 13478  0F63  3001               	movlw	1
 13479  0F64  00A2               	movwf	??_NEMS_initialize
 13480  0F65  0822               	movf	??_NEMS_initialize,w
 13481  0F66  00DE               	movwf	_program+3	;volatile
 13482                           
 13483                           ;NEMS.c: 54:     program.channel1 = 0;
 13484  0F67  01E4               	clrf	_program+9	;volatile
 13485                           
 13486                           ;NEMS.c: 55:     program.channel2 = 1;
 13487  0F68  3001               	movlw	1
 13488  0F69  00A2               	movwf	??_NEMS_initialize
 13489  0F6A  0822               	movf	??_NEMS_initialize,w
 13490  0F6B  00E5               	movwf	_program+10	;volatile
 13491                           
 13492                           ;NEMS.c: 69:     TMR0_SetInterruptHandler(NEMS_timer);
 13493  0F6C  304F               	movlw	low _NEMS_timer
 13494  0F6D  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 13495  0F6E  3000               	movlw	high _NEMS_timer
 13496  0F6F  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 13497  0F70  318B  23B2  318F   	fcall	_TMR0_SetInterruptHandler
 13498                           
 13499                           ;NEMS.c: 71:     DAC1_SetOutput(0);
 13500  0F73  3000               	movlw	0
 13501  0F74  318B  23C1         	fcall	_DAC1_SetOutput
 13502                           
 13503                           ;NEMS.c: 73:     NEMS_nmux1 = 0;
 13504  0F76  0140               	movlb	0	; select bank0
 13505  0F77  01D7               	clrf	_NEMS_nmux1
 13506                           
 13507                           ;NEMS.c: 74:     LATC = NEMS_nmux1;
 13508  0F78  0857               	movf	_NEMS_nmux1,w
 13509  0F79  009A               	movwf	26	;volatile
 13510                           
 13511                           ;NEMS.c: 76:     NEMS_pmux1 = 0;
 13512  0F7A  01D6               	clrf	_NEMS_pmux1
 13513                           
 13514                           ;NEMS.c: 77:     LATB = NEMS_pmux1;
 13515  0F7B  0856               	movf	_NEMS_pmux1,w
 13516  0F7C  0099               	movwf	25	;volatile
 13517  0F7D  0008               	return
 13518  0F7E                     __end_of_NEMS_initialize:
 13519                           
 13520                           	psect	text48
 13521  0B9B                     __ptext48:	
 13522 ;; *************** function _TMR0_StopTimer *****************
 13523 ;; Defined at:
 13524 ;;		line 101 in file "mcc_generated_files/tmr0.c"
 13525 ;; Parameters:    Size  Location     Type
 13526 ;;		None
 13527 ;; Auto vars:     Size  Location     Type
 13528 ;;		None
 13529 ;; Return value:  Size  Location     Type
 13530 ;;                  1    wreg      void 
 13531 ;; Registers used:
 13532 ;;		None
 13533 ;; Tracked objects:
 13534 ;;		On entry : 31/0
 13535 ;;		On exit  : 3F/B
 13536 ;;		Unchanged: 0/0
 13537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13542 ;;Total ram usage:        0 bytes
 13543 ;; Hardware stack levels used: 1
 13544 ;; Hardware stack levels required when called: 4
 13545 ;; This function calls:
 13546 ;;		Nothing
 13547 ;; This function is called by:
 13548 ;;		_NEMS_initialize
 13549 ;;		_NEMS_stop_program
 13550 ;; This function uses a non-reentrant model
 13551 ;;
 13552                           
 13553                           
 13554                           ;psect for function _TMR0_StopTimer
 13555  0B9B                     _TMR0_StopTimer:
 13556                           
 13557                           ;mcc_generated_files/tmr0.c: 104:     T0CON0bits.T0EN = 0;
 13558                           
 13559                           ;incstack = 0
 13560                           ; Regs used in _TMR0_StopTimer: []
 13561  0B9B  014B               	movlb	11	; select bank11
 13562  0B9C  139E               	bcf	30,7	;volatile
 13563  0B9D  0008               	return
 13564  0B9E                     __end_of_TMR0_StopTimer:
 13565                           
 13566                           	psect	text49
 13567  0BB2                     __ptext49:	
 13568 ;; *************** function _TMR0_SetInterruptHandler *****************
 13569 ;; Defined at:
 13570 ;;		line 151 in file "mcc_generated_files/tmr0.c"
 13571 ;; Parameters:    Size  Location     Type
 13572 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 13573 ;;		 -> NEMS_timer(1), TMR0_DefaultInterruptHandler(1), 
 13574 ;; Auto vars:     Size  Location     Type
 13575 ;;		None
 13576 ;; Return value:  Size  Location     Type
 13577 ;;                  1    wreg      void 
 13578 ;; Registers used:
 13579 ;;		wreg
 13580 ;; Tracked objects:
 13581 ;;		On entry : 3F/0
 13582 ;;		On exit  : 3F/0
 13583 ;;		Unchanged: 0/0
 13584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13585 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13588 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13589 ;;Total ram usage:        2 bytes
 13590 ;; Hardware stack levels used: 1
 13591 ;; Hardware stack levels required when called: 4
 13592 ;; This function calls:
 13593 ;;		Nothing
 13594 ;; This function is called by:
 13595 ;;		_TMR0_Initialize
 13596 ;;		_NEMS_initialize
 13597 ;; This function uses a non-reentrant model
 13598 ;;
 13599                           
 13600                           
 13601                           ;psect for function _TMR0_SetInterruptHandler
 13602  0BB2                     _TMR0_SetInterruptHandler:
 13603                           
 13604                           ;mcc_generated_files/tmr0.c: 152:     TMR0_InterruptHandler = InterruptHandler;
 13605                           
 13606                           ;incstack = 0
 13607                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 13608  0BB2  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 13609  0BB3  00E7               	movwf	_TMR0_InterruptHandler+1
 13610  0BB4  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 13611  0BB5  00E6               	movwf	_TMR0_InterruptHandler
 13612  0BB6  0008               	return
 13613  0BB7                     __end_of_TMR0_SetInterruptHandler:
 13614                           
 13615                           	psect	text50
 13616  0BC1                     __ptext50:	
 13617 ;; *************** function _DAC1_SetOutput *****************
 13618 ;; Defined at:
 13619 ;;		line 66 in file "mcc_generated_files/dac1.c"
 13620 ;; Parameters:    Size  Location     Type
 13621 ;;  inputData       1    wreg     unsigned char 
 13622 ;; Auto vars:     Size  Location     Type
 13623 ;;  inputData       1    0[BANK0 ] unsigned char 
 13624 ;; Return value:  Size  Location     Type
 13625 ;;                  1    wreg      void 
 13626 ;; Registers used:
 13627 ;;		wreg
 13628 ;; Tracked objects:
 13629 ;;		On entry : 34/B
 13630 ;;		On exit  : 3F/12
 13631 ;;		Unchanged: 0/0
 13632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13634 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13636 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13637 ;;Total ram usage:        1 bytes
 13638 ;; Hardware stack levels used: 1
 13639 ;; Hardware stack levels required when called: 4
 13640 ;; This function calls:
 13641 ;;		Nothing
 13642 ;; This function is called by:
 13643 ;;		_NEMS_initialize
 13644 ;;		_NEMS_stop_program
 13645 ;; This function uses a non-reentrant model
 13646 ;;
 13647                           
 13648                           
 13649                           ;psect for function _DAC1_SetOutput
 13650  0BC1                     _DAC1_SetOutput:
 13651                           
 13652                           ;incstack = 0
 13653                           ; Regs used in _DAC1_SetOutput: [wreg]
 13654                           ;DAC1_SetOutput@inputData stored from wreg
 13655  0BC1  0140               	movlb	0	; select bank0
 13656  0BC2  00A0               	movwf	DAC1_SetOutput@inputData
 13657                           
 13658                           ;mcc_generated_files/dac1.c: 66: void DAC1_SetOutput(uint8_t inputData);mcc_generated_fi
      +                          les/dac1.c: 67: {;mcc_generated_files/dac1.c: 68:     DAC1CON1 = inputData;
 13659  0BC3  0820               	movf	DAC1_SetOutput@inputData,w
 13660  0BC4  0152               	movlb	18	; select bank18
 13661  0BC5  008F               	movwf	15	;volatile
 13662  0BC6  0008               	return
 13663  0BC7                     __end_of_DAC1_SetOutput:
 13664                           
 13665                           	psect	text51
 13666  0BC7                     __ptext51:	
 13667 ;; *************** function _EUSART1_is_rx_ready *****************
 13668 ;; Defined at:
 13669 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 13670 ;; Parameters:    Size  Location     Type
 13671 ;;		None
 13672 ;; Auto vars:     Size  Location     Type
 13673 ;;		None
 13674 ;; Return value:  Size  Location     Type
 13675 ;;                  1    wreg      _Bool 
 13676 ;; Registers used:
 13677 ;;		wreg, status,2, status,0
 13678 ;; Tracked objects:
 13679 ;;		On entry : 0/0
 13680 ;;		On exit  : 0/0
 13681 ;;		Unchanged: 0/0
 13682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13687 ;;Total ram usage:        0 bytes
 13688 ;; Hardware stack levels used: 1
 13689 ;; Hardware stack levels required when called: 4
 13690 ;; This function calls:
 13691 ;;		Nothing
 13692 ;; This function is called by:
 13693 ;;		_main
 13694 ;; This function uses a non-reentrant model
 13695 ;;
 13696                           
 13697                           
 13698                           ;psect for function _EUSART1_is_rx_ready
 13699  0BC7                     _EUSART1_is_rx_ready:
 13700                           
 13701                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 13702                           
 13703                           ;incstack = 0
 13704                           ; Regs used in _EUSART1_is_rx_ready: [wreg+status,2+status,0]
 13705  0BC7  0871               	movf	_eusart1RxCount,w	;volatile
 13706  0BC8  1903               	btfsc	3,2
 13707  0BC9  2BCC               	goto	u2070
 13708  0BCA  3001               	movlw	1
 13709  0BCB  0008               	return
 13710  0BCC                     u2070:
 13711  0BCC  3000               	movlw	0
 13712  0BCD  0008               	return
 13713  0BCE                     __end_of_EUSART1_is_rx_ready:
 13714                           
 13715                           	psect	intentry
 13716  0004                     __pintentry:	
 13717 ;; *************** function _INTERRUPT_InterruptManager *****************
 13718 ;; Defined at:
 13719 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 13720 ;; Parameters:    Size  Location     Type
 13721 ;;		None
 13722 ;; Auto vars:     Size  Location     Type
 13723 ;;		None
 13724 ;; Return value:  Size  Location     Type
 13725 ;;                  1    wreg      void 
 13726 ;; Registers used:
 13727 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13728 ;; Tracked objects:
 13729 ;;		On entry : 0/0
 13730 ;;		On exit  : 0/0
 13731 ;;		Unchanged: 0/0
 13732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13737 ;;Total ram usage:        0 bytes
 13738 ;; Hardware stack levels used: 1
 13739 ;; Hardware stack levels required when called: 3
 13740 ;; This function calls:
 13741 ;;		Absolute function
 13742 ;;		_EUSART1_Receive_ISR
 13743 ;;		_EUSART1_Transmit_ISR
 13744 ;;		_TMR0_ISR
 13745 ;; This function is called by:
 13746 ;;		Interrupt level 1
 13747 ;; This function uses a non-reentrant model
 13748 ;;
 13749                           
 13750  0004                     _INTERRUPT_InterruptManager:
 13751                           
 13752                           ;incstack = 0
 13753  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 13754                           
 13755                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13756  0005  3180               	pagesel	$
 13757                           
 13758                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 13759  0006  014E               	movlb	14	; select bank14
 13760  0007  1A96               	btfsc	22,5	;volatile
 13761  0008  1E8C               	btfss	12,5	;volatile
 13762  0009  280E               	goto	i1l349
 13763                           
 13764                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 13765  000A  318C  2440  3180   	fcall	_TMR0_ISR
 13766                           
 13767                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 13768  000D  2823               	goto	i1l357
 13769  000E                     i1l349:	
 13770                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 13771                           
 13772  000E  1F0B               	btfss	11,6	;volatile
 13773  000F  2823               	goto	i1l357
 13774                           
 13775                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.TX1IE == 1 && PIR3bits.TX1IF == 1)
 13776  0010  1A19               	btfsc	25,4	;volatile
 13777  0011  1E0F               	btfss	15,4	;volatile
 13778  0012  281A               	goto	i1l352
 13779                           
 13780                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART1_TxDefaultInterruptHandler();
 13781  0013  0140               	movlb	0	; select bank0
 13782  0014  086D               	movf	_EUSART1_TxDefaultInterruptHandler+1,w
 13783  0015  008A               	movwf	10
 13784  0016  086C               	movf	_EUSART1_TxDefaultInterruptHandler,w
 13785  0017  000A               	callw
 13786  0018  3180               	pagesel	$
 13787                           
 13788                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 13789  0019  2823               	goto	i1l357
 13790  001A                     i1l352:	
 13791                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 13792                           
 13793  001A  1A99               	btfsc	25,5	;volatile
 13794  001B  1E8F               	btfss	15,5	;volatile
 13795  001C  2823               	goto	i1l357
 13796                           
 13797                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             EUSART1_RxDefaultInterruptHandler();
 13798  001D  0140               	movlb	0	; select bank0
 13799  001E  086B               	movf	_EUSART1_RxDefaultInterruptHandler+1,w
 13800  001F  008A               	movwf	10
 13801  0020  086A               	movf	_EUSART1_RxDefaultInterruptHandler,w
 13802  0021  000A               	callw
 13803  0022  3180               	pagesel	$
 13804  0023                     i1l357:	
 13805                           ;mcc_generated_files/interrupt_manager.c: 75:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 77:     }
 13806                           
 13807                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 13808                           
 13809  0023  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 13810  0024  0009               	retfie
 13811  0025                     __end_of_INTERRUPT_InterruptManager:
 13812                           
 13813                           	psect	text53
 13814  0C40                     __ptext53:	
 13815 ;; *************** function _TMR0_ISR *****************
 13816 ;; Defined at:
 13817 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 13818 ;; Parameters:    Size  Location     Type
 13819 ;;		None
 13820 ;; Auto vars:     Size  Location     Type
 13821 ;;		None
 13822 ;; Return value:  Size  Location     Type
 13823 ;;                  1    wreg      void 
 13824 ;; Registers used:
 13825 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13826 ;; Tracked objects:
 13827 ;;		On entry : 3F/E
 13828 ;;		On exit  : 0/0
 13829 ;;		Unchanged: 0/0
 13830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13835 ;;Total ram usage:        0 bytes
 13836 ;; Hardware stack levels used: 1
 13837 ;; Hardware stack levels required when called: 2
 13838 ;; This function calls:
 13839 ;;		Absolute function
 13840 ;;		_NEMS_timer
 13841 ;;		_TMR0_DefaultInterruptHandler
 13842 ;; This function is called by:
 13843 ;;		_INTERRUPT_InterruptManager
 13844 ;; This function uses a non-reentrant model
 13845 ;;
 13846                           
 13847                           
 13848                           ;psect for function _TMR0_ISR
 13849  0C40                     _TMR0_ISR:
 13850                           
 13851                           ;mcc_generated_files/tmr0.c: 137:     PIR0bits.TMR0IF = 0;
 13852                           
 13853                           ;incstack = 0
 13854                           ; Regs used in _TMR0_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13855  0C40  128C               	bcf	12,5	;volatile
 13856                           
 13857                           ;mcc_generated_files/tmr0.c: 139:     TMR0H = timer0ReloadVal16bit >> 8;
 13858  0C41  0140               	movlb	0	; select bank0
 13859  0C42  0869               	movf	_timer0ReloadVal16bit+1,w	;volatile
 13860  0C43  014B               	movlb	11	; select bank11
 13861  0C44  009D               	movwf	29	;volatile
 13862                           
 13863                           ;mcc_generated_files/tmr0.c: 140:     TMR0L = (uint8_t) timer0ReloadVal16bit;
 13864  0C45  0140               	movlb	0	; select bank0
 13865  0C46  0868               	movf	_timer0ReloadVal16bit,w	;volatile
 13866  0C47  014B               	movlb	11	; select bank11
 13867  0C48  009C               	movwf	28	;volatile
 13868                           
 13869                           ;mcc_generated_files/tmr0.c: 142:     if(TMR0_InterruptHandler)
 13870  0C49  0140               	movlb	0	; select bank0
 13871  0C4A  0866               	movf	_TMR0_InterruptHandler,w
 13872  0C4B  0467               	iorwf	_TMR0_InterruptHandler+1,w
 13873  0C4C  1903               	btfsc	3,2
 13874  0C4D  0008               	return
 13875                           
 13876                           ;mcc_generated_files/tmr0.c: 143:     {;mcc_generated_files/tmr0.c: 144:         TMR0_In
      +                          terruptHandler();
 13877  0C4E  0867               	movf	_TMR0_InterruptHandler+1,w
 13878  0C4F  008A               	movwf	10
 13879  0C50  0866               	movf	_TMR0_InterruptHandler,w
 13880  0C51  000A               	callw
 13881  0C52  318C               	pagesel	$
 13882  0C53  0008               	return
 13883  0C54                     __end_of_TMR0_ISR:
 13884                           
 13885                           	psect	text54
 13886  004F                     __ptext54:	
 13887 ;; *************** function _NEMS_timer *****************
 13888 ;; Defined at:
 13889 ;;		line 460 in file "NEMS.c"
 13890 ;; Parameters:    Size  Location     Type
 13891 ;;		None
 13892 ;; Auto vars:     Size  Location     Type
 13893 ;;		None
 13894 ;; Return value:  Size  Location     Type
 13895 ;;                  1    wreg      void 
 13896 ;; Registers used:
 13897 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13898 ;; Tracked objects:
 13899 ;;		On entry : 3F/0
 13900 ;;		On exit  : 3F/0
 13901 ;;		Unchanged: 0/0
 13902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13905 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13906 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13907 ;;Total ram usage:        5 bytes
 13908 ;; Hardware stack levels used: 1
 13909 ;; Hardware stack levels required when called: 1
 13910 ;; This function calls:
 13911 ;;		i1_DAC1_SetOutput
 13912 ;; This function is called by:
 13913 ;;		_NEMS_initialize
 13914 ;;		_TMR0_ISR
 13915 ;; This function uses a non-reentrant model
 13916 ;;
 13917                           
 13918                           
 13919                           ;psect for function _NEMS_timer
 13920  004F                     _NEMS_timer:
 13921                           
 13922                           ;NEMS.c: 463:     DAC1_SetOutput(waveform.current_amplitude);
 13923                           
 13924                           ;incstack = 0
 13925                           ; Regs used in _NEMS_timer: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13926  004F  300A               	movlw	10
 13927  0050  0086               	movwf	6
 13928  0051  3027               	movlw	39
 13929  0052  0087               	movwf	7
 13930  0053  3151               	addfsr 1,17
 13931  0054  0801               	movf	1,w
 13932  0055  318B  23AD  3180   	fcall	i1_DAC1_SetOutput
 13933                           
 13934                           ;NEMS.c: 467:     LATC = NEMS_nmux1;
 13935  0058  0140               	movlb	0	; select bank0
 13936  0059  0857               	movf	_NEMS_nmux1,w
 13937  005A  009A               	movwf	26	;volatile
 13938                           
 13939                           ;NEMS.c: 468:     LATB = NEMS_pmux1;
 13940  005B  0856               	movf	_NEMS_pmux1,w
 13941  005C  0099               	movwf	25	;volatile
 13942                           
 13943                           ;NEMS.c: 472:     waveform.clock_index++;
 13944  005D  300A               	movlw	10
 13945  005E  0086               	movwf	6
 13946  005F  3027               	movlw	39
 13947  0060  0087               	movwf	7
 13948  0061  3142               	addfsr 1,2
 13949  0062  3001               	movlw	1
 13950  0063  0781               	addwf	1,f
 13951  0064  3141               	addfsr 1,1
 13952  0065  1803               	skipnc
 13953  0066  0A81               	incf	1,f
 13954                           
 13955                           ;NEMS.c: 476:     if (waveform.clock_index >= waveform.num_clocks_per_pulse) {
 13956  0067  300A               	movlw	10
 13957  0068  0086               	movwf	6
 13958  0069  3027               	movlw	39
 13959  006A  0087               	movwf	7
 13960  006B  3F40               	moviw [0]fsr1
 13961  006C  00F7               	movwf	??_NEMS_timer
 13962  006D  3F41               	moviw [1]fsr1
 13963  006E  00F8               	movwf	??_NEMS_timer+1
 13964  006F  300A               	movlw	10
 13965  0070  0086               	movwf	6
 13966  0071  3027               	movlw	39
 13967  0072  0087               	movwf	7
 13968  0073  3142               	addfsr 1,2
 13969  0074  3F40               	moviw [0]fsr1
 13970  0075  00F9               	movwf	??_NEMS_timer+2
 13971  0076  3F41               	moviw [1]fsr1
 13972  0077  00FA               	movwf	??_NEMS_timer+3
 13973  0078  0878               	movf	??_NEMS_timer+1,w
 13974  0079  027A               	subwf	??_NEMS_timer+3,w
 13975  007A  1D03               	skipz
 13976  007B  287E               	goto	u143_25
 13977  007C  0877               	movf	??_NEMS_timer,w
 13978  007D  0279               	subwf	??_NEMS_timer+2,w
 13979  007E                     u143_25:
 13980  007E  1C03               	skipc
 13981  007F  2965               	goto	i1l2981
 13982                           
 13983                           ;NEMS.c: 477:         waveform.clock_index = 0;
 13984  0080  300A               	movlw	10
 13985  0081  0086               	movwf	6
 13986  0082  3027               	movlw	39
 13987  0083  0087               	movwf	7
 13988  0084  3142               	addfsr 1,2
 13989  0085  3000               	movlw	0
 13990  0086  3FC0               	movwi [0]fsr1
 13991  0087  3FC1               	movwi [1]fsr1
 13992                           
 13993                           ;NEMS.c: 479:         waveform.pulse_index++;
 13994  0088  300A               	movlw	10
 13995  0089  0086               	movwf	6
 13996  008A  3027               	movlw	39
 13997  008B  0087               	movwf	7
 13998  008C  3144               	addfsr 1,4
 13999  008D  3001               	movlw	1
 14000  008E  0781               	addwf	1,f
 14001  008F  3141               	addfsr 1,1
 14002  0090  1803               	skipnc
 14003  0091  0A81               	incf	1,f
 14004                           
 14005                           ;NEMS.c: 481:         NEMS_pulse_states = NEMS_PLUS_UP;
 14006  0092  3002               	movlw	2
 14007  0093  00F7               	movwf	??_NEMS_timer
 14008  0094  0877               	movf	??_NEMS_timer,w
 14009  0095  00F0               	movwf	_NEMS_pulse_states	;volatile
 14010                           
 14011                           ;NEMS.c: 482:         NEMS_nmux1 = waveform.channel1;
 14012  0096  30EE               	movlw	238
 14013  0097  0086               	movwf	6
 14014  0098  3027               	movlw	39
 14015  0099  0087               	movwf	7
 14016  009A  0801               	movf	1,w
 14017  009B  00F7               	movwf	??_NEMS_timer
 14018  009C  0877               	movf	??_NEMS_timer,w
 14019  009D  00D7               	movwf	_NEMS_nmux1
 14020                           
 14021                           ;NEMS.c: 483:         NEMS_pmux1 = waveform.channel2;
 14022  009E  30EF               	movlw	239
 14023  009F  0086               	movwf	6
 14024  00A0  3027               	movlw	39
 14025  00A1  0087               	movwf	7
 14026  00A2  0801               	movf	1,w
 14027  00A3  00F7               	movwf	??_NEMS_timer
 14028  00A4  0877               	movf	??_NEMS_timer,w
 14029  00A5  00D6               	movwf	_NEMS_pmux1
 14030                           
 14031                           ;NEMS.c: 486:         if (waveform.pulse_index < waveform.ramp_up_time) {
 14032  00A6  3082               	movlw	130
 14033  00A7  0086               	movwf	6
 14034  00A8  3027               	movlw	39
 14035  00A9  0087               	movwf	7
 14036  00AA  3F40               	moviw [0]fsr1
 14037  00AB  00F7               	movwf	??_NEMS_timer
 14038  00AC  3F41               	moviw [1]fsr1
 14039  00AD  00F8               	movwf	??_NEMS_timer+1
 14040  00AE  300A               	movlw	10
 14041  00AF  0086               	movwf	6
 14042  00B0  3027               	movlw	39
 14043  00B1  0087               	movwf	7
 14044  00B2  3144               	addfsr 1,4
 14045  00B3  3F40               	moviw [0]fsr1
 14046  00B4  00F9               	movwf	??_NEMS_timer+2
 14047  00B5  3F41               	moviw [1]fsr1
 14048  00B6  00FA               	movwf	??_NEMS_timer+3
 14049  00B7  0878               	movf	??_NEMS_timer+1,w
 14050  00B8  027A               	subwf	??_NEMS_timer+3,w
 14051  00B9  1D03               	skipz
 14052  00BA  28BD               	goto	u144_25
 14053  00BB  0877               	movf	??_NEMS_timer,w
 14054  00BC  0279               	subwf	??_NEMS_timer+2,w
 14055  00BD                     u144_25:
 14056  00BD  1803               	skipnc
 14057  00BE  28D6               	goto	i1l2961
 14058                           
 14059                           ;NEMS.c: 487:             waveform.pulse_amplitude = waveform.ramp_up_amplitude[waveform
      +                          .pulse_index];
 14060  00BF  300A               	movlw	10
 14061  00C0  0086               	movwf	6
 14062  00C1  3027               	movlw	39
 14063  00C2  0087               	movwf	7
 14064  00C3  3144               	addfsr 1,4
 14065  00C4  301C               	movlw	28
 14066  00C5  00F7               	movwf	??_NEMS_timer
 14067  00C6  3027               	movlw	39
 14068  00C7  00F8               	movwf	??_NEMS_timer+1
 14069  00C8  3F40               	moviw [0]fsr1
 14070  00C9  0777               	addwf	??_NEMS_timer,w
 14071  00CA  0084               	movwf	4
 14072  00CB  3F41               	moviw [1]fsr1
 14073  00CC  3D78               	addwfc	??_NEMS_timer+1,w
 14074  00CD  0085               	movwf	5
 14075  00CE  0800               	movf	0,w
 14076  00CF  00F9               	movwf	??_NEMS_timer+2
 14077  00D0  3019               	movlw	25
 14078  00D1  0086               	movwf	6
 14079  00D2  3027               	movlw	39
 14080  00D3  0087               	movwf	7
 14081  00D4  0879               	movf	??_NEMS_timer+2,w
 14082  00D5  2937               	goto	L4
 14083  00D6                     i1l2961:	
 14084                           ;NEMS.c: 489:         } else if (waveform.pulse_index < waveform.ON_time) {
 14085                           
 14086  00D6  300A               	movlw	10
 14087  00D7  0086               	movwf	6
 14088  00D8  3027               	movlw	39
 14089  00D9  0087               	movwf	7
 14090  00DA  314A               	addfsr 1,10
 14091  00DB  3F40               	moviw [0]fsr1
 14092  00DC  00F7               	movwf	??_NEMS_timer
 14093  00DD  3F41               	moviw [1]fsr1
 14094  00DE  00F8               	movwf	??_NEMS_timer+1
 14095  00DF  300A               	movlw	10
 14096  00E0  0086               	movwf	6
 14097  00E1  3027               	movlw	39
 14098  00E2  0087               	movwf	7
 14099  00E3  3144               	addfsr 1,4
 14100  00E4  3F40               	moviw [0]fsr1
 14101  00E5  00F9               	movwf	??_NEMS_timer+2
 14102  00E6  3F41               	moviw [1]fsr1
 14103  00E7  00FA               	movwf	??_NEMS_timer+3
 14104  00E8  0878               	movf	??_NEMS_timer+1,w
 14105  00E9  027A               	subwf	??_NEMS_timer+3,w
 14106  00EA  1D03               	skipz
 14107  00EB  28EE               	goto	u145_25
 14108  00EC  0877               	movf	??_NEMS_timer,w
 14109  00ED  0279               	subwf	??_NEMS_timer+2,w
 14110  00EE                     u145_25:
 14111  00EE  1803               	skipnc
 14112  00EF  28FD               	goto	i1l2965
 14113                           
 14114                           ;NEMS.c: 490:             waveform.pulse_amplitude = waveform.program_amplitude;
 14115  00F0  300A               	movlw	10
 14116  00F1  0086               	movwf	6
 14117  00F2  3027               	movlw	39
 14118  00F3  0087               	movwf	7
 14119  00F4  314E               	addfsr 1,14
 14120  00F5  0801               	movf	1,w
 14121  00F6  00F7               	movwf	??_NEMS_timer
 14122  00F7  3019               	movlw	25
 14123  00F8  0086               	movwf	6
 14124  00F9  3027               	movlw	39
 14125  00FA  0087               	movwf	7
 14126  00FB  0877               	movf	??_NEMS_timer,w
 14127  00FC  2937               	goto	L4
 14128  00FD                     i1l2965:	
 14129                           ;NEMS.c: 492:         } else if (waveform.pulse_index < waveform.ramp_down_time) {
 14130                           
 14131  00FD  30EA               	movlw	234
 14132  00FE  0086               	movwf	6
 14133  00FF  3027               	movlw	39
 14134  0100  0087               	movwf	7
 14135  0101  3F40               	moviw [0]fsr1
 14136  0102  00F7               	movwf	??_NEMS_timer
 14137  0103  3F41               	moviw [1]fsr1
 14138  0104  00F8               	movwf	??_NEMS_timer+1
 14139  0105  300A               	movlw	10
 14140  0106  0086               	movwf	6
 14141  0107  3027               	movlw	39
 14142  0108  0087               	movwf	7
 14143  0109  3144               	addfsr 1,4
 14144  010A  3F40               	moviw [0]fsr1
 14145  010B  00F9               	movwf	??_NEMS_timer+2
 14146  010C  3F41               	moviw [1]fsr1
 14147  010D  00FA               	movwf	??_NEMS_timer+3
 14148  010E  0878               	movf	??_NEMS_timer+1,w
 14149  010F  027A               	subwf	??_NEMS_timer+3,w
 14150  0110  1D03               	skipz
 14151  0111  2914               	goto	u146_25
 14152  0112  0877               	movf	??_NEMS_timer,w
 14153  0113  0279               	subwf	??_NEMS_timer+2,w
 14154  0114                     u146_25:
 14155  0114  1803               	skipnc
 14156  0115  2939               	goto	i1l2969
 14157                           
 14158                           ;NEMS.c: 493:             waveform.pulse_amplitude = waveform.ramp_down_amplitude[wavefo
      +                          rm.pulse_index - waveform.ON_time];
 14159  0116  300A               	movlw	10
 14160  0117  0086               	movwf	6
 14161  0118  3027               	movlw	39
 14162  0119  0087               	movwf	7
 14163  011A  3144               	addfsr 1,4
 14164  011B  300A               	movlw	10
 14165  011C  0084               	movwf	4
 14166  011D  3027               	movlw	39
 14167  011E  0085               	movwf	5
 14168  011F  310A               	addfsr 0,10
 14169  0120  3084               	movlw	132
 14170  0121  00F7               	movwf	??_NEMS_timer
 14171  0122  3027               	movlw	39
 14172  0123  00F8               	movwf	??_NEMS_timer+1
 14173  0124  3F00               	moviw [0]fsr0
 14174  0125  0277               	subwf	??_NEMS_timer,w
 14175  0126  00F9               	movwf	??_NEMS_timer+2
 14176  0127  3F01               	moviw [1]fsr0
 14177  0128  3B78               	subwfb	??_NEMS_timer+1,w
 14178  0129  00FA               	movwf	??_NEMS_timer+3
 14179  012A  3F40               	moviw [0]fsr1
 14180  012B  0779               	addwf	??_NEMS_timer+2,w
 14181  012C  0084               	movwf	4
 14182  012D  3F41               	moviw [1]fsr1
 14183  012E  3D7A               	addwfc	??_NEMS_timer+3,w
 14184  012F  0085               	movwf	5
 14185  0130  0800               	movf	0,w
 14186  0131  00FB               	movwf	??_NEMS_timer+4
 14187  0132  3019               	movlw	25
 14188  0133  0086               	movwf	6
 14189  0134  3027               	movlw	39
 14190  0135  0087               	movwf	7
 14191  0136  087B               	movf	??_NEMS_timer+4,w
 14192  0137                     L4:
 14193  0137  0081               	movwf	1
 14194                           
 14195                           ;NEMS.c: 495:         } else if (waveform.pulse_index < waveform.OFF_time) {
 14196  0138  2965               	goto	i1l2981
 14197  0139                     i1l2969:
 14198  0139  300A               	movlw	10
 14199  013A  0086               	movwf	6
 14200  013B  3027               	movlw	39
 14201  013C  0087               	movwf	7
 14202  013D  314C               	addfsr 1,12
 14203  013E  3F40               	moviw [0]fsr1
 14204  013F  00F7               	movwf	??_NEMS_timer
 14205  0140  3F41               	moviw [1]fsr1
 14206  0141  00F8               	movwf	??_NEMS_timer+1
 14207  0142  300A               	movlw	10
 14208  0143  0086               	movwf	6
 14209  0144  3027               	movlw	39
 14210  0145  0087               	movwf	7
 14211  0146  3144               	addfsr 1,4
 14212  0147  3F40               	moviw [0]fsr1
 14213  0148  00F9               	movwf	??_NEMS_timer+2
 14214  0149  3F41               	moviw [1]fsr1
 14215  014A  00FA               	movwf	??_NEMS_timer+3
 14216  014B  0878               	movf	??_NEMS_timer+1,w
 14217  014C  027A               	subwf	??_NEMS_timer+3,w
 14218  014D  1D03               	skipz
 14219  014E  2951               	goto	u147_25
 14220  014F  0877               	movf	??_NEMS_timer,w
 14221  0150  0279               	subwf	??_NEMS_timer+2,w
 14222  0151                     u147_25:
 14223  0151  1803               	skipnc
 14224  0152  295D               	goto	i1l2979
 14225                           
 14226                           ;NEMS.c: 496:             waveform.pulse_amplitude = 0;
 14227  0153  300A               	movlw	10
 14228  0154  0086               	movwf	6
 14229  0155  3027               	movlw	39
 14230  0156  0087               	movwf	7
 14231  0157  314F               	addfsr 1,15
 14232  0158  0181               	clrf	1
 14233                           
 14234                           ;NEMS.c: 497:             NEMS_pulse_states = NEMS_PULSE_OFF;
 14235  0159  01F0               	clrf	_NEMS_pulse_states	;volatile
 14236                           
 14237                           ;NEMS.c: 498:             NEMS_nmux1 = 0;
 14238  015A  01D7               	clrf	_NEMS_nmux1
 14239                           
 14240                           ;NEMS.c: 499:             NEMS_pmux1 = 0;
 14241  015B  01D6               	clrf	_NEMS_pmux1
 14242                           
 14243                           ;NEMS.c: 502:         } else {
 14244  015C  2965               	goto	i1l2981
 14245  015D                     i1l2979:
 14246                           
 14247                           ;NEMS.c: 503:             waveform.pulse_index = 0;
 14248  015D  300A               	movlw	10
 14249  015E  0086               	movwf	6
 14250  015F  3027               	movlw	39
 14251  0160  0087               	movwf	7
 14252  0161  3144               	addfsr 1,4
 14253  0162  3000               	movlw	0
 14254  0163  3FC0               	movwi [0]fsr1
 14255  0164  3FC1               	movwi [1]fsr1
 14256  0165                     i1l2981:
 14257                           
 14258                           ;NEMS.c: 509:     if (NEMS_pulse_states != NEMS_PULSE_OFF) {
 14259  0165  0870               	movf	_NEMS_pulse_states,w
 14260  0166  1903               	btfsc	3,2
 14261  0167  0008               	return
 14262                           
 14263                           ;NEMS.c: 510:         if (waveform.clock_index < program.phase_duration) {
 14264  0168  085D               	movf	_program+2,w	;volatile
 14265  0169  00F7               	movwf	??_NEMS_timer
 14266  016A  01F8               	clrf	??_NEMS_timer+1
 14267  016B  300A               	movlw	10
 14268  016C  0086               	movwf	6
 14269  016D  3027               	movlw	39
 14270  016E  0087               	movwf	7
 14271  016F  3142               	addfsr 1,2
 14272  0170  3F40               	moviw [0]fsr1
 14273  0171  00F9               	movwf	??_NEMS_timer+2
 14274  0172  3F41               	moviw [1]fsr1
 14275  0173  00FA               	movwf	??_NEMS_timer+3
 14276  0174  0878               	movf	??_NEMS_timer+1,w
 14277  0175  027A               	subwf	??_NEMS_timer+3,w
 14278  0176  1D03               	skipz
 14279  0177  297A               	goto	u149_25
 14280  0178  0877               	movf	??_NEMS_timer,w
 14281  0179  0279               	subwf	??_NEMS_timer+2,w
 14282  017A                     u149_25:
 14283  017A  1803               	skipnc
 14284  017B  299E               	goto	i1l2993
 14285                           
 14286                           ;NEMS.c: 511:             NEMS_pulse_states = NEMS_PLUS_UP;
 14287  017C  3002               	movlw	2
 14288  017D  00F7               	movwf	??_NEMS_timer
 14289  017E  0877               	movf	??_NEMS_timer,w
 14290  017F  00F0               	movwf	_NEMS_pulse_states	;volatile
 14291                           
 14292                           ;NEMS.c: 512:             NEMS_nmux1 = waveform.channel1;
 14293  0180  30EE               	movlw	238
 14294  0181  0086               	movwf	6
 14295  0182  3027               	movlw	39
 14296  0183  0087               	movwf	7
 14297  0184  0801               	movf	1,w
 14298  0185  00F7               	movwf	??_NEMS_timer
 14299  0186  0877               	movf	??_NEMS_timer,w
 14300  0187  00D7               	movwf	_NEMS_nmux1
 14301                           
 14302                           ;NEMS.c: 513:             NEMS_pmux1 = waveform.channel2;
 14303  0188  30EF               	movlw	239
 14304  0189  0086               	movwf	6
 14305  018A  3027               	movlw	39
 14306  018B  0087               	movwf	7
 14307  018C  0801               	movf	1,w
 14308  018D  00F7               	movwf	??_NEMS_timer
 14309  018E  0877               	movf	??_NEMS_timer,w
 14310  018F  00D6               	movwf	_NEMS_pmux1
 14311                           
 14312                           ;NEMS.c: 515:             waveform.current_amplitude = waveform.pulse_amplitude;
 14313  0190  300A               	movlw	10
 14314  0191  0086               	movwf	6
 14315  0192  3027               	movlw	39
 14316  0193  0087               	movwf	7
 14317  0194  314F               	addfsr 1,15
 14318  0195  0801               	movf	1,w
 14319  0196  00F7               	movwf	??_NEMS_timer
 14320  0197  301B               	movlw	27
 14321  0198  0086               	movwf	6
 14322  0199  3027               	movlw	39
 14323  019A  0087               	movwf	7
 14324  019B  0877               	movf	??_NEMS_timer,w
 14325  019C  0081               	movwf	1
 14326                           
 14327                           ;NEMS.c: 517:         } else if (waveform.clock_index < waveform.silence_phase_duration)
      +                           {
 14328  019D  0008               	return
 14329  019E                     i1l2993:
 14330  019E  300A               	movlw	10
 14331  019F  0086               	movwf	6
 14332  01A0  3027               	movlw	39
 14333  01A1  0087               	movwf	7
 14334  01A2  3148               	addfsr 1,8
 14335  01A3  0801               	movf	1,w
 14336  01A4  00F7               	movwf	??_NEMS_timer
 14337  01A5  01F8               	clrf	??_NEMS_timer+1
 14338  01A6  300A               	movlw	10
 14339  01A7  0086               	movwf	6
 14340  01A8  3027               	movlw	39
 14341  01A9  0087               	movwf	7
 14342  01AA  3142               	addfsr 1,2
 14343  01AB  3F40               	moviw [0]fsr1
 14344  01AC  00F9               	movwf	??_NEMS_timer+2
 14345  01AD  3F41               	moviw [1]fsr1
 14346  01AE  00FA               	movwf	??_NEMS_timer+3
 14347  01AF  0878               	movf	??_NEMS_timer+1,w
 14348  01B0  027A               	subwf	??_NEMS_timer+3,w
 14349  01B1  1D03               	skipz
 14350  01B2  29B5               	goto	u150_25
 14351  01B3  0877               	movf	??_NEMS_timer,w
 14352  01B4  0279               	subwf	??_NEMS_timer+2,w
 14353  01B5                     u150_25:
 14354  01B5  1803               	skipnc
 14355  01B6  29C4               	goto	i1l3003
 14356                           
 14357                           ;NEMS.c: 518:             NEMS_pulse_states = NEMS_REST;
 14358  01B7  3001               	movlw	1
 14359  01B8  00F7               	movwf	??_NEMS_timer
 14360  01B9  0877               	movf	??_NEMS_timer,w
 14361  01BA  00F0               	movwf	_NEMS_pulse_states	;volatile
 14362  01BB                     L5:
 14363                           
 14364                           ;NEMS.c: 519:             NEMS_nmux1 = 0;
 14365  01BB  01D7               	clrf	_NEMS_nmux1
 14366                           
 14367                           ;NEMS.c: 520:             NEMS_pmux1 = 0;
 14368  01BC  01D6               	clrf	_NEMS_pmux1
 14369                           
 14370                           ;NEMS.c: 522:             waveform.current_amplitude = 0;
 14371  01BD  300A               	movlw	10
 14372  01BE  0086               	movwf	6
 14373  01BF  3027               	movlw	39
 14374  01C0  0087               	movwf	7
 14375  01C1  3151               	addfsr 1,17
 14376  01C2  0181               	clrf	1
 14377                           
 14378                           ;NEMS.c: 524:         } else if (waveform.clock_index < waveform.minus_phase_duration) {
 14379  01C3  0008               	return
 14380  01C4                     i1l3003:
 14381  01C4  300A               	movlw	10
 14382  01C5  0086               	movwf	6
 14383  01C6  3027               	movlw	39
 14384  01C7  0087               	movwf	7
 14385  01C8  3149               	addfsr 1,9
 14386  01C9  0801               	movf	1,w
 14387  01CA  00F7               	movwf	??_NEMS_timer
 14388  01CB  01F8               	clrf	??_NEMS_timer+1
 14389  01CC  300A               	movlw	10
 14390  01CD  0086               	movwf	6
 14391  01CE  3027               	movlw	39
 14392  01CF  0087               	movwf	7
 14393  01D0  3142               	addfsr 1,2
 14394  01D1  3F40               	moviw [0]fsr1
 14395  01D2  00F9               	movwf	??_NEMS_timer+2
 14396  01D3  3F41               	moviw [1]fsr1
 14397  01D4  00FA               	movwf	??_NEMS_timer+3
 14398  01D5  0878               	movf	??_NEMS_timer+1,w
 14399  01D6  027A               	subwf	??_NEMS_timer+3,w
 14400  01D7  1D03               	skipz
 14401  01D8  29DB               	goto	u151_25
 14402  01D9  0877               	movf	??_NEMS_timer,w
 14403  01DA  0279               	subwf	??_NEMS_timer+2,w
 14404  01DB                     u151_25:
 14405  01DB  1803               	skipnc
 14406  01DC  2A0B               	goto	i1l3013
 14407                           
 14408                           ;NEMS.c: 525:             NEMS_pulse_states = NEMS_MINUS_UP;
 14409  01DD  3004               	movlw	4
 14410  01DE  00F7               	movwf	??_NEMS_timer
 14411  01DF  0877               	movf	??_NEMS_timer,w
 14412  01E0  00F0               	movwf	_NEMS_pulse_states	;volatile
 14413                           
 14414                           ;NEMS.c: 526:             NEMS_nmux1 = waveform.channel2;
 14415  01E1  30EF               	movlw	239
 14416  01E2  0086               	movwf	6
 14417  01E3  3027               	movlw	39
 14418  01E4  0087               	movwf	7
 14419  01E5  0801               	movf	1,w
 14420  01E6  00F7               	movwf	??_NEMS_timer
 14421  01E7  0877               	movf	??_NEMS_timer,w
 14422  01E8  00D7               	movwf	_NEMS_nmux1
 14423                           
 14424                           ;NEMS.c: 527:             NEMS_pmux1 = waveform.channel1;
 14425  01E9  30EE               	movlw	238
 14426  01EA  0086               	movwf	6
 14427  01EB  3027               	movlw	39
 14428  01EC  0087               	movwf	7
 14429  01ED  0801               	movf	1,w
 14430  01EE  00F7               	movwf	??_NEMS_timer
 14431  01EF  0877               	movf	??_NEMS_timer,w
 14432  01F0  00D6               	movwf	_NEMS_pmux1
 14433                           
 14434                           ;NEMS.c: 529:             waveform.current_amplitude = waveform.pulse_amplitude >> wavef
      +                          orm.symmetry_divider;
 14435  01F1  300A               	movlw	10
 14436  01F2  0086               	movwf	6
 14437  01F3  3027               	movlw	39
 14438  01F4  0087               	movwf	7
 14439  01F5  314F               	addfsr 1,15
 14440  01F6  0801               	movf	1,w
 14441  01F7  00F7               	movwf	??_NEMS_timer
 14442  01F8  300A               	movlw	10
 14443  01F9  0086               	movwf	6
 14444  01FA  3027               	movlw	39
 14445  01FB  0087               	movwf	7
 14446  01FC  3150               	addfsr 1,16
 14447  01FD  0A01               	incf	1,w
 14448  01FE  2A00               	goto	u152_24
 14449  01FF                     u152_25:
 14450  01FF  36F7               	lsrf	??_NEMS_timer,f
 14451  0200                     u152_24:
 14452  0200  0B89               	decfsz	9,f
 14453  0201  29FF               	goto	u152_25
 14454  0202  0877               	movf	??_NEMS_timer,w
 14455  0203  00F8               	movwf	??_NEMS_timer+1
 14456  0204  301B               	movlw	27
 14457  0205  0086               	movwf	6
 14458  0206  3027               	movlw	39
 14459  0207  0087               	movwf	7
 14460  0208  0878               	movf	??_NEMS_timer+1,w
 14461  0209  0081               	movwf	1
 14462                           
 14463                           ;NEMS.c: 531:         } else {
 14464  020A  0008               	return
 14465  020B                     i1l3013:
 14466                           
 14467                           ;NEMS.c: 532:             NEMS_pulse_states = NEMS_PULSE_OFF;
 14468  020B  01F0               	clrf	_NEMS_pulse_states	;volatile
 14469  020C  29BB               	goto	L5
 14470  020D                     __end_of_NEMS_timer:	
 14471                           ;NEMS.c: 534:             NEMS_pmux1 = 0;
 14472                           
 14473                           ;NEMS.c: 533:             NEMS_nmux1 = 0;
 14474                           
 14475                           
 14476                           	psect	text55
 14477  0003                     __ptext55:	
 14478 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 14479 ;; Defined at:
 14480 ;;		line 155 in file "mcc_generated_files/tmr0.c"
 14481 ;; Parameters:    Size  Location     Type
 14482 ;;		None
 14483 ;; Auto vars:     Size  Location     Type
 14484 ;;		None
 14485 ;; Return value:  Size  Location     Type
 14486 ;;                  1    wreg      void 
 14487 ;; Registers used:
 14488 ;;		None
 14489 ;; Tracked objects:
 14490 ;;		On entry : 3F/0
 14491 ;;		On exit  : 3F/0
 14492 ;;		Unchanged: 3F/0
 14493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14498 ;;Total ram usage:        0 bytes
 14499 ;; Hardware stack levels used: 1
 14500 ;; This function calls:
 14501 ;;		Nothing
 14502 ;; This function is called by:
 14503 ;;		_TMR0_Initialize
 14504 ;;		_TMR0_ISR
 14505 ;; This function uses a non-reentrant model
 14506 ;;
 14507                           
 14508                           
 14509                           ;psect for function _TMR0_DefaultInterruptHandler
 14510  0003                     _TMR0_DefaultInterruptHandler:
 14511                           
 14512                           ;incstack = 0
 14513                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 14514  0003  0008               	return
 14515  0004                     __end_of_TMR0_DefaultInterruptHandler:
 14516                           
 14517                           	psect	text56
 14518  0BAD                     __ptext56:	
 14519 ;; *************** function i1_DAC1_SetOutput *****************
 14520 ;; Defined at:
 14521 ;;		line 66 in file "mcc_generated_files/dac1.c"
 14522 ;; Parameters:    Size  Location     Type
 14523 ;;  inputData       1    wreg     unsigned char 
 14524 ;; Auto vars:     Size  Location     Type
 14525 ;;  inputData       1    0[COMMON] unsigned char 
 14526 ;; Return value:  Size  Location     Type
 14527 ;;                  1    wreg      void 
 14528 ;; Registers used:
 14529 ;;		wreg
 14530 ;; Tracked objects:
 14531 ;;		On entry : 3F/0
 14532 ;;		On exit  : 3F/12
 14533 ;;		Unchanged: 0/0
 14534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14536 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14538 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14539 ;;Total ram usage:        1 bytes
 14540 ;; Hardware stack levels used: 1
 14541 ;; This function calls:
 14542 ;;		Nothing
 14543 ;; This function is called by:
 14544 ;;		_NEMS_timer
 14545 ;; This function uses a non-reentrant model
 14546 ;;
 14547                           
 14548                           
 14549                           ;psect for function i1_DAC1_SetOutput
 14550  0BAD                     i1_DAC1_SetOutput:
 14551                           
 14552                           ;incstack = 0
 14553                           ; Regs used in i1_DAC1_SetOutput: [wreg]
 14554                           ;i1DAC1_SetOutput@inputData stored from wreg
 14555  0BAD  00F6               	movwf	i1DAC1_SetOutput@inputData
 14556                           
 14557                           ;mcc_generated_files/dac1.c: 66: void DAC1_SetOutput(uint8_t inputData);mcc_generated_fi
      +                          les/dac1.c: 67: {;mcc_generated_files/dac1.c: 68:     DAC1CON1 = inputData;
 14558  0BAE  0876               	movf	i1DAC1_SetOutput@inputData,w
 14559  0BAF  0152               	movlb	18	; select bank18
 14560  0BB0  008F               	movwf	15	;volatile
 14561  0BB1  0008               	return
 14562  0BB2                     __end_ofi1_DAC1_SetOutput:
 14563                           
 14564                           	psect	text57
 14565  0D82                     __ptext57:	
 14566 ;; *************** function _EUSART1_Transmit_ISR *****************
 14567 ;; Defined at:
 14568 ;;		line 197 in file "mcc_generated_files/eusart1.c"
 14569 ;; Parameters:    Size  Location     Type
 14570 ;;		None
 14571 ;; Auto vars:     Size  Location     Type
 14572 ;;		None
 14573 ;; Return value:  Size  Location     Type
 14574 ;;                  1    wreg      void 
 14575 ;; Registers used:
 14576 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14577 ;; Tracked objects:
 14578 ;;		On entry : 3F/0
 14579 ;;		On exit  : 31/0
 14580 ;;		Unchanged: 0/0
 14581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14584 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14585 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14586 ;;Total ram usage:        1 bytes
 14587 ;; Hardware stack levels used: 1
 14588 ;; This function calls:
 14589 ;;		Nothing
 14590 ;; This function is called by:
 14591 ;;		_EUSART1_Initialize
 14592 ;;		_INTERRUPT_InterruptManager
 14593 ;; This function uses a non-reentrant model
 14594 ;;
 14595                           
 14596                           
 14597                           ;psect for function _EUSART1_Transmit_ISR
 14598  0D82                     _EUSART1_Transmit_ISR:
 14599                           
 14600                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 14601                           
 14602                           ;incstack = 0
 14603                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 14604  0D82  3008               	movlw	8
 14605  0D83  026E               	subwf	_eusart1TxBufferRemaining,w
 14606  0D84  1803               	skipnc
 14607  0D85  2D9B               	goto	i1l217
 14608                           
 14609                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 14610  0D86  0874               	movf	_eusart1TxTail,w
 14611  0D87  3E4E               	addlw	(low (_eusart1TxBuffer| 0))& (0+255)
 14612  0D88  0086               	movwf	6
 14613  0D89  0187               	clrf	7
 14614  0D8A  0801               	movf	1,w
 14615  0D8B  0142               	movlb	2	; select bank2
 14616  0D8C  009A               	movwf	26	;volatile
 14617  0D8D  3001               	movlw	1
 14618  0D8E  00F6               	movwf	??_EUSART1_Transmit_ISR
 14619  0D8F  0876               	movf	??_EUSART1_Transmit_ISR,w
 14620  0D90  07F4               	addwf	_eusart1TxTail,f	;volatile
 14621                           
 14622                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 14623  0D91  3008               	movlw	8
 14624  0D92  0274               	subwf	_eusart1TxTail,w
 14625  0D93  1803               	btfsc	3,0
 14626                           
 14627                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
 14628  0D94  01F4               	clrf	_eusart1TxTail	;volatile
 14629                           
 14630                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
 14631  0D95  3001               	movlw	1
 14632  0D96  00F6               	movwf	??_EUSART1_Transmit_ISR
 14633  0D97  0876               	movf	??_EUSART1_Transmit_ISR,w
 14634  0D98  0140               	movlb	0	; select bank0
 14635  0D99  07EE               	addwf	_eusart1TxBufferRemaining,f	;volatile
 14636                           
 14637                           ;mcc_generated_files/eusart1.c: 209:     }
 14638  0D9A  0008               	return
 14639  0D9B                     i1l217:	
 14640                           ;mcc_generated_files/eusart1.c: 210:     else
 14641                           
 14642                           
 14643                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
 14644  0D9B  014E               	movlb	14	; select bank14
 14645  0D9C  1219               	bcf	25,4	;volatile
 14646  0D9D  0008               	return
 14647  0D9E                     __end_of_EUSART1_Transmit_ISR:
 14648                           
 14649                           	psect	text58
 14650  0ED9                     __ptext58:	
 14651 ;; *************** function _EUSART1_Receive_ISR *****************
 14652 ;; Defined at:
 14653 ;;		line 216 in file "mcc_generated_files/eusart1.c"
 14654 ;; Parameters:    Size  Location     Type
 14655 ;;		None
 14656 ;; Auto vars:     Size  Location     Type
 14657 ;;		None
 14658 ;; Return value:  Size  Location     Type
 14659 ;;                  1    wreg      void 
 14660 ;; Registers used:
 14661 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14662 ;; Tracked objects:
 14663 ;;		On entry : 3F/0
 14664 ;;		On exit  : 0/0
 14665 ;;		Unchanged: 0/0
 14666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14671 ;;Total ram usage:        0 bytes
 14672 ;; Hardware stack levels used: 1
 14673 ;; Hardware stack levels required when called: 2
 14674 ;; This function calls:
 14675 ;;		Absolute function
 14676 ;;		_EUSART1_DefaultErrorHandler
 14677 ;;		_EUSART1_DefaultFramingErrorHandler
 14678 ;;		_EUSART1_DefaultOverrunErrorHandler
 14679 ;;		_EUSART1_RxDataHandler
 14680 ;; This function is called by:
 14681 ;;		_EUSART1_Initialize
 14682 ;;		_INTERRUPT_InterruptManager
 14683 ;; This function uses a non-reentrant model
 14684 ;;
 14685                           
 14686                           
 14687                           ;psect for function _EUSART1_Receive_ISR
 14688  0ED9                     _EUSART1_Receive_ISR:
 14689                           
 14690                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 14691                           
 14692                           ;incstack = 0
 14693                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14694  0ED9  0873               	movf	_eusart1RxHead,w	;volatile
 14695  0EDA  3E46               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 14696  0EDB  0086               	movwf	6
 14697  0EDC  0187               	clrf	7
 14698  0EDD  0181               	clrf	1
 14699                           
 14700                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
 14701  0EDE  0142               	movlb	2	; select bank2
 14702  0EDF  1D1D               	btfss	29,2	;volatile
 14703  0EE0  2EEC               	goto	i1l3051
 14704                           
 14705                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 14706  0EE1  0873               	movf	_eusart1RxHead,w	;volatile
 14707  0EE2  3E46               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 14708  0EE3  0086               	movwf	6
 14709  0EE4  0187               	clrf	7
 14710  0EE5  1481               	bsf	1,1
 14711                           
 14712                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
 14713  0EE6  0141               	movlb	1	; select bank1
 14714  0EE7  082D               	movf	(_EUSART1_FramingErrorHandler+1)^(0+128),w
 14715  0EE8  008A               	movwf	10
 14716  0EE9  082C               	movf	_EUSART1_FramingErrorHandler^(0+128),w
 14717  0EEA  000A               	callw
 14718  0EEB  318E               	pagesel	$
 14719  0EEC                     i1l3051:
 14720                           
 14721                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
 14722  0EEC  0142               	movlb	2	; select bank2
 14723  0EED  1C9D               	btfss	29,1	;volatile
 14724  0EEE  2EFA               	goto	i1l3057
 14725                           
 14726                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 14727  0EEF  0873               	movf	_eusart1RxHead,w	;volatile
 14728  0EF0  3E46               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 14729  0EF1  0086               	movwf	6
 14730  0EF2  0187               	clrf	7
 14731  0EF3  1501               	bsf	1,2
 14732                           
 14733                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
 14734  0EF4  0141               	movlb	1	; select bank1
 14735  0EF5  082B               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+128),w
 14736  0EF6  008A               	movwf	10
 14737  0EF7  082A               	movf	_EUSART1_OverrunErrorHandler^(0+128),w
 14738  0EF8  000A               	callw
 14739  0EF9  318E               	pagesel	$
 14740  0EFA                     i1l3057:
 14741                           
 14742                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 14743  0EFA  0873               	movf	_eusart1RxHead,w	;volatile
 14744  0EFB  3E46               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 14745  0EFC  0086               	movwf	6
 14746  0EFD  0187               	clrf	7
 14747  0EFE  0801               	movf	1,w
 14748  0EFF  1903               	btfsc	3,2
 14749  0F00  2F08               	goto	i1l3061
 14750                           
 14751                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
 14752  0F01  0141               	movlb	1	; select bank1
 14753  0F02  0829               	movf	(_EUSART1_ErrorHandler+1)^(0+128),w
 14754  0F03  008A               	movwf	10
 14755  0F04  0828               	movf	_EUSART1_ErrorHandler^(0+128),w
 14756  0F05  000A               	callw
 14757  0F06  318E               	pagesel	$
 14758                           
 14759                           ;mcc_generated_files/eusart1.c: 233:     } else {
 14760  0F07  0008               	return
 14761  0F08                     i1l3061:
 14762                           
 14763                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
 14764  0F08  318C  2454         	fcall	_EUSART1_RxDataHandler
 14765  0F0A  0008               	return
 14766  0F0B                     __end_of_EUSART1_Receive_ISR:
 14767                           
 14768                           	psect	text59
 14769  0BA1                     __ptext59:	
 14770 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 14771 ;; Defined at:
 14772 ;;		line 252 in file "mcc_generated_files/eusart1.c"
 14773 ;; Parameters:    Size  Location     Type
 14774 ;;		None
 14775 ;; Auto vars:     Size  Location     Type
 14776 ;;		None
 14777 ;; Return value:  Size  Location     Type
 14778 ;;                  1    wreg      void 
 14779 ;; Registers used:
 14780 ;;		None
 14781 ;; Tracked objects:
 14782 ;;		On entry : 3F/1
 14783 ;;		On exit  : 3F/2
 14784 ;;		Unchanged: 0/0
 14785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14790 ;;Total ram usage:        0 bytes
 14791 ;; Hardware stack levels used: 1
 14792 ;; This function calls:
 14793 ;;		Nothing
 14794 ;; This function is called by:
 14795 ;;		_EUSART1_Initialize
 14796 ;;		_EUSART1_Receive_ISR
 14797 ;; This function uses a non-reentrant model
 14798 ;;
 14799                           
 14800                           
 14801                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 14802  0BA1                     _EUSART1_DefaultOverrunErrorHandler:
 14803                           
 14804                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
 14805                           
 14806                           ;incstack = 0
 14807                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 14808  0BA1  0142               	movlb	2	; select bank2
 14809  0BA2  121D               	bcf	29,4	;volatile
 14810                           
 14811                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
 14812  0BA3  161D               	bsf	29,4	;volatile
 14813  0BA4  0008               	return
 14814  0BA5                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 14815                           
 14816                           	psect	text60
 14817  0002                     __ptext60:	
 14818 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 14819 ;; Defined at:
 14820 ;;		line 250 in file "mcc_generated_files/eusart1.c"
 14821 ;; Parameters:    Size  Location     Type
 14822 ;;		None
 14823 ;; Auto vars:     Size  Location     Type
 14824 ;;		None
 14825 ;; Return value:  Size  Location     Type
 14826 ;;                  1    wreg      void 
 14827 ;; Registers used:
 14828 ;;		None
 14829 ;; Tracked objects:
 14830 ;;		On entry : 3F/1
 14831 ;;		On exit  : 3F/1
 14832 ;;		Unchanged: 3F/0
 14833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14838 ;;Total ram usage:        0 bytes
 14839 ;; Hardware stack levels used: 1
 14840 ;; This function calls:
 14841 ;;		Nothing
 14842 ;; This function is called by:
 14843 ;;		_EUSART1_Initialize
 14844 ;;		_EUSART1_Receive_ISR
 14845 ;; This function uses a non-reentrant model
 14846 ;;
 14847                           
 14848                           
 14849                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 14850  0002                     _EUSART1_DefaultFramingErrorHandler:
 14851                           
 14852                           ;incstack = 0
 14853                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 14854  0002  0008               	return
 14855  0003                     __end_of_EUSART1_DefaultFramingErrorHandler:
 14856                           
 14857                           	psect	text61
 14858  0B98                     __ptext61:	
 14859 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 14860 ;; Defined at:
 14861 ;;		line 260 in file "mcc_generated_files/eusart1.c"
 14862 ;; Parameters:    Size  Location     Type
 14863 ;;		None
 14864 ;; Auto vars:     Size  Location     Type
 14865 ;;		None
 14866 ;; Return value:  Size  Location     Type
 14867 ;;                  1    wreg      void 
 14868 ;; Registers used:
 14869 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14870 ;; Tracked objects:
 14871 ;;		On entry : 3F/1
 14872 ;;		On exit  : 3F/2
 14873 ;;		Unchanged: 0/0
 14874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14879 ;;Total ram usage:        0 bytes
 14880 ;; Hardware stack levels used: 1
 14881 ;; Hardware stack levels required when called: 1
 14882 ;; This function calls:
 14883 ;;		_EUSART1_RxDataHandler
 14884 ;; This function is called by:
 14885 ;;		_EUSART1_Initialize
 14886 ;;		_EUSART1_Receive_ISR
 14887 ;; This function uses a non-reentrant model
 14888 ;;
 14889                           
 14890                           
 14891                           ;psect for function _EUSART1_DefaultErrorHandler
 14892  0B98                     _EUSART1_DefaultErrorHandler:
 14893                           
 14894                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
 14895                           
 14896                           ;incstack = 0
 14897                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 14898  0B98  318C  2454         	fcall	_EUSART1_RxDataHandler
 14899  0B9A  0008               	return
 14900  0B9B                     __end_of_EUSART1_DefaultErrorHandler:
 14901                           
 14902                           	psect	text62
 14903  0C54                     __ptext62:	
 14904 ;; *************** function _EUSART1_RxDataHandler *****************
 14905 ;; Defined at:
 14906 ;;		line 240 in file "mcc_generated_files/eusart1.c"
 14907 ;; Parameters:    Size  Location     Type
 14908 ;;		None
 14909 ;; Auto vars:     Size  Location     Type
 14910 ;;		None
 14911 ;; Return value:  Size  Location     Type
 14912 ;;                  1    wreg      void 
 14913 ;; Registers used:
 14914 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14915 ;; Tracked objects:
 14916 ;;		On entry : 0/2
 14917 ;;		On exit  : 3F/2
 14918 ;;		Unchanged: 0/0
 14919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14922 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14923 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14924 ;;Total ram usage:        1 bytes
 14925 ;; Hardware stack levels used: 1
 14926 ;; This function calls:
 14927 ;;		Nothing
 14928 ;; This function is called by:
 14929 ;;		_EUSART1_Receive_ISR
 14930 ;;		_EUSART1_DefaultErrorHandler
 14931 ;; This function uses a non-reentrant model
 14932 ;;
 14933                           
 14934                           
 14935                           ;psect for function _EUSART1_RxDataHandler
 14936  0C54                     _EUSART1_RxDataHandler:
 14937                           
 14938                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 14939                           
 14940                           ;incstack = 0
 14941                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 14942  0C54  0142               	movlb	2	; select bank2
 14943  0C55  0819               	movf	25,w	;volatile
 14944  0C56  00F6               	movwf	??_EUSART1_RxDataHandler
 14945  0C57  0873               	movf	_eusart1RxHead,w
 14946  0C58  3EA0               	addlw	(low (_eusart1RxBuffer| 0))& (0+255)
 14947  0C59  0086               	movwf	6
 14948  0C5A  0187               	clrf	7
 14949  0C5B  0876               	movf	??_EUSART1_RxDataHandler,w
 14950  0C5C  0081               	movwf	1
 14951  0C5D  3001               	movlw	1
 14952  0C5E  00F6               	movwf	??_EUSART1_RxDataHandler
 14953  0C5F  0876               	movf	??_EUSART1_RxDataHandler,w
 14954  0C60  07F3               	addwf	_eusart1RxHead,f	;volatile
 14955                           
 14956                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 14957  0C61  3008               	movlw	8
 14958  0C62  0273               	subwf	_eusart1RxHead,w
 14959  0C63  1803               	btfsc	3,0
 14960                           
 14961                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
 14962  0C64  01F3               	clrf	_eusart1RxHead	;volatile
 14963                           
 14964                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
 14965  0C65  3001               	movlw	1
 14966  0C66  00F6               	movwf	??_EUSART1_RxDataHandler
 14967  0C67  0876               	movf	??_EUSART1_RxDataHandler,w
 14968  0C68  07F1               	addwf	_eusart1RxCount,f	;volatile
 14969  0C69  0008               	return
 14970  0C6A                     __end_of_EUSART1_RxDataHandler:
 14971  007E                     btemp	set	126	;btemp
 14972  007E                     int$flags	set	126
 14973  007E                     wtemp0	set	126
 14974  270A                     
 14975                           	psect	config
 14976                           
 14977                           ;Config register CONFIG1 @ 0x8007
 14978                           ;	External Oscillator mode selection bits
 14979                           ;	FEXTOSC = OFF, Oscillator not enabled
 14980                           ;	Power-up default value for COSC bits
 14981                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 14982                           ;	Clock Out Enable bit
 14983                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 14984                           ;	Clock Switch Enable bit
 14985                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 14986                           ;	Fail-Safe Clock Monitor Enable bit
 14987                           ;	FCMEN = ON, FSCM timer enabled
 14988  8007                     	org	32775
 14989  8007  3FEC               	dw	16364
 14990                           
 14991                           ;Config register CONFIG2 @ 0x8008
 14992                           ;	Master Clear Enable bit
 14993                           ;	MCLRE = ON, MCLR pin is Master Clear function
 14994                           ;	Power-up Timer Enable bit
 14995                           ;	PWRTS = OFF, PWRT disabled
 14996                           ;	Low-Power BOR enable bit
 14997                           ;	LPBOREN = OFF, ULPBOR disabled
 14998                           ;	Brown-out reset enable bits
 14999                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 15000                           ;	Brown-out Reset Voltage Selection
 15001                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 2.45V
 15002                           ;	Zero-cross detect disable
 15003                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 15004                           ;	Peripheral Pin Select one-way control
 15005                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 15006                           ;	Stack Overflow/Underflow Reset Enable bit
 15007                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 15008  8008                     	org	32776
 15009  8008  3FFF               	dw	16383
 15010                           
 15011                           ;Config register CONFIG3 @ 0x8009
 15012                           ;	WDT Period Select bits
 15013                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 15014                           ;	WDT operating mode
 15015                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 15016                           ;	WDT Window Select bits
 15017                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 15018                           ;	WDT input clock selector
 15019                           ;	WDTCCS = SC, Software Control
 15020  8009                     	org	32777
 15021  8009  3F9F               	dw	16287
 15022                           
 15023                           ;Config register CONFIG4 @ 0x800A
 15024                           ;	Boot Block Size Selection bits
 15025                           ;	BBSIZE = BB512, 512 words boot block size
 15026                           ;	Boot Block Enable bit
 15027                           ;	BBEN = OFF, Boot Block disabled
 15028                           ;	SAF Enable bit
 15029                           ;	SAFEN = OFF, SAF disabled
 15030                           ;	Application Block Write Protection bit
 15031                           ;	WRTAPP = OFF, Application Block not write protected
 15032                           ;	Boot Block Write Protection bit
 15033                           ;	WRTB = OFF, Boot Block not write protected
 15034                           ;	Configuration Register Write Protection bit
 15035                           ;	WRTC = OFF, Configuration Register not write protected
 15036                           ;	Data EEPROM write protection bit
 15037                           ;	WRTD = OFF, Data EEPROM NOT write protected
 15038                           ;	Storage Area Flash Write Protection bit
 15039                           ;	WRTSAF = OFF, SAF not write protected
 15040                           ;	Low Voltage Programming Enable bit
 15041                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 15042  800A                     	org	32778
 15043  800A  3FFF               	dw	16383
 15044                           
 15045                           ;Config register CONFIG5 @ 0x800B
 15046                           ;	UserNVM Program memory code protection bit
 15047                           ;	CP = OFF, UserNVM code protection disabled
 15048  800B                     	org	32779
 15049  800B  3FFF               	dw	16383

Data Sizes:
    Strings     415
    Constant    16
    Data        0
    BSS         46
    Persistent  47
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     38      79
    BANK1            80      2      16
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           42      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    _sprintf_u8b@mess	PTR unsigned char  size(1) Largest target is 4
		 -> NEMS_get_program@aux(BANK0[4]), 

    _puts@pt	PTR unsigned char  size(2) Largest target is 28
		 -> STR_51(CODE[6]), STR_50(CODE[6]), STR_49(CODE[28]), STR_48(CODE[6]), 
		 -> STR_47(CODE[6]), STR_46(CODE[7]), STR_45(CODE[6]), STR_44(CODE[7]), 
		 -> STR_43(CODE[6]), STR_42(CODE[2]), STR_41(CODE[12]), STR_40(CODE[2]), 
		 -> STR_39(CODE[12]), STR_38(CODE[2]), STR_37(CODE[25]), STR_36(CODE[2]), 
		 -> STR_35(CODE[23]), STR_34(CODE[2]), STR_33(CODE[21]), STR_32(CODE[2]), 
		 -> STR_31(CODE[16]), STR_30(CODE[2]), STR_29(CODE[15]), STR_28(CODE[2]), 
		 -> STR_27(CODE[18]), STR_26(CODE[2]), STR_25(CODE[25]), STR_24(CODE[2]), 
		 -> STR_23(CODE[17]), STR_22(CODE[2]), STR_21(CODE[17]), NEMS_get_program@aux(BANK0[4]), 
		 -> STR_20(CODE[15]), STR_19(CODE[7]), STR_18(CODE[6]), STR_17(CODE[7]), 
		 -> STR_16(CODE[6]), STR_15(CODE[7]), STR_14(CODE[6]), STR_13(CODE[7]), 
		 -> STR_12(CODE[6]), STR_11(CODE[7]), STR_10(CODE[6]), STR_9(CODE[7]), 
		 -> STR_8(CODE[6]), STR_7(CODE[7]), STR_6(CODE[6]), STR_5(CODE[7]), 
		 -> STR_4(CODE[6]), STR_3(CODE[7]), STR_2(CODE[6]), STR_1(CODE[4]), 

    NEMS_get_packet@pt	PTR unsigned char  size(1) Largest target is 11
		 -> program.channel2(BANK0[1]), program.channel1(BANK0[1]), program.symmetry_factor(BANK0[1]), program.ramp_down(BANK0[1]), 
		 -> program.ramp_up(BANK0[1]), program.contractions(BANK0[1]), program.OFF_time(BANK0[1]), program.ON_time(BANK0[1]), 
		 -> program.phase_duration(BANK0[1]), program.frequency(BANK0[1]), program.amplitude(BANK0[1]), program(BANK0[11]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NEMS_timer(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NEMS_timer(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR0_ISR->_NEMS_timer
    _NEMS_timer->i1_DAC1_SetOutput
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _main->_NEMS_message_handler
    _SYSTEM_Initialize->_EUSART1_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _NEMS_message_handler->_NEMS_start_program
    _NEMS_stop_program->__puts
    _NEMS_start_program->_NEMS_recalculate_program
    _NEMS_recalculate_program->_NEMS_calculate_ramp
    _NEMS_calculate_ramp->___lwdiv
    ___lwdiv->___wmul
    _NEMS_set_symmetry_factor->_NEMS_get_packet
    _NEMS_set_ramp_up->_NEMS_get_packet
    _NEMS_set_ramp_down->_NEMS_get_packet
    _NEMS_set_phase_duration->_NEMS_get_packet
    _NEMS_set_frequency->_NEMS_get_packet
    _NEMS_set_contractions->_NEMS_get_packet
    _NEMS_set_channel2->_NEMS_get_packet
    _NEMS_set_channel1->_NEMS_get_packet
    _NEMS_set_amplitude->_NEMS_get_packet
    _NEMS_set_ON_time->_NEMS_get_packet
    _NEMS_set_OFF_time->_NEMS_get_packet
    _NEMS_get_packet->___bmul
    _NEMS_save_program->__puts
    _NEMS_load_program->__puts
    _NEMS_get_program->__sprintf_u8b
    __sprintf_u8b->___awdiv
    ___awdiv->___wmul
    __puts->_EUSART1_Write
    _NEMS_initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  122018
                                              0 BANK1      2     2      0
                _EUSART1_is_rx_ready
                    _NEMS_initialize
               _NEMS_message_handler
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     816
                    _DAC1_Initialize
                 _EUSART1_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   1     1      0     605
                                              2 BANK0      1     1      0
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _DAC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _NEMS_message_handler                                 3     3      0  120960
                                             35 BANK0      3     3      0
                       _EUSART1_Read
                   _NEMS_get_program
                  _NEMS_load_program
                  _NEMS_save_program
                  _NEMS_set_OFF_time
                   _NEMS_set_ON_time
                 _NEMS_set_amplitude
                  _NEMS_set_channel1
                  _NEMS_set_channel2
              _NEMS_set_contractions
                 _NEMS_set_frequency
            _NEMS_set_phase_duration
                 _NEMS_set_ramp_down
                   _NEMS_set_ramp_up
           _NEMS_set_symmetry_factor
                 _NEMS_start_program
                  _NEMS_stop_program
                              __puts
 ---------------------------------------------------------------------------------
 (2) _NEMS_stop_program                                    0     0      0    5803
                     _DAC1_SetOutput
                     _TMR0_StopTimer
                              __puts
 ---------------------------------------------------------------------------------
 (2) _NEMS_start_program                                   1     1      0   11618
                                             34 BANK0      1     1      0
           _NEMS_recalculate_program
                    _TMR0_StartTimer
                              __puts
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _NEMS_recalculate_program                             6     6      0    5846
                                             28 BANK0      6     6      0
                _NEMS_calculate_ramp
                            ___awdiv
                             ___bmul
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _NEMS_calculate_ramp                                 14    14      0    2410
                                             14 BANK0     14    14      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1216
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     996
                                              6 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _NEMS_set_symmetry_factor                             0     0      0    6750
                    _NEMS_get_packet
                              __puts
 ---------------------------------------------------------------------------------
 (2) _NEMS_set_ramp_up                                     0     0      0    6750
                    _NEMS_get_packet
                              __puts
 ---------------------------------------------------------------------------------
 (2) _NEMS_set_ramp_down                                   0     0      0    6750
                    _NEMS_get_packet
                              __puts
 ---------------------------------------------------------------------------------
 (2) _NEMS_set_phase_duration                              0     0      0    6750
                    _NEMS_get_packet
                              __puts
 ---------------------------------------------------------------------------------
 (2) _NEMS_set_frequency                                   0     0      0    6750
                    _NEMS_get_packet
                              __puts
 ---------------------------------------------------------------------------------
 (2) _NEMS_set_contractions                                0     0      0    6750
                    _NEMS_get_packet
                              __puts
 ---------------------------------------------------------------------------------
 (2) _NEMS_set_channel2                                    0     0      0    6750
                    _NEMS_get_packet
                              __puts
 ---------------------------------------------------------------------------------
 (2) _NEMS_set_channel1                                    0     0      0    6750
                    _NEMS_get_packet
                              __puts
 ---------------------------------------------------------------------------------
 (2) _NEMS_set_amplitude                                   0     0      0    6750
                    _NEMS_get_packet
                              __puts
 ---------------------------------------------------------------------------------
 (2) _NEMS_set_ON_time                                     0     0      0    6750
                    _NEMS_get_packet
                              __puts
 ---------------------------------------------------------------------------------
 (2) _NEMS_set_OFF_time                                    0     0      0    6750
                    _NEMS_get_packet
                              __puts
 ---------------------------------------------------------------------------------
 (3) _NEMS_get_packet                                      5     5      0     978
                                              4 BANK0      5     5      0
                       _EUSART1_Read
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     316
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Read                                         2     2      0      37
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _NEMS_save_program                                    2     2      0    7198
                                              8 BANK0      2     2      0
                              __puts
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (3) _eeprom_write                                         2     1      1    1052
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _NEMS_load_program                                    3     3      0    6177
                                              8 BANK0      3     3      0
                              __puts
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (3) _eeprom_read                                          1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _NEMS_get_program                                     5     5      0   10071
                                             24 BANK0      5     5      0
                              __puts
                       __sprintf_u8b
 ---------------------------------------------------------------------------------
 (3) __sprintf_u8b                                         9     8      1    3557
                                             15 BANK0      9     8      1
                            ___awdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              6     5      1     412
                                              0 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     908
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) __puts                                                6     4      2    5772
                                              2 BANK0      6     4      2
                      _EUSART1_Write
                _EUSART1_is_tx_ready
 ---------------------------------------------------------------------------------
 (3) _EUSART1_is_tx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _NEMS_initialize                                      1     1      0     242
                                              2 BANK0      1     1      0
                     _DAC1_SetOutput
           _TMR0_SetInterruptHandler
                     _TMR0_StopTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _DAC1_SetOutput                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0      22
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0      22
                   Absolute function *
                         _NEMS_timer *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _NEMS_timer                                           5     5      0      22
                                              1 COMMON     5     5      0
                   i1_DAC1_SetOutput
 ---------------------------------------------------------------------------------
 (9) i1_DAC1_SetOutput                                     1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Receive_ISR                                  0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (8) _EUSART1_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_DefaultErrorHandler                          0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (8) _EUSART1_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_is_rx_ready
   _NEMS_initialize
     _DAC1_SetOutput
     _TMR0_SetInterruptHandler
     _TMR0_StopTimer
   _NEMS_message_handler
     _EUSART1_Read
     _NEMS_get_program
       __puts
         _EUSART1_Write
         _EUSART1_is_tx_ready
       __sprintf_u8b
         ___awdiv
           ___wmul (ARG)
         ___lbmod
     _NEMS_load_program
       __puts
       _eeprom_read
     _NEMS_save_program
       __puts
       _eeprom_write
     _NEMS_set_OFF_time
       _NEMS_get_packet
         _EUSART1_Read
         ___bmul
       __puts
     _NEMS_set_ON_time
       _NEMS_get_packet
       __puts
     _NEMS_set_amplitude
       _NEMS_get_packet
       __puts
     _NEMS_set_channel1
       _NEMS_get_packet
       __puts
     _NEMS_set_channel2
       _NEMS_get_packet
       __puts
     _NEMS_set_contractions
       _NEMS_get_packet
       __puts
     _NEMS_set_frequency
       _NEMS_get_packet
       __puts
     _NEMS_set_phase_duration
       _NEMS_get_packet
       __puts
     _NEMS_set_ramp_down
       _NEMS_get_packet
       __puts
     _NEMS_set_ramp_up
       _NEMS_get_packet
       __puts
     _NEMS_set_symmetry_factor
       _NEMS_get_packet
       __puts
     _NEMS_start_program
       _NEMS_recalculate_program
         _NEMS_calculate_ramp
           ___lwdiv
             ___wmul (ARG)
           ___wmul
         ___awdiv
         ___bmul
         ___lwdiv
         ___wmul
       _TMR0_StartTimer
       __puts
     _NEMS_stop_program
       _DAC1_SetOutput
       _TMR0_StopTimer
       __puts
     __puts
   _SYSTEM_Initialize
     _DAC1_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _TMR0_ISR *
     Absolute function(Fake) *
     _NEMS_timer *
       i1_DAC1_SetOutput
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     26      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0      6B       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      2      10       8       20.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              2A      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BANK23               0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BANK24               0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BANK25               0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0      6B      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Mar 27 15:51:22 2021

                      _eusart1TxBufferRemaining 006E                                  ___bmul@product 0022  
                                 ?__sprintf_u8b 002F                       __end_of_NEMS_stop_program 0C40  
                                  ___awdiv@sign 002C                          __end_of_FVR_Initialize 0BAD  
                           ___wmul@multiplicand 0022                                 _DAC1_Initialize 0BA5  
                                           l211 0E46                                             l802 0C10  
                                           l824 0DF8                                             l488 0799  
                                           l828 0E11                                             l837 0D6F  
                                           u905 0F16                                             u925 0F20  
                                           u935 0F2A                                             u945 0F32  
                                           _mux 10AE                         __size_of_PMD_Initialize 000A  
                  __end_of_NEMS_message_handler 079A                        __end_of_NEMS_set_ON_time 0C98  
                                           wreg 0009                                  _DAC1_SetOutput 0BC1  
                                          l1055 0DF1                                            l2431 07AF  
                                          l3303 0C26                                            l2335 0F31  
                                          l2327 0F13                                            l2441 07B7  
                                          l2425 07A4                                            l2329 0F1F  
                                          l3225 0D69                                            l2443 07C3  
                                          l3315 0DDE                                            l3403 0687  
                                          l3243 0E5D                                            l2339 0F3A  
                                          l2453 07DE                                            l3265 0E3B  
                                          l3353 0E82                                            l2457 07E6  
                                          l2449 07D5                                            l3601 0D03  
                                          l3347 0E90                                            l3371 0FBB  
                                          l3451 0308                                            l3613 0D5F  
                                          l3453 030E                                            l3279 0E5A  
                                          l3631 0CEC                                            l3607 0D1A  
                                          l3295 0511                                            l3287 04BE  
                                          l3447 02FB                                            l3625 0C79  
                                          l3289 0510                                            l3449 0302  
                                          l3457 0315                                            l3395 066E  
                                          l3299 0C20                                            l3619 0C90  
                                          l3643 0D31                                            l3459 032B  
                                          l3637 0D48                                            l3901 0738  
                                          l3807 0DC6                                            l3911 0747  
                                          l3903 073B                                            l3833 0CD5  
                                          l3921 0756                                            l3913 074A  
                                          l3905 073E                                            l3595 0CA7  
                                          l3827 0CBE                                            l3923 0759  
                                          l3915 074D                                            l3907 0741  
                                          l3917 0750                                            l3909 0744  
                                          l3919 0753                                            l3927 075C  
                                          l3945 0E30                                            l3891 0725  
                                          l3893 072C                                            l3991 031D  
                                          l3895 072F                                            l3897 0732  
                                          l3899 0735                                            l3989 0764  
                                          STR_1 11AB                                            STR_2 1169  
                                          STR_3 1119                                            STR_4 117B  
                                          STR_5 112E                                            STR_6 1175  
                                          STR_7 1127                                            STR_8 1181  
                                          STR_9 1135                                            u1105 07BA  
                                          u1125 07C4                                            u1135 07CE  
                                          u1145 07D6                                            u2107 0E27  
                                          u2117 0F84                                            _LATA 0018  
                                          u2070 0BCC                                            _LATB 0019  
                                          _LATC 001A                                            _LATE 001C  
                                          u1710 0BD3                                            u1825 0DE1  
                    __end_of_NEMS_set_amplitude 0CAF                                            u1941 0C0F  
                                          u1685 0D70                                            u1695 0D75  
                                          u1785 04CF                                            u1795 0522  
                                          _PMD0 0796                                            _PMD1 0797  
                                          _PMD2 0798                                            _PMD3 0799  
                                          _PMD4 079A                                            _PMD5 079B  
                                          _PMD6 079C                                            _PMD7 079D  
                                          _WPUA 1F39                                            _WPUB 1F44  
                                          _WPUC 1F4F                                  ??_eeprom_write 0021  
                                          _WPUE 1F65                                   _EUSART1_Write 0E3A  
                                   ?_NEMS_timer 0076                                            _main 0E18  
                                 ?_EUSART1_Read 0076                                 _TMR0_StartTimer 0B9E  
                                          fsr0h 0005                                            fsr1h 0007  
                                          indf0 0000                                            fsr0l 0004  
                                          indf1 0001                                            fsr1l 0006  
                                          btemp 007E                                            start 0025  
                             ___bmul@multiplier 0023                      __end_of_NEMS_set_frequency 0D0B  
                                ??__sprintf_u8b 0030                               ??_NEMS_get_packet 0024  
                       __end_of_TMR0_Initialize 0DBA                        __end_of_NEMS_set_ramp_up 0D50  
                ??_TMR0_DefaultInterruptHandler 0076                                 ?_FVR_Initialize 0076  
                __size_of_OSCILLATOR_Initialize 000A                   __end_of_OSCILLATOR_Initialize 0BF7  
                         _eusart1RxStatusBuffer 0046                                           ?_main 0076  
                    __end_of_NEMS_set_ramp_down 0D39                                 __end_of___awdiv 07EB  
                                         STR_10 1199                                           STR_11 1143  
                                         STR_12 115D                                           STR_20 10CE  
                                         STR_13 110B                                           STR_21 108C  
                                         STR_30 101A                                           STR_22 101A  
                                         STR_14 116F                                           STR_15 1120  
                                         STR_31 10BE                                           STR_23 109D  
                                         STR_40 101A                                           STR_32 101A  
                                         STR_24 101A                                           STR_16 119F  
                                         STR_17 114A                                           STR_41 10F8  
                                         STR_33 1065                                           STR_25 101C  
                                         STR_42 101A                                           STR_34 101A  
                                         STR_26 101A                                           STR_50 1193  
                                         STR_18 1163                                           STR_51 1157  
                                         STR_43 1151                                           STR_19 1112  
                                         STR_27 107A                                           STR_35 104E  
                                         STR_36 101A                                           STR_28 101A  
                                         STR_44 1104                                           STR_45 118D  
                                         STR_29 10DD                                           STR_37 1035  
                                         STR_38 101A                                           STR_46 113C  
                                         STR_47 11A5                                           STR_39 10EC  
                                         STR_48 1187                                           STR_49 1000  
                               __end_of___lbmod 0DF7                                 ___awdiv@divisor 0026  
                               __end_of___lwdiv 0F3F                                           i1l217 0D9B  
                                         i1l352 001A                                           i1l357 0023  
                                         i1l349 000E                          __end_of_DAC1_SetOutput 0BC7  
                               ___awdiv@counter 002B                                           _OSCEN 0891  
                                         _TMR0H 059D                                           _TMR0L 059C  
                                         _TRISA 0012                                           _TRISB 0013  
                                         _TRISC 0014                                           _TRISE 0016  
             __size_of_TMR0_SetInterruptHandler 0005                       ?_TMR0_SetInterruptHandler 0020  
                          _EUSART1_Transmit_ISR 0D82                                __end_of_TMR0_ISR 0C54  
                                         __puts 0E81                                  ?_EUSART1_Write 0076  
                                         pclath 000A                       ??_NEMS_set_phase_duration 0029  
                                ??_EUSART1_Read 0020                                           status 0003  
                                         wtemp0 007E                     __size_of_NEMS_start_program 001E  
    __end_of_EUSART1_DefaultFramingErrorHandler 0003     __size_of_EUSART1_DefaultFramingErrorHandler 0001  
          ??_EUSART1_DefaultFramingErrorHandler 0076             ?_EUSART1_DefaultFramingErrorHandler 0076  
            _EUSART1_DefaultFramingErrorHandler 0002                               ??_NEMS_initialize 0022  
                     __size_ofi1_DAC1_SetOutput 0005                                 __initialization 0027  
                    __end_of_EUSART1_Initialize 1000                                    __end_of_main 0E3A  
                       __end_of_DAC1_Initialize 0BA9                      __size_of_NEMS_stop_program 0011  
                   ?_INTERRUPT_InterruptManager 0076                               ?_NEMS_get_program 0076  
                                        ??_main 00AE                             __size_of_NEMS_timer 01BE  
                               ?_DAC1_SetOutput 0076                              ??_NEMS_get_program 0038  
                         ?_EUSART1_Transmit_ISR 0076                             _NEMS_calculate_ramp 04BD  
                       __end_of_TMR0_StartTimer 0BA1                                          ?__puts 0022  
                              ___awdiv@dividend 0028                                          _ANSELA 1F38  
                                        _ANSELB 1F43                                          _ANSELC 1F4E  
                    ??_NEMS_set_symmetry_factor 0029                                          _T0CON0 059E  
                                        _T0CON1 059F                                          _RC1REG 0119  
                                        _RC1STA 011D                                          i1l3003 01C4  
                                        i1l3013 020B                                          _ODCONA 1F3A  
                                        _ODCONB 1F45                                          i1l3051 0EEC  
                                        _ODCONC 1F50                                          _RC6PPS 1F26  
                                        i1l3061 0F08                                          _ODCONE 1F66  
                                        i1l3057 0EFA                    __size_of_EUSART1_is_rx_ready 0007  
                                        i1l2961 00D6                                          i1l2965 00FD  
                                        i1l2981 0165                                          i1l2993 019E  
                                        i1l2969 0139                                          i1l2979 015D  
                                        u150_25 01B5                                          u151_25 01DB  
                                        u143_25 007E                                          _INLVLA 1F3C  
                                        _INLVLB 1F47                                          _INLVLC 1F52  
                                        u152_24 0200                                          u152_25 01FF  
                                        u144_25 00BD                                          u145_25 00EE  
                                        u146_25 0114                                          _FVRCON 090C  
                                        u147_25 0151                                          u149_25 017A  
                                        _OSCFRQ 0893                    __size_of_EUSART1_is_tx_ready 0007  
                                        _TX1REG 011A                                          _TX1STA 011E  
                       DAC1_SetOutput@inputData 0020                            _NEMS_message_handler 071E  
                          __size_of_eeprom_read 0011                            ?_NEMS_calculate_ramp 0076  
                       ??_NEMS_set_contractions 0029                                          ___bmul 0C1E  
                                        ___wmul 0D67                                       ??___awdiv 002A  
                                     ??___lbmod 0021                                       ??___lwdiv 002A  
                      ?_EUSART1_SetErrorHandler 0020                                ?_TMR0_Initialize 0076  
                              ___awdiv@quotient 002D                      NEMS_message_handler@header 0045  
                          __end_of_eeprom_write 0E18                ??_EUSART1_SetOverrunErrorHandler 0022  
               ?_EUSART1_SetOverrunErrorHandler 0020                       i1DAC1_SetOutput@inputData 0076  
                                _PMD_Initialize 0BF7                                 ??_EUSART1_Write 0020  
      TMR0_SetInterruptHandler@InterruptHandler 0020                                 _eusart1RxBuffer 00A0  
                          __end_of__sprintf_u8b 0694                                 _eusart1TxBuffer 004E  
                          NEMS_calculate_ramp@i 003B                               _SYSTEM_Initialize 07EB  
                               ___lbmod@divisor 0020                         __end_of__initialization 004B  
                               ___lbmod@counter 0024                                 eeprom_read@addr 0020  
                            ?_SYSTEM_Initialize 0076                           ?_NEMS_message_handler 0076  
                           ___bmul@multiplicand 0020                  __size_of_EUSART1_RxDataHandler 0016  
                         ??_NEMS_calculate_ramp 002E                   __end_of_EUSART1_RxDataHandler 0C6A  
                                __pcstackCOMMON 0076                             ??_SYSTEM_Initialize 0023  
                              ?_DAC1_Initialize 0076                                       ?_TMR0_ISR 0076  
                                 __end_of__puts 0EAB                          __end_of_PMD_Initialize 0C01  
                          __end_of_EUSART1_Read 0E81                          ??_EUSART1_Transmit_ISR 0076  
                             __sprintf_u8b@mess 0037                     __end_of_EUSART1_Receive_ISR 0F0B  
                             ?_NEMS_set_ON_time 0076                               eeprom_write@value 0020  
                                       ??__puts 0024                                ?_TMR0_StartTimer 0076  
                     __end_of_SYSTEM_Initialize 0800                              ??_NEMS_set_ON_time 0029  
                                 _eusart1RxHead 0073                                   _eusart1TxHead 0075  
                                 _eusart1RxTail 0072                                      __pbssBANK0 0046  
                                    __pbssBANK1 00A0                                   _eusart1TxTail 0074  
             _EUSART1_TxDefaultInterruptHandler 006C                 ??_EUSART1_SetRxInterruptHandler 0022  
                               _NEMS_get_packet 0F7E                                    ??_NEMS_timer 0077  
                              i1_DAC1_SetOutput 0BAD                 __end_of_EUSART1_SetErrorHandler 0BDD  
                              ??_FVR_Initialize 0020                                      __pmaintext 0E18  
                                       ?___bmul 0020                __end_of_TMR0_SetInterruptHandler 0BB7  
                       __size_of_TMR0_StopTimer 0003                              _NEMS_set_amplitude 0C98  
                                       ?___wmul 0020                                      ??_TMR0_ISR 007C  
                                    __pintentry 0004                               ?_NEMS_set_ramp_up 0076  
                               ?_PMD_Initialize 0076                             ?_NEMS_set_amplitude 0076  
        __end_of_EUSART1_SetFramingErrorHandler 0BE5         __size_of_EUSART1_SetFramingErrorHandler 0008  
                _EUSART1_SetFramingErrorHandler 0BDD               __size_of_NEMS_recalculate_program 0169  
                            ??_NEMS_set_ramp_up 0029                       ?_NEMS_recalculate_program 0076  
                            __end_of_NEMS_timer 020D                              _NEMS_set_frequency 0CF4  
                  ?_EUSART1_DefaultErrorHandler 0076                                         _SP1BRGH 011C  
                                       _SP1BRGL 011B                                         _OSCCON1 088D  
                                       _OSCCON3 088F                                         _OSCSTAT 0890  
                                       _NVMADRH 081B                                         _NVMADRL 081A  
                                       _NVMDATH 081D                                         _OSCTUNE 0892  
                                       _NVMDATL 081C                                         _NVMCON2 081F  
                                       _SLRCONA 1F3B                                         _SLRCONB 1F46  
                                       _SLRCONC 1F51                                 _NEMS_initialize 0F3F  
                           ?_NEMS_set_frequency 0076                              _NEMS_set_ramp_down 0D22  
                          ??_NEMS_set_amplitude 0029                          ??_NEMS_message_handler 0043  
                           ?_NEMS_set_ramp_down 0076                           __size_of_eeprom_write 0021  
                               __size_of___bmul 0011                                         ___awdiv 079A  
                                       ___lbmod 0DD8                                 __size_of___wmul 001B  
                                       ___lwdiv 0F0B                            ??_NEMS_set_frequency 0029  
                              ??_DAC1_SetOutput 0020                             _EUSART1_is_rx_ready 0BC7  
                           _EUSART1_is_tx_ready 0BCE                                         __ptext1 07EB  
                                       __ptext2 0D9E                                         __ptext3 0BF7  
                                       __ptext4 0EAB                                         __ptext5 0BED  
                                       __ptext6 0BA9                                         __ptext7 0FBD  
                                       __ptext8 0BBC                                         __ptext9 0BB7  
                         _OSCILLATOR_Initialize 0BED                            ??_NEMS_set_ramp_down 0029  
                         __size_of__sprintf_u8b 008F                              _EUSART1_Initialize 0FBD  
                      ??_PIN_MANAGER_Initialize 0020                         __end_of_NEMS_get_packet 0FBD  
                 ??_EUSART1_DefaultErrorHandler 0077                                         _program 005B  
                    __size_of_SYSTEM_Initialize 0015                                         clrloop0 0C02  
                          end_of_initialization 004B                            ?_EUSART1_is_rx_ready 0076  
                    __end_of_NEMS_start_program 0DD8                             ?_EUSART1_Initialize 0076  
                          ?_EUSART1_is_tx_ready 0076                       __size_of_NEMS_get_program 0147  
                                  _eeprom_write 0DF7                     _EUSART1_OverrunErrorHandler 00AA  
                             _NEMS_load_program 0694           __end_of_EUSART1_SetRxInterruptHandler 0BBC  
        __size_of_EUSART1_SetRxInterruptHandler 0005                   _EUSART1_SetRxInterruptHandler 0BB7  
                            ?_NEMS_load_program 0076                           __size_of_EUSART1_Read 0024  
                __size_of_NEMS_set_contractions 0017                   __end_of_NEMS_set_contractions 0CF4  
                                  __sprintf_u8b 0605                            ??_EUSART1_Initialize 0022  
                      _TMR0_SetInterruptHandler 0BB2                             ??_NEMS_load_program 0028  
                       __end_of_NEMS_initialize 0F7E                                ___lbmod@dividend 0023  
                      ?_NEMS_set_phase_duration 0076                __size_of_EUSART1_SetErrorHandler 0008  
                           EUSART1_Write@txData 0021                           ??_EUSART1_is_rx_ready 0020  
                         ??_EUSART1_is_tx_ready 0020                                     ___lbmod@rem 0025  
                     __end_of_NEMS_load_program 071E                                   ??_eeprom_read 0020  
                                  _EUSART1_Read 0E5D            __size_of_EUSART1_DefaultErrorHandler 0003  
                          _timer0ReloadVal16bit 0068                                  _TMR0_StopTimer 0B9B  
             __size_of_NEMS_set_symmetry_factor 0017                       ?_NEMS_set_symmetry_factor 0076  
                                __end_of___bmul 0C2F                                  __end_of___wmul 0D82  
                             __size_of_TMR0_ISR 0014                          ?_OSCILLATOR_Initialize 0076  
                      __end_ofi1_DAC1_SetOutput 0BB2                             start_initialization 0027  
                             _NEMS_set_OFF_time 0C6A                        __size_of_TMR0_Initialize 001C  
               __size_of_PIN_MANAGER_Initialize 002E                                     __end_of_mux 10BE  
                              ?_NEMS_get_packet 0076                              ?_NEMS_set_OFF_time 0076  
 EUSART1_SetRxInterruptHandler@interruptHandler 0020   EUSART1_SetTxInterruptHandler@interruptHandler 0020  
                         __end_of_EUSART1_Write 0E5D                     __end_of_NEMS_calculate_ramp 0571  
                           ??_NEMS_set_OFF_time 0029                          __end_of_TMR0_StopTimer 0B9E  
                     __size_of_NEMS_set_ON_time 0017                __end_of_NEMS_recalculate_program 0376  
                                      ??___bmul 0021                                ??_PMD_Initialize 0020  
                                      ??___wmul 0024                             __end_of_eeprom_read 0C1E  
                         _EUSART1_RxDataHandler 0C54                  ?_EUSART1_SetRxInterruptHandler 0020  
                                _eusart1RxCount 0071                                ?_NEMS_initialize 0076  
               __end_of_NEMS_set_phase_duration 0D22                       __end_of_NEMS_set_OFF_time 0C81  
                                   __pbssBIGRAM 270A                        __size_of_DAC1_Initialize 0004  
                                   __pbssCOMMON 0070               _EUSART1_RxDefaultInterruptHandler 006A  
                                     ___latbits 0003                   __size_of_EUSART1_Transmit_ISR 001C  
                                 __pcstackBANK0 0020                                   __pcstackBANK1 00AE  
                             _NEMS_save_program 0571                                __sprintf_u8b@buf 0034  
                              __sprintf_u8b@aux 0033                                __sprintf_u8b@val 002F  
                     __size_of_NEMS_set_ramp_up 0017                                eeprom_write@addr 0021  
               ??_EUSART1_SetTxInterruptHandler 0022                                _NEMS_get_program 0376  
              ??_EUSART1_SetFramingErrorHandler 0022                 ?_EUSART1_SetFramingErrorHandler 0020  
                  __size_of_EUSART1_Receive_ISR 0032                              ?_NEMS_save_program 0076  
                    __size_of_NEMS_load_program 008A                           _TMR0_InterruptHandler 0066  
                                     __pnvBANK0 0066                                       __pnvBANK1 00A8  
                             _NEMS_set_channel1 0CAF                               _NEMS_set_channel2 0CC6  
                      __size_of_TMR0_StartTimer 0003                                 ?_TMR0_StopTimer 0076  
                           NEMS_get_program@aux 0039                                ___lwdiv@dividend 0028  
                        _PIN_MANAGER_Initialize 0EAB                              ?_NEMS_set_channel1 0076  
                            ?_NEMS_set_channel2 0076                             ??_NEMS_save_program 0028  
                                      ?___awdiv 0026                                        ?___lbmod 0020  
                                      ?___lwdiv 0026                                        _DAC1CON0 090E  
                                      _DAC1CON1 090F                             ??_NEMS_set_channel1 0029  
                           ??_NEMS_set_channel2 0029                    ??_INTERRUPT_InterruptManager 007C  
                                      _BAUD1CON 011F      __end_of_EUSART1_DefaultOverrunErrorHandler 0BA5  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0004            ??_EUSART1_DefaultOverrunErrorHandler 0076  
           ?_EUSART1_DefaultOverrunErrorHandler 0076              _EUSART1_DefaultOverrunErrorHandler 0BA1  
                          _EUSART1_ErrorHandler 00A8                         _EUSART1_SetErrorHandler 0BD5  
                     __end_of_NEMS_save_program 0605                                ___lwdiv@quotient 002B  
                                __size_of__puts 002A                               ??_TMR0_Initialize 0022  
                     __end_of_NEMS_set_channel1 0CC6                       __end_of_NEMS_set_channel2 0CDD  
                                ___wmul@product 0024                                        _LATAbits 0018  
       EUSART1_SetErrorHandler@interruptHandler 0020                     __size_of_NEMS_set_amplitude 0017  
                                     clear_ram0 0C01                                     __puts@index 0027  
                                   _eeprom_read 0C0D                           NEMS_save_program@addr 0029  
                                      _PIE0bits 0716                                        _PIE3bits 0719  
           __size_of_INTERRUPT_InterruptManager 0021                      ??_TMR0_SetInterruptHandler 0022  
                        NEMS_get_packet@message 0026                                        _PIR0bits 070C  
                                      _PIR3bits 070F                   __size_of_NEMS_message_handler 007C  
                                      _RX1DTPPS 1ECB                          ?_EUSART1_RxDataHandler 0076  
                            _NEMS_start_program 0DBA                                        _TMR0_ISR 0C40  
                   __size_of_NEMS_set_frequency 0017                        _NEMS_recalculate_program 020D  
                             ___wmul@multiplier 0020                             ?_NEMS_start_program 0076  
                    __size_of_NEMS_set_OFF_time 0017                         __size_of_FVR_Initialize 0004  
                   __size_of_NEMS_set_ramp_down 0017                               ??_DAC1_Initialize 0020  
              __end_of_NEMS_set_symmetry_factor 0D67                           EUSART1_Read@readValue 0021  
                          ??_NEMS_start_program 0042                                _NEMS_set_ON_time 0C81  
         __end_of_EUSART1_SetTxInterruptHandler 0BC1          __size_of_EUSART1_SetTxInterruptHandler 0005  
                 _EUSART1_SetTxInterruptHandler 0BBC                __size_of_NEMS_set_phase_duration 0017  
                       ??_OSCILLATOR_Initialize 0020                               ??_TMR0_StartTimer 0020  
                              __size_of___awdiv 0051                                __size_of___lbmod 001F  
                   __size_of_EUSART1_Initialize 0043                                __size_of___lwdiv 0034  
                         _NEMS_set_contractions 0CDD                       ??_EUSART1_SetErrorHandler 0022  
           __end_of_EUSART1_DefaultErrorHandler 0B9B                     _EUSART1_DefaultErrorHandler 0B98  
                   __end_of_EUSART1_is_rx_ready 0BCE                                      _T0CON0bits 059E  
                             ?i1_DAC1_SetOutput 0076                     __end_of_EUSART1_is_tx_ready 0BD5  
                               ___lwdiv@divisor 0026                         __size_of_DAC1_SetOutput 0006  
                    __size_of_NEMS_save_program 0094                                 ___lwdiv@counter 002D  
                                      __ptext10 0BE5                                        __ptext11 0BDD  
                                      __ptext20 0D67                                        __ptext12 0BD5  
                                      __ptext21 0F0B                                        __ptext13 0BA5  
                                      __ptext30 0C98                                        __ptext22 0D50  
                                      __ptext14 071E                                        __ptext31 0C81  
                                      __ptext23 0D39                                        __ptext15 0C2F  
                                      __ptext40 0376                                        __ptext32 0C6A  
                                      __ptext24 0D22                                        __ptext16 0DBA  
                                      __ptext41 0605                                        __ptext33 0F7E  
                                      __ptext25 0D0B                                        __ptext17 0B9E  
                                      __ptext50 0BC1                                        __ptext42 0DD8  
                                      __ptext34 0C1E                                        __ptext26 0CF4  
                                      __ptext18 020D                                        __ptext51 0BC7  
                                      __ptext43 079A                                        __ptext35 0E5D  
                                      __ptext27 0CDD                                        __ptext19 04BD  
                                      __ptext60 0002                                        __ptext44 0E81  
                                      __ptext36 0571                                        __ptext28 0CC6  
                                      __ptext61 0B98                                        __ptext53 0C40  
                                      __ptext45 0BCE                                        __ptext37 0DF7  
                                      __ptext29 0CAF                                        __ptext62 0C54  
                                      __ptext54 004F                                        __ptext46 0E3A  
                                      __ptext38 0694                                        __ptext55 0003  
                                      __ptext47 0F3F                                        __ptext39 0C0D  
                                      __ptext56 0BAD                                        __ptext48 0B9B  
                                      __ptext57 0D82                                        __ptext49 0BB2  
                                      __ptext58 0ED9                                        __ptext59 0BA1  
                            ??i1_DAC1_SetOutput 0076                                        __puts@pt 0022  
                                   _NEMS_states 0059                                _NEMS_set_ramp_up 0D39  
                    __size_of_NEMS_set_channel1 0017                      __size_of_NEMS_set_channel2 0017  
                             _NEMS_pulse_states 0070                                   __size_of_main 0022  
          __end_of_TMR0_DefaultInterruptHandler 0004           __size_of_TMR0_DefaultInterruptHandler 0001  
                  _TMR0_DefaultInterruptHandler 0003                                      _RC1STAbits 011D  
                             NEMS_get_packet@pt 0028  EUSART1_SetOverrunErrorHandler@interruptHandler 0020  
                                      int$flags 007E                                        _waveform 270A  
            __end_of_INTERRUPT_InterruptManager 0025                      _INTERRUPT_InterruptManager 0004  
                      __end_of_NEMS_get_program 04BD                     _EUSART1_FramingErrorHandler 00AC  
                           _EUSART1_Receive_ISR 0ED9                                _NEMS_wave_states 0058  
                                    _INTCONbits 000B                                     _NVMCON1bits 081E  
                         NEMS_load_program@addr 0029                                  __pstringtext10 10BE  
                                __pstringtext11 10CE                                  __pstringtext20 1127  
                                __pstringtext12 10DD                                  __pstringtext21 112E  
                                __pstringtext13 10EC                                  __pstringtext30 1169  
                                __pstringtext22 1135                                  __pstringtext14 10F8  
                                __pstringtext31 116F                                  __pstringtext23 113C  
                                __pstringtext15 1104                                  __pstringtext40 11A5  
                                __pstringtext32 1175                                  __pstringtext24 1143  
                                __pstringtext16 110B                                  __pstringtext41 11AB  
                                __pstringtext33 117B                                  __pstringtext25 114A  
                                __pstringtext17 1112                                  __pstringtext42 0000  
                                __pstringtext34 1181                                  __pstringtext26 1151  
                                __pstringtext18 1119                                  __pstringtext35 1187  
                                __pstringtext27 1157                                  __pstringtext19 1120  
                                __pstringtext36 118D                                  __pstringtext28 115D  
                                __pstringtext37 1193                                  __pstringtext29 1163  
                                __pstringtext38 1199                                  __pstringtext39 119F  
                                      intlevel1 0000                                ??_TMR0_StopTimer 0020  
                          ?_EUSART1_Receive_ISR 0076                                      _NEMS_nmux1 0057  
                                    _NEMS_pmux1 0056                                      _NEMS_timer 004F  
                       ?_PIN_MANAGER_Initialize 0076                        __size_of_NEMS_get_packet 003F  
        __end_of_EUSART1_SetOverrunErrorHandler 0BED         __size_of_EUSART1_SetOverrunErrorHandler 0008  
                _EUSART1_SetOverrunErrorHandler 0BE5                    __end_of_EUSART1_Transmit_ISR 0D9E  
                      _NEMS_set_symmetry_factor 0D50                   ?_TMR0_DefaultInterruptHandler 0076  
                  __size_of_NEMS_calculate_ramp 00B4  EUSART1_SetFramingErrorHandler@interruptHandler 0020  
                ?_EUSART1_SetTxInterruptHandler 0020                          ?_NEMS_set_contractions 0076  
                        __size_of_EUSART1_Write 0023                              _eusart1RxLastError 005A  
                                 __pstringtext1 10AE                                   __pstringtext2 1000  
                                 __pstringtext3 101C                                   __pstringtext4 1035  
                                 __pstringtext5 104E                                   __pstringtext6 1065  
                                 __pstringtext7 107A                                   __pstringtext8 108C  
                                 __pstringtext9 109D                               _NEMS_stop_program 0C2F  
                                _FVR_Initialize 0BA9                              ?_NEMS_stop_program 0076  
                               _TMR0_Initialize 0D9E                        __size_of_NEMS_initialize 003F  
                           ??_NEMS_stop_program 0028                           ??_EUSART1_Receive_ISR 0077  
                __end_of_PIN_MANAGER_Initialize 0ED9                                   ?_eeprom_write 0020  
                                    _STATUSbits 0003                                    ?_eeprom_read 0076  
                       ??_EUSART1_RxDataHandler 0076                         _NEMS_set_phase_duration 0D0B  
                    ??_NEMS_recalculate_program 003C  
