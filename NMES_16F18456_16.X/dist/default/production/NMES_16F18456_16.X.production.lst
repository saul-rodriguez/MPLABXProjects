

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Mar  8 15:07:04 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	16F18456
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	stringtext5,global,class=STRCODE,delta=2
    11                           	psect	stringtext6,global,class=STRCODE,delta=2
    12                           	psect	stringtext7,global,class=STRCODE,delta=2
    13                           	psect	stringtext8,global,class=STRCODE,delta=2
    14                           	psect	stringtext9,global,class=STRCODE,delta=2
    15                           	psect	stringtext10,global,class=STRCODE,delta=2
    16                           	psect	stringtext11,global,class=STRCODE,delta=2
    17                           	psect	stringtext12,global,class=STRCODE,delta=2
    18                           	psect	stringtext13,global,class=STRCODE,delta=2
    19                           	psect	stringtext14,global,class=STRCODE,delta=2
    20                           	psect	stringtext15,global,class=STRCODE,delta=2
    21                           	psect	stringtext16,global,class=STRCODE,delta=2
    22                           	psect	stringtext17,global,class=STRCODE,delta=2
    23                           	psect	stringtext18,global,class=STRCODE,delta=2
    24                           	psect	stringtext19,global,class=STRCODE,delta=2
    25                           	psect	stringtext20,global,class=STRCODE,delta=2
    26                           	psect	stringtext21,global,class=STRCODE,delta=2
    27                           	psect	stringtext22,global,class=STRCODE,delta=2
    28                           	psect	stringtext23,global,class=STRCODE,delta=2
    29                           	psect	stringtext24,global,class=STRCODE,delta=2
    30                           	psect	stringtext25,global,class=STRCODE,delta=2
    31                           	psect	stringtext26,global,class=STRCODE,delta=2
    32                           	psect	stringtext27,global,class=STRCODE,delta=2
    33                           	psect	stringtext28,global,class=STRCODE,delta=2
    34                           	psect	stringtext29,global,class=STRCODE,delta=2
    35                           	psect	stringtext30,global,class=STRCODE,delta=2
    36                           	psect	stringtext31,global,class=STRCODE,delta=2
    37                           	psect	stringtext32,global,class=STRCODE,delta=2
    38                           	psect	stringtext33,global,class=STRCODE,delta=2
    39                           	psect	stringtext34,global,class=STRCODE,delta=2
    40                           	psect	stringtext35,global,class=STRCODE,delta=2
    41                           	psect	stringtext36,global,class=STRCODE,delta=2
    42                           	psect	stringtext37,global,class=STRCODE,delta=2
    43                           	psect	stringtext38,global,class=STRCODE,delta=2
    44                           	psect	stringtext39,global,class=STRCODE,delta=2
    45                           	psect	stringtext40,global,class=STRCODE,delta=2
    46                           	psect	stringtext41,global,class=STRCODE,delta=2
    47                           	psect	stringtext42,global,class=STRCODE,delta=2
    48                           	psect	cinit,global,class=CODE,merge=1,delta=2
    49                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    50                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    51                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    52                           	psect	clrtext,global,class=CODE,delta=2
    53                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    54                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    55                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    56                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    57                           	psect	text1,local,class=CODE,merge=1,delta=2
    58                           	psect	text2,local,class=CODE,merge=1,delta=2
    59                           	psect	text3,local,class=CODE,merge=1,delta=2
    60                           	psect	text4,local,class=CODE,merge=1,delta=2
    61                           	psect	text5,local,class=CODE,merge=1,delta=2
    62                           	psect	text6,local,class=CODE,merge=1,delta=2
    63                           	psect	text7,local,class=CODE,merge=1,delta=2
    64                           	psect	text8,local,class=CODE,merge=1,delta=2
    65                           	psect	text9,local,class=CODE,merge=1,delta=2
    66                           	psect	text10,local,class=CODE,merge=1,delta=2
    67                           	psect	text11,local,class=CODE,merge=1,delta=2
    68                           	psect	text12,local,class=CODE,merge=1,delta=2
    69                           	psect	text13,local,class=CODE,merge=1,delta=2
    70                           	psect	text14,local,class=CODE,merge=1,delta=2
    71                           	psect	text15,local,class=CODE,merge=1,delta=2
    72                           	psect	text16,local,class=CODE,merge=1,delta=2
    73                           	psect	text17,local,class=CODE,merge=1,delta=2
    74                           	psect	text18,local,class=CODE,merge=1,delta=2
    75                           	psect	text19,local,class=CODE,merge=1,delta=2
    76                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    77                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    78                           	psect	text22,local,class=CODE,merge=1,delta=2
    79                           	psect	text23,local,class=CODE,merge=1,delta=2
    80                           	psect	text24,local,class=CODE,merge=1,delta=2
    81                           	psect	text25,local,class=CODE,merge=1,delta=2
    82                           	psect	text26,local,class=CODE,merge=1,delta=2
    83                           	psect	text27,local,class=CODE,merge=1,delta=2
    84                           	psect	text28,local,class=CODE,merge=1,delta=2
    85                           	psect	text29,local,class=CODE,merge=1,delta=2
    86                           	psect	text30,local,class=CODE,merge=1,delta=2
    87                           	psect	text31,local,class=CODE,merge=1,delta=2
    88                           	psect	text32,local,class=CODE,merge=1,delta=2
    89                           	psect	text33,local,class=CODE,merge=1,delta=2
    90                           	psect	text34,local,class=CODE,merge=1,delta=2,group=1
    91                           	psect	text35,local,class=CODE,merge=1,delta=2
    92                           	psect	text36,local,class=CODE,merge=1,delta=2
    93                           	psect	text37,local,class=CODE,merge=1,delta=2
    94                           	psect	text38,local,class=CODE,merge=1,delta=2
    95                           	psect	text39,local,class=CODE,merge=1,delta=2
    96                           	psect	text40,local,class=CODE,merge=1,delta=2
    97                           	psect	text41,local,class=CODE,merge=1,delta=2
    98                           	psect	text42,local,class=CODE,merge=1,delta=2,group=1
    99                           	psect	text43,local,class=CODE,merge=1,delta=2,group=1
   100                           	psect	text44,local,class=CODE,merge=1,delta=2
   101                           	psect	text45,local,class=CODE,merge=1,delta=2
   102                           	psect	text46,local,class=CODE,merge=1,delta=2
   103                           	psect	text47,local,class=CODE,merge=1,delta=2
   104                           	psect	text48,local,class=CODE,merge=1,delta=2
   105                           	psect	text49,local,class=CODE,merge=1,delta=2
   106                           	psect	text50,local,class=CODE,merge=1,delta=2
   107                           	psect	text51,local,class=CODE,merge=1,delta=2
   108                           	psect	intentry,global,class=CODE,delta=2
   109                           	psect	text53,local,class=CODE,merge=1,delta=2
   110                           	psect	text54,local,class=CODE,merge=1,delta=2
   111                           	psect	text55,local,class=CODE,merge=1,delta=2
   112                           	psect	text56,local,class=CODE,merge=1,delta=2
   113                           	psect	text57,local,class=CODE,merge=1,delta=2
   114                           	psect	text58,local,class=CODE,merge=1,delta=2
   115                           	psect	text59,local,class=CODE,merge=1,delta=2
   116                           	psect	text60,local,class=CODE,merge=1,delta=2
   117                           	psect	text61,local,class=CODE,merge=1,delta=2
   118                           	psect	text62,local,class=CODE,merge=1,delta=2
   119                           	dabs	1,0xCA0,32
   120                           	dabs	1,0xC20,80
   121                           	dabs	1,0xBA0,80
   122                           	dabs	1,0xB4A,38
   123                           	dabs	1,0x270A,0,_waveform
   124                           	dabs	1,0x7E,2
   125  0000                     
   126                           ; Version 2.10
   127                           ; Generated 31/07/2019 GMT
   128                           ; 
   129                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   130                           ; All rights reserved.
   131                           ; 
   132                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   133                           ; 
   134                           ; Redistribution and use in source and binary forms, with or without modification, are
   135                           ; permitted provided that the following conditions are met:
   136                           ; 
   137                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   138                           ;        conditions and the following disclaimer.
   139                           ; 
   140                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   141                           ;        of conditions and the following disclaimer in the documentation and/or other
   142                           ;        materials provided with the distribution.
   143                           ; 
   144                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   145                           ;        software without specific prior written permission.
   146                           ; 
   147                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   148                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   149                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   150                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   151                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   152                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   153                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   154                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   155                           ; 
   156                           ; 
   157                           ; Code-generator required, PIC16F18456 Definitions
   158                           ; 
   159                           ; SFR Addresses
   160  0000                     	;# 
   161  0001                     	;# 
   162  0002                     	;# 
   163  0003                     	;# 
   164  0004                     	;# 
   165  0005                     	;# 
   166  0006                     	;# 
   167  0007                     	;# 
   168  0008                     	;# 
   169  0009                     	;# 
   170  000A                     	;# 
   171  000B                     	;# 
   172  000C                     	;# 
   173  000D                     	;# 
   174  000E                     	;# 
   175  0010                     	;# 
   176  0012                     	;# 
   177  0013                     	;# 
   178  0014                     	;# 
   179  0016                     	;# 
   180  0018                     	;# 
   181  0019                     	;# 
   182  001A                     	;# 
   183  001C                     	;# 
   184  008C                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  008E                     	;# 
   189  008F                     	;# 
   190  0090                     	;# 
   191  0090                     	;# 
   192  0091                     	;# 
   193  0092                     	;# 
   194  0092                     	;# 
   195  0093                     	;# 
   196  0094                     	;# 
   197  0094                     	;# 
   198  0095                     	;# 
   199  0096                     	;# 
   200  0096                     	;# 
   201  0097                     	;# 
   202  0098                     	;# 
   203  0099                     	;# 
   204  009A                     	;# 
   205  009B                     	;# 
   206  009B                     	;# 
   207  009C                     	;# 
   208  009D                     	;# 
   209  009D                     	;# 
   210  009E                     	;# 
   211  009F                     	;# 
   212  010C                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  010F                     	;# 
   217  010F                     	;# 
   218  0110                     	;# 
   219  0111                     	;# 
   220  0112                     	;# 
   221  0113                     	;# 
   222  0114                     	;# 
   223  0115                     	;# 
   224  0116                     	;# 
   225  0117                     	;# 
   226  0118                     	;# 
   227  0119                     	;# 
   228  0119                     	;# 
   229  0119                     	;# 
   230  011A                     	;# 
   231  011A                     	;# 
   232  011A                     	;# 
   233  011B                     	;# 
   234  011B                     	;# 
   235  011B                     	;# 
   236  011B                     	;# 
   237  011B                     	;# 
   238  011C                     	;# 
   239  011C                     	;# 
   240  011C                     	;# 
   241  011D                     	;# 
   242  011D                     	;# 
   243  011D                     	;# 
   244  011E                     	;# 
   245  011E                     	;# 
   246  011E                     	;# 
   247  011F                     	;# 
   248  011F                     	;# 
   249  011F                     	;# 
   250  011F                     	;# 
   251  011F                     	;# 
   252  018C                     	;# 
   253  018D                     	;# 
   254  018E                     	;# 
   255  018F                     	;# 
   256  0190                     	;# 
   257  0191                     	;# 
   258  0192                     	;# 
   259  0196                     	;# 
   260  0197                     	;# 
   261  0198                     	;# 
   262  0199                     	;# 
   263  019A                     	;# 
   264  019B                     	;# 
   265  019C                     	;# 
   266  020C                     	;# 
   267  020D                     	;# 
   268  020E                     	;# 
   269  020E                     	;# 
   270  020F                     	;# 
   271  020F                     	;# 
   272  0210                     	;# 
   273  0210                     	;# 
   274  0211                     	;# 
   275  0211                     	;# 
   276  0212                     	;# 
   277  0213                     	;# 
   278  0214                     	;# 
   279  0214                     	;# 
   280  0215                     	;# 
   281  0215                     	;# 
   282  0216                     	;# 
   283  0216                     	;# 
   284  0217                     	;# 
   285  0217                     	;# 
   286  0218                     	;# 
   287  0219                     	;# 
   288  021A                     	;# 
   289  021A                     	;# 
   290  021B                     	;# 
   291  021B                     	;# 
   292  021C                     	;# 
   293  021C                     	;# 
   294  021D                     	;# 
   295  021D                     	;# 
   296  021E                     	;# 
   297  021F                     	;# 
   298  028C                     	;# 
   299  028C                     	;# 
   300  028D                     	;# 
   301  028D                     	;# 
   302  028E                     	;# 
   303  028F                     	;# 
   304  0290                     	;# 
   305  0291                     	;# 
   306  0292                     	;# 
   307  0292                     	;# 
   308  0293                     	;# 
   309  0293                     	;# 
   310  0294                     	;# 
   311  0295                     	;# 
   312  0296                     	;# 
   313  0297                     	;# 
   314  0298                     	;# 
   315  0298                     	;# 
   316  0299                     	;# 
   317  0299                     	;# 
   318  029A                     	;# 
   319  029B                     	;# 
   320  029C                     	;# 
   321  029D                     	;# 
   322  029F                     	;# 
   323  030C                     	;# 
   324  030C                     	;# 
   325  030D                     	;# 
   326  030E                     	;# 
   327  030F                     	;# 
   328  0310                     	;# 
   329  0310                     	;# 
   330  0311                     	;# 
   331  0312                     	;# 
   332  0313                     	;# 
   333  0314                     	;# 
   334  0314                     	;# 
   335  0315                     	;# 
   336  0316                     	;# 
   337  0317                     	;# 
   338  0318                     	;# 
   339  0318                     	;# 
   340  0319                     	;# 
   341  031A                     	;# 
   342  031B                     	;# 
   343  031C                     	;# 
   344  031C                     	;# 
   345  031D                     	;# 
   346  031E                     	;# 
   347  031F                     	;# 
   348  038C                     	;# 
   349  038C                     	;# 
   350  038D                     	;# 
   351  038E                     	;# 
   352  0390                     	;# 
   353  0390                     	;# 
   354  0391                     	;# 
   355  0392                     	;# 
   356  048C                     	;# 
   357  048C                     	;# 
   358  048D                     	;# 
   359  048E                     	;# 
   360  048F                     	;# 
   361  048F                     	;# 
   362  0490                     	;# 
   363  0491                     	;# 
   364  0492                     	;# 
   365  0492                     	;# 
   366  0493                     	;# 
   367  0494                     	;# 
   368  0495                     	;# 
   369  0495                     	;# 
   370  0496                     	;# 
   371  0497                     	;# 
   372  0498                     	;# 
   373  0499                     	;# 
   374  049A                     	;# 
   375  049B                     	;# 
   376  049C                     	;# 
   377  049D                     	;# 
   378  050C                     	;# 
   379  050C                     	;# 
   380  050D                     	;# 
   381  050E                     	;# 
   382  050F                     	;# 
   383  050F                     	;# 
   384  0510                     	;# 
   385  0511                     	;# 
   386  0512                     	;# 
   387  0512                     	;# 
   388  0513                     	;# 
   389  0514                     	;# 
   390  0515                     	;# 
   391  0515                     	;# 
   392  0516                     	;# 
   393  0517                     	;# 
   394  0518                     	;# 
   395  0519                     	;# 
   396  051A                     	;# 
   397  051B                     	;# 
   398  051C                     	;# 
   399  051D                     	;# 
   400  058C                     	;# 
   401  058C                     	;# 
   402  058D                     	;# 
   403  058E                     	;# 
   404  058F                     	;# 
   405  058F                     	;# 
   406  0590                     	;# 
   407  0591                     	;# 
   408  0592                     	;# 
   409  0593                     	;# 
   410  059C                     	;# 
   411  059C                     	;# 
   412  059D                     	;# 
   413  059D                     	;# 
   414  059E                     	;# 
   415  059F                     	;# 
   416  060C                     	;# 
   417  060C                     	;# 
   418  060D                     	;# 
   419  060D                     	;# 
   420  060E                     	;# 
   421  060F                     	;# 
   422  0610                     	;# 
   423  0611                     	;# 
   424  0612                     	;# 
   425  0613                     	;# 
   426  0614                     	;# 
   427  0616                     	;# 
   428  0616                     	;# 
   429  0617                     	;# 
   430  0617                     	;# 
   431  0618                     	;# 
   432  0619                     	;# 
   433  061A                     	;# 
   434  061B                     	;# 
   435  061C                     	;# 
   436  061D                     	;# 
   437  061E                     	;# 
   438  068C                     	;# 
   439  068D                     	;# 
   440  068E                     	;# 
   441  068F                     	;# 
   442  0690                     	;# 
   443  0691                     	;# 
   444  0692                     	;# 
   445  0693                     	;# 
   446  0694                     	;# 
   447  070C                     	;# 
   448  070D                     	;# 
   449  070E                     	;# 
   450  070F                     	;# 
   451  0710                     	;# 
   452  0711                     	;# 
   453  0712                     	;# 
   454  0713                     	;# 
   455  0714                     	;# 
   456  0716                     	;# 
   457  0717                     	;# 
   458  0718                     	;# 
   459  0719                     	;# 
   460  071A                     	;# 
   461  071B                     	;# 
   462  071C                     	;# 
   463  071D                     	;# 
   464  071E                     	;# 
   465  0796                     	;# 
   466  0797                     	;# 
   467  0798                     	;# 
   468  0799                     	;# 
   469  079A                     	;# 
   470  079B                     	;# 
   471  079C                     	;# 
   472  079D                     	;# 
   473  080C                     	;# 
   474  080D                     	;# 
   475  080E                     	;# 
   476  080F                     	;# 
   477  0810                     	;# 
   478  0811                     	;# 
   479  0812                     	;# 
   480  0813                     	;# 
   481  0814                     	;# 
   482  081A                     	;# 
   483  081A                     	;# 
   484  081B                     	;# 
   485  081C                     	;# 
   486  081C                     	;# 
   487  081D                     	;# 
   488  081E                     	;# 
   489  081F                     	;# 
   490  088C                     	;# 
   491  088D                     	;# 
   492  088E                     	;# 
   493  088F                     	;# 
   494  0890                     	;# 
   495  0891                     	;# 
   496  0892                     	;# 
   497  0893                     	;# 
   498  0895                     	;# 
   499  0896                     	;# 
   500  0897                     	;# 
   501  0898                     	;# 
   502  0899                     	;# 
   503  089A                     	;# 
   504  089B                     	;# 
   505  090C                     	;# 
   506  090E                     	;# 
   507  090F                     	;# 
   508  091F                     	;# 
   509  098F                     	;# 
   510  098F                     	;# 
   511  0990                     	;# 
   512  0991                     	;# 
   513  0992                     	;# 
   514  0993                     	;# 
   515  0994                     	;# 
   516  0995                     	;# 
   517  0996                     	;# 
   518  0997                     	;# 
   519  0A19                     	;# 
   520  0A19                     	;# 
   521  0A1A                     	;# 
   522  0A1A                     	;# 
   523  0A1B                     	;# 
   524  0A1B                     	;# 
   525  0A1B                     	;# 
   526  0A1C                     	;# 
   527  0A1C                     	;# 
   528  0A1D                     	;# 
   529  0A1D                     	;# 
   530  0A1E                     	;# 
   531  0A1E                     	;# 
   532  0A1F                     	;# 
   533  0A1F                     	;# 
   534  0A1F                     	;# 
   535  1E0F                     	;# 
   536  1E10                     	;# 
   537  1E11                     	;# 
   538  1E12                     	;# 
   539  1E13                     	;# 
   540  1E14                     	;# 
   541  1E15                     	;# 
   542  1E16                     	;# 
   543  1E17                     	;# 
   544  1E18                     	;# 
   545  1E19                     	;# 
   546  1E1A                     	;# 
   547  1E1B                     	;# 
   548  1E1C                     	;# 
   549  1E1D                     	;# 
   550  1E1E                     	;# 
   551  1E1F                     	;# 
   552  1E20                     	;# 
   553  1E21                     	;# 
   554  1E22                     	;# 
   555  1E23                     	;# 
   556  1E24                     	;# 
   557  1E25                     	;# 
   558  1E26                     	;# 
   559  1E27                     	;# 
   560  1E28                     	;# 
   561  1E29                     	;# 
   562  1E2A                     	;# 
   563  1E2B                     	;# 
   564  1E2C                     	;# 
   565  1E2D                     	;# 
   566  1E2E                     	;# 
   567  1E2F                     	;# 
   568  1E30                     	;# 
   569  1E31                     	;# 
   570  1E32                     	;# 
   571  1E33                     	;# 
   572  1E34                     	;# 
   573  1E35                     	;# 
   574  1E36                     	;# 
   575  1E37                     	;# 
   576  1E8F                     	;# 
   577  1E90                     	;# 
   578  1E91                     	;# 
   579  1E92                     	;# 
   580  1E93                     	;# 
   581  1E94                     	;# 
   582  1E95                     	;# 
   583  1E96                     	;# 
   584  1E97                     	;# 
   585  1E9C                     	;# 
   586  1E9D                     	;# 
   587  1E9E                     	;# 
   588  1EA1                     	;# 
   589  1EA2                     	;# 
   590  1EA3                     	;# 
   591  1EA4                     	;# 
   592  1EA5                     	;# 
   593  1EA9                     	;# 
   594  1EAA                     	;# 
   595  1EAB                     	;# 
   596  1EAC                     	;# 
   597  1EB1                     	;# 
   598  1EB2                     	;# 
   599  1EB3                     	;# 
   600  1EB8                     	;# 
   601  1EB9                     	;# 
   602  1EBA                     	;# 
   603  1EBB                     	;# 
   604  1EBC                     	;# 
   605  1EBD                     	;# 
   606  1EBE                     	;# 
   607  1EC3                     	;# 
   608  1EC5                     	;# 
   609  1EC6                     	;# 
   610  1EC7                     	;# 
   611  1EC8                     	;# 
   612  1EC9                     	;# 
   613  1ECA                     	;# 
   614  1ECB                     	;# 
   615  1ECB                     	;# 
   616  1ECB                     	;# 
   617  1ECC                     	;# 
   618  1ECC                     	;# 
   619  1ECC                     	;# 
   620  1ECD                     	;# 
   621  1ECD                     	;# 
   622  1ECE                     	;# 
   623  1ECE                     	;# 
   624  1F10                     	;# 
   625  1F11                     	;# 
   626  1F12                     	;# 
   627  1F13                     	;# 
   628  1F14                     	;# 
   629  1F15                     	;# 
   630  1F16                     	;# 
   631  1F17                     	;# 
   632  1F18                     	;# 
   633  1F19                     	;# 
   634  1F1A                     	;# 
   635  1F1B                     	;# 
   636  1F1C                     	;# 
   637  1F1D                     	;# 
   638  1F1E                     	;# 
   639  1F1F                     	;# 
   640  1F20                     	;# 
   641  1F21                     	;# 
   642  1F22                     	;# 
   643  1F23                     	;# 
   644  1F24                     	;# 
   645  1F25                     	;# 
   646  1F26                     	;# 
   647  1F27                     	;# 
   648  1F38                     	;# 
   649  1F39                     	;# 
   650  1F3A                     	;# 
   651  1F3B                     	;# 
   652  1F3C                     	;# 
   653  1F3D                     	;# 
   654  1F3E                     	;# 
   655  1F3F                     	;# 
   656  1F43                     	;# 
   657  1F44                     	;# 
   658  1F45                     	;# 
   659  1F46                     	;# 
   660  1F47                     	;# 
   661  1F48                     	;# 
   662  1F49                     	;# 
   663  1F4A                     	;# 
   664  1F4E                     	;# 
   665  1F4F                     	;# 
   666  1F50                     	;# 
   667  1F51                     	;# 
   668  1F52                     	;# 
   669  1F53                     	;# 
   670  1F54                     	;# 
   671  1F55                     	;# 
   672  1F65                     	;# 
   673  1F66                     	;# 
   674  1F67                     	;# 
   675  1F68                     	;# 
   676  1F69                     	;# 
   677  1F6A                     	;# 
   678  1F6B                     	;# 
   679  1FE4                     	;# 
   680  1FE5                     	;# 
   681  1FE6                     	;# 
   682  1FE7                     	;# 
   683  1FE8                     	;# 
   684  1FE8                     	;# 
   685  1FE9                     	;# 
   686  1FEA                     	;# 
   687  1FEB                     	;# 
   688  1FED                     	;# 
   689  1FEE                     	;# 
   690  1FEF                     	;# 
   691  0000                     	;# 
   692  0001                     	;# 
   693  0002                     	;# 
   694  0003                     	;# 
   695  0004                     	;# 
   696  0005                     	;# 
   697  0006                     	;# 
   698  0007                     	;# 
   699  0008                     	;# 
   700  0009                     	;# 
   701  000A                     	;# 
   702  000B                     	;# 
   703  000C                     	;# 
   704  000D                     	;# 
   705  000E                     	;# 
   706  0010                     	;# 
   707  0012                     	;# 
   708  0013                     	;# 
   709  0014                     	;# 
   710  0016                     	;# 
   711  0018                     	;# 
   712  0019                     	;# 
   713  001A                     	;# 
   714  001C                     	;# 
   715  008C                     	;# 
   716  008C                     	;# 
   717  008D                     	;# 
   718  008E                     	;# 
   719  008E                     	;# 
   720  008F                     	;# 
   721  0090                     	;# 
   722  0090                     	;# 
   723  0091                     	;# 
   724  0092                     	;# 
   725  0092                     	;# 
   726  0093                     	;# 
   727  0094                     	;# 
   728  0094                     	;# 
   729  0095                     	;# 
   730  0096                     	;# 
   731  0096                     	;# 
   732  0097                     	;# 
   733  0098                     	;# 
   734  0099                     	;# 
   735  009A                     	;# 
   736  009B                     	;# 
   737  009B                     	;# 
   738  009C                     	;# 
   739  009D                     	;# 
   740  009D                     	;# 
   741  009E                     	;# 
   742  009F                     	;# 
   743  010C                     	;# 
   744  010C                     	;# 
   745  010D                     	;# 
   746  010E                     	;# 
   747  010F                     	;# 
   748  010F                     	;# 
   749  0110                     	;# 
   750  0111                     	;# 
   751  0112                     	;# 
   752  0113                     	;# 
   753  0114                     	;# 
   754  0115                     	;# 
   755  0116                     	;# 
   756  0117                     	;# 
   757  0118                     	;# 
   758  0119                     	;# 
   759  0119                     	;# 
   760  0119                     	;# 
   761  011A                     	;# 
   762  011A                     	;# 
   763  011A                     	;# 
   764  011B                     	;# 
   765  011B                     	;# 
   766  011B                     	;# 
   767  011B                     	;# 
   768  011B                     	;# 
   769  011C                     	;# 
   770  011C                     	;# 
   771  011C                     	;# 
   772  011D                     	;# 
   773  011D                     	;# 
   774  011D                     	;# 
   775  011E                     	;# 
   776  011E                     	;# 
   777  011E                     	;# 
   778  011F                     	;# 
   779  011F                     	;# 
   780  011F                     	;# 
   781  011F                     	;# 
   782  011F                     	;# 
   783  018C                     	;# 
   784  018D                     	;# 
   785  018E                     	;# 
   786  018F                     	;# 
   787  0190                     	;# 
   788  0191                     	;# 
   789  0192                     	;# 
   790  0196                     	;# 
   791  0197                     	;# 
   792  0198                     	;# 
   793  0199                     	;# 
   794  019A                     	;# 
   795  019B                     	;# 
   796  019C                     	;# 
   797  020C                     	;# 
   798  020D                     	;# 
   799  020E                     	;# 
   800  020E                     	;# 
   801  020F                     	;# 
   802  020F                     	;# 
   803  0210                     	;# 
   804  0210                     	;# 
   805  0211                     	;# 
   806  0211                     	;# 
   807  0212                     	;# 
   808  0213                     	;# 
   809  0214                     	;# 
   810  0214                     	;# 
   811  0215                     	;# 
   812  0215                     	;# 
   813  0216                     	;# 
   814  0216                     	;# 
   815  0217                     	;# 
   816  0217                     	;# 
   817  0218                     	;# 
   818  0219                     	;# 
   819  021A                     	;# 
   820  021A                     	;# 
   821  021B                     	;# 
   822  021B                     	;# 
   823  021C                     	;# 
   824  021C                     	;# 
   825  021D                     	;# 
   826  021D                     	;# 
   827  021E                     	;# 
   828  021F                     	;# 
   829  028C                     	;# 
   830  028C                     	;# 
   831  028D                     	;# 
   832  028D                     	;# 
   833  028E                     	;# 
   834  028F                     	;# 
   835  0290                     	;# 
   836  0291                     	;# 
   837  0292                     	;# 
   838  0292                     	;# 
   839  0293                     	;# 
   840  0293                     	;# 
   841  0294                     	;# 
   842  0295                     	;# 
   843  0296                     	;# 
   844  0297                     	;# 
   845  0298                     	;# 
   846  0298                     	;# 
   847  0299                     	;# 
   848  0299                     	;# 
   849  029A                     	;# 
   850  029B                     	;# 
   851  029C                     	;# 
   852  029D                     	;# 
   853  029F                     	;# 
   854  030C                     	;# 
   855  030C                     	;# 
   856  030D                     	;# 
   857  030E                     	;# 
   858  030F                     	;# 
   859  0310                     	;# 
   860  0310                     	;# 
   861  0311                     	;# 
   862  0312                     	;# 
   863  0313                     	;# 
   864  0314                     	;# 
   865  0314                     	;# 
   866  0315                     	;# 
   867  0316                     	;# 
   868  0317                     	;# 
   869  0318                     	;# 
   870  0318                     	;# 
   871  0319                     	;# 
   872  031A                     	;# 
   873  031B                     	;# 
   874  031C                     	;# 
   875  031C                     	;# 
   876  031D                     	;# 
   877  031E                     	;# 
   878  031F                     	;# 
   879  038C                     	;# 
   880  038C                     	;# 
   881  038D                     	;# 
   882  038E                     	;# 
   883  0390                     	;# 
   884  0390                     	;# 
   885  0391                     	;# 
   886  0392                     	;# 
   887  048C                     	;# 
   888  048C                     	;# 
   889  048D                     	;# 
   890  048E                     	;# 
   891  048F                     	;# 
   892  048F                     	;# 
   893  0490                     	;# 
   894  0491                     	;# 
   895  0492                     	;# 
   896  0492                     	;# 
   897  0493                     	;# 
   898  0494                     	;# 
   899  0495                     	;# 
   900  0495                     	;# 
   901  0496                     	;# 
   902  0497                     	;# 
   903  0498                     	;# 
   904  0499                     	;# 
   905  049A                     	;# 
   906  049B                     	;# 
   907  049C                     	;# 
   908  049D                     	;# 
   909  050C                     	;# 
   910  050C                     	;# 
   911  050D                     	;# 
   912  050E                     	;# 
   913  050F                     	;# 
   914  050F                     	;# 
   915  0510                     	;# 
   916  0511                     	;# 
   917  0512                     	;# 
   918  0512                     	;# 
   919  0513                     	;# 
   920  0514                     	;# 
   921  0515                     	;# 
   922  0515                     	;# 
   923  0516                     	;# 
   924  0517                     	;# 
   925  0518                     	;# 
   926  0519                     	;# 
   927  051A                     	;# 
   928  051B                     	;# 
   929  051C                     	;# 
   930  051D                     	;# 
   931  058C                     	;# 
   932  058C                     	;# 
   933  058D                     	;# 
   934  058E                     	;# 
   935  058F                     	;# 
   936  058F                     	;# 
   937  0590                     	;# 
   938  0591                     	;# 
   939  0592                     	;# 
   940  0593                     	;# 
   941  059C                     	;# 
   942  059C                     	;# 
   943  059D                     	;# 
   944  059D                     	;# 
   945  059E                     	;# 
   946  059F                     	;# 
   947  060C                     	;# 
   948  060C                     	;# 
   949  060D                     	;# 
   950  060D                     	;# 
   951  060E                     	;# 
   952  060F                     	;# 
   953  0610                     	;# 
   954  0611                     	;# 
   955  0612                     	;# 
   956  0613                     	;# 
   957  0614                     	;# 
   958  0616                     	;# 
   959  0616                     	;# 
   960  0617                     	;# 
   961  0617                     	;# 
   962  0618                     	;# 
   963  0619                     	;# 
   964  061A                     	;# 
   965  061B                     	;# 
   966  061C                     	;# 
   967  061D                     	;# 
   968  061E                     	;# 
   969  068C                     	;# 
   970  068D                     	;# 
   971  068E                     	;# 
   972  068F                     	;# 
   973  0690                     	;# 
   974  0691                     	;# 
   975  0692                     	;# 
   976  0693                     	;# 
   977  0694                     	;# 
   978  070C                     	;# 
   979  070D                     	;# 
   980  070E                     	;# 
   981  070F                     	;# 
   982  0710                     	;# 
   983  0711                     	;# 
   984  0712                     	;# 
   985  0713                     	;# 
   986  0714                     	;# 
   987  0716                     	;# 
   988  0717                     	;# 
   989  0718                     	;# 
   990  0719                     	;# 
   991  071A                     	;# 
   992  071B                     	;# 
   993  071C                     	;# 
   994  071D                     	;# 
   995  071E                     	;# 
   996  0796                     	;# 
   997  0797                     	;# 
   998  0798                     	;# 
   999  0799                     	;# 
  1000  079A                     	;# 
  1001  079B                     	;# 
  1002  079C                     	;# 
  1003  079D                     	;# 
  1004  080C                     	;# 
  1005  080D                     	;# 
  1006  080E                     	;# 
  1007  080F                     	;# 
  1008  0810                     	;# 
  1009  0811                     	;# 
  1010  0812                     	;# 
  1011  0813                     	;# 
  1012  0814                     	;# 
  1013  081A                     	;# 
  1014  081A                     	;# 
  1015  081B                     	;# 
  1016  081C                     	;# 
  1017  081C                     	;# 
  1018  081D                     	;# 
  1019  081E                     	;# 
  1020  081F                     	;# 
  1021  088C                     	;# 
  1022  088D                     	;# 
  1023  088E                     	;# 
  1024  088F                     	;# 
  1025  0890                     	;# 
  1026  0891                     	;# 
  1027  0892                     	;# 
  1028  0893                     	;# 
  1029  0895                     	;# 
  1030  0896                     	;# 
  1031  0897                     	;# 
  1032  0898                     	;# 
  1033  0899                     	;# 
  1034  089A                     	;# 
  1035  089B                     	;# 
  1036  090C                     	;# 
  1037  090E                     	;# 
  1038  090F                     	;# 
  1039  091F                     	;# 
  1040  098F                     	;# 
  1041  098F                     	;# 
  1042  0990                     	;# 
  1043  0991                     	;# 
  1044  0992                     	;# 
  1045  0993                     	;# 
  1046  0994                     	;# 
  1047  0995                     	;# 
  1048  0996                     	;# 
  1049  0997                     	;# 
  1050  0A19                     	;# 
  1051  0A19                     	;# 
  1052  0A1A                     	;# 
  1053  0A1A                     	;# 
  1054  0A1B                     	;# 
  1055  0A1B                     	;# 
  1056  0A1B                     	;# 
  1057  0A1C                     	;# 
  1058  0A1C                     	;# 
  1059  0A1D                     	;# 
  1060  0A1D                     	;# 
  1061  0A1E                     	;# 
  1062  0A1E                     	;# 
  1063  0A1F                     	;# 
  1064  0A1F                     	;# 
  1065  0A1F                     	;# 
  1066  1E0F                     	;# 
  1067  1E10                     	;# 
  1068  1E11                     	;# 
  1069  1E12                     	;# 
  1070  1E13                     	;# 
  1071  1E14                     	;# 
  1072  1E15                     	;# 
  1073  1E16                     	;# 
  1074  1E17                     	;# 
  1075  1E18                     	;# 
  1076  1E19                     	;# 
  1077  1E1A                     	;# 
  1078  1E1B                     	;# 
  1079  1E1C                     	;# 
  1080  1E1D                     	;# 
  1081  1E1E                     	;# 
  1082  1E1F                     	;# 
  1083  1E20                     	;# 
  1084  1E21                     	;# 
  1085  1E22                     	;# 
  1086  1E23                     	;# 
  1087  1E24                     	;# 
  1088  1E25                     	;# 
  1089  1E26                     	;# 
  1090  1E27                     	;# 
  1091  1E28                     	;# 
  1092  1E29                     	;# 
  1093  1E2A                     	;# 
  1094  1E2B                     	;# 
  1095  1E2C                     	;# 
  1096  1E2D                     	;# 
  1097  1E2E                     	;# 
  1098  1E2F                     	;# 
  1099  1E30                     	;# 
  1100  1E31                     	;# 
  1101  1E32                     	;# 
  1102  1E33                     	;# 
  1103  1E34                     	;# 
  1104  1E35                     	;# 
  1105  1E36                     	;# 
  1106  1E37                     	;# 
  1107  1E8F                     	;# 
  1108  1E90                     	;# 
  1109  1E91                     	;# 
  1110  1E92                     	;# 
  1111  1E93                     	;# 
  1112  1E94                     	;# 
  1113  1E95                     	;# 
  1114  1E96                     	;# 
  1115  1E97                     	;# 
  1116  1E9C                     	;# 
  1117  1E9D                     	;# 
  1118  1E9E                     	;# 
  1119  1EA1                     	;# 
  1120  1EA2                     	;# 
  1121  1EA3                     	;# 
  1122  1EA4                     	;# 
  1123  1EA5                     	;# 
  1124  1EA9                     	;# 
  1125  1EAA                     	;# 
  1126  1EAB                     	;# 
  1127  1EAC                     	;# 
  1128  1EB1                     	;# 
  1129  1EB2                     	;# 
  1130  1EB3                     	;# 
  1131  1EB8                     	;# 
  1132  1EB9                     	;# 
  1133  1EBA                     	;# 
  1134  1EBB                     	;# 
  1135  1EBC                     	;# 
  1136  1EBD                     	;# 
  1137  1EBE                     	;# 
  1138  1EC3                     	;# 
  1139  1EC5                     	;# 
  1140  1EC6                     	;# 
  1141  1EC7                     	;# 
  1142  1EC8                     	;# 
  1143  1EC9                     	;# 
  1144  1ECA                     	;# 
  1145  1ECB                     	;# 
  1146  1ECB                     	;# 
  1147  1ECB                     	;# 
  1148  1ECC                     	;# 
  1149  1ECC                     	;# 
  1150  1ECC                     	;# 
  1151  1ECD                     	;# 
  1152  1ECD                     	;# 
  1153  1ECE                     	;# 
  1154  1ECE                     	;# 
  1155  1F10                     	;# 
  1156  1F11                     	;# 
  1157  1F12                     	;# 
  1158  1F13                     	;# 
  1159  1F14                     	;# 
  1160  1F15                     	;# 
  1161  1F16                     	;# 
  1162  1F17                     	;# 
  1163  1F18                     	;# 
  1164  1F19                     	;# 
  1165  1F1A                     	;# 
  1166  1F1B                     	;# 
  1167  1F1C                     	;# 
  1168  1F1D                     	;# 
  1169  1F1E                     	;# 
  1170  1F1F                     	;# 
  1171  1F20                     	;# 
  1172  1F21                     	;# 
  1173  1F22                     	;# 
  1174  1F23                     	;# 
  1175  1F24                     	;# 
  1176  1F25                     	;# 
  1177  1F26                     	;# 
  1178  1F27                     	;# 
  1179  1F38                     	;# 
  1180  1F39                     	;# 
  1181  1F3A                     	;# 
  1182  1F3B                     	;# 
  1183  1F3C                     	;# 
  1184  1F3D                     	;# 
  1185  1F3E                     	;# 
  1186  1F3F                     	;# 
  1187  1F43                     	;# 
  1188  1F44                     	;# 
  1189  1F45                     	;# 
  1190  1F46                     	;# 
  1191  1F47                     	;# 
  1192  1F48                     	;# 
  1193  1F49                     	;# 
  1194  1F4A                     	;# 
  1195  1F4E                     	;# 
  1196  1F4F                     	;# 
  1197  1F50                     	;# 
  1198  1F51                     	;# 
  1199  1F52                     	;# 
  1200  1F53                     	;# 
  1201  1F54                     	;# 
  1202  1F55                     	;# 
  1203  1F65                     	;# 
  1204  1F66                     	;# 
  1205  1F67                     	;# 
  1206  1F68                     	;# 
  1207  1F69                     	;# 
  1208  1F6A                     	;# 
  1209  1F6B                     	;# 
  1210  1FE4                     	;# 
  1211  1FE5                     	;# 
  1212  1FE6                     	;# 
  1213  1FE7                     	;# 
  1214  1FE8                     	;# 
  1215  1FE8                     	;# 
  1216  1FE9                     	;# 
  1217  1FEA                     	;# 
  1218  1FEB                     	;# 
  1219  1FED                     	;# 
  1220  1FEE                     	;# 
  1221  1FEF                     	;# 
  1222  0000                     	;# 
  1223  0001                     	;# 
  1224  0002                     	;# 
  1225  0003                     	;# 
  1226  0004                     	;# 
  1227  0005                     	;# 
  1228  0006                     	;# 
  1229  0007                     	;# 
  1230  0008                     	;# 
  1231  0009                     	;# 
  1232  000A                     	;# 
  1233  000B                     	;# 
  1234  000C                     	;# 
  1235  000D                     	;# 
  1236  000E                     	;# 
  1237  0010                     	;# 
  1238  0012                     	;# 
  1239  0013                     	;# 
  1240  0014                     	;# 
  1241  0016                     	;# 
  1242  0018                     	;# 
  1243  0019                     	;# 
  1244  001A                     	;# 
  1245  001C                     	;# 
  1246  008C                     	;# 
  1247  008C                     	;# 
  1248  008D                     	;# 
  1249  008E                     	;# 
  1250  008E                     	;# 
  1251  008F                     	;# 
  1252  0090                     	;# 
  1253  0090                     	;# 
  1254  0091                     	;# 
  1255  0092                     	;# 
  1256  0092                     	;# 
  1257  0093                     	;# 
  1258  0094                     	;# 
  1259  0094                     	;# 
  1260  0095                     	;# 
  1261  0096                     	;# 
  1262  0096                     	;# 
  1263  0097                     	;# 
  1264  0098                     	;# 
  1265  0099                     	;# 
  1266  009A                     	;# 
  1267  009B                     	;# 
  1268  009B                     	;# 
  1269  009C                     	;# 
  1270  009D                     	;# 
  1271  009D                     	;# 
  1272  009E                     	;# 
  1273  009F                     	;# 
  1274  010C                     	;# 
  1275  010C                     	;# 
  1276  010D                     	;# 
  1277  010E                     	;# 
  1278  010F                     	;# 
  1279  010F                     	;# 
  1280  0110                     	;# 
  1281  0111                     	;# 
  1282  0112                     	;# 
  1283  0113                     	;# 
  1284  0114                     	;# 
  1285  0115                     	;# 
  1286  0116                     	;# 
  1287  0117                     	;# 
  1288  0118                     	;# 
  1289  0119                     	;# 
  1290  0119                     	;# 
  1291  0119                     	;# 
  1292  011A                     	;# 
  1293  011A                     	;# 
  1294  011A                     	;# 
  1295  011B                     	;# 
  1296  011B                     	;# 
  1297  011B                     	;# 
  1298  011B                     	;# 
  1299  011B                     	;# 
  1300  011C                     	;# 
  1301  011C                     	;# 
  1302  011C                     	;# 
  1303  011D                     	;# 
  1304  011D                     	;# 
  1305  011D                     	;# 
  1306  011E                     	;# 
  1307  011E                     	;# 
  1308  011E                     	;# 
  1309  011F                     	;# 
  1310  011F                     	;# 
  1311  011F                     	;# 
  1312  011F                     	;# 
  1313  011F                     	;# 
  1314  018C                     	;# 
  1315  018D                     	;# 
  1316  018E                     	;# 
  1317  018F                     	;# 
  1318  0190                     	;# 
  1319  0191                     	;# 
  1320  0192                     	;# 
  1321  0196                     	;# 
  1322  0197                     	;# 
  1323  0198                     	;# 
  1324  0199                     	;# 
  1325  019A                     	;# 
  1326  019B                     	;# 
  1327  019C                     	;# 
  1328  020C                     	;# 
  1329  020D                     	;# 
  1330  020E                     	;# 
  1331  020E                     	;# 
  1332  020F                     	;# 
  1333  020F                     	;# 
  1334  0210                     	;# 
  1335  0210                     	;# 
  1336  0211                     	;# 
  1337  0211                     	;# 
  1338  0212                     	;# 
  1339  0213                     	;# 
  1340  0214                     	;# 
  1341  0214                     	;# 
  1342  0215                     	;# 
  1343  0215                     	;# 
  1344  0216                     	;# 
  1345  0216                     	;# 
  1346  0217                     	;# 
  1347  0217                     	;# 
  1348  0218                     	;# 
  1349  0219                     	;# 
  1350  021A                     	;# 
  1351  021A                     	;# 
  1352  021B                     	;# 
  1353  021B                     	;# 
  1354  021C                     	;# 
  1355  021C                     	;# 
  1356  021D                     	;# 
  1357  021D                     	;# 
  1358  021E                     	;# 
  1359  021F                     	;# 
  1360  028C                     	;# 
  1361  028C                     	;# 
  1362  028D                     	;# 
  1363  028D                     	;# 
  1364  028E                     	;# 
  1365  028F                     	;# 
  1366  0290                     	;# 
  1367  0291                     	;# 
  1368  0292                     	;# 
  1369  0292                     	;# 
  1370  0293                     	;# 
  1371  0293                     	;# 
  1372  0294                     	;# 
  1373  0295                     	;# 
  1374  0296                     	;# 
  1375  0297                     	;# 
  1376  0298                     	;# 
  1377  0298                     	;# 
  1378  0299                     	;# 
  1379  0299                     	;# 
  1380  029A                     	;# 
  1381  029B                     	;# 
  1382  029C                     	;# 
  1383  029D                     	;# 
  1384  029F                     	;# 
  1385  030C                     	;# 
  1386  030C                     	;# 
  1387  030D                     	;# 
  1388  030E                     	;# 
  1389  030F                     	;# 
  1390  0310                     	;# 
  1391  0310                     	;# 
  1392  0311                     	;# 
  1393  0312                     	;# 
  1394  0313                     	;# 
  1395  0314                     	;# 
  1396  0314                     	;# 
  1397  0315                     	;# 
  1398  0316                     	;# 
  1399  0317                     	;# 
  1400  0318                     	;# 
  1401  0318                     	;# 
  1402  0319                     	;# 
  1403  031A                     	;# 
  1404  031B                     	;# 
  1405  031C                     	;# 
  1406  031C                     	;# 
  1407  031D                     	;# 
  1408  031E                     	;# 
  1409  031F                     	;# 
  1410  038C                     	;# 
  1411  038C                     	;# 
  1412  038D                     	;# 
  1413  038E                     	;# 
  1414  0390                     	;# 
  1415  0390                     	;# 
  1416  0391                     	;# 
  1417  0392                     	;# 
  1418  048C                     	;# 
  1419  048C                     	;# 
  1420  048D                     	;# 
  1421  048E                     	;# 
  1422  048F                     	;# 
  1423  048F                     	;# 
  1424  0490                     	;# 
  1425  0491                     	;# 
  1426  0492                     	;# 
  1427  0492                     	;# 
  1428  0493                     	;# 
  1429  0494                     	;# 
  1430  0495                     	;# 
  1431  0495                     	;# 
  1432  0496                     	;# 
  1433  0497                     	;# 
  1434  0498                     	;# 
  1435  0499                     	;# 
  1436  049A                     	;# 
  1437  049B                     	;# 
  1438  049C                     	;# 
  1439  049D                     	;# 
  1440  050C                     	;# 
  1441  050C                     	;# 
  1442  050D                     	;# 
  1443  050E                     	;# 
  1444  050F                     	;# 
  1445  050F                     	;# 
  1446  0510                     	;# 
  1447  0511                     	;# 
  1448  0512                     	;# 
  1449  0512                     	;# 
  1450  0513                     	;# 
  1451  0514                     	;# 
  1452  0515                     	;# 
  1453  0515                     	;# 
  1454  0516                     	;# 
  1455  0517                     	;# 
  1456  0518                     	;# 
  1457  0519                     	;# 
  1458  051A                     	;# 
  1459  051B                     	;# 
  1460  051C                     	;# 
  1461  051D                     	;# 
  1462  058C                     	;# 
  1463  058C                     	;# 
  1464  058D                     	;# 
  1465  058E                     	;# 
  1466  058F                     	;# 
  1467  058F                     	;# 
  1468  0590                     	;# 
  1469  0591                     	;# 
  1470  0592                     	;# 
  1471  0593                     	;# 
  1472  059C                     	;# 
  1473  059C                     	;# 
  1474  059D                     	;# 
  1475  059D                     	;# 
  1476  059E                     	;# 
  1477  059F                     	;# 
  1478  060C                     	;# 
  1479  060C                     	;# 
  1480  060D                     	;# 
  1481  060D                     	;# 
  1482  060E                     	;# 
  1483  060F                     	;# 
  1484  0610                     	;# 
  1485  0611                     	;# 
  1486  0612                     	;# 
  1487  0613                     	;# 
  1488  0614                     	;# 
  1489  0616                     	;# 
  1490  0616                     	;# 
  1491  0617                     	;# 
  1492  0617                     	;# 
  1493  0618                     	;# 
  1494  0619                     	;# 
  1495  061A                     	;# 
  1496  061B                     	;# 
  1497  061C                     	;# 
  1498  061D                     	;# 
  1499  061E                     	;# 
  1500  068C                     	;# 
  1501  068D                     	;# 
  1502  068E                     	;# 
  1503  068F                     	;# 
  1504  0690                     	;# 
  1505  0691                     	;# 
  1506  0692                     	;# 
  1507  0693                     	;# 
  1508  0694                     	;# 
  1509  070C                     	;# 
  1510  070D                     	;# 
  1511  070E                     	;# 
  1512  070F                     	;# 
  1513  0710                     	;# 
  1514  0711                     	;# 
  1515  0712                     	;# 
  1516  0713                     	;# 
  1517  0714                     	;# 
  1518  0716                     	;# 
  1519  0717                     	;# 
  1520  0718                     	;# 
  1521  0719                     	;# 
  1522  071A                     	;# 
  1523  071B                     	;# 
  1524  071C                     	;# 
  1525  071D                     	;# 
  1526  071E                     	;# 
  1527  0796                     	;# 
  1528  0797                     	;# 
  1529  0798                     	;# 
  1530  0799                     	;# 
  1531  079A                     	;# 
  1532  079B                     	;# 
  1533  079C                     	;# 
  1534  079D                     	;# 
  1535  080C                     	;# 
  1536  080D                     	;# 
  1537  080E                     	;# 
  1538  080F                     	;# 
  1539  0810                     	;# 
  1540  0811                     	;# 
  1541  0812                     	;# 
  1542  0813                     	;# 
  1543  0814                     	;# 
  1544  081A                     	;# 
  1545  081A                     	;# 
  1546  081B                     	;# 
  1547  081C                     	;# 
  1548  081C                     	;# 
  1549  081D                     	;# 
  1550  081E                     	;# 
  1551  081F                     	;# 
  1552  088C                     	;# 
  1553  088D                     	;# 
  1554  088E                     	;# 
  1555  088F                     	;# 
  1556  0890                     	;# 
  1557  0891                     	;# 
  1558  0892                     	;# 
  1559  0893                     	;# 
  1560  0895                     	;# 
  1561  0896                     	;# 
  1562  0897                     	;# 
  1563  0898                     	;# 
  1564  0899                     	;# 
  1565  089A                     	;# 
  1566  089B                     	;# 
  1567  090C                     	;# 
  1568  090E                     	;# 
  1569  090F                     	;# 
  1570  091F                     	;# 
  1571  098F                     	;# 
  1572  098F                     	;# 
  1573  0990                     	;# 
  1574  0991                     	;# 
  1575  0992                     	;# 
  1576  0993                     	;# 
  1577  0994                     	;# 
  1578  0995                     	;# 
  1579  0996                     	;# 
  1580  0997                     	;# 
  1581  0A19                     	;# 
  1582  0A19                     	;# 
  1583  0A1A                     	;# 
  1584  0A1A                     	;# 
  1585  0A1B                     	;# 
  1586  0A1B                     	;# 
  1587  0A1B                     	;# 
  1588  0A1C                     	;# 
  1589  0A1C                     	;# 
  1590  0A1D                     	;# 
  1591  0A1D                     	;# 
  1592  0A1E                     	;# 
  1593  0A1E                     	;# 
  1594  0A1F                     	;# 
  1595  0A1F                     	;# 
  1596  0A1F                     	;# 
  1597  1E0F                     	;# 
  1598  1E10                     	;# 
  1599  1E11                     	;# 
  1600  1E12                     	;# 
  1601  1E13                     	;# 
  1602  1E14                     	;# 
  1603  1E15                     	;# 
  1604  1E16                     	;# 
  1605  1E17                     	;# 
  1606  1E18                     	;# 
  1607  1E19                     	;# 
  1608  1E1A                     	;# 
  1609  1E1B                     	;# 
  1610  1E1C                     	;# 
  1611  1E1D                     	;# 
  1612  1E1E                     	;# 
  1613  1E1F                     	;# 
  1614  1E20                     	;# 
  1615  1E21                     	;# 
  1616  1E22                     	;# 
  1617  1E23                     	;# 
  1618  1E24                     	;# 
  1619  1E25                     	;# 
  1620  1E26                     	;# 
  1621  1E27                     	;# 
  1622  1E28                     	;# 
  1623  1E29                     	;# 
  1624  1E2A                     	;# 
  1625  1E2B                     	;# 
  1626  1E2C                     	;# 
  1627  1E2D                     	;# 
  1628  1E2E                     	;# 
  1629  1E2F                     	;# 
  1630  1E30                     	;# 
  1631  1E31                     	;# 
  1632  1E32                     	;# 
  1633  1E33                     	;# 
  1634  1E34                     	;# 
  1635  1E35                     	;# 
  1636  1E36                     	;# 
  1637  1E37                     	;# 
  1638  1E8F                     	;# 
  1639  1E90                     	;# 
  1640  1E91                     	;# 
  1641  1E92                     	;# 
  1642  1E93                     	;# 
  1643  1E94                     	;# 
  1644  1E95                     	;# 
  1645  1E96                     	;# 
  1646  1E97                     	;# 
  1647  1E9C                     	;# 
  1648  1E9D                     	;# 
  1649  1E9E                     	;# 
  1650  1EA1                     	;# 
  1651  1EA2                     	;# 
  1652  1EA3                     	;# 
  1653  1EA4                     	;# 
  1654  1EA5                     	;# 
  1655  1EA9                     	;# 
  1656  1EAA                     	;# 
  1657  1EAB                     	;# 
  1658  1EAC                     	;# 
  1659  1EB1                     	;# 
  1660  1EB2                     	;# 
  1661  1EB3                     	;# 
  1662  1EB8                     	;# 
  1663  1EB9                     	;# 
  1664  1EBA                     	;# 
  1665  1EBB                     	;# 
  1666  1EBC                     	;# 
  1667  1EBD                     	;# 
  1668  1EBE                     	;# 
  1669  1EC3                     	;# 
  1670  1EC5                     	;# 
  1671  1EC6                     	;# 
  1672  1EC7                     	;# 
  1673  1EC8                     	;# 
  1674  1EC9                     	;# 
  1675  1ECA                     	;# 
  1676  1ECB                     	;# 
  1677  1ECB                     	;# 
  1678  1ECB                     	;# 
  1679  1ECC                     	;# 
  1680  1ECC                     	;# 
  1681  1ECC                     	;# 
  1682  1ECD                     	;# 
  1683  1ECD                     	;# 
  1684  1ECE                     	;# 
  1685  1ECE                     	;# 
  1686  1F10                     	;# 
  1687  1F11                     	;# 
  1688  1F12                     	;# 
  1689  1F13                     	;# 
  1690  1F14                     	;# 
  1691  1F15                     	;# 
  1692  1F16                     	;# 
  1693  1F17                     	;# 
  1694  1F18                     	;# 
  1695  1F19                     	;# 
  1696  1F1A                     	;# 
  1697  1F1B                     	;# 
  1698  1F1C                     	;# 
  1699  1F1D                     	;# 
  1700  1F1E                     	;# 
  1701  1F1F                     	;# 
  1702  1F20                     	;# 
  1703  1F21                     	;# 
  1704  1F22                     	;# 
  1705  1F23                     	;# 
  1706  1F24                     	;# 
  1707  1F25                     	;# 
  1708  1F26                     	;# 
  1709  1F27                     	;# 
  1710  1F38                     	;# 
  1711  1F39                     	;# 
  1712  1F3A                     	;# 
  1713  1F3B                     	;# 
  1714  1F3C                     	;# 
  1715  1F3D                     	;# 
  1716  1F3E                     	;# 
  1717  1F3F                     	;# 
  1718  1F43                     	;# 
  1719  1F44                     	;# 
  1720  1F45                     	;# 
  1721  1F46                     	;# 
  1722  1F47                     	;# 
  1723  1F48                     	;# 
  1724  1F49                     	;# 
  1725  1F4A                     	;# 
  1726  1F4E                     	;# 
  1727  1F4F                     	;# 
  1728  1F50                     	;# 
  1729  1F51                     	;# 
  1730  1F52                     	;# 
  1731  1F53                     	;# 
  1732  1F54                     	;# 
  1733  1F55                     	;# 
  1734  1F65                     	;# 
  1735  1F66                     	;# 
  1736  1F67                     	;# 
  1737  1F68                     	;# 
  1738  1F69                     	;# 
  1739  1F6A                     	;# 
  1740  1F6B                     	;# 
  1741  1FE4                     	;# 
  1742  1FE5                     	;# 
  1743  1FE6                     	;# 
  1744  1FE7                     	;# 
  1745  1FE8                     	;# 
  1746  1FE8                     	;# 
  1747  1FE9                     	;# 
  1748  1FEA                     	;# 
  1749  1FEB                     	;# 
  1750  1FED                     	;# 
  1751  1FEE                     	;# 
  1752  1FEF                     	;# 
  1753  0000                     	;# 
  1754  0001                     	;# 
  1755  0002                     	;# 
  1756  0003                     	;# 
  1757  0004                     	;# 
  1758  0005                     	;# 
  1759  0006                     	;# 
  1760  0007                     	;# 
  1761  0008                     	;# 
  1762  0009                     	;# 
  1763  000A                     	;# 
  1764  000B                     	;# 
  1765  000C                     	;# 
  1766  000D                     	;# 
  1767  000E                     	;# 
  1768  0010                     	;# 
  1769  0012                     	;# 
  1770  0013                     	;# 
  1771  0014                     	;# 
  1772  0016                     	;# 
  1773  0018                     	;# 
  1774  0019                     	;# 
  1775  001A                     	;# 
  1776  001C                     	;# 
  1777  008C                     	;# 
  1778  008C                     	;# 
  1779  008D                     	;# 
  1780  008E                     	;# 
  1781  008E                     	;# 
  1782  008F                     	;# 
  1783  0090                     	;# 
  1784  0090                     	;# 
  1785  0091                     	;# 
  1786  0092                     	;# 
  1787  0092                     	;# 
  1788  0093                     	;# 
  1789  0094                     	;# 
  1790  0094                     	;# 
  1791  0095                     	;# 
  1792  0096                     	;# 
  1793  0096                     	;# 
  1794  0097                     	;# 
  1795  0098                     	;# 
  1796  0099                     	;# 
  1797  009A                     	;# 
  1798  009B                     	;# 
  1799  009B                     	;# 
  1800  009C                     	;# 
  1801  009D                     	;# 
  1802  009D                     	;# 
  1803  009E                     	;# 
  1804  009F                     	;# 
  1805  010C                     	;# 
  1806  010C                     	;# 
  1807  010D                     	;# 
  1808  010E                     	;# 
  1809  010F                     	;# 
  1810  010F                     	;# 
  1811  0110                     	;# 
  1812  0111                     	;# 
  1813  0112                     	;# 
  1814  0113                     	;# 
  1815  0114                     	;# 
  1816  0115                     	;# 
  1817  0116                     	;# 
  1818  0117                     	;# 
  1819  0118                     	;# 
  1820  0119                     	;# 
  1821  0119                     	;# 
  1822  0119                     	;# 
  1823  011A                     	;# 
  1824  011A                     	;# 
  1825  011A                     	;# 
  1826  011B                     	;# 
  1827  011B                     	;# 
  1828  011B                     	;# 
  1829  011B                     	;# 
  1830  011B                     	;# 
  1831  011C                     	;# 
  1832  011C                     	;# 
  1833  011C                     	;# 
  1834  011D                     	;# 
  1835  011D                     	;# 
  1836  011D                     	;# 
  1837  011E                     	;# 
  1838  011E                     	;# 
  1839  011E                     	;# 
  1840  011F                     	;# 
  1841  011F                     	;# 
  1842  011F                     	;# 
  1843  011F                     	;# 
  1844  011F                     	;# 
  1845  018C                     	;# 
  1846  018D                     	;# 
  1847  018E                     	;# 
  1848  018F                     	;# 
  1849  0190                     	;# 
  1850  0191                     	;# 
  1851  0192                     	;# 
  1852  0196                     	;# 
  1853  0197                     	;# 
  1854  0198                     	;# 
  1855  0199                     	;# 
  1856  019A                     	;# 
  1857  019B                     	;# 
  1858  019C                     	;# 
  1859  020C                     	;# 
  1860  020D                     	;# 
  1861  020E                     	;# 
  1862  020E                     	;# 
  1863  020F                     	;# 
  1864  020F                     	;# 
  1865  0210                     	;# 
  1866  0210                     	;# 
  1867  0211                     	;# 
  1868  0211                     	;# 
  1869  0212                     	;# 
  1870  0213                     	;# 
  1871  0214                     	;# 
  1872  0214                     	;# 
  1873  0215                     	;# 
  1874  0215                     	;# 
  1875  0216                     	;# 
  1876  0216                     	;# 
  1877  0217                     	;# 
  1878  0217                     	;# 
  1879  0218                     	;# 
  1880  0219                     	;# 
  1881  021A                     	;# 
  1882  021A                     	;# 
  1883  021B                     	;# 
  1884  021B                     	;# 
  1885  021C                     	;# 
  1886  021C                     	;# 
  1887  021D                     	;# 
  1888  021D                     	;# 
  1889  021E                     	;# 
  1890  021F                     	;# 
  1891  028C                     	;# 
  1892  028C                     	;# 
  1893  028D                     	;# 
  1894  028D                     	;# 
  1895  028E                     	;# 
  1896  028F                     	;# 
  1897  0290                     	;# 
  1898  0291                     	;# 
  1899  0292                     	;# 
  1900  0292                     	;# 
  1901  0293                     	;# 
  1902  0293                     	;# 
  1903  0294                     	;# 
  1904  0295                     	;# 
  1905  0296                     	;# 
  1906  0297                     	;# 
  1907  0298                     	;# 
  1908  0298                     	;# 
  1909  0299                     	;# 
  1910  0299                     	;# 
  1911  029A                     	;# 
  1912  029B                     	;# 
  1913  029C                     	;# 
  1914  029D                     	;# 
  1915  029F                     	;# 
  1916  030C                     	;# 
  1917  030C                     	;# 
  1918  030D                     	;# 
  1919  030E                     	;# 
  1920  030F                     	;# 
  1921  0310                     	;# 
  1922  0310                     	;# 
  1923  0311                     	;# 
  1924  0312                     	;# 
  1925  0313                     	;# 
  1926  0314                     	;# 
  1927  0314                     	;# 
  1928  0315                     	;# 
  1929  0316                     	;# 
  1930  0317                     	;# 
  1931  0318                     	;# 
  1932  0318                     	;# 
  1933  0319                     	;# 
  1934  031A                     	;# 
  1935  031B                     	;# 
  1936  031C                     	;# 
  1937  031C                     	;# 
  1938  031D                     	;# 
  1939  031E                     	;# 
  1940  031F                     	;# 
  1941  038C                     	;# 
  1942  038C                     	;# 
  1943  038D                     	;# 
  1944  038E                     	;# 
  1945  0390                     	;# 
  1946  0390                     	;# 
  1947  0391                     	;# 
  1948  0392                     	;# 
  1949  048C                     	;# 
  1950  048C                     	;# 
  1951  048D                     	;# 
  1952  048E                     	;# 
  1953  048F                     	;# 
  1954  048F                     	;# 
  1955  0490                     	;# 
  1956  0491                     	;# 
  1957  0492                     	;# 
  1958  0492                     	;# 
  1959  0493                     	;# 
  1960  0494                     	;# 
  1961  0495                     	;# 
  1962  0495                     	;# 
  1963  0496                     	;# 
  1964  0497                     	;# 
  1965  0498                     	;# 
  1966  0499                     	;# 
  1967  049A                     	;# 
  1968  049B                     	;# 
  1969  049C                     	;# 
  1970  049D                     	;# 
  1971  050C                     	;# 
  1972  050C                     	;# 
  1973  050D                     	;# 
  1974  050E                     	;# 
  1975  050F                     	;# 
  1976  050F                     	;# 
  1977  0510                     	;# 
  1978  0511                     	;# 
  1979  0512                     	;# 
  1980  0512                     	;# 
  1981  0513                     	;# 
  1982  0514                     	;# 
  1983  0515                     	;# 
  1984  0515                     	;# 
  1985  0516                     	;# 
  1986  0517                     	;# 
  1987  0518                     	;# 
  1988  0519                     	;# 
  1989  051A                     	;# 
  1990  051B                     	;# 
  1991  051C                     	;# 
  1992  051D                     	;# 
  1993  058C                     	;# 
  1994  058C                     	;# 
  1995  058D                     	;# 
  1996  058E                     	;# 
  1997  058F                     	;# 
  1998  058F                     	;# 
  1999  0590                     	;# 
  2000  0591                     	;# 
  2001  0592                     	;# 
  2002  0593                     	;# 
  2003  059C                     	;# 
  2004  059C                     	;# 
  2005  059D                     	;# 
  2006  059D                     	;# 
  2007  059E                     	;# 
  2008  059F                     	;# 
  2009  060C                     	;# 
  2010  060C                     	;# 
  2011  060D                     	;# 
  2012  060D                     	;# 
  2013  060E                     	;# 
  2014  060F                     	;# 
  2015  0610                     	;# 
  2016  0611                     	;# 
  2017  0612                     	;# 
  2018  0613                     	;# 
  2019  0614                     	;# 
  2020  0616                     	;# 
  2021  0616                     	;# 
  2022  0617                     	;# 
  2023  0617                     	;# 
  2024  0618                     	;# 
  2025  0619                     	;# 
  2026  061A                     	;# 
  2027  061B                     	;# 
  2028  061C                     	;# 
  2029  061D                     	;# 
  2030  061E                     	;# 
  2031  068C                     	;# 
  2032  068D                     	;# 
  2033  068E                     	;# 
  2034  068F                     	;# 
  2035  0690                     	;# 
  2036  0691                     	;# 
  2037  0692                     	;# 
  2038  0693                     	;# 
  2039  0694                     	;# 
  2040  070C                     	;# 
  2041  070D                     	;# 
  2042  070E                     	;# 
  2043  070F                     	;# 
  2044  0710                     	;# 
  2045  0711                     	;# 
  2046  0712                     	;# 
  2047  0713                     	;# 
  2048  0714                     	;# 
  2049  0716                     	;# 
  2050  0717                     	;# 
  2051  0718                     	;# 
  2052  0719                     	;# 
  2053  071A                     	;# 
  2054  071B                     	;# 
  2055  071C                     	;# 
  2056  071D                     	;# 
  2057  071E                     	;# 
  2058  0796                     	;# 
  2059  0797                     	;# 
  2060  0798                     	;# 
  2061  0799                     	;# 
  2062  079A                     	;# 
  2063  079B                     	;# 
  2064  079C                     	;# 
  2065  079D                     	;# 
  2066  080C                     	;# 
  2067  080D                     	;# 
  2068  080E                     	;# 
  2069  080F                     	;# 
  2070  0810                     	;# 
  2071  0811                     	;# 
  2072  0812                     	;# 
  2073  0813                     	;# 
  2074  0814                     	;# 
  2075  081A                     	;# 
  2076  081A                     	;# 
  2077  081B                     	;# 
  2078  081C                     	;# 
  2079  081C                     	;# 
  2080  081D                     	;# 
  2081  081E                     	;# 
  2082  081F                     	;# 
  2083  088C                     	;# 
  2084  088D                     	;# 
  2085  088E                     	;# 
  2086  088F                     	;# 
  2087  0890                     	;# 
  2088  0891                     	;# 
  2089  0892                     	;# 
  2090  0893                     	;# 
  2091  0895                     	;# 
  2092  0896                     	;# 
  2093  0897                     	;# 
  2094  0898                     	;# 
  2095  0899                     	;# 
  2096  089A                     	;# 
  2097  089B                     	;# 
  2098  090C                     	;# 
  2099  090E                     	;# 
  2100  090F                     	;# 
  2101  091F                     	;# 
  2102  098F                     	;# 
  2103  098F                     	;# 
  2104  0990                     	;# 
  2105  0991                     	;# 
  2106  0992                     	;# 
  2107  0993                     	;# 
  2108  0994                     	;# 
  2109  0995                     	;# 
  2110  0996                     	;# 
  2111  0997                     	;# 
  2112  0A19                     	;# 
  2113  0A19                     	;# 
  2114  0A1A                     	;# 
  2115  0A1A                     	;# 
  2116  0A1B                     	;# 
  2117  0A1B                     	;# 
  2118  0A1B                     	;# 
  2119  0A1C                     	;# 
  2120  0A1C                     	;# 
  2121  0A1D                     	;# 
  2122  0A1D                     	;# 
  2123  0A1E                     	;# 
  2124  0A1E                     	;# 
  2125  0A1F                     	;# 
  2126  0A1F                     	;# 
  2127  0A1F                     	;# 
  2128  1E0F                     	;# 
  2129  1E10                     	;# 
  2130  1E11                     	;# 
  2131  1E12                     	;# 
  2132  1E13                     	;# 
  2133  1E14                     	;# 
  2134  1E15                     	;# 
  2135  1E16                     	;# 
  2136  1E17                     	;# 
  2137  1E18                     	;# 
  2138  1E19                     	;# 
  2139  1E1A                     	;# 
  2140  1E1B                     	;# 
  2141  1E1C                     	;# 
  2142  1E1D                     	;# 
  2143  1E1E                     	;# 
  2144  1E1F                     	;# 
  2145  1E20                     	;# 
  2146  1E21                     	;# 
  2147  1E22                     	;# 
  2148  1E23                     	;# 
  2149  1E24                     	;# 
  2150  1E25                     	;# 
  2151  1E26                     	;# 
  2152  1E27                     	;# 
  2153  1E28                     	;# 
  2154  1E29                     	;# 
  2155  1E2A                     	;# 
  2156  1E2B                     	;# 
  2157  1E2C                     	;# 
  2158  1E2D                     	;# 
  2159  1E2E                     	;# 
  2160  1E2F                     	;# 
  2161  1E30                     	;# 
  2162  1E31                     	;# 
  2163  1E32                     	;# 
  2164  1E33                     	;# 
  2165  1E34                     	;# 
  2166  1E35                     	;# 
  2167  1E36                     	;# 
  2168  1E37                     	;# 
  2169  1E8F                     	;# 
  2170  1E90                     	;# 
  2171  1E91                     	;# 
  2172  1E92                     	;# 
  2173  1E93                     	;# 
  2174  1E94                     	;# 
  2175  1E95                     	;# 
  2176  1E96                     	;# 
  2177  1E97                     	;# 
  2178  1E9C                     	;# 
  2179  1E9D                     	;# 
  2180  1E9E                     	;# 
  2181  1EA1                     	;# 
  2182  1EA2                     	;# 
  2183  1EA3                     	;# 
  2184  1EA4                     	;# 
  2185  1EA5                     	;# 
  2186  1EA9                     	;# 
  2187  1EAA                     	;# 
  2188  1EAB                     	;# 
  2189  1EAC                     	;# 
  2190  1EB1                     	;# 
  2191  1EB2                     	;# 
  2192  1EB3                     	;# 
  2193  1EB8                     	;# 
  2194  1EB9                     	;# 
  2195  1EBA                     	;# 
  2196  1EBB                     	;# 
  2197  1EBC                     	;# 
  2198  1EBD                     	;# 
  2199  1EBE                     	;# 
  2200  1EC3                     	;# 
  2201  1EC5                     	;# 
  2202  1EC6                     	;# 
  2203  1EC7                     	;# 
  2204  1EC8                     	;# 
  2205  1EC9                     	;# 
  2206  1ECA                     	;# 
  2207  1ECB                     	;# 
  2208  1ECB                     	;# 
  2209  1ECB                     	;# 
  2210  1ECC                     	;# 
  2211  1ECC                     	;# 
  2212  1ECC                     	;# 
  2213  1ECD                     	;# 
  2214  1ECD                     	;# 
  2215  1ECE                     	;# 
  2216  1ECE                     	;# 
  2217  1F10                     	;# 
  2218  1F11                     	;# 
  2219  1F12                     	;# 
  2220  1F13                     	;# 
  2221  1F14                     	;# 
  2222  1F15                     	;# 
  2223  1F16                     	;# 
  2224  1F17                     	;# 
  2225  1F18                     	;# 
  2226  1F19                     	;# 
  2227  1F1A                     	;# 
  2228  1F1B                     	;# 
  2229  1F1C                     	;# 
  2230  1F1D                     	;# 
  2231  1F1E                     	;# 
  2232  1F1F                     	;# 
  2233  1F20                     	;# 
  2234  1F21                     	;# 
  2235  1F22                     	;# 
  2236  1F23                     	;# 
  2237  1F24                     	;# 
  2238  1F25                     	;# 
  2239  1F26                     	;# 
  2240  1F27                     	;# 
  2241  1F38                     	;# 
  2242  1F39                     	;# 
  2243  1F3A                     	;# 
  2244  1F3B                     	;# 
  2245  1F3C                     	;# 
  2246  1F3D                     	;# 
  2247  1F3E                     	;# 
  2248  1F3F                     	;# 
  2249  1F43                     	;# 
  2250  1F44                     	;# 
  2251  1F45                     	;# 
  2252  1F46                     	;# 
  2253  1F47                     	;# 
  2254  1F48                     	;# 
  2255  1F49                     	;# 
  2256  1F4A                     	;# 
  2257  1F4E                     	;# 
  2258  1F4F                     	;# 
  2259  1F50                     	;# 
  2260  1F51                     	;# 
  2261  1F52                     	;# 
  2262  1F53                     	;# 
  2263  1F54                     	;# 
  2264  1F55                     	;# 
  2265  1F65                     	;# 
  2266  1F66                     	;# 
  2267  1F67                     	;# 
  2268  1F68                     	;# 
  2269  1F69                     	;# 
  2270  1F6A                     	;# 
  2271  1F6B                     	;# 
  2272  1FE4                     	;# 
  2273  1FE5                     	;# 
  2274  1FE6                     	;# 
  2275  1FE7                     	;# 
  2276  1FE8                     	;# 
  2277  1FE8                     	;# 
  2278  1FE9                     	;# 
  2279  1FEA                     	;# 
  2280  1FEB                     	;# 
  2281  1FED                     	;# 
  2282  1FEE                     	;# 
  2283  1FEF                     	;# 
  2284  0000                     	;# 
  2285  0001                     	;# 
  2286  0002                     	;# 
  2287  0003                     	;# 
  2288  0004                     	;# 
  2289  0005                     	;# 
  2290  0006                     	;# 
  2291  0007                     	;# 
  2292  0008                     	;# 
  2293  0009                     	;# 
  2294  000A                     	;# 
  2295  000B                     	;# 
  2296  000C                     	;# 
  2297  000D                     	;# 
  2298  000E                     	;# 
  2299  0010                     	;# 
  2300  0012                     	;# 
  2301  0013                     	;# 
  2302  0014                     	;# 
  2303  0016                     	;# 
  2304  0018                     	;# 
  2305  0019                     	;# 
  2306  001A                     	;# 
  2307  001C                     	;# 
  2308  008C                     	;# 
  2309  008C                     	;# 
  2310  008D                     	;# 
  2311  008E                     	;# 
  2312  008E                     	;# 
  2313  008F                     	;# 
  2314  0090                     	;# 
  2315  0090                     	;# 
  2316  0091                     	;# 
  2317  0092                     	;# 
  2318  0092                     	;# 
  2319  0093                     	;# 
  2320  0094                     	;# 
  2321  0094                     	;# 
  2322  0095                     	;# 
  2323  0096                     	;# 
  2324  0096                     	;# 
  2325  0097                     	;# 
  2326  0098                     	;# 
  2327  0099                     	;# 
  2328  009A                     	;# 
  2329  009B                     	;# 
  2330  009B                     	;# 
  2331  009C                     	;# 
  2332  009D                     	;# 
  2333  009D                     	;# 
  2334  009E                     	;# 
  2335  009F                     	;# 
  2336  010C                     	;# 
  2337  010C                     	;# 
  2338  010D                     	;# 
  2339  010E                     	;# 
  2340  010F                     	;# 
  2341  010F                     	;# 
  2342  0110                     	;# 
  2343  0111                     	;# 
  2344  0112                     	;# 
  2345  0113                     	;# 
  2346  0114                     	;# 
  2347  0115                     	;# 
  2348  0116                     	;# 
  2349  0117                     	;# 
  2350  0118                     	;# 
  2351  0119                     	;# 
  2352  0119                     	;# 
  2353  0119                     	;# 
  2354  011A                     	;# 
  2355  011A                     	;# 
  2356  011A                     	;# 
  2357  011B                     	;# 
  2358  011B                     	;# 
  2359  011B                     	;# 
  2360  011B                     	;# 
  2361  011B                     	;# 
  2362  011C                     	;# 
  2363  011C                     	;# 
  2364  011C                     	;# 
  2365  011D                     	;# 
  2366  011D                     	;# 
  2367  011D                     	;# 
  2368  011E                     	;# 
  2369  011E                     	;# 
  2370  011E                     	;# 
  2371  011F                     	;# 
  2372  011F                     	;# 
  2373  011F                     	;# 
  2374  011F                     	;# 
  2375  011F                     	;# 
  2376  018C                     	;# 
  2377  018D                     	;# 
  2378  018E                     	;# 
  2379  018F                     	;# 
  2380  0190                     	;# 
  2381  0191                     	;# 
  2382  0192                     	;# 
  2383  0196                     	;# 
  2384  0197                     	;# 
  2385  0198                     	;# 
  2386  0199                     	;# 
  2387  019A                     	;# 
  2388  019B                     	;# 
  2389  019C                     	;# 
  2390  020C                     	;# 
  2391  020D                     	;# 
  2392  020E                     	;# 
  2393  020E                     	;# 
  2394  020F                     	;# 
  2395  020F                     	;# 
  2396  0210                     	;# 
  2397  0210                     	;# 
  2398  0211                     	;# 
  2399  0211                     	;# 
  2400  0212                     	;# 
  2401  0213                     	;# 
  2402  0214                     	;# 
  2403  0214                     	;# 
  2404  0215                     	;# 
  2405  0215                     	;# 
  2406  0216                     	;# 
  2407  0216                     	;# 
  2408  0217                     	;# 
  2409  0217                     	;# 
  2410  0218                     	;# 
  2411  0219                     	;# 
  2412  021A                     	;# 
  2413  021A                     	;# 
  2414  021B                     	;# 
  2415  021B                     	;# 
  2416  021C                     	;# 
  2417  021C                     	;# 
  2418  021D                     	;# 
  2419  021D                     	;# 
  2420  021E                     	;# 
  2421  021F                     	;# 
  2422  028C                     	;# 
  2423  028C                     	;# 
  2424  028D                     	;# 
  2425  028D                     	;# 
  2426  028E                     	;# 
  2427  028F                     	;# 
  2428  0290                     	;# 
  2429  0291                     	;# 
  2430  0292                     	;# 
  2431  0292                     	;# 
  2432  0293                     	;# 
  2433  0293                     	;# 
  2434  0294                     	;# 
  2435  0295                     	;# 
  2436  0296                     	;# 
  2437  0297                     	;# 
  2438  0298                     	;# 
  2439  0298                     	;# 
  2440  0299                     	;# 
  2441  0299                     	;# 
  2442  029A                     	;# 
  2443  029B                     	;# 
  2444  029C                     	;# 
  2445  029D                     	;# 
  2446  029F                     	;# 
  2447  030C                     	;# 
  2448  030C                     	;# 
  2449  030D                     	;# 
  2450  030E                     	;# 
  2451  030F                     	;# 
  2452  0310                     	;# 
  2453  0310                     	;# 
  2454  0311                     	;# 
  2455  0312                     	;# 
  2456  0313                     	;# 
  2457  0314                     	;# 
  2458  0314                     	;# 
  2459  0315                     	;# 
  2460  0316                     	;# 
  2461  0317                     	;# 
  2462  0318                     	;# 
  2463  0318                     	;# 
  2464  0319                     	;# 
  2465  031A                     	;# 
  2466  031B                     	;# 
  2467  031C                     	;# 
  2468  031C                     	;# 
  2469  031D                     	;# 
  2470  031E                     	;# 
  2471  031F                     	;# 
  2472  038C                     	;# 
  2473  038C                     	;# 
  2474  038D                     	;# 
  2475  038E                     	;# 
  2476  0390                     	;# 
  2477  0390                     	;# 
  2478  0391                     	;# 
  2479  0392                     	;# 
  2480  048C                     	;# 
  2481  048C                     	;# 
  2482  048D                     	;# 
  2483  048E                     	;# 
  2484  048F                     	;# 
  2485  048F                     	;# 
  2486  0490                     	;# 
  2487  0491                     	;# 
  2488  0492                     	;# 
  2489  0492                     	;# 
  2490  0493                     	;# 
  2491  0494                     	;# 
  2492  0495                     	;# 
  2493  0495                     	;# 
  2494  0496                     	;# 
  2495  0497                     	;# 
  2496  0498                     	;# 
  2497  0499                     	;# 
  2498  049A                     	;# 
  2499  049B                     	;# 
  2500  049C                     	;# 
  2501  049D                     	;# 
  2502  050C                     	;# 
  2503  050C                     	;# 
  2504  050D                     	;# 
  2505  050E                     	;# 
  2506  050F                     	;# 
  2507  050F                     	;# 
  2508  0510                     	;# 
  2509  0511                     	;# 
  2510  0512                     	;# 
  2511  0512                     	;# 
  2512  0513                     	;# 
  2513  0514                     	;# 
  2514  0515                     	;# 
  2515  0515                     	;# 
  2516  0516                     	;# 
  2517  0517                     	;# 
  2518  0518                     	;# 
  2519  0519                     	;# 
  2520  051A                     	;# 
  2521  051B                     	;# 
  2522  051C                     	;# 
  2523  051D                     	;# 
  2524  058C                     	;# 
  2525  058C                     	;# 
  2526  058D                     	;# 
  2527  058E                     	;# 
  2528  058F                     	;# 
  2529  058F                     	;# 
  2530  0590                     	;# 
  2531  0591                     	;# 
  2532  0592                     	;# 
  2533  0593                     	;# 
  2534  059C                     	;# 
  2535  059C                     	;# 
  2536  059D                     	;# 
  2537  059D                     	;# 
  2538  059E                     	;# 
  2539  059F                     	;# 
  2540  060C                     	;# 
  2541  060C                     	;# 
  2542  060D                     	;# 
  2543  060D                     	;# 
  2544  060E                     	;# 
  2545  060F                     	;# 
  2546  0610                     	;# 
  2547  0611                     	;# 
  2548  0612                     	;# 
  2549  0613                     	;# 
  2550  0614                     	;# 
  2551  0616                     	;# 
  2552  0616                     	;# 
  2553  0617                     	;# 
  2554  0617                     	;# 
  2555  0618                     	;# 
  2556  0619                     	;# 
  2557  061A                     	;# 
  2558  061B                     	;# 
  2559  061C                     	;# 
  2560  061D                     	;# 
  2561  061E                     	;# 
  2562  068C                     	;# 
  2563  068D                     	;# 
  2564  068E                     	;# 
  2565  068F                     	;# 
  2566  0690                     	;# 
  2567  0691                     	;# 
  2568  0692                     	;# 
  2569  0693                     	;# 
  2570  0694                     	;# 
  2571  070C                     	;# 
  2572  070D                     	;# 
  2573  070E                     	;# 
  2574  070F                     	;# 
  2575  0710                     	;# 
  2576  0711                     	;# 
  2577  0712                     	;# 
  2578  0713                     	;# 
  2579  0714                     	;# 
  2580  0716                     	;# 
  2581  0717                     	;# 
  2582  0718                     	;# 
  2583  0719                     	;# 
  2584  071A                     	;# 
  2585  071B                     	;# 
  2586  071C                     	;# 
  2587  071D                     	;# 
  2588  071E                     	;# 
  2589  0796                     	;# 
  2590  0797                     	;# 
  2591  0798                     	;# 
  2592  0799                     	;# 
  2593  079A                     	;# 
  2594  079B                     	;# 
  2595  079C                     	;# 
  2596  079D                     	;# 
  2597  080C                     	;# 
  2598  080D                     	;# 
  2599  080E                     	;# 
  2600  080F                     	;# 
  2601  0810                     	;# 
  2602  0811                     	;# 
  2603  0812                     	;# 
  2604  0813                     	;# 
  2605  0814                     	;# 
  2606  081A                     	;# 
  2607  081A                     	;# 
  2608  081B                     	;# 
  2609  081C                     	;# 
  2610  081C                     	;# 
  2611  081D                     	;# 
  2612  081E                     	;# 
  2613  081F                     	;# 
  2614  088C                     	;# 
  2615  088D                     	;# 
  2616  088E                     	;# 
  2617  088F                     	;# 
  2618  0890                     	;# 
  2619  0891                     	;# 
  2620  0892                     	;# 
  2621  0893                     	;# 
  2622  0895                     	;# 
  2623  0896                     	;# 
  2624  0897                     	;# 
  2625  0898                     	;# 
  2626  0899                     	;# 
  2627  089A                     	;# 
  2628  089B                     	;# 
  2629  090C                     	;# 
  2630  090E                     	;# 
  2631  090F                     	;# 
  2632  091F                     	;# 
  2633  098F                     	;# 
  2634  098F                     	;# 
  2635  0990                     	;# 
  2636  0991                     	;# 
  2637  0992                     	;# 
  2638  0993                     	;# 
  2639  0994                     	;# 
  2640  0995                     	;# 
  2641  0996                     	;# 
  2642  0997                     	;# 
  2643  0A19                     	;# 
  2644  0A19                     	;# 
  2645  0A1A                     	;# 
  2646  0A1A                     	;# 
  2647  0A1B                     	;# 
  2648  0A1B                     	;# 
  2649  0A1B                     	;# 
  2650  0A1C                     	;# 
  2651  0A1C                     	;# 
  2652  0A1D                     	;# 
  2653  0A1D                     	;# 
  2654  0A1E                     	;# 
  2655  0A1E                     	;# 
  2656  0A1F                     	;# 
  2657  0A1F                     	;# 
  2658  0A1F                     	;# 
  2659  1E0F                     	;# 
  2660  1E10                     	;# 
  2661  1E11                     	;# 
  2662  1E12                     	;# 
  2663  1E13                     	;# 
  2664  1E14                     	;# 
  2665  1E15                     	;# 
  2666  1E16                     	;# 
  2667  1E17                     	;# 
  2668  1E18                     	;# 
  2669  1E19                     	;# 
  2670  1E1A                     	;# 
  2671  1E1B                     	;# 
  2672  1E1C                     	;# 
  2673  1E1D                     	;# 
  2674  1E1E                     	;# 
  2675  1E1F                     	;# 
  2676  1E20                     	;# 
  2677  1E21                     	;# 
  2678  1E22                     	;# 
  2679  1E23                     	;# 
  2680  1E24                     	;# 
  2681  1E25                     	;# 
  2682  1E26                     	;# 
  2683  1E27                     	;# 
  2684  1E28                     	;# 
  2685  1E29                     	;# 
  2686  1E2A                     	;# 
  2687  1E2B                     	;# 
  2688  1E2C                     	;# 
  2689  1E2D                     	;# 
  2690  1E2E                     	;# 
  2691  1E2F                     	;# 
  2692  1E30                     	;# 
  2693  1E31                     	;# 
  2694  1E32                     	;# 
  2695  1E33                     	;# 
  2696  1E34                     	;# 
  2697  1E35                     	;# 
  2698  1E36                     	;# 
  2699  1E37                     	;# 
  2700  1E8F                     	;# 
  2701  1E90                     	;# 
  2702  1E91                     	;# 
  2703  1E92                     	;# 
  2704  1E93                     	;# 
  2705  1E94                     	;# 
  2706  1E95                     	;# 
  2707  1E96                     	;# 
  2708  1E97                     	;# 
  2709  1E9C                     	;# 
  2710  1E9D                     	;# 
  2711  1E9E                     	;# 
  2712  1EA1                     	;# 
  2713  1EA2                     	;# 
  2714  1EA3                     	;# 
  2715  1EA4                     	;# 
  2716  1EA5                     	;# 
  2717  1EA9                     	;# 
  2718  1EAA                     	;# 
  2719  1EAB                     	;# 
  2720  1EAC                     	;# 
  2721  1EB1                     	;# 
  2722  1EB2                     	;# 
  2723  1EB3                     	;# 
  2724  1EB8                     	;# 
  2725  1EB9                     	;# 
  2726  1EBA                     	;# 
  2727  1EBB                     	;# 
  2728  1EBC                     	;# 
  2729  1EBD                     	;# 
  2730  1EBE                     	;# 
  2731  1EC3                     	;# 
  2732  1EC5                     	;# 
  2733  1EC6                     	;# 
  2734  1EC7                     	;# 
  2735  1EC8                     	;# 
  2736  1EC9                     	;# 
  2737  1ECA                     	;# 
  2738  1ECB                     	;# 
  2739  1ECB                     	;# 
  2740  1ECB                     	;# 
  2741  1ECC                     	;# 
  2742  1ECC                     	;# 
  2743  1ECC                     	;# 
  2744  1ECD                     	;# 
  2745  1ECD                     	;# 
  2746  1ECE                     	;# 
  2747  1ECE                     	;# 
  2748  1F10                     	;# 
  2749  1F11                     	;# 
  2750  1F12                     	;# 
  2751  1F13                     	;# 
  2752  1F14                     	;# 
  2753  1F15                     	;# 
  2754  1F16                     	;# 
  2755  1F17                     	;# 
  2756  1F18                     	;# 
  2757  1F19                     	;# 
  2758  1F1A                     	;# 
  2759  1F1B                     	;# 
  2760  1F1C                     	;# 
  2761  1F1D                     	;# 
  2762  1F1E                     	;# 
  2763  1F1F                     	;# 
  2764  1F20                     	;# 
  2765  1F21                     	;# 
  2766  1F22                     	;# 
  2767  1F23                     	;# 
  2768  1F24                     	;# 
  2769  1F25                     	;# 
  2770  1F26                     	;# 
  2771  1F27                     	;# 
  2772  1F38                     	;# 
  2773  1F39                     	;# 
  2774  1F3A                     	;# 
  2775  1F3B                     	;# 
  2776  1F3C                     	;# 
  2777  1F3D                     	;# 
  2778  1F3E                     	;# 
  2779  1F3F                     	;# 
  2780  1F43                     	;# 
  2781  1F44                     	;# 
  2782  1F45                     	;# 
  2783  1F46                     	;# 
  2784  1F47                     	;# 
  2785  1F48                     	;# 
  2786  1F49                     	;# 
  2787  1F4A                     	;# 
  2788  1F4E                     	;# 
  2789  1F4F                     	;# 
  2790  1F50                     	;# 
  2791  1F51                     	;# 
  2792  1F52                     	;# 
  2793  1F53                     	;# 
  2794  1F54                     	;# 
  2795  1F55                     	;# 
  2796  1F65                     	;# 
  2797  1F66                     	;# 
  2798  1F67                     	;# 
  2799  1F68                     	;# 
  2800  1F69                     	;# 
  2801  1F6A                     	;# 
  2802  1F6B                     	;# 
  2803  1FE4                     	;# 
  2804  1FE5                     	;# 
  2805  1FE6                     	;# 
  2806  1FE7                     	;# 
  2807  1FE8                     	;# 
  2808  1FE8                     	;# 
  2809  1FE9                     	;# 
  2810  1FEA                     	;# 
  2811  1FEB                     	;# 
  2812  1FED                     	;# 
  2813  1FEE                     	;# 
  2814  1FEF                     	;# 
  2815  0000                     	;# 
  2816  0001                     	;# 
  2817  0002                     	;# 
  2818  0003                     	;# 
  2819  0004                     	;# 
  2820  0005                     	;# 
  2821  0006                     	;# 
  2822  0007                     	;# 
  2823  0008                     	;# 
  2824  0009                     	;# 
  2825  000A                     	;# 
  2826  000B                     	;# 
  2827  000C                     	;# 
  2828  000D                     	;# 
  2829  000E                     	;# 
  2830  0010                     	;# 
  2831  0012                     	;# 
  2832  0013                     	;# 
  2833  0014                     	;# 
  2834  0016                     	;# 
  2835  0018                     	;# 
  2836  0019                     	;# 
  2837  001A                     	;# 
  2838  001C                     	;# 
  2839  008C                     	;# 
  2840  008C                     	;# 
  2841  008D                     	;# 
  2842  008E                     	;# 
  2843  008E                     	;# 
  2844  008F                     	;# 
  2845  0090                     	;# 
  2846  0090                     	;# 
  2847  0091                     	;# 
  2848  0092                     	;# 
  2849  0092                     	;# 
  2850  0093                     	;# 
  2851  0094                     	;# 
  2852  0094                     	;# 
  2853  0095                     	;# 
  2854  0096                     	;# 
  2855  0096                     	;# 
  2856  0097                     	;# 
  2857  0098                     	;# 
  2858  0099                     	;# 
  2859  009A                     	;# 
  2860  009B                     	;# 
  2861  009B                     	;# 
  2862  009C                     	;# 
  2863  009D                     	;# 
  2864  009D                     	;# 
  2865  009E                     	;# 
  2866  009F                     	;# 
  2867  010C                     	;# 
  2868  010C                     	;# 
  2869  010D                     	;# 
  2870  010E                     	;# 
  2871  010F                     	;# 
  2872  010F                     	;# 
  2873  0110                     	;# 
  2874  0111                     	;# 
  2875  0112                     	;# 
  2876  0113                     	;# 
  2877  0114                     	;# 
  2878  0115                     	;# 
  2879  0116                     	;# 
  2880  0117                     	;# 
  2881  0118                     	;# 
  2882  0119                     	;# 
  2883  0119                     	;# 
  2884  0119                     	;# 
  2885  011A                     	;# 
  2886  011A                     	;# 
  2887  011A                     	;# 
  2888  011B                     	;# 
  2889  011B                     	;# 
  2890  011B                     	;# 
  2891  011B                     	;# 
  2892  011B                     	;# 
  2893  011C                     	;# 
  2894  011C                     	;# 
  2895  011C                     	;# 
  2896  011D                     	;# 
  2897  011D                     	;# 
  2898  011D                     	;# 
  2899  011E                     	;# 
  2900  011E                     	;# 
  2901  011E                     	;# 
  2902  011F                     	;# 
  2903  011F                     	;# 
  2904  011F                     	;# 
  2905  011F                     	;# 
  2906  011F                     	;# 
  2907  018C                     	;# 
  2908  018D                     	;# 
  2909  018E                     	;# 
  2910  018F                     	;# 
  2911  0190                     	;# 
  2912  0191                     	;# 
  2913  0192                     	;# 
  2914  0196                     	;# 
  2915  0197                     	;# 
  2916  0198                     	;# 
  2917  0199                     	;# 
  2918  019A                     	;# 
  2919  019B                     	;# 
  2920  019C                     	;# 
  2921  020C                     	;# 
  2922  020D                     	;# 
  2923  020E                     	;# 
  2924  020E                     	;# 
  2925  020F                     	;# 
  2926  020F                     	;# 
  2927  0210                     	;# 
  2928  0210                     	;# 
  2929  0211                     	;# 
  2930  0211                     	;# 
  2931  0212                     	;# 
  2932  0213                     	;# 
  2933  0214                     	;# 
  2934  0214                     	;# 
  2935  0215                     	;# 
  2936  0215                     	;# 
  2937  0216                     	;# 
  2938  0216                     	;# 
  2939  0217                     	;# 
  2940  0217                     	;# 
  2941  0218                     	;# 
  2942  0219                     	;# 
  2943  021A                     	;# 
  2944  021A                     	;# 
  2945  021B                     	;# 
  2946  021B                     	;# 
  2947  021C                     	;# 
  2948  021C                     	;# 
  2949  021D                     	;# 
  2950  021D                     	;# 
  2951  021E                     	;# 
  2952  021F                     	;# 
  2953  028C                     	;# 
  2954  028C                     	;# 
  2955  028D                     	;# 
  2956  028D                     	;# 
  2957  028E                     	;# 
  2958  028F                     	;# 
  2959  0290                     	;# 
  2960  0291                     	;# 
  2961  0292                     	;# 
  2962  0292                     	;# 
  2963  0293                     	;# 
  2964  0293                     	;# 
  2965  0294                     	;# 
  2966  0295                     	;# 
  2967  0296                     	;# 
  2968  0297                     	;# 
  2969  0298                     	;# 
  2970  0298                     	;# 
  2971  0299                     	;# 
  2972  0299                     	;# 
  2973  029A                     	;# 
  2974  029B                     	;# 
  2975  029C                     	;# 
  2976  029D                     	;# 
  2977  029F                     	;# 
  2978  030C                     	;# 
  2979  030C                     	;# 
  2980  030D                     	;# 
  2981  030E                     	;# 
  2982  030F                     	;# 
  2983  0310                     	;# 
  2984  0310                     	;# 
  2985  0311                     	;# 
  2986  0312                     	;# 
  2987  0313                     	;# 
  2988  0314                     	;# 
  2989  0314                     	;# 
  2990  0315                     	;# 
  2991  0316                     	;# 
  2992  0317                     	;# 
  2993  0318                     	;# 
  2994  0318                     	;# 
  2995  0319                     	;# 
  2996  031A                     	;# 
  2997  031B                     	;# 
  2998  031C                     	;# 
  2999  031C                     	;# 
  3000  031D                     	;# 
  3001  031E                     	;# 
  3002  031F                     	;# 
  3003  038C                     	;# 
  3004  038C                     	;# 
  3005  038D                     	;# 
  3006  038E                     	;# 
  3007  0390                     	;# 
  3008  0390                     	;# 
  3009  0391                     	;# 
  3010  0392                     	;# 
  3011  048C                     	;# 
  3012  048C                     	;# 
  3013  048D                     	;# 
  3014  048E                     	;# 
  3015  048F                     	;# 
  3016  048F                     	;# 
  3017  0490                     	;# 
  3018  0491                     	;# 
  3019  0492                     	;# 
  3020  0492                     	;# 
  3021  0493                     	;# 
  3022  0494                     	;# 
  3023  0495                     	;# 
  3024  0495                     	;# 
  3025  0496                     	;# 
  3026  0497                     	;# 
  3027  0498                     	;# 
  3028  0499                     	;# 
  3029  049A                     	;# 
  3030  049B                     	;# 
  3031  049C                     	;# 
  3032  049D                     	;# 
  3033  050C                     	;# 
  3034  050C                     	;# 
  3035  050D                     	;# 
  3036  050E                     	;# 
  3037  050F                     	;# 
  3038  050F                     	;# 
  3039  0510                     	;# 
  3040  0511                     	;# 
  3041  0512                     	;# 
  3042  0512                     	;# 
  3043  0513                     	;# 
  3044  0514                     	;# 
  3045  0515                     	;# 
  3046  0515                     	;# 
  3047  0516                     	;# 
  3048  0517                     	;# 
  3049  0518                     	;# 
  3050  0519                     	;# 
  3051  051A                     	;# 
  3052  051B                     	;# 
  3053  051C                     	;# 
  3054  051D                     	;# 
  3055  058C                     	;# 
  3056  058C                     	;# 
  3057  058D                     	;# 
  3058  058E                     	;# 
  3059  058F                     	;# 
  3060  058F                     	;# 
  3061  0590                     	;# 
  3062  0591                     	;# 
  3063  0592                     	;# 
  3064  0593                     	;# 
  3065  059C                     	;# 
  3066  059C                     	;# 
  3067  059D                     	;# 
  3068  059D                     	;# 
  3069  059E                     	;# 
  3070  059F                     	;# 
  3071  060C                     	;# 
  3072  060C                     	;# 
  3073  060D                     	;# 
  3074  060D                     	;# 
  3075  060E                     	;# 
  3076  060F                     	;# 
  3077  0610                     	;# 
  3078  0611                     	;# 
  3079  0612                     	;# 
  3080  0613                     	;# 
  3081  0614                     	;# 
  3082  0616                     	;# 
  3083  0616                     	;# 
  3084  0617                     	;# 
  3085  0617                     	;# 
  3086  0618                     	;# 
  3087  0619                     	;# 
  3088  061A                     	;# 
  3089  061B                     	;# 
  3090  061C                     	;# 
  3091  061D                     	;# 
  3092  061E                     	;# 
  3093  068C                     	;# 
  3094  068D                     	;# 
  3095  068E                     	;# 
  3096  068F                     	;# 
  3097  0690                     	;# 
  3098  0691                     	;# 
  3099  0692                     	;# 
  3100  0693                     	;# 
  3101  0694                     	;# 
  3102  070C                     	;# 
  3103  070D                     	;# 
  3104  070E                     	;# 
  3105  070F                     	;# 
  3106  0710                     	;# 
  3107  0711                     	;# 
  3108  0712                     	;# 
  3109  0713                     	;# 
  3110  0714                     	;# 
  3111  0716                     	;# 
  3112  0717                     	;# 
  3113  0718                     	;# 
  3114  0719                     	;# 
  3115  071A                     	;# 
  3116  071B                     	;# 
  3117  071C                     	;# 
  3118  071D                     	;# 
  3119  071E                     	;# 
  3120  0796                     	;# 
  3121  0797                     	;# 
  3122  0798                     	;# 
  3123  0799                     	;# 
  3124  079A                     	;# 
  3125  079B                     	;# 
  3126  079C                     	;# 
  3127  079D                     	;# 
  3128  080C                     	;# 
  3129  080D                     	;# 
  3130  080E                     	;# 
  3131  080F                     	;# 
  3132  0810                     	;# 
  3133  0811                     	;# 
  3134  0812                     	;# 
  3135  0813                     	;# 
  3136  0814                     	;# 
  3137  081A                     	;# 
  3138  081A                     	;# 
  3139  081B                     	;# 
  3140  081C                     	;# 
  3141  081C                     	;# 
  3142  081D                     	;# 
  3143  081E                     	;# 
  3144  081F                     	;# 
  3145  088C                     	;# 
  3146  088D                     	;# 
  3147  088E                     	;# 
  3148  088F                     	;# 
  3149  0890                     	;# 
  3150  0891                     	;# 
  3151  0892                     	;# 
  3152  0893                     	;# 
  3153  0895                     	;# 
  3154  0896                     	;# 
  3155  0897                     	;# 
  3156  0898                     	;# 
  3157  0899                     	;# 
  3158  089A                     	;# 
  3159  089B                     	;# 
  3160  090C                     	;# 
  3161  090E                     	;# 
  3162  090F                     	;# 
  3163  091F                     	;# 
  3164  098F                     	;# 
  3165  098F                     	;# 
  3166  0990                     	;# 
  3167  0991                     	;# 
  3168  0992                     	;# 
  3169  0993                     	;# 
  3170  0994                     	;# 
  3171  0995                     	;# 
  3172  0996                     	;# 
  3173  0997                     	;# 
  3174  0A19                     	;# 
  3175  0A19                     	;# 
  3176  0A1A                     	;# 
  3177  0A1A                     	;# 
  3178  0A1B                     	;# 
  3179  0A1B                     	;# 
  3180  0A1B                     	;# 
  3181  0A1C                     	;# 
  3182  0A1C                     	;# 
  3183  0A1D                     	;# 
  3184  0A1D                     	;# 
  3185  0A1E                     	;# 
  3186  0A1E                     	;# 
  3187  0A1F                     	;# 
  3188  0A1F                     	;# 
  3189  0A1F                     	;# 
  3190  1E0F                     	;# 
  3191  1E10                     	;# 
  3192  1E11                     	;# 
  3193  1E12                     	;# 
  3194  1E13                     	;# 
  3195  1E14                     	;# 
  3196  1E15                     	;# 
  3197  1E16                     	;# 
  3198  1E17                     	;# 
  3199  1E18                     	;# 
  3200  1E19                     	;# 
  3201  1E1A                     	;# 
  3202  1E1B                     	;# 
  3203  1E1C                     	;# 
  3204  1E1D                     	;# 
  3205  1E1E                     	;# 
  3206  1E1F                     	;# 
  3207  1E20                     	;# 
  3208  1E21                     	;# 
  3209  1E22                     	;# 
  3210  1E23                     	;# 
  3211  1E24                     	;# 
  3212  1E25                     	;# 
  3213  1E26                     	;# 
  3214  1E27                     	;# 
  3215  1E28                     	;# 
  3216  1E29                     	;# 
  3217  1E2A                     	;# 
  3218  1E2B                     	;# 
  3219  1E2C                     	;# 
  3220  1E2D                     	;# 
  3221  1E2E                     	;# 
  3222  1E2F                     	;# 
  3223  1E30                     	;# 
  3224  1E31                     	;# 
  3225  1E32                     	;# 
  3226  1E33                     	;# 
  3227  1E34                     	;# 
  3228  1E35                     	;# 
  3229  1E36                     	;# 
  3230  1E37                     	;# 
  3231  1E8F                     	;# 
  3232  1E90                     	;# 
  3233  1E91                     	;# 
  3234  1E92                     	;# 
  3235  1E93                     	;# 
  3236  1E94                     	;# 
  3237  1E95                     	;# 
  3238  1E96                     	;# 
  3239  1E97                     	;# 
  3240  1E9C                     	;# 
  3241  1E9D                     	;# 
  3242  1E9E                     	;# 
  3243  1EA1                     	;# 
  3244  1EA2                     	;# 
  3245  1EA3                     	;# 
  3246  1EA4                     	;# 
  3247  1EA5                     	;# 
  3248  1EA9                     	;# 
  3249  1EAA                     	;# 
  3250  1EAB                     	;# 
  3251  1EAC                     	;# 
  3252  1EB1                     	;# 
  3253  1EB2                     	;# 
  3254  1EB3                     	;# 
  3255  1EB8                     	;# 
  3256  1EB9                     	;# 
  3257  1EBA                     	;# 
  3258  1EBB                     	;# 
  3259  1EBC                     	;# 
  3260  1EBD                     	;# 
  3261  1EBE                     	;# 
  3262  1EC3                     	;# 
  3263  1EC5                     	;# 
  3264  1EC6                     	;# 
  3265  1EC7                     	;# 
  3266  1EC8                     	;# 
  3267  1EC9                     	;# 
  3268  1ECA                     	;# 
  3269  1ECB                     	;# 
  3270  1ECB                     	;# 
  3271  1ECB                     	;# 
  3272  1ECC                     	;# 
  3273  1ECC                     	;# 
  3274  1ECC                     	;# 
  3275  1ECD                     	;# 
  3276  1ECD                     	;# 
  3277  1ECE                     	;# 
  3278  1ECE                     	;# 
  3279  1F10                     	;# 
  3280  1F11                     	;# 
  3281  1F12                     	;# 
  3282  1F13                     	;# 
  3283  1F14                     	;# 
  3284  1F15                     	;# 
  3285  1F16                     	;# 
  3286  1F17                     	;# 
  3287  1F18                     	;# 
  3288  1F19                     	;# 
  3289  1F1A                     	;# 
  3290  1F1B                     	;# 
  3291  1F1C                     	;# 
  3292  1F1D                     	;# 
  3293  1F1E                     	;# 
  3294  1F1F                     	;# 
  3295  1F20                     	;# 
  3296  1F21                     	;# 
  3297  1F22                     	;# 
  3298  1F23                     	;# 
  3299  1F24                     	;# 
  3300  1F25                     	;# 
  3301  1F26                     	;# 
  3302  1F27                     	;# 
  3303  1F38                     	;# 
  3304  1F39                     	;# 
  3305  1F3A                     	;# 
  3306  1F3B                     	;# 
  3307  1F3C                     	;# 
  3308  1F3D                     	;# 
  3309  1F3E                     	;# 
  3310  1F3F                     	;# 
  3311  1F43                     	;# 
  3312  1F44                     	;# 
  3313  1F45                     	;# 
  3314  1F46                     	;# 
  3315  1F47                     	;# 
  3316  1F48                     	;# 
  3317  1F49                     	;# 
  3318  1F4A                     	;# 
  3319  1F4E                     	;# 
  3320  1F4F                     	;# 
  3321  1F50                     	;# 
  3322  1F51                     	;# 
  3323  1F52                     	;# 
  3324  1F53                     	;# 
  3325  1F54                     	;# 
  3326  1F55                     	;# 
  3327  1F65                     	;# 
  3328  1F66                     	;# 
  3329  1F67                     	;# 
  3330  1F68                     	;# 
  3331  1F69                     	;# 
  3332  1F6A                     	;# 
  3333  1F6B                     	;# 
  3334  1FE4                     	;# 
  3335  1FE5                     	;# 
  3336  1FE6                     	;# 
  3337  1FE7                     	;# 
  3338  1FE8                     	;# 
  3339  1FE8                     	;# 
  3340  1FE9                     	;# 
  3341  1FEA                     	;# 
  3342  1FEB                     	;# 
  3343  1FED                     	;# 
  3344  1FEE                     	;# 
  3345  1FEF                     	;# 
  3346  0000                     	;# 
  3347  0001                     	;# 
  3348  0002                     	;# 
  3349  0003                     	;# 
  3350  0004                     	;# 
  3351  0005                     	;# 
  3352  0006                     	;# 
  3353  0007                     	;# 
  3354  0008                     	;# 
  3355  0009                     	;# 
  3356  000A                     	;# 
  3357  000B                     	;# 
  3358  000C                     	;# 
  3359  000D                     	;# 
  3360  000E                     	;# 
  3361  0010                     	;# 
  3362  0012                     	;# 
  3363  0013                     	;# 
  3364  0014                     	;# 
  3365  0016                     	;# 
  3366  0018                     	;# 
  3367  0019                     	;# 
  3368  001A                     	;# 
  3369  001C                     	;# 
  3370  008C                     	;# 
  3371  008C                     	;# 
  3372  008D                     	;# 
  3373  008E                     	;# 
  3374  008E                     	;# 
  3375  008F                     	;# 
  3376  0090                     	;# 
  3377  0090                     	;# 
  3378  0091                     	;# 
  3379  0092                     	;# 
  3380  0092                     	;# 
  3381  0093                     	;# 
  3382  0094                     	;# 
  3383  0094                     	;# 
  3384  0095                     	;# 
  3385  0096                     	;# 
  3386  0096                     	;# 
  3387  0097                     	;# 
  3388  0098                     	;# 
  3389  0099                     	;# 
  3390  009A                     	;# 
  3391  009B                     	;# 
  3392  009B                     	;# 
  3393  009C                     	;# 
  3394  009D                     	;# 
  3395  009D                     	;# 
  3396  009E                     	;# 
  3397  009F                     	;# 
  3398  010C                     	;# 
  3399  010C                     	;# 
  3400  010D                     	;# 
  3401  010E                     	;# 
  3402  010F                     	;# 
  3403  010F                     	;# 
  3404  0110                     	;# 
  3405  0111                     	;# 
  3406  0112                     	;# 
  3407  0113                     	;# 
  3408  0114                     	;# 
  3409  0115                     	;# 
  3410  0116                     	;# 
  3411  0117                     	;# 
  3412  0118                     	;# 
  3413  0119                     	;# 
  3414  0119                     	;# 
  3415  0119                     	;# 
  3416  011A                     	;# 
  3417  011A                     	;# 
  3418  011A                     	;# 
  3419  011B                     	;# 
  3420  011B                     	;# 
  3421  011B                     	;# 
  3422  011B                     	;# 
  3423  011B                     	;# 
  3424  011C                     	;# 
  3425  011C                     	;# 
  3426  011C                     	;# 
  3427  011D                     	;# 
  3428  011D                     	;# 
  3429  011D                     	;# 
  3430  011E                     	;# 
  3431  011E                     	;# 
  3432  011E                     	;# 
  3433  011F                     	;# 
  3434  011F                     	;# 
  3435  011F                     	;# 
  3436  011F                     	;# 
  3437  011F                     	;# 
  3438  018C                     	;# 
  3439  018D                     	;# 
  3440  018E                     	;# 
  3441  018F                     	;# 
  3442  0190                     	;# 
  3443  0191                     	;# 
  3444  0192                     	;# 
  3445  0196                     	;# 
  3446  0197                     	;# 
  3447  0198                     	;# 
  3448  0199                     	;# 
  3449  019A                     	;# 
  3450  019B                     	;# 
  3451  019C                     	;# 
  3452  020C                     	;# 
  3453  020D                     	;# 
  3454  020E                     	;# 
  3455  020E                     	;# 
  3456  020F                     	;# 
  3457  020F                     	;# 
  3458  0210                     	;# 
  3459  0210                     	;# 
  3460  0211                     	;# 
  3461  0211                     	;# 
  3462  0212                     	;# 
  3463  0213                     	;# 
  3464  0214                     	;# 
  3465  0214                     	;# 
  3466  0215                     	;# 
  3467  0215                     	;# 
  3468  0216                     	;# 
  3469  0216                     	;# 
  3470  0217                     	;# 
  3471  0217                     	;# 
  3472  0218                     	;# 
  3473  0219                     	;# 
  3474  021A                     	;# 
  3475  021A                     	;# 
  3476  021B                     	;# 
  3477  021B                     	;# 
  3478  021C                     	;# 
  3479  021C                     	;# 
  3480  021D                     	;# 
  3481  021D                     	;# 
  3482  021E                     	;# 
  3483  021F                     	;# 
  3484  028C                     	;# 
  3485  028C                     	;# 
  3486  028D                     	;# 
  3487  028D                     	;# 
  3488  028E                     	;# 
  3489  028F                     	;# 
  3490  0290                     	;# 
  3491  0291                     	;# 
  3492  0292                     	;# 
  3493  0292                     	;# 
  3494  0293                     	;# 
  3495  0293                     	;# 
  3496  0294                     	;# 
  3497  0295                     	;# 
  3498  0296                     	;# 
  3499  0297                     	;# 
  3500  0298                     	;# 
  3501  0298                     	;# 
  3502  0299                     	;# 
  3503  0299                     	;# 
  3504  029A                     	;# 
  3505  029B                     	;# 
  3506  029C                     	;# 
  3507  029D                     	;# 
  3508  029F                     	;# 
  3509  030C                     	;# 
  3510  030C                     	;# 
  3511  030D                     	;# 
  3512  030E                     	;# 
  3513  030F                     	;# 
  3514  0310                     	;# 
  3515  0310                     	;# 
  3516  0311                     	;# 
  3517  0312                     	;# 
  3518  0313                     	;# 
  3519  0314                     	;# 
  3520  0314                     	;# 
  3521  0315                     	;# 
  3522  0316                     	;# 
  3523  0317                     	;# 
  3524  0318                     	;# 
  3525  0318                     	;# 
  3526  0319                     	;# 
  3527  031A                     	;# 
  3528  031B                     	;# 
  3529  031C                     	;# 
  3530  031C                     	;# 
  3531  031D                     	;# 
  3532  031E                     	;# 
  3533  031F                     	;# 
  3534  038C                     	;# 
  3535  038C                     	;# 
  3536  038D                     	;# 
  3537  038E                     	;# 
  3538  0390                     	;# 
  3539  0390                     	;# 
  3540  0391                     	;# 
  3541  0392                     	;# 
  3542  048C                     	;# 
  3543  048C                     	;# 
  3544  048D                     	;# 
  3545  048E                     	;# 
  3546  048F                     	;# 
  3547  048F                     	;# 
  3548  0490                     	;# 
  3549  0491                     	;# 
  3550  0492                     	;# 
  3551  0492                     	;# 
  3552  0493                     	;# 
  3553  0494                     	;# 
  3554  0495                     	;# 
  3555  0495                     	;# 
  3556  0496                     	;# 
  3557  0497                     	;# 
  3558  0498                     	;# 
  3559  0499                     	;# 
  3560  049A                     	;# 
  3561  049B                     	;# 
  3562  049C                     	;# 
  3563  049D                     	;# 
  3564  050C                     	;# 
  3565  050C                     	;# 
  3566  050D                     	;# 
  3567  050E                     	;# 
  3568  050F                     	;# 
  3569  050F                     	;# 
  3570  0510                     	;# 
  3571  0511                     	;# 
  3572  0512                     	;# 
  3573  0512                     	;# 
  3574  0513                     	;# 
  3575  0514                     	;# 
  3576  0515                     	;# 
  3577  0515                     	;# 
  3578  0516                     	;# 
  3579  0517                     	;# 
  3580  0518                     	;# 
  3581  0519                     	;# 
  3582  051A                     	;# 
  3583  051B                     	;# 
  3584  051C                     	;# 
  3585  051D                     	;# 
  3586  058C                     	;# 
  3587  058C                     	;# 
  3588  058D                     	;# 
  3589  058E                     	;# 
  3590  058F                     	;# 
  3591  058F                     	;# 
  3592  0590                     	;# 
  3593  0591                     	;# 
  3594  0592                     	;# 
  3595  0593                     	;# 
  3596  059C                     	;# 
  3597  059C                     	;# 
  3598  059D                     	;# 
  3599  059D                     	;# 
  3600  059E                     	;# 
  3601  059F                     	;# 
  3602  060C                     	;# 
  3603  060C                     	;# 
  3604  060D                     	;# 
  3605  060D                     	;# 
  3606  060E                     	;# 
  3607  060F                     	;# 
  3608  0610                     	;# 
  3609  0611                     	;# 
  3610  0612                     	;# 
  3611  0613                     	;# 
  3612  0614                     	;# 
  3613  0616                     	;# 
  3614  0616                     	;# 
  3615  0617                     	;# 
  3616  0617                     	;# 
  3617  0618                     	;# 
  3618  0619                     	;# 
  3619  061A                     	;# 
  3620  061B                     	;# 
  3621  061C                     	;# 
  3622  061D                     	;# 
  3623  061E                     	;# 
  3624  068C                     	;# 
  3625  068D                     	;# 
  3626  068E                     	;# 
  3627  068F                     	;# 
  3628  0690                     	;# 
  3629  0691                     	;# 
  3630  0692                     	;# 
  3631  0693                     	;# 
  3632  0694                     	;# 
  3633  070C                     	;# 
  3634  070D                     	;# 
  3635  070E                     	;# 
  3636  070F                     	;# 
  3637  0710                     	;# 
  3638  0711                     	;# 
  3639  0712                     	;# 
  3640  0713                     	;# 
  3641  0714                     	;# 
  3642  0716                     	;# 
  3643  0717                     	;# 
  3644  0718                     	;# 
  3645  0719                     	;# 
  3646  071A                     	;# 
  3647  071B                     	;# 
  3648  071C                     	;# 
  3649  071D                     	;# 
  3650  071E                     	;# 
  3651  0796                     	;# 
  3652  0797                     	;# 
  3653  0798                     	;# 
  3654  0799                     	;# 
  3655  079A                     	;# 
  3656  079B                     	;# 
  3657  079C                     	;# 
  3658  079D                     	;# 
  3659  080C                     	;# 
  3660  080D                     	;# 
  3661  080E                     	;# 
  3662  080F                     	;# 
  3663  0810                     	;# 
  3664  0811                     	;# 
  3665  0812                     	;# 
  3666  0813                     	;# 
  3667  0814                     	;# 
  3668  081A                     	;# 
  3669  081A                     	;# 
  3670  081B                     	;# 
  3671  081C                     	;# 
  3672  081C                     	;# 
  3673  081D                     	;# 
  3674  081E                     	;# 
  3675  081F                     	;# 
  3676  088C                     	;# 
  3677  088D                     	;# 
  3678  088E                     	;# 
  3679  088F                     	;# 
  3680  0890                     	;# 
  3681  0891                     	;# 
  3682  0892                     	;# 
  3683  0893                     	;# 
  3684  0895                     	;# 
  3685  0896                     	;# 
  3686  0897                     	;# 
  3687  0898                     	;# 
  3688  0899                     	;# 
  3689  089A                     	;# 
  3690  089B                     	;# 
  3691  090C                     	;# 
  3692  090E                     	;# 
  3693  090F                     	;# 
  3694  091F                     	;# 
  3695  098F                     	;# 
  3696  098F                     	;# 
  3697  0990                     	;# 
  3698  0991                     	;# 
  3699  0992                     	;# 
  3700  0993                     	;# 
  3701  0994                     	;# 
  3702  0995                     	;# 
  3703  0996                     	;# 
  3704  0997                     	;# 
  3705  0A19                     	;# 
  3706  0A19                     	;# 
  3707  0A1A                     	;# 
  3708  0A1A                     	;# 
  3709  0A1B                     	;# 
  3710  0A1B                     	;# 
  3711  0A1B                     	;# 
  3712  0A1C                     	;# 
  3713  0A1C                     	;# 
  3714  0A1D                     	;# 
  3715  0A1D                     	;# 
  3716  0A1E                     	;# 
  3717  0A1E                     	;# 
  3718  0A1F                     	;# 
  3719  0A1F                     	;# 
  3720  0A1F                     	;# 
  3721  1E0F                     	;# 
  3722  1E10                     	;# 
  3723  1E11                     	;# 
  3724  1E12                     	;# 
  3725  1E13                     	;# 
  3726  1E14                     	;# 
  3727  1E15                     	;# 
  3728  1E16                     	;# 
  3729  1E17                     	;# 
  3730  1E18                     	;# 
  3731  1E19                     	;# 
  3732  1E1A                     	;# 
  3733  1E1B                     	;# 
  3734  1E1C                     	;# 
  3735  1E1D                     	;# 
  3736  1E1E                     	;# 
  3737  1E1F                     	;# 
  3738  1E20                     	;# 
  3739  1E21                     	;# 
  3740  1E22                     	;# 
  3741  1E23                     	;# 
  3742  1E24                     	;# 
  3743  1E25                     	;# 
  3744  1E26                     	;# 
  3745  1E27                     	;# 
  3746  1E28                     	;# 
  3747  1E29                     	;# 
  3748  1E2A                     	;# 
  3749  1E2B                     	;# 
  3750  1E2C                     	;# 
  3751  1E2D                     	;# 
  3752  1E2E                     	;# 
  3753  1E2F                     	;# 
  3754  1E30                     	;# 
  3755  1E31                     	;# 
  3756  1E32                     	;# 
  3757  1E33                     	;# 
  3758  1E34                     	;# 
  3759  1E35                     	;# 
  3760  1E36                     	;# 
  3761  1E37                     	;# 
  3762  1E8F                     	;# 
  3763  1E90                     	;# 
  3764  1E91                     	;# 
  3765  1E92                     	;# 
  3766  1E93                     	;# 
  3767  1E94                     	;# 
  3768  1E95                     	;# 
  3769  1E96                     	;# 
  3770  1E97                     	;# 
  3771  1E9C                     	;# 
  3772  1E9D                     	;# 
  3773  1E9E                     	;# 
  3774  1EA1                     	;# 
  3775  1EA2                     	;# 
  3776  1EA3                     	;# 
  3777  1EA4                     	;# 
  3778  1EA5                     	;# 
  3779  1EA9                     	;# 
  3780  1EAA                     	;# 
  3781  1EAB                     	;# 
  3782  1EAC                     	;# 
  3783  1EB1                     	;# 
  3784  1EB2                     	;# 
  3785  1EB3                     	;# 
  3786  1EB8                     	;# 
  3787  1EB9                     	;# 
  3788  1EBA                     	;# 
  3789  1EBB                     	;# 
  3790  1EBC                     	;# 
  3791  1EBD                     	;# 
  3792  1EBE                     	;# 
  3793  1EC3                     	;# 
  3794  1EC5                     	;# 
  3795  1EC6                     	;# 
  3796  1EC7                     	;# 
  3797  1EC8                     	;# 
  3798  1EC9                     	;# 
  3799  1ECA                     	;# 
  3800  1ECB                     	;# 
  3801  1ECB                     	;# 
  3802  1ECB                     	;# 
  3803  1ECC                     	;# 
  3804  1ECC                     	;# 
  3805  1ECC                     	;# 
  3806  1ECD                     	;# 
  3807  1ECD                     	;# 
  3808  1ECE                     	;# 
  3809  1ECE                     	;# 
  3810  1F10                     	;# 
  3811  1F11                     	;# 
  3812  1F12                     	;# 
  3813  1F13                     	;# 
  3814  1F14                     	;# 
  3815  1F15                     	;# 
  3816  1F16                     	;# 
  3817  1F17                     	;# 
  3818  1F18                     	;# 
  3819  1F19                     	;# 
  3820  1F1A                     	;# 
  3821  1F1B                     	;# 
  3822  1F1C                     	;# 
  3823  1F1D                     	;# 
  3824  1F1E                     	;# 
  3825  1F1F                     	;# 
  3826  1F20                     	;# 
  3827  1F21                     	;# 
  3828  1F22                     	;# 
  3829  1F23                     	;# 
  3830  1F24                     	;# 
  3831  1F25                     	;# 
  3832  1F26                     	;# 
  3833  1F27                     	;# 
  3834  1F38                     	;# 
  3835  1F39                     	;# 
  3836  1F3A                     	;# 
  3837  1F3B                     	;# 
  3838  1F3C                     	;# 
  3839  1F3D                     	;# 
  3840  1F3E                     	;# 
  3841  1F3F                     	;# 
  3842  1F43                     	;# 
  3843  1F44                     	;# 
  3844  1F45                     	;# 
  3845  1F46                     	;# 
  3846  1F47                     	;# 
  3847  1F48                     	;# 
  3848  1F49                     	;# 
  3849  1F4A                     	;# 
  3850  1F4E                     	;# 
  3851  1F4F                     	;# 
  3852  1F50                     	;# 
  3853  1F51                     	;# 
  3854  1F52                     	;# 
  3855  1F53                     	;# 
  3856  1F54                     	;# 
  3857  1F55                     	;# 
  3858  1F65                     	;# 
  3859  1F66                     	;# 
  3860  1F67                     	;# 
  3861  1F68                     	;# 
  3862  1F69                     	;# 
  3863  1F6A                     	;# 
  3864  1F6B                     	;# 
  3865  1FE4                     	;# 
  3866  1FE5                     	;# 
  3867  1FE6                     	;# 
  3868  1FE7                     	;# 
  3869  1FE8                     	;# 
  3870  1FE8                     	;# 
  3871  1FE9                     	;# 
  3872  1FEA                     	;# 
  3873  1FEB                     	;# 
  3874  1FED                     	;# 
  3875  1FEE                     	;# 
  3876  1FEF                     	;# 
  3877  0000                     	;# 
  3878  0001                     	;# 
  3879  0002                     	;# 
  3880  0003                     	;# 
  3881  0004                     	;# 
  3882  0005                     	;# 
  3883  0006                     	;# 
  3884  0007                     	;# 
  3885  0008                     	;# 
  3886  0009                     	;# 
  3887  000A                     	;# 
  3888  000B                     	;# 
  3889  000C                     	;# 
  3890  000D                     	;# 
  3891  000E                     	;# 
  3892  0010                     	;# 
  3893  0012                     	;# 
  3894  0013                     	;# 
  3895  0014                     	;# 
  3896  0016                     	;# 
  3897  0018                     	;# 
  3898  0019                     	;# 
  3899  001A                     	;# 
  3900  001C                     	;# 
  3901  008C                     	;# 
  3902  008C                     	;# 
  3903  008D                     	;# 
  3904  008E                     	;# 
  3905  008E                     	;# 
  3906  008F                     	;# 
  3907  0090                     	;# 
  3908  0090                     	;# 
  3909  0091                     	;# 
  3910  0092                     	;# 
  3911  0092                     	;# 
  3912  0093                     	;# 
  3913  0094                     	;# 
  3914  0094                     	;# 
  3915  0095                     	;# 
  3916  0096                     	;# 
  3917  0096                     	;# 
  3918  0097                     	;# 
  3919  0098                     	;# 
  3920  0099                     	;# 
  3921  009A                     	;# 
  3922  009B                     	;# 
  3923  009B                     	;# 
  3924  009C                     	;# 
  3925  009D                     	;# 
  3926  009D                     	;# 
  3927  009E                     	;# 
  3928  009F                     	;# 
  3929  010C                     	;# 
  3930  010C                     	;# 
  3931  010D                     	;# 
  3932  010E                     	;# 
  3933  010F                     	;# 
  3934  010F                     	;# 
  3935  0110                     	;# 
  3936  0111                     	;# 
  3937  0112                     	;# 
  3938  0113                     	;# 
  3939  0114                     	;# 
  3940  0115                     	;# 
  3941  0116                     	;# 
  3942  0117                     	;# 
  3943  0118                     	;# 
  3944  0119                     	;# 
  3945  0119                     	;# 
  3946  0119                     	;# 
  3947  011A                     	;# 
  3948  011A                     	;# 
  3949  011A                     	;# 
  3950  011B                     	;# 
  3951  011B                     	;# 
  3952  011B                     	;# 
  3953  011B                     	;# 
  3954  011B                     	;# 
  3955  011C                     	;# 
  3956  011C                     	;# 
  3957  011C                     	;# 
  3958  011D                     	;# 
  3959  011D                     	;# 
  3960  011D                     	;# 
  3961  011E                     	;# 
  3962  011E                     	;# 
  3963  011E                     	;# 
  3964  011F                     	;# 
  3965  011F                     	;# 
  3966  011F                     	;# 
  3967  011F                     	;# 
  3968  011F                     	;# 
  3969  018C                     	;# 
  3970  018D                     	;# 
  3971  018E                     	;# 
  3972  018F                     	;# 
  3973  0190                     	;# 
  3974  0191                     	;# 
  3975  0192                     	;# 
  3976  0196                     	;# 
  3977  0197                     	;# 
  3978  0198                     	;# 
  3979  0199                     	;# 
  3980  019A                     	;# 
  3981  019B                     	;# 
  3982  019C                     	;# 
  3983  020C                     	;# 
  3984  020D                     	;# 
  3985  020E                     	;# 
  3986  020E                     	;# 
  3987  020F                     	;# 
  3988  020F                     	;# 
  3989  0210                     	;# 
  3990  0210                     	;# 
  3991  0211                     	;# 
  3992  0211                     	;# 
  3993  0212                     	;# 
  3994  0213                     	;# 
  3995  0214                     	;# 
  3996  0214                     	;# 
  3997  0215                     	;# 
  3998  0215                     	;# 
  3999  0216                     	;# 
  4000  0216                     	;# 
  4001  0217                     	;# 
  4002  0217                     	;# 
  4003  0218                     	;# 
  4004  0219                     	;# 
  4005  021A                     	;# 
  4006  021A                     	;# 
  4007  021B                     	;# 
  4008  021B                     	;# 
  4009  021C                     	;# 
  4010  021C                     	;# 
  4011  021D                     	;# 
  4012  021D                     	;# 
  4013  021E                     	;# 
  4014  021F                     	;# 
  4015  028C                     	;# 
  4016  028C                     	;# 
  4017  028D                     	;# 
  4018  028D                     	;# 
  4019  028E                     	;# 
  4020  028F                     	;# 
  4021  0290                     	;# 
  4022  0291                     	;# 
  4023  0292                     	;# 
  4024  0292                     	;# 
  4025  0293                     	;# 
  4026  0293                     	;# 
  4027  0294                     	;# 
  4028  0295                     	;# 
  4029  0296                     	;# 
  4030  0297                     	;# 
  4031  0298                     	;# 
  4032  0298                     	;# 
  4033  0299                     	;# 
  4034  0299                     	;# 
  4035  029A                     	;# 
  4036  029B                     	;# 
  4037  029C                     	;# 
  4038  029D                     	;# 
  4039  029F                     	;# 
  4040  030C                     	;# 
  4041  030C                     	;# 
  4042  030D                     	;# 
  4043  030E                     	;# 
  4044  030F                     	;# 
  4045  0310                     	;# 
  4046  0310                     	;# 
  4047  0311                     	;# 
  4048  0312                     	;# 
  4049  0313                     	;# 
  4050  0314                     	;# 
  4051  0314                     	;# 
  4052  0315                     	;# 
  4053  0316                     	;# 
  4054  0317                     	;# 
  4055  0318                     	;# 
  4056  0318                     	;# 
  4057  0319                     	;# 
  4058  031A                     	;# 
  4059  031B                     	;# 
  4060  031C                     	;# 
  4061  031C                     	;# 
  4062  031D                     	;# 
  4063  031E                     	;# 
  4064  031F                     	;# 
  4065  038C                     	;# 
  4066  038C                     	;# 
  4067  038D                     	;# 
  4068  038E                     	;# 
  4069  0390                     	;# 
  4070  0390                     	;# 
  4071  0391                     	;# 
  4072  0392                     	;# 
  4073  048C                     	;# 
  4074  048C                     	;# 
  4075  048D                     	;# 
  4076  048E                     	;# 
  4077  048F                     	;# 
  4078  048F                     	;# 
  4079  0490                     	;# 
  4080  0491                     	;# 
  4081  0492                     	;# 
  4082  0492                     	;# 
  4083  0493                     	;# 
  4084  0494                     	;# 
  4085  0495                     	;# 
  4086  0495                     	;# 
  4087  0496                     	;# 
  4088  0497                     	;# 
  4089  0498                     	;# 
  4090  0499                     	;# 
  4091  049A                     	;# 
  4092  049B                     	;# 
  4093  049C                     	;# 
  4094  049D                     	;# 
  4095  050C                     	;# 
  4096  050C                     	;# 
  4097  050D                     	;# 
  4098  050E                     	;# 
  4099  050F                     	;# 
  4100  050F                     	;# 
  4101  0510                     	;# 
  4102  0511                     	;# 
  4103  0512                     	;# 
  4104  0512                     	;# 
  4105  0513                     	;# 
  4106  0514                     	;# 
  4107  0515                     	;# 
  4108  0515                     	;# 
  4109  0516                     	;# 
  4110  0517                     	;# 
  4111  0518                     	;# 
  4112  0519                     	;# 
  4113  051A                     	;# 
  4114  051B                     	;# 
  4115  051C                     	;# 
  4116  051D                     	;# 
  4117  058C                     	;# 
  4118  058C                     	;# 
  4119  058D                     	;# 
  4120  058E                     	;# 
  4121  058F                     	;# 
  4122  058F                     	;# 
  4123  0590                     	;# 
  4124  0591                     	;# 
  4125  0592                     	;# 
  4126  0593                     	;# 
  4127  059C                     	;# 
  4128  059C                     	;# 
  4129  059D                     	;# 
  4130  059D                     	;# 
  4131  059E                     	;# 
  4132  059F                     	;# 
  4133  060C                     	;# 
  4134  060C                     	;# 
  4135  060D                     	;# 
  4136  060D                     	;# 
  4137  060E                     	;# 
  4138  060F                     	;# 
  4139  0610                     	;# 
  4140  0611                     	;# 
  4141  0612                     	;# 
  4142  0613                     	;# 
  4143  0614                     	;# 
  4144  0616                     	;# 
  4145  0616                     	;# 
  4146  0617                     	;# 
  4147  0617                     	;# 
  4148  0618                     	;# 
  4149  0619                     	;# 
  4150  061A                     	;# 
  4151  061B                     	;# 
  4152  061C                     	;# 
  4153  061D                     	;# 
  4154  061E                     	;# 
  4155  068C                     	;# 
  4156  068D                     	;# 
  4157  068E                     	;# 
  4158  068F                     	;# 
  4159  0690                     	;# 
  4160  0691                     	;# 
  4161  0692                     	;# 
  4162  0693                     	;# 
  4163  0694                     	;# 
  4164  070C                     	;# 
  4165  070D                     	;# 
  4166  070E                     	;# 
  4167  070F                     	;# 
  4168  0710                     	;# 
  4169  0711                     	;# 
  4170  0712                     	;# 
  4171  0713                     	;# 
  4172  0714                     	;# 
  4173  0716                     	;# 
  4174  0717                     	;# 
  4175  0718                     	;# 
  4176  0719                     	;# 
  4177  071A                     	;# 
  4178  071B                     	;# 
  4179  071C                     	;# 
  4180  071D                     	;# 
  4181  071E                     	;# 
  4182  0796                     	;# 
  4183  0797                     	;# 
  4184  0798                     	;# 
  4185  0799                     	;# 
  4186  079A                     	;# 
  4187  079B                     	;# 
  4188  079C                     	;# 
  4189  079D                     	;# 
  4190  080C                     	;# 
  4191  080D                     	;# 
  4192  080E                     	;# 
  4193  080F                     	;# 
  4194  0810                     	;# 
  4195  0811                     	;# 
  4196  0812                     	;# 
  4197  0813                     	;# 
  4198  0814                     	;# 
  4199  081A                     	;# 
  4200  081A                     	;# 
  4201  081B                     	;# 
  4202  081C                     	;# 
  4203  081C                     	;# 
  4204  081D                     	;# 
  4205  081E                     	;# 
  4206  081F                     	;# 
  4207  088C                     	;# 
  4208  088D                     	;# 
  4209  088E                     	;# 
  4210  088F                     	;# 
  4211  0890                     	;# 
  4212  0891                     	;# 
  4213  0892                     	;# 
  4214  0893                     	;# 
  4215  0895                     	;# 
  4216  0896                     	;# 
  4217  0897                     	;# 
  4218  0898                     	;# 
  4219  0899                     	;# 
  4220  089A                     	;# 
  4221  089B                     	;# 
  4222  090C                     	;# 
  4223  090E                     	;# 
  4224  090F                     	;# 
  4225  091F                     	;# 
  4226  098F                     	;# 
  4227  098F                     	;# 
  4228  0990                     	;# 
  4229  0991                     	;# 
  4230  0992                     	;# 
  4231  0993                     	;# 
  4232  0994                     	;# 
  4233  0995                     	;# 
  4234  0996                     	;# 
  4235  0997                     	;# 
  4236  0A19                     	;# 
  4237  0A19                     	;# 
  4238  0A1A                     	;# 
  4239  0A1A                     	;# 
  4240  0A1B                     	;# 
  4241  0A1B                     	;# 
  4242  0A1B                     	;# 
  4243  0A1C                     	;# 
  4244  0A1C                     	;# 
  4245  0A1D                     	;# 
  4246  0A1D                     	;# 
  4247  0A1E                     	;# 
  4248  0A1E                     	;# 
  4249  0A1F                     	;# 
  4250  0A1F                     	;# 
  4251  0A1F                     	;# 
  4252  1E0F                     	;# 
  4253  1E10                     	;# 
  4254  1E11                     	;# 
  4255  1E12                     	;# 
  4256  1E13                     	;# 
  4257  1E14                     	;# 
  4258  1E15                     	;# 
  4259  1E16                     	;# 
  4260  1E17                     	;# 
  4261  1E18                     	;# 
  4262  1E19                     	;# 
  4263  1E1A                     	;# 
  4264  1E1B                     	;# 
  4265  1E1C                     	;# 
  4266  1E1D                     	;# 
  4267  1E1E                     	;# 
  4268  1E1F                     	;# 
  4269  1E20                     	;# 
  4270  1E21                     	;# 
  4271  1E22                     	;# 
  4272  1E23                     	;# 
  4273  1E24                     	;# 
  4274  1E25                     	;# 
  4275  1E26                     	;# 
  4276  1E27                     	;# 
  4277  1E28                     	;# 
  4278  1E29                     	;# 
  4279  1E2A                     	;# 
  4280  1E2B                     	;# 
  4281  1E2C                     	;# 
  4282  1E2D                     	;# 
  4283  1E2E                     	;# 
  4284  1E2F                     	;# 
  4285  1E30                     	;# 
  4286  1E31                     	;# 
  4287  1E32                     	;# 
  4288  1E33                     	;# 
  4289  1E34                     	;# 
  4290  1E35                     	;# 
  4291  1E36                     	;# 
  4292  1E37                     	;# 
  4293  1E8F                     	;# 
  4294  1E90                     	;# 
  4295  1E91                     	;# 
  4296  1E92                     	;# 
  4297  1E93                     	;# 
  4298  1E94                     	;# 
  4299  1E95                     	;# 
  4300  1E96                     	;# 
  4301  1E97                     	;# 
  4302  1E9C                     	;# 
  4303  1E9D                     	;# 
  4304  1E9E                     	;# 
  4305  1EA1                     	;# 
  4306  1EA2                     	;# 
  4307  1EA3                     	;# 
  4308  1EA4                     	;# 
  4309  1EA5                     	;# 
  4310  1EA9                     	;# 
  4311  1EAA                     	;# 
  4312  1EAB                     	;# 
  4313  1EAC                     	;# 
  4314  1EB1                     	;# 
  4315  1EB2                     	;# 
  4316  1EB3                     	;# 
  4317  1EB8                     	;# 
  4318  1EB9                     	;# 
  4319  1EBA                     	;# 
  4320  1EBB                     	;# 
  4321  1EBC                     	;# 
  4322  1EBD                     	;# 
  4323  1EBE                     	;# 
  4324  1EC3                     	;# 
  4325  1EC5                     	;# 
  4326  1EC6                     	;# 
  4327  1EC7                     	;# 
  4328  1EC8                     	;# 
  4329  1EC9                     	;# 
  4330  1ECA                     	;# 
  4331  1ECB                     	;# 
  4332  1ECB                     	;# 
  4333  1ECB                     	;# 
  4334  1ECC                     	;# 
  4335  1ECC                     	;# 
  4336  1ECC                     	;# 
  4337  1ECD                     	;# 
  4338  1ECD                     	;# 
  4339  1ECE                     	;# 
  4340  1ECE                     	;# 
  4341  1F10                     	;# 
  4342  1F11                     	;# 
  4343  1F12                     	;# 
  4344  1F13                     	;# 
  4345  1F14                     	;# 
  4346  1F15                     	;# 
  4347  1F16                     	;# 
  4348  1F17                     	;# 
  4349  1F18                     	;# 
  4350  1F19                     	;# 
  4351  1F1A                     	;# 
  4352  1F1B                     	;# 
  4353  1F1C                     	;# 
  4354  1F1D                     	;# 
  4355  1F1E                     	;# 
  4356  1F1F                     	;# 
  4357  1F20                     	;# 
  4358  1F21                     	;# 
  4359  1F22                     	;# 
  4360  1F23                     	;# 
  4361  1F24                     	;# 
  4362  1F25                     	;# 
  4363  1F26                     	;# 
  4364  1F27                     	;# 
  4365  1F38                     	;# 
  4366  1F39                     	;# 
  4367  1F3A                     	;# 
  4368  1F3B                     	;# 
  4369  1F3C                     	;# 
  4370  1F3D                     	;# 
  4371  1F3E                     	;# 
  4372  1F3F                     	;# 
  4373  1F43                     	;# 
  4374  1F44                     	;# 
  4375  1F45                     	;# 
  4376  1F46                     	;# 
  4377  1F47                     	;# 
  4378  1F48                     	;# 
  4379  1F49                     	;# 
  4380  1F4A                     	;# 
  4381  1F4E                     	;# 
  4382  1F4F                     	;# 
  4383  1F50                     	;# 
  4384  1F51                     	;# 
  4385  1F52                     	;# 
  4386  1F53                     	;# 
  4387  1F54                     	;# 
  4388  1F55                     	;# 
  4389  1F65                     	;# 
  4390  1F66                     	;# 
  4391  1F67                     	;# 
  4392  1F68                     	;# 
  4393  1F69                     	;# 
  4394  1F6A                     	;# 
  4395  1F6B                     	;# 
  4396  1FE4                     	;# 
  4397  1FE5                     	;# 
  4398  1FE6                     	;# 
  4399  1FE7                     	;# 
  4400  1FE8                     	;# 
  4401  1FE8                     	;# 
  4402  1FE9                     	;# 
  4403  1FEA                     	;# 
  4404  1FEB                     	;# 
  4405  1FED                     	;# 
  4406  1FEE                     	;# 
  4407  1FEF                     	;# 
  4408  0000                     	;# 
  4409  0001                     	;# 
  4410  0002                     	;# 
  4411  0003                     	;# 
  4412  0004                     	;# 
  4413  0005                     	;# 
  4414  0006                     	;# 
  4415  0007                     	;# 
  4416  0008                     	;# 
  4417  0009                     	;# 
  4418  000A                     	;# 
  4419  000B                     	;# 
  4420  000C                     	;# 
  4421  000D                     	;# 
  4422  000E                     	;# 
  4423  0010                     	;# 
  4424  0012                     	;# 
  4425  0013                     	;# 
  4426  0014                     	;# 
  4427  0016                     	;# 
  4428  0018                     	;# 
  4429  0019                     	;# 
  4430  001A                     	;# 
  4431  001C                     	;# 
  4432  008C                     	;# 
  4433  008C                     	;# 
  4434  008D                     	;# 
  4435  008E                     	;# 
  4436  008E                     	;# 
  4437  008F                     	;# 
  4438  0090                     	;# 
  4439  0090                     	;# 
  4440  0091                     	;# 
  4441  0092                     	;# 
  4442  0092                     	;# 
  4443  0093                     	;# 
  4444  0094                     	;# 
  4445  0094                     	;# 
  4446  0095                     	;# 
  4447  0096                     	;# 
  4448  0096                     	;# 
  4449  0097                     	;# 
  4450  0098                     	;# 
  4451  0099                     	;# 
  4452  009A                     	;# 
  4453  009B                     	;# 
  4454  009B                     	;# 
  4455  009C                     	;# 
  4456  009D                     	;# 
  4457  009D                     	;# 
  4458  009E                     	;# 
  4459  009F                     	;# 
  4460  010C                     	;# 
  4461  010C                     	;# 
  4462  010D                     	;# 
  4463  010E                     	;# 
  4464  010F                     	;# 
  4465  010F                     	;# 
  4466  0110                     	;# 
  4467  0111                     	;# 
  4468  0112                     	;# 
  4469  0113                     	;# 
  4470  0114                     	;# 
  4471  0115                     	;# 
  4472  0116                     	;# 
  4473  0117                     	;# 
  4474  0118                     	;# 
  4475  0119                     	;# 
  4476  0119                     	;# 
  4477  0119                     	;# 
  4478  011A                     	;# 
  4479  011A                     	;# 
  4480  011A                     	;# 
  4481  011B                     	;# 
  4482  011B                     	;# 
  4483  011B                     	;# 
  4484  011B                     	;# 
  4485  011B                     	;# 
  4486  011C                     	;# 
  4487  011C                     	;# 
  4488  011C                     	;# 
  4489  011D                     	;# 
  4490  011D                     	;# 
  4491  011D                     	;# 
  4492  011E                     	;# 
  4493  011E                     	;# 
  4494  011E                     	;# 
  4495  011F                     	;# 
  4496  011F                     	;# 
  4497  011F                     	;# 
  4498  011F                     	;# 
  4499  011F                     	;# 
  4500  018C                     	;# 
  4501  018D                     	;# 
  4502  018E                     	;# 
  4503  018F                     	;# 
  4504  0190                     	;# 
  4505  0191                     	;# 
  4506  0192                     	;# 
  4507  0196                     	;# 
  4508  0197                     	;# 
  4509  0198                     	;# 
  4510  0199                     	;# 
  4511  019A                     	;# 
  4512  019B                     	;# 
  4513  019C                     	;# 
  4514  020C                     	;# 
  4515  020D                     	;# 
  4516  020E                     	;# 
  4517  020E                     	;# 
  4518  020F                     	;# 
  4519  020F                     	;# 
  4520  0210                     	;# 
  4521  0210                     	;# 
  4522  0211                     	;# 
  4523  0211                     	;# 
  4524  0212                     	;# 
  4525  0213                     	;# 
  4526  0214                     	;# 
  4527  0214                     	;# 
  4528  0215                     	;# 
  4529  0215                     	;# 
  4530  0216                     	;# 
  4531  0216                     	;# 
  4532  0217                     	;# 
  4533  0217                     	;# 
  4534  0218                     	;# 
  4535  0219                     	;# 
  4536  021A                     	;# 
  4537  021A                     	;# 
  4538  021B                     	;# 
  4539  021B                     	;# 
  4540  021C                     	;# 
  4541  021C                     	;# 
  4542  021D                     	;# 
  4543  021D                     	;# 
  4544  021E                     	;# 
  4545  021F                     	;# 
  4546  028C                     	;# 
  4547  028C                     	;# 
  4548  028D                     	;# 
  4549  028D                     	;# 
  4550  028E                     	;# 
  4551  028F                     	;# 
  4552  0290                     	;# 
  4553  0291                     	;# 
  4554  0292                     	;# 
  4555  0292                     	;# 
  4556  0293                     	;# 
  4557  0293                     	;# 
  4558  0294                     	;# 
  4559  0295                     	;# 
  4560  0296                     	;# 
  4561  0297                     	;# 
  4562  0298                     	;# 
  4563  0298                     	;# 
  4564  0299                     	;# 
  4565  0299                     	;# 
  4566  029A                     	;# 
  4567  029B                     	;# 
  4568  029C                     	;# 
  4569  029D                     	;# 
  4570  029F                     	;# 
  4571  030C                     	;# 
  4572  030C                     	;# 
  4573  030D                     	;# 
  4574  030E                     	;# 
  4575  030F                     	;# 
  4576  0310                     	;# 
  4577  0310                     	;# 
  4578  0311                     	;# 
  4579  0312                     	;# 
  4580  0313                     	;# 
  4581  0314                     	;# 
  4582  0314                     	;# 
  4583  0315                     	;# 
  4584  0316                     	;# 
  4585  0317                     	;# 
  4586  0318                     	;# 
  4587  0318                     	;# 
  4588  0319                     	;# 
  4589  031A                     	;# 
  4590  031B                     	;# 
  4591  031C                     	;# 
  4592  031C                     	;# 
  4593  031D                     	;# 
  4594  031E                     	;# 
  4595  031F                     	;# 
  4596  038C                     	;# 
  4597  038C                     	;# 
  4598  038D                     	;# 
  4599  038E                     	;# 
  4600  0390                     	;# 
  4601  0390                     	;# 
  4602  0391                     	;# 
  4603  0392                     	;# 
  4604  048C                     	;# 
  4605  048C                     	;# 
  4606  048D                     	;# 
  4607  048E                     	;# 
  4608  048F                     	;# 
  4609  048F                     	;# 
  4610  0490                     	;# 
  4611  0491                     	;# 
  4612  0492                     	;# 
  4613  0492                     	;# 
  4614  0493                     	;# 
  4615  0494                     	;# 
  4616  0495                     	;# 
  4617  0495                     	;# 
  4618  0496                     	;# 
  4619  0497                     	;# 
  4620  0498                     	;# 
  4621  0499                     	;# 
  4622  049A                     	;# 
  4623  049B                     	;# 
  4624  049C                     	;# 
  4625  049D                     	;# 
  4626  050C                     	;# 
  4627  050C                     	;# 
  4628  050D                     	;# 
  4629  050E                     	;# 
  4630  050F                     	;# 
  4631  050F                     	;# 
  4632  0510                     	;# 
  4633  0511                     	;# 
  4634  0512                     	;# 
  4635  0512                     	;# 
  4636  0513                     	;# 
  4637  0514                     	;# 
  4638  0515                     	;# 
  4639  0515                     	;# 
  4640  0516                     	;# 
  4641  0517                     	;# 
  4642  0518                     	;# 
  4643  0519                     	;# 
  4644  051A                     	;# 
  4645  051B                     	;# 
  4646  051C                     	;# 
  4647  051D                     	;# 
  4648  058C                     	;# 
  4649  058C                     	;# 
  4650  058D                     	;# 
  4651  058E                     	;# 
  4652  058F                     	;# 
  4653  058F                     	;# 
  4654  0590                     	;# 
  4655  0591                     	;# 
  4656  0592                     	;# 
  4657  0593                     	;# 
  4658  059C                     	;# 
  4659  059C                     	;# 
  4660  059D                     	;# 
  4661  059D                     	;# 
  4662  059E                     	;# 
  4663  059F                     	;# 
  4664  060C                     	;# 
  4665  060C                     	;# 
  4666  060D                     	;# 
  4667  060D                     	;# 
  4668  060E                     	;# 
  4669  060F                     	;# 
  4670  0610                     	;# 
  4671  0611                     	;# 
  4672  0612                     	;# 
  4673  0613                     	;# 
  4674  0614                     	;# 
  4675  0616                     	;# 
  4676  0616                     	;# 
  4677  0617                     	;# 
  4678  0617                     	;# 
  4679  0618                     	;# 
  4680  0619                     	;# 
  4681  061A                     	;# 
  4682  061B                     	;# 
  4683  061C                     	;# 
  4684  061D                     	;# 
  4685  061E                     	;# 
  4686  068C                     	;# 
  4687  068D                     	;# 
  4688  068E                     	;# 
  4689  068F                     	;# 
  4690  0690                     	;# 
  4691  0691                     	;# 
  4692  0692                     	;# 
  4693  0693                     	;# 
  4694  0694                     	;# 
  4695  070C                     	;# 
  4696  070D                     	;# 
  4697  070E                     	;# 
  4698  070F                     	;# 
  4699  0710                     	;# 
  4700  0711                     	;# 
  4701  0712                     	;# 
  4702  0713                     	;# 
  4703  0714                     	;# 
  4704  0716                     	;# 
  4705  0717                     	;# 
  4706  0718                     	;# 
  4707  0719                     	;# 
  4708  071A                     	;# 
  4709  071B                     	;# 
  4710  071C                     	;# 
  4711  071D                     	;# 
  4712  071E                     	;# 
  4713  0796                     	;# 
  4714  0797                     	;# 
  4715  0798                     	;# 
  4716  0799                     	;# 
  4717  079A                     	;# 
  4718  079B                     	;# 
  4719  079C                     	;# 
  4720  079D                     	;# 
  4721  080C                     	;# 
  4722  080D                     	;# 
  4723  080E                     	;# 
  4724  080F                     	;# 
  4725  0810                     	;# 
  4726  0811                     	;# 
  4727  0812                     	;# 
  4728  0813                     	;# 
  4729  0814                     	;# 
  4730  081A                     	;# 
  4731  081A                     	;# 
  4732  081B                     	;# 
  4733  081C                     	;# 
  4734  081C                     	;# 
  4735  081D                     	;# 
  4736  081E                     	;# 
  4737  081F                     	;# 
  4738  088C                     	;# 
  4739  088D                     	;# 
  4740  088E                     	;# 
  4741  088F                     	;# 
  4742  0890                     	;# 
  4743  0891                     	;# 
  4744  0892                     	;# 
  4745  0893                     	;# 
  4746  0895                     	;# 
  4747  0896                     	;# 
  4748  0897                     	;# 
  4749  0898                     	;# 
  4750  0899                     	;# 
  4751  089A                     	;# 
  4752  089B                     	;# 
  4753  090C                     	;# 
  4754  090E                     	;# 
  4755  090F                     	;# 
  4756  091F                     	;# 
  4757  098F                     	;# 
  4758  098F                     	;# 
  4759  0990                     	;# 
  4760  0991                     	;# 
  4761  0992                     	;# 
  4762  0993                     	;# 
  4763  0994                     	;# 
  4764  0995                     	;# 
  4765  0996                     	;# 
  4766  0997                     	;# 
  4767  0A19                     	;# 
  4768  0A19                     	;# 
  4769  0A1A                     	;# 
  4770  0A1A                     	;# 
  4771  0A1B                     	;# 
  4772  0A1B                     	;# 
  4773  0A1B                     	;# 
  4774  0A1C                     	;# 
  4775  0A1C                     	;# 
  4776  0A1D                     	;# 
  4777  0A1D                     	;# 
  4778  0A1E                     	;# 
  4779  0A1E                     	;# 
  4780  0A1F                     	;# 
  4781  0A1F                     	;# 
  4782  0A1F                     	;# 
  4783  1E0F                     	;# 
  4784  1E10                     	;# 
  4785  1E11                     	;# 
  4786  1E12                     	;# 
  4787  1E13                     	;# 
  4788  1E14                     	;# 
  4789  1E15                     	;# 
  4790  1E16                     	;# 
  4791  1E17                     	;# 
  4792  1E18                     	;# 
  4793  1E19                     	;# 
  4794  1E1A                     	;# 
  4795  1E1B                     	;# 
  4796  1E1C                     	;# 
  4797  1E1D                     	;# 
  4798  1E1E                     	;# 
  4799  1E1F                     	;# 
  4800  1E20                     	;# 
  4801  1E21                     	;# 
  4802  1E22                     	;# 
  4803  1E23                     	;# 
  4804  1E24                     	;# 
  4805  1E25                     	;# 
  4806  1E26                     	;# 
  4807  1E27                     	;# 
  4808  1E28                     	;# 
  4809  1E29                     	;# 
  4810  1E2A                     	;# 
  4811  1E2B                     	;# 
  4812  1E2C                     	;# 
  4813  1E2D                     	;# 
  4814  1E2E                     	;# 
  4815  1E2F                     	;# 
  4816  1E30                     	;# 
  4817  1E31                     	;# 
  4818  1E32                     	;# 
  4819  1E33                     	;# 
  4820  1E34                     	;# 
  4821  1E35                     	;# 
  4822  1E36                     	;# 
  4823  1E37                     	;# 
  4824  1E8F                     	;# 
  4825  1E90                     	;# 
  4826  1E91                     	;# 
  4827  1E92                     	;# 
  4828  1E93                     	;# 
  4829  1E94                     	;# 
  4830  1E95                     	;# 
  4831  1E96                     	;# 
  4832  1E97                     	;# 
  4833  1E9C                     	;# 
  4834  1E9D                     	;# 
  4835  1E9E                     	;# 
  4836  1EA1                     	;# 
  4837  1EA2                     	;# 
  4838  1EA3                     	;# 
  4839  1EA4                     	;# 
  4840  1EA5                     	;# 
  4841  1EA9                     	;# 
  4842  1EAA                     	;# 
  4843  1EAB                     	;# 
  4844  1EAC                     	;# 
  4845  1EB1                     	;# 
  4846  1EB2                     	;# 
  4847  1EB3                     	;# 
  4848  1EB8                     	;# 
  4849  1EB9                     	;# 
  4850  1EBA                     	;# 
  4851  1EBB                     	;# 
  4852  1EBC                     	;# 
  4853  1EBD                     	;# 
  4854  1EBE                     	;# 
  4855  1EC3                     	;# 
  4856  1EC5                     	;# 
  4857  1EC6                     	;# 
  4858  1EC7                     	;# 
  4859  1EC8                     	;# 
  4860  1EC9                     	;# 
  4861  1ECA                     	;# 
  4862  1ECB                     	;# 
  4863  1ECB                     	;# 
  4864  1ECB                     	;# 
  4865  1ECC                     	;# 
  4866  1ECC                     	;# 
  4867  1ECC                     	;# 
  4868  1ECD                     	;# 
  4869  1ECD                     	;# 
  4870  1ECE                     	;# 
  4871  1ECE                     	;# 
  4872  1F10                     	;# 
  4873  1F11                     	;# 
  4874  1F12                     	;# 
  4875  1F13                     	;# 
  4876  1F14                     	;# 
  4877  1F15                     	;# 
  4878  1F16                     	;# 
  4879  1F17                     	;# 
  4880  1F18                     	;# 
  4881  1F19                     	;# 
  4882  1F1A                     	;# 
  4883  1F1B                     	;# 
  4884  1F1C                     	;# 
  4885  1F1D                     	;# 
  4886  1F1E                     	;# 
  4887  1F1F                     	;# 
  4888  1F20                     	;# 
  4889  1F21                     	;# 
  4890  1F22                     	;# 
  4891  1F23                     	;# 
  4892  1F24                     	;# 
  4893  1F25                     	;# 
  4894  1F26                     	;# 
  4895  1F27                     	;# 
  4896  1F38                     	;# 
  4897  1F39                     	;# 
  4898  1F3A                     	;# 
  4899  1F3B                     	;# 
  4900  1F3C                     	;# 
  4901  1F3D                     	;# 
  4902  1F3E                     	;# 
  4903  1F3F                     	;# 
  4904  1F43                     	;# 
  4905  1F44                     	;# 
  4906  1F45                     	;# 
  4907  1F46                     	;# 
  4908  1F47                     	;# 
  4909  1F48                     	;# 
  4910  1F49                     	;# 
  4911  1F4A                     	;# 
  4912  1F4E                     	;# 
  4913  1F4F                     	;# 
  4914  1F50                     	;# 
  4915  1F51                     	;# 
  4916  1F52                     	;# 
  4917  1F53                     	;# 
  4918  1F54                     	;# 
  4919  1F55                     	;# 
  4920  1F65                     	;# 
  4921  1F66                     	;# 
  4922  1F67                     	;# 
  4923  1F68                     	;# 
  4924  1F69                     	;# 
  4925  1F6A                     	;# 
  4926  1F6B                     	;# 
  4927  1FE4                     	;# 
  4928  1FE5                     	;# 
  4929  1FE6                     	;# 
  4930  1FE7                     	;# 
  4931  1FE8                     	;# 
  4932  1FE8                     	;# 
  4933  1FE9                     	;# 
  4934  1FEA                     	;# 
  4935  1FEB                     	;# 
  4936  1FED                     	;# 
  4937  1FEE                     	;# 
  4938  1FEF                     	;# 
  4939  0000                     	;# 
  4940  0001                     	;# 
  4941  0002                     	;# 
  4942  0003                     	;# 
  4943  0004                     	;# 
  4944  0005                     	;# 
  4945  0006                     	;# 
  4946  0007                     	;# 
  4947  0008                     	;# 
  4948  0009                     	;# 
  4949  000A                     	;# 
  4950  000B                     	;# 
  4951  000C                     	;# 
  4952  000D                     	;# 
  4953  000E                     	;# 
  4954  0010                     	;# 
  4955  0012                     	;# 
  4956  0013                     	;# 
  4957  0014                     	;# 
  4958  0016                     	;# 
  4959  0018                     	;# 
  4960  0019                     	;# 
  4961  001A                     	;# 
  4962  001C                     	;# 
  4963  008C                     	;# 
  4964  008C                     	;# 
  4965  008D                     	;# 
  4966  008E                     	;# 
  4967  008E                     	;# 
  4968  008F                     	;# 
  4969  0090                     	;# 
  4970  0090                     	;# 
  4971  0091                     	;# 
  4972  0092                     	;# 
  4973  0092                     	;# 
  4974  0093                     	;# 
  4975  0094                     	;# 
  4976  0094                     	;# 
  4977  0095                     	;# 
  4978  0096                     	;# 
  4979  0096                     	;# 
  4980  0097                     	;# 
  4981  0098                     	;# 
  4982  0099                     	;# 
  4983  009A                     	;# 
  4984  009B                     	;# 
  4985  009B                     	;# 
  4986  009C                     	;# 
  4987  009D                     	;# 
  4988  009D                     	;# 
  4989  009E                     	;# 
  4990  009F                     	;# 
  4991  010C                     	;# 
  4992  010C                     	;# 
  4993  010D                     	;# 
  4994  010E                     	;# 
  4995  010F                     	;# 
  4996  010F                     	;# 
  4997  0110                     	;# 
  4998  0111                     	;# 
  4999  0112                     	;# 
  5000  0113                     	;# 
  5001  0114                     	;# 
  5002  0115                     	;# 
  5003  0116                     	;# 
  5004  0117                     	;# 
  5005  0118                     	;# 
  5006  0119                     	;# 
  5007  0119                     	;# 
  5008  0119                     	;# 
  5009  011A                     	;# 
  5010  011A                     	;# 
  5011  011A                     	;# 
  5012  011B                     	;# 
  5013  011B                     	;# 
  5014  011B                     	;# 
  5015  011B                     	;# 
  5016  011B                     	;# 
  5017  011C                     	;# 
  5018  011C                     	;# 
  5019  011C                     	;# 
  5020  011D                     	;# 
  5021  011D                     	;# 
  5022  011D                     	;# 
  5023  011E                     	;# 
  5024  011E                     	;# 
  5025  011E                     	;# 
  5026  011F                     	;# 
  5027  011F                     	;# 
  5028  011F                     	;# 
  5029  011F                     	;# 
  5030  011F                     	;# 
  5031  018C                     	;# 
  5032  018D                     	;# 
  5033  018E                     	;# 
  5034  018F                     	;# 
  5035  0190                     	;# 
  5036  0191                     	;# 
  5037  0192                     	;# 
  5038  0196                     	;# 
  5039  0197                     	;# 
  5040  0198                     	;# 
  5041  0199                     	;# 
  5042  019A                     	;# 
  5043  019B                     	;# 
  5044  019C                     	;# 
  5045  020C                     	;# 
  5046  020D                     	;# 
  5047  020E                     	;# 
  5048  020E                     	;# 
  5049  020F                     	;# 
  5050  020F                     	;# 
  5051  0210                     	;# 
  5052  0210                     	;# 
  5053  0211                     	;# 
  5054  0211                     	;# 
  5055  0212                     	;# 
  5056  0213                     	;# 
  5057  0214                     	;# 
  5058  0214                     	;# 
  5059  0215                     	;# 
  5060  0215                     	;# 
  5061  0216                     	;# 
  5062  0216                     	;# 
  5063  0217                     	;# 
  5064  0217                     	;# 
  5065  0218                     	;# 
  5066  0219                     	;# 
  5067  021A                     	;# 
  5068  021A                     	;# 
  5069  021B                     	;# 
  5070  021B                     	;# 
  5071  021C                     	;# 
  5072  021C                     	;# 
  5073  021D                     	;# 
  5074  021D                     	;# 
  5075  021E                     	;# 
  5076  021F                     	;# 
  5077  028C                     	;# 
  5078  028C                     	;# 
  5079  028D                     	;# 
  5080  028D                     	;# 
  5081  028E                     	;# 
  5082  028F                     	;# 
  5083  0290                     	;# 
  5084  0291                     	;# 
  5085  0292                     	;# 
  5086  0292                     	;# 
  5087  0293                     	;# 
  5088  0293                     	;# 
  5089  0294                     	;# 
  5090  0295                     	;# 
  5091  0296                     	;# 
  5092  0297                     	;# 
  5093  0298                     	;# 
  5094  0298                     	;# 
  5095  0299                     	;# 
  5096  0299                     	;# 
  5097  029A                     	;# 
  5098  029B                     	;# 
  5099  029C                     	;# 
  5100  029D                     	;# 
  5101  029F                     	;# 
  5102  030C                     	;# 
  5103  030C                     	;# 
  5104  030D                     	;# 
  5105  030E                     	;# 
  5106  030F                     	;# 
  5107  0310                     	;# 
  5108  0310                     	;# 
  5109  0311                     	;# 
  5110  0312                     	;# 
  5111  0313                     	;# 
  5112  0314                     	;# 
  5113  0314                     	;# 
  5114  0315                     	;# 
  5115  0316                     	;# 
  5116  0317                     	;# 
  5117  0318                     	;# 
  5118  0318                     	;# 
  5119  0319                     	;# 
  5120  031A                     	;# 
  5121  031B                     	;# 
  5122  031C                     	;# 
  5123  031C                     	;# 
  5124  031D                     	;# 
  5125  031E                     	;# 
  5126  031F                     	;# 
  5127  038C                     	;# 
  5128  038C                     	;# 
  5129  038D                     	;# 
  5130  038E                     	;# 
  5131  0390                     	;# 
  5132  0390                     	;# 
  5133  0391                     	;# 
  5134  0392                     	;# 
  5135  048C                     	;# 
  5136  048C                     	;# 
  5137  048D                     	;# 
  5138  048E                     	;# 
  5139  048F                     	;# 
  5140  048F                     	;# 
  5141  0490                     	;# 
  5142  0491                     	;# 
  5143  0492                     	;# 
  5144  0492                     	;# 
  5145  0493                     	;# 
  5146  0494                     	;# 
  5147  0495                     	;# 
  5148  0495                     	;# 
  5149  0496                     	;# 
  5150  0497                     	;# 
  5151  0498                     	;# 
  5152  0499                     	;# 
  5153  049A                     	;# 
  5154  049B                     	;# 
  5155  049C                     	;# 
  5156  049D                     	;# 
  5157  050C                     	;# 
  5158  050C                     	;# 
  5159  050D                     	;# 
  5160  050E                     	;# 
  5161  050F                     	;# 
  5162  050F                     	;# 
  5163  0510                     	;# 
  5164  0511                     	;# 
  5165  0512                     	;# 
  5166  0512                     	;# 
  5167  0513                     	;# 
  5168  0514                     	;# 
  5169  0515                     	;# 
  5170  0515                     	;# 
  5171  0516                     	;# 
  5172  0517                     	;# 
  5173  0518                     	;# 
  5174  0519                     	;# 
  5175  051A                     	;# 
  5176  051B                     	;# 
  5177  051C                     	;# 
  5178  051D                     	;# 
  5179  058C                     	;# 
  5180  058C                     	;# 
  5181  058D                     	;# 
  5182  058E                     	;# 
  5183  058F                     	;# 
  5184  058F                     	;# 
  5185  0590                     	;# 
  5186  0591                     	;# 
  5187  0592                     	;# 
  5188  0593                     	;# 
  5189  059C                     	;# 
  5190  059C                     	;# 
  5191  059D                     	;# 
  5192  059D                     	;# 
  5193  059E                     	;# 
  5194  059F                     	;# 
  5195  060C                     	;# 
  5196  060C                     	;# 
  5197  060D                     	;# 
  5198  060D                     	;# 
  5199  060E                     	;# 
  5200  060F                     	;# 
  5201  0610                     	;# 
  5202  0611                     	;# 
  5203  0612                     	;# 
  5204  0613                     	;# 
  5205  0614                     	;# 
  5206  0616                     	;# 
  5207  0616                     	;# 
  5208  0617                     	;# 
  5209  0617                     	;# 
  5210  0618                     	;# 
  5211  0619                     	;# 
  5212  061A                     	;# 
  5213  061B                     	;# 
  5214  061C                     	;# 
  5215  061D                     	;# 
  5216  061E                     	;# 
  5217  068C                     	;# 
  5218  068D                     	;# 
  5219  068E                     	;# 
  5220  068F                     	;# 
  5221  0690                     	;# 
  5222  0691                     	;# 
  5223  0692                     	;# 
  5224  0693                     	;# 
  5225  0694                     	;# 
  5226  070C                     	;# 
  5227  070D                     	;# 
  5228  070E                     	;# 
  5229  070F                     	;# 
  5230  0710                     	;# 
  5231  0711                     	;# 
  5232  0712                     	;# 
  5233  0713                     	;# 
  5234  0714                     	;# 
  5235  0716                     	;# 
  5236  0717                     	;# 
  5237  0718                     	;# 
  5238  0719                     	;# 
  5239  071A                     	;# 
  5240  071B                     	;# 
  5241  071C                     	;# 
  5242  071D                     	;# 
  5243  071E                     	;# 
  5244  0796                     	;# 
  5245  0797                     	;# 
  5246  0798                     	;# 
  5247  0799                     	;# 
  5248  079A                     	;# 
  5249  079B                     	;# 
  5250  079C                     	;# 
  5251  079D                     	;# 
  5252  080C                     	;# 
  5253  080D                     	;# 
  5254  080E                     	;# 
  5255  080F                     	;# 
  5256  0810                     	;# 
  5257  0811                     	;# 
  5258  0812                     	;# 
  5259  0813                     	;# 
  5260  0814                     	;# 
  5261  081A                     	;# 
  5262  081A                     	;# 
  5263  081B                     	;# 
  5264  081C                     	;# 
  5265  081C                     	;# 
  5266  081D                     	;# 
  5267  081E                     	;# 
  5268  081F                     	;# 
  5269  088C                     	;# 
  5270  088D                     	;# 
  5271  088E                     	;# 
  5272  088F                     	;# 
  5273  0890                     	;# 
  5274  0891                     	;# 
  5275  0892                     	;# 
  5276  0893                     	;# 
  5277  0895                     	;# 
  5278  0896                     	;# 
  5279  0897                     	;# 
  5280  0898                     	;# 
  5281  0899                     	;# 
  5282  089A                     	;# 
  5283  089B                     	;# 
  5284  090C                     	;# 
  5285  090E                     	;# 
  5286  090F                     	;# 
  5287  091F                     	;# 
  5288  098F                     	;# 
  5289  098F                     	;# 
  5290  0990                     	;# 
  5291  0991                     	;# 
  5292  0992                     	;# 
  5293  0993                     	;# 
  5294  0994                     	;# 
  5295  0995                     	;# 
  5296  0996                     	;# 
  5297  0997                     	;# 
  5298  0A19                     	;# 
  5299  0A19                     	;# 
  5300  0A1A                     	;# 
  5301  0A1A                     	;# 
  5302  0A1B                     	;# 
  5303  0A1B                     	;# 
  5304  0A1B                     	;# 
  5305  0A1C                     	;# 
  5306  0A1C                     	;# 
  5307  0A1D                     	;# 
  5308  0A1D                     	;# 
  5309  0A1E                     	;# 
  5310  0A1E                     	;# 
  5311  0A1F                     	;# 
  5312  0A1F                     	;# 
  5313  0A1F                     	;# 
  5314  1E0F                     	;# 
  5315  1E10                     	;# 
  5316  1E11                     	;# 
  5317  1E12                     	;# 
  5318  1E13                     	;# 
  5319  1E14                     	;# 
  5320  1E15                     	;# 
  5321  1E16                     	;# 
  5322  1E17                     	;# 
  5323  1E18                     	;# 
  5324  1E19                     	;# 
  5325  1E1A                     	;# 
  5326  1E1B                     	;# 
  5327  1E1C                     	;# 
  5328  1E1D                     	;# 
  5329  1E1E                     	;# 
  5330  1E1F                     	;# 
  5331  1E20                     	;# 
  5332  1E21                     	;# 
  5333  1E22                     	;# 
  5334  1E23                     	;# 
  5335  1E24                     	;# 
  5336  1E25                     	;# 
  5337  1E26                     	;# 
  5338  1E27                     	;# 
  5339  1E28                     	;# 
  5340  1E29                     	;# 
  5341  1E2A                     	;# 
  5342  1E2B                     	;# 
  5343  1E2C                     	;# 
  5344  1E2D                     	;# 
  5345  1E2E                     	;# 
  5346  1E2F                     	;# 
  5347  1E30                     	;# 
  5348  1E31                     	;# 
  5349  1E32                     	;# 
  5350  1E33                     	;# 
  5351  1E34                     	;# 
  5352  1E35                     	;# 
  5353  1E36                     	;# 
  5354  1E37                     	;# 
  5355  1E8F                     	;# 
  5356  1E90                     	;# 
  5357  1E91                     	;# 
  5358  1E92                     	;# 
  5359  1E93                     	;# 
  5360  1E94                     	;# 
  5361  1E95                     	;# 
  5362  1E96                     	;# 
  5363  1E97                     	;# 
  5364  1E9C                     	;# 
  5365  1E9D                     	;# 
  5366  1E9E                     	;# 
  5367  1EA1                     	;# 
  5368  1EA2                     	;# 
  5369  1EA3                     	;# 
  5370  1EA4                     	;# 
  5371  1EA5                     	;# 
  5372  1EA9                     	;# 
  5373  1EAA                     	;# 
  5374  1EAB                     	;# 
  5375  1EAC                     	;# 
  5376  1EB1                     	;# 
  5377  1EB2                     	;# 
  5378  1EB3                     	;# 
  5379  1EB8                     	;# 
  5380  1EB9                     	;# 
  5381  1EBA                     	;# 
  5382  1EBB                     	;# 
  5383  1EBC                     	;# 
  5384  1EBD                     	;# 
  5385  1EBE                     	;# 
  5386  1EC3                     	;# 
  5387  1EC5                     	;# 
  5388  1EC6                     	;# 
  5389  1EC7                     	;# 
  5390  1EC8                     	;# 
  5391  1EC9                     	;# 
  5392  1ECA                     	;# 
  5393  1ECB                     	;# 
  5394  1ECB                     	;# 
  5395  1ECB                     	;# 
  5396  1ECC                     	;# 
  5397  1ECC                     	;# 
  5398  1ECC                     	;# 
  5399  1ECD                     	;# 
  5400  1ECD                     	;# 
  5401  1ECE                     	;# 
  5402  1ECE                     	;# 
  5403  1F10                     	;# 
  5404  1F11                     	;# 
  5405  1F12                     	;# 
  5406  1F13                     	;# 
  5407  1F14                     	;# 
  5408  1F15                     	;# 
  5409  1F16                     	;# 
  5410  1F17                     	;# 
  5411  1F18                     	;# 
  5412  1F19                     	;# 
  5413  1F1A                     	;# 
  5414  1F1B                     	;# 
  5415  1F1C                     	;# 
  5416  1F1D                     	;# 
  5417  1F1E                     	;# 
  5418  1F1F                     	;# 
  5419  1F20                     	;# 
  5420  1F21                     	;# 
  5421  1F22                     	;# 
  5422  1F23                     	;# 
  5423  1F24                     	;# 
  5424  1F25                     	;# 
  5425  1F26                     	;# 
  5426  1F27                     	;# 
  5427  1F38                     	;# 
  5428  1F39                     	;# 
  5429  1F3A                     	;# 
  5430  1F3B                     	;# 
  5431  1F3C                     	;# 
  5432  1F3D                     	;# 
  5433  1F3E                     	;# 
  5434  1F3F                     	;# 
  5435  1F43                     	;# 
  5436  1F44                     	;# 
  5437  1F45                     	;# 
  5438  1F46                     	;# 
  5439  1F47                     	;# 
  5440  1F48                     	;# 
  5441  1F49                     	;# 
  5442  1F4A                     	;# 
  5443  1F4E                     	;# 
  5444  1F4F                     	;# 
  5445  1F50                     	;# 
  5446  1F51                     	;# 
  5447  1F52                     	;# 
  5448  1F53                     	;# 
  5449  1F54                     	;# 
  5450  1F55                     	;# 
  5451  1F65                     	;# 
  5452  1F66                     	;# 
  5453  1F67                     	;# 
  5454  1F68                     	;# 
  5455  1F69                     	;# 
  5456  1F6A                     	;# 
  5457  1F6B                     	;# 
  5458  1FE4                     	;# 
  5459  1FE5                     	;# 
  5460  1FE6                     	;# 
  5461  1FE7                     	;# 
  5462  1FE8                     	;# 
  5463  1FE8                     	;# 
  5464  1FE9                     	;# 
  5465  1FEA                     	;# 
  5466  1FEB                     	;# 
  5467  1FED                     	;# 
  5468  1FEE                     	;# 
  5469  1FEF                     	;# 
  5470  0000                     	;# 
  5471  0001                     	;# 
  5472  0002                     	;# 
  5473  0003                     	;# 
  5474  0004                     	;# 
  5475  0005                     	;# 
  5476  0006                     	;# 
  5477  0007                     	;# 
  5478  0008                     	;# 
  5479  0009                     	;# 
  5480  000A                     	;# 
  5481  000B                     	;# 
  5482  000C                     	;# 
  5483  000D                     	;# 
  5484  000E                     	;# 
  5485  0010                     	;# 
  5486  0012                     	;# 
  5487  0013                     	;# 
  5488  0014                     	;# 
  5489  0016                     	;# 
  5490  0018                     	;# 
  5491  0019                     	;# 
  5492  001A                     	;# 
  5493  001C                     	;# 
  5494  008C                     	;# 
  5495  008C                     	;# 
  5496  008D                     	;# 
  5497  008E                     	;# 
  5498  008E                     	;# 
  5499  008F                     	;# 
  5500  0090                     	;# 
  5501  0090                     	;# 
  5502  0091                     	;# 
  5503  0092                     	;# 
  5504  0092                     	;# 
  5505  0093                     	;# 
  5506  0094                     	;# 
  5507  0094                     	;# 
  5508  0095                     	;# 
  5509  0096                     	;# 
  5510  0096                     	;# 
  5511  0097                     	;# 
  5512  0098                     	;# 
  5513  0099                     	;# 
  5514  009A                     	;# 
  5515  009B                     	;# 
  5516  009B                     	;# 
  5517  009C                     	;# 
  5518  009D                     	;# 
  5519  009D                     	;# 
  5520  009E                     	;# 
  5521  009F                     	;# 
  5522  010C                     	;# 
  5523  010C                     	;# 
  5524  010D                     	;# 
  5525  010E                     	;# 
  5526  010F                     	;# 
  5527  010F                     	;# 
  5528  0110                     	;# 
  5529  0111                     	;# 
  5530  0112                     	;# 
  5531  0113                     	;# 
  5532  0114                     	;# 
  5533  0115                     	;# 
  5534  0116                     	;# 
  5535  0117                     	;# 
  5536  0118                     	;# 
  5537  0119                     	;# 
  5538  0119                     	;# 
  5539  0119                     	;# 
  5540  011A                     	;# 
  5541  011A                     	;# 
  5542  011A                     	;# 
  5543  011B                     	;# 
  5544  011B                     	;# 
  5545  011B                     	;# 
  5546  011B                     	;# 
  5547  011B                     	;# 
  5548  011C                     	;# 
  5549  011C                     	;# 
  5550  011C                     	;# 
  5551  011D                     	;# 
  5552  011D                     	;# 
  5553  011D                     	;# 
  5554  011E                     	;# 
  5555  011E                     	;# 
  5556  011E                     	;# 
  5557  011F                     	;# 
  5558  011F                     	;# 
  5559  011F                     	;# 
  5560  011F                     	;# 
  5561  011F                     	;# 
  5562  018C                     	;# 
  5563  018D                     	;# 
  5564  018E                     	;# 
  5565  018F                     	;# 
  5566  0190                     	;# 
  5567  0191                     	;# 
  5568  0192                     	;# 
  5569  0196                     	;# 
  5570  0197                     	;# 
  5571  0198                     	;# 
  5572  0199                     	;# 
  5573  019A                     	;# 
  5574  019B                     	;# 
  5575  019C                     	;# 
  5576  020C                     	;# 
  5577  020D                     	;# 
  5578  020E                     	;# 
  5579  020E                     	;# 
  5580  020F                     	;# 
  5581  020F                     	;# 
  5582  0210                     	;# 
  5583  0210                     	;# 
  5584  0211                     	;# 
  5585  0211                     	;# 
  5586  0212                     	;# 
  5587  0213                     	;# 
  5588  0214                     	;# 
  5589  0214                     	;# 
  5590  0215                     	;# 
  5591  0215                     	;# 
  5592  0216                     	;# 
  5593  0216                     	;# 
  5594  0217                     	;# 
  5595  0217                     	;# 
  5596  0218                     	;# 
  5597  0219                     	;# 
  5598  021A                     	;# 
  5599  021A                     	;# 
  5600  021B                     	;# 
  5601  021B                     	;# 
  5602  021C                     	;# 
  5603  021C                     	;# 
  5604  021D                     	;# 
  5605  021D                     	;# 
  5606  021E                     	;# 
  5607  021F                     	;# 
  5608  028C                     	;# 
  5609  028C                     	;# 
  5610  028D                     	;# 
  5611  028D                     	;# 
  5612  028E                     	;# 
  5613  028F                     	;# 
  5614  0290                     	;# 
  5615  0291                     	;# 
  5616  0292                     	;# 
  5617  0292                     	;# 
  5618  0293                     	;# 
  5619  0293                     	;# 
  5620  0294                     	;# 
  5621  0295                     	;# 
  5622  0296                     	;# 
  5623  0297                     	;# 
  5624  0298                     	;# 
  5625  0298                     	;# 
  5626  0299                     	;# 
  5627  0299                     	;# 
  5628  029A                     	;# 
  5629  029B                     	;# 
  5630  029C                     	;# 
  5631  029D                     	;# 
  5632  029F                     	;# 
  5633  030C                     	;# 
  5634  030C                     	;# 
  5635  030D                     	;# 
  5636  030E                     	;# 
  5637  030F                     	;# 
  5638  0310                     	;# 
  5639  0310                     	;# 
  5640  0311                     	;# 
  5641  0312                     	;# 
  5642  0313                     	;# 
  5643  0314                     	;# 
  5644  0314                     	;# 
  5645  0315                     	;# 
  5646  0316                     	;# 
  5647  0317                     	;# 
  5648  0318                     	;# 
  5649  0318                     	;# 
  5650  0319                     	;# 
  5651  031A                     	;# 
  5652  031B                     	;# 
  5653  031C                     	;# 
  5654  031C                     	;# 
  5655  031D                     	;# 
  5656  031E                     	;# 
  5657  031F                     	;# 
  5658  038C                     	;# 
  5659  038C                     	;# 
  5660  038D                     	;# 
  5661  038E                     	;# 
  5662  0390                     	;# 
  5663  0390                     	;# 
  5664  0391                     	;# 
  5665  0392                     	;# 
  5666  048C                     	;# 
  5667  048C                     	;# 
  5668  048D                     	;# 
  5669  048E                     	;# 
  5670  048F                     	;# 
  5671  048F                     	;# 
  5672  0490                     	;# 
  5673  0491                     	;# 
  5674  0492                     	;# 
  5675  0492                     	;# 
  5676  0493                     	;# 
  5677  0494                     	;# 
  5678  0495                     	;# 
  5679  0495                     	;# 
  5680  0496                     	;# 
  5681  0497                     	;# 
  5682  0498                     	;# 
  5683  0499                     	;# 
  5684  049A                     	;# 
  5685  049B                     	;# 
  5686  049C                     	;# 
  5687  049D                     	;# 
  5688  050C                     	;# 
  5689  050C                     	;# 
  5690  050D                     	;# 
  5691  050E                     	;# 
  5692  050F                     	;# 
  5693  050F                     	;# 
  5694  0510                     	;# 
  5695  0511                     	;# 
  5696  0512                     	;# 
  5697  0512                     	;# 
  5698  0513                     	;# 
  5699  0514                     	;# 
  5700  0515                     	;# 
  5701  0515                     	;# 
  5702  0516                     	;# 
  5703  0517                     	;# 
  5704  0518                     	;# 
  5705  0519                     	;# 
  5706  051A                     	;# 
  5707  051B                     	;# 
  5708  051C                     	;# 
  5709  051D                     	;# 
  5710  058C                     	;# 
  5711  058C                     	;# 
  5712  058D                     	;# 
  5713  058E                     	;# 
  5714  058F                     	;# 
  5715  058F                     	;# 
  5716  0590                     	;# 
  5717  0591                     	;# 
  5718  0592                     	;# 
  5719  0593                     	;# 
  5720  059C                     	;# 
  5721  059C                     	;# 
  5722  059D                     	;# 
  5723  059D                     	;# 
  5724  059E                     	;# 
  5725  059F                     	;# 
  5726  060C                     	;# 
  5727  060C                     	;# 
  5728  060D                     	;# 
  5729  060D                     	;# 
  5730  060E                     	;# 
  5731  060F                     	;# 
  5732  0610                     	;# 
  5733  0611                     	;# 
  5734  0612                     	;# 
  5735  0613                     	;# 
  5736  0614                     	;# 
  5737  0616                     	;# 
  5738  0616                     	;# 
  5739  0617                     	;# 
  5740  0617                     	;# 
  5741  0618                     	;# 
  5742  0619                     	;# 
  5743  061A                     	;# 
  5744  061B                     	;# 
  5745  061C                     	;# 
  5746  061D                     	;# 
  5747  061E                     	;# 
  5748  068C                     	;# 
  5749  068D                     	;# 
  5750  068E                     	;# 
  5751  068F                     	;# 
  5752  0690                     	;# 
  5753  0691                     	;# 
  5754  0692                     	;# 
  5755  0693                     	;# 
  5756  0694                     	;# 
  5757  070C                     	;# 
  5758  070D                     	;# 
  5759  070E                     	;# 
  5760  070F                     	;# 
  5761  0710                     	;# 
  5762  0711                     	;# 
  5763  0712                     	;# 
  5764  0713                     	;# 
  5765  0714                     	;# 
  5766  0716                     	;# 
  5767  0717                     	;# 
  5768  0718                     	;# 
  5769  0719                     	;# 
  5770  071A                     	;# 
  5771  071B                     	;# 
  5772  071C                     	;# 
  5773  071D                     	;# 
  5774  071E                     	;# 
  5775  0796                     	;# 
  5776  0797                     	;# 
  5777  0798                     	;# 
  5778  0799                     	;# 
  5779  079A                     	;# 
  5780  079B                     	;# 
  5781  079C                     	;# 
  5782  079D                     	;# 
  5783  080C                     	;# 
  5784  080D                     	;# 
  5785  080E                     	;# 
  5786  080F                     	;# 
  5787  0810                     	;# 
  5788  0811                     	;# 
  5789  0812                     	;# 
  5790  0813                     	;# 
  5791  0814                     	;# 
  5792  081A                     	;# 
  5793  081A                     	;# 
  5794  081B                     	;# 
  5795  081C                     	;# 
  5796  081C                     	;# 
  5797  081D                     	;# 
  5798  081E                     	;# 
  5799  081F                     	;# 
  5800  088C                     	;# 
  5801  088D                     	;# 
  5802  088E                     	;# 
  5803  088F                     	;# 
  5804  0890                     	;# 
  5805  0891                     	;# 
  5806  0892                     	;# 
  5807  0893                     	;# 
  5808  0895                     	;# 
  5809  0896                     	;# 
  5810  0897                     	;# 
  5811  0898                     	;# 
  5812  0899                     	;# 
  5813  089A                     	;# 
  5814  089B                     	;# 
  5815  090C                     	;# 
  5816  090E                     	;# 
  5817  090F                     	;# 
  5818  091F                     	;# 
  5819  098F                     	;# 
  5820  098F                     	;# 
  5821  0990                     	;# 
  5822  0991                     	;# 
  5823  0992                     	;# 
  5824  0993                     	;# 
  5825  0994                     	;# 
  5826  0995                     	;# 
  5827  0996                     	;# 
  5828  0997                     	;# 
  5829  0A19                     	;# 
  5830  0A19                     	;# 
  5831  0A1A                     	;# 
  5832  0A1A                     	;# 
  5833  0A1B                     	;# 
  5834  0A1B                     	;# 
  5835  0A1B                     	;# 
  5836  0A1C                     	;# 
  5837  0A1C                     	;# 
  5838  0A1D                     	;# 
  5839  0A1D                     	;# 
  5840  0A1E                     	;# 
  5841  0A1E                     	;# 
  5842  0A1F                     	;# 
  5843  0A1F                     	;# 
  5844  0A1F                     	;# 
  5845  1E0F                     	;# 
  5846  1E10                     	;# 
  5847  1E11                     	;# 
  5848  1E12                     	;# 
  5849  1E13                     	;# 
  5850  1E14                     	;# 
  5851  1E15                     	;# 
  5852  1E16                     	;# 
  5853  1E17                     	;# 
  5854  1E18                     	;# 
  5855  1E19                     	;# 
  5856  1E1A                     	;# 
  5857  1E1B                     	;# 
  5858  1E1C                     	;# 
  5859  1E1D                     	;# 
  5860  1E1E                     	;# 
  5861  1E1F                     	;# 
  5862  1E20                     	;# 
  5863  1E21                     	;# 
  5864  1E22                     	;# 
  5865  1E23                     	;# 
  5866  1E24                     	;# 
  5867  1E25                     	;# 
  5868  1E26                     	;# 
  5869  1E27                     	;# 
  5870  1E28                     	;# 
  5871  1E29                     	;# 
  5872  1E2A                     	;# 
  5873  1E2B                     	;# 
  5874  1E2C                     	;# 
  5875  1E2D                     	;# 
  5876  1E2E                     	;# 
  5877  1E2F                     	;# 
  5878  1E30                     	;# 
  5879  1E31                     	;# 
  5880  1E32                     	;# 
  5881  1E33                     	;# 
  5882  1E34                     	;# 
  5883  1E35                     	;# 
  5884  1E36                     	;# 
  5885  1E37                     	;# 
  5886  1E8F                     	;# 
  5887  1E90                     	;# 
  5888  1E91                     	;# 
  5889  1E92                     	;# 
  5890  1E93                     	;# 
  5891  1E94                     	;# 
  5892  1E95                     	;# 
  5893  1E96                     	;# 
  5894  1E97                     	;# 
  5895  1E9C                     	;# 
  5896  1E9D                     	;# 
  5897  1E9E                     	;# 
  5898  1EA1                     	;# 
  5899  1EA2                     	;# 
  5900  1EA3                     	;# 
  5901  1EA4                     	;# 
  5902  1EA5                     	;# 
  5903  1EA9                     	;# 
  5904  1EAA                     	;# 
  5905  1EAB                     	;# 
  5906  1EAC                     	;# 
  5907  1EB1                     	;# 
  5908  1EB2                     	;# 
  5909  1EB3                     	;# 
  5910  1EB8                     	;# 
  5911  1EB9                     	;# 
  5912  1EBA                     	;# 
  5913  1EBB                     	;# 
  5914  1EBC                     	;# 
  5915  1EBD                     	;# 
  5916  1EBE                     	;# 
  5917  1EC3                     	;# 
  5918  1EC5                     	;# 
  5919  1EC6                     	;# 
  5920  1EC7                     	;# 
  5921  1EC8                     	;# 
  5922  1EC9                     	;# 
  5923  1ECA                     	;# 
  5924  1ECB                     	;# 
  5925  1ECB                     	;# 
  5926  1ECB                     	;# 
  5927  1ECC                     	;# 
  5928  1ECC                     	;# 
  5929  1ECC                     	;# 
  5930  1ECD                     	;# 
  5931  1ECD                     	;# 
  5932  1ECE                     	;# 
  5933  1ECE                     	;# 
  5934  1F10                     	;# 
  5935  1F11                     	;# 
  5936  1F12                     	;# 
  5937  1F13                     	;# 
  5938  1F14                     	;# 
  5939  1F15                     	;# 
  5940  1F16                     	;# 
  5941  1F17                     	;# 
  5942  1F18                     	;# 
  5943  1F19                     	;# 
  5944  1F1A                     	;# 
  5945  1F1B                     	;# 
  5946  1F1C                     	;# 
  5947  1F1D                     	;# 
  5948  1F1E                     	;# 
  5949  1F1F                     	;# 
  5950  1F20                     	;# 
  5951  1F21                     	;# 
  5952  1F22                     	;# 
  5953  1F23                     	;# 
  5954  1F24                     	;# 
  5955  1F25                     	;# 
  5956  1F26                     	;# 
  5957  1F27                     	;# 
  5958  1F38                     	;# 
  5959  1F39                     	;# 
  5960  1F3A                     	;# 
  5961  1F3B                     	;# 
  5962  1F3C                     	;# 
  5963  1F3D                     	;# 
  5964  1F3E                     	;# 
  5965  1F3F                     	;# 
  5966  1F43                     	;# 
  5967  1F44                     	;# 
  5968  1F45                     	;# 
  5969  1F46                     	;# 
  5970  1F47                     	;# 
  5971  1F48                     	;# 
  5972  1F49                     	;# 
  5973  1F4A                     	;# 
  5974  1F4E                     	;# 
  5975  1F4F                     	;# 
  5976  1F50                     	;# 
  5977  1F51                     	;# 
  5978  1F52                     	;# 
  5979  1F53                     	;# 
  5980  1F54                     	;# 
  5981  1F55                     	;# 
  5982  1F65                     	;# 
  5983  1F66                     	;# 
  5984  1F67                     	;# 
  5985  1F68                     	;# 
  5986  1F69                     	;# 
  5987  1F6A                     	;# 
  5988  1F6B                     	;# 
  5989  1FE4                     	;# 
  5990  1FE5                     	;# 
  5991  1FE6                     	;# 
  5992  1FE7                     	;# 
  5993  1FE8                     	;# 
  5994  1FE8                     	;# 
  5995  1FE9                     	;# 
  5996  1FEA                     	;# 
  5997  1FEB                     	;# 
  5998  1FED                     	;# 
  5999  1FEE                     	;# 
  6000  1FEF                     	;# 
  6001  0000                     	;# 
  6002  0001                     	;# 
  6003  0002                     	;# 
  6004  0003                     	;# 
  6005  0004                     	;# 
  6006  0005                     	;# 
  6007  0006                     	;# 
  6008  0007                     	;# 
  6009  0008                     	;# 
  6010  0009                     	;# 
  6011  000A                     	;# 
  6012  000B                     	;# 
  6013  000C                     	;# 
  6014  000D                     	;# 
  6015  000E                     	;# 
  6016  0010                     	;# 
  6017  0012                     	;# 
  6018  0013                     	;# 
  6019  0014                     	;# 
  6020  0016                     	;# 
  6021  0018                     	;# 
  6022  0019                     	;# 
  6023  001A                     	;# 
  6024  001C                     	;# 
  6025  008C                     	;# 
  6026  008C                     	;# 
  6027  008D                     	;# 
  6028  008E                     	;# 
  6029  008E                     	;# 
  6030  008F                     	;# 
  6031  0090                     	;# 
  6032  0090                     	;# 
  6033  0091                     	;# 
  6034  0092                     	;# 
  6035  0092                     	;# 
  6036  0093                     	;# 
  6037  0094                     	;# 
  6038  0094                     	;# 
  6039  0095                     	;# 
  6040  0096                     	;# 
  6041  0096                     	;# 
  6042  0097                     	;# 
  6043  0098                     	;# 
  6044  0099                     	;# 
  6045  009A                     	;# 
  6046  009B                     	;# 
  6047  009B                     	;# 
  6048  009C                     	;# 
  6049  009D                     	;# 
  6050  009D                     	;# 
  6051  009E                     	;# 
  6052  009F                     	;# 
  6053  010C                     	;# 
  6054  010C                     	;# 
  6055  010D                     	;# 
  6056  010E                     	;# 
  6057  010F                     	;# 
  6058  010F                     	;# 
  6059  0110                     	;# 
  6060  0111                     	;# 
  6061  0112                     	;# 
  6062  0113                     	;# 
  6063  0114                     	;# 
  6064  0115                     	;# 
  6065  0116                     	;# 
  6066  0117                     	;# 
  6067  0118                     	;# 
  6068  0119                     	;# 
  6069  0119                     	;# 
  6070  0119                     	;# 
  6071  011A                     	;# 
  6072  011A                     	;# 
  6073  011A                     	;# 
  6074  011B                     	;# 
  6075  011B                     	;# 
  6076  011B                     	;# 
  6077  011B                     	;# 
  6078  011B                     	;# 
  6079  011C                     	;# 
  6080  011C                     	;# 
  6081  011C                     	;# 
  6082  011D                     	;# 
  6083  011D                     	;# 
  6084  011D                     	;# 
  6085  011E                     	;# 
  6086  011E                     	;# 
  6087  011E                     	;# 
  6088  011F                     	;# 
  6089  011F                     	;# 
  6090  011F                     	;# 
  6091  011F                     	;# 
  6092  011F                     	;# 
  6093  018C                     	;# 
  6094  018D                     	;# 
  6095  018E                     	;# 
  6096  018F                     	;# 
  6097  0190                     	;# 
  6098  0191                     	;# 
  6099  0192                     	;# 
  6100  0196                     	;# 
  6101  0197                     	;# 
  6102  0198                     	;# 
  6103  0199                     	;# 
  6104  019A                     	;# 
  6105  019B                     	;# 
  6106  019C                     	;# 
  6107  020C                     	;# 
  6108  020D                     	;# 
  6109  020E                     	;# 
  6110  020E                     	;# 
  6111  020F                     	;# 
  6112  020F                     	;# 
  6113  0210                     	;# 
  6114  0210                     	;# 
  6115  0211                     	;# 
  6116  0211                     	;# 
  6117  0212                     	;# 
  6118  0213                     	;# 
  6119  0214                     	;# 
  6120  0214                     	;# 
  6121  0215                     	;# 
  6122  0215                     	;# 
  6123  0216                     	;# 
  6124  0216                     	;# 
  6125  0217                     	;# 
  6126  0217                     	;# 
  6127  0218                     	;# 
  6128  0219                     	;# 
  6129  021A                     	;# 
  6130  021A                     	;# 
  6131  021B                     	;# 
  6132  021B                     	;# 
  6133  021C                     	;# 
  6134  021C                     	;# 
  6135  021D                     	;# 
  6136  021D                     	;# 
  6137  021E                     	;# 
  6138  021F                     	;# 
  6139  028C                     	;# 
  6140  028C                     	;# 
  6141  028D                     	;# 
  6142  028D                     	;# 
  6143  028E                     	;# 
  6144  028F                     	;# 
  6145  0290                     	;# 
  6146  0291                     	;# 
  6147  0292                     	;# 
  6148  0292                     	;# 
  6149  0293                     	;# 
  6150  0293                     	;# 
  6151  0294                     	;# 
  6152  0295                     	;# 
  6153  0296                     	;# 
  6154  0297                     	;# 
  6155  0298                     	;# 
  6156  0298                     	;# 
  6157  0299                     	;# 
  6158  0299                     	;# 
  6159  029A                     	;# 
  6160  029B                     	;# 
  6161  029C                     	;# 
  6162  029D                     	;# 
  6163  029F                     	;# 
  6164  030C                     	;# 
  6165  030C                     	;# 
  6166  030D                     	;# 
  6167  030E                     	;# 
  6168  030F                     	;# 
  6169  0310                     	;# 
  6170  0310                     	;# 
  6171  0311                     	;# 
  6172  0312                     	;# 
  6173  0313                     	;# 
  6174  0314                     	;# 
  6175  0314                     	;# 
  6176  0315                     	;# 
  6177  0316                     	;# 
  6178  0317                     	;# 
  6179  0318                     	;# 
  6180  0318                     	;# 
  6181  0319                     	;# 
  6182  031A                     	;# 
  6183  031B                     	;# 
  6184  031C                     	;# 
  6185  031C                     	;# 
  6186  031D                     	;# 
  6187  031E                     	;# 
  6188  031F                     	;# 
  6189  038C                     	;# 
  6190  038C                     	;# 
  6191  038D                     	;# 
  6192  038E                     	;# 
  6193  0390                     	;# 
  6194  0390                     	;# 
  6195  0391                     	;# 
  6196  0392                     	;# 
  6197  048C                     	;# 
  6198  048C                     	;# 
  6199  048D                     	;# 
  6200  048E                     	;# 
  6201  048F                     	;# 
  6202  048F                     	;# 
  6203  0490                     	;# 
  6204  0491                     	;# 
  6205  0492                     	;# 
  6206  0492                     	;# 
  6207  0493                     	;# 
  6208  0494                     	;# 
  6209  0495                     	;# 
  6210  0495                     	;# 
  6211  0496                     	;# 
  6212  0497                     	;# 
  6213  0498                     	;# 
  6214  0499                     	;# 
  6215  049A                     	;# 
  6216  049B                     	;# 
  6217  049C                     	;# 
  6218  049D                     	;# 
  6219  050C                     	;# 
  6220  050C                     	;# 
  6221  050D                     	;# 
  6222  050E                     	;# 
  6223  050F                     	;# 
  6224  050F                     	;# 
  6225  0510                     	;# 
  6226  0511                     	;# 
  6227  0512                     	;# 
  6228  0512                     	;# 
  6229  0513                     	;# 
  6230  0514                     	;# 
  6231  0515                     	;# 
  6232  0515                     	;# 
  6233  0516                     	;# 
  6234  0517                     	;# 
  6235  0518                     	;# 
  6236  0519                     	;# 
  6237  051A                     	;# 
  6238  051B                     	;# 
  6239  051C                     	;# 
  6240  051D                     	;# 
  6241  058C                     	;# 
  6242  058C                     	;# 
  6243  058D                     	;# 
  6244  058E                     	;# 
  6245  058F                     	;# 
  6246  058F                     	;# 
  6247  0590                     	;# 
  6248  0591                     	;# 
  6249  0592                     	;# 
  6250  0593                     	;# 
  6251  059C                     	;# 
  6252  059C                     	;# 
  6253  059D                     	;# 
  6254  059D                     	;# 
  6255  059E                     	;# 
  6256  059F                     	;# 
  6257  060C                     	;# 
  6258  060C                     	;# 
  6259  060D                     	;# 
  6260  060D                     	;# 
  6261  060E                     	;# 
  6262  060F                     	;# 
  6263  0610                     	;# 
  6264  0611                     	;# 
  6265  0612                     	;# 
  6266  0613                     	;# 
  6267  0614                     	;# 
  6268  0616                     	;# 
  6269  0616                     	;# 
  6270  0617                     	;# 
  6271  0617                     	;# 
  6272  0618                     	;# 
  6273  0619                     	;# 
  6274  061A                     	;# 
  6275  061B                     	;# 
  6276  061C                     	;# 
  6277  061D                     	;# 
  6278  061E                     	;# 
  6279  068C                     	;# 
  6280  068D                     	;# 
  6281  068E                     	;# 
  6282  068F                     	;# 
  6283  0690                     	;# 
  6284  0691                     	;# 
  6285  0692                     	;# 
  6286  0693                     	;# 
  6287  0694                     	;# 
  6288  070C                     	;# 
  6289  070D                     	;# 
  6290  070E                     	;# 
  6291  070F                     	;# 
  6292  0710                     	;# 
  6293  0711                     	;# 
  6294  0712                     	;# 
  6295  0713                     	;# 
  6296  0714                     	;# 
  6297  0716                     	;# 
  6298  0717                     	;# 
  6299  0718                     	;# 
  6300  0719                     	;# 
  6301  071A                     	;# 
  6302  071B                     	;# 
  6303  071C                     	;# 
  6304  071D                     	;# 
  6305  071E                     	;# 
  6306  0796                     	;# 
  6307  0797                     	;# 
  6308  0798                     	;# 
  6309  0799                     	;# 
  6310  079A                     	;# 
  6311  079B                     	;# 
  6312  079C                     	;# 
  6313  079D                     	;# 
  6314  080C                     	;# 
  6315  080D                     	;# 
  6316  080E                     	;# 
  6317  080F                     	;# 
  6318  0810                     	;# 
  6319  0811                     	;# 
  6320  0812                     	;# 
  6321  0813                     	;# 
  6322  0814                     	;# 
  6323  081A                     	;# 
  6324  081A                     	;# 
  6325  081B                     	;# 
  6326  081C                     	;# 
  6327  081C                     	;# 
  6328  081D                     	;# 
  6329  081E                     	;# 
  6330  081F                     	;# 
  6331  088C                     	;# 
  6332  088D                     	;# 
  6333  088E                     	;# 
  6334  088F                     	;# 
  6335  0890                     	;# 
  6336  0891                     	;# 
  6337  0892                     	;# 
  6338  0893                     	;# 
  6339  0895                     	;# 
  6340  0896                     	;# 
  6341  0897                     	;# 
  6342  0898                     	;# 
  6343  0899                     	;# 
  6344  089A                     	;# 
  6345  089B                     	;# 
  6346  090C                     	;# 
  6347  090E                     	;# 
  6348  090F                     	;# 
  6349  091F                     	;# 
  6350  098F                     	;# 
  6351  098F                     	;# 
  6352  0990                     	;# 
  6353  0991                     	;# 
  6354  0992                     	;# 
  6355  0993                     	;# 
  6356  0994                     	;# 
  6357  0995                     	;# 
  6358  0996                     	;# 
  6359  0997                     	;# 
  6360  0A19                     	;# 
  6361  0A19                     	;# 
  6362  0A1A                     	;# 
  6363  0A1A                     	;# 
  6364  0A1B                     	;# 
  6365  0A1B                     	;# 
  6366  0A1B                     	;# 
  6367  0A1C                     	;# 
  6368  0A1C                     	;# 
  6369  0A1D                     	;# 
  6370  0A1D                     	;# 
  6371  0A1E                     	;# 
  6372  0A1E                     	;# 
  6373  0A1F                     	;# 
  6374  0A1F                     	;# 
  6375  0A1F                     	;# 
  6376  1E0F                     	;# 
  6377  1E10                     	;# 
  6378  1E11                     	;# 
  6379  1E12                     	;# 
  6380  1E13                     	;# 
  6381  1E14                     	;# 
  6382  1E15                     	;# 
  6383  1E16                     	;# 
  6384  1E17                     	;# 
  6385  1E18                     	;# 
  6386  1E19                     	;# 
  6387  1E1A                     	;# 
  6388  1E1B                     	;# 
  6389  1E1C                     	;# 
  6390  1E1D                     	;# 
  6391  1E1E                     	;# 
  6392  1E1F                     	;# 
  6393  1E20                     	;# 
  6394  1E21                     	;# 
  6395  1E22                     	;# 
  6396  1E23                     	;# 
  6397  1E24                     	;# 
  6398  1E25                     	;# 
  6399  1E26                     	;# 
  6400  1E27                     	;# 
  6401  1E28                     	;# 
  6402  1E29                     	;# 
  6403  1E2A                     	;# 
  6404  1E2B                     	;# 
  6405  1E2C                     	;# 
  6406  1E2D                     	;# 
  6407  1E2E                     	;# 
  6408  1E2F                     	;# 
  6409  1E30                     	;# 
  6410  1E31                     	;# 
  6411  1E32                     	;# 
  6412  1E33                     	;# 
  6413  1E34                     	;# 
  6414  1E35                     	;# 
  6415  1E36                     	;# 
  6416  1E37                     	;# 
  6417  1E8F                     	;# 
  6418  1E90                     	;# 
  6419  1E91                     	;# 
  6420  1E92                     	;# 
  6421  1E93                     	;# 
  6422  1E94                     	;# 
  6423  1E95                     	;# 
  6424  1E96                     	;# 
  6425  1E97                     	;# 
  6426  1E9C                     	;# 
  6427  1E9D                     	;# 
  6428  1E9E                     	;# 
  6429  1EA1                     	;# 
  6430  1EA2                     	;# 
  6431  1EA3                     	;# 
  6432  1EA4                     	;# 
  6433  1EA5                     	;# 
  6434  1EA9                     	;# 
  6435  1EAA                     	;# 
  6436  1EAB                     	;# 
  6437  1EAC                     	;# 
  6438  1EB1                     	;# 
  6439  1EB2                     	;# 
  6440  1EB3                     	;# 
  6441  1EB8                     	;# 
  6442  1EB9                     	;# 
  6443  1EBA                     	;# 
  6444  1EBB                     	;# 
  6445  1EBC                     	;# 
  6446  1EBD                     	;# 
  6447  1EBE                     	;# 
  6448  1EC3                     	;# 
  6449  1EC5                     	;# 
  6450  1EC6                     	;# 
  6451  1EC7                     	;# 
  6452  1EC8                     	;# 
  6453  1EC9                     	;# 
  6454  1ECA                     	;# 
  6455  1ECB                     	;# 
  6456  1ECB                     	;# 
  6457  1ECB                     	;# 
  6458  1ECC                     	;# 
  6459  1ECC                     	;# 
  6460  1ECC                     	;# 
  6461  1ECD                     	;# 
  6462  1ECD                     	;# 
  6463  1ECE                     	;# 
  6464  1ECE                     	;# 
  6465  1F10                     	;# 
  6466  1F11                     	;# 
  6467  1F12                     	;# 
  6468  1F13                     	;# 
  6469  1F14                     	;# 
  6470  1F15                     	;# 
  6471  1F16                     	;# 
  6472  1F17                     	;# 
  6473  1F18                     	;# 
  6474  1F19                     	;# 
  6475  1F1A                     	;# 
  6476  1F1B                     	;# 
  6477  1F1C                     	;# 
  6478  1F1D                     	;# 
  6479  1F1E                     	;# 
  6480  1F1F                     	;# 
  6481  1F20                     	;# 
  6482  1F21                     	;# 
  6483  1F22                     	;# 
  6484  1F23                     	;# 
  6485  1F24                     	;# 
  6486  1F25                     	;# 
  6487  1F26                     	;# 
  6488  1F27                     	;# 
  6489  1F38                     	;# 
  6490  1F39                     	;# 
  6491  1F3A                     	;# 
  6492  1F3B                     	;# 
  6493  1F3C                     	;# 
  6494  1F3D                     	;# 
  6495  1F3E                     	;# 
  6496  1F3F                     	;# 
  6497  1F43                     	;# 
  6498  1F44                     	;# 
  6499  1F45                     	;# 
  6500  1F46                     	;# 
  6501  1F47                     	;# 
  6502  1F48                     	;# 
  6503  1F49                     	;# 
  6504  1F4A                     	;# 
  6505  1F4E                     	;# 
  6506  1F4F                     	;# 
  6507  1F50                     	;# 
  6508  1F51                     	;# 
  6509  1F52                     	;# 
  6510  1F53                     	;# 
  6511  1F54                     	;# 
  6512  1F55                     	;# 
  6513  1F65                     	;# 
  6514  1F66                     	;# 
  6515  1F67                     	;# 
  6516  1F68                     	;# 
  6517  1F69                     	;# 
  6518  1F6A                     	;# 
  6519  1F6B                     	;# 
  6520  1FE4                     	;# 
  6521  1FE5                     	;# 
  6522  1FE6                     	;# 
  6523  1FE7                     	;# 
  6524  1FE8                     	;# 
  6525  1FE8                     	;# 
  6526  1FE9                     	;# 
  6527  1FEA                     	;# 
  6528  1FEB                     	;# 
  6529  1FED                     	;# 
  6530  1FEE                     	;# 
  6531  1FEF                     	;# 
  6532  0000                     	;# 
  6533  0001                     	;# 
  6534  0002                     	;# 
  6535  0003                     	;# 
  6536  0004                     	;# 
  6537  0005                     	;# 
  6538  0006                     	;# 
  6539  0007                     	;# 
  6540  0008                     	;# 
  6541  0009                     	;# 
  6542  000A                     	;# 
  6543  000B                     	;# 
  6544  000C                     	;# 
  6545  000D                     	;# 
  6546  000E                     	;# 
  6547  0010                     	;# 
  6548  0012                     	;# 
  6549  0013                     	;# 
  6550  0014                     	;# 
  6551  0016                     	;# 
  6552  0018                     	;# 
  6553  0019                     	;# 
  6554  001A                     	;# 
  6555  001C                     	;# 
  6556  008C                     	;# 
  6557  008C                     	;# 
  6558  008D                     	;# 
  6559  008E                     	;# 
  6560  008E                     	;# 
  6561  008F                     	;# 
  6562  0090                     	;# 
  6563  0090                     	;# 
  6564  0091                     	;# 
  6565  0092                     	;# 
  6566  0092                     	;# 
  6567  0093                     	;# 
  6568  0094                     	;# 
  6569  0094                     	;# 
  6570  0095                     	;# 
  6571  0096                     	;# 
  6572  0096                     	;# 
  6573  0097                     	;# 
  6574  0098                     	;# 
  6575  0099                     	;# 
  6576  009A                     	;# 
  6577  009B                     	;# 
  6578  009B                     	;# 
  6579  009C                     	;# 
  6580  009D                     	;# 
  6581  009D                     	;# 
  6582  009E                     	;# 
  6583  009F                     	;# 
  6584  010C                     	;# 
  6585  010C                     	;# 
  6586  010D                     	;# 
  6587  010E                     	;# 
  6588  010F                     	;# 
  6589  010F                     	;# 
  6590  0110                     	;# 
  6591  0111                     	;# 
  6592  0112                     	;# 
  6593  0113                     	;# 
  6594  0114                     	;# 
  6595  0115                     	;# 
  6596  0116                     	;# 
  6597  0117                     	;# 
  6598  0118                     	;# 
  6599  0119                     	;# 
  6600  0119                     	;# 
  6601  0119                     	;# 
  6602  011A                     	;# 
  6603  011A                     	;# 
  6604  011A                     	;# 
  6605  011B                     	;# 
  6606  011B                     	;# 
  6607  011B                     	;# 
  6608  011B                     	;# 
  6609  011B                     	;# 
  6610  011C                     	;# 
  6611  011C                     	;# 
  6612  011C                     	;# 
  6613  011D                     	;# 
  6614  011D                     	;# 
  6615  011D                     	;# 
  6616  011E                     	;# 
  6617  011E                     	;# 
  6618  011E                     	;# 
  6619  011F                     	;# 
  6620  011F                     	;# 
  6621  011F                     	;# 
  6622  011F                     	;# 
  6623  011F                     	;# 
  6624  018C                     	;# 
  6625  018D                     	;# 
  6626  018E                     	;# 
  6627  018F                     	;# 
  6628  0190                     	;# 
  6629  0191                     	;# 
  6630  0192                     	;# 
  6631  0196                     	;# 
  6632  0197                     	;# 
  6633  0198                     	;# 
  6634  0199                     	;# 
  6635  019A                     	;# 
  6636  019B                     	;# 
  6637  019C                     	;# 
  6638  020C                     	;# 
  6639  020D                     	;# 
  6640  020E                     	;# 
  6641  020E                     	;# 
  6642  020F                     	;# 
  6643  020F                     	;# 
  6644  0210                     	;# 
  6645  0210                     	;# 
  6646  0211                     	;# 
  6647  0211                     	;# 
  6648  0212                     	;# 
  6649  0213                     	;# 
  6650  0214                     	;# 
  6651  0214                     	;# 
  6652  0215                     	;# 
  6653  0215                     	;# 
  6654  0216                     	;# 
  6655  0216                     	;# 
  6656  0217                     	;# 
  6657  0217                     	;# 
  6658  0218                     	;# 
  6659  0219                     	;# 
  6660  021A                     	;# 
  6661  021A                     	;# 
  6662  021B                     	;# 
  6663  021B                     	;# 
  6664  021C                     	;# 
  6665  021C                     	;# 
  6666  021D                     	;# 
  6667  021D                     	;# 
  6668  021E                     	;# 
  6669  021F                     	;# 
  6670  028C                     	;# 
  6671  028C                     	;# 
  6672  028D                     	;# 
  6673  028D                     	;# 
  6674  028E                     	;# 
  6675  028F                     	;# 
  6676  0290                     	;# 
  6677  0291                     	;# 
  6678  0292                     	;# 
  6679  0292                     	;# 
  6680  0293                     	;# 
  6681  0293                     	;# 
  6682  0294                     	;# 
  6683  0295                     	;# 
  6684  0296                     	;# 
  6685  0297                     	;# 
  6686  0298                     	;# 
  6687  0298                     	;# 
  6688  0299                     	;# 
  6689  0299                     	;# 
  6690  029A                     	;# 
  6691  029B                     	;# 
  6692  029C                     	;# 
  6693  029D                     	;# 
  6694  029F                     	;# 
  6695  030C                     	;# 
  6696  030C                     	;# 
  6697  030D                     	;# 
  6698  030E                     	;# 
  6699  030F                     	;# 
  6700  0310                     	;# 
  6701  0310                     	;# 
  6702  0311                     	;# 
  6703  0312                     	;# 
  6704  0313                     	;# 
  6705  0314                     	;# 
  6706  0314                     	;# 
  6707  0315                     	;# 
  6708  0316                     	;# 
  6709  0317                     	;# 
  6710  0318                     	;# 
  6711  0318                     	;# 
  6712  0319                     	;# 
  6713  031A                     	;# 
  6714  031B                     	;# 
  6715  031C                     	;# 
  6716  031C                     	;# 
  6717  031D                     	;# 
  6718  031E                     	;# 
  6719  031F                     	;# 
  6720  038C                     	;# 
  6721  038C                     	;# 
  6722  038D                     	;# 
  6723  038E                     	;# 
  6724  0390                     	;# 
  6725  0390                     	;# 
  6726  0391                     	;# 
  6727  0392                     	;# 
  6728  048C                     	;# 
  6729  048C                     	;# 
  6730  048D                     	;# 
  6731  048E                     	;# 
  6732  048F                     	;# 
  6733  048F                     	;# 
  6734  0490                     	;# 
  6735  0491                     	;# 
  6736  0492                     	;# 
  6737  0492                     	;# 
  6738  0493                     	;# 
  6739  0494                     	;# 
  6740  0495                     	;# 
  6741  0495                     	;# 
  6742  0496                     	;# 
  6743  0497                     	;# 
  6744  0498                     	;# 
  6745  0499                     	;# 
  6746  049A                     	;# 
  6747  049B                     	;# 
  6748  049C                     	;# 
  6749  049D                     	;# 
  6750  050C                     	;# 
  6751  050C                     	;# 
  6752  050D                     	;# 
  6753  050E                     	;# 
  6754  050F                     	;# 
  6755  050F                     	;# 
  6756  0510                     	;# 
  6757  0511                     	;# 
  6758  0512                     	;# 
  6759  0512                     	;# 
  6760  0513                     	;# 
  6761  0514                     	;# 
  6762  0515                     	;# 
  6763  0515                     	;# 
  6764  0516                     	;# 
  6765  0517                     	;# 
  6766  0518                     	;# 
  6767  0519                     	;# 
  6768  051A                     	;# 
  6769  051B                     	;# 
  6770  051C                     	;# 
  6771  051D                     	;# 
  6772  058C                     	;# 
  6773  058C                     	;# 
  6774  058D                     	;# 
  6775  058E                     	;# 
  6776  058F                     	;# 
  6777  058F                     	;# 
  6778  0590                     	;# 
  6779  0591                     	;# 
  6780  0592                     	;# 
  6781  0593                     	;# 
  6782  059C                     	;# 
  6783  059C                     	;# 
  6784  059D                     	;# 
  6785  059D                     	;# 
  6786  059E                     	;# 
  6787  059F                     	;# 
  6788  060C                     	;# 
  6789  060C                     	;# 
  6790  060D                     	;# 
  6791  060D                     	;# 
  6792  060E                     	;# 
  6793  060F                     	;# 
  6794  0610                     	;# 
  6795  0611                     	;# 
  6796  0612                     	;# 
  6797  0613                     	;# 
  6798  0614                     	;# 
  6799  0616                     	;# 
  6800  0616                     	;# 
  6801  0617                     	;# 
  6802  0617                     	;# 
  6803  0618                     	;# 
  6804  0619                     	;# 
  6805  061A                     	;# 
  6806  061B                     	;# 
  6807  061C                     	;# 
  6808  061D                     	;# 
  6809  061E                     	;# 
  6810  068C                     	;# 
  6811  068D                     	;# 
  6812  068E                     	;# 
  6813  068F                     	;# 
  6814  0690                     	;# 
  6815  0691                     	;# 
  6816  0692                     	;# 
  6817  0693                     	;# 
  6818  0694                     	;# 
  6819  070C                     	;# 
  6820  070D                     	;# 
  6821  070E                     	;# 
  6822  070F                     	;# 
  6823  0710                     	;# 
  6824  0711                     	;# 
  6825  0712                     	;# 
  6826  0713                     	;# 
  6827  0714                     	;# 
  6828  0716                     	;# 
  6829  0717                     	;# 
  6830  0718                     	;# 
  6831  0719                     	;# 
  6832  071A                     	;# 
  6833  071B                     	;# 
  6834  071C                     	;# 
  6835  071D                     	;# 
  6836  071E                     	;# 
  6837  0796                     	;# 
  6838  0797                     	;# 
  6839  0798                     	;# 
  6840  0799                     	;# 
  6841  079A                     	;# 
  6842  079B                     	;# 
  6843  079C                     	;# 
  6844  079D                     	;# 
  6845  080C                     	;# 
  6846  080D                     	;# 
  6847  080E                     	;# 
  6848  080F                     	;# 
  6849  0810                     	;# 
  6850  0811                     	;# 
  6851  0812                     	;# 
  6852  0813                     	;# 
  6853  0814                     	;# 
  6854  081A                     	;# 
  6855  081A                     	;# 
  6856  081B                     	;# 
  6857  081C                     	;# 
  6858  081C                     	;# 
  6859  081D                     	;# 
  6860  081E                     	;# 
  6861  081F                     	;# 
  6862  088C                     	;# 
  6863  088D                     	;# 
  6864  088E                     	;# 
  6865  088F                     	;# 
  6866  0890                     	;# 
  6867  0891                     	;# 
  6868  0892                     	;# 
  6869  0893                     	;# 
  6870  0895                     	;# 
  6871  0896                     	;# 
  6872  0897                     	;# 
  6873  0898                     	;# 
  6874  0899                     	;# 
  6875  089A                     	;# 
  6876  089B                     	;# 
  6877  090C                     	;# 
  6878  090E                     	;# 
  6879  090F                     	;# 
  6880  091F                     	;# 
  6881  098F                     	;# 
  6882  098F                     	;# 
  6883  0990                     	;# 
  6884  0991                     	;# 
  6885  0992                     	;# 
  6886  0993                     	;# 
  6887  0994                     	;# 
  6888  0995                     	;# 
  6889  0996                     	;# 
  6890  0997                     	;# 
  6891  0A19                     	;# 
  6892  0A19                     	;# 
  6893  0A1A                     	;# 
  6894  0A1A                     	;# 
  6895  0A1B                     	;# 
  6896  0A1B                     	;# 
  6897  0A1B                     	;# 
  6898  0A1C                     	;# 
  6899  0A1C                     	;# 
  6900  0A1D                     	;# 
  6901  0A1D                     	;# 
  6902  0A1E                     	;# 
  6903  0A1E                     	;# 
  6904  0A1F                     	;# 
  6905  0A1F                     	;# 
  6906  0A1F                     	;# 
  6907  1E0F                     	;# 
  6908  1E10                     	;# 
  6909  1E11                     	;# 
  6910  1E12                     	;# 
  6911  1E13                     	;# 
  6912  1E14                     	;# 
  6913  1E15                     	;# 
  6914  1E16                     	;# 
  6915  1E17                     	;# 
  6916  1E18                     	;# 
  6917  1E19                     	;# 
  6918  1E1A                     	;# 
  6919  1E1B                     	;# 
  6920  1E1C                     	;# 
  6921  1E1D                     	;# 
  6922  1E1E                     	;# 
  6923  1E1F                     	;# 
  6924  1E20                     	;# 
  6925  1E21                     	;# 
  6926  1E22                     	;# 
  6927  1E23                     	;# 
  6928  1E24                     	;# 
  6929  1E25                     	;# 
  6930  1E26                     	;# 
  6931  1E27                     	;# 
  6932  1E28                     	;# 
  6933  1E29                     	;# 
  6934  1E2A                     	;# 
  6935  1E2B                     	;# 
  6936  1E2C                     	;# 
  6937  1E2D                     	;# 
  6938  1E2E                     	;# 
  6939  1E2F                     	;# 
  6940  1E30                     	;# 
  6941  1E31                     	;# 
  6942  1E32                     	;# 
  6943  1E33                     	;# 
  6944  1E34                     	;# 
  6945  1E35                     	;# 
  6946  1E36                     	;# 
  6947  1E37                     	;# 
  6948  1E8F                     	;# 
  6949  1E90                     	;# 
  6950  1E91                     	;# 
  6951  1E92                     	;# 
  6952  1E93                     	;# 
  6953  1E94                     	;# 
  6954  1E95                     	;# 
  6955  1E96                     	;# 
  6956  1E97                     	;# 
  6957  1E9C                     	;# 
  6958  1E9D                     	;# 
  6959  1E9E                     	;# 
  6960  1EA1                     	;# 
  6961  1EA2                     	;# 
  6962  1EA3                     	;# 
  6963  1EA4                     	;# 
  6964  1EA5                     	;# 
  6965  1EA9                     	;# 
  6966  1EAA                     	;# 
  6967  1EAB                     	;# 
  6968  1EAC                     	;# 
  6969  1EB1                     	;# 
  6970  1EB2                     	;# 
  6971  1EB3                     	;# 
  6972  1EB8                     	;# 
  6973  1EB9                     	;# 
  6974  1EBA                     	;# 
  6975  1EBB                     	;# 
  6976  1EBC                     	;# 
  6977  1EBD                     	;# 
  6978  1EBE                     	;# 
  6979  1EC3                     	;# 
  6980  1EC5                     	;# 
  6981  1EC6                     	;# 
  6982  1EC7                     	;# 
  6983  1EC8                     	;# 
  6984  1EC9                     	;# 
  6985  1ECA                     	;# 
  6986  1ECB                     	;# 
  6987  1ECB                     	;# 
  6988  1ECB                     	;# 
  6989  1ECC                     	;# 
  6990  1ECC                     	;# 
  6991  1ECC                     	;# 
  6992  1ECD                     	;# 
  6993  1ECD                     	;# 
  6994  1ECE                     	;# 
  6995  1ECE                     	;# 
  6996  1F10                     	;# 
  6997  1F11                     	;# 
  6998  1F12                     	;# 
  6999  1F13                     	;# 
  7000  1F14                     	;# 
  7001  1F15                     	;# 
  7002  1F16                     	;# 
  7003  1F17                     	;# 
  7004  1F18                     	;# 
  7005  1F19                     	;# 
  7006  1F1A                     	;# 
  7007  1F1B                     	;# 
  7008  1F1C                     	;# 
  7009  1F1D                     	;# 
  7010  1F1E                     	;# 
  7011  1F1F                     	;# 
  7012  1F20                     	;# 
  7013  1F21                     	;# 
  7014  1F22                     	;# 
  7015  1F23                     	;# 
  7016  1F24                     	;# 
  7017  1F25                     	;# 
  7018  1F26                     	;# 
  7019  1F27                     	;# 
  7020  1F38                     	;# 
  7021  1F39                     	;# 
  7022  1F3A                     	;# 
  7023  1F3B                     	;# 
  7024  1F3C                     	;# 
  7025  1F3D                     	;# 
  7026  1F3E                     	;# 
  7027  1F3F                     	;# 
  7028  1F43                     	;# 
  7029  1F44                     	;# 
  7030  1F45                     	;# 
  7031  1F46                     	;# 
  7032  1F47                     	;# 
  7033  1F48                     	;# 
  7034  1F49                     	;# 
  7035  1F4A                     	;# 
  7036  1F4E                     	;# 
  7037  1F4F                     	;# 
  7038  1F50                     	;# 
  7039  1F51                     	;# 
  7040  1F52                     	;# 
  7041  1F53                     	;# 
  7042  1F54                     	;# 
  7043  1F55                     	;# 
  7044  1F65                     	;# 
  7045  1F66                     	;# 
  7046  1F67                     	;# 
  7047  1F68                     	;# 
  7048  1F69                     	;# 
  7049  1F6A                     	;# 
  7050  1F6B                     	;# 
  7051  1FE4                     	;# 
  7052  1FE5                     	;# 
  7053  1FE6                     	;# 
  7054  1FE7                     	;# 
  7055  1FE8                     	;# 
  7056  1FE8                     	;# 
  7057  1FE9                     	;# 
  7058  1FEA                     	;# 
  7059  1FEB                     	;# 
  7060  1FED                     	;# 
  7061  1FEE                     	;# 
  7062  1FEF                     	;_waveform
  7063                           
  7064                           	psect	stringtext1
  7065  10AE                     __pstringtext1:	
  7066  10AE                     _mux:	
  7067  10AE  3410               	retlw	16
  7068  10AF  3411               	retlw	17
  7069  10B0  3412               	retlw	18
  7070  10B1  3413               	retlw	19
  7071  10B2  3414               	retlw	20
  7072  10B3  3415               	retlw	21
  7073  10B4  3416               	retlw	22
  7074  10B5  3417               	retlw	23
  7075  10B6  3418               	retlw	24
  7076  10B7  3419               	retlw	25
  7077  10B8  341A               	retlw	26
  7078  10B9  341B               	retlw	27
  7079  10BA  341C               	retlw	28
  7080  10BB  341D               	retlw	29
  7081  10BC  341E               	retlw	30
  7082  10BD  341F               	retlw	31
  7083  10BE                     __end_of_mux:	
  7084                           
  7085                           	psect	nvBANK0
  7086  0066                     __pnvBANK0:	
  7087  0066                     _TMR0_InterruptHandler:	
  7088  0066                     	ds	2
  7089  0068                     _timer0ReloadVal16bit:	
  7090  0068                     	ds	2
  7091  006A                     _EUSART1_RxDefaultInterruptHandler:	
  7092  006A                     	ds	2
  7093  006C                     _EUSART1_TxDefaultInterruptHandler:	
  7094  006C                     	ds	2
  7095  006E                     _eusart1TxBufferRemaining:	
  7096  006E                     	ds	1
  7097                           
  7098                           	psect	nvBANK1
  7099  00A8                     __pnvBANK1:	
  7100  00A8                     _EUSART1_ErrorHandler:	
  7101  00A8                     	ds	2
  7102  00AA                     _EUSART1_OverrunErrorHandler:	
  7103  00AA                     	ds	2
  7104  00AC                     _EUSART1_FramingErrorHandler:	
  7105  00AC                     	ds	2
  7106  0003                     _STATUSbits	set	3
  7107  0018                     _LATAbits	set	24
  7108  000B                     _INTCONbits	set	11
  7109  0014                     _TRISC	set	20
  7110  0013                     _TRISB	set	19
  7111  0012                     _TRISA	set	18
  7112  0016                     _TRISE	set	22
  7113  001A                     _LATC	set	26
  7114  0019                     _LATB	set	25
  7115  0018                     _LATA	set	24
  7116  001C                     _LATE	set	28
  7117  0119                     _RC1REG	set	281
  7118  011D                     _RC1STAbits	set	285
  7119  011A                     _TX1REG	set	282
  7120  011C                     _SP1BRGH	set	284
  7121  011B                     _SP1BRGL	set	283
  7122  011E                     _TX1STA	set	286
  7123  011D                     _RC1STA	set	285
  7124  011F                     _BAUD1CON	set	287
  7125  059E                     _T0CON0bits	set	1438
  7126  059E                     _T0CON0	set	1438
  7127  059C                     _TMR0L	set	1436
  7128  059D                     _TMR0H	set	1437
  7129  059F                     _T0CON1	set	1439
  7130  070F                     _PIR3bits	set	1807
  7131  0716                     _PIE0bits	set	1814
  7132  070C                     _PIR0bits	set	1804
  7133  0719                     _PIE3bits	set	1817
  7134  079D                     _PMD7	set	1949
  7135  079C                     _PMD6	set	1948
  7136  079B                     _PMD5	set	1947
  7137  079A                     _PMD4	set	1946
  7138  0799                     _PMD3	set	1945
  7139  0798                     _PMD2	set	1944
  7140  0797                     _PMD1	set	1943
  7141  0796                     _PMD0	set	1942
  7142  081F                     _NVMCON2	set	2079
  7143  081D                     _NVMDATH	set	2077
  7144  081C                     _NVMDATL	set	2076
  7145  081B                     _NVMADRH	set	2075
  7146  081A                     _NVMADRL	set	2074
  7147  081E                     _NVMCON1bits	set	2078
  7148  0892                     _OSCTUNE	set	2194
  7149  0890                     _OSCSTAT	set	2192
  7150  0893                     _OSCFRQ	set	2195
  7151  0891                     _OSCEN	set	2193
  7152  088F                     _OSCCON3	set	2191
  7153  088D                     _OSCCON1	set	2189
  7154  090F                     _DAC1CON1	set	2319
  7155  090E                     _DAC1CON0	set	2318
  7156  090C                     _FVRCON	set	2316
  7157  1ECB                     _RX1DTPPS	set	7883
  7158  1F26                     _RC6PPS	set	7974
  7159  1F52                     _INLVLC	set	8018
  7160  1F47                     _INLVLB	set	8007
  7161  1F3C                     _INLVLA	set	7996
  7162  1F51                     _SLRCONC	set	8017
  7163  1F46                     _SLRCONB	set	8006
  7164  1F3B                     _SLRCONA	set	7995
  7165  1F50                     _ODCONC	set	8016
  7166  1F45                     _ODCONB	set	8005
  7167  1F3A                     _ODCONA	set	7994
  7168  1F66                     _ODCONE	set	8038
  7169  1F4F                     _WPUC	set	8015
  7170  1F39                     _WPUA	set	7993
  7171  1F44                     _WPUB	set	8004
  7172  1F65                     _WPUE	set	8037
  7173  1F38                     _ANSELA	set	7992
  7174  1F43                     _ANSELB	set	8003
  7175  1F4E                     _ANSELC	set	8014
  7176                           
  7177                           	psect	stringtext2
  7178  1000                     __pstringtext2:	
  7179  1000                     STR_49:	
  7180  1000  3445               	retlw	69	;'E'
  7181  1001  3472               	retlw	114	;'r'
  7182  1002  3472               	retlw	114	;'r'
  7183  1003  346F               	retlw	111	;'o'
  7184  1004  3472               	retlw	114	;'r'
  7185  1005  343A               	retlw	58	;':'
  7186  1006  3420               	retlw	32	;' '
  7187  1007  3463               	retlw	99	;'c'
  7188  1008  3468               	retlw	104	;'h'
  7189  1009  3461               	retlw	97	;'a'
  7190  100A  346E               	retlw	110	;'n'
  7191  100B  346E               	retlw	110	;'n'
  7192  100C  3465               	retlw	101	;'e'
  7193  100D  346C               	retlw	108	;'l'
  7194  100E  3431               	retlw	49	;'1'
  7195  100F  3420               	retlw	32	;' '
  7196  1010  343D               	retlw	61	;'='
  7197  1011  3420               	retlw	32	;' '
  7198  1012  3463               	retlw	99	;'c'
  7199  1013  3468               	retlw	104	;'h'
  7200  1014  3461               	retlw	97	;'a'
  7201  1015  346E               	retlw	110	;'n'
  7202  1016  346E               	retlw	110	;'n'
  7203  1017  3465               	retlw	101	;'e'
  7204  1018  346C               	retlw	108	;'l'
  7205  1019  3432               	retlw	50	;'2'
  7206  101A  340A               	retlw	10
  7207  101B  3400               	retlw	0
  7208                           
  7209                           	psect	stringtext3
  7210  101C                     __pstringtext3:	
  7211  101C                     STR_25:	
  7212  101C  3450               	retlw	80	;'P'
  7213  101D  3468               	retlw	104	;'h'
  7214  101E  3461               	retlw	97	;'a'
  7215  101F  3473               	retlw	115	;'s'
  7216  1020  3465               	retlw	101	;'e'
  7217  1021  3420               	retlw	32	;' '
  7218  1022  3464               	retlw	100	;'d'
  7219  1023  3475               	retlw	117	;'u'
  7220  1024  3472               	retlw	114	;'r'
  7221  1025  3461               	retlw	97	;'a'
  7222  1026  3474               	retlw	116	;'t'
  7223  1027  3469               	retlw	105	;'i'
  7224  1028  346F               	retlw	111	;'o'
  7225  1029  346E               	retlw	110	;'n'
  7226  102A  3420               	retlw	32	;' '
  7227  102B  3428               	retlw	40	;'('
  7228  102C  3475               	retlw	117	;'u'
  7229  102D  3473               	retlw	115	;'s'
  7230  102E  342F               	retlw	47	;'/'
  7231  102F  3435               	retlw	53	;'5'
  7232  1030  3430               	retlw	48	;'0'
  7233  1031  3429               	retlw	41	;')'
  7234  1032  343A               	retlw	58	;':'
  7235  1033  3420               	retlw	32	;' '
  7236  1034  3400               	retlw	0
  7237                           
  7238                           	psect	stringtext4
  7239  1035                     __pstringtext4:	
  7240  1035                     STR_37:	
  7241  1035  344E               	retlw	78	;'N'
  7242  1036  3475               	retlw	117	;'u'
  7243  1037  346D               	retlw	109	;'m'
  7244  1038  3462               	retlw	98	;'b'
  7245  1039  3465               	retlw	101	;'e'
  7246  103A  3472               	retlw	114	;'r'
  7247  103B  3420               	retlw	32	;' '
  7248  103C  346F               	retlw	111	;'o'
  7249  103D  3466               	retlw	102	;'f'
  7250  103E  3420               	retlw	32	;' '
  7251  103F  3463               	retlw	99	;'c'
  7252  1040  346F               	retlw	111	;'o'
  7253  1041  346E               	retlw	110	;'n'
  7254  1042  3474               	retlw	116	;'t'
  7255  1043  3472               	retlw	114	;'r'
  7256  1044  3461               	retlw	97	;'a'
  7257  1045  3463               	retlw	99	;'c'
  7258  1046  3474               	retlw	116	;'t'
  7259  1047  3469               	retlw	105	;'i'
  7260  1048  346F               	retlw	111	;'o'
  7261  1049  346E               	retlw	110	;'n'
  7262  104A  3473               	retlw	115	;'s'
  7263  104B  343A               	retlw	58	;':'
  7264  104C  3420               	retlw	32	;' '
  7265  104D  3400               	retlw	0
  7266                           
  7267                           	psect	stringtext5
  7268  104E                     __pstringtext5:	
  7269  104E                     STR_35:	
  7270  104E  3452               	retlw	82	;'R'
  7271  104F  3461               	retlw	97	;'a'
  7272  1050  346D               	retlw	109	;'m'
  7273  1051  3470               	retlw	112	;'p'
  7274  1052  3420               	retlw	32	;' '
  7275  1053  3464               	retlw	100	;'d'
  7276  1054  346F               	retlw	111	;'o'
  7277  1055  3477               	retlw	119	;'w'
  7278  1056  346E               	retlw	110	;'n'
  7279  1057  3420               	retlw	32	;' '
  7280  1058  3474               	retlw	116	;'t'
  7281  1059  3469               	retlw	105	;'i'
  7282  105A  346D               	retlw	109	;'m'
  7283  105B  3465               	retlw	101	;'e'
  7284  105C  3420               	retlw	32	;' '
  7285  105D  3428               	retlw	40	;'('
  7286  105E  3464               	retlw	100	;'d'
  7287  105F  3473               	retlw	115	;'s'
  7288  1060  3429               	retlw	41	;')'
  7289  1061  3420               	retlw	32	;' '
  7290  1062  343A               	retlw	58	;':'
  7291  1063  3420               	retlw	32	;' '
  7292  1064  3400               	retlw	0
  7293                           
  7294                           	psect	stringtext6
  7295  1065                     __pstringtext6:	
  7296  1065                     STR_33:	
  7297  1065  3452               	retlw	82	;'R'
  7298  1066  3461               	retlw	97	;'a'
  7299  1067  346D               	retlw	109	;'m'
  7300  1068  3470               	retlw	112	;'p'
  7301  1069  3420               	retlw	32	;' '
  7302  106A  3475               	retlw	117	;'u'
  7303  106B  3470               	retlw	112	;'p'
  7304  106C  3420               	retlw	32	;' '
  7305  106D  3474               	retlw	116	;'t'
  7306  106E  3469               	retlw	105	;'i'
  7307  106F  346D               	retlw	109	;'m'
  7308  1070  3465               	retlw	101	;'e'
  7309  1071  3420               	retlw	32	;' '
  7310  1072  3428               	retlw	40	;'('
  7311  1073  3464               	retlw	100	;'d'
  7312  1074  3473               	retlw	115	;'s'
  7313  1075  3429               	retlw	41	;')'
  7314  1076  3420               	retlw	32	;' '
  7315  1077  343A               	retlw	58	;':'
  7316  1078  3420               	retlw	32	;' '
  7317  1079  3400               	retlw	0
  7318                           
  7319                           	psect	stringtext7
  7320  107A                     __pstringtext7:	
  7321  107A                     STR_27:	
  7322  107A  3453               	retlw	83	;'S'
  7323  107B  3479               	retlw	121	;'y'
  7324  107C  346D               	retlw	109	;'m'
  7325  107D  346D               	retlw	109	;'m'
  7326  107E  3465               	retlw	101	;'e'
  7327  107F  3474               	retlw	116	;'t'
  7328  1080  3472               	retlw	114	;'r'
  7329  1081  3479               	retlw	121	;'y'
  7330  1082  3420               	retlw	32	;' '
  7331  1083  3466               	retlw	102	;'f'
  7332  1084  3461               	retlw	97	;'a'
  7333  1085  3463               	retlw	99	;'c'
  7334  1086  3474               	retlw	116	;'t'
  7335  1087  346F               	retlw	111	;'o'
  7336  1088  3472               	retlw	114	;'r'
  7337  1089  343A               	retlw	58	;':'
  7338  108A  3420               	retlw	32	;' '
  7339  108B  3400               	retlw	0
  7340                           
  7341                           	psect	stringtext8
  7342  108C                     __pstringtext8:	
  7343  108C                     STR_21:	
  7344  108C  3441               	retlw	65	;'A'
  7345  108D  346D               	retlw	109	;'m'
  7346  108E  3470               	retlw	112	;'p'
  7347  108F  346C               	retlw	108	;'l'
  7348  1090  3469               	retlw	105	;'i'
  7349  1091  3474               	retlw	116	;'t'
  7350  1092  3475               	retlw	117	;'u'
  7351  1093  3464               	retlw	100	;'d'
  7352  1094  3465               	retlw	101	;'e'
  7353  1095  3420               	retlw	32	;' '
  7354  1096  3428               	retlw	40	;'('
  7355  1097  346D               	retlw	109	;'m'
  7356  1098  3441               	retlw	65	;'A'
  7357  1099  3429               	retlw	41	;')'
  7358  109A  343A               	retlw	58	;':'
  7359  109B  3420               	retlw	32	;' '
  7360  109C  3400               	retlw	0
  7361                           
  7362                           	psect	stringtext9
  7363  109D                     __pstringtext9:	
  7364  109D                     STR_23:	
  7365  109D  3446               	retlw	70	;'F'
  7366  109E  3472               	retlw	114	;'r'
  7367  109F  3465               	retlw	101	;'e'
  7368  10A0  3471               	retlw	113	;'q'
  7369  10A1  3475               	retlw	117	;'u'
  7370  10A2  3465               	retlw	101	;'e'
  7371  10A3  346E               	retlw	110	;'n'
  7372  10A4  3463               	retlw	99	;'c'
  7373  10A5  3479               	retlw	121	;'y'
  7374  10A6  3420               	retlw	32	;' '
  7375  10A7  3428               	retlw	40	;'('
  7376  10A8  3448               	retlw	72	;'H'
  7377  10A9  347A               	retlw	122	;'z'
  7378  10AA  3429               	retlw	41	;')'
  7379  10AB  343A               	retlw	58	;':'
  7380  10AC  3420               	retlw	32	;' '
  7381  10AD  3400               	retlw	0
  7382                           
  7383                           	psect	stringtext10
  7384  10BE                     __pstringtext10:	
  7385  10BE                     STR_31:	
  7386  10BE  344F               	retlw	79	;'O'
  7387  10BF  3446               	retlw	70	;'F'
  7388  10C0  3446               	retlw	70	;'F'
  7389  10C1  3420               	retlw	32	;' '
  7390  10C2  3474               	retlw	116	;'t'
  7391  10C3  3469               	retlw	105	;'i'
  7392  10C4  346D               	retlw	109	;'m'
  7393  10C5  3465               	retlw	101	;'e'
  7394  10C6  3420               	retlw	32	;' '
  7395  10C7  3428               	retlw	40	;'('
  7396  10C8  3473               	retlw	115	;'s'
  7397  10C9  3429               	retlw	41	;')'
  7398  10CA  3420               	retlw	32	;' '
  7399  10CB  343A               	retlw	58	;':'
  7400  10CC  3420               	retlw	32	;' '
  7401  10CD  3400               	retlw	0
  7402                           
  7403                           	psect	stringtext11
  7404  10CE                     __pstringtext11:	
  7405  10CE                     STR_20:	
  7406  10CE  340A               	retlw	10
  7407  10CF  344E               	retlw	78	;'N'
  7408  10D0  3445               	retlw	69	;'E'
  7409  10D1  344D               	retlw	77	;'M'
  7410  10D2  3453               	retlw	83	;'S'
  7411  10D3  3420               	retlw	32	;' '
  7412  10D4  3470               	retlw	112	;'p'
  7413  10D5  3472               	retlw	114	;'r'
  7414  10D6  346F               	retlw	111	;'o'
  7415  10D7  3467               	retlw	103	;'g'
  7416  10D8  3472               	retlw	114	;'r'
  7417  10D9  3461               	retlw	97	;'a'
  7418  10DA  346D               	retlw	109	;'m'
  7419  10DB  340A               	retlw	10
  7420  10DC  3400               	retlw	0
  7421                           
  7422                           	psect	stringtext12
  7423  10DD                     __pstringtext12:	
  7424  10DD                     STR_29:	
  7425  10DD  344F               	retlw	79	;'O'
  7426  10DE  344E               	retlw	78	;'N'
  7427  10DF  3420               	retlw	32	;' '
  7428  10E0  3474               	retlw	116	;'t'
  7429  10E1  3469               	retlw	105	;'i'
  7430  10E2  346D               	retlw	109	;'m'
  7431  10E3  3465               	retlw	101	;'e'
  7432  10E4  3420               	retlw	32	;' '
  7433  10E5  3428               	retlw	40	;'('
  7434  10E6  3473               	retlw	115	;'s'
  7435  10E7  3429               	retlw	41	;')'
  7436  10E8  3420               	retlw	32	;' '
  7437  10E9  343A               	retlw	58	;':'
  7438  10EA  3420               	retlw	32	;' '
  7439  10EB  3400               	retlw	0
  7440                           
  7441                           	psect	stringtext13
  7442  10EC                     __pstringtext13:	
  7443  10EC                     STR_39:	
  7444  10EC  3443               	retlw	67	;'C'
  7445  10ED  3468               	retlw	104	;'h'
  7446  10EE  3461               	retlw	97	;'a'
  7447  10EF  346E               	retlw	110	;'n'
  7448  10F0  346E               	retlw	110	;'n'
  7449  10F1  3465               	retlw	101	;'e'
  7450  10F2  346C               	retlw	108	;'l'
  7451  10F3  3420               	retlw	32	;' '
  7452  10F4  3431               	retlw	49	;'1'
  7453  10F5  343A               	retlw	58	;':'
  7454  10F6  3420               	retlw	32	;' '
  7455  10F7  3400               	retlw	0
  7456                           
  7457                           	psect	stringtext14
  7458  10F8                     __pstringtext14:	
  7459  10F8                     STR_41:	
  7460  10F8  3443               	retlw	67	;'C'
  7461  10F9  3468               	retlw	104	;'h'
  7462  10FA  3461               	retlw	97	;'a'
  7463  10FB  346E               	retlw	110	;'n'
  7464  10FC  346E               	retlw	110	;'n'
  7465  10FD  3465               	retlw	101	;'e'
  7466  10FE  346C               	retlw	108	;'l'
  7467  10FF  3420               	retlw	32	;' '
  7468  1100  3432               	retlw	50	;'2'
  7469  1101  343A               	retlw	58	;':'
  7470  1102  3420               	retlw	32	;' '
  7471  1103  3400               	retlw	0
  7472                           
  7473                           	psect	stringtext15
  7474  1104                     __pstringtext15:	
  7475  1104                     STR_44:	
  7476  1104  344D               	retlw	77	;'M'
  7477  1105  342D               	retlw	45	;'-'
  7478  1106  3465               	retlw	101	;'e'
  7479  1107  3472               	retlw	114	;'r'
  7480  1108  3472               	retlw	114	;'r'
  7481  1109  3420               	retlw	32	;' '
  7482  110A  3400               	retlw	0
  7483                           
  7484                           	psect	stringtext16
  7485  110B                     __pstringtext16:	
  7486  110B                     STR_13:	
  7487  110B  344F               	retlw	79	;'O'
  7488  110C  342D               	retlw	45	;'-'
  7489  110D  3465               	retlw	101	;'e'
  7490  110E  3472               	retlw	114	;'r'
  7491  110F  3472               	retlw	114	;'r'
  7492  1110  3420               	retlw	32	;' '
  7493  1111  3400               	retlw	0
  7494                           
  7495                           	psect	stringtext17
  7496  1112                     __pstringtext17:	
  7497  1112                     STR_19:	
  7498  1112  3452               	retlw	82	;'R'
  7499  1113  342D               	retlw	45	;'-'
  7500  1114  3465               	retlw	101	;'e'
  7501  1115  3472               	retlw	114	;'r'
  7502  1116  3472               	retlw	114	;'r'
  7503  1117  3420               	retlw	32	;' '
  7504  1118  3400               	retlw	0
  7505                           
  7506                           	psect	stringtext18
  7507  1119                     __pstringtext18:	
  7508  1119                     STR_3:	
  7509  1119  3461               	retlw	97	;'a'
  7510  111A  342D               	retlw	45	;'-'
  7511  111B  3465               	retlw	101	;'e'
  7512  111C  3472               	retlw	114	;'r'
  7513  111D  3472               	retlw	114	;'r'
  7514  111E  3420               	retlw	32	;' '
  7515  111F  3400               	retlw	0
  7516                           
  7517                           	psect	stringtext19
  7518  1120                     __pstringtext19:	
  7519  1120                     STR_15:	
  7520  1120  3463               	retlw	99	;'c'
  7521  1121  342D               	retlw	45	;'-'
  7522  1122  3465               	retlw	101	;'e'
  7523  1123  3472               	retlw	114	;'r'
  7524  1124  3472               	retlw	114	;'r'
  7525  1125  3420               	retlw	32	;' '
  7526  1126  3400               	retlw	0
  7527                           
  7528                           	psect	stringtext20
  7529  1127                     __pstringtext20:	
  7530  1127                     STR_7:	
  7531  1127  3464               	retlw	100	;'d'
  7532  1128  342D               	retlw	45	;'-'
  7533  1129  3465               	retlw	101	;'e'
  7534  112A  3472               	retlw	114	;'r'
  7535  112B  3472               	retlw	114	;'r'
  7536  112C  3420               	retlw	32	;' '
  7537  112D  3400               	retlw	0
  7538                           
  7539                           	psect	stringtext21
  7540  112E                     __pstringtext21:	
  7541  112E                     STR_5:	
  7542  112E  3466               	retlw	102	;'f'
  7543  112F  342D               	retlw	45	;'-'
  7544  1130  3465               	retlw	101	;'e'
  7545  1131  3472               	retlw	114	;'r'
  7546  1132  3472               	retlw	114	;'r'
  7547  1133  3420               	retlw	32	;' '
  7548  1134  3400               	retlw	0
  7549                           
  7550                           	psect	stringtext22
  7551  1135                     __pstringtext22:	
  7552  1135                     STR_9:	
  7553  1135  346B               	retlw	107	;'k'
  7554  1136  342D               	retlw	45	;'-'
  7555  1137  3465               	retlw	101	;'e'
  7556  1138  3472               	retlw	114	;'r'
  7557  1139  3472               	retlw	114	;'r'
  7558  113A  3420               	retlw	32	;' '
  7559  113B  3400               	retlw	0
  7560                           
  7561                           	psect	stringtext23
  7562  113C                     __pstringtext23:	
  7563  113C                     STR_46:	
  7564  113C  346D               	retlw	109	;'m'
  7565  113D  342D               	retlw	45	;'-'
  7566  113E  3465               	retlw	101	;'e'
  7567  113F  3472               	retlw	114	;'r'
  7568  1140  3472               	retlw	114	;'r'
  7569  1141  3420               	retlw	32	;' '
  7570  1142  3400               	retlw	0
  7571                           
  7572                           	psect	stringtext24
  7573  1143                     __pstringtext24:	
  7574  1143                     STR_11:	
  7575  1143  346F               	retlw	111	;'o'
  7576  1144  342D               	retlw	45	;'-'
  7577  1145  3465               	retlw	101	;'e'
  7578  1146  3472               	retlw	114	;'r'
  7579  1147  3472               	retlw	114	;'r'
  7580  1148  3420               	retlw	32	;' '
  7581  1149  3400               	retlw	0
  7582                           
  7583                           	psect	stringtext25
  7584  114A                     __pstringtext25:	
  7585  114A                     STR_17:	
  7586  114A  3472               	retlw	114	;'r'
  7587  114B  342D               	retlw	45	;'-'
  7588  114C  3465               	retlw	101	;'e'
  7589  114D  3472               	retlw	114	;'r'
  7590  114E  3472               	retlw	114	;'r'
  7591  114F  3420               	retlw	32	;' '
  7592  1150  3400               	retlw	0
  7593                           
  7594                           	psect	stringtext26
  7595  1151                     __pstringtext26:	
  7596  1151                     STR_43:	
  7597  1151  344D               	retlw	77	;'M'
  7598  1152  342D               	retlw	45	;'-'
  7599  1153  346F               	retlw	111	;'o'
  7600  1154  346B               	retlw	107	;'k'
  7601  1155  3420               	retlw	32	;' '
  7602  1156  3400               	retlw	0
  7603                           
  7604                           	psect	stringtext27
  7605  1157                     __pstringtext27:	
  7606  1157                     STR_51:	
  7607  1157  344E               	retlw	78	;'N'
  7608  1158  342D               	retlw	45	;'-'
  7609  1159  346F               	retlw	111	;'o'
  7610  115A  346B               	retlw	107	;'k'
  7611  115B  3420               	retlw	32	;' '
  7612  115C  3400               	retlw	0
  7613                           
  7614                           	psect	stringtext28
  7615  115D                     __pstringtext28:	
  7616  115D                     STR_12:	
  7617  115D  344F               	retlw	79	;'O'
  7618  115E  342D               	retlw	45	;'-'
  7619  115F  346F               	retlw	111	;'o'
  7620  1160  346B               	retlw	107	;'k'
  7621  1161  3420               	retlw	32	;' '
  7622  1162  3400               	retlw	0
  7623                           
  7624                           	psect	stringtext29
  7625  1163                     __pstringtext29:	
  7626  1163                     STR_18:	
  7627  1163  3452               	retlw	82	;'R'
  7628  1164  342D               	retlw	45	;'-'
  7629  1165  346F               	retlw	111	;'o'
  7630  1166  346B               	retlw	107	;'k'
  7631  1167  3420               	retlw	32	;' '
  7632  1168  3400               	retlw	0
  7633                           
  7634                           	psect	stringtext30
  7635  1169                     __pstringtext30:	
  7636  1169                     STR_2:	
  7637  1169  3461               	retlw	97	;'a'
  7638  116A  342D               	retlw	45	;'-'
  7639  116B  346F               	retlw	111	;'o'
  7640  116C  346B               	retlw	107	;'k'
  7641  116D  3420               	retlw	32	;' '
  7642  116E  3400               	retlw	0
  7643                           
  7644                           	psect	stringtext31
  7645  116F                     __pstringtext31:	
  7646  116F                     STR_14:	
  7647  116F  3463               	retlw	99	;'c'
  7648  1170  342D               	retlw	45	;'-'
  7649  1171  346F               	retlw	111	;'o'
  7650  1172  346B               	retlw	107	;'k'
  7651  1173  3420               	retlw	32	;' '
  7652  1174  3400               	retlw	0
  7653                           
  7654                           	psect	stringtext32
  7655  1175                     __pstringtext32:	
  7656  1175                     STR_6:	
  7657  1175  3464               	retlw	100	;'d'
  7658  1176  342D               	retlw	45	;'-'
  7659  1177  346F               	retlw	111	;'o'
  7660  1178  346B               	retlw	107	;'k'
  7661  1179  3420               	retlw	32	;' '
  7662  117A  3400               	retlw	0
  7663                           
  7664                           	psect	stringtext33
  7665  117B                     __pstringtext33:	
  7666  117B                     STR_4:	
  7667  117B  3466               	retlw	102	;'f'
  7668  117C  342D               	retlw	45	;'-'
  7669  117D  346F               	retlw	111	;'o'
  7670  117E  346B               	retlw	107	;'k'
  7671  117F  3420               	retlw	32	;' '
  7672  1180  3400               	retlw	0
  7673                           
  7674                           	psect	stringtext34
  7675  1181                     __pstringtext34:	
  7676  1181                     STR_8:	
  7677  1181  346B               	retlw	107	;'k'
  7678  1182  342D               	retlw	45	;'-'
  7679  1183  346F               	retlw	111	;'o'
  7680  1184  346B               	retlw	107	;'k'
  7681  1185  3420               	retlw	32	;' '
  7682  1186  3400               	retlw	0
  7683                           
  7684                           	psect	stringtext35
  7685  1187                     __pstringtext35:	
  7686  1187                     STR_48:	
  7687  1187  346C               	retlw	108	;'l'
  7688  1188  342D               	retlw	45	;'-'
  7689  1189  346F               	retlw	111	;'o'
  7690  118A  346B               	retlw	107	;'k'
  7691  118B  3420               	retlw	32	;' '
  7692  118C  3400               	retlw	0
  7693                           
  7694                           	psect	stringtext36
  7695  118D                     __pstringtext36:	
  7696  118D                     STR_45:	
  7697  118D  346D               	retlw	109	;'m'
  7698  118E  342D               	retlw	45	;'-'
  7699  118F  346F               	retlw	111	;'o'
  7700  1190  346B               	retlw	107	;'k'
  7701  1191  3420               	retlw	32	;' '
  7702  1192  3400               	retlw	0
  7703                           
  7704                           	psect	stringtext37
  7705  1193                     __pstringtext37:	
  7706  1193                     STR_50:	
  7707  1193  346E               	retlw	110	;'n'
  7708  1194  342D               	retlw	45	;'-'
  7709  1195  346F               	retlw	111	;'o'
  7710  1196  346B               	retlw	107	;'k'
  7711  1197  3420               	retlw	32	;' '
  7712  1198  3400               	retlw	0
  7713                           
  7714                           	psect	stringtext38
  7715  1199                     __pstringtext38:	
  7716  1199                     STR_10:	
  7717  1199  346F               	retlw	111	;'o'
  7718  119A  342D               	retlw	45	;'-'
  7719  119B  346F               	retlw	111	;'o'
  7720  119C  346B               	retlw	107	;'k'
  7721  119D  3420               	retlw	32	;' '
  7722  119E  3400               	retlw	0
  7723                           
  7724                           	psect	stringtext39
  7725  119F                     __pstringtext39:	
  7726  119F                     STR_16:	
  7727  119F  3472               	retlw	114	;'r'
  7728  11A0  342D               	retlw	45	;'-'
  7729  11A1  346F               	retlw	111	;'o'
  7730  11A2  346B               	retlw	107	;'k'
  7731  11A3  3420               	retlw	32	;' '
  7732  11A4  3400               	retlw	0
  7733                           
  7734                           	psect	stringtext40
  7735  11A5                     __pstringtext40:	
  7736  11A5                     STR_47:	
  7737  11A5  3473               	retlw	115	;'s'
  7738  11A6  342D               	retlw	45	;'-'
  7739  11A7  346F               	retlw	111	;'o'
  7740  11A8  346B               	retlw	107	;'k'
  7741  11A9  3420               	retlw	32	;' '
  7742  11AA  3400               	retlw	0
  7743                           
  7744                           	psect	stringtext41
  7745  11AB                     __pstringtext41:	
  7746  11AB                     STR_1:	
  7747  11AB  344F               	retlw	79	;'O'
  7748  11AC  346B               	retlw	107	;'k'
  7749  11AD  3420               	retlw	32	;' '
  7750  11AE  3400               	retlw	0
  7751                           
  7752                           	psect	stringtext42
  7753  0000                     __pstringtext42:	
  7754  101A                     
  7755                           ; #config settings
  7756  0000                     
  7757                           	psect	cinit
  7758  0027                     start_initialization:	
  7759  0027                     __initialization:		;BIGRAM
  7760                           
  7761                           ; Clear objects allocated to BIGRAM
  7762  0027  300A               	movlw	low (0+9994)
  7763  0028  0084               	movwf	4
  7764  0029  3027               	movlw	high (0+9994)
  7765  002A  0085               	movwf	5
  7766  002B  30E6               	movlw	230
  7767  002C  00FE               	movwf	btemp
  7768  002D  3000               	movlw	0
  7769  002E  00FF               	movwf	btemp+1
  7770  002F  318C  2408  3180   	fcall	clear_ram0
  7771                           
  7772                           ; Clear objects allocated to COMMON
  7773  0032  01F0               	clrf	__pbssCOMMON& (0+127)
  7774  0033  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  7775  0034  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  7776  0035  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  7777  0036  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  7778  0037  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  7779                           
  7780                           ; Clear objects allocated to BANK0
  7781  0038  3046               	movlw	low __pbssBANK0
  7782  0039  0084               	movwf	4
  7783  003A  3000               	movlw	high __pbssBANK0
  7784  003B  0085               	movwf	5
  7785  003C  3020               	movlw	32
  7786  003D  00FE               	movwf	btemp
  7787  003E  3000               	movlw	0
  7788  003F  00FF               	movwf	btemp+1
  7789  0040  318C  2408         	fcall	clear_ram0
  7790                           
  7791                           ; Clear objects allocated to BANK1
  7792  0042  0141               	movlb	1	; select bank1
  7793  0043  01A0               	clrf	__pbssBANK1& (0+127)
  7794  0044  01A1               	clrf	(__pbssBANK1+1)& (0+127)
  7795  0045  01A2               	clrf	(__pbssBANK1+2)& (0+127)
  7796  0046  01A3               	clrf	(__pbssBANK1+3)& (0+127)
  7797  0047  01A4               	clrf	(__pbssBANK1+4)& (0+127)
  7798  0048  01A5               	clrf	(__pbssBANK1+5)& (0+127)
  7799  0049  01A6               	clrf	(__pbssBANK1+6)& (0+127)
  7800  004A  01A7               	clrf	(__pbssBANK1+7)& (0+127)
  7801  004B                     end_of_initialization:	
  7802                           ;End of C runtime variable initialization code
  7803                           
  7804  004B                     __end_of__initialization:	
  7805  004B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7806  004C  0140               	movlb	0
  7807  004D  318E  2E18         	ljmp	_main	;jump to C main() function
  7808                           
  7809                           	psect	bssCOMMON
  7810  0070                     __pbssCOMMON:	
  7811  0070                     _NEMS_pulse_states:	
  7812  0070                     	ds	1
  7813  0071                     _eusart1RxCount:	
  7814  0071                     	ds	1
  7815  0072                     _eusart1RxTail:	
  7816  0072                     	ds	1
  7817  0073                     _eusart1RxHead:	
  7818  0073                     	ds	1
  7819  0074                     _eusart1TxTail:	
  7820  0074                     	ds	1
  7821  0075                     _eusart1TxHead:	
  7822  0075                     	ds	1
  7823                           
  7824                           	psect	bssBANK0
  7825  0046                     __pbssBANK0:	
  7826  0046                     _eusart1RxStatusBuffer:	
  7827  0046                     	ds	8
  7828  004E                     _eusart1TxBuffer:	
  7829  004E                     	ds	8
  7830  0056                     _NEMS_pmux1:	
  7831  0056                     	ds	1
  7832  0057                     _NEMS_nmux1:	
  7833  0057                     	ds	1
  7834  0058                     _NEMS_wave_states:	
  7835  0058                     	ds	1
  7836  0059                     _NEMS_states:	
  7837  0059                     	ds	1
  7838  005A                     _eusart1RxLastError:	
  7839  005A                     	ds	1
  7840  005B                     _program:	
  7841  005B                     	ds	11
  7842                           
  7843                           	psect	bssBANK1
  7844  00A0                     __pbssBANK1:	
  7845  00A0                     _eusart1RxBuffer:	
  7846  00A0                     	ds	8
  7847                           
  7848                           	psect	clrtext
  7849  0C08                     clear_ram0:	
  7850                           ;	Called with FSR0 containing the base address, and
  7851                           ;	btemp/btemp+1 has the size to clear
  7852                           
  7853  0C08  0064               	clrwdt	;clear the watchdog before getting into this loop
  7854  0C09                     clrloop0:	
  7855  0C09  0180               	clrf	0	;clear RAM location pointed to by FSR
  7856  0C0A  3101               	addfsr 0,1
  7857  0C0B  3001               	movlw	1
  7858  0C0C  02FE               	subwf	126,f
  7859  0C0D  3000               	movlw	0
  7860  0C0E  3BFF               	subwfb	127,f
  7861  0C0F  087F               	movf	127,w
  7862  0C10  047E               	iorwf	126,w
  7863  0C11  1903               	btfsc	3,2
  7864  0C12  3400               	retlw	0	;all done for this memory range, return
  7865  0C13  2C09               	goto	clrloop0	;have we reached the end yet?
  7866                           
  7867                           	psect	cstackBANK1
  7868  00AE                     __pcstackBANK1:	
  7869  00AE                     ??_main:	
  7870                           
  7871                           ; 1 bytes @ 0x0
  7872  00AE                     	ds	2
  7873                           
  7874                           	psect	cstackCOMMON
  7875  0076                     __pcstackCOMMON:	
  7876  0076                     ?_PMD_Initialize:	
  7877  0076                     ?_OSCILLATOR_Initialize:	
  7878                           ; 1 bytes @ 0x0
  7879                           
  7880  0076                     ?_FVR_Initialize:	
  7881                           ; 1 bytes @ 0x0
  7882                           
  7883  0076                     ?_DAC1_Initialize:	
  7884                           ; 1 bytes @ 0x0
  7885                           
  7886  0076                     ?_TMR0_Initialize:	
  7887                           ; 1 bytes @ 0x0
  7888                           
  7889  0076                     ?_EUSART1_Initialize:	
  7890                           ; 1 bytes @ 0x0
  7891                           
  7892  0076                     ?_EUSART1_Receive_ISR:	
  7893                           ; 1 bytes @ 0x0
  7894                           
  7895  0076                     ?_EUSART1_Transmit_ISR:	
  7896                           ; 1 bytes @ 0x0
  7897                           
  7898  0076                     ??_EUSART1_Transmit_ISR:	
  7899                           ; 1 bytes @ 0x0
  7900                           
  7901  0076                     ?_EUSART1_DefaultFramingErrorHandler:	
  7902                           ; 1 bytes @ 0x0
  7903                           
  7904  0076                     ??_EUSART1_DefaultFramingErrorHandler:	
  7905                           ; 1 bytes @ 0x0
  7906                           
  7907  0076                     ?_EUSART1_DefaultOverrunErrorHandler:	
  7908                           ; 1 bytes @ 0x0
  7909                           
  7910  0076                     ??_EUSART1_DefaultOverrunErrorHandler:	
  7911                           ; 1 bytes @ 0x0
  7912                           
  7913  0076                     ?_EUSART1_DefaultErrorHandler:	
  7914                           ; 1 bytes @ 0x0
  7915                           
  7916  0076                     ?_EUSART1_RxDataHandler:	
  7917                           ; 1 bytes @ 0x0
  7918                           
  7919  0076                     ??_EUSART1_RxDataHandler:	
  7920                           ; 1 bytes @ 0x0
  7921                           
  7922  0076                     ?_TMR0_DefaultInterruptHandler:	
  7923                           ; 1 bytes @ 0x0
  7924                           
  7925  0076                     ??_TMR0_DefaultInterruptHandler:	
  7926                           ; 1 bytes @ 0x0
  7927                           
  7928  0076                     ?_NEMS_initialize:	
  7929                           ; 1 bytes @ 0x0
  7930                           
  7931  0076                     ?_NEMS_message_handler:	
  7932                           ; 1 bytes @ 0x0
  7933                           
  7934  0076                     ?_NEMS_timer:	
  7935                           ; 1 bytes @ 0x0
  7936                           
  7937  0076                     ?_NEMS_set_amplitude:	
  7938                           ; 1 bytes @ 0x0
  7939                           
  7940  0076                     ?_NEMS_set_frequency:	
  7941                           ; 1 bytes @ 0x0
  7942                           
  7943  0076                     ?_NEMS_set_phase_duration:	
  7944                           ; 1 bytes @ 0x0
  7945                           
  7946  0076                     ?_NEMS_set_symmetry_factor:	
  7947                           ; 1 bytes @ 0x0
  7948                           
  7949  0076                     ?_NEMS_set_ON_time:	
  7950                           ; 1 bytes @ 0x0
  7951                           
  7952  0076                     ?_NEMS_set_OFF_time:	
  7953                           ; 1 bytes @ 0x0
  7954                           
  7955  0076                     ?_NEMS_set_contractions:	
  7956                           ; 1 bytes @ 0x0
  7957                           
  7958  0076                     ?_NEMS_set_ramp_up:	
  7959                           ; 1 bytes @ 0x0
  7960                           
  7961  0076                     ?_NEMS_set_ramp_down:	
  7962                           ; 1 bytes @ 0x0
  7963                           
  7964  0076                     ?_NEMS_get_program:	
  7965                           ; 1 bytes @ 0x0
  7966                           
  7967  0076                     ?_NEMS_save_program:	
  7968                           ; 1 bytes @ 0x0
  7969                           
  7970  0076                     ?_NEMS_load_program:	
  7971                           ; 1 bytes @ 0x0
  7972                           
  7973  0076                     ?_NEMS_start_program:	
  7974                           ; 1 bytes @ 0x0
  7975                           
  7976  0076                     ?_NEMS_stop_program:	
  7977                           ; 1 bytes @ 0x0
  7978                           
  7979  0076                     ?_NEMS_set_channel1:	
  7980                           ; 1 bytes @ 0x0
  7981                           
  7982  0076                     ?_NEMS_set_channel2:	
  7983                           ; 1 bytes @ 0x0
  7984                           
  7985  0076                     ?_eeprom_read:	
  7986                           ; 1 bytes @ 0x0
  7987                           
  7988  0076                     ?_NEMS_calculate_ramp:	
  7989                           ; 1 bytes @ 0x0
  7990                           
  7991  0076                     ?_PIN_MANAGER_Initialize:	
  7992                           ; 1 bytes @ 0x0
  7993                           
  7994  0076                     ?_SYSTEM_Initialize:	
  7995                           ; 1 bytes @ 0x0
  7996                           
  7997  0076                     ?_EUSART1_is_tx_ready:	
  7998                           ; 1 bytes @ 0x0
  7999                           
  8000  0076                     ?_EUSART1_is_rx_ready:	
  8001                           ; 1 bytes @ 0x0
  8002                           
  8003  0076                     ?_EUSART1_Read:	
  8004                           ; 1 bytes @ 0x0
  8005                           
  8006  0076                     ?_EUSART1_Write:	
  8007                           ; 1 bytes @ 0x0
  8008                           
  8009  0076                     ?_DAC1_SetOutput:	
  8010                           ; 1 bytes @ 0x0
  8011                           
  8012  0076                     ?_TMR0_StartTimer:	
  8013                           ; 1 bytes @ 0x0
  8014                           
  8015  0076                     ?_TMR0_StopTimer:	
  8016                           ; 1 bytes @ 0x0
  8017                           
  8018  0076                     ?_TMR0_ISR:	
  8019                           ; 1 bytes @ 0x0
  8020                           
  8021  0076                     ?_INTERRUPT_InterruptManager:	
  8022                           ; 1 bytes @ 0x0
  8023                           
  8024  0076                     ?_main:	
  8025                           ; 1 bytes @ 0x0
  8026                           
  8027  0076                     ?_NEMS_get_packet:	
  8028                           ; 1 bytes @ 0x0
  8029                           
  8030  0076                     ?_NEMS_recalculate_program:	
  8031                           ; 1 bytes @ 0x0
  8032                           
  8033  0076                     ?i1_DAC1_SetOutput:	
  8034                           ; 1 bytes @ 0x0
  8035                           
  8036  0076                     ??i1_DAC1_SetOutput:	
  8037                           ; 1 bytes @ 0x0
  8038                           
  8039  0076                     i1DAC1_SetOutput@inputData:	
  8040                           ; 1 bytes @ 0x0
  8041                           
  8042                           
  8043                           ; 1 bytes @ 0x0
  8044  0076                     	ds	1
  8045  0077                     ??_EUSART1_Receive_ISR:	
  8046  0077                     ??_EUSART1_DefaultErrorHandler:	
  8047                           ; 1 bytes @ 0x1
  8048                           
  8049  0077                     ??_NEMS_timer:	
  8050                           ; 1 bytes @ 0x1
  8051                           
  8052                           
  8053                           ; 1 bytes @ 0x1
  8054  0077                     	ds	5
  8055  007C                     ??_TMR0_ISR:	
  8056  007C                     ??_INTERRUPT_InterruptManager:	
  8057                           ; 1 bytes @ 0x6
  8058                           
  8059                           
  8060                           	psect	cstackBANK0
  8061  0020                     __pcstackBANK0:	
  8062                           ; 1 bytes @ 0x6
  8063                           
  8064  0020                     ??_PMD_Initialize:	
  8065  0020                     ??_OSCILLATOR_Initialize:	
  8066                           ; 1 bytes @ 0x0
  8067                           
  8068  0020                     ??_FVR_Initialize:	
  8069                           ; 1 bytes @ 0x0
  8070                           
  8071  0020                     ??_DAC1_Initialize:	
  8072                           ; 1 bytes @ 0x0
  8073                           
  8074  0020                     ?_EUSART1_SetRxInterruptHandler:	
  8075                           ; 1 bytes @ 0x0
  8076                           
  8077  0020                     ?_EUSART1_SetTxInterruptHandler:	
  8078                           ; 1 bytes @ 0x0
  8079                           
  8080  0020                     ?_EUSART1_SetFramingErrorHandler:	
  8081                           ; 1 bytes @ 0x0
  8082                           
  8083  0020                     ?_EUSART1_SetOverrunErrorHandler:	
  8084                           ; 1 bytes @ 0x0
  8085                           
  8086  0020                     ?_EUSART1_SetErrorHandler:	
  8087                           ; 1 bytes @ 0x0
  8088                           
  8089  0020                     ?_TMR0_SetInterruptHandler:	
  8090                           ; 1 bytes @ 0x0
  8091                           
  8092  0020                     ?_eeprom_write:	
  8093                           ; 1 bytes @ 0x0
  8094                           
  8095  0020                     ??_eeprom_read:	
  8096                           ; 1 bytes @ 0x0
  8097                           
  8098  0020                     ??_PIN_MANAGER_Initialize:	
  8099                           ; 1 bytes @ 0x0
  8100                           
  8101  0020                     ??_EUSART1_is_tx_ready:	
  8102                           ; 1 bytes @ 0x0
  8103                           
  8104  0020                     ??_EUSART1_is_rx_ready:	
  8105                           ; 1 bytes @ 0x0
  8106                           
  8107  0020                     ??_EUSART1_Read:	
  8108                           ; 1 bytes @ 0x0
  8109                           
  8110  0020                     ??_EUSART1_Write:	
  8111                           ; 1 bytes @ 0x0
  8112                           
  8113  0020                     ??_DAC1_SetOutput:	
  8114                           ; 1 bytes @ 0x0
  8115                           
  8116  0020                     ??_TMR0_StartTimer:	
  8117                           ; 1 bytes @ 0x0
  8118                           
  8119  0020                     ??_TMR0_StopTimer:	
  8120                           ; 1 bytes @ 0x0
  8121                           
  8122  0020                     ?___bmul:	
  8123                           ; 1 bytes @ 0x0
  8124                           
  8125  0020                     ?___lbmod:	
  8126                           ; 1 bytes @ 0x0
  8127                           
  8128  0020                     ?___wmul:	
  8129                           ; 1 bytes @ 0x0
  8130                           
  8131  0020                     DAC1_SetOutput@inputData:	
  8132                           ; 2 bytes @ 0x0
  8133                           
  8134  0020                     eeprom_read@addr:	
  8135                           ; 1 bytes @ 0x0
  8136                           
  8137  0020                     eeprom_write@value:	
  8138                           ; 1 bytes @ 0x0
  8139                           
  8140  0020                     ___bmul@multiplicand:	
  8141                           ; 1 bytes @ 0x0
  8142                           
  8143  0020                     ___lbmod@divisor:	
  8144                           ; 1 bytes @ 0x0
  8145                           
  8146  0020                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  8147                           ; 1 bytes @ 0x0
  8148                           
  8149  0020                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  8150                           ; 2 bytes @ 0x0
  8151                           
  8152  0020                     EUSART1_SetErrorHandler@interruptHandler:	
  8153                           ; 2 bytes @ 0x0
  8154                           
  8155  0020                     EUSART1_SetTxInterruptHandler@interruptHandler:	
  8156                           ; 2 bytes @ 0x0
  8157                           
  8158  0020                     EUSART1_SetRxInterruptHandler@interruptHandler:	
  8159                           ; 2 bytes @ 0x0
  8160                           
  8161  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
  8162                           ; 2 bytes @ 0x0
  8163                           
  8164  0020                     ___wmul@multiplier:	
  8165                           ; 2 bytes @ 0x0
  8166                           
  8167                           
  8168                           ; 2 bytes @ 0x0
  8169  0020                     	ds	1
  8170  0021                     ??_eeprom_write:	
  8171  0021                     ??___bmul:	
  8172                           ; 1 bytes @ 0x1
  8173                           
  8174  0021                     ??___lbmod:	
  8175                           ; 1 bytes @ 0x1
  8176                           
  8177  0021                     EUSART1_Read@readValue:	
  8178                           ; 1 bytes @ 0x1
  8179                           
  8180  0021                     EUSART1_Write@txData:	
  8181                           ; 1 bytes @ 0x1
  8182                           
  8183  0021                     eeprom_write@addr:	
  8184                           ; 1 bytes @ 0x1
  8185                           
  8186                           
  8187                           ; 1 bytes @ 0x1
  8188  0021                     	ds	1
  8189  0022                     ??_TMR0_Initialize:	
  8190  0022                     ??_EUSART1_Initialize:	
  8191                           ; 1 bytes @ 0x2
  8192                           
  8193  0022                     ??_EUSART1_SetRxInterruptHandler:	
  8194                           ; 1 bytes @ 0x2
  8195                           
  8196  0022                     ??_EUSART1_SetTxInterruptHandler:	
  8197                           ; 1 bytes @ 0x2
  8198                           
  8199  0022                     ??_EUSART1_SetFramingErrorHandler:	
  8200                           ; 1 bytes @ 0x2
  8201                           
  8202  0022                     ??_EUSART1_SetOverrunErrorHandler:	
  8203                           ; 1 bytes @ 0x2
  8204                           
  8205  0022                     ??_EUSART1_SetErrorHandler:	
  8206                           ; 1 bytes @ 0x2
  8207                           
  8208  0022                     ??_TMR0_SetInterruptHandler:	
  8209                           ; 1 bytes @ 0x2
  8210                           
  8211  0022                     ??_NEMS_initialize:	
  8212                           ; 1 bytes @ 0x2
  8213                           
  8214  0022                     ?__puts:	
  8215                           ; 1 bytes @ 0x2
  8216                           
  8217  0022                     ___bmul@product:	
  8218                           ; 1 bytes @ 0x2
  8219                           
  8220  0022                     __puts@pt:	
  8221                           ; 1 bytes @ 0x2
  8222                           
  8223  0022                     ___wmul@multiplicand:	
  8224                           ; 2 bytes @ 0x2
  8225                           
  8226                           
  8227                           ; 2 bytes @ 0x2
  8228  0022                     	ds	1
  8229  0023                     ??_SYSTEM_Initialize:	
  8230  0023                     ___bmul@multiplier:	
  8231                           ; 1 bytes @ 0x3
  8232                           
  8233  0023                     ___lbmod@dividend:	
  8234                           ; 1 bytes @ 0x3
  8235                           
  8236                           
  8237                           ; 1 bytes @ 0x3
  8238  0023                     	ds	1
  8239  0024                     ??__puts:	
  8240  0024                     ??_NEMS_get_packet:	
  8241                           ; 1 bytes @ 0x4
  8242                           
  8243  0024                     ??___wmul:	
  8244                           ; 1 bytes @ 0x4
  8245                           
  8246  0024                     ___lbmod@counter:	
  8247                           ; 1 bytes @ 0x4
  8248                           
  8249  0024                     ___wmul@product:	
  8250                           ; 1 bytes @ 0x4
  8251                           
  8252                           
  8253                           ; 2 bytes @ 0x4
  8254  0024                     	ds	1
  8255  0025                     ___lbmod@rem:	
  8256                           
  8257                           ; 1 bytes @ 0x5
  8258  0025                     	ds	1
  8259  0026                     ?___awdiv:	
  8260  0026                     ?___lwdiv:	
  8261                           ; 2 bytes @ 0x6
  8262                           
  8263  0026                     NEMS_get_packet@message:	
  8264                           ; 2 bytes @ 0x6
  8265                           
  8266  0026                     ___awdiv@divisor:	
  8267                           ; 2 bytes @ 0x6
  8268                           
  8269  0026                     ___lwdiv@divisor:	
  8270                           ; 2 bytes @ 0x6
  8271                           
  8272                           
  8273                           ; 2 bytes @ 0x6
  8274  0026                     	ds	1
  8275  0027                     __puts@index:	
  8276                           
  8277                           ; 1 bytes @ 0x7
  8278  0027                     	ds	1
  8279  0028                     ??_NEMS_save_program:	
  8280  0028                     ??_NEMS_load_program:	
  8281                           ; 1 bytes @ 0x8
  8282                           
  8283  0028                     ??_NEMS_stop_program:	
  8284                           ; 1 bytes @ 0x8
  8285                           
  8286  0028                     NEMS_get_packet@pt:	
  8287                           ; 1 bytes @ 0x8
  8288                           
  8289  0028                     ___awdiv@dividend:	
  8290                           ; 1 bytes @ 0x8
  8291                           
  8292  0028                     ___lwdiv@dividend:	
  8293                           ; 2 bytes @ 0x8
  8294                           
  8295                           
  8296                           ; 2 bytes @ 0x8
  8297  0028                     	ds	1
  8298  0029                     ??_NEMS_set_amplitude:	
  8299  0029                     ??_NEMS_set_frequency:	
  8300                           ; 1 bytes @ 0x9
  8301                           
  8302  0029                     ??_NEMS_set_phase_duration:	
  8303                           ; 1 bytes @ 0x9
  8304                           
  8305  0029                     ??_NEMS_set_symmetry_factor:	
  8306                           ; 1 bytes @ 0x9
  8307                           
  8308  0029                     ??_NEMS_set_ON_time:	
  8309                           ; 1 bytes @ 0x9
  8310                           
  8311  0029                     ??_NEMS_set_OFF_time:	
  8312                           ; 1 bytes @ 0x9
  8313                           
  8314  0029                     ??_NEMS_set_contractions:	
  8315                           ; 1 bytes @ 0x9
  8316                           
  8317  0029                     ??_NEMS_set_ramp_up:	
  8318                           ; 1 bytes @ 0x9
  8319                           
  8320  0029                     ??_NEMS_set_ramp_down:	
  8321                           ; 1 bytes @ 0x9
  8322                           
  8323  0029                     ??_NEMS_set_channel1:	
  8324                           ; 1 bytes @ 0x9
  8325                           
  8326  0029                     ??_NEMS_set_channel2:	
  8327                           ; 1 bytes @ 0x9
  8328                           
  8329  0029                     NEMS_save_program@addr:	
  8330                           ; 1 bytes @ 0x9
  8331                           
  8332  0029                     NEMS_load_program@addr:	
  8333                           ; 1 bytes @ 0x9
  8334                           
  8335                           
  8336                           ; 2 bytes @ 0x9
  8337  0029                     	ds	1
  8338  002A                     ??___awdiv:	
  8339  002A                     ??___lwdiv:	
  8340                           ; 1 bytes @ 0xA
  8341                           
  8342                           
  8343                           ; 1 bytes @ 0xA
  8344  002A                     	ds	1
  8345  002B                     ___awdiv@counter:	
  8346  002B                     ___lwdiv@quotient:	
  8347                           ; 1 bytes @ 0xB
  8348                           
  8349                           
  8350                           ; 2 bytes @ 0xB
  8351  002B                     	ds	1
  8352  002C                     ___awdiv@sign:	
  8353                           
  8354                           ; 1 bytes @ 0xC
  8355  002C                     	ds	1
  8356  002D                     ___lwdiv@counter:	
  8357  002D                     ___awdiv@quotient:	
  8358                           ; 1 bytes @ 0xD
  8359                           
  8360                           
  8361                           ; 2 bytes @ 0xD
  8362  002D                     	ds	1
  8363  002E                     ??_NEMS_calculate_ramp:	
  8364                           
  8365                           ; 1 bytes @ 0xE
  8366  002E                     	ds	1
  8367  002F                     ?__sprintf_u8b:	
  8368  002F                     __sprintf_u8b@val:	
  8369                           ; 1 bytes @ 0xF
  8370                           
  8371                           
  8372                           ; 1 bytes @ 0xF
  8373  002F                     	ds	1
  8374  0030                     ??__sprintf_u8b:	
  8375                           
  8376                           ; 1 bytes @ 0x10
  8377  0030                     	ds	3
  8378  0033                     __sprintf_u8b@aux:	
  8379                           
  8380                           ; 1 bytes @ 0x13
  8381  0033                     	ds	1
  8382  0034                     __sprintf_u8b@buf:	
  8383                           
  8384                           ; 3 bytes @ 0x14
  8385  0034                     	ds	3
  8386  0037                     __sprintf_u8b@mess:	
  8387                           
  8388                           ; 1 bytes @ 0x17
  8389  0037                     	ds	1
  8390  0038                     ??_NEMS_get_program:	
  8391                           
  8392                           ; 1 bytes @ 0x18
  8393  0038                     	ds	1
  8394  0039                     NEMS_get_program@aux:	
  8395                           
  8396                           ; 4 bytes @ 0x19
  8397  0039                     	ds	2
  8398  003B                     NEMS_calculate_ramp@i:	
  8399                           
  8400                           ; 1 bytes @ 0x1B
  8401  003B                     	ds	1
  8402  003C                     ??_NEMS_recalculate_program:	
  8403                           
  8404                           ; 1 bytes @ 0x1C
  8405  003C                     	ds	6
  8406  0042                     ??_NEMS_start_program:	
  8407                           
  8408                           ; 1 bytes @ 0x22
  8409  0042                     	ds	1
  8410  0043                     ??_NEMS_message_handler:	
  8411                           
  8412                           ; 1 bytes @ 0x23
  8413  0043                     	ds	2
  8414  0045                     NEMS_message_handler@header:	
  8415                           
  8416                           ; 1 bytes @ 0x25
  8417  0045                     	ds	1
  8418                           
  8419                           	psect	maintext
  8420  0E18                     __pmaintext:	
  8421 ;;
  8422 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  8423 ;;
  8424 ;; *************** function _main *****************
  8425 ;; Defined at:
  8426 ;;		line 52 in file "main.c"
  8427 ;; Parameters:    Size  Location     Type
  8428 ;;		None
  8429 ;; Auto vars:     Size  Location     Type
  8430 ;;		None
  8431 ;; Return value:  Size  Location     Type
  8432 ;;                  1    wreg      void 
  8433 ;; Registers used:
  8434 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8435 ;; Tracked objects:
  8436 ;;		On entry : B3F/0
  8437 ;;		On exit  : 3F/0
  8438 ;;		Unchanged: 0/0
  8439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8442 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8443 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8444 ;;Total ram usage:        2 bytes
  8445 ;; Hardware stack levels required when called:    9
  8446 ;; This function calls:
  8447 ;;		_EUSART1_is_rx_ready
  8448 ;;		_NEMS_initialize
  8449 ;;		_NEMS_message_handler
  8450 ;;		_SYSTEM_Initialize
  8451 ;; This function is called by:
  8452 ;;		Startup code after reset
  8453 ;; This function uses a non-reentrant model
  8454 ;;
  8455                           
  8456                           
  8457                           ;psect for function _main
  8458  0E18                     _main:	
  8459                           
  8460                           ;main.c: 55:     SYSTEM_Initialize();
  8461                           
  8462                           ;incstack = 0
  8463                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8464  0E18  318C  245B  318E   	fcall	_SYSTEM_Initialize
  8465                           
  8466                           ;main.c: 56:     NEMS_initialize();
  8467  0E1B  318F  273F  318E   	fcall	_NEMS_initialize
  8468                           
  8469                           ;main.c: 62:     (INTCONbits.GIE = 1);
  8470  0E1E  178B               	bsf	11,7	;volatile
  8471                           
  8472                           ;main.c: 65:     (INTCONbits.PEIE = 1);
  8473  0E1F  170B               	bsf	11,6	;volatile
  8474  0E20  1418               	bsf	24,0	;volatile
  8475                           
  8476                           ;main.c: 75:         _delay((unsigned long)((200)*(32000000/4000.0)));
  8477  0E21  3009               	movlw	9
  8478  0E22  0141               	movlb	1	; select bank1
  8479  0E23  00AF               	movwf	(??_main^(0+128)+1)
  8480  0E24  301E               	movlw	30
  8481  0E25  00AE               	movwf	??_main^(0+128)
  8482  0E26  30E4               	movlw	228
  8483  0E27                     u2107:	
  8484  0E27  0B89               	decfsz	9,f
  8485  0E28  2E27               	goto	u2107
  8486  0E29  0BAE               	decfsz	??_main^(0+128),f
  8487  0E2A  2E27               	goto	u2107
  8488  0E2B  0BAF               	decfsz	(??_main^(0+128)+1),f
  8489  0E2C  2E27               	goto	u2107
  8490  0E2D  0000               	nop
  8491  0E2E  0140               	movlb	0	; select bank0
  8492  0E2F  1018               	bcf	24,0	;volatile
  8493  0E30                     l3933:	
  8494                           
  8495                           ;main.c: 79:     {;main.c: 81:         if(EUSART1_is_rx_ready()) {
  8496  0E30  318B  23CE  318E   	fcall	_EUSART1_is_rx_ready
  8497  0E33  3A00               	xorlw	0
  8498  0E34  1903               	skipnz
  8499  0E35  2E30               	goto	l3933
  8500                           
  8501                           ;main.c: 82:             NEMS_message_handler();
  8502  0E36  3187  2716  318E   	fcall	_NEMS_message_handler
  8503  0E39  2E30               	goto	l3933
  8504  0E3A                     __end_of_main:	
  8505                           
  8506                           	psect	text1
  8507  0C5B                     __ptext1:	
  8508 ;; *************** function _SYSTEM_Initialize *****************
  8509 ;; Defined at:
  8510 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8511 ;; Parameters:    Size  Location     Type
  8512 ;;		None
  8513 ;; Auto vars:     Size  Location     Type
  8514 ;;		None
  8515 ;; Return value:  Size  Location     Type
  8516 ;;                  1    wreg      void 
  8517 ;; Registers used:
  8518 ;;		wreg, status,2, status,0, pclath, cstack
  8519 ;; Tracked objects:
  8520 ;;		On entry : B3F/0
  8521 ;;		On exit  : 3F/E
  8522 ;;		Unchanged: 0/0
  8523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8528 ;;Total ram usage:        0 bytes
  8529 ;; Hardware stack levels used:    1
  8530 ;; Hardware stack levels required when called:    6
  8531 ;; This function calls:
  8532 ;;		_DAC1_Initialize
  8533 ;;		_EUSART1_Initialize
  8534 ;;		_FVR_Initialize
  8535 ;;		_OSCILLATOR_Initialize
  8536 ;;		_PIN_MANAGER_Initialize
  8537 ;;		_PMD_Initialize
  8538 ;;		_TMR0_Initialize
  8539 ;; This function is called by:
  8540 ;;		_main
  8541 ;; This function uses a non-reentrant model
  8542 ;;
  8543                           
  8544                           
  8545                           ;psect for function _SYSTEM_Initialize
  8546  0C5B                     _SYSTEM_Initialize:	
  8547                           
  8548                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  8549                           
  8550                           ;incstack = 0
  8551                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8552  0C5B  318B  23FE  318C   	fcall	_PMD_Initialize
  8553                           
  8554                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  8555  0C5E  318E  26AB  318C   	fcall	_PIN_MANAGER_Initialize
  8556                           
  8557                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  8558  0C61  318B  23F4  318C   	fcall	_OSCILLATOR_Initialize
  8559                           
  8560                           ;mcc_generated_files/mcc.c: 55:     FVR_Initialize();
  8561  0C64  318B  23B0  318C   	fcall	_FVR_Initialize
  8562                           
  8563                           ;mcc_generated_files/mcc.c: 56:     DAC1_Initialize();
  8564  0C67  318B  23AC  318C   	fcall	_DAC1_Initialize
  8565                           
  8566                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  8567  0C6A  3187  27E3  318C   	fcall	_TMR0_Initialize
  8568                           
  8569                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  8570  0C6D  318F  27BD         	fcall	_EUSART1_Initialize
  8571  0C6F  0008               	return
  8572  0C70                     __end_of_SYSTEM_Initialize:	
  8573                           
  8574                           	psect	text2
  8575  07E3                     __ptext2:	
  8576 ;; *************** function _TMR0_Initialize *****************
  8577 ;; Defined at:
  8578 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  8579 ;; Parameters:    Size  Location     Type
  8580 ;;		None
  8581 ;; Auto vars:     Size  Location     Type
  8582 ;;		None
  8583 ;; Return value:  Size  Location     Type
  8584 ;;                  1    wreg      void 
  8585 ;; Registers used:
  8586 ;;		wreg, status,2, status,0, pclath, cstack
  8587 ;; Tracked objects:
  8588 ;;		On entry : B3F/12
  8589 ;;		On exit  : 3F/B
  8590 ;;		Unchanged: 0/0
  8591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8596 ;;Total ram usage:        0 bytes
  8597 ;; Hardware stack levels used:    1
  8598 ;; Hardware stack levels required when called:    5
  8599 ;; This function calls:
  8600 ;;		_TMR0_SetInterruptHandler
  8601 ;; This function is called by:
  8602 ;;		_SYSTEM_Initialize
  8603 ;; This function uses a non-reentrant model
  8604 ;;
  8605                           
  8606                           
  8607                           ;psect for function _TMR0_Initialize
  8608  07E3                     _TMR0_Initialize:	
  8609                           
  8610                           ;mcc_generated_files/tmr0.c: 71:     T0CON1 = 0x40;
  8611                           
  8612                           ;incstack = 0
  8613                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8614  07E3  3040               	movlw	64
  8615  07E4  014B               	movlb	11	; select bank11
  8616  07E5  009F               	movwf	31	;volatile
  8617                           
  8618                           ;mcc_generated_files/tmr0.c: 74:     TMR0H = 0xFE;
  8619  07E6  30FE               	movlw	254
  8620  07E7  009D               	movwf	29	;volatile
  8621                           
  8622                           ;mcc_generated_files/tmr0.c: 77:     TMR0L = 0x80;
  8623  07E8  3080               	movlw	128
  8624  07E9  009C               	movwf	28	;volatile
  8625                           
  8626                           ;mcc_generated_files/tmr0.c: 80:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
  8627  07EA  081D               	movf	29,w	;volatile
  8628  07EB  0140               	movlb	0	; select bank0
  8629  07EC  00E9               	movwf	_timer0ReloadVal16bit+1	;volatile
  8630  07ED  014B               	movlb	11	; select bank11
  8631  07EE  081C               	movf	28,w	;volatile
  8632  07EF  0140               	movlb	0	; select bank0
  8633  07F0  00E8               	movwf	_timer0ReloadVal16bit	;volatile
  8634                           
  8635                           ;mcc_generated_files/tmr0.c: 83:     PIR0bits.TMR0IF = 0;
  8636  07F1  014E               	movlb	14	; select bank14
  8637  07F2  128C               	bcf	12,5	;volatile
  8638                           
  8639                           ;mcc_generated_files/tmr0.c: 86:     PIE0bits.TMR0IE = 1;
  8640  07F3  1696               	bsf	22,5	;volatile
  8641                           
  8642                           ;mcc_generated_files/tmr0.c: 89:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  8643  07F4  30FF               	movlw	low _TMR0_DefaultInterruptHandler
  8644  07F5  0140               	movlb	0	; select bank0
  8645  07F6  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  8646  07F7  3007               	movlw	high _TMR0_DefaultInterruptHandler
  8647  07F8  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  8648  07F9  318B  23B9         	fcall	_TMR0_SetInterruptHandler
  8649                           
  8650                           ;mcc_generated_files/tmr0.c: 92:     T0CON0 = 0x90;
  8651  07FB  3090               	movlw	144
  8652  07FC  014B               	movlb	11	; select bank11
  8653  07FD  009E               	movwf	30	;volatile
  8654  07FE  0008               	return
  8655  07FF                     __end_of_TMR0_Initialize:	
  8656                           
  8657                           	psect	text3
  8658  0BFE                     __ptext3:	
  8659 ;; *************** function _PMD_Initialize *****************
  8660 ;; Defined at:
  8661 ;;		line 77 in file "mcc_generated_files/mcc.c"
  8662 ;; Parameters:    Size  Location     Type
  8663 ;;		None
  8664 ;; Auto vars:     Size  Location     Type
  8665 ;;		None
  8666 ;; Return value:  Size  Location     Type
  8667 ;;                  1    wreg      void 
  8668 ;; Registers used:
  8669 ;;		status,2
  8670 ;; Tracked objects:
  8671 ;;		On entry : B3F/0
  8672 ;;		On exit  : B3F/F
  8673 ;;		Unchanged: B00/0
  8674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8679 ;;Total ram usage:        0 bytes
  8680 ;; Hardware stack levels used:    1
  8681 ;; Hardware stack levels required when called:    4
  8682 ;; This function calls:
  8683 ;;		Nothing
  8684 ;; This function is called by:
  8685 ;;		_SYSTEM_Initialize
  8686 ;; This function uses a non-reentrant model
  8687 ;;
  8688                           
  8689                           
  8690                           ;psect for function _PMD_Initialize
  8691  0BFE                     _PMD_Initialize:	
  8692                           
  8693                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
  8694                           
  8695                           ;incstack = 0
  8696                           ; Regs used in _PMD_Initialize: [status,2]
  8697  0BFE  014F               	movlb	15	; select bank15
  8698  0BFF  0196               	clrf	22	;volatile
  8699                           
  8700                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
  8701  0C00  0197               	clrf	23	;volatile
  8702                           
  8703                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
  8704  0C01  0198               	clrf	24	;volatile
  8705                           
  8706                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
  8707  0C02  0199               	clrf	25	;volatile
  8708                           
  8709                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
  8710  0C03  019A               	clrf	26	;volatile
  8711                           
  8712                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
  8713  0C04  019B               	clrf	27	;volatile
  8714                           
  8715                           ;mcc_generated_files/mcc.c: 92:     PMD6 = 0x00;
  8716  0C05  019C               	clrf	28	;volatile
  8717                           
  8718                           ;mcc_generated_files/mcc.c: 94:     PMD7 = 0x00;
  8719  0C06  019D               	clrf	29	;volatile
  8720  0C07  0008               	return
  8721  0C08                     __end_of_PMD_Initialize:	
  8722                           
  8723                           	psect	text4
  8724  0EAB                     __ptext4:	
  8725 ;; *************** function _PIN_MANAGER_Initialize *****************
  8726 ;; Defined at:
  8727 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8728 ;; Parameters:    Size  Location     Type
  8729 ;;		None
  8730 ;; Auto vars:     Size  Location     Type
  8731 ;;		None
  8732 ;; Return value:  Size  Location     Type
  8733 ;;                  1    wreg      void 
  8734 ;; Registers used:
  8735 ;;		wreg, status,2
  8736 ;; Tracked objects:
  8737 ;;		On entry : B3F/F
  8738 ;;		On exit  : B3F/3D
  8739 ;;		Unchanged: B00/0
  8740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8745 ;;Total ram usage:        0 bytes
  8746 ;; Hardware stack levels used:    1
  8747 ;; Hardware stack levels required when called:    4
  8748 ;; This function calls:
  8749 ;;		Nothing
  8750 ;; This function is called by:
  8751 ;;		_SYSTEM_Initialize
  8752 ;; This function uses a non-reentrant model
  8753 ;;
  8754                           
  8755                           
  8756                           ;psect for function _PIN_MANAGER_Initialize
  8757  0EAB                     _PIN_MANAGER_Initialize:	
  8758                           
  8759                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  8760                           
  8761                           ;incstack = 0
  8762                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8763  0EAB  0140               	movlb	0	; select bank0
  8764  0EAC  019C               	clrf	28	;volatile
  8765                           
  8766                           ;mcc_generated_files/pin_manager.c: 61:     LATA = 0x00;
  8767  0EAD  0198               	clrf	24	;volatile
  8768                           
  8769                           ;mcc_generated_files/pin_manager.c: 62:     LATB = 0x00;
  8770  0EAE  0199               	clrf	25	;volatile
  8771                           
  8772                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x00;
  8773  0EAF  019A               	clrf	26	;volatile
  8774                           
  8775                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0x08;
  8776  0EB0  3008               	movlw	8
  8777  0EB1  0096               	movwf	22	;volatile
  8778                           
  8779                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0xFE;
  8780  0EB2  30FE               	movlw	254
  8781  0EB3  0092               	movwf	18	;volatile
  8782                           
  8783                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xE0;
  8784  0EB4  30E0               	movlw	224
  8785  0EB5  0093               	movwf	19	;volatile
  8786                           
  8787                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0xA0;
  8788  0EB6  30A0               	movlw	160
  8789  0EB7  0094               	movwf	20	;volatile
  8790                           
  8791                           ;mcc_generated_files/pin_manager.c: 76:     ANSELC = 0x7F;
  8792  0EB8  307F               	movlw	127
  8793  0EB9  017E               	movlb	62	; select bank62
  8794  0EBA  00CE               	movwf	78	;volatile
  8795                           
  8796                           ;mcc_generated_files/pin_manager.c: 77:     ANSELB = 0xFF;
  8797  0EBB  30FF               	movlw	255
  8798  0EBC  00C3               	movwf	67	;volatile
  8799                           
  8800                           ;mcc_generated_files/pin_manager.c: 78:     ANSELA = 0xFF;
  8801  0EBD  30FF               	movlw	255
  8802  0EBE  00B8               	movwf	56	;volatile
  8803                           
  8804                           ;mcc_generated_files/pin_manager.c: 83:     WPUE = 0x00;
  8805  0EBF  01E5               	clrf	101	;volatile
  8806                           
  8807                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
  8808  0EC0  01C4               	clrf	68	;volatile
  8809                           
  8810                           ;mcc_generated_files/pin_manager.c: 85:     WPUA = 0x00;
  8811  0EC1  01B9               	clrf	57	;volatile
  8812                           
  8813                           ;mcc_generated_files/pin_manager.c: 86:     WPUC = 0x00;
  8814  0EC2  01CF               	clrf	79	;volatile
  8815                           
  8816                           ;mcc_generated_files/pin_manager.c: 91:     ODCONE = 0x00;
  8817  0EC3  01E6               	clrf	102	;volatile
  8818                           
  8819                           ;mcc_generated_files/pin_manager.c: 92:     ODCONA = 0x00;
  8820  0EC4  01BA               	clrf	58	;volatile
  8821                           
  8822                           ;mcc_generated_files/pin_manager.c: 93:     ODCONB = 0x00;
  8823  0EC5  01C5               	clrf	69	;volatile
  8824                           
  8825                           ;mcc_generated_files/pin_manager.c: 94:     ODCONC = 0x00;
  8826  0EC6  01D0               	clrf	80	;volatile
  8827                           
  8828                           ;mcc_generated_files/pin_manager.c: 99:     SLRCONA = 0xFF;
  8829  0EC7  30FF               	movlw	255
  8830  0EC8  00BB               	movwf	59	;volatile
  8831                           
  8832                           ;mcc_generated_files/pin_manager.c: 100:     SLRCONB = 0xFF;
  8833  0EC9  30FF               	movlw	255
  8834  0ECA  00C6               	movwf	70	;volatile
  8835                           
  8836                           ;mcc_generated_files/pin_manager.c: 101:     SLRCONC = 0xFF;
  8837  0ECB  30FF               	movlw	255
  8838  0ECC  00D1               	movwf	81	;volatile
  8839                           
  8840                           ;mcc_generated_files/pin_manager.c: 106:     INLVLA = 0x3F;
  8841  0ECD  303F               	movlw	63
  8842  0ECE  00BC               	movwf	60	;volatile
  8843                           
  8844                           ;mcc_generated_files/pin_manager.c: 107:     INLVLB = 0x3F;
  8845  0ECF  303F               	movlw	63
  8846  0ED0  00C7               	movwf	71	;volatile
  8847                           
  8848                           ;mcc_generated_files/pin_manager.c: 108:     INLVLC = 0x3F;
  8849  0ED1  303F               	movlw	63
  8850  0ED2  00D2               	movwf	82	;volatile
  8851                           
  8852                           ;mcc_generated_files/pin_manager.c: 117:     RC6PPS = 0x0F;
  8853  0ED3  300F               	movlw	15
  8854  0ED4  00A6               	movwf	38	;volatile
  8855                           
  8856                           ;mcc_generated_files/pin_manager.c: 118:     RX1DTPPS = 0x17;
  8857  0ED5  3017               	movlw	23
  8858  0ED6  017D               	movlb	61	; select bank61
  8859  0ED7  00CB               	movwf	75	;volatile
  8860  0ED8  0008               	return
  8861  0ED9                     __end_of_PIN_MANAGER_Initialize:	
  8862                           
  8863                           	psect	text5
  8864  0BF4                     __ptext5:	
  8865 ;; *************** function _OSCILLATOR_Initialize *****************
  8866 ;; Defined at:
  8867 ;;		line 61 in file "mcc_generated_files/mcc.c"
  8868 ;; Parameters:    Size  Location     Type
  8869 ;;		None
  8870 ;; Auto vars:     Size  Location     Type
  8871 ;;		None
  8872 ;; Return value:  Size  Location     Type
  8873 ;;                  1    wreg      void 
  8874 ;; Registers used:
  8875 ;;		wreg, status,2
  8876 ;; Tracked objects:
  8877 ;;		On entry : B3F/3D
  8878 ;;		On exit  : B3F/11
  8879 ;;		Unchanged: B00/0
  8880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8885 ;;Total ram usage:        0 bytes
  8886 ;; Hardware stack levels used:    1
  8887 ;; Hardware stack levels required when called:    4
  8888 ;; This function calls:
  8889 ;;		Nothing
  8890 ;; This function is called by:
  8891 ;;		_SYSTEM_Initialize
  8892 ;; This function uses a non-reentrant model
  8893 ;;
  8894                           
  8895                           
  8896                           ;psect for function _OSCILLATOR_Initialize
  8897  0BF4                     _OSCILLATOR_Initialize:	
  8898                           
  8899                           ;mcc_generated_files/mcc.c: 64:     OSCCON1 = 0x60;
  8900                           
  8901                           ;incstack = 0
  8902                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8903  0BF4  3060               	movlw	96
  8904  0BF5  0151               	movlb	17	; select bank17
  8905  0BF6  008D               	movwf	13	;volatile
  8906                           
  8907                           ;mcc_generated_files/mcc.c: 66:     OSCCON3 = 0x00;
  8908  0BF7  018F               	clrf	15	;volatile
  8909                           
  8910                           ;mcc_generated_files/mcc.c: 68:     OSCEN = 0x00;
  8911  0BF8  0191               	clrf	17	;volatile
  8912                           
  8913                           ;mcc_generated_files/mcc.c: 70:     OSCFRQ = 0x06;
  8914  0BF9  3006               	movlw	6
  8915  0BFA  0093               	movwf	19	;volatile
  8916                           
  8917                           ;mcc_generated_files/mcc.c: 72:     OSCSTAT = 0x00;
  8918  0BFB  0190               	clrf	16	;volatile
  8919                           
  8920                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
  8921  0BFC  0192               	clrf	18	;volatile
  8922  0BFD  0008               	return
  8923  0BFE                     __end_of_OSCILLATOR_Initialize:	
  8924                           
  8925                           	psect	text6
  8926  0BB0                     __ptext6:	
  8927 ;; *************** function _FVR_Initialize *****************
  8928 ;; Defined at:
  8929 ;;		line 58 in file "mcc_generated_files/fvr.c"
  8930 ;; Parameters:    Size  Location     Type
  8931 ;;		None
  8932 ;; Auto vars:     Size  Location     Type
  8933 ;;		None
  8934 ;; Return value:  Size  Location     Type
  8935 ;;                  1    wreg      void 
  8936 ;; Registers used:
  8937 ;;		wreg
  8938 ;; Tracked objects:
  8939 ;;		On entry : B3F/11
  8940 ;;		On exit  : B3F/12
  8941 ;;		Unchanged: B00/0
  8942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8947 ;;Total ram usage:        0 bytes
  8948 ;; Hardware stack levels used:    1
  8949 ;; Hardware stack levels required when called:    4
  8950 ;; This function calls:
  8951 ;;		Nothing
  8952 ;; This function is called by:
  8953 ;;		_SYSTEM_Initialize
  8954 ;; This function uses a non-reentrant model
  8955 ;;
  8956                           
  8957                           
  8958                           ;psect for function _FVR_Initialize
  8959  0BB0                     _FVR_Initialize:	
  8960                           
  8961                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x84;
  8962                           
  8963                           ;incstack = 0
  8964                           ; Regs used in _FVR_Initialize: [wreg]
  8965  0BB0  3084               	movlw	132
  8966  0BB1  0152               	movlb	18	; select bank18
  8967  0BB2  008C               	movwf	12	;volatile
  8968  0BB3  0008               	return
  8969  0BB4                     __end_of_FVR_Initialize:	
  8970                           
  8971                           	psect	text7
  8972  0FBD                     __ptext7:	
  8973 ;; *************** function _EUSART1_Initialize *****************
  8974 ;; Defined at:
  8975 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  8976 ;; Parameters:    Size  Location     Type
  8977 ;;		None
  8978 ;; Auto vars:     Size  Location     Type
  8979 ;;		None
  8980 ;; Return value:  Size  Location     Type
  8981 ;;                  1    wreg      void 
  8982 ;; Registers used:
  8983 ;;		wreg, status,2, status,0, pclath, cstack
  8984 ;; Tracked objects:
  8985 ;;		On entry : 3F/B
  8986 ;;		On exit  : 3F/E
  8987 ;;		Unchanged: 0/0
  8988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8991 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8992 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8993 ;;Total ram usage:        1 bytes
  8994 ;; Hardware stack levels used:    1
  8995 ;; Hardware stack levels required when called:    5
  8996 ;; This function calls:
  8997 ;;		_EUSART1_SetErrorHandler
  8998 ;;		_EUSART1_SetFramingErrorHandler
  8999 ;;		_EUSART1_SetOverrunErrorHandler
  9000 ;;		_EUSART1_SetRxInterruptHandler
  9001 ;;		_EUSART1_SetTxInterruptHandler
  9002 ;; This function is called by:
  9003 ;;		_SYSTEM_Initialize
  9004 ;; This function uses a non-reentrant model
  9005 ;;
  9006                           
  9007                           
  9008                           ;psect for function _EUSART1_Initialize
  9009  0FBD                     _EUSART1_Initialize:	
  9010                           
  9011                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
  9012                           
  9013                           ;incstack = 0
  9014                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9015  0FBD  014E               	movlb	14	; select bank14
  9016  0FBE  1299               	bcf	25,5	;volatile
  9017                           
  9018                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  9019  0FBF  30D9               	movlw	low _EUSART1_Receive_ISR
  9020  0FC0  0140               	movlb	0	; select bank0
  9021  0FC1  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
  9022  0FC2  300E               	movlw	high _EUSART1_Receive_ISR
  9023  0FC3  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
  9024  0FC4  318B  23BE  318F   	fcall	_EUSART1_SetRxInterruptHandler
  9025                           
  9026                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
  9027  0FC7  014E               	movlb	14	; select bank14
  9028  0FC8  1219               	bcf	25,4	;volatile
  9029                           
  9030                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  9031  0FC9  309E               	movlw	low _EUSART1_Transmit_ISR
  9032  0FCA  0140               	movlb	0	; select bank0
  9033  0FCB  00A0               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler
  9034  0FCC  300D               	movlw	high _EUSART1_Transmit_ISR
  9035  0FCD  00A1               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1
  9036  0FCE  318B  23C3  318F   	fcall	_EUSART1_SetTxInterruptHandler
  9037                           
  9038                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
  9039  0FD1  3008               	movlw	8
  9040  0FD2  0142               	movlb	2	; select bank2
  9041  0FD3  009F               	movwf	31	;volatile
  9042                           
  9043                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
  9044  0FD4  3090               	movlw	144
  9045  0FD5  009D               	movwf	29	;volatile
  9046                           
  9047                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
  9048  0FD6  3024               	movlw	36
  9049  0FD7  009E               	movwf	30	;volatile
  9050                           
  9051                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x44;
  9052  0FD8  3044               	movlw	68
  9053  0FD9  009B               	movwf	27	;volatile
  9054                           
  9055                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x00;
  9056  0FDA  019C               	clrf	28	;volatile
  9057                           
  9058                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  9059  0FDB  3003               	movlw	low _EUSART1_DefaultFramingErrorHandler
  9060  0FDC  0140               	movlb	0	; select bank0
  9061  0FDD  00A0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
  9062  0FDE  3000               	movlw	high _EUSART1_DefaultFramingErrorHandler
  9063  0FDF  00A1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
  9064  0FE0  318B  23E4  318F   	fcall	_EUSART1_SetFramingErrorHandler
  9065                           
  9066                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  9067  0FE3  30A8               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  9068  0FE4  0140               	movlb	0	; select bank0
  9069  0FE5  00A0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
  9070  0FE6  300B               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  9071  0FE7  00A1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
  9072  0FE8  318B  23EC  318F   	fcall	_EUSART1_SetOverrunErrorHandler
  9073                           
  9074                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  9075  0FEB  309F               	movlw	low _EUSART1_DefaultErrorHandler
  9076  0FEC  0140               	movlb	0	; select bank0
  9077  0FED  00A0               	movwf	EUSART1_SetErrorHandler@interruptHandler
  9078  0FEE  300B               	movlw	high _EUSART1_DefaultErrorHandler
  9079  0FEF  00A1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
  9080  0FF0  318B  23DC         	fcall	_EUSART1_SetErrorHandler
  9081                           
  9082                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  9083  0FF2  0140               	movlb	0	; select bank0
  9084  0FF3  01DA               	clrf	_eusart1RxLastError	;volatile
  9085                           
  9086                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  9087  0FF4  01F5               	clrf	_eusart1TxHead	;volatile
  9088                           
  9089                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  9090  0FF5  01F4               	clrf	_eusart1TxTail	;volatile
  9091                           
  9092                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  9093  0FF6  3008               	movlw	8
  9094  0FF7  00A2               	movwf	??_EUSART1_Initialize
  9095  0FF8  0822               	movf	??_EUSART1_Initialize,w
  9096  0FF9  00EE               	movwf	_eusart1TxBufferRemaining	;volatile
  9097                           
  9098                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  9099  0FFA  01F3               	clrf	_eusart1RxHead	;volatile
  9100                           
  9101                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  9102  0FFB  01F2               	clrf	_eusart1RxTail	;volatile
  9103                           
  9104                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  9105  0FFC  01F1               	clrf	_eusart1RxCount	;volatile
  9106                           
  9107                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
  9108  0FFD  014E               	movlb	14	; select bank14
  9109  0FFE  1699               	bsf	25,5	;volatile
  9110  0FFF  0008               	return
  9111  1000                     __end_of_EUSART1_Initialize:	
  9112                           
  9113                           	psect	text8
  9114  0BC3                     __ptext8:	
  9115 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  9116 ;; Defined at:
  9117 ;;		line 276 in file "mcc_generated_files/eusart1.c"
  9118 ;; Parameters:    Size  Location     Type
  9119 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9120 ;;		 -> EUSART1_Transmit_ISR(1), 
  9121 ;; Auto vars:     Size  Location     Type
  9122 ;;		None
  9123 ;; Return value:  Size  Location     Type
  9124 ;;                  1    wreg      void 
  9125 ;; Registers used:
  9126 ;;		wreg
  9127 ;; Tracked objects:
  9128 ;;		On entry : 3F/0
  9129 ;;		On exit  : 3F/0
  9130 ;;		Unchanged: 0/0
  9131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9132 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9135 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9136 ;;Total ram usage:        2 bytes
  9137 ;; Hardware stack levels used:    1
  9138 ;; Hardware stack levels required when called:    4
  9139 ;; This function calls:
  9140 ;;		Nothing
  9141 ;; This function is called by:
  9142 ;;		_EUSART1_Initialize
  9143 ;; This function uses a non-reentrant model
  9144 ;;
  9145                           
  9146                           
  9147                           ;psect for function _EUSART1_SetTxInterruptHandler
  9148  0BC3                     _EUSART1_SetTxInterruptHandler:	
  9149                           
  9150                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  9151                           
  9152                           ;incstack = 0
  9153                           ; Regs used in _EUSART1_SetTxInterruptHandler: [wreg]
  9154  0BC3  0821               	movf	EUSART1_SetTxInterruptHandler@interruptHandler+1,w
  9155  0BC4  00ED               	movwf	_EUSART1_TxDefaultInterruptHandler+1
  9156  0BC5  0820               	movf	EUSART1_SetTxInterruptHandler@interruptHandler,w
  9157  0BC6  00EC               	movwf	_EUSART1_TxDefaultInterruptHandler
  9158  0BC7  0008               	return
  9159  0BC8                     __end_of_EUSART1_SetTxInterruptHandler:	
  9160                           
  9161                           	psect	text9
  9162  0BBE                     __ptext9:	
  9163 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  9164 ;; Defined at:
  9165 ;;		line 280 in file "mcc_generated_files/eusart1.c"
  9166 ;; Parameters:    Size  Location     Type
  9167 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9168 ;;		 -> EUSART1_Receive_ISR(1), 
  9169 ;; Auto vars:     Size  Location     Type
  9170 ;;		None
  9171 ;; Return value:  Size  Location     Type
  9172 ;;                  1    wreg      void 
  9173 ;; Registers used:
  9174 ;;		wreg
  9175 ;; Tracked objects:
  9176 ;;		On entry : 3F/0
  9177 ;;		On exit  : 3F/0
  9178 ;;		Unchanged: 0/0
  9179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9180 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9183 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9184 ;;Total ram usage:        2 bytes
  9185 ;; Hardware stack levels used:    1
  9186 ;; Hardware stack levels required when called:    4
  9187 ;; This function calls:
  9188 ;;		Nothing
  9189 ;; This function is called by:
  9190 ;;		_EUSART1_Initialize
  9191 ;; This function uses a non-reentrant model
  9192 ;;
  9193                           
  9194                           
  9195                           ;psect for function _EUSART1_SetRxInterruptHandler
  9196  0BBE                     _EUSART1_SetRxInterruptHandler:	
  9197                           
  9198                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  9199                           
  9200                           ;incstack = 0
  9201                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
  9202  0BBE  0821               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
  9203  0BBF  00EB               	movwf	_EUSART1_RxDefaultInterruptHandler+1
  9204  0BC0  0820               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
  9205  0BC1  00EA               	movwf	_EUSART1_RxDefaultInterruptHandler
  9206  0BC2  0008               	return
  9207  0BC3                     __end_of_EUSART1_SetRxInterruptHandler:	
  9208                           
  9209                           	psect	text10
  9210  0BEC                     __ptext10:	
  9211 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  9212 ;; Defined at:
  9213 ;;		line 268 in file "mcc_generated_files/eusart1.c"
  9214 ;; Parameters:    Size  Location     Type
  9215 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9216 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  9217 ;; Auto vars:     Size  Location     Type
  9218 ;;		None
  9219 ;; Return value:  Size  Location     Type
  9220 ;;                  1    wreg      void 
  9221 ;; Registers used:
  9222 ;;		wreg
  9223 ;; Tracked objects:
  9224 ;;		On entry : 3F/0
  9225 ;;		On exit  : 3F/1
  9226 ;;		Unchanged: 0/0
  9227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9228 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9231 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9232 ;;Total ram usage:        2 bytes
  9233 ;; Hardware stack levels used:    1
  9234 ;; Hardware stack levels required when called:    4
  9235 ;; This function calls:
  9236 ;;		Nothing
  9237 ;; This function is called by:
  9238 ;;		_EUSART1_Initialize
  9239 ;; This function uses a non-reentrant model
  9240 ;;
  9241                           
  9242                           
  9243                           ;psect for function _EUSART1_SetOverrunErrorHandler
  9244  0BEC                     _EUSART1_SetOverrunErrorHandler:	
  9245                           
  9246                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
  9247                           
  9248                           ;incstack = 0
  9249                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
  9250  0BEC  0821               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
  9251  0BED  0141               	movlb	1	; select bank1
  9252  0BEE  00AB               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+128)
  9253  0BEF  0140               	movlb	0	; select bank0
  9254  0BF0  0820               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
  9255  0BF1  0141               	movlb	1	; select bank1
  9256  0BF2  00AA               	movwf	_EUSART1_OverrunErrorHandler^(0+128)
  9257  0BF3  0008               	return
  9258  0BF4                     __end_of_EUSART1_SetOverrunErrorHandler:	
  9259                           
  9260                           	psect	text11
  9261  0BE4                     __ptext11:	
  9262 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  9263 ;; Defined at:
  9264 ;;		line 264 in file "mcc_generated_files/eusart1.c"
  9265 ;; Parameters:    Size  Location     Type
  9266 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9267 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  9268 ;; Auto vars:     Size  Location     Type
  9269 ;;		None
  9270 ;; Return value:  Size  Location     Type
  9271 ;;                  1    wreg      void 
  9272 ;; Registers used:
  9273 ;;		wreg
  9274 ;; Tracked objects:
  9275 ;;		On entry : 3F/0
  9276 ;;		On exit  : 3F/1
  9277 ;;		Unchanged: 0/0
  9278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9279 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9282 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9283 ;;Total ram usage:        2 bytes
  9284 ;; Hardware stack levels used:    1
  9285 ;; Hardware stack levels required when called:    4
  9286 ;; This function calls:
  9287 ;;		Nothing
  9288 ;; This function is called by:
  9289 ;;		_EUSART1_Initialize
  9290 ;; This function uses a non-reentrant model
  9291 ;;
  9292                           
  9293                           
  9294                           ;psect for function _EUSART1_SetFramingErrorHandler
  9295  0BE4                     _EUSART1_SetFramingErrorHandler:	
  9296                           
  9297                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
  9298                           
  9299                           ;incstack = 0
  9300                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
  9301  0BE4  0821               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
  9302  0BE5  0141               	movlb	1	; select bank1
  9303  0BE6  00AD               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+128)
  9304  0BE7  0140               	movlb	0	; select bank0
  9305  0BE8  0820               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
  9306  0BE9  0141               	movlb	1	; select bank1
  9307  0BEA  00AC               	movwf	_EUSART1_FramingErrorHandler^(0+128)
  9308  0BEB  0008               	return
  9309  0BEC                     __end_of_EUSART1_SetFramingErrorHandler:	
  9310                           
  9311                           	psect	text12
  9312  0BDC                     __ptext12:	
  9313 ;; *************** function _EUSART1_SetErrorHandler *****************
  9314 ;; Defined at:
  9315 ;;		line 272 in file "mcc_generated_files/eusart1.c"
  9316 ;; Parameters:    Size  Location     Type
  9317 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9318 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  9319 ;; Auto vars:     Size  Location     Type
  9320 ;;		None
  9321 ;; Return value:  Size  Location     Type
  9322 ;;                  1    wreg      void 
  9323 ;; Registers used:
  9324 ;;		wreg
  9325 ;; Tracked objects:
  9326 ;;		On entry : 3F/0
  9327 ;;		On exit  : 3F/1
  9328 ;;		Unchanged: 0/0
  9329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9330 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9333 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9334 ;;Total ram usage:        2 bytes
  9335 ;; Hardware stack levels used:    1
  9336 ;; Hardware stack levels required when called:    4
  9337 ;; This function calls:
  9338 ;;		Nothing
  9339 ;; This function is called by:
  9340 ;;		_EUSART1_Initialize
  9341 ;; This function uses a non-reentrant model
  9342 ;;
  9343                           
  9344                           
  9345                           ;psect for function _EUSART1_SetErrorHandler
  9346  0BDC                     _EUSART1_SetErrorHandler:	
  9347                           
  9348                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
  9349                           
  9350                           ;incstack = 0
  9351                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
  9352  0BDC  0821               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
  9353  0BDD  0141               	movlb	1	; select bank1
  9354  0BDE  00A9               	movwf	(_EUSART1_ErrorHandler+1)^(0+128)
  9355  0BDF  0140               	movlb	0	; select bank0
  9356  0BE0  0820               	movf	EUSART1_SetErrorHandler@interruptHandler,w
  9357  0BE1  0141               	movlb	1	; select bank1
  9358  0BE2  00A8               	movwf	_EUSART1_ErrorHandler^(0+128)
  9359  0BE3  0008               	return
  9360  0BE4                     __end_of_EUSART1_SetErrorHandler:	
  9361                           
  9362                           	psect	text13
  9363  0BAC                     __ptext13:	
  9364 ;; *************** function _DAC1_Initialize *****************
  9365 ;; Defined at:
  9366 ;;		line 58 in file "mcc_generated_files/dac1.c"
  9367 ;; Parameters:    Size  Location     Type
  9368 ;;		None
  9369 ;; Auto vars:     Size  Location     Type
  9370 ;;		None
  9371 ;; Return value:  Size  Location     Type
  9372 ;;                  1    wreg      void 
  9373 ;; Registers used:
  9374 ;;		wreg, status,2
  9375 ;; Tracked objects:
  9376 ;;		On entry : B3F/12
  9377 ;;		On exit  : B3F/12
  9378 ;;		Unchanged: B00/0
  9379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9384 ;;Total ram usage:        0 bytes
  9385 ;; Hardware stack levels used:    1
  9386 ;; Hardware stack levels required when called:    4
  9387 ;; This function calls:
  9388 ;;		Nothing
  9389 ;; This function is called by:
  9390 ;;		_SYSTEM_Initialize
  9391 ;; This function uses a non-reentrant model
  9392 ;;
  9393                           
  9394                           
  9395                           ;psect for function _DAC1_Initialize
  9396  0BAC                     _DAC1_Initialize:	
  9397                           
  9398                           ;mcc_generated_files/dac1.c: 61:     DAC1CON0 = 0xA8;
  9399                           
  9400                           ;incstack = 0
  9401                           ; Regs used in _DAC1_Initialize: [wreg+status,2]
  9402  0BAC  30A8               	movlw	168
  9403  0BAD  008E               	movwf	14	;volatile
  9404                           
  9405                           ;mcc_generated_files/dac1.c: 63:     DAC1CON1 = 0x00;
  9406  0BAE  018F               	clrf	15	;volatile
  9407  0BAF  0008               	return
  9408  0BB0                     __end_of_DAC1_Initialize:	
  9409                           
  9410                           	psect	text14
  9411  0716                     __ptext14:	
  9412 ;; *************** function _NEMS_message_handler *****************
  9413 ;; Defined at:
  9414 ;;		line 81 in file "NEMS.c"
  9415 ;; Parameters:    Size  Location     Type
  9416 ;;		None
  9417 ;; Auto vars:     Size  Location     Type
  9418 ;;  header          1   37[BANK0 ] unsigned char 
  9419 ;; Return value:  Size  Location     Type
  9420 ;;                  1    wreg      void 
  9421 ;; Registers used:
  9422 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9423 ;; Tracked objects:
  9424 ;;		On entry : 0/0
  9425 ;;		On exit  : 3F/0
  9426 ;;		Unchanged: 0/0
  9427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9429 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9430 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9431 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9432 ;;Total ram usage:        3 bytes
  9433 ;; Hardware stack levels used:    1
  9434 ;; Hardware stack levels required when called:    8
  9435 ;; This function calls:
  9436 ;;		_EUSART1_Read
  9437 ;;		_NEMS_get_program
  9438 ;;		_NEMS_load_program
  9439 ;;		_NEMS_save_program
  9440 ;;		_NEMS_set_OFF_time
  9441 ;;		_NEMS_set_ON_time
  9442 ;;		_NEMS_set_amplitude
  9443 ;;		_NEMS_set_channel1
  9444 ;;		_NEMS_set_channel2
  9445 ;;		_NEMS_set_contractions
  9446 ;;		_NEMS_set_frequency
  9447 ;;		_NEMS_set_phase_duration
  9448 ;;		_NEMS_set_ramp_down
  9449 ;;		_NEMS_set_ramp_up
  9450 ;;		_NEMS_set_symmetry_factor
  9451 ;;		_NEMS_start_program
  9452 ;;		_NEMS_stop_program
  9453 ;;		__puts
  9454 ;; This function is called by:
  9455 ;;		_main
  9456 ;; This function uses a non-reentrant model
  9457 ;;
  9458                           
  9459                           
  9460                           ;psect for function _NEMS_message_handler
  9461  0716                     _NEMS_message_handler:	
  9462                           
  9463                           ;NEMS.c: 83:     unsigned char header;;NEMS.c: 85:     header = EUSART1_Read();
  9464                           
  9465                           ;incstack = 0
  9466                           ; Regs used in _NEMS_message_handler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9467  0716  318E  265D  3187   	fcall	_EUSART1_Read
  9468  0719  00C3               	movwf	??_NEMS_message_handler
  9469  071A  0843               	movf	??_NEMS_message_handler,w
  9470  071B  00C5               	movwf	NEMS_message_handler@header
  9471                           
  9472                           ;NEMS.c: 87:     switch (header) {
  9473  071C  2F54               	goto	l3915
  9474  071D                     l3879:	
  9475                           
  9476                           ;NEMS.c: 89:             _puts("Ok ");
  9477  071D  30AB               	movlw	low (STR_1| (0+32768))
  9478  071E  00A2               	movwf	__puts@pt
  9479  071F  3091               	movlw	high (STR_1| (0+32768))
  9480  0720  00A3               	movwf	__puts@pt+1
  9481  0721  318E  2681         	fcall	__puts
  9482                           
  9483                           ;NEMS.c: 90:             break;
  9484  0723  0008               	return
  9485  0724                     l3881:	
  9486                           
  9487                           ;NEMS.c: 93:             NEMS_set_amplitude();
  9488  0724  318C  24B4         	fcall	_NEMS_set_amplitude
  9489                           
  9490                           ;NEMS.c: 94:             break;
  9491  0726  0008               	return
  9492  0727                     l3883:	
  9493                           
  9494                           ;NEMS.c: 97:             NEMS_set_frequency();
  9495  0727  318D  2510         	fcall	_NEMS_set_frequency
  9496                           
  9497                           ;NEMS.c: 98:             break;
  9498  0729  0008               	return
  9499  072A                     l3885:	
  9500                           
  9501                           ;NEMS.c: 101:             NEMS_set_phase_duration();
  9502  072A  318D  2527         	fcall	_NEMS_set_phase_duration
  9503                           
  9504                           ;NEMS.c: 102:             break;
  9505  072C  0008               	return
  9506  072D                     l3887:	
  9507                           
  9508                           ;NEMS.c: 105:             NEMS_set_symmetry_factor();
  9509  072D  318D  256C         	fcall	_NEMS_set_symmetry_factor
  9510                           
  9511                           ;NEMS.c: 106:             break;
  9512  072F  0008               	return
  9513  0730                     l3889:	
  9514                           
  9515                           ;NEMS.c: 109:             NEMS_set_ON_time();
  9516  0730  318C  249D         	fcall	_NEMS_set_ON_time
  9517                           
  9518                           ;NEMS.c: 110:             break;
  9519  0732  0008               	return
  9520  0733                     l3891:	
  9521                           
  9522                           ;NEMS.c: 113:             NEMS_set_OFF_time();
  9523  0733  318C  2486         	fcall	_NEMS_set_OFF_time
  9524                           
  9525                           ;NEMS.c: 114:             break;
  9526  0735  0008               	return
  9527  0736                     l3893:	
  9528                           
  9529                           ;NEMS.c: 117:             NEMS_set_contractions();
  9530  0736  318C  24F9         	fcall	_NEMS_set_contractions
  9531                           
  9532                           ;NEMS.c: 118:             break;
  9533  0738  0008               	return
  9534  0739                     l3895:	
  9535                           
  9536                           ;NEMS.c: 121:             NEMS_set_ramp_up();
  9537  0739  318D  2555         	fcall	_NEMS_set_ramp_up
  9538                           
  9539                           ;NEMS.c: 122:             break;
  9540  073B  0008               	return
  9541  073C                     l3897:	
  9542                           
  9543                           ;NEMS.c: 125:             NEMS_set_ramp_down();
  9544  073C  318D  253E         	fcall	_NEMS_set_ramp_down
  9545                           
  9546                           ;NEMS.c: 126:             break;
  9547  073E  0008               	return
  9548  073F                     l3899:	
  9549                           
  9550                           ;NEMS.c: 129:             NEMS_get_program();
  9551  073F  3183  2376         	fcall	_NEMS_get_program
  9552                           
  9553                           ;NEMS.c: 130:             break;
  9554  0741  0008               	return
  9555  0742                     l3901:	
  9556                           
  9557                           ;NEMS.c: 133:             NEMS_save_program();
  9558  0742  3186  2600         	fcall	_NEMS_save_program
  9559                           
  9560                           ;NEMS.c: 134:             break;
  9561  0744  0008               	return
  9562  0745                     l3903:	
  9563                           
  9564                           ;NEMS.c: 137:             NEMS_load_program();
  9565  0745  3186  268C         	fcall	_NEMS_load_program
  9566                           
  9567                           ;NEMS.c: 138:             break;
  9568  0747  0008               	return
  9569  0748                     l3905:	
  9570                           
  9571                           ;NEMS.c: 141:             NEMS_start_program();
  9572  0748  318D  25BA         	fcall	_NEMS_start_program
  9573                           
  9574                           ;NEMS.c: 142:             break;
  9575  074A  0008               	return
  9576  074B                     l3907:	
  9577                           
  9578                           ;NEMS.c: 145:             NEMS_stop_program();
  9579  074B  318C  2436         	fcall	_NEMS_stop_program
  9580                           
  9581                           ;NEMS.c: 146:             break;
  9582  074D  0008               	return
  9583  074E                     l3909:	
  9584                           
  9585                           ;NEMS.c: 149:             NEMS_set_channel1();
  9586  074E  318C  24CB         	fcall	_NEMS_set_channel1
  9587                           
  9588                           ;NEMS.c: 150:             break;
  9589  0750  0008               	return
  9590  0751                     l3911:	
  9591                           
  9592                           ;NEMS.c: 153:             NEMS_set_channel2();
  9593  0751  318C  24E2         	fcall	_NEMS_set_channel2
  9594                           
  9595                           ;NEMS.c: 154:             break;
  9596  0753  0008               	return
  9597  0754                     l3915:	
  9598  0754  0845               	movf	NEMS_message_handler@header,w
  9599  0755  00C3               	movwf	??_NEMS_message_handler
  9600  0756  01C4               	clrf	??_NEMS_message_handler+1
  9601                           
  9602                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9603                           ; Switch size 1, requested type "simple"
  9604                           ; Number of cases is 1, Range of values is 0 to 0
  9605                           ; switch strategies available:
  9606                           ; Name         Instructions Cycles
  9607                           ; simple_byte            4     3 (average)
  9608                           ; direct_byte            8     6 (fixed)
  9609                           ; jumptable            260     6 (fixed)
  9610                           ;	Chosen strategy is simple_byte
  9611  0757  0844               	movf	??_NEMS_message_handler+1,w
  9612  0758  3A00               	xorlw	0	; case 0
  9613  0759  1903               	skipnz
  9614  075A  2F5C               	goto	l3977
  9615  075B  2F91               	goto	l488
  9616  075C                     l3977:	
  9617                           
  9618                           ; Switch size 1, requested type "simple"
  9619                           ; Number of cases is 17, Range of values is 77 to 116
  9620                           ; switch strategies available:
  9621                           ; Name         Instructions Cycles
  9622                           ; simple_byte           52    27 (average)
  9623                           ; direct_byte           89     9 (fixed)
  9624                           ; jumptable            263     9 (fixed)
  9625                           ;	Chosen strategy is simple_byte
  9626  075C  0843               	movf	??_NEMS_message_handler,w
  9627  075D  3A4D               	xorlw	77	; case 77
  9628  075E  1903               	skipnz
  9629  075F  2F4E               	goto	l3909
  9630  0760  3A03               	xorlw	3	; case 78
  9631  0761  1903               	skipnz
  9632  0762  2F4B               	goto	l3907
  9633  0763  3A01               	xorlw	1	; case 79
  9634  0764  1903               	skipnz
  9635  0765  2F33               	goto	l3891
  9636  0766  3A1D               	xorlw	29	; case 82
  9637  0767  1903               	skipnz
  9638  0768  2F3C               	goto	l3897
  9639  0769  3A33               	xorlw	51	; case 97
  9640  076A  1903               	skipnz
  9641  076B  2F24               	goto	l3881
  9642  076C  3A02               	xorlw	2	; case 99
  9643  076D  1903               	skipnz
  9644  076E  2F36               	goto	l3893
  9645  076F  3A07               	xorlw	7	; case 100
  9646  0770  1903               	skipnz
  9647  0771  2F2A               	goto	l3885
  9648  0772  3A02               	xorlw	2	; case 102
  9649  0773  1903               	skipnz
  9650  0774  2F27               	goto	l3883
  9651  0775  3A0D               	xorlw	13	; case 107
  9652  0776  1903               	skipnz
  9653  0777  2F2D               	goto	l3887
  9654  0778  3A07               	xorlw	7	; case 108
  9655  0779  1903               	skipnz
  9656  077A  2F45               	goto	l3903
  9657  077B  3A01               	xorlw	1	; case 109
  9658  077C  1903               	skipnz
  9659  077D  2F51               	goto	l3911
  9660  077E  3A03               	xorlw	3	; case 110
  9661  077F  1903               	skipnz
  9662  0780  2F48               	goto	l3905
  9663  0781  3A01               	xorlw	1	; case 111
  9664  0782  1903               	skipnz
  9665  0783  2F30               	goto	l3889
  9666  0784  3A1F               	xorlw	31	; case 112
  9667  0785  1903               	skipnz
  9668  0786  2F3F               	goto	l3899
  9669  0787  3A02               	xorlw	2	; case 114
  9670  0788  1903               	skipnz
  9671  0789  2F39               	goto	l3895
  9672  078A  3A01               	xorlw	1	; case 115
  9673  078B  1903               	skipnz
  9674  078C  2F42               	goto	l3901
  9675  078D  3A07               	xorlw	7	; case 116
  9676  078E  1903               	skipnz
  9677  078F  2F1D               	goto	l3879
  9678  0790  2F91               	goto	l488
  9679  0791                     l488:	
  9680  0791  0008               	return
  9681  0792                     __end_of_NEMS_message_handler:	
  9682                           
  9683                           	psect	text15
  9684  0C36                     __ptext15:	
  9685 ;; *************** function _NEMS_stop_program *****************
  9686 ;; Defined at:
  9687 ;;		line 560 in file "NEMS.c"
  9688 ;; Parameters:    Size  Location     Type
  9689 ;;		None
  9690 ;; Auto vars:     Size  Location     Type
  9691 ;;		None
  9692 ;; Return value:  Size  Location     Type
  9693 ;;                  1    wreg      void 
  9694 ;; Registers used:
  9695 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9696 ;; Tracked objects:
  9697 ;;		On entry : 0/0
  9698 ;;		On exit  : 3F/0
  9699 ;;		Unchanged: 0/0
  9700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9705 ;;Total ram usage:        0 bytes
  9706 ;; Hardware stack levels used:    1
  9707 ;; Hardware stack levels required when called:    6
  9708 ;; This function calls:
  9709 ;;		_DAC1_SetOutput
  9710 ;;		_TMR0_StopTimer
  9711 ;;		__puts
  9712 ;; This function is called by:
  9713 ;;		_NEMS_message_handler
  9714 ;; This function uses a non-reentrant model
  9715 ;;
  9716                           
  9717                           
  9718                           ;psect for function _NEMS_stop_program
  9719  0C36                     _NEMS_stop_program:	
  9720                           
  9721                           ;NEMS.c: 562:     NEMS_states = NEMS_DISABLED;
  9722                           
  9723                           ;incstack = 0
  9724                           ; Regs used in _NEMS_stop_program: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9725  0C36  0140               	movlb	0	; select bank0
  9726  0C37  01D9               	clrf	_NEMS_states	;volatile
  9727                           
  9728                           ;NEMS.c: 563:     TMR0_StopTimer();
  9729  0C38  318B  23A2  318C   	fcall	_TMR0_StopTimer
  9730                           
  9731                           ;NEMS.c: 564:     DAC1_SetOutput(0);
  9732  0C3B  3000               	movlw	0
  9733  0C3C  318B  23C8  318C   	fcall	_DAC1_SetOutput
  9734                           
  9735                           ;NEMS.c: 566:     _puts("N-ok ");
  9736  0C3F  3057               	movlw	low (STR_51| (0+32768))
  9737  0C40  0140               	movlb	0	; select bank0
  9738  0C41  00A2               	movwf	__puts@pt
  9739  0C42  3091               	movlw	high (STR_51| (0+32768))
  9740  0C43  00A3               	movwf	__puts@pt+1
  9741  0C44  318E  2681         	fcall	__puts
  9742  0C46  0008               	return
  9743  0C47                     __end_of_NEMS_stop_program:	
  9744                           
  9745                           	psect	text16
  9746  0DBA                     __ptext16:	
  9747 ;; *************** function _NEMS_start_program *****************
  9748 ;; Defined at:
  9749 ;;		line 542 in file "NEMS.c"
  9750 ;; Parameters:    Size  Location     Type
  9751 ;;		None
  9752 ;; Auto vars:     Size  Location     Type
  9753 ;;		None
  9754 ;; Return value:  Size  Location     Type
  9755 ;;                  1    wreg      void 
  9756 ;; Registers used:
  9757 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9758 ;; Tracked objects:
  9759 ;;		On entry : 0/0
  9760 ;;		On exit  : 3F/0
  9761 ;;		Unchanged: 0/0
  9762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9765 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9766 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9767 ;;Total ram usage:        1 bytes
  9768 ;; Hardware stack levels used:    1
  9769 ;; Hardware stack levels required when called:    7
  9770 ;; This function calls:
  9771 ;;		_NEMS_recalculate_program
  9772 ;;		_TMR0_StartTimer
  9773 ;;		__puts
  9774 ;; This function is called by:
  9775 ;;		_NEMS_message_handler
  9776 ;; This function uses a non-reentrant model
  9777 ;;
  9778                           
  9779                           
  9780                           ;psect for function _NEMS_start_program
  9781  0DBA                     _NEMS_start_program:	
  9782                           
  9783                           ;NEMS.c: 546:     if (program.channel1 == program.channel2) {
  9784                           
  9785                           ;incstack = 0
  9786                           ; Regs used in _NEMS_start_program: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9787  0DBA  0140               	movlb	0	; select bank0
  9788  0DBB  0864               	movf	_program+9,w	;volatile
  9789  0DBC  0665               	xorwf	_program+10,w	;volatile
  9790  0DBD  1D03               	skipz
  9791  0DBE  2DC6               	goto	l3795
  9792                           
  9793                           ;NEMS.c: 547:         _puts("Error: channel1 = channel2\n");
  9794  0DBF  3000               	movlw	low (STR_49| (0+32768))
  9795  0DC0  00A2               	movwf	__puts@pt
  9796  0DC1  3090               	movlw	high (STR_49| (0+32768))
  9797  0DC2  00A3               	movwf	__puts@pt+1
  9798  0DC3  318E  2681         	fcall	__puts
  9799  0DC5  0008               	return
  9800  0DC6                     l3795:	
  9801                           
  9802                           ;NEMS.c: 552:     NEMS_recalculate_program();
  9803  0DC6  3182  220D  318D   	fcall	_NEMS_recalculate_program
  9804                           
  9805                           ;NEMS.c: 554:     NEMS_states = NEMS_ENABLED;
  9806  0DC9  3001               	movlw	1
  9807  0DCA  00C2               	movwf	??_NEMS_start_program
  9808  0DCB  0842               	movf	??_NEMS_start_program,w
  9809  0DCC  00D9               	movwf	_NEMS_states	;volatile
  9810                           
  9811                           ;NEMS.c: 555:     TMR0_StartTimer();
  9812  0DCD  318B  23A5  318D   	fcall	_TMR0_StartTimer
  9813                           
  9814                           ;NEMS.c: 557:     _puts("n-ok ");
  9815  0DD0  3093               	movlw	low (STR_50| (0+32768))
  9816  0DD1  0140               	movlb	0	; select bank0
  9817  0DD2  00A2               	movwf	__puts@pt
  9818  0DD3  3091               	movlw	high (STR_50| (0+32768))
  9819  0DD4  00A3               	movwf	__puts@pt+1
  9820  0DD5  318E  2681         	fcall	__puts
  9821  0DD7  0008               	return
  9822  0DD8                     __end_of_NEMS_start_program:	
  9823                           
  9824                           	psect	text17
  9825  0BA5                     __ptext17:	
  9826 ;; *************** function _TMR0_StartTimer *****************
  9827 ;; Defined at:
  9828 ;;		line 95 in file "mcc_generated_files/tmr0.c"
  9829 ;; Parameters:    Size  Location     Type
  9830 ;;		None
  9831 ;; Auto vars:     Size  Location     Type
  9832 ;;		None
  9833 ;; Return value:  Size  Location     Type
  9834 ;;                  1    wreg      void 
  9835 ;; Registers used:
  9836 ;;		None
  9837 ;; Tracked objects:
  9838 ;;		On entry : 3F/0
  9839 ;;		On exit  : 3F/B
  9840 ;;		Unchanged: 0/0
  9841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9846 ;;Total ram usage:        0 bytes
  9847 ;; Hardware stack levels used:    1
  9848 ;; Hardware stack levels required when called:    4
  9849 ;; This function calls:
  9850 ;;		Nothing
  9851 ;; This function is called by:
  9852 ;;		_NEMS_start_program
  9853 ;; This function uses a non-reentrant model
  9854 ;;
  9855                           
  9856                           
  9857                           ;psect for function _TMR0_StartTimer
  9858  0BA5                     _TMR0_StartTimer:	
  9859                           
  9860                           ;mcc_generated_files/tmr0.c: 98:     T0CON0bits.T0EN = 1;
  9861                           
  9862                           ;incstack = 0
  9863                           ; Regs used in _TMR0_StartTimer: []
  9864  0BA5  014B               	movlb	11	; select bank11
  9865  0BA6  179E               	bsf	30,7	;volatile
  9866  0BA7  0008               	return
  9867  0BA8                     __end_of_TMR0_StartTimer:	
  9868                           
  9869                           	psect	text18
  9870  020D                     __ptext18:	
  9871 ;; *************** function _NEMS_recalculate_program *****************
  9872 ;; Defined at:
  9873 ;;		line 402 in file "NEMS.c"
  9874 ;; Parameters:    Size  Location     Type
  9875 ;;		None
  9876 ;; Auto vars:     Size  Location     Type
  9877 ;;		None
  9878 ;; Return value:  Size  Location     Type
  9879 ;;                  1    wreg      void 
  9880 ;; Registers used:
  9881 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9882 ;; Tracked objects:
  9883 ;;		On entry : 3F/0
  9884 ;;		On exit  : 3F/0
  9885 ;;		Unchanged: 0/0
  9886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9889 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9890 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9891 ;;Total ram usage:        6 bytes
  9892 ;; Hardware stack levels used:    1
  9893 ;; Hardware stack levels required when called:    6
  9894 ;; This function calls:
  9895 ;;		_NEMS_calculate_ramp
  9896 ;;		___awdiv
  9897 ;;		___bmul
  9898 ;;		___lwdiv
  9899 ;;		___wmul
  9900 ;; This function is called by:
  9901 ;;		_NEMS_start_program
  9902 ;; This function uses a non-reentrant model
  9903 ;;
  9904                           
  9905                           
  9906                           ;psect for function _NEMS_recalculate_program
  9907  020D                     _NEMS_recalculate_program:	
  9908                           
  9909                           ;NEMS.c: 404:     waveform.num_clocks_per_pulse = (unsigned short)20000/program.frequenc
      +                          y;
  9910                           
  9911                           ;incstack = 0
  9912                           ; Regs used in _NEMS_recalculate_program: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9913  020D  085C               	movf	_program+1,w	;volatile
  9914  020E  00BC               	movwf	??_NEMS_recalculate_program
  9915  020F  01BD               	clrf	??_NEMS_recalculate_program+1
  9916  0210  083C               	movf	??_NEMS_recalculate_program,w
  9917  0211  00A6               	movwf	___lwdiv@divisor
  9918  0212  083D               	movf	??_NEMS_recalculate_program+1,w
  9919  0213  00A7               	movwf	___lwdiv@divisor+1
  9920  0214  3020               	movlw	32
  9921  0215  00A8               	movwf	___lwdiv@dividend
  9922  0216  304E               	movlw	78
  9923  0217  00A9               	movwf	___lwdiv@dividend+1
  9924  0218  318F  270B  3182   	fcall	___lwdiv
  9925  021B  300A               	movlw	10
  9926  021C  0086               	movwf	6
  9927  021D  3027               	movlw	39
  9928  021E  0087               	movwf	7
  9929  021F  0826               	movf	?___lwdiv,w
  9930  0220  3FC0               	movwi [0]fsr1
  9931  0221  0827               	movf	?___lwdiv+1,w
  9932  0222  3FC1               	movwi [1]fsr1
  9933                           
  9934                           ;NEMS.c: 405:     waveform.clock_index = 0;
  9935  0223  300A               	movlw	10
  9936  0224  0086               	movwf	6
  9937  0225  3027               	movlw	39
  9938  0226  0087               	movwf	7
  9939  0227  3142               	addfsr 1,2
  9940  0228  3000               	movlw	0
  9941  0229  3FC0               	movwi [0]fsr1
  9942  022A  3FC1               	movwi [1]fsr1
  9943                           
  9944                           ;NEMS.c: 406:     waveform.pulse_index = 0;
  9945  022B  300A               	movlw	10
  9946  022C  0086               	movwf	6
  9947  022D  3027               	movlw	39
  9948  022E  0087               	movwf	7
  9949  022F  3144               	addfsr 1,4
  9950  0230  3000               	movlw	0
  9951  0231  3FC0               	movwi [0]fsr1
  9952  0232  3FC1               	movwi [1]fsr1
  9953                           
  9954                           ;NEMS.c: 408:     waveform.ramp_up_pulses = (program.ramp_up*program.frequency)/10;
  9955  0233  300A               	movlw	10
  9956  0234  00A6               	movwf	___awdiv@divisor
  9957  0235  3000               	movlw	0
  9958  0236  00A7               	movwf	___awdiv@divisor+1
  9959  0237  0862               	movf	_program+7,w	;volatile
  9960  0238  00BC               	movwf	??_NEMS_recalculate_program
  9961  0239  01BD               	clrf	??_NEMS_recalculate_program+1
  9962  023A  083C               	movf	??_NEMS_recalculate_program,w
  9963  023B  00A0               	movwf	___wmul@multiplier
  9964  023C  083D               	movf	??_NEMS_recalculate_program+1,w
  9965  023D  00A1               	movwf	___wmul@multiplier+1
  9966  023E  085C               	movf	_program+1,w	;volatile
  9967  023F  00BE               	movwf	??_NEMS_recalculate_program+2
  9968  0240  01BF               	clrf	??_NEMS_recalculate_program+3
  9969  0241  083E               	movf	??_NEMS_recalculate_program+2,w
  9970  0242  00A2               	movwf	___wmul@multiplicand
  9971  0243  083F               	movf	??_NEMS_recalculate_program+3,w
  9972  0244  00A3               	movwf	___wmul@multiplicand+1
  9973  0245  318D  2583  3182   	fcall	___wmul
  9974  0248  0821               	movf	?___wmul+1,w
  9975  0249  00A9               	movwf	___awdiv@dividend+1
  9976  024A  0820               	movf	?___wmul,w
  9977  024B  00A8               	movwf	___awdiv@dividend
  9978  024C  3187  2792  3182   	fcall	___awdiv
  9979  024F  3080               	movlw	128
  9980  0250  0086               	movwf	6
  9981  0251  3027               	movlw	39
  9982  0252  0087               	movwf	7
  9983  0253  0826               	movf	?___awdiv,w
  9984  0254  3FC0               	movwi [0]fsr1
  9985  0255  0827               	movf	?___awdiv+1,w
  9986  0256  3FC1               	movwi [1]fsr1
  9987                           
  9988                           ;NEMS.c: 409:     waveform.ramp_down_pulses = (program.ramp_down*program.frequency)/10;
  9989  0257  300A               	movlw	10
  9990  0258  00A6               	movwf	___awdiv@divisor
  9991  0259  3000               	movlw	0
  9992  025A  00A7               	movwf	___awdiv@divisor+1
  9993  025B  0863               	movf	_program+8,w	;volatile
  9994  025C  00BC               	movwf	??_NEMS_recalculate_program
  9995  025D  01BD               	clrf	??_NEMS_recalculate_program+1
  9996  025E  083C               	movf	??_NEMS_recalculate_program,w
  9997  025F  00A0               	movwf	___wmul@multiplier
  9998  0260  083D               	movf	??_NEMS_recalculate_program+1,w
  9999  0261  00A1               	movwf	___wmul@multiplier+1
 10000  0262  085C               	movf	_program+1,w	;volatile
 10001  0263  00BE               	movwf	??_NEMS_recalculate_program+2
 10002  0264  01BF               	clrf	??_NEMS_recalculate_program+3
 10003  0265  083E               	movf	??_NEMS_recalculate_program+2,w
 10004  0266  00A2               	movwf	___wmul@multiplicand
 10005  0267  083F               	movf	??_NEMS_recalculate_program+3,w
 10006  0268  00A3               	movwf	___wmul@multiplicand+1
 10007  0269  318D  2583  3182   	fcall	___wmul
 10008  026C  0821               	movf	?___wmul+1,w
 10009  026D  00A9               	movwf	___awdiv@dividend+1
 10010  026E  0820               	movf	?___wmul,w
 10011  026F  00A8               	movwf	___awdiv@dividend
 10012  0270  3187  2792  3182   	fcall	___awdiv
 10013  0273  30E8               	movlw	232
 10014  0274  0086               	movwf	6
 10015  0275  3027               	movlw	39
 10016  0276  0087               	movwf	7
 10017  0277  0826               	movf	?___awdiv,w
 10018  0278  3FC0               	movwi [0]fsr1
 10019  0279  0827               	movf	?___awdiv+1,w
 10020  027A  3FC1               	movwi [1]fsr1
 10021                           
 10022                           ;NEMS.c: 411:     waveform.ramp_up_time = waveform.ramp_up_pulses;
 10023  027B  3080               	movlw	128
 10024  027C  0086               	movwf	6
 10025  027D  3027               	movlw	39
 10026  027E  0087               	movwf	7
 10027  027F  3082               	movlw	130
 10028  0280  0084               	movwf	4
 10029  0281  3027               	movlw	39
 10030  0282  0085               	movwf	5
 10031  0283  3F40               	moviw [0]fsr1
 10032  0284  3F80               	movwi [0]fsr0
 10033  0285  3F41               	moviw [1]fsr1
 10034  0286  3F81               	movwi [1]fsr0
 10035                           
 10036                           ;NEMS.c: 413:     waveform.ON_time = program.ON_time*program.frequency + waveform.ramp_u
      +                          p_time;
 10037  0287  3082               	movlw	130
 10038  0288  0086               	movwf	6
 10039  0289  3027               	movlw	39
 10040  028A  0087               	movwf	7
 10041  028B  085F               	movf	_program+4,w	;volatile
 10042  028C  00BC               	movwf	??_NEMS_recalculate_program
 10043  028D  01BD               	clrf	??_NEMS_recalculate_program+1
 10044  028E  083C               	movf	??_NEMS_recalculate_program,w
 10045  028F  00A0               	movwf	___wmul@multiplier
 10046  0290  083D               	movf	??_NEMS_recalculate_program+1,w
 10047  0291  00A1               	movwf	___wmul@multiplier+1
 10048  0292  085C               	movf	_program+1,w	;volatile
 10049  0293  00BE               	movwf	??_NEMS_recalculate_program+2
 10050  0294  01BF               	clrf	??_NEMS_recalculate_program+3
 10051  0295  083E               	movf	??_NEMS_recalculate_program+2,w
 10052  0296  00A2               	movwf	___wmul@multiplicand
 10053  0297  083F               	movf	??_NEMS_recalculate_program+3,w
 10054  0298  00A3               	movwf	___wmul@multiplicand+1
 10055  0299  318D  2583  3182   	fcall	___wmul
 10056  029C  3F40               	moviw [0]fsr1
 10057  029D  0720               	addwf	?___wmul,w
 10058  029E  00C0               	movwf	??_NEMS_recalculate_program+4
 10059  029F  3F41               	moviw [1]fsr1
 10060  02A0  3D21               	addwfc	?___wmul+1,w
 10061  02A1  00C1               	movwf	??_NEMS_recalculate_program+5
 10062  02A2  300A               	movlw	10
 10063  02A3  0086               	movwf	6
 10064  02A4  3027               	movlw	39
 10065  02A5  0087               	movwf	7
 10066  02A6  314A               	addfsr 1,10
 10067  02A7  0840               	movf	??_NEMS_recalculate_program+4,w
 10068  02A8  3FC0               	movwi [0]fsr1
 10069  02A9  0841               	movf	??_NEMS_recalculate_program+5,w
 10070  02AA  3FC1               	movwi [1]fsr1
 10071                           
 10072                           ;NEMS.c: 414:     waveform.ramp_down_time = waveform.ramp_down_pulses + waveform.ON_time
      +                          ;
 10073  02AB  300A               	movlw	10
 10074  02AC  0086               	movwf	6
 10075  02AD  3027               	movlw	39
 10076  02AE  0087               	movwf	7
 10077  02AF  314A               	addfsr 1,10
 10078  02B0  30E8               	movlw	232
 10079  02B1  0084               	movwf	4
 10080  02B2  3027               	movlw	39
 10081  02B3  0085               	movwf	5
 10082  02B4  3F40               	moviw [0]fsr1
 10083  02B5  0700               	addwf	0,w
 10084  02B6  00BC               	movwf	??_NEMS_recalculate_program
 10085  02B7  3101               	addfsr 0,1
 10086  02B8  3F41               	moviw [1]fsr1
 10087  02B9  3D00               	addwfc	0,w
 10088  02BA  00BD               	movwf	??_NEMS_recalculate_program+1
 10089  02BB  30EA               	movlw	234
 10090  02BC  0086               	movwf	6
 10091  02BD  3027               	movlw	39
 10092  02BE  0087               	movwf	7
 10093  02BF  083C               	movf	??_NEMS_recalculate_program,w
 10094  02C0  3FC0               	movwi [0]fsr1
 10095  02C1  083D               	movf	??_NEMS_recalculate_program+1,w
 10096  02C2  3FC1               	movwi [1]fsr1
 10097                           
 10098                           ;NEMS.c: 415:     waveform.OFF_time = program.OFF_time*program.frequency + waveform.ON_t
      +                          ime;
 10099  02C3  300A               	movlw	10
 10100  02C4  0086               	movwf	6
 10101  02C5  3027               	movlw	39
 10102  02C6  0087               	movwf	7
 10103  02C7  314A               	addfsr 1,10
 10104  02C8  0860               	movf	_program+5,w	;volatile
 10105  02C9  00BC               	movwf	??_NEMS_recalculate_program
 10106  02CA  01BD               	clrf	??_NEMS_recalculate_program+1
 10107  02CB  083C               	movf	??_NEMS_recalculate_program,w
 10108  02CC  00A0               	movwf	___wmul@multiplier
 10109  02CD  083D               	movf	??_NEMS_recalculate_program+1,w
 10110  02CE  00A1               	movwf	___wmul@multiplier+1
 10111  02CF  085C               	movf	_program+1,w	;volatile
 10112  02D0  00BE               	movwf	??_NEMS_recalculate_program+2
 10113  02D1  01BF               	clrf	??_NEMS_recalculate_program+3
 10114  02D2  083E               	movf	??_NEMS_recalculate_program+2,w
 10115  02D3  00A2               	movwf	___wmul@multiplicand
 10116  02D4  083F               	movf	??_NEMS_recalculate_program+3,w
 10117  02D5  00A3               	movwf	___wmul@multiplicand+1
 10118  02D6  318D  2583  3182   	fcall	___wmul
 10119  02D9  3F40               	moviw [0]fsr1
 10120  02DA  0720               	addwf	?___wmul,w
 10121  02DB  00C0               	movwf	??_NEMS_recalculate_program+4
 10122  02DC  3F41               	moviw [1]fsr1
 10123  02DD  3D21               	addwfc	?___wmul+1,w
 10124  02DE  00C1               	movwf	??_NEMS_recalculate_program+5
 10125  02DF  300A               	movlw	10
 10126  02E0  0086               	movwf	6
 10127  02E1  3027               	movlw	39
 10128  02E2  0087               	movwf	7
 10129  02E3  314C               	addfsr 1,12
 10130  02E4  0840               	movf	??_NEMS_recalculate_program+4,w
 10131  02E5  3FC0               	movwi [0]fsr1
 10132  02E6  0841               	movf	??_NEMS_recalculate_program+5,w
 10133  02E7  3FC1               	movwi [1]fsr1
 10134                           
 10135                           ;NEMS.c: 417:     waveform.pulse_amplitude = 0;
 10136  02E8  300A               	movlw	10
 10137  02E9  0086               	movwf	6
 10138  02EA  3027               	movlw	39
 10139  02EB  0087               	movwf	7
 10140  02EC  314F               	addfsr 1,15
 10141  02ED  0181               	clrf	1
 10142                           
 10143                           ;NEMS.c: 418:     waveform.current_amplitude = 0;
 10144  02EE  300A               	movlw	10
 10145  02EF  0086               	movwf	6
 10146  02F0  3027               	movlw	39
 10147  02F1  0087               	movwf	7
 10148  02F2  3151               	addfsr 1,17
 10149  02F3  0181               	clrf	1
 10150                           
 10151                           ;NEMS.c: 419:     waveform.program_amplitude = program.amplitude;
 10152  02F4  3018               	movlw	24
 10153  02F5  0086               	movwf	6
 10154  02F6  3027               	movlw	39
 10155  02F7  0087               	movwf	7
 10156  02F8  085B               	movf	_program,w	;volatile
 10157  02F9  0081               	movwf	1
 10158                           
 10159                           ;NEMS.c: 421:     switch (program.symmetry_factor) {
 10160  02FA  2B15               	goto	l3449
 10161  02FB                     l3439:	
 10162  02FB  300A               	movlw	10
 10163  02FC  0086               	movwf	6
 10164  02FD  3027               	movlw	39
 10165  02FE  0087               	movwf	7
 10166  02FF  3150               	addfsr 1,16
 10167  0300  0181               	clrf	1
 10168  0301  2B2B               	goto	l3451
 10169  0302                     l3441:	
 10170  0302  301A               	movlw	26
 10171  0303  0086               	movwf	6
 10172  0304  3027               	movlw	39
 10173  0305  0087               	movwf	7
 10174  0306  3001               	movlw	1
 10175  0307  2B13               	goto	L2
 10176  0308                     l3443:	
 10177  0308  301A               	movlw	26
 10178  0309  0086               	movwf	6
 10179  030A  3027               	movlw	39
 10180  030B  0087               	movwf	7
 10181  030C  3002               	movlw	2
 10182  030D  2B13               	goto	L2
 10183  030E                     l3445:	
 10184  030E  301A               	movlw	26
 10185  030F  0086               	movwf	6
 10186  0310  3027               	movlw	39
 10187  0311  0087               	movwf	7
 10188  0312  3003               	movlw	3
 10189  0313                     L2:	
 10190  0313  0081               	movwf	1
 10191  0314  2B2B               	goto	l3451
 10192  0315                     l3449:	
 10193  0315  085E               	movf	_program+3,w	;volatile
 10194  0316  00BC               	movwf	??_NEMS_recalculate_program
 10195  0317  01BD               	clrf	??_NEMS_recalculate_program+1
 10196                           
 10197                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10198                           ; Switch size 1, requested type "simple"
 10199                           ; Number of cases is 1, Range of values is 0 to 0
 10200                           ; switch strategies available:
 10201                           ; Name         Instructions Cycles
 10202                           ; simple_byte            4     3 (average)
 10203                           ; direct_byte            8     6 (fixed)
 10204                           ; jumptable            260     6 (fixed)
 10205                           ;	Chosen strategy is simple_byte
 10206  0318  083D               	movf	??_NEMS_recalculate_program+1,w
 10207  0319  3A00               	xorlw	0	; case 0
 10208  031A  1903               	skipnz
 10209  031B  2B1D               	goto	l3979
 10210  031C  2AFB               	goto	l3439
 10211  031D                     l3979:	
 10212                           
 10213                           ; Switch size 1, requested type "simple"
 10214                           ; Number of cases is 4, Range of values is 1 to 8
 10215                           ; switch strategies available:
 10216                           ; Name         Instructions Cycles
 10217                           ; simple_byte           13     7 (average)
 10218                           ; direct_byte           25     9 (fixed)
 10219                           ; jumptable            263     9 (fixed)
 10220                           ;	Chosen strategy is simple_byte
 10221  031D  083C               	movf	??_NEMS_recalculate_program,w
 10222  031E  3A01               	xorlw	1	; case 1
 10223  031F  1903               	skipnz
 10224  0320  2AFB               	goto	l3439
 10225  0321  3A03               	xorlw	3	; case 2
 10226  0322  1903               	skipnz
 10227  0323  2B02               	goto	l3441
 10228  0324  3A06               	xorlw	6	; case 4
 10229  0325  1903               	skipnz
 10230  0326  2B08               	goto	l3443
 10231  0327  3A0C               	xorlw	12	; case 8
 10232  0328  1903               	skipnz
 10233  0329  2B0E               	goto	l3445
 10234  032A  2AFB               	goto	l3439
 10235  032B                     l3451:	
 10236                           
 10237                           ;NEMS.c: 430:     waveform.silence_phase_duration = program.phase_duration + 1;
 10238  032B  085D               	movf	_program+2,w	;volatile
 10239  032C  3E01               	addlw	1
 10240  032D  00BC               	movwf	??_NEMS_recalculate_program
 10241  032E  3012               	movlw	18
 10242  032F  0086               	movwf	6
 10243  0330  3027               	movlw	39
 10244  0331  0087               	movwf	7
 10245  0332  083C               	movf	??_NEMS_recalculate_program,w
 10246  0333  0081               	movwf	1
 10247                           
 10248                           ;NEMS.c: 431:     waveform.minus_phase_duration = program.phase_duration*program.symmetr
      +                          y_factor + program.phase_duration + 1;
 10249  0334  085E               	movf	_program+3,w	;volatile
 10250  0335  00BC               	movwf	??_NEMS_recalculate_program
 10251  0336  083C               	movf	??_NEMS_recalculate_program,w
 10252  0337  00A0               	movwf	___bmul@multiplicand
 10253  0338  085D               	movf	_program+2,w	;volatile
 10254  0339  318C  2425  3182   	fcall	___bmul
 10255  033C  075D               	addwf	_program+2,w	;volatile
 10256  033D  3E01               	addlw	1
 10257  033E  00BD               	movwf	??_NEMS_recalculate_program+1
 10258  033F  3013               	movlw	19
 10259  0340  0086               	movwf	6
 10260  0341  3027               	movlw	39
 10261  0342  0087               	movwf	7
 10262  0343  083D               	movf	??_NEMS_recalculate_program+1,w
 10263  0344  0081               	movwf	1
 10264                           
 10265                           ;NEMS.c: 434:     waveform.ramp_index = 0;
 10266  0345  30EC               	movlw	236
 10267  0346  0086               	movwf	6
 10268  0347  3027               	movlw	39
 10269  0348  0087               	movwf	7
 10270  0349  0181               	clrf	1
 10271                           
 10272                           ;NEMS.c: 435:     waveform.contractions_index = 0;
 10273  034A  30ED               	movlw	237
 10274  034B  0086               	movwf	6
 10275  034C  3027               	movlw	39
 10276  034D  0087               	movwf	7
 10277  034E  0181               	clrf	1
 10278                           
 10279                           ;NEMS.c: 437:     waveform.channel1 = mux[program.channel1];
 10280  034F  0864               	movf	_program+9,w	;volatile
 10281  0350  3EAE               	addlw	low (_mux| (0+32768))
 10282  0351  0084               	movwf	4
 10283  0352  3090               	movlw	high (_mux| (0+32768))
 10284  0353  1803               	skipnc
 10285  0354  3E01               	addlw	1
 10286  0355  0085               	movwf	5
 10287  0356  0800               	movf	0,w	;code access
 10288  0357  00BC               	movwf	??_NEMS_recalculate_program
 10289  0358  30EE               	movlw	238
 10290  0359  0086               	movwf	6
 10291  035A  3027               	movlw	39
 10292  035B  0087               	movwf	7
 10293  035C  083C               	movf	??_NEMS_recalculate_program,w
 10294  035D  0081               	movwf	1
 10295                           
 10296                           ;NEMS.c: 438:     waveform.channel2 = mux[program.channel2];
 10297  035E  0865               	movf	_program+10,w	;volatile
 10298  035F  3EAE               	addlw	low (_mux| (0+32768))
 10299  0360  0084               	movwf	4
 10300  0361  3090               	movlw	high (_mux| (0+32768))
 10301  0362  1803               	skipnc
 10302  0363  3E01               	addlw	1
 10303  0364  0085               	movwf	5
 10304  0365  0800               	movf	0,w	;code access
 10305  0366  00BC               	movwf	??_NEMS_recalculate_program
 10306  0367  30EF               	movlw	239
 10307  0368  0086               	movwf	6
 10308  0369  3027               	movlw	39
 10309  036A  0087               	movwf	7
 10310  036B  083C               	movf	??_NEMS_recalculate_program,w
 10311  036C  0081               	movwf	1
 10312                           
 10313                           ;NEMS.c: 440:     NEMS_calculate_ramp();
 10314  036D  3184  24BD         	fcall	_NEMS_calculate_ramp
 10315                           
 10316                           ;NEMS.c: 442:     NEMS_states = NEMS_DISABLED;
 10317  036F  01D9               	clrf	_NEMS_states	;volatile
 10318                           
 10319                           ;NEMS.c: 443:     NEMS_wave_states = NEMS_OFF_TIME;
 10320  0370  3001               	movlw	1
 10321  0371  00BC               	movwf	??_NEMS_recalculate_program
 10322  0372  083C               	movf	??_NEMS_recalculate_program,w
 10323  0373  00D8               	movwf	_NEMS_wave_states	;volatile
 10324                           
 10325                           ;NEMS.c: 444:     NEMS_pulse_states = NEMS_PULSE_OFF;
 10326  0374  01F0               	clrf	_NEMS_pulse_states	;volatile
 10327  0375  0008               	return
 10328  0376                     __end_of_NEMS_recalculate_program:	
 10329                           
 10330                           	psect	text19
 10331  04BD                     __ptext19:	
 10332 ;; *************** function _NEMS_calculate_ramp *****************
 10333 ;; Defined at:
 10334 ;;		line 447 in file "NEMS.c"
 10335 ;; Parameters:    Size  Location     Type
 10336 ;;		None
 10337 ;; Auto vars:     Size  Location     Type
 10338 ;;  i               1   27[BANK0 ] unsigned char 
 10339 ;; Return value:  Size  Location     Type
 10340 ;;                  1    wreg      void 
 10341 ;; Registers used:
 10342 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10343 ;; Tracked objects:
 10344 ;;		On entry : 3F/0
 10345 ;;		On exit  : 3F/0
 10346 ;;		Unchanged: 0/0
 10347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10349 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10350 ;;      Temps:          0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10351 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10352 ;;Total ram usage:       14 bytes
 10353 ;; Hardware stack levels used:    1
 10354 ;; Hardware stack levels required when called:    5
 10355 ;; This function calls:
 10356 ;;		___lwdiv
 10357 ;;		___wmul
 10358 ;; This function is called by:
 10359 ;;		_NEMS_recalculate_program
 10360 ;; This function uses a non-reentrant model
 10361 ;;
 10362                           
 10363                           
 10364                           ;psect for function _NEMS_calculate_ramp
 10365  04BD                     _NEMS_calculate_ramp:	
 10366                           
 10367                           ;NEMS.c: 449:     unsigned char i;;NEMS.c: 451:     for (i = 0; i < waveform.ramp_up_pul
      +                          ses; i++) {
 10368                           
 10369                           ;incstack = 0
 10370                           ; Regs used in _NEMS_calculate_ramp: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10371  04BD  01BB               	clrf	NEMS_calculate_ramp@i
 10372  04BE                     l3279:	
 10373  04BE  3080               	movlw	128
 10374  04BF  0086               	movwf	6
 10375  04C0  3027               	movlw	39
 10376  04C1  0087               	movwf	7
 10377  04C2  3F40               	moviw [0]fsr1
 10378  04C3  00AE               	movwf	??_NEMS_calculate_ramp
 10379  04C4  3F41               	moviw [1]fsr1
 10380  04C5  00AF               	movwf	??_NEMS_calculate_ramp+1
 10381  04C6  083B               	movf	NEMS_calculate_ramp@i,w
 10382  04C7  00B0               	movwf	??_NEMS_calculate_ramp+2
 10383  04C8  01B1               	clrf	??_NEMS_calculate_ramp+3
 10384  04C9  082F               	movf	??_NEMS_calculate_ramp+1,w
 10385  04CA  0231               	subwf	??_NEMS_calculate_ramp+3,w
 10386  04CB  1D03               	skipz
 10387  04CC  2CCF               	goto	u1785
 10388  04CD  082E               	movf	??_NEMS_calculate_ramp,w
 10389  04CE  0230               	subwf	??_NEMS_calculate_ramp+2,w
 10390  04CF                     u1785:	
 10391  04CF  1803               	btfsc	3,0
 10392  04D0  2D10               	goto	l3281
 10393                           
 10394                           ;NEMS.c: 452:         waveform.ramp_up_amplitude[i] = (unsigned short)(i*waveform.progra
      +                          m_amplitude)/waveform.ramp_up_pulses;
 10395  04D1  3080               	movlw	128
 10396  04D2  0086               	movwf	6
 10397  04D3  3027               	movlw	39
 10398  04D4  0087               	movwf	7
 10399  04D5  3F40               	moviw [0]fsr1
 10400  04D6  00A6               	movwf	___lwdiv@divisor
 10401  04D7  3F41               	moviw [1]fsr1
 10402  04D8  00A7               	movwf	___lwdiv@divisor+1
 10403  04D9  083B               	movf	NEMS_calculate_ramp@i,w
 10404  04DA  00AE               	movwf	??_NEMS_calculate_ramp
 10405  04DB  01AF               	clrf	??_NEMS_calculate_ramp+1
 10406  04DC  082E               	movf	??_NEMS_calculate_ramp,w
 10407  04DD  00A0               	movwf	___wmul@multiplier
 10408  04DE  082F               	movf	??_NEMS_calculate_ramp+1,w
 10409  04DF  00A1               	movwf	___wmul@multiplier+1
 10410  04E0  300A               	movlw	10
 10411  04E1  0086               	movwf	6
 10412  04E2  3027               	movlw	39
 10413  04E3  0087               	movwf	7
 10414  04E4  314E               	addfsr 1,14
 10415  04E5  0801               	movf	1,w
 10416  04E6  00B0               	movwf	??_NEMS_calculate_ramp+2
 10417  04E7  01B1               	clrf	??_NEMS_calculate_ramp+3
 10418  04E8  0830               	movf	??_NEMS_calculate_ramp+2,w
 10419  04E9  00A2               	movwf	___wmul@multiplicand
 10420  04EA  0831               	movf	??_NEMS_calculate_ramp+3,w
 10421  04EB  00A3               	movwf	___wmul@multiplicand+1
 10422  04EC  318D  2583  3184   	fcall	___wmul
 10423  04EF  0821               	movf	?___wmul+1,w
 10424  04F0  00A9               	movwf	___lwdiv@dividend+1
 10425  04F1  0820               	movf	?___wmul,w
 10426  04F2  00A8               	movwf	___lwdiv@dividend
 10427  04F3  318F  270B  3184   	fcall	___lwdiv
 10428  04F6  0826               	movf	?___lwdiv,w
 10429  04F7  00B2               	movwf	??_NEMS_calculate_ramp+4
 10430  04F8  083B               	movf	NEMS_calculate_ramp@i,w
 10431  04F9  00B3               	movwf	??_NEMS_calculate_ramp+5
 10432  04FA  01B4               	clrf	??_NEMS_calculate_ramp+6
 10433  04FB  301C               	movlw	28
 10434  04FC  00B5               	movwf	??_NEMS_calculate_ramp+7
 10435  04FD  3027               	movlw	39
 10436  04FE  00B6               	movwf	??_NEMS_calculate_ramp+8
 10437  04FF  0833               	movf	??_NEMS_calculate_ramp+5,w
 10438  0500  0735               	addwf	??_NEMS_calculate_ramp+7,w
 10439  0501  00B7               	movwf	??_NEMS_calculate_ramp+9
 10440  0502  0834               	movf	??_NEMS_calculate_ramp+6,w
 10441  0503  3D36               	addwfc	??_NEMS_calculate_ramp+8,w
 10442  0504  00B8               	movwf	??_NEMS_calculate_ramp+10
 10443  0505  0837               	movf	??_NEMS_calculate_ramp+9,w
 10444  0506  0086               	movwf	6
 10445  0507  0838               	movf	??_NEMS_calculate_ramp+10,w
 10446  0508  0087               	movwf	7
 10447  0509  0832               	movf	??_NEMS_calculate_ramp+4,w
 10448  050A  0081               	movwf	1
 10449                           
 10450                           ;NEMS.c: 453:     }
 10451  050B  3001               	movlw	1
 10452  050C  00AE               	movwf	??_NEMS_calculate_ramp
 10453  050D  082E               	movf	??_NEMS_calculate_ramp,w
 10454  050E  07BB               	addwf	NEMS_calculate_ramp@i,f
 10455  050F  2CBE               	goto	l3279
 10456  0510                     l3281:	
 10457                           
 10458                           ;NEMS.c: 455:     for (i = 0; i < waveform.ramp_down_pulses; i++) {
 10459  0510  01BB               	clrf	NEMS_calculate_ramp@i
 10460  0511                     l3287:	
 10461  0511  30E8               	movlw	232
 10462  0512  0086               	movwf	6
 10463  0513  3027               	movlw	39
 10464  0514  0087               	movwf	7
 10465  0515  3F40               	moviw [0]fsr1
 10466  0516  00AE               	movwf	??_NEMS_calculate_ramp
 10467  0517  3F41               	moviw [1]fsr1
 10468  0518  00AF               	movwf	??_NEMS_calculate_ramp+1
 10469  0519  083B               	movf	NEMS_calculate_ramp@i,w
 10470  051A  00B0               	movwf	??_NEMS_calculate_ramp+2
 10471  051B  01B1               	clrf	??_NEMS_calculate_ramp+3
 10472  051C  082F               	movf	??_NEMS_calculate_ramp+1,w
 10473  051D  0231               	subwf	??_NEMS_calculate_ramp+3,w
 10474  051E  1D03               	skipz
 10475  051F  2D22               	goto	u1795
 10476  0520  082E               	movf	??_NEMS_calculate_ramp,w
 10477  0521  0230               	subwf	??_NEMS_calculate_ramp+2,w
 10478  0522                     u1795:	
 10479  0522  1803               	btfsc	3,0
 10480  0523  0008               	return
 10481                           
 10482                           ;NEMS.c: 456:         waveform.ramp_down_amplitude[i] = (unsigned short)((waveform.ramp_
      +                          down_pulses-i-1)*waveform.program_amplitude)/waveform.ramp_down_pulses;
 10483  0524  30E8               	movlw	232
 10484  0525  0086               	movwf	6
 10485  0526  3027               	movlw	39
 10486  0527  0087               	movwf	7
 10487  0528  3F40               	moviw [0]fsr1
 10488  0529  00A6               	movwf	___lwdiv@divisor
 10489  052A  3F41               	moviw [1]fsr1
 10490  052B  00A7               	movwf	___lwdiv@divisor+1
 10491  052C  30E8               	movlw	232
 10492  052D  0086               	movwf	6
 10493  052E  3027               	movlw	39
 10494  052F  0087               	movwf	7
 10495  0530  3F40               	moviw [0]fsr1
 10496  0531  00AE               	movwf	??_NEMS_calculate_ramp
 10497  0532  3F41               	moviw [1]fsr1
 10498  0533  00AF               	movwf	??_NEMS_calculate_ramp+1
 10499  0534  082F               	movf	??_NEMS_calculate_ramp+1,w
 10500  0535  00B1               	movwf	??_NEMS_calculate_ramp+3
 10501  0536  083B               	movf	NEMS_calculate_ramp@i,w
 10502  0537  022E               	subwf	??_NEMS_calculate_ramp,w
 10503  0538  00B0               	movwf	??_NEMS_calculate_ramp+2
 10504  0539  1C03               	skipc
 10505  053A  03B1               	decf	??_NEMS_calculate_ramp+3,f
 10506  053B  0830               	movf	??_NEMS_calculate_ramp+2,w
 10507  053C  3EFF               	addlw	255
 10508  053D  00A0               	movwf	___wmul@multiplier
 10509  053E  30FF               	movlw	255
 10510  053F  3D31               	addwfc	??_NEMS_calculate_ramp+3,w
 10511  0540  00A1               	movwf	___wmul@multiplier+1
 10512  0541  300A               	movlw	10
 10513  0542  0086               	movwf	6
 10514  0543  3027               	movlw	39
 10515  0544  0087               	movwf	7
 10516  0545  314E               	addfsr 1,14
 10517  0546  0801               	movf	1,w
 10518  0547  00B2               	movwf	??_NEMS_calculate_ramp+4
 10519  0548  01B3               	clrf	??_NEMS_calculate_ramp+5
 10520  0549  0832               	movf	??_NEMS_calculate_ramp+4,w
 10521  054A  00A2               	movwf	___wmul@multiplicand
 10522  054B  0833               	movf	??_NEMS_calculate_ramp+5,w
 10523  054C  00A3               	movwf	___wmul@multiplicand+1
 10524  054D  318D  2583  3184   	fcall	___wmul
 10525  0550  0821               	movf	?___wmul+1,w
 10526  0551  00A9               	movwf	___lwdiv@dividend+1
 10527  0552  0820               	movf	?___wmul,w
 10528  0553  00A8               	movwf	___lwdiv@dividend
 10529  0554  318F  270B  3184   	fcall	___lwdiv
 10530  0557  0826               	movf	?___lwdiv,w
 10531  0558  00B4               	movwf	??_NEMS_calculate_ramp+6
 10532  0559  083B               	movf	NEMS_calculate_ramp@i,w
 10533  055A  00B5               	movwf	??_NEMS_calculate_ramp+7
 10534  055B  01B6               	clrf	??_NEMS_calculate_ramp+8
 10535  055C  3084               	movlw	132
 10536  055D  00B7               	movwf	??_NEMS_calculate_ramp+9
 10537  055E  3027               	movlw	39
 10538  055F  00B8               	movwf	??_NEMS_calculate_ramp+10
 10539  0560  0835               	movf	??_NEMS_calculate_ramp+7,w
 10540  0561  0737               	addwf	??_NEMS_calculate_ramp+9,w
 10541  0562  00B9               	movwf	??_NEMS_calculate_ramp+11
 10542  0563  0836               	movf	??_NEMS_calculate_ramp+8,w
 10543  0564  3D38               	addwfc	??_NEMS_calculate_ramp+10,w
 10544  0565  00BA               	movwf	??_NEMS_calculate_ramp+12
 10545  0566  0839               	movf	??_NEMS_calculate_ramp+11,w
 10546  0567  0086               	movwf	6
 10547  0568  083A               	movf	??_NEMS_calculate_ramp+12,w
 10548  0569  0087               	movwf	7
 10549  056A  0834               	movf	??_NEMS_calculate_ramp+6,w
 10550  056B  0081               	movwf	1
 10551                           
 10552                           ;NEMS.c: 457:     }
 10553  056C  3001               	movlw	1
 10554  056D  00AE               	movwf	??_NEMS_calculate_ramp
 10555  056E  082E               	movf	??_NEMS_calculate_ramp,w
 10556  056F  07BB               	addwf	NEMS_calculate_ramp@i,f
 10557  0570  2D11               	goto	l3287
 10558  0571                     __end_of_NEMS_calculate_ramp:	
 10559                           
 10560                           	psect	text20
 10561  0D83                     __ptext20:	
 10562 ;; *************** function ___wmul *****************
 10563 ;; Defined at:
 10564 ;;		line 15 in file "/pkg/microchip/xc8/v2.10/pic/sources/c99/common/Umul16.c"
 10565 ;; Parameters:    Size  Location     Type
 10566 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10567 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10568 ;; Auto vars:     Size  Location     Type
 10569 ;;  product         2    4[BANK0 ] unsigned int 
 10570 ;; Return value:  Size  Location     Type
 10571 ;;                  2    0[BANK0 ] unsigned int 
 10572 ;; Registers used:
 10573 ;;		wreg, status,2, status,0
 10574 ;; Tracked objects:
 10575 ;;		On entry : 3F/0
 10576 ;;		On exit  : 3F/0
 10577 ;;		Unchanged: 0/0
 10578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10579 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10580 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10582 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10583 ;;Total ram usage:        6 bytes
 10584 ;; Hardware stack levels used:    1
 10585 ;; Hardware stack levels required when called:    4
 10586 ;; This function calls:
 10587 ;;		Nothing
 10588 ;; This function is called by:
 10589 ;;		_NEMS_recalculate_program
 10590 ;;		_NEMS_calculate_ramp
 10591 ;; This function uses a non-reentrant model
 10592 ;;
 10593                           
 10594                           
 10595                           ;psect for function ___wmul
 10596  0D83                     ___wmul:	
 10597                           
 10598                           ;incstack = 0
 10599                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10600  0D83  01A4               	clrf	___wmul@product
 10601  0D84  01A5               	clrf	___wmul@product+1
 10602  0D85                     l3217:	
 10603  0D85  1C20               	btfss	___wmul@multiplier,0
 10604  0D86  2D8B               	goto	l837
 10605  0D87  0822               	movf	___wmul@multiplicand,w
 10606  0D88  07A4               	addwf	___wmul@product,f
 10607  0D89  0823               	movf	___wmul@multiplicand+1,w
 10608  0D8A  3DA5               	addwfc	___wmul@product+1,f
 10609  0D8B                     l837:	
 10610  0D8B  3001               	movlw	1
 10611  0D8C                     u1685:	
 10612  0D8C  35A2               	lslf	___wmul@multiplicand,f
 10613  0D8D  0DA3               	rlf	___wmul@multiplicand+1,f
 10614  0D8E  0B89               	decfsz	9,f
 10615  0D8F  2D8C               	goto	u1685
 10616  0D90  3001               	movlw	1
 10617  0D91                     u1695:	
 10618  0D91  36A1               	lsrf	___wmul@multiplier+1,f
 10619  0D92  0CA0               	rrf	___wmul@multiplier,f
 10620  0D93  0B89               	decfsz	9,f
 10621  0D94  2D91               	goto	u1695
 10622  0D95  0820               	movf	___wmul@multiplier,w
 10623  0D96  0421               	iorwf	___wmul@multiplier+1,w
 10624  0D97  1D03               	btfss	3,2
 10625  0D98  2D85               	goto	l3217
 10626  0D99  0825               	movf	___wmul@product+1,w
 10627  0D9A  00A1               	movwf	?___wmul+1
 10628  0D9B  0824               	movf	___wmul@product,w
 10629  0D9C  00A0               	movwf	?___wmul
 10630  0D9D  0008               	return
 10631  0D9E                     __end_of___wmul:	
 10632                           
 10633                           	psect	text21
 10634  0F0B                     __ptext21:	
 10635 ;; *************** function ___lwdiv *****************
 10636 ;; Defined at:
 10637 ;;		line 5 in file "/pkg/microchip/xc8/v2.10/pic/sources/c99/common/lwdiv.c"
 10638 ;; Parameters:    Size  Location     Type
 10639 ;;  divisor         2    6[BANK0 ] unsigned int 
 10640 ;;  dividend        2    8[BANK0 ] unsigned int 
 10641 ;; Auto vars:     Size  Location     Type
 10642 ;;  quotient        2   11[BANK0 ] unsigned int 
 10643 ;;  counter         1   13[BANK0 ] unsigned char 
 10644 ;; Return value:  Size  Location     Type
 10645 ;;                  2    6[BANK0 ] unsigned int 
 10646 ;; Registers used:
 10647 ;;		wreg, status,2, status,0
 10648 ;; Tracked objects:
 10649 ;;		On entry : 3F/0
 10650 ;;		On exit  : 3F/0
 10651 ;;		Unchanged: 0/0
 10652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10653 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10654 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10655 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10656 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10657 ;;Total ram usage:        8 bytes
 10658 ;; Hardware stack levels used:    1
 10659 ;; Hardware stack levels required when called:    4
 10660 ;; This function calls:
 10661 ;;		Nothing
 10662 ;; This function is called by:
 10663 ;;		_NEMS_recalculate_program
 10664 ;;		_NEMS_calculate_ramp
 10665 ;; This function uses a non-reentrant model
 10666 ;;
 10667                           
 10668                           
 10669                           ;psect for function ___lwdiv
 10670  0F0B                     ___lwdiv:	
 10671                           
 10672                           ;incstack = 0
 10673                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 10674  0F0B  01AB               	clrf	___lwdiv@quotient
 10675  0F0C  01AC               	clrf	___lwdiv@quotient+1
 10676  0F0D  0826               	movf	___lwdiv@divisor,w
 10677  0F0E  0427               	iorwf	___lwdiv@divisor+1,w
 10678  0F0F  1903               	btfsc	3,2
 10679  0F10  2F3A               	goto	l2335
 10680  0F11  01AD               	clrf	___lwdiv@counter
 10681  0F12  0AAD               	incf	___lwdiv@counter,f
 10682  0F13                     l2323:	
 10683  0F13  1BA7               	btfsc	___lwdiv@divisor+1,7
 10684  0F14  2F1F               	goto	l2325
 10685  0F15  3001               	movlw	1
 10686  0F16                     u905:	
 10687  0F16  35A6               	lslf	___lwdiv@divisor,f
 10688  0F17  0DA7               	rlf	___lwdiv@divisor+1,f
 10689  0F18  0B89               	decfsz	9,f
 10690  0F19  2F16               	goto	u905
 10691  0F1A  3001               	movlw	1
 10692  0F1B  00AA               	movwf	??___lwdiv
 10693  0F1C  082A               	movf	??___lwdiv,w
 10694  0F1D  07AD               	addwf	___lwdiv@counter,f
 10695  0F1E  2F13               	goto	l2323
 10696  0F1F                     l2325:	
 10697  0F1F  3001               	movlw	1
 10698  0F20                     u925:	
 10699  0F20  35AB               	lslf	___lwdiv@quotient,f
 10700  0F21  0DAC               	rlf	___lwdiv@quotient+1,f
 10701  0F22  0B89               	decfsz	9,f
 10702  0F23  2F20               	goto	u925
 10703  0F24  0827               	movf	___lwdiv@divisor+1,w
 10704  0F25  0229               	subwf	___lwdiv@dividend+1,w
 10705  0F26  1D03               	skipz
 10706  0F27  2F2A               	goto	u935
 10707  0F28  0826               	movf	___lwdiv@divisor,w
 10708  0F29  0228               	subwf	___lwdiv@dividend,w
 10709  0F2A                     u935:	
 10710  0F2A  1C03               	skipc
 10711  0F2B  2F31               	goto	l2331
 10712  0F2C  0826               	movf	___lwdiv@divisor,w
 10713  0F2D  02A8               	subwf	___lwdiv@dividend,f
 10714  0F2E  0827               	movf	___lwdiv@divisor+1,w
 10715  0F2F  3BA9               	subwfb	___lwdiv@dividend+1,f
 10716  0F30  142B               	bsf	___lwdiv@quotient,0
 10717  0F31                     l2331:	
 10718  0F31  3001               	movlw	1
 10719  0F32                     u945:	
 10720  0F32  36A7               	lsrf	___lwdiv@divisor+1,f
 10721  0F33  0CA6               	rrf	___lwdiv@divisor,f
 10722  0F34  0B89               	decfsz	9,f
 10723  0F35  2F32               	goto	u945
 10724  0F36  3001               	movlw	1
 10725  0F37  02AD               	subwf	___lwdiv@counter,f
 10726  0F38  1D03               	btfss	3,2
 10727  0F39  2F1F               	goto	l2325
 10728  0F3A                     l2335:	
 10729  0F3A  082C               	movf	___lwdiv@quotient+1,w
 10730  0F3B  00A7               	movwf	?___lwdiv+1
 10731  0F3C  082B               	movf	___lwdiv@quotient,w
 10732  0F3D  00A6               	movwf	?___lwdiv
 10733  0F3E  0008               	return
 10734  0F3F                     __end_of___lwdiv:	
 10735                           
 10736                           	psect	text22
 10737  0D6C                     __ptext22:	
 10738 ;; *************** function _NEMS_set_symmetry_factor *****************
 10739 ;; Defined at:
 10740 ;;		line 213 in file "NEMS.c"
 10741 ;; Parameters:    Size  Location     Type
 10742 ;;		None
 10743 ;; Auto vars:     Size  Location     Type
 10744 ;;		None
 10745 ;; Return value:  Size  Location     Type
 10746 ;;                  1    wreg      void 
 10747 ;; Registers used:
 10748 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10749 ;; Tracked objects:
 10750 ;;		On entry : 0/0
 10751 ;;		On exit  : 3F/0
 10752 ;;		Unchanged: 0/0
 10753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10758 ;;Total ram usage:        0 bytes
 10759 ;; Hardware stack levels used:    1
 10760 ;; Hardware stack levels required when called:    6
 10761 ;; This function calls:
 10762 ;;		_NEMS_get_packet
 10763 ;;		__puts
 10764 ;; This function is called by:
 10765 ;;		_NEMS_message_handler
 10766 ;; This function uses a non-reentrant model
 10767 ;;
 10768                           
 10769                           
 10770                           ;psect for function _NEMS_set_symmetry_factor
 10771  0D6C                     _NEMS_set_symmetry_factor:	
 10772                           
 10773                           ;NEMS.c: 215:     if(NEMS_get_packet(&program.symmetry_factor)) {
 10774                           
 10775                           ;incstack = 0
 10776                           ; Regs used in _NEMS_set_symmetry_factor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10777  0D6C  305E               	movlw	(low ((_program| 0+3)))& (0+255)
 10778  0D6D  318F  277E  318D   	fcall	_NEMS_get_packet
 10779  0D70  3A00               	xorlw	0
 10780  0D71  1903               	skipnz
 10781  0D72  2D7B               	goto	l3605
 10782                           
 10783                           ;NEMS.c: 216:         _puts("k-ok ");
 10784  0D73  3081               	movlw	low (STR_8| (0+32768))
 10785  0D74  0140               	movlb	0	; select bank0
 10786  0D75  00A2               	movwf	__puts@pt
 10787  0D76  3091               	movlw	high (STR_8| (0+32768))
 10788  0D77  00A3               	movwf	__puts@pt+1
 10789  0D78  318E  2681         	fcall	__puts
 10790                           
 10791                           ;NEMS.c: 218:     } else {
 10792  0D7A  0008               	return
 10793  0D7B                     l3605:	
 10794                           
 10795                           ;NEMS.c: 219:         _puts("k-err ");
 10796  0D7B  3035               	movlw	low (STR_9| (0+32768))
 10797  0D7C  0140               	movlb	0	; select bank0
 10798  0D7D  00A2               	movwf	__puts@pt
 10799  0D7E  3091               	movlw	high (STR_9| (0+32768))
 10800  0D7F  00A3               	movwf	__puts@pt+1
 10801  0D80  318E  2681         	fcall	__puts
 10802  0D82  0008               	return
 10803  0D83                     __end_of_NEMS_set_symmetry_factor:	
 10804                           
 10805                           	psect	text23
 10806  0D55                     __ptext23:	
 10807 ;; *************** function _NEMS_set_ramp_up *****************
 10808 ;; Defined at:
 10809 ;;		line 254 in file "NEMS.c"
 10810 ;; Parameters:    Size  Location     Type
 10811 ;;		None
 10812 ;; Auto vars:     Size  Location     Type
 10813 ;;		None
 10814 ;; Return value:  Size  Location     Type
 10815 ;;                  1    wreg      void 
 10816 ;; Registers used:
 10817 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10818 ;; Tracked objects:
 10819 ;;		On entry : 0/0
 10820 ;;		On exit  : 3F/0
 10821 ;;		Unchanged: 0/0
 10822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10827 ;;Total ram usage:        0 bytes
 10828 ;; Hardware stack levels used:    1
 10829 ;; Hardware stack levels required when called:    6
 10830 ;; This function calls:
 10831 ;;		_NEMS_get_packet
 10832 ;;		__puts
 10833 ;; This function is called by:
 10834 ;;		_NEMS_message_handler
 10835 ;; This function uses a non-reentrant model
 10836 ;;
 10837                           
 10838                           
 10839                           ;psect for function _NEMS_set_ramp_up
 10840  0D55                     _NEMS_set_ramp_up:	
 10841                           
 10842                           ;NEMS.c: 256:     if(NEMS_get_packet(&program.ramp_up)) {
 10843                           
 10844                           ;incstack = 0
 10845                           ; Regs used in _NEMS_set_ramp_up: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10846  0D55  3062               	movlw	(low ((_program| 0+7)))& (0+255)
 10847  0D56  318F  277E  318D   	fcall	_NEMS_get_packet
 10848  0D59  3A00               	xorlw	0
 10849  0D5A  1903               	skipnz
 10850  0D5B  2D64               	goto	l3629
 10851                           
 10852                           ;NEMS.c: 257:         _puts("r-ok ");
 10853  0D5C  309F               	movlw	low (STR_16| (0+32768))
 10854  0D5D  0140               	movlb	0	; select bank0
 10855  0D5E  00A2               	movwf	__puts@pt
 10856  0D5F  3091               	movlw	high (STR_16| (0+32768))
 10857  0D60  00A3               	movwf	__puts@pt+1
 10858  0D61  318E  2681         	fcall	__puts
 10859                           
 10860                           ;NEMS.c: 259:     } else {
 10861  0D63  0008               	return
 10862  0D64                     l3629:	
 10863                           
 10864                           ;NEMS.c: 260:         _puts("r-err ");
 10865  0D64  304A               	movlw	low (STR_17| (0+32768))
 10866  0D65  0140               	movlb	0	; select bank0
 10867  0D66  00A2               	movwf	__puts@pt
 10868  0D67  3091               	movlw	high (STR_17| (0+32768))
 10869  0D68  00A3               	movwf	__puts@pt+1
 10870  0D69  318E  2681         	fcall	__puts
 10871  0D6B  0008               	return
 10872  0D6C                     __end_of_NEMS_set_ramp_up:	
 10873                           
 10874                           	psect	text24
 10875  0D3E                     __ptext24:	
 10876 ;; *************** function _NEMS_set_ramp_down *****************
 10877 ;; Defined at:
 10878 ;;		line 265 in file "NEMS.c"
 10879 ;; Parameters:    Size  Location     Type
 10880 ;;		None
 10881 ;; Auto vars:     Size  Location     Type
 10882 ;;		None
 10883 ;; Return value:  Size  Location     Type
 10884 ;;                  1    wreg      void 
 10885 ;; Registers used:
 10886 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10887 ;; Tracked objects:
 10888 ;;		On entry : 0/0
 10889 ;;		On exit  : 3F/0
 10890 ;;		Unchanged: 0/0
 10891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10896 ;;Total ram usage:        0 bytes
 10897 ;; Hardware stack levels used:    1
 10898 ;; Hardware stack levels required when called:    6
 10899 ;; This function calls:
 10900 ;;		_NEMS_get_packet
 10901 ;;		__puts
 10902 ;; This function is called by:
 10903 ;;		_NEMS_message_handler
 10904 ;; This function uses a non-reentrant model
 10905 ;;
 10906                           
 10907                           
 10908                           ;psect for function _NEMS_set_ramp_down
 10909  0D3E                     _NEMS_set_ramp_down:	
 10910                           
 10911                           ;NEMS.c: 267:     if(NEMS_get_packet(&program.ramp_down)) {
 10912                           
 10913                           ;incstack = 0
 10914                           ; Regs used in _NEMS_set_ramp_down: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10915  0D3E  3063               	movlw	(low ((_program| 0+8)))& (0+255)
 10916  0D3F  318F  277E  318D   	fcall	_NEMS_get_packet
 10917  0D42  3A00               	xorlw	0
 10918  0D43  1903               	skipnz
 10919  0D44  2D4D               	goto	l3635
 10920                           
 10921                           ;NEMS.c: 268:         _puts("R-ok ");
 10922  0D45  3063               	movlw	low (STR_18| (0+32768))
 10923  0D46  0140               	movlb	0	; select bank0
 10924  0D47  00A2               	movwf	__puts@pt
 10925  0D48  3091               	movlw	high (STR_18| (0+32768))
 10926  0D49  00A3               	movwf	__puts@pt+1
 10927  0D4A  318E  2681         	fcall	__puts
 10928                           
 10929                           ;NEMS.c: 270:     } else {
 10930  0D4C  0008               	return
 10931  0D4D                     l3635:	
 10932                           
 10933                           ;NEMS.c: 271:         _puts("R-err ");
 10934  0D4D  3012               	movlw	low (STR_19| (0+32768))
 10935  0D4E  0140               	movlb	0	; select bank0
 10936  0D4F  00A2               	movwf	__puts@pt
 10937  0D50  3091               	movlw	high (STR_19| (0+32768))
 10938  0D51  00A3               	movwf	__puts@pt+1
 10939  0D52  318E  2681         	fcall	__puts
 10940  0D54  0008               	return
 10941  0D55                     __end_of_NEMS_set_ramp_down:	
 10942                           
 10943                           	psect	text25
 10944  0D27                     __ptext25:	
 10945 ;; *************** function _NEMS_set_phase_duration *****************
 10946 ;; Defined at:
 10947 ;;		line 203 in file "NEMS.c"
 10948 ;; Parameters:    Size  Location     Type
 10949 ;;		None
 10950 ;; Auto vars:     Size  Location     Type
 10951 ;;		None
 10952 ;; Return value:  Size  Location     Type
 10953 ;;                  1    wreg      void 
 10954 ;; Registers used:
 10955 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10956 ;; Tracked objects:
 10957 ;;		On entry : 0/0
 10958 ;;		On exit  : 3F/0
 10959 ;;		Unchanged: 0/0
 10960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10965 ;;Total ram usage:        0 bytes
 10966 ;; Hardware stack levels used:    1
 10967 ;; Hardware stack levels required when called:    6
 10968 ;; This function calls:
 10969 ;;		_NEMS_get_packet
 10970 ;;		__puts
 10971 ;; This function is called by:
 10972 ;;		_NEMS_message_handler
 10973 ;; This function uses a non-reentrant model
 10974 ;;
 10975                           
 10976                           
 10977                           ;psect for function _NEMS_set_phase_duration
 10978  0D27                     _NEMS_set_phase_duration:	
 10979                           
 10980                           ;NEMS.c: 205:     if(NEMS_get_packet(&program.phase_duration)) {
 10981                           
 10982                           ;incstack = 0
 10983                           ; Regs used in _NEMS_set_phase_duration: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10984  0D27  305D               	movlw	(low ((_program| 0+2)))& (0+255)
 10985  0D28  318F  277E  318D   	fcall	_NEMS_get_packet
 10986  0D2B  3A00               	xorlw	0
 10987  0D2C  1903               	skipnz
 10988  0D2D  2D36               	goto	l3599
 10989                           
 10990                           ;NEMS.c: 206:         _puts("d-ok ");
 10991  0D2E  3075               	movlw	low (STR_6| (0+32768))
 10992  0D2F  0140               	movlb	0	; select bank0
 10993  0D30  00A2               	movwf	__puts@pt
 10994  0D31  3091               	movlw	high (STR_6| (0+32768))
 10995  0D32  00A3               	movwf	__puts@pt+1
 10996  0D33  318E  2681         	fcall	__puts
 10997                           
 10998                           ;NEMS.c: 208:     } else {
 10999  0D35  0008               	return
 11000  0D36                     l3599:	
 11001                           
 11002                           ;NEMS.c: 209:         _puts("d-err ");
 11003  0D36  3027               	movlw	low (STR_7| (0+32768))
 11004  0D37  0140               	movlb	0	; select bank0
 11005  0D38  00A2               	movwf	__puts@pt
 11006  0D39  3091               	movlw	high (STR_7| (0+32768))
 11007  0D3A  00A3               	movwf	__puts@pt+1
 11008  0D3B  318E  2681         	fcall	__puts
 11009  0D3D  0008               	return
 11010  0D3E                     __end_of_NEMS_set_phase_duration:	
 11011                           
 11012                           	psect	text26
 11013  0D10                     __ptext26:	
 11014 ;; *************** function _NEMS_set_frequency *****************
 11015 ;; Defined at:
 11016 ;;		line 193 in file "NEMS.c"
 11017 ;; Parameters:    Size  Location     Type
 11018 ;;		None
 11019 ;; Auto vars:     Size  Location     Type
 11020 ;;		None
 11021 ;; Return value:  Size  Location     Type
 11022 ;;                  1    wreg      void 
 11023 ;; Registers used:
 11024 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11025 ;; Tracked objects:
 11026 ;;		On entry : 0/0
 11027 ;;		On exit  : 3F/0
 11028 ;;		Unchanged: 0/0
 11029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11034 ;;Total ram usage:        0 bytes
 11035 ;; Hardware stack levels used:    1
 11036 ;; Hardware stack levels required when called:    6
 11037 ;; This function calls:
 11038 ;;		_NEMS_get_packet
 11039 ;;		__puts
 11040 ;; This function is called by:
 11041 ;;		_NEMS_message_handler
 11042 ;; This function uses a non-reentrant model
 11043 ;;
 11044                           
 11045                           
 11046                           ;psect for function _NEMS_set_frequency
 11047  0D10                     _NEMS_set_frequency:	
 11048                           
 11049                           ;NEMS.c: 195:     if(NEMS_get_packet(&program.frequency)) {
 11050                           
 11051                           ;incstack = 0
 11052                           ; Regs used in _NEMS_set_frequency: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11053  0D10  305C               	movlw	(low ((_program| 0+1)))& (0+255)
 11054  0D11  318F  277E  318D   	fcall	_NEMS_get_packet
 11055  0D14  3A00               	xorlw	0
 11056  0D15  1903               	skipnz
 11057  0D16  2D1F               	goto	l3593
 11058                           
 11059                           ;NEMS.c: 196:         _puts("f-ok ");
 11060  0D17  307B               	movlw	low (STR_4| (0+32768))
 11061  0D18  0140               	movlb	0	; select bank0
 11062  0D19  00A2               	movwf	__puts@pt
 11063  0D1A  3091               	movlw	high (STR_4| (0+32768))
 11064  0D1B  00A3               	movwf	__puts@pt+1
 11065  0D1C  318E  2681         	fcall	__puts
 11066                           
 11067                           ;NEMS.c: 198:     } else {
 11068  0D1E  0008               	return
 11069  0D1F                     l3593:	
 11070                           
 11071                           ;NEMS.c: 199:         _puts("f-err ");
 11072  0D1F  302E               	movlw	low (STR_5| (0+32768))
 11073  0D20  0140               	movlb	0	; select bank0
 11074  0D21  00A2               	movwf	__puts@pt
 11075  0D22  3091               	movlw	high (STR_5| (0+32768))
 11076  0D23  00A3               	movwf	__puts@pt+1
 11077  0D24  318E  2681         	fcall	__puts
 11078  0D26  0008               	return
 11079  0D27                     __end_of_NEMS_set_frequency:	
 11080                           
 11081                           	psect	text27
 11082  0CF9                     __ptext27:	
 11083 ;; *************** function _NEMS_set_contractions *****************
 11084 ;; Defined at:
 11085 ;;		line 244 in file "NEMS.c"
 11086 ;; Parameters:    Size  Location     Type
 11087 ;;		None
 11088 ;; Auto vars:     Size  Location     Type
 11089 ;;		None
 11090 ;; Return value:  Size  Location     Type
 11091 ;;                  1    wreg      void 
 11092 ;; Registers used:
 11093 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11094 ;; Tracked objects:
 11095 ;;		On entry : 0/0
 11096 ;;		On exit  : 3F/0
 11097 ;;		Unchanged: 0/0
 11098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11103 ;;Total ram usage:        0 bytes
 11104 ;; Hardware stack levels used:    1
 11105 ;; Hardware stack levels required when called:    6
 11106 ;; This function calls:
 11107 ;;		_NEMS_get_packet
 11108 ;;		__puts
 11109 ;; This function is called by:
 11110 ;;		_NEMS_message_handler
 11111 ;; This function uses a non-reentrant model
 11112 ;;
 11113                           
 11114                           
 11115                           ;psect for function _NEMS_set_contractions
 11116  0CF9                     _NEMS_set_contractions:	
 11117                           
 11118                           ;NEMS.c: 246:     if(NEMS_get_packet(&program.contractions)) {
 11119                           
 11120                           ;incstack = 0
 11121                           ; Regs used in _NEMS_set_contractions: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11122  0CF9  3061               	movlw	(low ((_program| 0+6)))& (0+255)
 11123  0CFA  318F  277E  318C   	fcall	_NEMS_get_packet
 11124  0CFD  3A00               	xorlw	0
 11125  0CFE  1903               	skipnz
 11126  0CFF  2D08               	goto	l3623
 11127                           
 11128                           ;NEMS.c: 247:         _puts("c-ok ");
 11129  0D00  306F               	movlw	low (STR_14| (0+32768))
 11130  0D01  0140               	movlb	0	; select bank0
 11131  0D02  00A2               	movwf	__puts@pt
 11132  0D03  3091               	movlw	high (STR_14| (0+32768))
 11133  0D04  00A3               	movwf	__puts@pt+1
 11134  0D05  318E  2681         	fcall	__puts
 11135                           
 11136                           ;NEMS.c: 249:     } else {
 11137  0D07  0008               	return
 11138  0D08                     l3623:	
 11139                           
 11140                           ;NEMS.c: 250:         _puts("c-err ");
 11141  0D08  3020               	movlw	low (STR_15| (0+32768))
 11142  0D09  0140               	movlb	0	; select bank0
 11143  0D0A  00A2               	movwf	__puts@pt
 11144  0D0B  3091               	movlw	high (STR_15| (0+32768))
 11145  0D0C  00A3               	movwf	__puts@pt+1
 11146  0D0D  318E  2681         	fcall	__puts
 11147  0D0F  0008               	return
 11148  0D10                     __end_of_NEMS_set_contractions:	
 11149                           
 11150                           	psect	text28
 11151  0CE2                     __ptext28:	
 11152 ;; *************** function _NEMS_set_channel2 *****************
 11153 ;; Defined at:
 11154 ;;		line 348 in file "NEMS.c"
 11155 ;; Parameters:    Size  Location     Type
 11156 ;;		None
 11157 ;; Auto vars:     Size  Location     Type
 11158 ;;		None
 11159 ;; Return value:  Size  Location     Type
 11160 ;;                  1    wreg      void 
 11161 ;; Registers used:
 11162 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11163 ;; Tracked objects:
 11164 ;;		On entry : 0/0
 11165 ;;		On exit  : 3F/0
 11166 ;;		Unchanged: 0/0
 11167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11172 ;;Total ram usage:        0 bytes
 11173 ;; Hardware stack levels used:    1
 11174 ;; Hardware stack levels required when called:    6
 11175 ;; This function calls:
 11176 ;;		_NEMS_get_packet
 11177 ;;		__puts
 11178 ;; This function is called by:
 11179 ;;		_NEMS_message_handler
 11180 ;; This function uses a non-reentrant model
 11181 ;;
 11182                           
 11183                           
 11184                           ;psect for function _NEMS_set_channel2
 11185  0CE2                     _NEMS_set_channel2:	
 11186                           
 11187                           ;NEMS.c: 350:     if(NEMS_get_packet(&program.channel2)) {
 11188                           
 11189                           ;incstack = 0
 11190                           ; Regs used in _NEMS_set_channel2: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11191  0CE2  3065               	movlw	(low ((_program| 0+10)))& (0+255)
 11192  0CE3  318F  277E  318C   	fcall	_NEMS_get_packet
 11193  0CE6  3A00               	xorlw	0
 11194  0CE7  1903               	skipnz
 11195  0CE8  2CF1               	goto	l3821
 11196                           
 11197                           ;NEMS.c: 351:         _puts("m-ok ");
 11198  0CE9  308D               	movlw	low (STR_45| (0+32768))
 11199  0CEA  0140               	movlb	0	; select bank0
 11200  0CEB  00A2               	movwf	__puts@pt
 11201  0CEC  3091               	movlw	high (STR_45| (0+32768))
 11202  0CED  00A3               	movwf	__puts@pt+1
 11203  0CEE  318E  2681         	fcall	__puts
 11204                           
 11205                           ;NEMS.c: 353:     } else {
 11206  0CF0  0008               	return
 11207  0CF1                     l3821:	
 11208                           
 11209                           ;NEMS.c: 354:         _puts("m-err ");
 11210  0CF1  303C               	movlw	low (STR_46| (0+32768))
 11211  0CF2  0140               	movlb	0	; select bank0
 11212  0CF3  00A2               	movwf	__puts@pt
 11213  0CF4  3091               	movlw	high (STR_46| (0+32768))
 11214  0CF5  00A3               	movwf	__puts@pt+1
 11215  0CF6  318E  2681         	fcall	__puts
 11216  0CF8  0008               	return
 11217  0CF9                     __end_of_NEMS_set_channel2:	
 11218                           
 11219                           	psect	text29
 11220  0CCB                     __ptext29:	
 11221 ;; *************** function _NEMS_set_channel1 *****************
 11222 ;; Defined at:
 11223 ;;		line 338 in file "NEMS.c"
 11224 ;; Parameters:    Size  Location     Type
 11225 ;;		None
 11226 ;; Auto vars:     Size  Location     Type
 11227 ;;		None
 11228 ;; Return value:  Size  Location     Type
 11229 ;;                  1    wreg      void 
 11230 ;; Registers used:
 11231 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11232 ;; Tracked objects:
 11233 ;;		On entry : 0/0
 11234 ;;		On exit  : 3F/0
 11235 ;;		Unchanged: 0/0
 11236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11241 ;;Total ram usage:        0 bytes
 11242 ;; Hardware stack levels used:    1
 11243 ;; Hardware stack levels required when called:    6
 11244 ;; This function calls:
 11245 ;;		_NEMS_get_packet
 11246 ;;		__puts
 11247 ;; This function is called by:
 11248 ;;		_NEMS_message_handler
 11249 ;; This function uses a non-reentrant model
 11250 ;;
 11251                           
 11252                           
 11253                           ;psect for function _NEMS_set_channel1
 11254  0CCB                     _NEMS_set_channel1:	
 11255                           
 11256                           ;NEMS.c: 340:     if(NEMS_get_packet(&program.channel1)) {
 11257                           
 11258                           ;incstack = 0
 11259                           ; Regs used in _NEMS_set_channel1: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11260  0CCB  3064               	movlw	(low ((_program| 0+9)))& (0+255)
 11261  0CCC  318F  277E  318C   	fcall	_NEMS_get_packet
 11262  0CCF  3A00               	xorlw	0
 11263  0CD0  1903               	skipnz
 11264  0CD1  2CDA               	goto	l3815
 11265                           
 11266                           ;NEMS.c: 341:         _puts("M-ok ");
 11267  0CD2  3051               	movlw	low (STR_43| (0+32768))
 11268  0CD3  0140               	movlb	0	; select bank0
 11269  0CD4  00A2               	movwf	__puts@pt
 11270  0CD5  3091               	movlw	high (STR_43| (0+32768))
 11271  0CD6  00A3               	movwf	__puts@pt+1
 11272  0CD7  318E  2681         	fcall	__puts
 11273                           
 11274                           ;NEMS.c: 343:     } else {
 11275  0CD9  0008               	return
 11276  0CDA                     l3815:	
 11277                           
 11278                           ;NEMS.c: 344:         _puts("M-err ");
 11279  0CDA  3004               	movlw	low (STR_44| (0+32768))
 11280  0CDB  0140               	movlb	0	; select bank0
 11281  0CDC  00A2               	movwf	__puts@pt
 11282  0CDD  3091               	movlw	high (STR_44| (0+32768))
 11283  0CDE  00A3               	movwf	__puts@pt+1
 11284  0CDF  318E  2681         	fcall	__puts
 11285  0CE1  0008               	return
 11286  0CE2                     __end_of_NEMS_set_channel1:	
 11287                           
 11288                           	psect	text30
 11289  0CB4                     __ptext30:	
 11290 ;; *************** function _NEMS_set_amplitude *****************
 11291 ;; Defined at:
 11292 ;;		line 183 in file "NEMS.c"
 11293 ;; Parameters:    Size  Location     Type
 11294 ;;		None
 11295 ;; Auto vars:     Size  Location     Type
 11296 ;;		None
 11297 ;; Return value:  Size  Location     Type
 11298 ;;                  1    wreg      void 
 11299 ;; Registers used:
 11300 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11301 ;; Tracked objects:
 11302 ;;		On entry : 0/0
 11303 ;;		On exit  : 3F/0
 11304 ;;		Unchanged: 0/0
 11305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11310 ;;Total ram usage:        0 bytes
 11311 ;; Hardware stack levels used:    1
 11312 ;; Hardware stack levels required when called:    6
 11313 ;; This function calls:
 11314 ;;		_NEMS_get_packet
 11315 ;;		__puts
 11316 ;; This function is called by:
 11317 ;;		_NEMS_message_handler
 11318 ;; This function uses a non-reentrant model
 11319 ;;
 11320                           
 11321                           
 11322                           ;psect for function _NEMS_set_amplitude
 11323  0CB4                     _NEMS_set_amplitude:	
 11324                           
 11325                           ;NEMS.c: 185:     if(NEMS_get_packet(&program.amplitude)) {
 11326                           
 11327                           ;incstack = 0
 11328                           ; Regs used in _NEMS_set_amplitude: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11329  0CB4  305B               	movlw	(low (_program| 0))& (0+255)
 11330  0CB5  318F  277E  318C   	fcall	_NEMS_get_packet
 11331  0CB8  3A00               	xorlw	0
 11332  0CB9  1903               	skipnz
 11333  0CBA  2CC3               	goto	l3587
 11334                           
 11335                           ;NEMS.c: 186:         _puts("a-ok ");
 11336  0CBB  3069               	movlw	low (STR_2| (0+32768))
 11337  0CBC  0140               	movlb	0	; select bank0
 11338  0CBD  00A2               	movwf	__puts@pt
 11339  0CBE  3091               	movlw	high (STR_2| (0+32768))
 11340  0CBF  00A3               	movwf	__puts@pt+1
 11341  0CC0  318E  2681         	fcall	__puts
 11342                           
 11343                           ;NEMS.c: 188:     } else {
 11344  0CC2  0008               	return
 11345  0CC3                     l3587:	
 11346                           
 11347                           ;NEMS.c: 189:         _puts("a-err ");
 11348  0CC3  3019               	movlw	low (STR_3| (0+32768))
 11349  0CC4  0140               	movlb	0	; select bank0
 11350  0CC5  00A2               	movwf	__puts@pt
 11351  0CC6  3091               	movlw	high (STR_3| (0+32768))
 11352  0CC7  00A3               	movwf	__puts@pt+1
 11353  0CC8  318E  2681         	fcall	__puts
 11354  0CCA  0008               	return
 11355  0CCB                     __end_of_NEMS_set_amplitude:	
 11356                           
 11357                           	psect	text31
 11358  0C9D                     __ptext31:	
 11359 ;; *************** function _NEMS_set_ON_time *****************
 11360 ;; Defined at:
 11361 ;;		line 224 in file "NEMS.c"
 11362 ;; Parameters:    Size  Location     Type
 11363 ;;		None
 11364 ;; Auto vars:     Size  Location     Type
 11365 ;;		None
 11366 ;; Return value:  Size  Location     Type
 11367 ;;                  1    wreg      void 
 11368 ;; Registers used:
 11369 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11370 ;; Tracked objects:
 11371 ;;		On entry : 0/0
 11372 ;;		On exit  : 3F/0
 11373 ;;		Unchanged: 0/0
 11374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11379 ;;Total ram usage:        0 bytes
 11380 ;; Hardware stack levels used:    1
 11381 ;; Hardware stack levels required when called:    6
 11382 ;; This function calls:
 11383 ;;		_NEMS_get_packet
 11384 ;;		__puts
 11385 ;; This function is called by:
 11386 ;;		_NEMS_message_handler
 11387 ;; This function uses a non-reentrant model
 11388 ;;
 11389                           
 11390                           
 11391                           ;psect for function _NEMS_set_ON_time
 11392  0C9D                     _NEMS_set_ON_time:	
 11393                           
 11394                           ;NEMS.c: 226:     if(NEMS_get_packet(&program.ON_time)) {
 11395                           
 11396                           ;incstack = 0
 11397                           ; Regs used in _NEMS_set_ON_time: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11398  0C9D  305F               	movlw	(low ((_program| 0+4)))& (0+255)
 11399  0C9E  318F  277E  318C   	fcall	_NEMS_get_packet
 11400  0CA1  3A00               	xorlw	0
 11401  0CA2  1903               	skipnz
 11402  0CA3  2CAC               	goto	l3611
 11403                           
 11404                           ;NEMS.c: 227:         _puts("o-ok ");
 11405  0CA4  3099               	movlw	low (STR_10| (0+32768))
 11406  0CA5  0140               	movlb	0	; select bank0
 11407  0CA6  00A2               	movwf	__puts@pt
 11408  0CA7  3091               	movlw	high (STR_10| (0+32768))
 11409  0CA8  00A3               	movwf	__puts@pt+1
 11410  0CA9  318E  2681         	fcall	__puts
 11411                           
 11412                           ;NEMS.c: 229:     } else {
 11413  0CAB  0008               	return
 11414  0CAC                     l3611:	
 11415                           
 11416                           ;NEMS.c: 230:         _puts("o-err ");
 11417  0CAC  3043               	movlw	low (STR_11| (0+32768))
 11418  0CAD  0140               	movlb	0	; select bank0
 11419  0CAE  00A2               	movwf	__puts@pt
 11420  0CAF  3091               	movlw	high (STR_11| (0+32768))
 11421  0CB0  00A3               	movwf	__puts@pt+1
 11422  0CB1  318E  2681         	fcall	__puts
 11423  0CB3  0008               	return
 11424  0CB4                     __end_of_NEMS_set_ON_time:	
 11425                           
 11426                           	psect	text32
 11427  0C86                     __ptext32:	
 11428 ;; *************** function _NEMS_set_OFF_time *****************
 11429 ;; Defined at:
 11430 ;;		line 234 in file "NEMS.c"
 11431 ;; Parameters:    Size  Location     Type
 11432 ;;		None
 11433 ;; Auto vars:     Size  Location     Type
 11434 ;;		None
 11435 ;; Return value:  Size  Location     Type
 11436 ;;                  1    wreg      void 
 11437 ;; Registers used:
 11438 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11439 ;; Tracked objects:
 11440 ;;		On entry : 0/0
 11441 ;;		On exit  : 3F/0
 11442 ;;		Unchanged: 0/0
 11443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11448 ;;Total ram usage:        0 bytes
 11449 ;; Hardware stack levels used:    1
 11450 ;; Hardware stack levels required when called:    6
 11451 ;; This function calls:
 11452 ;;		_NEMS_get_packet
 11453 ;;		__puts
 11454 ;; This function is called by:
 11455 ;;		_NEMS_message_handler
 11456 ;; This function uses a non-reentrant model
 11457 ;;
 11458                           
 11459                           
 11460                           ;psect for function _NEMS_set_OFF_time
 11461  0C86                     _NEMS_set_OFF_time:	
 11462                           
 11463                           ;NEMS.c: 236:     if(NEMS_get_packet(&program.OFF_time)) {
 11464                           
 11465                           ;incstack = 0
 11466                           ; Regs used in _NEMS_set_OFF_time: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11467  0C86  3060               	movlw	(low ((_program| 0+5)))& (0+255)
 11468  0C87  318F  277E  318C   	fcall	_NEMS_get_packet
 11469  0C8A  3A00               	xorlw	0
 11470  0C8B  1903               	skipnz
 11471  0C8C  2C95               	goto	l3617
 11472                           
 11473                           ;NEMS.c: 237:         _puts("O-ok ");
 11474  0C8D  305D               	movlw	low (STR_12| (0+32768))
 11475  0C8E  0140               	movlb	0	; select bank0
 11476  0C8F  00A2               	movwf	__puts@pt
 11477  0C90  3091               	movlw	high (STR_12| (0+32768))
 11478  0C91  00A3               	movwf	__puts@pt+1
 11479  0C92  318E  2681         	fcall	__puts
 11480                           
 11481                           ;NEMS.c: 239:     } else {
 11482  0C94  0008               	return
 11483  0C95                     l3617:	
 11484                           
 11485                           ;NEMS.c: 240:         _puts("O-err ");
 11486  0C95  300B               	movlw	low (STR_13| (0+32768))
 11487  0C96  0140               	movlb	0	; select bank0
 11488  0C97  00A2               	movwf	__puts@pt
 11489  0C98  3091               	movlw	high (STR_13| (0+32768))
 11490  0C99  00A3               	movwf	__puts@pt+1
 11491  0C9A  318E  2681         	fcall	__puts
 11492  0C9C  0008               	return
 11493  0C9D                     __end_of_NEMS_set_OFF_time:	
 11494                           
 11495                           	psect	text33
 11496  0F7E                     __ptext33:	
 11497 ;; *************** function _NEMS_get_packet *****************
 11498 ;; Defined at:
 11499 ;;		line 163 in file "NEMS.c"
 11500 ;; Parameters:    Size  Location     Type
 11501 ;;  pt              1    wreg     PTR unsigned char 
 11502 ;;		 -> program.channel2(1), program.channel1(1), program.symmetry_factor(1), program.ramp_down(1), 
 11503 ;;		 -> program.ramp_up(1), program.contractions(1), program.OFF_time(1), program.ON_time(1), 
 11504 ;;		 -> program.phase_duration(1), program.frequency(1), program.amplitude(1), program(11), 
 11505 ;; Auto vars:     Size  Location     Type
 11506 ;;  pt              1    8[BANK0 ] PTR unsigned char 
 11507 ;;		 -> program.channel2(1), program.channel1(1), program.symmetry_factor(1), program.ramp_down(1), 
 11508 ;;		 -> program.ramp_up(1), program.contractions(1), program.OFF_time(1), program.ON_time(1), 
 11509 ;;		 -> program.phase_duration(1), program.frequency(1), program.amplitude(1), program(11), 
 11510 ;;  message         2    6[BANK0 ] unsigned char [2]
 11511 ;; Return value:  Size  Location     Type
 11512 ;;                  1    wreg      unsigned char 
 11513 ;; Registers used:
 11514 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11515 ;; Tracked objects:
 11516 ;;		On entry : 0/0
 11517 ;;		On exit  : 0/0
 11518 ;;		Unchanged: 0/0
 11519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11521 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11522 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11523 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11524 ;;Total ram usage:        5 bytes
 11525 ;; Hardware stack levels used:    1
 11526 ;; Hardware stack levels required when called:    5
 11527 ;; This function calls:
 11528 ;;		_EUSART1_Read
 11529 ;;		___bmul
 11530 ;; This function is called by:
 11531 ;;		_NEMS_set_amplitude
 11532 ;;		_NEMS_set_frequency
 11533 ;;		_NEMS_set_phase_duration
 11534 ;;		_NEMS_set_symmetry_factor
 11535 ;;		_NEMS_set_ON_time
 11536 ;;		_NEMS_set_OFF_time
 11537 ;;		_NEMS_set_contractions
 11538 ;;		_NEMS_set_ramp_up
 11539 ;;		_NEMS_set_ramp_down
 11540 ;;		_NEMS_set_channel1
 11541 ;;		_NEMS_set_channel2
 11542 ;; This function uses a non-reentrant model
 11543 ;;
 11544                           
 11545                           
 11546                           ;psect for function _NEMS_get_packet
 11547  0F7E                     _NEMS_get_packet:	
 11548                           
 11549                           ;incstack = 0
 11550                           ; Regs used in _NEMS_get_packet: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11551                           ;NEMS_get_packet@pt stored from wreg
 11552  0F7E  0140               	movlb	0	; select bank0
 11553  0F7F  00A8               	movwf	NEMS_get_packet@pt
 11554                           
 11555                           ;NEMS.c: 163: unsigned char NEMS_get_packet(unsigned char* pt);NEMS.c: 164: {;NEMS.c: 16
      +                          5:     unsigned char message[2];;NEMS.c: 167:     _delay((unsigned long)((10)*(32000000/
      +                          4000.0)));
 11556  0F80  3068               	movlw	104
 11557  0F81  0140               	movlb	0	; select bank0
 11558  0F82  00A4               	movwf	??_NEMS_get_packet
 11559  0F83  30E4               	movlw	228
 11560  0F84                     u2117:	
 11561  0F84  0B89               	decfsz	9,f
 11562  0F85  2F84               	goto	u2117
 11563  0F86  0BA4               	decfsz	??_NEMS_get_packet,f
 11564  0F87  2F84               	goto	u2117
 11565  0F88  0000               	nop
 11566                           
 11567                           ;NEMS.c: 169:     if (eusart1RxCount == 2) {
 11568  0F89  3002               	movlw	2
 11569  0F8A  0671               	xorwf	_eusart1RxCount,w	;volatile
 11570  0F8B  1D03               	btfss	3,2
 11571  0F8C  2FBB               	goto	l3363
 11572                           
 11573                           ;NEMS.c: 170:         message[0] = EUSART1_Read();
 11574  0F8D  318E  265D  318F   	fcall	_EUSART1_Read
 11575  0F90  00A4               	movwf	??_NEMS_get_packet
 11576  0F91  0824               	movf	??_NEMS_get_packet,w
 11577  0F92  00A6               	movwf	NEMS_get_packet@message
 11578                           
 11579                           ;NEMS.c: 171:         message[1] = EUSART1_Read();
 11580  0F93  318E  265D  318F   	fcall	_EUSART1_Read
 11581  0F96  00A4               	movwf	??_NEMS_get_packet
 11582  0F97  0824               	movf	??_NEMS_get_packet,w
 11583  0F98  00A7               	movwf	NEMS_get_packet@message+1
 11584                           
 11585                           ;NEMS.c: 173:         *pt = message[0] - '0';
 11586  0F99  0826               	movf	NEMS_get_packet@message,w
 11587  0F9A  3ED0               	addlw	208
 11588  0F9B  00A4               	movwf	??_NEMS_get_packet
 11589  0F9C  0828               	movf	NEMS_get_packet@pt,w
 11590  0F9D  0086               	movwf	6
 11591  0F9E  0187               	clrf	7
 11592  0F9F  0824               	movf	??_NEMS_get_packet,w
 11593  0FA0  0081               	movwf	1
 11594                           
 11595                           ;NEMS.c: 174:         *pt *= 10;
 11596  0FA1  0828               	movf	NEMS_get_packet@pt,w
 11597  0FA2  0086               	movwf	6
 11598  0FA3  0187               	clrf	7
 11599  0FA4  0801               	movf	1,w
 11600  0FA5  00A4               	movwf	??_NEMS_get_packet
 11601  0FA6  0824               	movf	??_NEMS_get_packet,w
 11602  0FA7  00A0               	movwf	___bmul@multiplicand
 11603  0FA8  300A               	movlw	10
 11604  0FA9  318C  2425         	fcall	___bmul
 11605  0FAB  00A5               	movwf	??_NEMS_get_packet+1
 11606  0FAC  0828               	movf	NEMS_get_packet@pt,w
 11607  0FAD  0086               	movwf	6
 11608  0FAE  0187               	clrf	7
 11609  0FAF  0825               	movf	??_NEMS_get_packet+1,w
 11610  0FB0  0081               	movwf	1
 11611                           
 11612                           ;NEMS.c: 175:         *pt += message[1] - '0';
 11613  0FB1  0827               	movf	NEMS_get_packet@message+1,w
 11614  0FB2  3ED0               	addlw	208
 11615  0FB3  00A4               	movwf	??_NEMS_get_packet
 11616  0FB4  0828               	movf	NEMS_get_packet@pt,w
 11617  0FB5  0086               	movwf	6
 11618  0FB6  0187               	clrf	7
 11619  0FB7  0824               	movf	??_NEMS_get_packet,w
 11620  0FB8  0781               	addwf	1,f
 11621                           
 11622                           ;NEMS.c: 177:         return 1;
 11623  0FB9  3001               	movlw	1
 11624  0FBA  0008               	return
 11625  0FBB                     l3363:	
 11626                           
 11627                           ;NEMS.c: 179:         return 0;
 11628  0FBB  3000               	movlw	0
 11629  0FBC  0008               	return
 11630  0FBD                     __end_of_NEMS_get_packet:	
 11631                           
 11632                           	psect	text34
 11633  0C25                     __ptext34:	
 11634 ;; *************** function ___bmul *****************
 11635 ;; Defined at:
 11636 ;;		line 4 in file "/pkg/microchip/xc8/v2.10/pic/sources/c99/common/Umul8.c"
 11637 ;; Parameters:    Size  Location     Type
 11638 ;;  multiplier      1    wreg     unsigned char 
 11639 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 11640 ;; Auto vars:     Size  Location     Type
 11641 ;;  multiplier      1    3[BANK0 ] unsigned char 
 11642 ;;  product         1    2[BANK0 ] unsigned char 
 11643 ;; Return value:  Size  Location     Type
 11644 ;;                  1    wreg      unsigned char 
 11645 ;; Registers used:
 11646 ;;		wreg, status,2, status,0
 11647 ;; Tracked objects:
 11648 ;;		On entry : 3F/0
 11649 ;;		On exit  : 3F/0
 11650 ;;		Unchanged: 0/0
 11651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11652 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11653 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11654 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11655 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11656 ;;Total ram usage:        4 bytes
 11657 ;; Hardware stack levels used:    1
 11658 ;; Hardware stack levels required when called:    4
 11659 ;; This function calls:
 11660 ;;		Nothing
 11661 ;; This function is called by:
 11662 ;;		_NEMS_get_packet
 11663 ;;		_NEMS_recalculate_program
 11664 ;; This function uses a non-reentrant model
 11665 ;;
 11666                           
 11667                           
 11668                           ;psect for function ___bmul
 11669  0C25                     ___bmul:	
 11670                           
 11671                           ;incstack = 0
 11672                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 11673                           ;___bmul@multiplier stored from wreg
 11674  0C25  00A3               	movwf	___bmul@multiplier
 11675  0C26  01A2               	clrf	___bmul@product
 11676  0C27                     l3291:	
 11677  0C27  1C23               	btfss	___bmul@multiplier,0
 11678  0C28  2C2D               	goto	l3295
 11679  0C29  0820               	movf	___bmul@multiplicand,w
 11680  0C2A  00A1               	movwf	??___bmul
 11681  0C2B  0821               	movf	??___bmul,w
 11682  0C2C  07A2               	addwf	___bmul@product,f
 11683  0C2D                     l3295:	
 11684  0C2D  1003               	clrc
 11685  0C2E  0DA0               	rlf	___bmul@multiplicand,f
 11686  0C2F  1003               	clrc
 11687  0C30  0CA3               	rrf	___bmul@multiplier,f
 11688  0C31  0823               	movf	___bmul@multiplier,w
 11689  0C32  1D03               	btfss	3,2
 11690  0C33  2C27               	goto	l3291
 11691  0C34  0822               	movf	___bmul@product,w
 11692  0C35  0008               	return
 11693  0C36                     __end_of___bmul:	
 11694                           
 11695                           	psect	text35
 11696  0E5D                     __ptext35:	
 11697 ;; *************** function _EUSART1_Read *****************
 11698 ;; Defined at:
 11699 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 11700 ;; Parameters:    Size  Location     Type
 11701 ;;		None
 11702 ;; Auto vars:     Size  Location     Type
 11703 ;;  readValue       1    1[BANK0 ] unsigned char 
 11704 ;; Return value:  Size  Location     Type
 11705 ;;                  1    wreg      unsigned char 
 11706 ;; Registers used:
 11707 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11708 ;; Tracked objects:
 11709 ;;		On entry : 0/0
 11710 ;;		On exit  : 3F/0
 11711 ;;		Unchanged: 0/0
 11712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11714 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11715 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11716 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11717 ;;Total ram usage:        2 bytes
 11718 ;; Hardware stack levels used:    1
 11719 ;; Hardware stack levels required when called:    4
 11720 ;; This function calls:
 11721 ;;		Nothing
 11722 ;; This function is called by:
 11723 ;;		_NEMS_message_handler
 11724 ;;		_NEMS_get_packet
 11725 ;; This function uses a non-reentrant model
 11726 ;;
 11727                           
 11728                           
 11729                           ;psect for function _EUSART1_Read
 11730  0E5D                     _EUSART1_Read:	
 11731  0E5D                     l3235:	
 11732                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 11733                           
 11734                           ;incstack = 0
 11735                           ; Regs used in _EUSART1_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 11736                           
 11737                           
 11738                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 11739  0E5D  0871               	movf	_eusart1RxCount,w	;volatile
 11740  0E5E  1903               	btfsc	3,2
 11741  0E5F  2E5D               	goto	l3235
 11742                           
 11743                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 11744  0E60  0872               	movf	_eusart1RxTail,w	;volatile
 11745  0E61  3E46               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 11746  0E62  0086               	movwf	6
 11747  0E63  0187               	clrf	7
 11748  0E64  0801               	movf	1,w
 11749  0E65  0140               	movlb	0	; select bank0
 11750  0E66  00A0               	movwf	??_EUSART1_Read
 11751  0E67  0820               	movf	??_EUSART1_Read,w
 11752  0E68  00DA               	movwf	_eusart1RxLastError	;volatile
 11753                           
 11754                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 11755  0E69  0872               	movf	_eusart1RxTail,w
 11756  0E6A  3EA0               	addlw	(low (_eusart1RxBuffer| 0))& (0+255)
 11757  0E6B  0086               	movwf	6
 11758  0E6C  0187               	clrf	7
 11759  0E6D  0801               	movf	1,w
 11760  0E6E  00A0               	movwf	??_EUSART1_Read
 11761  0E6F  0820               	movf	??_EUSART1_Read,w
 11762  0E70  00A1               	movwf	EUSART1_Read@readValue
 11763  0E71  3001               	movlw	1
 11764  0E72  00A0               	movwf	??_EUSART1_Read
 11765  0E73  0820               	movf	??_EUSART1_Read,w
 11766  0E74  07F2               	addwf	_eusart1RxTail,f	;volatile
 11767                           
 11768                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 11769  0E75  3008               	movlw	8
 11770  0E76  0272               	subwf	_eusart1RxTail,w
 11771  0E77  1803               	btfsc	3,0
 11772                           
 11773                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 11774  0E78  01F2               	clrf	_eusart1RxTail	;volatile
 11775                           
 11776                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
 11777  0E79  014E               	movlb	14	; select bank14
 11778  0E7A  1299               	bcf	25,5	;volatile
 11779                           
 11780                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 11781  0E7B  3001               	movlw	1
 11782  0E7C  02F1               	subwf	_eusart1RxCount,f	;volatile
 11783                           
 11784                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
 11785  0E7D  1699               	bsf	25,5	;volatile
 11786                           
 11787                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 11788  0E7E  0140               	movlb	0	; select bank0
 11789  0E7F  0821               	movf	EUSART1_Read@readValue,w
 11790  0E80  0008               	return
 11791  0E81                     __end_of_EUSART1_Read:	
 11792                           
 11793                           	psect	text36
 11794  0600                     __ptext36:	
 11795 ;; *************** function _NEMS_save_program *****************
 11796 ;; Defined at:
 11797 ;;		line 358 in file "NEMS.c"
 11798 ;; Parameters:    Size  Location     Type
 11799 ;;		None
 11800 ;; Auto vars:     Size  Location     Type
 11801 ;;  addr            1    9[BANK0 ] unsigned char 
 11802 ;; Return value:  Size  Location     Type
 11803 ;;                  1    wreg      void 
 11804 ;; Registers used:
 11805 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11806 ;; Tracked objects:
 11807 ;;		On entry : 0/0
 11808 ;;		On exit  : 3F/0
 11809 ;;		Unchanged: 0/0
 11810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11812 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11813 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11814 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11815 ;;Total ram usage:        2 bytes
 11816 ;; Hardware stack levels used:    1
 11817 ;; Hardware stack levels required when called:    6
 11818 ;; This function calls:
 11819 ;;		__puts
 11820 ;;		_eeprom_write
 11821 ;; This function is called by:
 11822 ;;		_NEMS_message_handler
 11823 ;; This function uses a non-reentrant model
 11824 ;;
 11825                           
 11826                           
 11827                           ;psect for function _NEMS_save_program
 11828  0600                     _NEMS_save_program:	
 11829                           
 11830                           ;NEMS.c: 360:     unsigned char addr;;NEMS.c: 362:     addr = 0;
 11831                           
 11832                           ;incstack = 0
 11833                           ; Regs used in _NEMS_save_program: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11834  0600  0140               	movlb	0	; select bank0
 11835  0601  01A9               	clrf	NEMS_save_program@addr
 11836                           
 11837                           ;NEMS.c: 363:     eeprom_write(addr++,program.amplitude);
 11838  0602  085B               	movf	_program,w	;volatile
 11839  0603  00A8               	movwf	??_NEMS_save_program
 11840  0604  0828               	movf	??_NEMS_save_program,w
 11841  0605  00A0               	movwf	eeprom_write@value
 11842  0606  3000               	movlw	0
 11843  0607  318D  25F7  3186   	fcall	_eeprom_write
 11844  060A  3001               	movlw	1
 11845  060B  0140               	movlb	0	; select bank0
 11846  060C  00A8               	movwf	??_NEMS_save_program
 11847  060D  0828               	movf	??_NEMS_save_program,w
 11848  060E  07A9               	addwf	NEMS_save_program@addr,f
 11849                           
 11850                           ;NEMS.c: 364:     eeprom_write(addr++,program.frequency);
 11851  060F  085C               	movf	_program+1,w	;volatile
 11852  0610  00A8               	movwf	??_NEMS_save_program
 11853  0611  0828               	movf	??_NEMS_save_program,w
 11854  0612  00A0               	movwf	eeprom_write@value
 11855  0613  0829               	movf	NEMS_save_program@addr,w
 11856  0614  318D  25F7  3186   	fcall	_eeprom_write
 11857  0617  3001               	movlw	1
 11858  0618  0140               	movlb	0	; select bank0
 11859  0619  00A8               	movwf	??_NEMS_save_program
 11860  061A  0828               	movf	??_NEMS_save_program,w
 11861  061B  07A9               	addwf	NEMS_save_program@addr,f
 11862                           
 11863                           ;NEMS.c: 365:     eeprom_write(addr++,program.phase_duration);
 11864  061C  085D               	movf	_program+2,w	;volatile
 11865  061D  00A8               	movwf	??_NEMS_save_program
 11866  061E  0828               	movf	??_NEMS_save_program,w
 11867  061F  00A0               	movwf	eeprom_write@value
 11868  0620  0829               	movf	NEMS_save_program@addr,w
 11869  0621  318D  25F7  3186   	fcall	_eeprom_write
 11870  0624  3001               	movlw	1
 11871  0625  0140               	movlb	0	; select bank0
 11872  0626  00A8               	movwf	??_NEMS_save_program
 11873  0627  0828               	movf	??_NEMS_save_program,w
 11874  0628  07A9               	addwf	NEMS_save_program@addr,f
 11875                           
 11876                           ;NEMS.c: 366:     eeprom_write(addr++,program.symmetry_factor);
 11877  0629  085E               	movf	_program+3,w	;volatile
 11878  062A  00A8               	movwf	??_NEMS_save_program
 11879  062B  0828               	movf	??_NEMS_save_program,w
 11880  062C  00A0               	movwf	eeprom_write@value
 11881  062D  0829               	movf	NEMS_save_program@addr,w
 11882  062E  318D  25F7  3186   	fcall	_eeprom_write
 11883  0631  3001               	movlw	1
 11884  0632  0140               	movlb	0	; select bank0
 11885  0633  00A8               	movwf	??_NEMS_save_program
 11886  0634  0828               	movf	??_NEMS_save_program,w
 11887  0635  07A9               	addwf	NEMS_save_program@addr,f
 11888                           
 11889                           ;NEMS.c: 367:     eeprom_write(addr++,program.ON_time);
 11890  0636  085F               	movf	_program+4,w	;volatile
 11891  0637  00A8               	movwf	??_NEMS_save_program
 11892  0638  0828               	movf	??_NEMS_save_program,w
 11893  0639  00A0               	movwf	eeprom_write@value
 11894  063A  0829               	movf	NEMS_save_program@addr,w
 11895  063B  318D  25F7  3186   	fcall	_eeprom_write
 11896  063E  3001               	movlw	1
 11897  063F  0140               	movlb	0	; select bank0
 11898  0640  00A8               	movwf	??_NEMS_save_program
 11899  0641  0828               	movf	??_NEMS_save_program,w
 11900  0642  07A9               	addwf	NEMS_save_program@addr,f
 11901                           
 11902                           ;NEMS.c: 368:     eeprom_write(addr++,program.OFF_time);
 11903  0643  0860               	movf	_program+5,w	;volatile
 11904  0644  00A8               	movwf	??_NEMS_save_program
 11905  0645  0828               	movf	??_NEMS_save_program,w
 11906  0646  00A0               	movwf	eeprom_write@value
 11907  0647  0829               	movf	NEMS_save_program@addr,w
 11908  0648  318D  25F7  3186   	fcall	_eeprom_write
 11909  064B  3001               	movlw	1
 11910  064C  0140               	movlb	0	; select bank0
 11911  064D  00A8               	movwf	??_NEMS_save_program
 11912  064E  0828               	movf	??_NEMS_save_program,w
 11913  064F  07A9               	addwf	NEMS_save_program@addr,f
 11914                           
 11915                           ;NEMS.c: 369:     eeprom_write(addr++,program.ramp_up);
 11916  0650  0862               	movf	_program+7,w	;volatile
 11917  0651  00A8               	movwf	??_NEMS_save_program
 11918  0652  0828               	movf	??_NEMS_save_program,w
 11919  0653  00A0               	movwf	eeprom_write@value
 11920  0654  0829               	movf	NEMS_save_program@addr,w
 11921  0655  318D  25F7  3186   	fcall	_eeprom_write
 11922  0658  3001               	movlw	1
 11923  0659  0140               	movlb	0	; select bank0
 11924  065A  00A8               	movwf	??_NEMS_save_program
 11925  065B  0828               	movf	??_NEMS_save_program,w
 11926  065C  07A9               	addwf	NEMS_save_program@addr,f
 11927                           
 11928                           ;NEMS.c: 370:     eeprom_write(addr++,program.ramp_down);
 11929  065D  0863               	movf	_program+8,w	;volatile
 11930  065E  00A8               	movwf	??_NEMS_save_program
 11931  065F  0828               	movf	??_NEMS_save_program,w
 11932  0660  00A0               	movwf	eeprom_write@value
 11933  0661  0829               	movf	NEMS_save_program@addr,w
 11934  0662  318D  25F7  3186   	fcall	_eeprom_write
 11935  0665  3001               	movlw	1
 11936  0666  0140               	movlb	0	; select bank0
 11937  0667  00A8               	movwf	??_NEMS_save_program
 11938  0668  0828               	movf	??_NEMS_save_program,w
 11939  0669  07A9               	addwf	NEMS_save_program@addr,f
 11940                           
 11941                           ;NEMS.c: 371:     eeprom_write(addr,program.contractions);
 11942  066A  0861               	movf	_program+6,w	;volatile
 11943  066B  00A8               	movwf	??_NEMS_save_program
 11944  066C  0828               	movf	??_NEMS_save_program,w
 11945  066D  00A0               	movwf	eeprom_write@value
 11946  066E  0829               	movf	NEMS_save_program@addr,w
 11947  066F  318D  25F7  3186   	fcall	_eeprom_write
 11948                           
 11949                           ;NEMS.c: 372:     eeprom_write(addr,program.channel1);
 11950  0672  0140               	movlb	0	; select bank0
 11951  0673  0864               	movf	_program+9,w	;volatile
 11952  0674  00A8               	movwf	??_NEMS_save_program
 11953  0675  0828               	movf	??_NEMS_save_program,w
 11954  0676  00A0               	movwf	eeprom_write@value
 11955  0677  0829               	movf	NEMS_save_program@addr,w
 11956  0678  318D  25F7  3186   	fcall	_eeprom_write
 11957                           
 11958                           ;NEMS.c: 373:     eeprom_write(addr,program.channel2);
 11959  067B  0140               	movlb	0	; select bank0
 11960  067C  0865               	movf	_program+10,w	;volatile
 11961  067D  00A8               	movwf	??_NEMS_save_program
 11962  067E  0828               	movf	??_NEMS_save_program,w
 11963  067F  00A0               	movwf	eeprom_write@value
 11964  0680  0829               	movf	NEMS_save_program@addr,w
 11965  0681  318D  25F7  3186   	fcall	_eeprom_write
 11966                           
 11967                           ;NEMS.c: 376:     _puts("s-ok ");
 11968  0684  30A5               	movlw	low (STR_47| (0+32768))
 11969  0685  0140               	movlb	0	; select bank0
 11970  0686  00A2               	movwf	__puts@pt
 11971  0687  3091               	movlw	high (STR_47| (0+32768))
 11972  0688  00A3               	movwf	__puts@pt+1
 11973  0689  318E  2681         	fcall	__puts
 11974  068B  0008               	return
 11975  068C                     __end_of_NEMS_save_program:	
 11976                           
 11977                           	psect	text37
 11978  0DF7                     __ptext37:	
 11979 ;; *************** function _eeprom_write *****************
 11980 ;; Defined at:
 11981 ;;		line 6 in file "/pkg/microchip/xc8/v2.10/pic/sources/c99/pic/__eewrite.c"
 11982 ;; Parameters:    Size  Location     Type
 11983 ;;  addr            1    wreg     unsigned char 
 11984 ;;  value           1    0[BANK0 ] unsigned char 
 11985 ;; Auto vars:     Size  Location     Type
 11986 ;;  addr            1    1[BANK0 ] unsigned char 
 11987 ;; Return value:  Size  Location     Type
 11988 ;;                  1    wreg      void 
 11989 ;; Registers used:
 11990 ;;		wreg, status,2
 11991 ;; Tracked objects:
 11992 ;;		On entry : 3F/0
 11993 ;;		On exit  : 3F/10
 11994 ;;		Unchanged: 0/0
 11995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11996 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11997 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11999 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12000 ;;Total ram usage:        2 bytes
 12001 ;; Hardware stack levels used:    1
 12002 ;; Hardware stack levels required when called:    4
 12003 ;; This function calls:
 12004 ;;		Nothing
 12005 ;; This function is called by:
 12006 ;;		_NEMS_save_program
 12007 ;; This function uses a non-reentrant model
 12008 ;;
 12009                           
 12010                           
 12011                           ;psect for function _eeprom_write
 12012  0DF7                     _eeprom_write:	
 12013                           
 12014                           ;incstack = 0
 12015                           ; Regs used in _eeprom_write: [wreg+status,2]
 12016                           ;eeprom_write@addr stored from wreg
 12017  0DF7  00A1               	movwf	eeprom_write@addr
 12018  0DF8                     l824:	
 12019                           ;/pkg/microchip/xc8/v2.10/pic/sources/c99/pic/__eewrite.c: 6: eeprom_write(unsigned char
      +                           addr, unsigned char value);/pkg/microchip/xc8/v2.10/pic/sources/c99/pic/__eewrite.c: 7:
      +                           {;/pkg/microchip/xc8/v2.10/pic/sources/c99/pic/__eewrite.c: 8:  do { while (NVMCON1bits
      +                          .WR) { continue; } NVMCON1bits.NVMREGS = 1; NVMADRL = (addr) & 0xFFU; NVMADRH = 0x70; NV
      +                          MDATH = 0; NVMDATL = (value) & 0xFFU; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUS
      +                          bits.CARRY = 1; } INTCONbits.GIE = 0; NVMCON1bits.WREN = 1; NVMCON2 = 0x55; NVMCON2 = 0x
      +                          AA; NVMCON1bits.WR = 1; while (NVMCON1bits.WR) { continue; } NVMCON1bits.WREN = 0; if (S
      +                          TATUSbits.CARRY) { INTCONbits.GIE = 1; } } while (0);
 12020                           
 12021  0DF8  0150               	movlb	16	; select bank16
 12022  0DF9  189E               	btfsc	30,1	;volsfr
 12023  0DFA  2DF8               	goto	l824
 12024  0DFB  171E               	bsf	30,6	;volsfr
 12025  0DFC  0140               	movlb	0	; select bank0
 12026  0DFD  0821               	movf	eeprom_write@addr,w
 12027  0DFE  0150               	movlb	16	; select bank16
 12028  0DFF  009A               	movwf	26	;volatile
 12029  0E00  3070               	movlw	112
 12030  0E01  009B               	movwf	27	;volatile
 12031  0E02  019D               	clrf	29	;volatile
 12032  0E03  0140               	movlb	0	; select bank0
 12033  0E04  0820               	movf	eeprom_write@value,w
 12034  0E05  0150               	movlb	16	; select bank16
 12035  0E06  009C               	movwf	28	;volatile
 12036  0E07  1003               	bcf	3,0	;volatile
 12037  0E08  1B8B               	btfsc	11,7	;volatile
 12038  0E09  1403               	bsf	3,0	;volatile
 12039  0E0A  138B               	bcf	11,7	;volatile
 12040  0E0B  151E               	bsf	30,2	;volsfr
 12041  0E0C  3055               	movlw	85
 12042  0E0D  009F               	movwf	31	;volsfr
 12043  0E0E  30AA               	movlw	170
 12044  0E0F  009F               	movwf	31	;volsfr
 12045  0E10  149E               	bsf	30,1	;volsfr
 12046  0E11                     l828:	
 12047  0E11  189E               	btfsc	30,1	;volsfr
 12048  0E12  2E11               	goto	l828
 12049  0E13  111E               	bcf	30,2	;volsfr
 12050  0E14  1C03               	btfss	3,0	;volatile
 12051  0E15  0008               	return
 12052  0E16  178B               	bsf	11,7	;volatile
 12053  0E17  0008               	return
 12054  0E18                     __end_of_eeprom_write:	
 12055                           
 12056                           	psect	text38
 12057  068C                     __ptext38:	
 12058 ;; *************** function _NEMS_load_program *****************
 12059 ;; Defined at:
 12060 ;;		line 380 in file "NEMS.c"
 12061 ;; Parameters:    Size  Location     Type
 12062 ;;		None
 12063 ;; Auto vars:     Size  Location     Type
 12064 ;;  addr            2    9[BANK0 ] unsigned short 
 12065 ;; Return value:  Size  Location     Type
 12066 ;;                  1    wreg      void 
 12067 ;; Registers used:
 12068 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12069 ;; Tracked objects:
 12070 ;;		On entry : 0/0
 12071 ;;		On exit  : 3F/0
 12072 ;;		Unchanged: 0/0
 12073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12075 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12076 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12077 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12078 ;;Total ram usage:        3 bytes
 12079 ;; Hardware stack levels used:    1
 12080 ;; Hardware stack levels required when called:    6
 12081 ;; This function calls:
 12082 ;;		__puts
 12083 ;;		_eeprom_read
 12084 ;; This function is called by:
 12085 ;;		_NEMS_message_handler
 12086 ;; This function uses a non-reentrant model
 12087 ;;
 12088                           
 12089                           
 12090                           ;psect for function _NEMS_load_program
 12091  068C                     _NEMS_load_program:	
 12092                           
 12093                           ;NEMS.c: 382:     unsigned short addr;;NEMS.c: 384:     addr = 0;
 12094                           
 12095                           ;incstack = 0
 12096                           ; Regs used in _NEMS_load_program: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12097  068C  0140               	movlb	0	; select bank0
 12098  068D  01A9               	clrf	NEMS_load_program@addr
 12099  068E  01AA               	clrf	NEMS_load_program@addr+1
 12100                           
 12101                           ;NEMS.c: 386:     program.amplitude = eeprom_read(addr++);
 12102  068F  3000               	movlw	0
 12103  0690  318C  2414  3186   	fcall	_eeprom_read
 12104  0693  0140               	movlb	0	; select bank0
 12105  0694  00A8               	movwf	??_NEMS_load_program
 12106  0695  0828               	movf	??_NEMS_load_program,w
 12107  0696  00DB               	movwf	_program	;volatile
 12108  0697  3001               	movlw	1
 12109  0698  07A9               	addwf	NEMS_load_program@addr,f
 12110  0699  3000               	movlw	0
 12111  069A  3DAA               	addwfc	NEMS_load_program@addr+1,f
 12112                           
 12113                           ;NEMS.c: 387:     program.frequency = eeprom_read(addr++);
 12114  069B  0829               	movf	NEMS_load_program@addr,w
 12115  069C  318C  2414  3186   	fcall	_eeprom_read
 12116  069F  0140               	movlb	0	; select bank0
 12117  06A0  00A8               	movwf	??_NEMS_load_program
 12118  06A1  0828               	movf	??_NEMS_load_program,w
 12119  06A2  00DC               	movwf	_program+1	;volatile
 12120  06A3  3001               	movlw	1
 12121  06A4  07A9               	addwf	NEMS_load_program@addr,f
 12122  06A5  3000               	movlw	0
 12123  06A6  3DAA               	addwfc	NEMS_load_program@addr+1,f
 12124                           
 12125                           ;NEMS.c: 388:     program.phase_duration = eeprom_read(addr++);
 12126  06A7  0829               	movf	NEMS_load_program@addr,w
 12127  06A8  318C  2414  3186   	fcall	_eeprom_read
 12128  06AB  0140               	movlb	0	; select bank0
 12129  06AC  00A8               	movwf	??_NEMS_load_program
 12130  06AD  0828               	movf	??_NEMS_load_program,w
 12131  06AE  00DD               	movwf	_program+2	;volatile
 12132  06AF  3001               	movlw	1
 12133  06B0  07A9               	addwf	NEMS_load_program@addr,f
 12134  06B1  3000               	movlw	0
 12135  06B2  3DAA               	addwfc	NEMS_load_program@addr+1,f
 12136                           
 12137                           ;NEMS.c: 389:     program.symmetry_factor = eeprom_read(addr++);
 12138  06B3  0829               	movf	NEMS_load_program@addr,w
 12139  06B4  318C  2414  3186   	fcall	_eeprom_read
 12140  06B7  0140               	movlb	0	; select bank0
 12141  06B8  00A8               	movwf	??_NEMS_load_program
 12142  06B9  0828               	movf	??_NEMS_load_program,w
 12143  06BA  00DE               	movwf	_program+3	;volatile
 12144  06BB  3001               	movlw	1
 12145  06BC  07A9               	addwf	NEMS_load_program@addr,f
 12146  06BD  3000               	movlw	0
 12147  06BE  3DAA               	addwfc	NEMS_load_program@addr+1,f
 12148                           
 12149                           ;NEMS.c: 390:     program.ON_time = eeprom_read(addr++);
 12150  06BF  0829               	movf	NEMS_load_program@addr,w
 12151  06C0  318C  2414  3186   	fcall	_eeprom_read
 12152  06C3  0140               	movlb	0	; select bank0
 12153  06C4  00A8               	movwf	??_NEMS_load_program
 12154  06C5  0828               	movf	??_NEMS_load_program,w
 12155  06C6  00DF               	movwf	_program+4	;volatile
 12156  06C7  3001               	movlw	1
 12157  06C8  07A9               	addwf	NEMS_load_program@addr,f
 12158  06C9  3000               	movlw	0
 12159  06CA  3DAA               	addwfc	NEMS_load_program@addr+1,f
 12160                           
 12161                           ;NEMS.c: 391:     program.OFF_time = eeprom_read(addr++);
 12162  06CB  0829               	movf	NEMS_load_program@addr,w
 12163  06CC  318C  2414  3186   	fcall	_eeprom_read
 12164  06CF  0140               	movlb	0	; select bank0
 12165  06D0  00A8               	movwf	??_NEMS_load_program
 12166  06D1  0828               	movf	??_NEMS_load_program,w
 12167  06D2  00E0               	movwf	_program+5	;volatile
 12168  06D3  3001               	movlw	1
 12169  06D4  07A9               	addwf	NEMS_load_program@addr,f
 12170  06D5  3000               	movlw	0
 12171  06D6  3DAA               	addwfc	NEMS_load_program@addr+1,f
 12172                           
 12173                           ;NEMS.c: 392:     program.ramp_up = eeprom_read(addr++);
 12174  06D7  0829               	movf	NEMS_load_program@addr,w
 12175  06D8  318C  2414  3186   	fcall	_eeprom_read
 12176  06DB  0140               	movlb	0	; select bank0
 12177  06DC  00A8               	movwf	??_NEMS_load_program
 12178  06DD  0828               	movf	??_NEMS_load_program,w
 12179  06DE  00E2               	movwf	_program+7	;volatile
 12180  06DF  3001               	movlw	1
 12181  06E0  07A9               	addwf	NEMS_load_program@addr,f
 12182  06E1  3000               	movlw	0
 12183  06E2  3DAA               	addwfc	NEMS_load_program@addr+1,f
 12184                           
 12185                           ;NEMS.c: 393:     program.ramp_down = eeprom_read(addr++);
 12186  06E3  0829               	movf	NEMS_load_program@addr,w
 12187  06E4  318C  2414  3186   	fcall	_eeprom_read
 12188  06E7  0140               	movlb	0	; select bank0
 12189  06E8  00A8               	movwf	??_NEMS_load_program
 12190  06E9  0828               	movf	??_NEMS_load_program,w
 12191  06EA  00E3               	movwf	_program+8	;volatile
 12192  06EB  3001               	movlw	1
 12193  06EC  07A9               	addwf	NEMS_load_program@addr,f
 12194  06ED  3000               	movlw	0
 12195  06EE  3DAA               	addwfc	NEMS_load_program@addr+1,f
 12196                           
 12197                           ;NEMS.c: 394:     program.contractions = eeprom_read(addr++);
 12198  06EF  0829               	movf	NEMS_load_program@addr,w
 12199  06F0  318C  2414  3186   	fcall	_eeprom_read
 12200  06F3  0140               	movlb	0	; select bank0
 12201  06F4  00A8               	movwf	??_NEMS_load_program
 12202  06F5  0828               	movf	??_NEMS_load_program,w
 12203  06F6  00E1               	movwf	_program+6	;volatile
 12204  06F7  3001               	movlw	1
 12205  06F8  07A9               	addwf	NEMS_load_program@addr,f
 12206  06F9  3000               	movlw	0
 12207  06FA  3DAA               	addwfc	NEMS_load_program@addr+1,f
 12208                           
 12209                           ;NEMS.c: 395:     program.channel1 = eeprom_read(addr++);
 12210  06FB  0829               	movf	NEMS_load_program@addr,w
 12211  06FC  318C  2414  3186   	fcall	_eeprom_read
 12212  06FF  0140               	movlb	0	; select bank0
 12213  0700  00A8               	movwf	??_NEMS_load_program
 12214  0701  0828               	movf	??_NEMS_load_program,w
 12215  0702  00E4               	movwf	_program+9	;volatile
 12216  0703  3001               	movlw	1
 12217  0704  07A9               	addwf	NEMS_load_program@addr,f
 12218  0705  3000               	movlw	0
 12219  0706  3DAA               	addwfc	NEMS_load_program@addr+1,f
 12220                           
 12221                           ;NEMS.c: 396:     program.channel2 = eeprom_read(addr);
 12222  0707  0829               	movf	NEMS_load_program@addr,w
 12223  0708  318C  2414  3186   	fcall	_eeprom_read
 12224  070B  0140               	movlb	0	; select bank0
 12225  070C  00A8               	movwf	??_NEMS_load_program
 12226  070D  0828               	movf	??_NEMS_load_program,w
 12227  070E  00E5               	movwf	_program+10	;volatile
 12228                           
 12229                           ;NEMS.c: 399:     _puts("l-ok ");
 12230  070F  3087               	movlw	low (STR_48| (0+32768))
 12231  0710  00A2               	movwf	__puts@pt
 12232  0711  3091               	movlw	high (STR_48| (0+32768))
 12233  0712  00A3               	movwf	__puts@pt+1
 12234  0713  318E  2681         	fcall	__puts
 12235  0715  0008               	return
 12236  0716                     __end_of_NEMS_load_program:	
 12237                           
 12238                           	psect	text39
 12239  0C14                     __ptext39:	
 12240 ;; *************** function _eeprom_read *****************
 12241 ;; Defined at:
 12242 ;;		line 6 in file "/pkg/microchip/xc8/v2.10/pic/sources/c99/pic/__eeread.c"
 12243 ;; Parameters:    Size  Location     Type
 12244 ;;  addr            1    wreg     unsigned char 
 12245 ;; Auto vars:     Size  Location     Type
 12246 ;;  addr            1    0[BANK0 ] unsigned char 
 12247 ;; Return value:  Size  Location     Type
 12248 ;;                  1    wreg      unsigned char 
 12249 ;; Registers used:
 12250 ;;		wreg
 12251 ;; Tracked objects:
 12252 ;;		On entry : 3F/0
 12253 ;;		On exit  : 3F/10
 12254 ;;		Unchanged: 0/0
 12255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12257 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12259 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12260 ;;Total ram usage:        1 bytes
 12261 ;; Hardware stack levels used:    1
 12262 ;; Hardware stack levels required when called:    4
 12263 ;; This function calls:
 12264 ;;		Nothing
 12265 ;; This function is called by:
 12266 ;;		_NEMS_load_program
 12267 ;; This function uses a non-reentrant model
 12268 ;;
 12269                           
 12270                           
 12271                           ;psect for function _eeprom_read
 12272  0C14                     _eeprom_read:	
 12273                           
 12274                           ;incstack = 0
 12275                           ; Regs used in _eeprom_read: [wreg]
 12276                           ;eeprom_read@addr stored from wreg
 12277  0C14  00A0               	movwf	eeprom_read@addr
 12278  0C15  2C17               	goto	l802
 12279  0C16                     u1941:	
 12280  0C16  0140               	movlb	0	; select bank0
 12281  0C17                     l802:	
 12282                           ;/pkg/microchip/xc8/v2.10/pic/sources/c99/pic/__eeread.c: 6: eeprom_read(unsigned char a
      +                          ddr);/pkg/microchip/xc8/v2.10/pic/sources/c99/pic/__eeread.c: 7: {;/pkg/microchip/xc8/v2
      +                          .10/pic/sources/c99/pic/__eeread.c: 8:  do
 12283                           
 12284  0C17  0064               	clrwdt	;# 
 12285  0C18  0150               	movlb	16	; select bank16
 12286  0C19  189E               	btfsc	30,1	;volsfr
 12287  0C1A  2C16               	goto	u1941
 12288                           
 12289                           ;/pkg/microchip/xc8/v2.10/pic/sources/c99/pic/__eeread.c: 18:  return ( NVMCON1bits.NVMR
      +                          EGS = 1, NVMADRL = (addr) & 0xFFU, NVMADRH = 0x70, NVMCON1bits.RD = 1, NVMDATL);
 12290  0C1B  171E               	bsf	30,6	;volsfr
 12291  0C1C  0140               	movlb	0	; select bank0
 12292  0C1D  0820               	movf	eeprom_read@addr,w
 12293  0C1E  0150               	movlb	16	; select bank16
 12294  0C1F  009A               	movwf	26	;volatile
 12295  0C20  3070               	movlw	112
 12296  0C21  009B               	movwf	27	;volatile
 12297  0C22  141E               	bsf	30,0	;volsfr
 12298  0C23  081C               	movf	28,w	;volatile
 12299  0C24  0008               	return
 12300  0C25                     __end_of_eeprom_read:	
 12301                           
 12302                           	psect	text40
 12303  0376                     __ptext40:	
 12304 ;; *************** function _NEMS_get_program *****************
 12305 ;; Defined at:
 12306 ;;		line 275 in file "NEMS.c"
 12307 ;; Parameters:    Size  Location     Type
 12308 ;;		None
 12309 ;; Auto vars:     Size  Location     Type
 12310 ;;  aux             4   25[BANK0 ] unsigned char [4]
 12311 ;; Return value:  Size  Location     Type
 12312 ;;                  1    wreg      void 
 12313 ;; Registers used:
 12314 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12315 ;; Tracked objects:
 12316 ;;		On entry : 0/0
 12317 ;;		On exit  : 3F/0
 12318 ;;		Unchanged: 0/0
 12319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12321 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12322 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12323 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12324 ;;Total ram usage:        5 bytes
 12325 ;; Hardware stack levels used:    1
 12326 ;; Hardware stack levels required when called:    6
 12327 ;; This function calls:
 12328 ;;		__puts
 12329 ;;		__sprintf_u8b
 12330 ;; This function is called by:
 12331 ;;		_NEMS_message_handler
 12332 ;; This function uses a non-reentrant model
 12333 ;;
 12334                           
 12335                           
 12336                           ;psect for function _NEMS_get_program
 12337  0376                     _NEMS_get_program:	
 12338                           
 12339                           ;NEMS.c: 277:     unsigned char aux[4];;NEMS.c: 279:     _puts("\nNEMS program\n");
 12340                           
 12341                           ;incstack = 0
 12342                           ; Regs used in _NEMS_get_program: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12343  0376  30CE               	movlw	low (STR_20| (0+32768))
 12344  0377  0140               	movlb	0	; select bank0
 12345  0378  00A2               	movwf	__puts@pt
 12346  0379  3090               	movlw	high (STR_20| (0+32768))
 12347  037A  00A3               	movwf	__puts@pt+1
 12348  037B  318E  2681  3183   	fcall	__puts
 12349                           
 12350                           ;NEMS.c: 281:     _sprintf_u8b(aux,program.amplitude);
 12351  037E  085B               	movf	_program,w	;volatile
 12352  037F  00B8               	movwf	??_NEMS_get_program
 12353  0380  0838               	movf	??_NEMS_get_program,w
 12354  0381  00AF               	movwf	__sprintf_u8b@val
 12355  0382  3039               	movlw	(low (NEMS_get_program@aux| 0))& (0+255)
 12356  0383  3185  2571  3183   	fcall	__sprintf_u8b
 12357                           
 12358                           ;NEMS.c: 282:     _puts("Amplitude (mA): ");
 12359  0386  308C               	movlw	low (STR_21| (0+32768))
 12360  0387  00A2               	movwf	__puts@pt
 12361  0388  3090               	movlw	high (STR_21| (0+32768))
 12362  0389  00A3               	movwf	__puts@pt+1
 12363  038A  318E  2681  3183   	fcall	__puts
 12364                           
 12365                           ;NEMS.c: 283:     _puts(aux);
 12366  038D  3039               	movlw	low NEMS_get_program@aux
 12367  038E  00A2               	movwf	__puts@pt
 12368  038F  3000               	movlw	high NEMS_get_program@aux
 12369  0390  00A3               	movwf	__puts@pt+1
 12370  0391  318E  2681  3183   	fcall	__puts
 12371                           
 12372                           ;NEMS.c: 284:     _puts("\n");
 12373  0394  301A               	movlw	low ((STR_49+26)| (0+32768))
 12374  0395  00A2               	movwf	__puts@pt
 12375  0396  3090               	movlw	high ((STR_49+26)| (0+32768))
 12376  0397  00A3               	movwf	__puts@pt+1
 12377  0398  318E  2681  3183   	fcall	__puts
 12378                           
 12379                           ;NEMS.c: 286:     _sprintf_u8b(aux,program.frequency);
 12380  039B  085C               	movf	_program+1,w	;volatile
 12381  039C  00B8               	movwf	??_NEMS_get_program
 12382  039D  0838               	movf	??_NEMS_get_program,w
 12383  039E  00AF               	movwf	__sprintf_u8b@val
 12384  039F  3039               	movlw	(low (NEMS_get_program@aux| 0))& (0+255)
 12385  03A0  3185  2571  3183   	fcall	__sprintf_u8b
 12386                           
 12387                           ;NEMS.c: 287:     _puts("Frequency (Hz): ");
 12388  03A3  309D               	movlw	low (STR_23| (0+32768))
 12389  03A4  00A2               	movwf	__puts@pt
 12390  03A5  3090               	movlw	high (STR_23| (0+32768))
 12391  03A6  00A3               	movwf	__puts@pt+1
 12392  03A7  318E  2681  3183   	fcall	__puts
 12393                           
 12394                           ;NEMS.c: 288:     _puts(aux);
 12395  03AA  3039               	movlw	low NEMS_get_program@aux
 12396  03AB  00A2               	movwf	__puts@pt
 12397  03AC  3000               	movlw	high NEMS_get_program@aux
 12398  03AD  00A3               	movwf	__puts@pt+1
 12399  03AE  318E  2681  3183   	fcall	__puts
 12400                           
 12401                           ;NEMS.c: 289:     _puts("\n");
 12402  03B1  301A               	movlw	low ((STR_49+26)| (0+32768))
 12403  03B2  00A2               	movwf	__puts@pt
 12404  03B3  3090               	movlw	high ((STR_49+26)| (0+32768))
 12405  03B4  00A3               	movwf	__puts@pt+1
 12406  03B5  318E  2681  3183   	fcall	__puts
 12407                           
 12408                           ;NEMS.c: 291:     _sprintf_u8b(aux,program.phase_duration);
 12409  03B8  085D               	movf	_program+2,w	;volatile
 12410  03B9  00B8               	movwf	??_NEMS_get_program
 12411  03BA  0838               	movf	??_NEMS_get_program,w
 12412  03BB  00AF               	movwf	__sprintf_u8b@val
 12413  03BC  3039               	movlw	(low (NEMS_get_program@aux| 0))& (0+255)
 12414  03BD  3185  2571  3183   	fcall	__sprintf_u8b
 12415                           
 12416                           ;NEMS.c: 292:     _puts("Phase duration (us/50): ");
 12417  03C0  301C               	movlw	low (STR_25| (0+32768))
 12418  03C1  00A2               	movwf	__puts@pt
 12419  03C2  3090               	movlw	high (STR_25| (0+32768))
 12420  03C3  00A3               	movwf	__puts@pt+1
 12421  03C4  318E  2681  3183   	fcall	__puts
 12422                           
 12423                           ;NEMS.c: 293:     _puts(aux);
 12424  03C7  3039               	movlw	low NEMS_get_program@aux
 12425  03C8  00A2               	movwf	__puts@pt
 12426  03C9  3000               	movlw	high NEMS_get_program@aux
 12427  03CA  00A3               	movwf	__puts@pt+1
 12428  03CB  318E  2681  3183   	fcall	__puts
 12429                           
 12430                           ;NEMS.c: 294:     _puts("\n");
 12431  03CE  301A               	movlw	low ((STR_49+26)| (0+32768))
 12432  03CF  00A2               	movwf	__puts@pt
 12433  03D0  3090               	movlw	high ((STR_49+26)| (0+32768))
 12434  03D1  00A3               	movwf	__puts@pt+1
 12435  03D2  318E  2681  3183   	fcall	__puts
 12436                           
 12437                           ;NEMS.c: 296:      _sprintf_u8b(aux,program.symmetry_factor);
 12438  03D5  085E               	movf	_program+3,w	;volatile
 12439  03D6  00B8               	movwf	??_NEMS_get_program
 12440  03D7  0838               	movf	??_NEMS_get_program,w
 12441  03D8  00AF               	movwf	__sprintf_u8b@val
 12442  03D9  3039               	movlw	(low (NEMS_get_program@aux| 0))& (0+255)
 12443  03DA  3185  2571  3183   	fcall	__sprintf_u8b
 12444                           
 12445                           ;NEMS.c: 297:     _puts("Symmetry factor: ");
 12446  03DD  307A               	movlw	low (STR_27| (0+32768))
 12447  03DE  00A2               	movwf	__puts@pt
 12448  03DF  3090               	movlw	high (STR_27| (0+32768))
 12449  03E0  00A3               	movwf	__puts@pt+1
 12450  03E1  318E  2681  3183   	fcall	__puts
 12451                           
 12452                           ;NEMS.c: 298:     _puts(aux);
 12453  03E4  3039               	movlw	low NEMS_get_program@aux
 12454  03E5  00A2               	movwf	__puts@pt
 12455  03E6  3000               	movlw	high NEMS_get_program@aux
 12456  03E7  00A3               	movwf	__puts@pt+1
 12457  03E8  318E  2681  3183   	fcall	__puts
 12458                           
 12459                           ;NEMS.c: 299:     _puts("\n");
 12460  03EB  301A               	movlw	low ((STR_49+26)| (0+32768))
 12461  03EC  00A2               	movwf	__puts@pt
 12462  03ED  3090               	movlw	high ((STR_49+26)| (0+32768))
 12463  03EE  00A3               	movwf	__puts@pt+1
 12464  03EF  318E  2681  3183   	fcall	__puts
 12465                           
 12466                           ;NEMS.c: 301:     _sprintf_u8b(aux,program.ON_time);
 12467  03F2  085F               	movf	_program+4,w	;volatile
 12468  03F3  00B8               	movwf	??_NEMS_get_program
 12469  03F4  0838               	movf	??_NEMS_get_program,w
 12470  03F5  00AF               	movwf	__sprintf_u8b@val
 12471  03F6  3039               	movlw	(low (NEMS_get_program@aux| 0))& (0+255)
 12472  03F7  3185  2571  3183   	fcall	__sprintf_u8b
 12473                           
 12474                           ;NEMS.c: 302:     _puts("ON time (s) : ");
 12475  03FA  30DD               	movlw	low (STR_29| (0+32768))
 12476  03FB  00A2               	movwf	__puts@pt
 12477  03FC  3090               	movlw	high (STR_29| (0+32768))
 12478  03FD  00A3               	movwf	__puts@pt+1
 12479  03FE  318E  2681  3183   	fcall	__puts
 12480                           
 12481                           ;NEMS.c: 303:     _puts(aux);
 12482  0401  3039               	movlw	low NEMS_get_program@aux
 12483  0402  00A2               	movwf	__puts@pt
 12484  0403  3000               	movlw	high NEMS_get_program@aux
 12485  0404  00A3               	movwf	__puts@pt+1
 12486  0405  318E  2681  3183   	fcall	__puts
 12487                           
 12488                           ;NEMS.c: 304:     _puts("\n");
 12489  0408  301A               	movlw	low ((STR_49+26)| (0+32768))
 12490  0409  00A2               	movwf	__puts@pt
 12491  040A  3090               	movlw	high ((STR_49+26)| (0+32768))
 12492  040B  00A3               	movwf	__puts@pt+1
 12493  040C  318E  2681  3183   	fcall	__puts
 12494                           
 12495                           ;NEMS.c: 306:     _sprintf_u8b(aux,program.OFF_time);
 12496  040F  0860               	movf	_program+5,w	;volatile
 12497  0410  00B8               	movwf	??_NEMS_get_program
 12498  0411  0838               	movf	??_NEMS_get_program,w
 12499  0412  00AF               	movwf	__sprintf_u8b@val
 12500  0413  3039               	movlw	(low (NEMS_get_program@aux| 0))& (0+255)
 12501  0414  3185  2571  3183   	fcall	__sprintf_u8b
 12502                           
 12503                           ;NEMS.c: 307:     _puts("OFF time (s) : ");
 12504  0417  30BE               	movlw	low (STR_31| (0+32768))
 12505  0418  00A2               	movwf	__puts@pt
 12506  0419  3090               	movlw	high (STR_31| (0+32768))
 12507  041A  00A3               	movwf	__puts@pt+1
 12508  041B  318E  2681  3183   	fcall	__puts
 12509                           
 12510                           ;NEMS.c: 308:     _puts(aux);
 12511  041E  3039               	movlw	low NEMS_get_program@aux
 12512  041F  00A2               	movwf	__puts@pt
 12513  0420  3000               	movlw	high NEMS_get_program@aux
 12514  0421  00A3               	movwf	__puts@pt+1
 12515  0422  318E  2681  3183   	fcall	__puts
 12516                           
 12517                           ;NEMS.c: 309:     _puts("\n");
 12518  0425  301A               	movlw	low ((STR_49+26)| (0+32768))
 12519  0426  00A2               	movwf	__puts@pt
 12520  0427  3090               	movlw	high ((STR_49+26)| (0+32768))
 12521  0428  00A3               	movwf	__puts@pt+1
 12522  0429  318E  2681  3183   	fcall	__puts
 12523                           
 12524                           ;NEMS.c: 311:     _sprintf_u8b(aux,program.ramp_up);
 12525  042C  0862               	movf	_program+7,w	;volatile
 12526  042D  00B8               	movwf	??_NEMS_get_program
 12527  042E  0838               	movf	??_NEMS_get_program,w
 12528  042F  00AF               	movwf	__sprintf_u8b@val
 12529  0430  3039               	movlw	(low (NEMS_get_program@aux| 0))& (0+255)
 12530  0431  3185  2571  3183   	fcall	__sprintf_u8b
 12531                           
 12532                           ;NEMS.c: 312:     _puts("Ramp up time (ds) : ");
 12533  0434  3065               	movlw	low (STR_33| (0+32768))
 12534  0435  00A2               	movwf	__puts@pt
 12535  0436  3090               	movlw	high (STR_33| (0+32768))
 12536  0437  00A3               	movwf	__puts@pt+1
 12537  0438  318E  2681  3183   	fcall	__puts
 12538                           
 12539                           ;NEMS.c: 313:     _puts(aux);
 12540  043B  3039               	movlw	low NEMS_get_program@aux
 12541  043C  00A2               	movwf	__puts@pt
 12542  043D  3000               	movlw	high NEMS_get_program@aux
 12543  043E  00A3               	movwf	__puts@pt+1
 12544  043F  318E  2681  3183   	fcall	__puts
 12545                           
 12546                           ;NEMS.c: 314:     _puts("\n");
 12547  0442  301A               	movlw	low ((STR_49+26)| (0+32768))
 12548  0443  00A2               	movwf	__puts@pt
 12549  0444  3090               	movlw	high ((STR_49+26)| (0+32768))
 12550  0445  00A3               	movwf	__puts@pt+1
 12551  0446  318E  2681  3183   	fcall	__puts
 12552                           
 12553                           ;NEMS.c: 316:     _sprintf_u8b(aux,program.ramp_down);
 12554  0449  0863               	movf	_program+8,w	;volatile
 12555  044A  00B8               	movwf	??_NEMS_get_program
 12556  044B  0838               	movf	??_NEMS_get_program,w
 12557  044C  00AF               	movwf	__sprintf_u8b@val
 12558  044D  3039               	movlw	(low (NEMS_get_program@aux| 0))& (0+255)
 12559  044E  3185  2571  3183   	fcall	__sprintf_u8b
 12560                           
 12561                           ;NEMS.c: 317:     _puts("Ramp down time (ds) : ");
 12562  0451  304E               	movlw	low (STR_35| (0+32768))
 12563  0452  00A2               	movwf	__puts@pt
 12564  0453  3090               	movlw	high (STR_35| (0+32768))
 12565  0454  00A3               	movwf	__puts@pt+1
 12566  0455  318E  2681  3183   	fcall	__puts
 12567                           
 12568                           ;NEMS.c: 318:     _puts(aux);
 12569  0458  3039               	movlw	low NEMS_get_program@aux
 12570  0459  00A2               	movwf	__puts@pt
 12571  045A  3000               	movlw	high NEMS_get_program@aux
 12572  045B  00A3               	movwf	__puts@pt+1
 12573  045C  318E  2681  3183   	fcall	__puts
 12574                           
 12575                           ;NEMS.c: 319:     _puts("\n");
 12576  045F  301A               	movlw	low ((STR_49+26)| (0+32768))
 12577  0460  00A2               	movwf	__puts@pt
 12578  0461  3090               	movlw	high ((STR_49+26)| (0+32768))
 12579  0462  00A3               	movwf	__puts@pt+1
 12580  0463  318E  2681  3183   	fcall	__puts
 12581                           
 12582                           ;NEMS.c: 321:     _sprintf_u8b(aux,program.contractions);
 12583  0466  0861               	movf	_program+6,w	;volatile
 12584  0467  00B8               	movwf	??_NEMS_get_program
 12585  0468  0838               	movf	??_NEMS_get_program,w
 12586  0469  00AF               	movwf	__sprintf_u8b@val
 12587  046A  3039               	movlw	(low (NEMS_get_program@aux| 0))& (0+255)
 12588  046B  3185  2571  3183   	fcall	__sprintf_u8b
 12589                           
 12590                           ;NEMS.c: 322:     _puts("Number of contractions: ");
 12591  046E  3035               	movlw	low (STR_37| (0+32768))
 12592  046F  00A2               	movwf	__puts@pt
 12593  0470  3090               	movlw	high (STR_37| (0+32768))
 12594  0471  00A3               	movwf	__puts@pt+1
 12595  0472  318E  2681  3183   	fcall	__puts
 12596                           
 12597                           ;NEMS.c: 323:     _puts(aux);
 12598  0475  3039               	movlw	low NEMS_get_program@aux
 12599  0476  00A2               	movwf	__puts@pt
 12600  0477  3000               	movlw	high NEMS_get_program@aux
 12601  0478  00A3               	movwf	__puts@pt+1
 12602  0479  318E  2681  3183   	fcall	__puts
 12603                           
 12604                           ;NEMS.c: 324:     _puts("\n");
 12605  047C  301A               	movlw	low ((STR_49+26)| (0+32768))
 12606  047D  00A2               	movwf	__puts@pt
 12607  047E  3090               	movlw	high ((STR_49+26)| (0+32768))
 12608  047F  00A3               	movwf	__puts@pt+1
 12609  0480  318E  2681  3183   	fcall	__puts
 12610                           
 12611                           ;NEMS.c: 326:     _sprintf_u8b(aux,program.channel1);
 12612  0483  0864               	movf	_program+9,w	;volatile
 12613  0484  00B8               	movwf	??_NEMS_get_program
 12614  0485  0838               	movf	??_NEMS_get_program,w
 12615  0486  00AF               	movwf	__sprintf_u8b@val
 12616  0487  3039               	movlw	(low (NEMS_get_program@aux| 0))& (0+255)
 12617  0488  3185  2571  3183   	fcall	__sprintf_u8b
 12618                           
 12619                           ;NEMS.c: 327:     _puts("Channel 1: ");
 12620  048B  30EC               	movlw	low (STR_39| (0+32768))
 12621  048C  00A2               	movwf	__puts@pt
 12622  048D  3090               	movlw	high (STR_39| (0+32768))
 12623  048E  00A3               	movwf	__puts@pt+1
 12624  048F  318E  2681  3183   	fcall	__puts
 12625                           
 12626                           ;NEMS.c: 328:     _puts(aux);
 12627  0492  3039               	movlw	low NEMS_get_program@aux
 12628  0493  00A2               	movwf	__puts@pt
 12629  0494  3000               	movlw	high NEMS_get_program@aux
 12630  0495  00A3               	movwf	__puts@pt+1
 12631  0496  318E  2681  3183   	fcall	__puts
 12632                           
 12633                           ;NEMS.c: 329:     _puts("\n");
 12634  0499  301A               	movlw	low ((STR_49+26)| (0+32768))
 12635  049A  00A2               	movwf	__puts@pt
 12636  049B  3090               	movlw	high ((STR_49+26)| (0+32768))
 12637  049C  00A3               	movwf	__puts@pt+1
 12638  049D  318E  2681  3183   	fcall	__puts
 12639                           
 12640                           ;NEMS.c: 331:     _sprintf_u8b(aux,program.channel2);
 12641  04A0  0865               	movf	_program+10,w	;volatile
 12642  04A1  00B8               	movwf	??_NEMS_get_program
 12643  04A2  0838               	movf	??_NEMS_get_program,w
 12644  04A3  00AF               	movwf	__sprintf_u8b@val
 12645  04A4  3039               	movlw	(low (NEMS_get_program@aux| 0))& (0+255)
 12646  04A5  3185  2571  3183   	fcall	__sprintf_u8b
 12647                           
 12648                           ;NEMS.c: 332:     _puts("Channel 2: ");
 12649  04A8  30F8               	movlw	low (STR_41| (0+32768))
 12650  04A9  00A2               	movwf	__puts@pt
 12651  04AA  3090               	movlw	high (STR_41| (0+32768))
 12652  04AB  00A3               	movwf	__puts@pt+1
 12653  04AC  318E  2681  3183   	fcall	__puts
 12654                           
 12655                           ;NEMS.c: 333:     _puts(aux);
 12656  04AF  3039               	movlw	low NEMS_get_program@aux
 12657  04B0  00A2               	movwf	__puts@pt
 12658  04B1  3000               	movlw	high NEMS_get_program@aux
 12659  04B2  00A3               	movwf	__puts@pt+1
 12660  04B3  318E  2681  3183   	fcall	__puts
 12661                           
 12662                           ;NEMS.c: 334:     _puts("\n");
 12663  04B6  301A               	movlw	low ((STR_49+26)| (0+32768))
 12664  04B7  00A2               	movwf	__puts@pt
 12665  04B8  3090               	movlw	high ((STR_49+26)| (0+32768))
 12666  04B9  00A3               	movwf	__puts@pt+1
 12667  04BA  318E  2681         	fcall	__puts
 12668  04BC  0008               	return
 12669  04BD                     __end_of_NEMS_get_program:	
 12670                           
 12671                           	psect	text41
 12672  0571                     __ptext41:	
 12673 ;; *************** function __sprintf_u8b *****************
 12674 ;; Defined at:
 12675 ;;		line 52 in file "comm.c"
 12676 ;; Parameters:    Size  Location     Type
 12677 ;;  mess            1    wreg     PTR unsigned char 
 12678 ;;		 -> NEMS_get_program@aux(4), 
 12679 ;;  val             1   15[BANK0 ] unsigned char 
 12680 ;; Auto vars:     Size  Location     Type
 12681 ;;  mess            1   23[BANK0 ] PTR unsigned char 
 12682 ;;		 -> NEMS_get_program@aux(4), 
 12683 ;;  buf             3   20[BANK0 ] unsigned char [3]
 12684 ;;  aux             1   19[BANK0 ] unsigned char 
 12685 ;; Return value:  Size  Location     Type
 12686 ;;                  1    wreg      void 
 12687 ;; Registers used:
 12688 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12689 ;; Tracked objects:
 12690 ;;		On entry : 3F/0
 12691 ;;		On exit  : 3F/0
 12692 ;;		Unchanged: 0/0
 12693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12694 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12695 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12696 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12697 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12698 ;;Total ram usage:        9 bytes
 12699 ;; Hardware stack levels used:    1
 12700 ;; Hardware stack levels required when called:    5
 12701 ;; This function calls:
 12702 ;;		___awdiv
 12703 ;;		___lbmod
 12704 ;; This function is called by:
 12705 ;;		_NEMS_get_program
 12706 ;; This function uses a non-reentrant model
 12707 ;;
 12708                           
 12709                           
 12710                           ;psect for function __sprintf_u8b
 12711  0571                     __sprintf_u8b:	
 12712                           
 12713                           ;incstack = 0
 12714                           ; Regs used in __sprintf_u8b: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12715                           ;__sprintf_u8b@mess stored from wreg
 12716  0571  00B7               	movwf	__sprintf_u8b@mess
 12717                           
 12718                           ;comm.c: 52: void _sprintf_u8b(char* mess, unsigned char val);comm.c: 53: {;comm.c: 55: 
      +                              unsigned char aux;;comm.c: 56:     unsigned char buf[3];;comm.c: 58:     aux = val%1
      +                          0;
 12719  0572  300A               	movlw	10
 12720  0573  00B0               	movwf	??__sprintf_u8b
 12721  0574  0830               	movf	??__sprintf_u8b,w
 12722  0575  00A0               	movwf	___lbmod@divisor
 12723  0576  082F               	movf	__sprintf_u8b@val,w
 12724  0577  318D  25D8  3185   	fcall	___lbmod
 12725  057A  00B1               	movwf	??__sprintf_u8b+1
 12726  057B  0831               	movf	??__sprintf_u8b+1,w
 12727  057C  00B3               	movwf	__sprintf_u8b@aux
 12728                           
 12729                           ;comm.c: 59:     val /=10;
 12730  057D  300A               	movlw	10
 12731  057E  00A6               	movwf	___awdiv@divisor
 12732  057F  3000               	movlw	0
 12733  0580  00A7               	movwf	___awdiv@divisor+1
 12734  0581  082F               	movf	__sprintf_u8b@val,w
 12735  0582  00B0               	movwf	??__sprintf_u8b
 12736  0583  01B1               	clrf	??__sprintf_u8b+1
 12737  0584  0830               	movf	??__sprintf_u8b,w
 12738  0585  00A8               	movwf	___awdiv@dividend
 12739  0586  0831               	movf	??__sprintf_u8b+1,w
 12740  0587  00A9               	movwf	___awdiv@dividend+1
 12741  0588  3187  2792  3185   	fcall	___awdiv
 12742  058B  0826               	movf	?___awdiv,w
 12743  058C  00B2               	movwf	??__sprintf_u8b+2
 12744  058D  0832               	movf	??__sprintf_u8b+2,w
 12745  058E  00AF               	movwf	__sprintf_u8b@val
 12746                           
 12747                           ;comm.c: 61:     buf[2] = aux;
 12748  058F  0833               	movf	__sprintf_u8b@aux,w
 12749  0590  00B0               	movwf	??__sprintf_u8b
 12750  0591  0830               	movf	??__sprintf_u8b,w
 12751  0592  00B6               	movwf	__sprintf_u8b@buf+2
 12752                           
 12753                           ;comm.c: 63:     aux = val%10;
 12754  0593  300A               	movlw	10
 12755  0594  00B0               	movwf	??__sprintf_u8b
 12756  0595  0830               	movf	??__sprintf_u8b,w
 12757  0596  00A0               	movwf	___lbmod@divisor
 12758  0597  082F               	movf	__sprintf_u8b@val,w
 12759  0598  318D  25D8  3185   	fcall	___lbmod
 12760  059B  00B1               	movwf	??__sprintf_u8b+1
 12761  059C  0831               	movf	??__sprintf_u8b+1,w
 12762  059D  00B3               	movwf	__sprintf_u8b@aux
 12763                           
 12764                           ;comm.c: 64:     val /=10;
 12765  059E  300A               	movlw	10
 12766  059F  00A6               	movwf	___awdiv@divisor
 12767  05A0  3000               	movlw	0
 12768  05A1  00A7               	movwf	___awdiv@divisor+1
 12769  05A2  082F               	movf	__sprintf_u8b@val,w
 12770  05A3  00B0               	movwf	??__sprintf_u8b
 12771  05A4  01B1               	clrf	??__sprintf_u8b+1
 12772  05A5  0830               	movf	??__sprintf_u8b,w
 12773  05A6  00A8               	movwf	___awdiv@dividend
 12774  05A7  0831               	movf	??__sprintf_u8b+1,w
 12775  05A8  00A9               	movwf	___awdiv@dividend+1
 12776  05A9  3187  2792  3185   	fcall	___awdiv
 12777  05AC  0826               	movf	?___awdiv,w
 12778  05AD  00B2               	movwf	??__sprintf_u8b+2
 12779  05AE  0832               	movf	??__sprintf_u8b+2,w
 12780  05AF  00AF               	movwf	__sprintf_u8b@val
 12781                           
 12782                           ;comm.c: 66:     buf[1] = aux;
 12783  05B0  0833               	movf	__sprintf_u8b@aux,w
 12784  05B1  00B0               	movwf	??__sprintf_u8b
 12785  05B2  0830               	movf	??__sprintf_u8b,w
 12786  05B3  00B5               	movwf	__sprintf_u8b@buf+1
 12787                           
 12788                           ;comm.c: 67:     buf[0] = val;
 12789  05B4  082F               	movf	__sprintf_u8b@val,w
 12790  05B5  00B0               	movwf	??__sprintf_u8b
 12791  05B6  0830               	movf	??__sprintf_u8b,w
 12792  05B7  00B4               	movwf	__sprintf_u8b@buf
 12793                           
 12794                           ;comm.c: 69:     if (buf[0] != 0) {
 12795  05B8  0834               	movf	__sprintf_u8b@buf,w
 12796  05B9  1903               	btfsc	3,2
 12797  05BA  2DDA               	goto	l3387
 12798                           
 12799                           ;comm.c: 70:         mess[0] = buf[0] + '0';
 12800  05BB  0834               	movf	__sprintf_u8b@buf,w
 12801  05BC  3E30               	addlw	48
 12802  05BD  00B0               	movwf	??__sprintf_u8b
 12803  05BE  0837               	movf	__sprintf_u8b@mess,w
 12804  05BF  0086               	movwf	6
 12805  05C0  0187               	clrf	7
 12806  05C1  0830               	movf	??__sprintf_u8b,w
 12807  05C2  0081               	movwf	1
 12808                           
 12809                           ;comm.c: 71:         mess[1] = buf[1] + '0';
 12810  05C3  0835               	movf	__sprintf_u8b@buf+1,w
 12811  05C4  3E30               	addlw	48
 12812  05C5  00B0               	movwf	??__sprintf_u8b
 12813  05C6  0A37               	incf	__sprintf_u8b@mess,w
 12814  05C7  0086               	movwf	6
 12815  05C8  0187               	clrf	7
 12816  05C9  0830               	movf	??__sprintf_u8b,w
 12817  05CA  0081               	movwf	1
 12818                           
 12819                           ;comm.c: 72:         mess[2] = buf[2] + '0';
 12820  05CB  0836               	movf	__sprintf_u8b@buf+2,w
 12821  05CC  3E30               	addlw	48
 12822  05CD  00B0               	movwf	??__sprintf_u8b
 12823  05CE  0837               	movf	__sprintf_u8b@mess,w
 12824  05CF  3E02               	addlw	2
 12825  05D0  0086               	movwf	6
 12826  05D1  0187               	clrf	7
 12827  05D2  0830               	movf	??__sprintf_u8b,w
 12828  05D3  0081               	movwf	1
 12829                           
 12830                           ;comm.c: 73:         mess[3] = 0x00;
 12831  05D4  0837               	movf	__sprintf_u8b@mess,w
 12832  05D5  3E03               	addlw	3
 12833  05D6  0086               	movwf	6
 12834  05D7  0187               	clrf	7
 12835  05D8  0181               	clrf	1
 12836  05D9  0008               	return
 12837  05DA                     l3387:	
 12838  05DA  0835               	movf	__sprintf_u8b@buf+1,w
 12839  05DB  1903               	btfsc	3,2
 12840  05DC  2DF3               	goto	l3395
 12841                           
 12842                           ;comm.c: 77:         mess[0] = buf[1] + '0';
 12843  05DD  0835               	movf	__sprintf_u8b@buf+1,w
 12844  05DE  3E30               	addlw	48
 12845  05DF  00B0               	movwf	??__sprintf_u8b
 12846  05E0  0837               	movf	__sprintf_u8b@mess,w
 12847  05E1  0086               	movwf	6
 12848  05E2  0187               	clrf	7
 12849  05E3  0830               	movf	??__sprintf_u8b,w
 12850  05E4  0081               	movwf	1
 12851                           
 12852                           ;comm.c: 78:         mess[1] = buf[2] + '0';
 12853  05E5  0836               	movf	__sprintf_u8b@buf+2,w
 12854  05E6  3E30               	addlw	48
 12855  05E7  00B0               	movwf	??__sprintf_u8b
 12856  05E8  0A37               	incf	__sprintf_u8b@mess,w
 12857  05E9  0086               	movwf	6
 12858  05EA  0187               	clrf	7
 12859  05EB  0830               	movf	??__sprintf_u8b,w
 12860  05EC  0081               	movwf	1
 12861                           
 12862                           ;comm.c: 79:         mess[2] = 0x00;
 12863  05ED  0837               	movf	__sprintf_u8b@mess,w
 12864  05EE  3E02               	addlw	2
 12865  05EF  0086               	movwf	6
 12866  05F0  0187               	clrf	7
 12867  05F1  0181               	clrf	1
 12868  05F2  0008               	return
 12869  05F3                     l3395:	
 12870                           
 12871                           ;comm.c: 83:         mess[0] = buf[2] + '0';
 12872  05F3  0836               	movf	__sprintf_u8b@buf+2,w
 12873  05F4  3E30               	addlw	48
 12874  05F5  00B0               	movwf	??__sprintf_u8b
 12875  05F6  0837               	movf	__sprintf_u8b@mess,w
 12876  05F7  0086               	movwf	6
 12877  05F8  0187               	clrf	7
 12878  05F9  0830               	movf	??__sprintf_u8b,w
 12879  05FA  0081               	movwf	1
 12880                           
 12881                           ;comm.c: 84:         mess[1] = 0x00;
 12882  05FB  0A37               	incf	__sprintf_u8b@mess,w
 12883  05FC  0086               	movwf	6
 12884  05FD  0187               	clrf	7
 12885  05FE  0181               	clrf	1
 12886  05FF  0008               	return
 12887  0600                     __end_of__sprintf_u8b:	
 12888                           
 12889                           	psect	text42
 12890  0DD8                     __ptext42:	
 12891 ;; *************** function ___lbmod *****************
 12892 ;; Defined at:
 12893 ;;		line 4 in file "/pkg/microchip/xc8/v2.10/pic/sources/c99/common/lbmod.c"
 12894 ;; Parameters:    Size  Location     Type
 12895 ;;  dividend        1    wreg     unsigned char 
 12896 ;;  divisor         1    0[BANK0 ] unsigned char 
 12897 ;; Auto vars:     Size  Location     Type
 12898 ;;  dividend        1    3[BANK0 ] unsigned char 
 12899 ;;  rem             1    5[BANK0 ] unsigned char 
 12900 ;;  counter         1    4[BANK0 ] unsigned char 
 12901 ;; Return value:  Size  Location     Type
 12902 ;;                  1    wreg      unsigned char 
 12903 ;; Registers used:
 12904 ;;		wreg, status,2, status,0
 12905 ;; Tracked objects:
 12906 ;;		On entry : 3F/0
 12907 ;;		On exit  : 3F/0
 12908 ;;		Unchanged: 0/0
 12909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12910 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12911 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12912 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12913 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12914 ;;Total ram usage:        6 bytes
 12915 ;; Hardware stack levels used:    1
 12916 ;; Hardware stack levels required when called:    4
 12917 ;; This function calls:
 12918 ;;		Nothing
 12919 ;; This function is called by:
 12920 ;;		__sprintf_u8b
 12921 ;; This function uses a non-reentrant model
 12922 ;;
 12923                           
 12924                           
 12925                           ;psect for function ___lbmod
 12926  0DD8                     ___lbmod:	
 12927                           
 12928                           ;incstack = 0
 12929                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
 12930                           ;___lbmod@dividend stored from wreg
 12931  0DD8  00A3               	movwf	___lbmod@dividend
 12932  0DD9  3008               	movlw	8
 12933  0DDA  00A1               	movwf	??___lbmod
 12934  0DDB  0821               	movf	??___lbmod,w
 12935  0DDC  00A4               	movwf	___lbmod@counter
 12936  0DDD  01A5               	clrf	___lbmod@rem
 12937  0DDE                     l3307:	
 12938  0DDE  0823               	movf	___lbmod@dividend,w
 12939  0DDF  00A1               	movwf	??___lbmod
 12940  0DE0  3007               	movlw	7
 12941  0DE1                     u1825:	
 12942  0DE1  36A1               	lsrf	??___lbmod,f
 12943  0DE2  0B89               	decfsz	9,f
 12944  0DE3  2DE1               	goto	u1825
 12945  0DE4  3525               	lslf	___lbmod@rem,w
 12946  0DE5  0421               	iorwf	??___lbmod,w
 12947  0DE6  00A2               	movwf	??___lbmod+1
 12948  0DE7  0822               	movf	??___lbmod+1,w
 12949  0DE8  00A5               	movwf	___lbmod@rem
 12950  0DE9  1003               	clrc
 12951  0DEA  0DA3               	rlf	___lbmod@dividend,f
 12952  0DEB  0820               	movf	___lbmod@divisor,w
 12953  0DEC  0225               	subwf	___lbmod@rem,w
 12954  0DED  1C03               	skipc
 12955  0DEE  2DF1               	goto	l1055
 12956  0DEF  0820               	movf	___lbmod@divisor,w
 12957  0DF0  02A5               	subwf	___lbmod@rem,f
 12958  0DF1                     l1055:	
 12959  0DF1  3001               	movlw	1
 12960  0DF2  02A4               	subwf	___lbmod@counter,f
 12961  0DF3  1D03               	btfss	3,2
 12962  0DF4  2DDE               	goto	l3307
 12963  0DF5  0825               	movf	___lbmod@rem,w
 12964  0DF6  0008               	return
 12965  0DF7                     __end_of___lbmod:	
 12966                           
 12967                           	psect	text43
 12968  0792                     __ptext43:	
 12969 ;; *************** function ___awdiv *****************
 12970 ;; Defined at:
 12971 ;;		line 5 in file "/pkg/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 12972 ;; Parameters:    Size  Location     Type
 12973 ;;  divisor         2    6[BANK0 ] int 
 12974 ;;  dividend        2    8[BANK0 ] int 
 12975 ;; Auto vars:     Size  Location     Type
 12976 ;;  quotient        2   13[BANK0 ] int 
 12977 ;;  sign            1   12[BANK0 ] unsigned char 
 12978 ;;  counter         1   11[BANK0 ] unsigned char 
 12979 ;; Return value:  Size  Location     Type
 12980 ;;                  2    6[BANK0 ] int 
 12981 ;; Registers used:
 12982 ;;		wreg, status,2, status,0
 12983 ;; Tracked objects:
 12984 ;;		On entry : 3F/0
 12985 ;;		On exit  : 3F/0
 12986 ;;		Unchanged: 0/0
 12987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12988 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12989 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12990 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12991 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12992 ;;Total ram usage:        9 bytes
 12993 ;; Hardware stack levels used:    1
 12994 ;; Hardware stack levels required when called:    4
 12995 ;; This function calls:
 12996 ;;		Nothing
 12997 ;; This function is called by:
 12998 ;;		_NEMS_recalculate_program
 12999 ;;		__sprintf_u8b
 13000 ;; This function uses a non-reentrant model
 13001 ;;
 13002                           
 13003                           
 13004                           ;psect for function ___awdiv
 13005  0792                     ___awdiv:	
 13006                           
 13007                           ;incstack = 0
 13008                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 13009  0792  01AC               	clrf	___awdiv@sign
 13010  0793  1FA7               	btfss	___awdiv@divisor+1,7
 13011  0794  2F9C               	goto	l2421
 13012  0795  09A6               	comf	___awdiv@divisor,f
 13013  0796  09A7               	comf	___awdiv@divisor+1,f
 13014  0797  0AA6               	incf	___awdiv@divisor,f
 13015  0798  1903               	skipnz
 13016  0799  0AA7               	incf	___awdiv@divisor+1,f
 13017  079A  01AC               	clrf	___awdiv@sign
 13018  079B  0AAC               	incf	___awdiv@sign,f
 13019  079C                     l2421:	
 13020  079C  1FA9               	btfss	___awdiv@dividend+1,7
 13021  079D  2FA7               	goto	l2427
 13022  079E  09A8               	comf	___awdiv@dividend,f
 13023  079F  09A9               	comf	___awdiv@dividend+1,f
 13024  07A0  0AA8               	incf	___awdiv@dividend,f
 13025  07A1  1903               	skipnz
 13026  07A2  0AA9               	incf	___awdiv@dividend+1,f
 13027  07A3  3001               	movlw	1
 13028  07A4  00AA               	movwf	??___awdiv
 13029  07A5  082A               	movf	??___awdiv,w
 13030  07A6  06AC               	xorwf	___awdiv@sign,f
 13031  07A7                     l2427:	
 13032  07A7  01AD               	clrf	___awdiv@quotient
 13033  07A8  01AE               	clrf	___awdiv@quotient+1
 13034  07A9  0826               	movf	___awdiv@divisor,w
 13035  07AA  0427               	iorwf	___awdiv@divisor+1,w
 13036  07AB  1903               	btfsc	3,2
 13037  07AC  2FD6               	goto	l2449
 13038  07AD  01AB               	clrf	___awdiv@counter
 13039  07AE  0AAB               	incf	___awdiv@counter,f
 13040  07AF                     l2437:	
 13041  07AF  1BA7               	btfsc	___awdiv@divisor+1,7
 13042  07B0  2FBB               	goto	l2439
 13043  07B1  3001               	movlw	1
 13044  07B2                     u1105:	
 13045  07B2  35A6               	lslf	___awdiv@divisor,f
 13046  07B3  0DA7               	rlf	___awdiv@divisor+1,f
 13047  07B4  0B89               	decfsz	9,f
 13048  07B5  2FB2               	goto	u1105
 13049  07B6  3001               	movlw	1
 13050  07B7  00AA               	movwf	??___awdiv
 13051  07B8  082A               	movf	??___awdiv,w
 13052  07B9  07AB               	addwf	___awdiv@counter,f
 13053  07BA  2FAF               	goto	l2437
 13054  07BB                     l2439:	
 13055  07BB  3001               	movlw	1
 13056  07BC                     u1125:	
 13057  07BC  35AD               	lslf	___awdiv@quotient,f
 13058  07BD  0DAE               	rlf	___awdiv@quotient+1,f
 13059  07BE  0B89               	decfsz	9,f
 13060  07BF  2FBC               	goto	u1125
 13061  07C0  0827               	movf	___awdiv@divisor+1,w
 13062  07C1  0229               	subwf	___awdiv@dividend+1,w
 13063  07C2  1D03               	skipz
 13064  07C3  2FC6               	goto	u1135
 13065  07C4  0826               	movf	___awdiv@divisor,w
 13066  07C5  0228               	subwf	___awdiv@dividend,w
 13067  07C6                     u1135:	
 13068  07C6  1C03               	skipc
 13069  07C7  2FCD               	goto	l2445
 13070  07C8  0826               	movf	___awdiv@divisor,w
 13071  07C9  02A8               	subwf	___awdiv@dividend,f
 13072  07CA  0827               	movf	___awdiv@divisor+1,w
 13073  07CB  3BA9               	subwfb	___awdiv@dividend+1,f
 13074  07CC  142D               	bsf	___awdiv@quotient,0
 13075  07CD                     l2445:	
 13076  07CD  3001               	movlw	1
 13077  07CE                     u1145:	
 13078  07CE  36A7               	lsrf	___awdiv@divisor+1,f
 13079  07CF  0CA6               	rrf	___awdiv@divisor,f
 13080  07D0  0B89               	decfsz	9,f
 13081  07D1  2FCE               	goto	u1145
 13082  07D2  3001               	movlw	1
 13083  07D3  02AB               	subwf	___awdiv@counter,f
 13084  07D4  1D03               	btfss	3,2
 13085  07D5  2FBB               	goto	l2439
 13086  07D6                     l2449:	
 13087  07D6  082C               	movf	___awdiv@sign,w
 13088  07D7  1903               	btfsc	3,2
 13089  07D8  2FDE               	goto	l2453
 13090  07D9  09AD               	comf	___awdiv@quotient,f
 13091  07DA  09AE               	comf	___awdiv@quotient+1,f
 13092  07DB  0AAD               	incf	___awdiv@quotient,f
 13093  07DC  1903               	skipnz
 13094  07DD  0AAE               	incf	___awdiv@quotient+1,f
 13095  07DE                     l2453:	
 13096  07DE  082E               	movf	___awdiv@quotient+1,w
 13097  07DF  00A7               	movwf	?___awdiv+1
 13098  07E0  082D               	movf	___awdiv@quotient,w
 13099  07E1  00A6               	movwf	?___awdiv
 13100  07E2  0008               	return
 13101  07E3                     __end_of___awdiv:	
 13102                           
 13103                           	psect	text44
 13104  0E81                     __ptext44:	
 13105 ;; *************** function __puts *****************
 13106 ;; Defined at:
 13107 ;;		line 5 in file "comm.c"
 13108 ;; Parameters:    Size  Location     Type
 13109 ;;  pt              2    2[BANK0 ] PTR unsigned char 
 13110 ;;		 -> STR_51(6), STR_50(6), STR_49(28), STR_48(6), 
 13111 ;;		 -> STR_47(6), STR_46(7), STR_45(6), STR_44(7), 
 13112 ;;		 -> STR_43(6), STR_42(2), STR_41(12), STR_40(2), 
 13113 ;;		 -> STR_39(12), STR_38(2), STR_37(25), STR_36(2), 
 13114 ;;		 -> STR_35(23), STR_34(2), STR_33(21), STR_32(2), 
 13115 ;;		 -> STR_31(16), STR_30(2), STR_29(15), STR_28(2), 
 13116 ;;		 -> STR_27(18), STR_26(2), STR_25(25), STR_24(2), 
 13117 ;;		 -> STR_23(17), STR_22(2), STR_21(17), NEMS_get_program@aux(4), 
 13118 ;;		 -> STR_20(15), STR_19(7), STR_18(6), STR_17(7), 
 13119 ;;		 -> STR_16(6), STR_15(7), STR_14(6), STR_13(7), 
 13120 ;;		 -> STR_12(6), STR_11(7), STR_10(6), STR_9(7), 
 13121 ;;		 -> STR_8(6), STR_7(7), STR_6(6), STR_5(7), 
 13122 ;;		 -> STR_4(6), STR_3(7), STR_2(6), STR_1(4), 
 13123 ;; Auto vars:     Size  Location     Type
 13124 ;;  index           1    7[BANK0 ] unsigned char 
 13125 ;; Return value:  Size  Location     Type
 13126 ;;                  1    wreg      void 
 13127 ;; Registers used:
 13128 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13129 ;; Tracked objects:
 13130 ;;		On entry : 3F/0
 13131 ;;		On exit  : 3F/0
 13132 ;;		Unchanged: 0/0
 13133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13134 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13135 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13136 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13137 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13138 ;;Total ram usage:        6 bytes
 13139 ;; Hardware stack levels used:    1
 13140 ;; Hardware stack levels required when called:    5
 13141 ;; This function calls:
 13142 ;;		_EUSART1_Write
 13143 ;;		_EUSART1_is_tx_ready
 13144 ;; This function is called by:
 13145 ;;		_NEMS_message_handler
 13146 ;;		_NEMS_set_amplitude
 13147 ;;		_NEMS_set_frequency
 13148 ;;		_NEMS_set_phase_duration
 13149 ;;		_NEMS_set_symmetry_factor
 13150 ;;		_NEMS_set_ON_time
 13151 ;;		_NEMS_set_OFF_time
 13152 ;;		_NEMS_set_contractions
 13153 ;;		_NEMS_set_ramp_up
 13154 ;;		_NEMS_set_ramp_down
 13155 ;;		_NEMS_get_program
 13156 ;;		_NEMS_set_channel1
 13157 ;;		_NEMS_set_channel2
 13158 ;;		_NEMS_save_program
 13159 ;;		_NEMS_load_program
 13160 ;;		_NEMS_start_program
 13161 ;;		_NEMS_stop_program
 13162 ;; This function uses a non-reentrant model
 13163 ;;
 13164                           
 13165                           
 13166                           ;psect for function __puts
 13167  0E81                     __puts:	
 13168                           
 13169                           ;comm.c: 5: void _puts(char *pt);comm.c: 6: {;comm.c: 7:     unsigned char index;;comm.c
      +                          : 8:     index = 0;
 13170                           
 13171                           ;incstack = 0
 13172                           ; Regs used in __puts: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13173  0E81  01A7               	clrf	__puts@index
 13174  0E82                     l3345:	
 13175                           ;comm.c: 9:     while(pt[index]) {
 13176                           
 13177                           
 13178                           ;comm.c: 9:     while(pt[index]) {
 13179  0E82  0823               	movf	__puts@pt+1,w
 13180  0E83  00A5               	movwf	??__puts+1
 13181  0E84  0822               	movf	__puts@pt,w
 13182  0E85  00A4               	movwf	??__puts
 13183  0E86  0827               	movf	__puts@index,w
 13184  0E87  0724               	addwf	??__puts,w
 13185  0E88  0084               	movwf	4
 13186  0E89  0825               	movf	??__puts+1,w
 13187  0E8A  1803               	skipnc
 13188  0E8B  0A25               	incf	??__puts+1,w
 13189  0E8C  0085               	movwf	5
 13190  0E8D  0012               	moviw fsr0++
 13191  0E8E  1903               	btfsc	3,2
 13192  0E8F  0008               	return
 13193  0E90                     l3339:	
 13194  0E90  318B  23D5  318E   	fcall	_EUSART1_is_tx_ready
 13195  0E93  3A00               	xorlw	0
 13196  0E94  1903               	skipnz
 13197  0E95  2E90               	goto	l3339
 13198                           
 13199                           ;comm.c: 11:         EUSART1_Write(pt[index++]);
 13200  0E96  0823               	movf	__puts@pt+1,w
 13201  0E97  00A5               	movwf	??__puts+1
 13202  0E98  0822               	movf	__puts@pt,w
 13203  0E99  00A4               	movwf	??__puts
 13204  0E9A  0827               	movf	__puts@index,w
 13205  0E9B  0724               	addwf	??__puts,w
 13206  0E9C  0084               	movwf	4
 13207  0E9D  0825               	movf	??__puts+1,w
 13208  0E9E  1803               	skipnc
 13209  0E9F  0A25               	incf	??__puts+1,w
 13210  0EA0  0085               	movwf	5
 13211  0EA1  0800               	movf	0,w	;code access
 13212  0EA2  318E  263A  318E   	fcall	_EUSART1_Write
 13213  0EA5  3001               	movlw	1
 13214  0EA6  0140               	movlb	0	; select bank0
 13215  0EA7  00A4               	movwf	??__puts
 13216  0EA8  0824               	movf	??__puts,w
 13217  0EA9  07A7               	addwf	__puts@index,f
 13218  0EAA  2E82               	goto	l3345
 13219  0EAB                     __end_of__puts:	
 13220                           
 13221                           	psect	text45
 13222  0BD5                     __ptext45:	
 13223 ;; *************** function _EUSART1_is_tx_ready *****************
 13224 ;; Defined at:
 13225 ;;		line 132 in file "mcc_generated_files/eusart1.c"
 13226 ;; Parameters:    Size  Location     Type
 13227 ;;		None
 13228 ;; Auto vars:     Size  Location     Type
 13229 ;;		None
 13230 ;; Return value:  Size  Location     Type
 13231 ;;                  1    wreg      _Bool 
 13232 ;; Registers used:
 13233 ;;		wreg, status,2, status,0
 13234 ;; Tracked objects:
 13235 ;;		On entry : 3F/0
 13236 ;;		On exit  : 3F/0
 13237 ;;		Unchanged: 0/0
 13238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13243 ;;Total ram usage:        0 bytes
 13244 ;; Hardware stack levels used:    1
 13245 ;; Hardware stack levels required when called:    4
 13246 ;; This function calls:
 13247 ;;		Nothing
 13248 ;; This function is called by:
 13249 ;;		__puts
 13250 ;; This function uses a non-reentrant model
 13251 ;;
 13252                           
 13253                           
 13254                           ;psect for function _EUSART1_is_tx_ready
 13255  0BD5                     _EUSART1_is_tx_ready:	
 13256                           
 13257                           ;mcc_generated_files/eusart1.c: 134:     return (eusart1TxBufferRemaining ? 1 : 0);
 13258                           
 13259                           ;incstack = 0
 13260                           ; Regs used in _EUSART1_is_tx_ready: [wreg+status,2+status,0]
 13261  0BD5  086E               	movf	_eusart1TxBufferRemaining,w	;volatile
 13262  0BD6  1903               	btfsc	3,2
 13263  0BD7  2BDA               	goto	u1710
 13264  0BD8  3001               	movlw	1
 13265  0BD9  0008               	return
 13266  0BDA                     u1710:	
 13267  0BDA  3000               	movlw	0
 13268  0BDB  0008               	return
 13269  0BDC                     __end_of_EUSART1_is_tx_ready:	
 13270                           
 13271                           	psect	text46
 13272  0E3A                     __ptext46:	
 13273 ;; *************** function _EUSART1_Write *****************
 13274 ;; Defined at:
 13275 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 13276 ;; Parameters:    Size  Location     Type
 13277 ;;  txData          1    wreg     unsigned char 
 13278 ;; Auto vars:     Size  Location     Type
 13279 ;;  txData          1    1[BANK0 ] unsigned char 
 13280 ;; Return value:  Size  Location     Type
 13281 ;;                  1    wreg      void 
 13282 ;; Registers used:
 13283 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13284 ;; Tracked objects:
 13285 ;;		On entry : 3F/0
 13286 ;;		On exit  : 3F/E
 13287 ;;		Unchanged: 0/0
 13288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13290 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13291 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13292 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13293 ;;Total ram usage:        2 bytes
 13294 ;; Hardware stack levels used:    1
 13295 ;; Hardware stack levels required when called:    4
 13296 ;; This function calls:
 13297 ;;		Nothing
 13298 ;; This function is called by:
 13299 ;;		__puts
 13300 ;; This function uses a non-reentrant model
 13301 ;;
 13302                           
 13303                           
 13304                           ;psect for function _EUSART1_Write
 13305  0E3A                     _EUSART1_Write:	
 13306                           
 13307                           ;incstack = 0
 13308                           ; Regs used in _EUSART1_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 13309                           ;EUSART1_Write@txData stored from wreg
 13310  0E3A  00A1               	movwf	EUSART1_Write@txData
 13311  0E3B                     l3257:	
 13312                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 13313                           
 13314                           
 13315                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 13316  0E3B  086E               	movf	_eusart1TxBufferRemaining,w	;volatile
 13317  0E3C  1903               	btfsc	3,2
 13318  0E3D  2E3B               	goto	l3257
 13319                           
 13320                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 13321  0E3E  014E               	movlb	14	; select bank14
 13322  0E3F  1A19               	btfsc	25,4	;volatile
 13323  0E40  2E46               	goto	l211
 13324                           
 13325                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 13326  0E41  0140               	movlb	0	; select bank0
 13327  0E42  0821               	movf	EUSART1_Write@txData,w
 13328  0E43  0142               	movlb	2	; select bank2
 13329  0E44  009A               	movwf	26	;volatile
 13330                           
 13331                           ;mcc_generated_files/eusart1.c: 182:     }
 13332  0E45  2E5A               	goto	l3271
 13333  0E46                     l211:	
 13334                           ;mcc_generated_files/eusart1.c: 183:     else
 13335                           
 13336                           
 13337                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 13338  0E46  1219               	bcf	25,4	;volatile
 13339                           
 13340                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 13341  0E47  0140               	movlb	0	; select bank0
 13342  0E48  0821               	movf	EUSART1_Write@txData,w
 13343  0E49  00A0               	movwf	??_EUSART1_Write
 13344  0E4A  0875               	movf	_eusart1TxHead,w
 13345  0E4B  3E4E               	addlw	(low (_eusart1TxBuffer| 0))& (0+255)
 13346  0E4C  0086               	movwf	6
 13347  0E4D  0187               	clrf	7
 13348  0E4E  0820               	movf	??_EUSART1_Write,w
 13349  0E4F  0081               	movwf	1
 13350  0E50  3001               	movlw	1
 13351  0E51  00A0               	movwf	??_EUSART1_Write
 13352  0E52  0820               	movf	??_EUSART1_Write,w
 13353  0E53  07F5               	addwf	_eusart1TxHead,f	;volatile
 13354                           
 13355                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 13356  0E54  3008               	movlw	8
 13357  0E55  0275               	subwf	_eusart1TxHead,w
 13358  0E56  1803               	btfsc	3,0
 13359                           
 13360                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 13361  0E57  01F5               	clrf	_eusart1TxHead	;volatile
 13362                           
 13363                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 13364  0E58  3001               	movlw	1
 13365  0E59  02EE               	subwf	_eusart1TxBufferRemaining,f	;volatile
 13366  0E5A                     l3271:	
 13367                           
 13368                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 13369  0E5A  014E               	movlb	14	; select bank14
 13370  0E5B  1619               	bsf	25,4	;volatile
 13371  0E5C  0008               	return
 13372  0E5D                     __end_of_EUSART1_Write:	
 13373                           
 13374                           	psect	text47
 13375  0F3F                     __ptext47:	
 13376 ;; *************** function _NEMS_initialize *****************
 13377 ;; Defined at:
 13378 ;;		line 38 in file "NEMS.c"
 13379 ;; Parameters:    Size  Location     Type
 13380 ;;		None
 13381 ;; Auto vars:     Size  Location     Type
 13382 ;;		None
 13383 ;; Return value:  Size  Location     Type
 13384 ;;                  1    wreg      void 
 13385 ;; Registers used:
 13386 ;;		wreg, status,2, status,0, pclath, cstack
 13387 ;; Tracked objects:
 13388 ;;		On entry : 3F/E
 13389 ;;		On exit  : 3F/0
 13390 ;;		Unchanged: 0/0
 13391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13394 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13395 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13396 ;;Total ram usage:        1 bytes
 13397 ;; Hardware stack levels used:    1
 13398 ;; Hardware stack levels required when called:    5
 13399 ;; This function calls:
 13400 ;;		_DAC1_SetOutput
 13401 ;;		_TMR0_SetInterruptHandler
 13402 ;;		_TMR0_StopTimer
 13403 ;; This function is called by:
 13404 ;;		_main
 13405 ;; This function uses a non-reentrant model
 13406 ;;
 13407                           
 13408                           
 13409                           ;psect for function _NEMS_initialize
 13410  0F3F                     _NEMS_initialize:	
 13411                           
 13412                           ;NEMS.c: 41:     TMR0_StopTimer();
 13413                           
 13414                           ;incstack = 0
 13415                           ; Regs used in _NEMS_initialize: [wreg+status,2+status,0+pclath+cstack]
 13416  0F3F  318B  23A2  318F   	fcall	_TMR0_StopTimer
 13417                           
 13418                           ;NEMS.c: 45:     program.amplitude = 1;
 13419  0F42  3001               	movlw	1
 13420  0F43  0140               	movlb	0	; select bank0
 13421  0F44  00A2               	movwf	??_NEMS_initialize
 13422  0F45  0822               	movf	??_NEMS_initialize,w
 13423  0F46  00DB               	movwf	_program	;volatile
 13424                           
 13425                           ;NEMS.c: 46:     program.frequency = 35;
 13426  0F47  3023               	movlw	35
 13427  0F48  00A2               	movwf	??_NEMS_initialize
 13428  0F49  0822               	movf	??_NEMS_initialize,w
 13429  0F4A  00DC               	movwf	_program+1	;volatile
 13430                           
 13431                           ;NEMS.c: 47:     program.phase_duration = 1;
 13432  0F4B  3001               	movlw	1
 13433  0F4C  00A2               	movwf	??_NEMS_initialize
 13434  0F4D  0822               	movf	??_NEMS_initialize,w
 13435  0F4E  00DD               	movwf	_program+2	;volatile
 13436                           
 13437                           ;NEMS.c: 48:     program.ON_time = 2;
 13438  0F4F  3002               	movlw	2
 13439  0F50  00A2               	movwf	??_NEMS_initialize
 13440  0F51  0822               	movf	??_NEMS_initialize,w
 13441  0F52  00DF               	movwf	_program+4	;volatile
 13442                           
 13443                           ;NEMS.c: 49:     program.OFF_time = 6;
 13444  0F53  3006               	movlw	6
 13445  0F54  00A2               	movwf	??_NEMS_initialize
 13446  0F55  0822               	movf	??_NEMS_initialize,w
 13447  0F56  00E0               	movwf	_program+5	;volatile
 13448                           
 13449                           ;NEMS.c: 50:     program.contractions = 5;
 13450  0F57  3005               	movlw	5
 13451  0F58  00A2               	movwf	??_NEMS_initialize
 13452  0F59  0822               	movf	??_NEMS_initialize,w
 13453  0F5A  00E1               	movwf	_program+6	;volatile
 13454                           
 13455                           ;NEMS.c: 51:     program.ramp_up = 10;
 13456  0F5B  300A               	movlw	10
 13457  0F5C  00A2               	movwf	??_NEMS_initialize
 13458  0F5D  0822               	movf	??_NEMS_initialize,w
 13459  0F5E  00E2               	movwf	_program+7	;volatile
 13460                           
 13461                           ;NEMS.c: 52:     program.ramp_down = 10;
 13462  0F5F  300A               	movlw	10
 13463  0F60  00A2               	movwf	??_NEMS_initialize
 13464  0F61  0822               	movf	??_NEMS_initialize,w
 13465  0F62  00E3               	movwf	_program+8	;volatile
 13466                           
 13467                           ;NEMS.c: 53:     program.symmetry_factor = 1;
 13468  0F63  3001               	movlw	1
 13469  0F64  00A2               	movwf	??_NEMS_initialize
 13470  0F65  0822               	movf	??_NEMS_initialize,w
 13471  0F66  00DE               	movwf	_program+3	;volatile
 13472                           
 13473                           ;NEMS.c: 54:     program.channel1 = 0;
 13474  0F67  01E4               	clrf	_program+9	;volatile
 13475                           
 13476                           ;NEMS.c: 55:     program.channel2 = 1;
 13477  0F68  3001               	movlw	1
 13478  0F69  00A2               	movwf	??_NEMS_initialize
 13479  0F6A  0822               	movf	??_NEMS_initialize,w
 13480  0F6B  00E5               	movwf	_program+10	;volatile
 13481                           
 13482                           ;NEMS.c: 69:     TMR0_SetInterruptHandler(NEMS_timer);
 13483  0F6C  304F               	movlw	low _NEMS_timer
 13484  0F6D  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 13485  0F6E  3000               	movlw	high _NEMS_timer
 13486  0F6F  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 13487  0F70  318B  23B9  318F   	fcall	_TMR0_SetInterruptHandler
 13488                           
 13489                           ;NEMS.c: 71:     DAC1_SetOutput(0);
 13490  0F73  3000               	movlw	0
 13491  0F74  318B  23C8         	fcall	_DAC1_SetOutput
 13492                           
 13493                           ;NEMS.c: 73:     NEMS_nmux1 = 0;
 13494  0F76  0140               	movlb	0	; select bank0
 13495  0F77  01D7               	clrf	_NEMS_nmux1
 13496                           
 13497                           ;NEMS.c: 74:     LATC = NEMS_nmux1;
 13498  0F78  0857               	movf	_NEMS_nmux1,w
 13499  0F79  009A               	movwf	26	;volatile
 13500                           
 13501                           ;NEMS.c: 76:     NEMS_pmux1 = 0;
 13502  0F7A  01D6               	clrf	_NEMS_pmux1
 13503                           
 13504                           ;NEMS.c: 77:     LATB = NEMS_pmux1;
 13505  0F7B  0856               	movf	_NEMS_pmux1,w
 13506  0F7C  0099               	movwf	25	;volatile
 13507  0F7D  0008               	return
 13508  0F7E                     __end_of_NEMS_initialize:	
 13509                           
 13510                           	psect	text48
 13511  0BA2                     __ptext48:	
 13512 ;; *************** function _TMR0_StopTimer *****************
 13513 ;; Defined at:
 13514 ;;		line 101 in file "mcc_generated_files/tmr0.c"
 13515 ;; Parameters:    Size  Location     Type
 13516 ;;		None
 13517 ;; Auto vars:     Size  Location     Type
 13518 ;;		None
 13519 ;; Return value:  Size  Location     Type
 13520 ;;                  1    wreg      void 
 13521 ;; Registers used:
 13522 ;;		None
 13523 ;; Tracked objects:
 13524 ;;		On entry : 31/0
 13525 ;;		On exit  : 3F/B
 13526 ;;		Unchanged: 0/0
 13527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13532 ;;Total ram usage:        0 bytes
 13533 ;; Hardware stack levels used:    1
 13534 ;; Hardware stack levels required when called:    4
 13535 ;; This function calls:
 13536 ;;		Nothing
 13537 ;; This function is called by:
 13538 ;;		_NEMS_initialize
 13539 ;;		_NEMS_stop_program
 13540 ;; This function uses a non-reentrant model
 13541 ;;
 13542                           
 13543                           
 13544                           ;psect for function _TMR0_StopTimer
 13545  0BA2                     _TMR0_StopTimer:	
 13546                           
 13547                           ;mcc_generated_files/tmr0.c: 104:     T0CON0bits.T0EN = 0;
 13548                           
 13549                           ;incstack = 0
 13550                           ; Regs used in _TMR0_StopTimer: []
 13551  0BA2  014B               	movlb	11	; select bank11
 13552  0BA3  139E               	bcf	30,7	;volatile
 13553  0BA4  0008               	return
 13554  0BA5                     __end_of_TMR0_StopTimer:	
 13555                           
 13556                           	psect	text49
 13557  0BB9                     __ptext49:	
 13558 ;; *************** function _TMR0_SetInterruptHandler *****************
 13559 ;; Defined at:
 13560 ;;		line 151 in file "mcc_generated_files/tmr0.c"
 13561 ;; Parameters:    Size  Location     Type
 13562 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 13563 ;;		 -> NEMS_timer(1), TMR0_DefaultInterruptHandler(1), 
 13564 ;; Auto vars:     Size  Location     Type
 13565 ;;		None
 13566 ;; Return value:  Size  Location     Type
 13567 ;;                  1    wreg      void 
 13568 ;; Registers used:
 13569 ;;		wreg
 13570 ;; Tracked objects:
 13571 ;;		On entry : 3F/0
 13572 ;;		On exit  : 3F/0
 13573 ;;		Unchanged: 0/0
 13574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13575 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13578 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13579 ;;Total ram usage:        2 bytes
 13580 ;; Hardware stack levels used:    1
 13581 ;; Hardware stack levels required when called:    4
 13582 ;; This function calls:
 13583 ;;		Nothing
 13584 ;; This function is called by:
 13585 ;;		_TMR0_Initialize
 13586 ;;		_NEMS_initialize
 13587 ;; This function uses a non-reentrant model
 13588 ;;
 13589                           
 13590                           
 13591                           ;psect for function _TMR0_SetInterruptHandler
 13592  0BB9                     _TMR0_SetInterruptHandler:	
 13593                           
 13594                           ;mcc_generated_files/tmr0.c: 152:     TMR0_InterruptHandler = InterruptHandler;
 13595                           
 13596                           ;incstack = 0
 13597                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 13598  0BB9  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 13599  0BBA  00E7               	movwf	_TMR0_InterruptHandler+1
 13600  0BBB  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 13601  0BBC  00E6               	movwf	_TMR0_InterruptHandler
 13602  0BBD  0008               	return
 13603  0BBE                     __end_of_TMR0_SetInterruptHandler:	
 13604                           
 13605                           	psect	text50
 13606  0BC8                     __ptext50:	
 13607 ;; *************** function _DAC1_SetOutput *****************
 13608 ;; Defined at:
 13609 ;;		line 66 in file "mcc_generated_files/dac1.c"
 13610 ;; Parameters:    Size  Location     Type
 13611 ;;  inputData       1    wreg     unsigned char 
 13612 ;; Auto vars:     Size  Location     Type
 13613 ;;  inputData       1    0[BANK0 ] unsigned char 
 13614 ;; Return value:  Size  Location     Type
 13615 ;;                  1    wreg      void 
 13616 ;; Registers used:
 13617 ;;		wreg
 13618 ;; Tracked objects:
 13619 ;;		On entry : 34/B
 13620 ;;		On exit  : 3F/12
 13621 ;;		Unchanged: 0/0
 13622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13624 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13626 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13627 ;;Total ram usage:        1 bytes
 13628 ;; Hardware stack levels used:    1
 13629 ;; Hardware stack levels required when called:    4
 13630 ;; This function calls:
 13631 ;;		Nothing
 13632 ;; This function is called by:
 13633 ;;		_NEMS_initialize
 13634 ;;		_NEMS_stop_program
 13635 ;; This function uses a non-reentrant model
 13636 ;;
 13637                           
 13638                           
 13639                           ;psect for function _DAC1_SetOutput
 13640  0BC8                     _DAC1_SetOutput:	
 13641                           
 13642                           ;incstack = 0
 13643                           ; Regs used in _DAC1_SetOutput: [wreg]
 13644                           ;DAC1_SetOutput@inputData stored from wreg
 13645  0BC8  0140               	movlb	0	; select bank0
 13646  0BC9  00A0               	movwf	DAC1_SetOutput@inputData
 13647                           
 13648                           ;mcc_generated_files/dac1.c: 66: void DAC1_SetOutput(uint8_t inputData);mcc_generated_fi
      +                          les/dac1.c: 67: {;mcc_generated_files/dac1.c: 68:     DAC1CON1 = inputData;
 13649  0BCA  0820               	movf	DAC1_SetOutput@inputData,w
 13650  0BCB  0152               	movlb	18	; select bank18
 13651  0BCC  008F               	movwf	15	;volatile
 13652  0BCD  0008               	return
 13653  0BCE                     __end_of_DAC1_SetOutput:	
 13654                           
 13655                           	psect	text51
 13656  0BCE                     __ptext51:	
 13657 ;; *************** function _EUSART1_is_rx_ready *****************
 13658 ;; Defined at:
 13659 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 13660 ;; Parameters:    Size  Location     Type
 13661 ;;		None
 13662 ;; Auto vars:     Size  Location     Type
 13663 ;;		None
 13664 ;; Return value:  Size  Location     Type
 13665 ;;                  1    wreg      _Bool 
 13666 ;; Registers used:
 13667 ;;		wreg, status,2, status,0
 13668 ;; Tracked objects:
 13669 ;;		On entry : 0/0
 13670 ;;		On exit  : 0/0
 13671 ;;		Unchanged: 0/0
 13672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13677 ;;Total ram usage:        0 bytes
 13678 ;; Hardware stack levels used:    1
 13679 ;; Hardware stack levels required when called:    4
 13680 ;; This function calls:
 13681 ;;		Nothing
 13682 ;; This function is called by:
 13683 ;;		_main
 13684 ;; This function uses a non-reentrant model
 13685 ;;
 13686                           
 13687                           
 13688                           ;psect for function _EUSART1_is_rx_ready
 13689  0BCE                     _EUSART1_is_rx_ready:	
 13690                           
 13691                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 13692                           
 13693                           ;incstack = 0
 13694                           ; Regs used in _EUSART1_is_rx_ready: [wreg+status,2+status,0]
 13695  0BCE  0871               	movf	_eusart1RxCount,w	;volatile
 13696  0BCF  1903               	btfsc	3,2
 13697  0BD0  2BD3               	goto	u2070
 13698  0BD1  3001               	movlw	1
 13699  0BD2  0008               	return
 13700  0BD3                     u2070:	
 13701  0BD3  3000               	movlw	0
 13702  0BD4  0008               	return
 13703  0BD5                     __end_of_EUSART1_is_rx_ready:	
 13704                           
 13705                           	psect	intentry
 13706  0004                     __pintentry:	
 13707 ;; *************** function _INTERRUPT_InterruptManager *****************
 13708 ;; Defined at:
 13709 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 13710 ;; Parameters:    Size  Location     Type
 13711 ;;		None
 13712 ;; Auto vars:     Size  Location     Type
 13713 ;;		None
 13714 ;; Return value:  Size  Location     Type
 13715 ;;                  1    wreg      void 
 13716 ;; Registers used:
 13717 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13718 ;; Tracked objects:
 13719 ;;		On entry : 0/0
 13720 ;;		On exit  : 0/0
 13721 ;;		Unchanged: 0/0
 13722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13727 ;;Total ram usage:        0 bytes
 13728 ;; Hardware stack levels used:    1
 13729 ;; Hardware stack levels required when called:    3
 13730 ;; This function calls:
 13731 ;;		Absolute function
 13732 ;;		_EUSART1_Receive_ISR
 13733 ;;		_EUSART1_Transmit_ISR
 13734 ;;		_TMR0_ISR
 13735 ;; This function is called by:
 13736 ;;		Interrupt level 1
 13737 ;; This function uses a non-reentrant model
 13738 ;;
 13739                           
 13740  0004                     _INTERRUPT_InterruptManager:	
 13741                           
 13742                           ;incstack = 0
 13743  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 13744                           
 13745                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13746  0005  3180               	pagesel	$
 13747                           
 13748                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 13749  0006  014E               	movlb	14	; select bank14
 13750  0007  1A96               	btfsc	22,5	;volatile
 13751  0008  1E8C               	btfss	12,5	;volatile
 13752  0009  280E               	goto	i1l349
 13753                           
 13754                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 13755  000A  318C  2447  3180   	fcall	_TMR0_ISR
 13756                           
 13757                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 13758  000D  2823               	goto	i1l357
 13759  000E                     i1l349:	
 13760                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 13761                           
 13762  000E  1F0B               	btfss	11,6	;volatile
 13763  000F  2823               	goto	i1l357
 13764                           
 13765                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.TX1IE == 1 && PIR3bits.TX1IF == 1)
 13766  0010  1A19               	btfsc	25,4	;volatile
 13767  0011  1E0F               	btfss	15,4	;volatile
 13768  0012  281A               	goto	i1l352
 13769                           
 13770                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART1_TxDefaultInterruptHandler();
 13771  0013  0140               	movlb	0	; select bank0
 13772  0014  086D               	movf	_EUSART1_TxDefaultInterruptHandler+1,w
 13773  0015  008A               	movwf	10
 13774  0016  086C               	movf	_EUSART1_TxDefaultInterruptHandler,w
 13775  0017  000A               	callw
 13776  0018  3180               	pagesel	$
 13777                           
 13778                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 13779  0019  2823               	goto	i1l357
 13780  001A                     i1l352:	
 13781                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 13782                           
 13783  001A  1A99               	btfsc	25,5	;volatile
 13784  001B  1E8F               	btfss	15,5	;volatile
 13785  001C  2823               	goto	i1l357
 13786                           
 13787                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             EUSART1_RxDefaultInterruptHandler();
 13788  001D  0140               	movlb	0	; select bank0
 13789  001E  086B               	movf	_EUSART1_RxDefaultInterruptHandler+1,w
 13790  001F  008A               	movwf	10
 13791  0020  086A               	movf	_EUSART1_RxDefaultInterruptHandler,w
 13792  0021  000A               	callw
 13793  0022  3180               	pagesel	$
 13794  0023                     i1l357:	
 13795                           ;mcc_generated_files/interrupt_manager.c: 75:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 77:     }
 13796                           
 13797                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 13798                           
 13799  0023  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 13800  0024  0009               	retfie
 13801  0025                     __end_of_INTERRUPT_InterruptManager:	
 13802                           
 13803                           	psect	text53
 13804  0C47                     __ptext53:	
 13805 ;; *************** function _TMR0_ISR *****************
 13806 ;; Defined at:
 13807 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 13808 ;; Parameters:    Size  Location     Type
 13809 ;;		None
 13810 ;; Auto vars:     Size  Location     Type
 13811 ;;		None
 13812 ;; Return value:  Size  Location     Type
 13813 ;;                  1    wreg      void 
 13814 ;; Registers used:
 13815 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13816 ;; Tracked objects:
 13817 ;;		On entry : 3F/E
 13818 ;;		On exit  : 0/0
 13819 ;;		Unchanged: 0/0
 13820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13825 ;;Total ram usage:        0 bytes
 13826 ;; Hardware stack levels used:    1
 13827 ;; Hardware stack levels required when called:    2
 13828 ;; This function calls:
 13829 ;;		Absolute function
 13830 ;;		_NEMS_timer
 13831 ;;		_TMR0_DefaultInterruptHandler
 13832 ;; This function is called by:
 13833 ;;		_INTERRUPT_InterruptManager
 13834 ;; This function uses a non-reentrant model
 13835 ;;
 13836                           
 13837                           
 13838                           ;psect for function _TMR0_ISR
 13839  0C47                     _TMR0_ISR:	
 13840                           
 13841                           ;mcc_generated_files/tmr0.c: 137:     PIR0bits.TMR0IF = 0;
 13842                           
 13843                           ;incstack = 0
 13844                           ; Regs used in _TMR0_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13845  0C47  128C               	bcf	12,5	;volatile
 13846                           
 13847                           ;mcc_generated_files/tmr0.c: 139:     TMR0H = timer0ReloadVal16bit >> 8;
 13848  0C48  0140               	movlb	0	; select bank0
 13849  0C49  0869               	movf	_timer0ReloadVal16bit+1,w	;volatile
 13850  0C4A  014B               	movlb	11	; select bank11
 13851  0C4B  009D               	movwf	29	;volatile
 13852                           
 13853                           ;mcc_generated_files/tmr0.c: 140:     TMR0L = (uint8_t) timer0ReloadVal16bit;
 13854  0C4C  0140               	movlb	0	; select bank0
 13855  0C4D  0868               	movf	_timer0ReloadVal16bit,w	;volatile
 13856  0C4E  014B               	movlb	11	; select bank11
 13857  0C4F  009C               	movwf	28	;volatile
 13858                           
 13859                           ;mcc_generated_files/tmr0.c: 142:     if(TMR0_InterruptHandler)
 13860  0C50  0140               	movlb	0	; select bank0
 13861  0C51  0866               	movf	_TMR0_InterruptHandler,w
 13862  0C52  0467               	iorwf	_TMR0_InterruptHandler+1,w
 13863  0C53  1903               	btfsc	3,2
 13864  0C54  0008               	return
 13865                           
 13866                           ;mcc_generated_files/tmr0.c: 143:     {;mcc_generated_files/tmr0.c: 144:         TMR0_In
      +                          terruptHandler();
 13867  0C55  0867               	movf	_TMR0_InterruptHandler+1,w
 13868  0C56  008A               	movwf	10
 13869  0C57  0866               	movf	_TMR0_InterruptHandler,w
 13870  0C58  000A               	callw
 13871  0C59  318C               	pagesel	$
 13872  0C5A  0008               	return
 13873  0C5B                     __end_of_TMR0_ISR:	
 13874                           
 13875                           	psect	text54
 13876  004F                     __ptext54:	
 13877 ;; *************** function _NEMS_timer *****************
 13878 ;; Defined at:
 13879 ;;		line 460 in file "NEMS.c"
 13880 ;; Parameters:    Size  Location     Type
 13881 ;;		None
 13882 ;; Auto vars:     Size  Location     Type
 13883 ;;		None
 13884 ;; Return value:  Size  Location     Type
 13885 ;;                  1    wreg      void 
 13886 ;; Registers used:
 13887 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13888 ;; Tracked objects:
 13889 ;;		On entry : 3F/0
 13890 ;;		On exit  : 3F/0
 13891 ;;		Unchanged: 0/0
 13892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13895 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13896 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13897 ;;Total ram usage:        5 bytes
 13898 ;; Hardware stack levels used:    1
 13899 ;; Hardware stack levels required when called:    1
 13900 ;; This function calls:
 13901 ;;		i1_DAC1_SetOutput
 13902 ;; This function is called by:
 13903 ;;		_NEMS_initialize
 13904 ;;		_TMR0_ISR
 13905 ;; This function uses a non-reentrant model
 13906 ;;
 13907                           
 13908                           
 13909                           ;psect for function _NEMS_timer
 13910  004F                     _NEMS_timer:	
 13911                           
 13912                           ;NEMS.c: 463:     DAC1_SetOutput(waveform.current_amplitude);
 13913                           
 13914                           ;incstack = 0
 13915                           ; Regs used in _NEMS_timer: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13916  004F  300A               	movlw	10
 13917  0050  0086               	movwf	6
 13918  0051  3027               	movlw	39
 13919  0052  0087               	movwf	7
 13920  0053  3151               	addfsr 1,17
 13921  0054  0801               	movf	1,w
 13922  0055  318B  23B4  3180   	fcall	i1_DAC1_SetOutput
 13923                           
 13924                           ;NEMS.c: 467:     LATC = NEMS_nmux1;
 13925  0058  0140               	movlb	0	; select bank0
 13926  0059  0857               	movf	_NEMS_nmux1,w
 13927  005A  009A               	movwf	26	;volatile
 13928                           
 13929                           ;NEMS.c: 468:     LATB = NEMS_pmux1;
 13930  005B  0856               	movf	_NEMS_pmux1,w
 13931  005C  0099               	movwf	25	;volatile
 13932                           
 13933                           ;NEMS.c: 472:     waveform.clock_index++;
 13934  005D  300A               	movlw	10
 13935  005E  0086               	movwf	6
 13936  005F  3027               	movlw	39
 13937  0060  0087               	movwf	7
 13938  0061  3142               	addfsr 1,2
 13939  0062  3001               	movlw	1
 13940  0063  0781               	addwf	1,f
 13941  0064  3141               	addfsr 1,1
 13942  0065  1803               	skipnc
 13943  0066  0A81               	incf	1,f
 13944                           
 13945                           ;NEMS.c: 476:     if (waveform.clock_index >= waveform.num_clocks_per_pulse) {
 13946  0067  300A               	movlw	10
 13947  0068  0086               	movwf	6
 13948  0069  3027               	movlw	39
 13949  006A  0087               	movwf	7
 13950  006B  3F40               	moviw [0]fsr1
 13951  006C  00F7               	movwf	??_NEMS_timer
 13952  006D  3F41               	moviw [1]fsr1
 13953  006E  00F8               	movwf	??_NEMS_timer+1
 13954  006F  300A               	movlw	10
 13955  0070  0086               	movwf	6
 13956  0071  3027               	movlw	39
 13957  0072  0087               	movwf	7
 13958  0073  3142               	addfsr 1,2
 13959  0074  3F40               	moviw [0]fsr1
 13960  0075  00F9               	movwf	??_NEMS_timer+2
 13961  0076  3F41               	moviw [1]fsr1
 13962  0077  00FA               	movwf	??_NEMS_timer+3
 13963  0078  0878               	movf	??_NEMS_timer+1,w
 13964  0079  027A               	subwf	??_NEMS_timer+3,w
 13965  007A  1D03               	skipz
 13966  007B  287E               	goto	u143_25
 13967  007C  0877               	movf	??_NEMS_timer,w
 13968  007D  0279               	subwf	??_NEMS_timer+2,w
 13969  007E                     u143_25:	
 13970  007E  1C03               	skipc
 13971  007F  2965               	goto	i1l2973
 13972                           
 13973                           ;NEMS.c: 477:         waveform.clock_index = 0;
 13974  0080  300A               	movlw	10
 13975  0081  0086               	movwf	6
 13976  0082  3027               	movlw	39
 13977  0083  0087               	movwf	7
 13978  0084  3142               	addfsr 1,2
 13979  0085  3000               	movlw	0
 13980  0086  3FC0               	movwi [0]fsr1
 13981  0087  3FC1               	movwi [1]fsr1
 13982                           
 13983                           ;NEMS.c: 479:         waveform.pulse_index++;
 13984  0088  300A               	movlw	10
 13985  0089  0086               	movwf	6
 13986  008A  3027               	movlw	39
 13987  008B  0087               	movwf	7
 13988  008C  3144               	addfsr 1,4
 13989  008D  3001               	movlw	1
 13990  008E  0781               	addwf	1,f
 13991  008F  3141               	addfsr 1,1
 13992  0090  1803               	skipnc
 13993  0091  0A81               	incf	1,f
 13994                           
 13995                           ;NEMS.c: 481:         NEMS_pulse_states = NEMS_PLUS_UP;
 13996  0092  3002               	movlw	2
 13997  0093  00F7               	movwf	??_NEMS_timer
 13998  0094  0877               	movf	??_NEMS_timer,w
 13999  0095  00F0               	movwf	_NEMS_pulse_states	;volatile
 14000                           
 14001                           ;NEMS.c: 482:         NEMS_nmux1 = waveform.channel1;
 14002  0096  30EE               	movlw	238
 14003  0097  0086               	movwf	6
 14004  0098  3027               	movlw	39
 14005  0099  0087               	movwf	7
 14006  009A  0801               	movf	1,w
 14007  009B  00F7               	movwf	??_NEMS_timer
 14008  009C  0877               	movf	??_NEMS_timer,w
 14009  009D  00D7               	movwf	_NEMS_nmux1
 14010                           
 14011                           ;NEMS.c: 483:         NEMS_pmux1 = waveform.channel2;
 14012  009E  30EF               	movlw	239
 14013  009F  0086               	movwf	6
 14014  00A0  3027               	movlw	39
 14015  00A1  0087               	movwf	7
 14016  00A2  0801               	movf	1,w
 14017  00A3  00F7               	movwf	??_NEMS_timer
 14018  00A4  0877               	movf	??_NEMS_timer,w
 14019  00A5  00D6               	movwf	_NEMS_pmux1
 14020                           
 14021                           ;NEMS.c: 486:         if (waveform.pulse_index < waveform.ramp_up_time) {
 14022  00A6  3082               	movlw	130
 14023  00A7  0086               	movwf	6
 14024  00A8  3027               	movlw	39
 14025  00A9  0087               	movwf	7
 14026  00AA  3F40               	moviw [0]fsr1
 14027  00AB  00F7               	movwf	??_NEMS_timer
 14028  00AC  3F41               	moviw [1]fsr1
 14029  00AD  00F8               	movwf	??_NEMS_timer+1
 14030  00AE  300A               	movlw	10
 14031  00AF  0086               	movwf	6
 14032  00B0  3027               	movlw	39
 14033  00B1  0087               	movwf	7
 14034  00B2  3144               	addfsr 1,4
 14035  00B3  3F40               	moviw [0]fsr1
 14036  00B4  00F9               	movwf	??_NEMS_timer+2
 14037  00B5  3F41               	moviw [1]fsr1
 14038  00B6  00FA               	movwf	??_NEMS_timer+3
 14039  00B7  0878               	movf	??_NEMS_timer+1,w
 14040  00B8  027A               	subwf	??_NEMS_timer+3,w
 14041  00B9  1D03               	skipz
 14042  00BA  28BD               	goto	u144_25
 14043  00BB  0877               	movf	??_NEMS_timer,w
 14044  00BC  0279               	subwf	??_NEMS_timer+2,w
 14045  00BD                     u144_25:	
 14046  00BD  1803               	skipnc
 14047  00BE  28D6               	goto	i1l2953
 14048                           
 14049                           ;NEMS.c: 487:             waveform.pulse_amplitude = waveform.ramp_up_amplitude[waveform
      +                          .pulse_index];
 14050  00BF  300A               	movlw	10
 14051  00C0  0086               	movwf	6
 14052  00C1  3027               	movlw	39
 14053  00C2  0087               	movwf	7
 14054  00C3  3144               	addfsr 1,4
 14055  00C4  301C               	movlw	28
 14056  00C5  00F7               	movwf	??_NEMS_timer
 14057  00C6  3027               	movlw	39
 14058  00C7  00F8               	movwf	??_NEMS_timer+1
 14059  00C8  3F40               	moviw [0]fsr1
 14060  00C9  0777               	addwf	??_NEMS_timer,w
 14061  00CA  0084               	movwf	4
 14062  00CB  3F41               	moviw [1]fsr1
 14063  00CC  3D78               	addwfc	??_NEMS_timer+1,w
 14064  00CD  0085               	movwf	5
 14065  00CE  0800               	movf	0,w
 14066  00CF  00F9               	movwf	??_NEMS_timer+2
 14067  00D0  3019               	movlw	25
 14068  00D1  0086               	movwf	6
 14069  00D2  3027               	movlw	39
 14070  00D3  0087               	movwf	7
 14071  00D4  0879               	movf	??_NEMS_timer+2,w
 14072  00D5  2937               	goto	L4
 14073  00D6                     i1l2953:	
 14074                           ;NEMS.c: 489:         } else if (waveform.pulse_index < waveform.ON_time) {
 14075                           
 14076  00D6  300A               	movlw	10
 14077  00D7  0086               	movwf	6
 14078  00D8  3027               	movlw	39
 14079  00D9  0087               	movwf	7
 14080  00DA  314A               	addfsr 1,10
 14081  00DB  3F40               	moviw [0]fsr1
 14082  00DC  00F7               	movwf	??_NEMS_timer
 14083  00DD  3F41               	moviw [1]fsr1
 14084  00DE  00F8               	movwf	??_NEMS_timer+1
 14085  00DF  300A               	movlw	10
 14086  00E0  0086               	movwf	6
 14087  00E1  3027               	movlw	39
 14088  00E2  0087               	movwf	7
 14089  00E3  3144               	addfsr 1,4
 14090  00E4  3F40               	moviw [0]fsr1
 14091  00E5  00F9               	movwf	??_NEMS_timer+2
 14092  00E6  3F41               	moviw [1]fsr1
 14093  00E7  00FA               	movwf	??_NEMS_timer+3
 14094  00E8  0878               	movf	??_NEMS_timer+1,w
 14095  00E9  027A               	subwf	??_NEMS_timer+3,w
 14096  00EA  1D03               	skipz
 14097  00EB  28EE               	goto	u145_25
 14098  00EC  0877               	movf	??_NEMS_timer,w
 14099  00ED  0279               	subwf	??_NEMS_timer+2,w
 14100  00EE                     u145_25:	
 14101  00EE  1803               	skipnc
 14102  00EF  28FD               	goto	i1l2957
 14103                           
 14104                           ;NEMS.c: 490:             waveform.pulse_amplitude = waveform.program_amplitude;
 14105  00F0  300A               	movlw	10
 14106  00F1  0086               	movwf	6
 14107  00F2  3027               	movlw	39
 14108  00F3  0087               	movwf	7
 14109  00F4  314E               	addfsr 1,14
 14110  00F5  0801               	movf	1,w
 14111  00F6  00F7               	movwf	??_NEMS_timer
 14112  00F7  3019               	movlw	25
 14113  00F8  0086               	movwf	6
 14114  00F9  3027               	movlw	39
 14115  00FA  0087               	movwf	7
 14116  00FB  0877               	movf	??_NEMS_timer,w
 14117  00FC  2937               	goto	L4
 14118  00FD                     i1l2957:	
 14119                           ;NEMS.c: 492:         } else if (waveform.pulse_index < waveform.ramp_down_time) {
 14120                           
 14121  00FD  30EA               	movlw	234
 14122  00FE  0086               	movwf	6
 14123  00FF  3027               	movlw	39
 14124  0100  0087               	movwf	7
 14125  0101  3F40               	moviw [0]fsr1
 14126  0102  00F7               	movwf	??_NEMS_timer
 14127  0103  3F41               	moviw [1]fsr1
 14128  0104  00F8               	movwf	??_NEMS_timer+1
 14129  0105  300A               	movlw	10
 14130  0106  0086               	movwf	6
 14131  0107  3027               	movlw	39
 14132  0108  0087               	movwf	7
 14133  0109  3144               	addfsr 1,4
 14134  010A  3F40               	moviw [0]fsr1
 14135  010B  00F9               	movwf	??_NEMS_timer+2
 14136  010C  3F41               	moviw [1]fsr1
 14137  010D  00FA               	movwf	??_NEMS_timer+3
 14138  010E  0878               	movf	??_NEMS_timer+1,w
 14139  010F  027A               	subwf	??_NEMS_timer+3,w
 14140  0110  1D03               	skipz
 14141  0111  2914               	goto	u146_25
 14142  0112  0877               	movf	??_NEMS_timer,w
 14143  0113  0279               	subwf	??_NEMS_timer+2,w
 14144  0114                     u146_25:	
 14145  0114  1803               	skipnc
 14146  0115  2939               	goto	i1l2961
 14147                           
 14148                           ;NEMS.c: 493:             waveform.pulse_amplitude = waveform.ramp_down_amplitude[wavefo
      +                          rm.pulse_index - waveform.ON_time];
 14149  0116  300A               	movlw	10
 14150  0117  0086               	movwf	6
 14151  0118  3027               	movlw	39
 14152  0119  0087               	movwf	7
 14153  011A  3144               	addfsr 1,4
 14154  011B  300A               	movlw	10
 14155  011C  0084               	movwf	4
 14156  011D  3027               	movlw	39
 14157  011E  0085               	movwf	5
 14158  011F  310A               	addfsr 0,10
 14159  0120  3084               	movlw	132
 14160  0121  00F7               	movwf	??_NEMS_timer
 14161  0122  3027               	movlw	39
 14162  0123  00F8               	movwf	??_NEMS_timer+1
 14163  0124  3F00               	moviw [0]fsr0
 14164  0125  0277               	subwf	??_NEMS_timer,w
 14165  0126  00F9               	movwf	??_NEMS_timer+2
 14166  0127  3F01               	moviw [1]fsr0
 14167  0128  3B78               	subwfb	??_NEMS_timer+1,w
 14168  0129  00FA               	movwf	??_NEMS_timer+3
 14169  012A  3F40               	moviw [0]fsr1
 14170  012B  0779               	addwf	??_NEMS_timer+2,w
 14171  012C  0084               	movwf	4
 14172  012D  3F41               	moviw [1]fsr1
 14173  012E  3D7A               	addwfc	??_NEMS_timer+3,w
 14174  012F  0085               	movwf	5
 14175  0130  0800               	movf	0,w
 14176  0131  00FB               	movwf	??_NEMS_timer+4
 14177  0132  3019               	movlw	25
 14178  0133  0086               	movwf	6
 14179  0134  3027               	movlw	39
 14180  0135  0087               	movwf	7
 14181  0136  087B               	movf	??_NEMS_timer+4,w
 14182  0137                     L4:	
 14183  0137  0081               	movwf	1
 14184                           
 14185                           ;NEMS.c: 495:         } else if (waveform.pulse_index < waveform.OFF_time) {
 14186  0138  2965               	goto	i1l2973
 14187  0139                     i1l2961:	
 14188  0139  300A               	movlw	10
 14189  013A  0086               	movwf	6
 14190  013B  3027               	movlw	39
 14191  013C  0087               	movwf	7
 14192  013D  314C               	addfsr 1,12
 14193  013E  3F40               	moviw [0]fsr1
 14194  013F  00F7               	movwf	??_NEMS_timer
 14195  0140  3F41               	moviw [1]fsr1
 14196  0141  00F8               	movwf	??_NEMS_timer+1
 14197  0142  300A               	movlw	10
 14198  0143  0086               	movwf	6
 14199  0144  3027               	movlw	39
 14200  0145  0087               	movwf	7
 14201  0146  3144               	addfsr 1,4
 14202  0147  3F40               	moviw [0]fsr1
 14203  0148  00F9               	movwf	??_NEMS_timer+2
 14204  0149  3F41               	moviw [1]fsr1
 14205  014A  00FA               	movwf	??_NEMS_timer+3
 14206  014B  0878               	movf	??_NEMS_timer+1,w
 14207  014C  027A               	subwf	??_NEMS_timer+3,w
 14208  014D  1D03               	skipz
 14209  014E  2951               	goto	u147_25
 14210  014F  0877               	movf	??_NEMS_timer,w
 14211  0150  0279               	subwf	??_NEMS_timer+2,w
 14212  0151                     u147_25:	
 14213  0151  1803               	skipnc
 14214  0152  295D               	goto	i1l2971
 14215                           
 14216                           ;NEMS.c: 496:             waveform.pulse_amplitude = 0;
 14217  0153  300A               	movlw	10
 14218  0154  0086               	movwf	6
 14219  0155  3027               	movlw	39
 14220  0156  0087               	movwf	7
 14221  0157  314F               	addfsr 1,15
 14222  0158  0181               	clrf	1
 14223                           
 14224                           ;NEMS.c: 497:             NEMS_pulse_states = NEMS_PULSE_OFF;
 14225  0159  01F0               	clrf	_NEMS_pulse_states	;volatile
 14226                           
 14227                           ;NEMS.c: 498:             NEMS_nmux1 = 0;
 14228  015A  01D7               	clrf	_NEMS_nmux1
 14229                           
 14230                           ;NEMS.c: 499:             NEMS_pmux1 = 0;
 14231  015B  01D6               	clrf	_NEMS_pmux1
 14232                           
 14233                           ;NEMS.c: 502:         } else {
 14234  015C  2965               	goto	i1l2973
 14235  015D                     i1l2971:	
 14236                           
 14237                           ;NEMS.c: 503:             waveform.pulse_index = 0;
 14238  015D  300A               	movlw	10
 14239  015E  0086               	movwf	6
 14240  015F  3027               	movlw	39
 14241  0160  0087               	movwf	7
 14242  0161  3144               	addfsr 1,4
 14243  0162  3000               	movlw	0
 14244  0163  3FC0               	movwi [0]fsr1
 14245  0164  3FC1               	movwi [1]fsr1
 14246  0165                     i1l2973:	
 14247                           
 14248                           ;NEMS.c: 509:     if (NEMS_pulse_states != NEMS_PULSE_OFF) {
 14249  0165  0870               	movf	_NEMS_pulse_states,w
 14250  0166  1903               	btfsc	3,2
 14251  0167  0008               	return
 14252                           
 14253                           ;NEMS.c: 510:         if (waveform.clock_index < program.phase_duration) {
 14254  0168  085D               	movf	_program+2,w	;volatile
 14255  0169  00F7               	movwf	??_NEMS_timer
 14256  016A  01F8               	clrf	??_NEMS_timer+1
 14257  016B  300A               	movlw	10
 14258  016C  0086               	movwf	6
 14259  016D  3027               	movlw	39
 14260  016E  0087               	movwf	7
 14261  016F  3142               	addfsr 1,2
 14262  0170  3F40               	moviw [0]fsr1
 14263  0171  00F9               	movwf	??_NEMS_timer+2
 14264  0172  3F41               	moviw [1]fsr1
 14265  0173  00FA               	movwf	??_NEMS_timer+3
 14266  0174  0878               	movf	??_NEMS_timer+1,w
 14267  0175  027A               	subwf	??_NEMS_timer+3,w
 14268  0176  1D03               	skipz
 14269  0177  297A               	goto	u149_25
 14270  0178  0877               	movf	??_NEMS_timer,w
 14271  0179  0279               	subwf	??_NEMS_timer+2,w
 14272  017A                     u149_25:	
 14273  017A  1803               	skipnc
 14274  017B  299E               	goto	i1l2985
 14275                           
 14276                           ;NEMS.c: 511:             NEMS_pulse_states = NEMS_PLUS_UP;
 14277  017C  3002               	movlw	2
 14278  017D  00F7               	movwf	??_NEMS_timer
 14279  017E  0877               	movf	??_NEMS_timer,w
 14280  017F  00F0               	movwf	_NEMS_pulse_states	;volatile
 14281                           
 14282                           ;NEMS.c: 512:             NEMS_nmux1 = waveform.channel1;
 14283  0180  30EE               	movlw	238
 14284  0181  0086               	movwf	6
 14285  0182  3027               	movlw	39
 14286  0183  0087               	movwf	7
 14287  0184  0801               	movf	1,w
 14288  0185  00F7               	movwf	??_NEMS_timer
 14289  0186  0877               	movf	??_NEMS_timer,w
 14290  0187  00D7               	movwf	_NEMS_nmux1
 14291                           
 14292                           ;NEMS.c: 513:             NEMS_pmux1 = waveform.channel2;
 14293  0188  30EF               	movlw	239
 14294  0189  0086               	movwf	6
 14295  018A  3027               	movlw	39
 14296  018B  0087               	movwf	7
 14297  018C  0801               	movf	1,w
 14298  018D  00F7               	movwf	??_NEMS_timer
 14299  018E  0877               	movf	??_NEMS_timer,w
 14300  018F  00D6               	movwf	_NEMS_pmux1
 14301                           
 14302                           ;NEMS.c: 515:             waveform.current_amplitude = waveform.pulse_amplitude;
 14303  0190  300A               	movlw	10
 14304  0191  0086               	movwf	6
 14305  0192  3027               	movlw	39
 14306  0193  0087               	movwf	7
 14307  0194  314F               	addfsr 1,15
 14308  0195  0801               	movf	1,w
 14309  0196  00F7               	movwf	??_NEMS_timer
 14310  0197  301B               	movlw	27
 14311  0198  0086               	movwf	6
 14312  0199  3027               	movlw	39
 14313  019A  0087               	movwf	7
 14314  019B  0877               	movf	??_NEMS_timer,w
 14315  019C  0081               	movwf	1
 14316                           
 14317                           ;NEMS.c: 517:         } else if (waveform.clock_index < waveform.silence_phase_duration)
      +                           {
 14318  019D  0008               	return
 14319  019E                     i1l2985:	
 14320  019E  300A               	movlw	10
 14321  019F  0086               	movwf	6
 14322  01A0  3027               	movlw	39
 14323  01A1  0087               	movwf	7
 14324  01A2  3148               	addfsr 1,8
 14325  01A3  0801               	movf	1,w
 14326  01A4  00F7               	movwf	??_NEMS_timer
 14327  01A5  01F8               	clrf	??_NEMS_timer+1
 14328  01A6  300A               	movlw	10
 14329  01A7  0086               	movwf	6
 14330  01A8  3027               	movlw	39
 14331  01A9  0087               	movwf	7
 14332  01AA  3142               	addfsr 1,2
 14333  01AB  3F40               	moviw [0]fsr1
 14334  01AC  00F9               	movwf	??_NEMS_timer+2
 14335  01AD  3F41               	moviw [1]fsr1
 14336  01AE  00FA               	movwf	??_NEMS_timer+3
 14337  01AF  0878               	movf	??_NEMS_timer+1,w
 14338  01B0  027A               	subwf	??_NEMS_timer+3,w
 14339  01B1  1D03               	skipz
 14340  01B2  29B5               	goto	u150_25
 14341  01B3  0877               	movf	??_NEMS_timer,w
 14342  01B4  0279               	subwf	??_NEMS_timer+2,w
 14343  01B5                     u150_25:	
 14344  01B5  1803               	skipnc
 14345  01B6  29C4               	goto	i1l2995
 14346                           
 14347                           ;NEMS.c: 518:             NEMS_pulse_states = NEMS_REST;
 14348  01B7  3001               	movlw	1
 14349  01B8  00F7               	movwf	??_NEMS_timer
 14350  01B9  0877               	movf	??_NEMS_timer,w
 14351  01BA  00F0               	movwf	_NEMS_pulse_states	;volatile
 14352  01BB                     L5:	
 14353                           
 14354                           ;NEMS.c: 519:             NEMS_nmux1 = 0;
 14355  01BB  01D7               	clrf	_NEMS_nmux1
 14356                           
 14357                           ;NEMS.c: 520:             NEMS_pmux1 = 0;
 14358  01BC  01D6               	clrf	_NEMS_pmux1
 14359                           
 14360                           ;NEMS.c: 522:             waveform.current_amplitude = 0;
 14361  01BD  300A               	movlw	10
 14362  01BE  0086               	movwf	6
 14363  01BF  3027               	movlw	39
 14364  01C0  0087               	movwf	7
 14365  01C1  3151               	addfsr 1,17
 14366  01C2  0181               	clrf	1
 14367                           
 14368                           ;NEMS.c: 524:         } else if (waveform.clock_index < waveform.minus_phase_duration) {
 14369  01C3  0008               	return
 14370  01C4                     i1l2995:	
 14371  01C4  300A               	movlw	10
 14372  01C5  0086               	movwf	6
 14373  01C6  3027               	movlw	39
 14374  01C7  0087               	movwf	7
 14375  01C8  3149               	addfsr 1,9
 14376  01C9  0801               	movf	1,w
 14377  01CA  00F7               	movwf	??_NEMS_timer
 14378  01CB  01F8               	clrf	??_NEMS_timer+1
 14379  01CC  300A               	movlw	10
 14380  01CD  0086               	movwf	6
 14381  01CE  3027               	movlw	39
 14382  01CF  0087               	movwf	7
 14383  01D0  3142               	addfsr 1,2
 14384  01D1  3F40               	moviw [0]fsr1
 14385  01D2  00F9               	movwf	??_NEMS_timer+2
 14386  01D3  3F41               	moviw [1]fsr1
 14387  01D4  00FA               	movwf	??_NEMS_timer+3
 14388  01D5  0878               	movf	??_NEMS_timer+1,w
 14389  01D6  027A               	subwf	??_NEMS_timer+3,w
 14390  01D7  1D03               	skipz
 14391  01D8  29DB               	goto	u151_25
 14392  01D9  0877               	movf	??_NEMS_timer,w
 14393  01DA  0279               	subwf	??_NEMS_timer+2,w
 14394  01DB                     u151_25:	
 14395  01DB  1803               	skipnc
 14396  01DC  2A0B               	goto	i1l3005
 14397                           
 14398                           ;NEMS.c: 525:             NEMS_pulse_states = NEMS_MINUS_UP;
 14399  01DD  3004               	movlw	4
 14400  01DE  00F7               	movwf	??_NEMS_timer
 14401  01DF  0877               	movf	??_NEMS_timer,w
 14402  01E0  00F0               	movwf	_NEMS_pulse_states	;volatile
 14403                           
 14404                           ;NEMS.c: 526:             NEMS_nmux1 = waveform.channel2;
 14405  01E1  30EF               	movlw	239
 14406  01E2  0086               	movwf	6
 14407  01E3  3027               	movlw	39
 14408  01E4  0087               	movwf	7
 14409  01E5  0801               	movf	1,w
 14410  01E6  00F7               	movwf	??_NEMS_timer
 14411  01E7  0877               	movf	??_NEMS_timer,w
 14412  01E8  00D7               	movwf	_NEMS_nmux1
 14413                           
 14414                           ;NEMS.c: 527:             NEMS_pmux1 = waveform.channel1;
 14415  01E9  30EE               	movlw	238
 14416  01EA  0086               	movwf	6
 14417  01EB  3027               	movlw	39
 14418  01EC  0087               	movwf	7
 14419  01ED  0801               	movf	1,w
 14420  01EE  00F7               	movwf	??_NEMS_timer
 14421  01EF  0877               	movf	??_NEMS_timer,w
 14422  01F0  00D6               	movwf	_NEMS_pmux1
 14423                           
 14424                           ;NEMS.c: 529:             waveform.current_amplitude = waveform.pulse_amplitude >> wavef
      +                          orm.symmetry_divider;
 14425  01F1  300A               	movlw	10
 14426  01F2  0086               	movwf	6
 14427  01F3  3027               	movlw	39
 14428  01F4  0087               	movwf	7
 14429  01F5  314F               	addfsr 1,15
 14430  01F6  0801               	movf	1,w
 14431  01F7  00F7               	movwf	??_NEMS_timer
 14432  01F8  300A               	movlw	10
 14433  01F9  0086               	movwf	6
 14434  01FA  3027               	movlw	39
 14435  01FB  0087               	movwf	7
 14436  01FC  3150               	addfsr 1,16
 14437  01FD  0A01               	incf	1,w
 14438  01FE  2A00               	goto	u152_24
 14439  01FF                     u152_25:	
 14440  01FF  36F7               	lsrf	??_NEMS_timer,f
 14441  0200                     u152_24:	
 14442  0200  0B89               	decfsz	9,f
 14443  0201  29FF               	goto	u152_25
 14444  0202  0877               	movf	??_NEMS_timer,w
 14445  0203  00F8               	movwf	??_NEMS_timer+1
 14446  0204  301B               	movlw	27
 14447  0205  0086               	movwf	6
 14448  0206  3027               	movlw	39
 14449  0207  0087               	movwf	7
 14450  0208  0878               	movf	??_NEMS_timer+1,w
 14451  0209  0081               	movwf	1
 14452                           
 14453                           ;NEMS.c: 531:         } else {
 14454  020A  0008               	return
 14455  020B                     i1l3005:	
 14456                           
 14457                           ;NEMS.c: 532:             NEMS_pulse_states = NEMS_PULSE_OFF;
 14458  020B  01F0               	clrf	_NEMS_pulse_states	;volatile
 14459  020C  29BB               	goto	L5
 14460  020D                     __end_of_NEMS_timer:	
 14461                           ;NEMS.c: 534:             NEMS_pmux1 = 0;
 14462                           
 14463                           ;NEMS.c: 533:             NEMS_nmux1 = 0;
 14464                           
 14465                           
 14466                           	psect	text55
 14467  07FF                     __ptext55:	
 14468 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 14469 ;; Defined at:
 14470 ;;		line 155 in file "mcc_generated_files/tmr0.c"
 14471 ;; Parameters:    Size  Location     Type
 14472 ;;		None
 14473 ;; Auto vars:     Size  Location     Type
 14474 ;;		None
 14475 ;; Return value:  Size  Location     Type
 14476 ;;                  1    wreg      void 
 14477 ;; Registers used:
 14478 ;;		None
 14479 ;; Tracked objects:
 14480 ;;		On entry : 3F/0
 14481 ;;		On exit  : 3F/0
 14482 ;;		Unchanged: 3F/0
 14483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14488 ;;Total ram usage:        0 bytes
 14489 ;; Hardware stack levels used:    1
 14490 ;; This function calls:
 14491 ;;		Nothing
 14492 ;; This function is called by:
 14493 ;;		_TMR0_Initialize
 14494 ;;		_TMR0_ISR
 14495 ;; This function uses a non-reentrant model
 14496 ;;
 14497                           
 14498                           
 14499                           ;psect for function _TMR0_DefaultInterruptHandler
 14500  07FF                     _TMR0_DefaultInterruptHandler:	
 14501                           
 14502                           ;incstack = 0
 14503                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 14504  07FF  0008               	return
 14505  0800                     __end_of_TMR0_DefaultInterruptHandler:	
 14506                           
 14507                           	psect	text56
 14508  0BB4                     __ptext56:	
 14509 ;; *************** function i1_DAC1_SetOutput *****************
 14510 ;; Defined at:
 14511 ;;		line 66 in file "mcc_generated_files/dac1.c"
 14512 ;; Parameters:    Size  Location     Type
 14513 ;;  inputData       1    wreg     unsigned char 
 14514 ;; Auto vars:     Size  Location     Type
 14515 ;;  inputData       1    0[COMMON] unsigned char 
 14516 ;; Return value:  Size  Location     Type
 14517 ;;                  1    wreg      void 
 14518 ;; Registers used:
 14519 ;;		wreg
 14520 ;; Tracked objects:
 14521 ;;		On entry : 3F/0
 14522 ;;		On exit  : 3F/12
 14523 ;;		Unchanged: 0/0
 14524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14526 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14528 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14529 ;;Total ram usage:        1 bytes
 14530 ;; Hardware stack levels used:    1
 14531 ;; This function calls:
 14532 ;;		Nothing
 14533 ;; This function is called by:
 14534 ;;		_NEMS_timer
 14535 ;; This function uses a non-reentrant model
 14536 ;;
 14537                           
 14538                           
 14539                           ;psect for function i1_DAC1_SetOutput
 14540  0BB4                     i1_DAC1_SetOutput:	
 14541                           
 14542                           ;incstack = 0
 14543                           ; Regs used in i1_DAC1_SetOutput: [wreg]
 14544                           ;i1DAC1_SetOutput@inputData stored from wreg
 14545  0BB4  00F6               	movwf	i1DAC1_SetOutput@inputData
 14546                           
 14547                           ;mcc_generated_files/dac1.c: 66: void DAC1_SetOutput(uint8_t inputData);mcc_generated_fi
      +                          les/dac1.c: 67: {;mcc_generated_files/dac1.c: 68:     DAC1CON1 = inputData;
 14548  0BB5  0876               	movf	i1DAC1_SetOutput@inputData,w
 14549  0BB6  0152               	movlb	18	; select bank18
 14550  0BB7  008F               	movwf	15	;volatile
 14551  0BB8  0008               	return
 14552  0BB9                     __end_ofi1_DAC1_SetOutput:	
 14553                           
 14554                           	psect	text57
 14555  0D9E                     __ptext57:	
 14556 ;; *************** function _EUSART1_Transmit_ISR *****************
 14557 ;; Defined at:
 14558 ;;		line 197 in file "mcc_generated_files/eusart1.c"
 14559 ;; Parameters:    Size  Location     Type
 14560 ;;		None
 14561 ;; Auto vars:     Size  Location     Type
 14562 ;;		None
 14563 ;; Return value:  Size  Location     Type
 14564 ;;                  1    wreg      void 
 14565 ;; Registers used:
 14566 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14567 ;; Tracked objects:
 14568 ;;		On entry : 3F/0
 14569 ;;		On exit  : 31/0
 14570 ;;		Unchanged: 0/0
 14571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14574 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14575 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14576 ;;Total ram usage:        1 bytes
 14577 ;; Hardware stack levels used:    1
 14578 ;; This function calls:
 14579 ;;		Nothing
 14580 ;; This function is called by:
 14581 ;;		_EUSART1_Initialize
 14582 ;;		_INTERRUPT_InterruptManager
 14583 ;; This function uses a non-reentrant model
 14584 ;;
 14585                           
 14586                           
 14587                           ;psect for function _EUSART1_Transmit_ISR
 14588  0D9E                     _EUSART1_Transmit_ISR:	
 14589                           
 14590                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 14591                           
 14592                           ;incstack = 0
 14593                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 14594  0D9E  3008               	movlw	8
 14595  0D9F  026E               	subwf	_eusart1TxBufferRemaining,w
 14596  0DA0  1803               	skipnc
 14597  0DA1  2DB7               	goto	i1l217
 14598                           
 14599                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 14600  0DA2  0874               	movf	_eusart1TxTail,w
 14601  0DA3  3E4E               	addlw	(low (_eusart1TxBuffer| 0))& (0+255)
 14602  0DA4  0086               	movwf	6
 14603  0DA5  0187               	clrf	7
 14604  0DA6  0801               	movf	1,w
 14605  0DA7  0142               	movlb	2	; select bank2
 14606  0DA8  009A               	movwf	26	;volatile
 14607  0DA9  3001               	movlw	1
 14608  0DAA  00F6               	movwf	??_EUSART1_Transmit_ISR
 14609  0DAB  0876               	movf	??_EUSART1_Transmit_ISR,w
 14610  0DAC  07F4               	addwf	_eusart1TxTail,f	;volatile
 14611                           
 14612                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 14613  0DAD  3008               	movlw	8
 14614  0DAE  0274               	subwf	_eusart1TxTail,w
 14615  0DAF  1803               	btfsc	3,0
 14616                           
 14617                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
 14618  0DB0  01F4               	clrf	_eusart1TxTail	;volatile
 14619                           
 14620                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
 14621  0DB1  3001               	movlw	1
 14622  0DB2  00F6               	movwf	??_EUSART1_Transmit_ISR
 14623  0DB3  0876               	movf	??_EUSART1_Transmit_ISR,w
 14624  0DB4  0140               	movlb	0	; select bank0
 14625  0DB5  07EE               	addwf	_eusart1TxBufferRemaining,f	;volatile
 14626                           
 14627                           ;mcc_generated_files/eusart1.c: 209:     }
 14628  0DB6  0008               	return
 14629  0DB7                     i1l217:	
 14630                           ;mcc_generated_files/eusart1.c: 210:     else
 14631                           
 14632                           
 14633                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
 14634  0DB7  014E               	movlb	14	; select bank14
 14635  0DB8  1219               	bcf	25,4	;volatile
 14636  0DB9  0008               	return
 14637  0DBA                     __end_of_EUSART1_Transmit_ISR:	
 14638                           
 14639                           	psect	text58
 14640  0ED9                     __ptext58:	
 14641 ;; *************** function _EUSART1_Receive_ISR *****************
 14642 ;; Defined at:
 14643 ;;		line 216 in file "mcc_generated_files/eusart1.c"
 14644 ;; Parameters:    Size  Location     Type
 14645 ;;		None
 14646 ;; Auto vars:     Size  Location     Type
 14647 ;;		None
 14648 ;; Return value:  Size  Location     Type
 14649 ;;                  1    wreg      void 
 14650 ;; Registers used:
 14651 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14652 ;; Tracked objects:
 14653 ;;		On entry : 3F/0
 14654 ;;		On exit  : 0/0
 14655 ;;		Unchanged: 0/0
 14656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14661 ;;Total ram usage:        0 bytes
 14662 ;; Hardware stack levels used:    1
 14663 ;; Hardware stack levels required when called:    2
 14664 ;; This function calls:
 14665 ;;		Absolute function
 14666 ;;		_EUSART1_DefaultErrorHandler
 14667 ;;		_EUSART1_DefaultFramingErrorHandler
 14668 ;;		_EUSART1_DefaultOverrunErrorHandler
 14669 ;;		_EUSART1_RxDataHandler
 14670 ;; This function is called by:
 14671 ;;		_EUSART1_Initialize
 14672 ;;		_INTERRUPT_InterruptManager
 14673 ;; This function uses a non-reentrant model
 14674 ;;
 14675                           
 14676                           
 14677                           ;psect for function _EUSART1_Receive_ISR
 14678  0ED9                     _EUSART1_Receive_ISR:	
 14679                           
 14680                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 14681                           
 14682                           ;incstack = 0
 14683                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14684  0ED9  0873               	movf	_eusart1RxHead,w	;volatile
 14685  0EDA  3E46               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 14686  0EDB  0086               	movwf	6
 14687  0EDC  0187               	clrf	7
 14688  0EDD  0181               	clrf	1
 14689                           
 14690                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
 14691  0EDE  0142               	movlb	2	; select bank2
 14692  0EDF  1D1D               	btfss	29,2	;volatile
 14693  0EE0  2EEC               	goto	i1l3043
 14694                           
 14695                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 14696  0EE1  0873               	movf	_eusart1RxHead,w	;volatile
 14697  0EE2  3E46               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 14698  0EE3  0086               	movwf	6
 14699  0EE4  0187               	clrf	7
 14700  0EE5  1481               	bsf	1,1
 14701                           
 14702                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
 14703  0EE6  0141               	movlb	1	; select bank1
 14704  0EE7  082D               	movf	(_EUSART1_FramingErrorHandler+1)^(0+128),w
 14705  0EE8  008A               	movwf	10
 14706  0EE9  082C               	movf	_EUSART1_FramingErrorHandler^(0+128),w
 14707  0EEA  000A               	callw
 14708  0EEB  318E               	pagesel	$
 14709  0EEC                     i1l3043:	
 14710                           
 14711                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
 14712  0EEC  0142               	movlb	2	; select bank2
 14713  0EED  1C9D               	btfss	29,1	;volatile
 14714  0EEE  2EFA               	goto	i1l3049
 14715                           
 14716                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 14717  0EEF  0873               	movf	_eusart1RxHead,w	;volatile
 14718  0EF0  3E46               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 14719  0EF1  0086               	movwf	6
 14720  0EF2  0187               	clrf	7
 14721  0EF3  1501               	bsf	1,2
 14722                           
 14723                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
 14724  0EF4  0141               	movlb	1	; select bank1
 14725  0EF5  082B               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+128),w
 14726  0EF6  008A               	movwf	10
 14727  0EF7  082A               	movf	_EUSART1_OverrunErrorHandler^(0+128),w
 14728  0EF8  000A               	callw
 14729  0EF9  318E               	pagesel	$
 14730  0EFA                     i1l3049:	
 14731                           
 14732                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 14733  0EFA  0873               	movf	_eusart1RxHead,w	;volatile
 14734  0EFB  3E46               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 14735  0EFC  0086               	movwf	6
 14736  0EFD  0187               	clrf	7
 14737  0EFE  0801               	movf	1,w
 14738  0EFF  1903               	btfsc	3,2
 14739  0F00  2F08               	goto	i1l3053
 14740                           
 14741                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
 14742  0F01  0141               	movlb	1	; select bank1
 14743  0F02  0829               	movf	(_EUSART1_ErrorHandler+1)^(0+128),w
 14744  0F03  008A               	movwf	10
 14745  0F04  0828               	movf	_EUSART1_ErrorHandler^(0+128),w
 14746  0F05  000A               	callw
 14747  0F06  318E               	pagesel	$
 14748                           
 14749                           ;mcc_generated_files/eusart1.c: 233:     } else {
 14750  0F07  0008               	return
 14751  0F08                     i1l3053:	
 14752                           
 14753                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
 14754  0F08  318C  2470         	fcall	_EUSART1_RxDataHandler
 14755  0F0A  0008               	return
 14756  0F0B                     __end_of_EUSART1_Receive_ISR:	
 14757                           
 14758                           	psect	text59
 14759  0BA8                     __ptext59:	
 14760 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 14761 ;; Defined at:
 14762 ;;		line 252 in file "mcc_generated_files/eusart1.c"
 14763 ;; Parameters:    Size  Location     Type
 14764 ;;		None
 14765 ;; Auto vars:     Size  Location     Type
 14766 ;;		None
 14767 ;; Return value:  Size  Location     Type
 14768 ;;                  1    wreg      void 
 14769 ;; Registers used:
 14770 ;;		None
 14771 ;; Tracked objects:
 14772 ;;		On entry : 3F/1
 14773 ;;		On exit  : 3F/2
 14774 ;;		Unchanged: 0/0
 14775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14780 ;;Total ram usage:        0 bytes
 14781 ;; Hardware stack levels used:    1
 14782 ;; This function calls:
 14783 ;;		Nothing
 14784 ;; This function is called by:
 14785 ;;		_EUSART1_Initialize
 14786 ;;		_EUSART1_Receive_ISR
 14787 ;; This function uses a non-reentrant model
 14788 ;;
 14789                           
 14790                           
 14791                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 14792  0BA8                     _EUSART1_DefaultOverrunErrorHandler:	
 14793                           
 14794                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
 14795                           
 14796                           ;incstack = 0
 14797                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 14798  0BA8  0142               	movlb	2	; select bank2
 14799  0BA9  121D               	bcf	29,4	;volatile
 14800                           
 14801                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
 14802  0BAA  161D               	bsf	29,4	;volatile
 14803  0BAB  0008               	return
 14804  0BAC                     __end_of_EUSART1_DefaultOverrunErrorHandler:	
 14805                           
 14806                           	psect	text60
 14807  0003                     __ptext60:	
 14808 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 14809 ;; Defined at:
 14810 ;;		line 250 in file "mcc_generated_files/eusart1.c"
 14811 ;; Parameters:    Size  Location     Type
 14812 ;;		None
 14813 ;; Auto vars:     Size  Location     Type
 14814 ;;		None
 14815 ;; Return value:  Size  Location     Type
 14816 ;;                  1    wreg      void 
 14817 ;; Registers used:
 14818 ;;		None
 14819 ;; Tracked objects:
 14820 ;;		On entry : 3F/1
 14821 ;;		On exit  : 3F/1
 14822 ;;		Unchanged: 3F/0
 14823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14828 ;;Total ram usage:        0 bytes
 14829 ;; Hardware stack levels used:    1
 14830 ;; This function calls:
 14831 ;;		Nothing
 14832 ;; This function is called by:
 14833 ;;		_EUSART1_Initialize
 14834 ;;		_EUSART1_Receive_ISR
 14835 ;; This function uses a non-reentrant model
 14836 ;;
 14837                           
 14838                           
 14839                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 14840  0003                     _EUSART1_DefaultFramingErrorHandler:	
 14841                           
 14842                           ;incstack = 0
 14843                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 14844  0003  0008               	return
 14845  0004                     __end_of_EUSART1_DefaultFramingErrorHandler:	
 14846                           
 14847                           	psect	text61
 14848  0B9F                     __ptext61:	
 14849 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 14850 ;; Defined at:
 14851 ;;		line 260 in file "mcc_generated_files/eusart1.c"
 14852 ;; Parameters:    Size  Location     Type
 14853 ;;		None
 14854 ;; Auto vars:     Size  Location     Type
 14855 ;;		None
 14856 ;; Return value:  Size  Location     Type
 14857 ;;                  1    wreg      void 
 14858 ;; Registers used:
 14859 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14860 ;; Tracked objects:
 14861 ;;		On entry : 3F/1
 14862 ;;		On exit  : 3F/2
 14863 ;;		Unchanged: 0/0
 14864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14869 ;;Total ram usage:        0 bytes
 14870 ;; Hardware stack levels used:    1
 14871 ;; Hardware stack levels required when called:    1
 14872 ;; This function calls:
 14873 ;;		_EUSART1_RxDataHandler
 14874 ;; This function is called by:
 14875 ;;		_EUSART1_Initialize
 14876 ;;		_EUSART1_Receive_ISR
 14877 ;; This function uses a non-reentrant model
 14878 ;;
 14879                           
 14880                           
 14881                           ;psect for function _EUSART1_DefaultErrorHandler
 14882  0B9F                     _EUSART1_DefaultErrorHandler:	
 14883                           
 14884                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
 14885                           
 14886                           ;incstack = 0
 14887                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 14888  0B9F  318C  2470         	fcall	_EUSART1_RxDataHandler
 14889  0BA1  0008               	return
 14890  0BA2                     __end_of_EUSART1_DefaultErrorHandler:	
 14891                           
 14892                           	psect	text62
 14893  0C70                     __ptext62:	
 14894 ;; *************** function _EUSART1_RxDataHandler *****************
 14895 ;; Defined at:
 14896 ;;		line 240 in file "mcc_generated_files/eusart1.c"
 14897 ;; Parameters:    Size  Location     Type
 14898 ;;		None
 14899 ;; Auto vars:     Size  Location     Type
 14900 ;;		None
 14901 ;; Return value:  Size  Location     Type
 14902 ;;                  1    wreg      void 
 14903 ;; Registers used:
 14904 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14905 ;; Tracked objects:
 14906 ;;		On entry : 0/2
 14907 ;;		On exit  : 3F/2
 14908 ;;		Unchanged: 0/0
 14909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14912 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14913 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14914 ;;Total ram usage:        1 bytes
 14915 ;; Hardware stack levels used:    1
 14916 ;; This function calls:
 14917 ;;		Nothing
 14918 ;; This function is called by:
 14919 ;;		_EUSART1_Receive_ISR
 14920 ;;		_EUSART1_DefaultErrorHandler
 14921 ;; This function uses a non-reentrant model
 14922 ;;
 14923                           
 14924                           
 14925                           ;psect for function _EUSART1_RxDataHandler
 14926  0C70                     _EUSART1_RxDataHandler:	
 14927                           
 14928                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 14929                           
 14930                           ;incstack = 0
 14931                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 14932  0C70  0142               	movlb	2	; select bank2
 14933  0C71  0819               	movf	25,w	;volatile
 14934  0C72  00F6               	movwf	??_EUSART1_RxDataHandler
 14935  0C73  0873               	movf	_eusart1RxHead,w
 14936  0C74  3EA0               	addlw	(low (_eusart1RxBuffer| 0))& (0+255)
 14937  0C75  0086               	movwf	6
 14938  0C76  0187               	clrf	7
 14939  0C77  0876               	movf	??_EUSART1_RxDataHandler,w
 14940  0C78  0081               	movwf	1
 14941  0C79  3001               	movlw	1
 14942  0C7A  00F6               	movwf	??_EUSART1_RxDataHandler
 14943  0C7B  0876               	movf	??_EUSART1_RxDataHandler,w
 14944  0C7C  07F3               	addwf	_eusart1RxHead,f	;volatile
 14945                           
 14946                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 14947  0C7D  3008               	movlw	8
 14948  0C7E  0273               	subwf	_eusart1RxHead,w
 14949  0C7F  1803               	btfsc	3,0
 14950                           
 14951                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
 14952  0C80  01F3               	clrf	_eusart1RxHead	;volatile
 14953                           
 14954                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
 14955  0C81  3001               	movlw	1
 14956  0C82  00F6               	movwf	??_EUSART1_RxDataHandler
 14957  0C83  0876               	movf	??_EUSART1_RxDataHandler,w
 14958  0C84  07F1               	addwf	_eusart1RxCount,f	;volatile
 14959  0C85  0008               	return
 14960  0C86                     __end_of_EUSART1_RxDataHandler:	
 14961  007E                     btemp	set	126	;btemp
 14962  007E                     int$flags	set	126
 14963  007E                     wtemp0	set	126


Data Sizes:
    Strings     415
    Constant    16
    Data        0
    BSS         46
    Persistent  47
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     38      79
    BANK1            80      2      16
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           42      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    _sprintf_u8b@mess	PTR unsigned char  size(1) Largest target is 4
		 -> NEMS_get_program@aux(BANK0[4]), 

    _puts@pt	PTR unsigned char  size(2) Largest target is 28
		 -> STR_51(CODE[6]), STR_50(CODE[6]), STR_49(CODE[28]), STR_48(CODE[6]), 
		 -> STR_47(CODE[6]), STR_46(CODE[7]), STR_45(CODE[6]), STR_44(CODE[7]), 
		 -> STR_43(CODE[6]), STR_42(CODE[2]), STR_41(CODE[12]), STR_40(CODE[2]), 
		 -> STR_39(CODE[12]), STR_38(CODE[2]), STR_37(CODE[25]), STR_36(CODE[2]), 
		 -> STR_35(CODE[23]), STR_34(CODE[2]), STR_33(CODE[21]), STR_32(CODE[2]), 
		 -> STR_31(CODE[16]), STR_30(CODE[2]), STR_29(CODE[15]), STR_28(CODE[2]), 
		 -> STR_27(CODE[18]), STR_26(CODE[2]), STR_25(CODE[25]), STR_24(CODE[2]), 
		 -> STR_23(CODE[17]), STR_22(CODE[2]), STR_21(CODE[17]), NEMS_get_program@aux(BANK0[4]), 
		 -> STR_20(CODE[15]), STR_19(CODE[7]), STR_18(CODE[6]), STR_17(CODE[7]), 
		 -> STR_16(CODE[6]), STR_15(CODE[7]), STR_14(CODE[6]), STR_13(CODE[7]), 
		 -> STR_12(CODE[6]), STR_11(CODE[7]), STR_10(CODE[6]), STR_9(CODE[7]), 
		 -> STR_8(CODE[6]), STR_7(CODE[7]), STR_6(CODE[6]), STR_5(CODE[7]), 
		 -> STR_4(CODE[6]), STR_3(CODE[7]), STR_2(CODE[6]), STR_1(CODE[4]), 

    NEMS_get_packet@pt	PTR unsigned char  size(1) Largest target is 11
		 -> program.channel2(BANK0[1]), program.channel1(BANK0[1]), program.symmetry_factor(BANK0[1]), program.ramp_down(BANK0[1]), 
		 -> program.ramp_up(BANK0[1]), program.contractions(BANK0[1]), program.OFF_time(BANK0[1]), program.ON_time(BANK0[1]), 
		 -> program.phase_duration(BANK0[1]), program.frequency(BANK0[1]), program.amplitude(BANK0[1]), program(BANK0[11]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NEMS_timer(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NEMS_timer(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR0_ISR->_NEMS_timer
    _NEMS_timer->i1_DAC1_SetOutput
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _main->_NEMS_message_handler
    _SYSTEM_Initialize->_EUSART1_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _NEMS_message_handler->_NEMS_start_program
    _NEMS_stop_program->__puts
    _NEMS_start_program->_NEMS_recalculate_program
    _NEMS_recalculate_program->_NEMS_calculate_ramp
    _NEMS_calculate_ramp->___lwdiv
    ___lwdiv->___wmul
    _NEMS_set_symmetry_factor->_NEMS_get_packet
    _NEMS_set_ramp_up->_NEMS_get_packet
    _NEMS_set_ramp_down->_NEMS_get_packet
    _NEMS_set_phase_duration->_NEMS_get_packet
    _NEMS_set_frequency->_NEMS_get_packet
    _NEMS_set_contractions->_NEMS_get_packet
    _NEMS_set_channel2->_NEMS_get_packet
    _NEMS_set_channel1->_NEMS_get_packet
    _NEMS_set_amplitude->_NEMS_get_packet
    _NEMS_set_ON_time->_NEMS_get_packet
    _NEMS_set_OFF_time->_NEMS_get_packet
    _NEMS_get_packet->___bmul
    _NEMS_save_program->__puts
    _NEMS_load_program->__puts
    _NEMS_get_program->__sprintf_u8b
    __sprintf_u8b->___awdiv
    ___awdiv->___wmul
    __puts->_EUSART1_Write
    _NEMS_initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  122012
                                              0 BANK1      2     2      0
                _EUSART1_is_rx_ready
                    _NEMS_initialize
               _NEMS_message_handler
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     816
                    _DAC1_Initialize
                 _EUSART1_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   1     1      0     605
                                              2 BANK0      1     1      0
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _DAC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _NEMS_message_handler                                 3     3      0  120954
                                             35 BANK0      3     3      0
                       _EUSART1_Read
                   _NEMS_get_program
                  _NEMS_load_program
                  _NEMS_save_program
                  _NEMS_set_OFF_time
                   _NEMS_set_ON_time
                 _NEMS_set_amplitude
                  _NEMS_set_channel1
                  _NEMS_set_channel2
              _NEMS_set_contractions
                 _NEMS_set_frequency
            _NEMS_set_phase_duration
                 _NEMS_set_ramp_down
                   _NEMS_set_ramp_up
           _NEMS_set_symmetry_factor
                 _NEMS_start_program
                  _NEMS_stop_program
                              __puts
 ---------------------------------------------------------------------------------
 (2) _NEMS_stop_program                                    0     0      0    5803
                     _DAC1_SetOutput
                     _TMR0_StopTimer
                              __puts
 ---------------------------------------------------------------------------------
 (2) _NEMS_start_program                                   1     1      0   11618
                                             34 BANK0      1     1      0
           _NEMS_recalculate_program
                    _TMR0_StartTimer
                              __puts
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _NEMS_recalculate_program                             6     6      0    5846
                                             28 BANK0      6     6      0
                _NEMS_calculate_ramp
                            ___awdiv
                             ___bmul
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _NEMS_calculate_ramp                                 14    14      0    2410
                                             14 BANK0     14    14      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1216
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     996
                                              6 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _NEMS_set_symmetry_factor                             0     0      0    6750
                    _NEMS_get_packet
                              __puts
 ---------------------------------------------------------------------------------
 (2) _NEMS_set_ramp_up                                     0     0      0    6750
                    _NEMS_get_packet
                              __puts
 ---------------------------------------------------------------------------------
 (2) _NEMS_set_ramp_down                                   0     0      0    6750
                    _NEMS_get_packet
                              __puts
 ---------------------------------------------------------------------------------
 (2) _NEMS_set_phase_duration                              0     0      0    6750
                    _NEMS_get_packet
                              __puts
 ---------------------------------------------------------------------------------
 (2) _NEMS_set_frequency                                   0     0      0    6750
                    _NEMS_get_packet
                              __puts
 ---------------------------------------------------------------------------------
 (2) _NEMS_set_contractions                                0     0      0    6750
                    _NEMS_get_packet
                              __puts
 ---------------------------------------------------------------------------------
 (2) _NEMS_set_channel2                                    0     0      0    6750
                    _NEMS_get_packet
                              __puts
 ---------------------------------------------------------------------------------
 (2) _NEMS_set_channel1                                    0     0      0    6750
                    _NEMS_get_packet
                              __puts
 ---------------------------------------------------------------------------------
 (2) _NEMS_set_amplitude                                   0     0      0    6750
                    _NEMS_get_packet
                              __puts
 ---------------------------------------------------------------------------------
 (2) _NEMS_set_ON_time                                     0     0      0    6750
                    _NEMS_get_packet
                              __puts
 ---------------------------------------------------------------------------------
 (2) _NEMS_set_OFF_time                                    0     0      0    6750
                    _NEMS_get_packet
                              __puts
 ---------------------------------------------------------------------------------
 (3) _NEMS_get_packet                                      5     5      0     978
                                              4 BANK0      5     5      0
                       _EUSART1_Read
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     316
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Read                                         2     2      0      37
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _NEMS_save_program                                    2     2      0    7192
                                              8 BANK0      2     2      0
                              __puts
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (3) _eeprom_write                                         2     1      1    1052
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _NEMS_load_program                                    3     3      0    6177
                                              8 BANK0      3     3      0
                              __puts
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (3) _eeprom_read                                          1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _NEMS_get_program                                     5     5      0   10071
                                             24 BANK0      5     5      0
                              __puts
                       __sprintf_u8b
 ---------------------------------------------------------------------------------
 (3) __sprintf_u8b                                         9     8      1    3557
                                             15 BANK0      9     8      1
                            ___awdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              6     5      1     412
                                              0 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     908
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) __puts                                                6     4      2    5772
                                              2 BANK0      6     4      2
                      _EUSART1_Write
                _EUSART1_is_tx_ready
 ---------------------------------------------------------------------------------
 (3) _EUSART1_is_tx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _NEMS_initialize                                      1     1      0     242
                                              2 BANK0      1     1      0
                     _DAC1_SetOutput
           _TMR0_SetInterruptHandler
                     _TMR0_StopTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _DAC1_SetOutput                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0      22
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0      22
                   Absolute function *
                         _NEMS_timer *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _NEMS_timer                                           5     5      0      22
                                              1 COMMON     5     5      0
                   i1_DAC1_SetOutput
 ---------------------------------------------------------------------------------
 (9) i1_DAC1_SetOutput                                     1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Receive_ISR                                  0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (8) _EUSART1_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_DefaultErrorHandler                          0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (8) _EUSART1_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_is_rx_ready
   _NEMS_initialize
     _DAC1_SetOutput
     _TMR0_SetInterruptHandler
     _TMR0_StopTimer
   _NEMS_message_handler
     _EUSART1_Read
     _NEMS_get_program
       __puts
         _EUSART1_Write
         _EUSART1_is_tx_ready
       __sprintf_u8b
         ___awdiv
           ___wmul (ARG)
         ___lbmod
     _NEMS_load_program
       __puts
         _EUSART1_Write
         _EUSART1_is_tx_ready
       _eeprom_read
     _NEMS_save_program
       __puts
         _EUSART1_Write
         _EUSART1_is_tx_ready
       _eeprom_write
     _NEMS_set_OFF_time
       _NEMS_get_packet
         _EUSART1_Read
         ___bmul
       __puts
         _EUSART1_Write
         _EUSART1_is_tx_ready
     _NEMS_set_ON_time
       _NEMS_get_packet
         _EUSART1_Read
         ___bmul
       __puts
         _EUSART1_Write
         _EUSART1_is_tx_ready
     _NEMS_set_amplitude
       _NEMS_get_packet
         _EUSART1_Read
         ___bmul
       __puts
         _EUSART1_Write
         _EUSART1_is_tx_ready
     _NEMS_set_channel1
       _NEMS_get_packet
         _EUSART1_Read
         ___bmul
       __puts
         _EUSART1_Write
         _EUSART1_is_tx_ready
     _NEMS_set_channel2
       _NEMS_get_packet
         _EUSART1_Read
         ___bmul
       __puts
         _EUSART1_Write
         _EUSART1_is_tx_ready
     _NEMS_set_contractions
       _NEMS_get_packet
         _EUSART1_Read
         ___bmul
       __puts
         _EUSART1_Write
         _EUSART1_is_tx_ready
     _NEMS_set_frequency
       _NEMS_get_packet
         _EUSART1_Read
         ___bmul
       __puts
         _EUSART1_Write
         _EUSART1_is_tx_ready
     _NEMS_set_phase_duration
       _NEMS_get_packet
         _EUSART1_Read
         ___bmul
       __puts
         _EUSART1_Write
         _EUSART1_is_tx_ready
     _NEMS_set_ramp_down
       _NEMS_get_packet
         _EUSART1_Read
         ___bmul
       __puts
         _EUSART1_Write
         _EUSART1_is_tx_ready
     _NEMS_set_ramp_up
       _NEMS_get_packet
         _EUSART1_Read
         ___bmul
       __puts
         _EUSART1_Write
         _EUSART1_is_tx_ready
     _NEMS_set_symmetry_factor
       _NEMS_get_packet
         _EUSART1_Read
         ___bmul
       __puts
         _EUSART1_Write
         _EUSART1_is_tx_ready
     _NEMS_start_program
       _NEMS_recalculate_program
         _NEMS_calculate_ramp
           ___lwdiv
             ___wmul (ARG)
           ___wmul
         ___awdiv
           ___wmul (ARG)
         ___bmul
         ___lwdiv
           ___wmul (ARG)
         ___wmul
       _TMR0_StartTimer
       __puts
         _EUSART1_Write
         _EUSART1_is_tx_ready
     _NEMS_stop_program
       _DAC1_SetOutput
       _TMR0_StopTimer
       __puts
         _EUSART1_Write
         _EUSART1_is_tx_ready
     __puts
       _EUSART1_Write
       _EUSART1_is_tx_ready
   _SYSTEM_Initialize
     _DAC1_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _TMR0_ISR *
     Absolute function(Fake) *
     _NEMS_timer *
       i1_DAC1_SetOutput
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     26      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0      6B       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      2      10       8       20.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              2A      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BANK23               0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BANK24               0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BANK25               0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0      6B      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Mar  8 15:07:04 2021

                      _eusart1TxBufferRemaining 006E                                  ___bmul@product 0022  
                                 ?__sprintf_u8b 002F                                     __CFG_CP$OFF 0000  
                     __end_of_NEMS_stop_program 0C47                                    ___awdiv@sign 002C  
                        __end_of_FVR_Initialize 0BB4                             ___wmul@multiplicand 0022  
                                   __CFG_LVP$ON 0000                                 _DAC1_Initialize 0BAC  
                                           l211 0E46                                             l802 0C17  
                                           l824 0DF8                                             l488 0791  
                                           l828 0E11                                             l837 0D8B  
                                           u905 0F16                                             u925 0F20  
                                           u935 0F2A                                             u945 0F32  
                                           _mux 10AE                         __size_of_PMD_Initialize 000A  
                  __end_of_NEMS_message_handler 0792                        __end_of_NEMS_set_ON_time 0CB4  
                                  __CFG_BORV$LO 0000                                             wreg 0009  
                                _DAC1_SetOutput 0BC8                                   __CFG_BBEN$OFF 0000  
                                          l1055 0DF1                                            l2331 0F31  
                                          l2323 0F13                                            l2421 079C  
                                          l2325 0F1F                                            l2335 0F3A  
                                          l3217 0D85                                            l2427 07A7  
                                          l3307 0DDE                                            l3235 0E5D  
                                          l2453 07DE                                            l2445 07CD  
                                          l2437 07AF                                            l3271 0E5A  
                                          l2439 07BB                                            l3257 0E3B  
                                          l3345 0E82                                            l2449 07D6  
                                          l3281 0510                                            l3441 0302  
                                          l3339 0E90                                            l3291 0C27  
                                          l3363 0FBB                                            l3611 0CAC  
                                          l3443 0308                                            l3451 032B  
                                          l3605 0D7B                                            l3445 030E  
                                          l3295 0C2D                                            l3623 0D08  
                                          l3287 0511                                            l3279 04BE  
                                          l3439 02FB                                            l3617 0C95  
                                          l3449 0315                                            l3395 05F3  
                                          l3387 05DA                                            l3635 0D4D  
                                          l3821 0CF1                                            l3629 0D64  
                                          l3901 0742                                            l3815 0CDA  
                                          l3911 0751                                            l3903 0745  
                                          l3593 0D1F                                            l3905 0748  
                                          l3587 0CC3                                            l3907 074B  
                                          l3915 0754                                            l3909 074E  
                                          l3933 0E30                                            l3599 0D36  
                                          l3881 0724                                            l3795 0DC6  
                                          l3891 0733                                            l3883 0727  
                                          l3893 0736                                            l3885 072A  
                                          l3895 0739                                            l3887 072D  
                                          l3879 071D                                            l3977 075C  
                                          l3897 073C                                            l3889 0730  
                                          l3979 031D                                            l3899 073F  
                                          STR_1 11AB                                            STR_2 1169  
                                          STR_3 1119                                            STR_4 117B  
                                          STR_5 112E                                            STR_6 1175  
                                          STR_7 1127                                            STR_8 1181  
                                          STR_9 1135                                            u1105 07B2  
                                          u1125 07BC                                            u1135 07C6  
                                          u1145 07CE                                            u2107 0E27  
                                          u2117 0F84                                            _LATA 0018  
                                          u2070 0BD3                                            _LATB 0019  
                                          _LATC 001A                                            _LATE 001C  
                                          u1710 0BDA                                            u1825 0DE1  
                    __end_of_NEMS_set_amplitude 0CCB                                            u1941 0C16  
                                          u1685 0D8C                                            u1695 0D91  
                                          u1785 04CF                                            u1795 0522  
                                          _PMD0 0796                                            _PMD1 0797  
                                          _PMD2 0798                                            _PMD3 0799  
                                          _PMD4 079A                                            _PMD5 079B  
                                          _PMD6 079C                                            _PMD7 079D  
                                          _WPUA 1F39                                            _WPUB 1F44  
                                          _WPUC 1F4F                                  ??_eeprom_write 0021  
                                          _WPUE 1F65                                   _EUSART1_Write 0E3A  
                                 __CFG_FCMEN$ON 0000                                     ?_NEMS_timer 0076  
                                          _main 0E18                                   ?_EUSART1_Read 0076  
                               _TMR0_StartTimer 0BA5                                            fsr0h 0005  
                                          fsr1h 0007                                            indf0 0000  
                                          fsr0l 0004                                            indf1 0001  
                                          fsr1l 0006                                            btemp 007E  
                                 __CFG_BOREN$ON 0000                                            start 0025  
                                 __CFG_CSWEN$ON 0000                               ___bmul@multiplier 0023  
                                 __CFG_MCLRE$ON 0000                      __end_of_NEMS_set_frequency 0D27  
                                ??__sprintf_u8b 0030                               ??_NEMS_get_packet 0024  
                       __end_of_TMR0_Initialize 07FF                        __end_of_NEMS_set_ramp_up 0D6C  
                ??_TMR0_DefaultInterruptHandler 0076                                 ?_FVR_Initialize 0076  
                __size_of_OSCILLATOR_Initialize 000A                   __end_of_OSCILLATOR_Initialize 0BFE  
                         _eusart1RxStatusBuffer 0046                                           ?_main 0076  
                    __end_of_NEMS_set_ramp_down 0D55                                 __end_of___awdiv 07E3  
                                         STR_10 1199                                           STR_11 1143  
                                         STR_12 115D                                           STR_20 10CE  
                                         STR_13 110B                                           STR_21 108C  
                                         STR_30 101A                                           STR_22 101A  
                                         STR_14 116F                                           STR_15 1120  
                                         STR_31 10BE                                           STR_23 109D  
                                         STR_40 101A                                           STR_32 101A  
                                         STR_24 101A                                           STR_16 119F  
                                         STR_17 114A                                           STR_41 10F8  
                                         STR_33 1065                                           STR_25 101C  
                                 __CFG_WDTE$OFF 0000                                           STR_42 101A  
                                         STR_34 101A                                           STR_26 101A  
                                         STR_50 1193                                           STR_18 1163  
                                         STR_51 1157                                           STR_43 1151  
                                         STR_19 1112                                           STR_27 107A  
                                         STR_35 104E                                           STR_36 101A  
                                         STR_28 101A                                           STR_44 1104  
                                         STR_45 118D                                           STR_29 10DD  
                                         STR_37 1035                                           STR_38 101A  
                                         STR_46 113C                                           STR_47 11A5  
                                         STR_39 10EC                                           STR_48 1187  
                                         STR_49 1000                                 __end_of___lbmod 0DF7  
                               ___awdiv@divisor 0026                                 __end_of___lwdiv 0F3F  
                                         i1l217 0DB7                                           i1l352 001A  
                                         i1l357 0023                                           i1l349 000E  
                        __end_of_DAC1_SetOutput 0BCE                                 ___awdiv@counter 002B  
                                         _OSCEN 0891                                           _TMR0H 059D  
                                         _TMR0L 059C                                           _TRISA 0012  
                                         _TRISB 0013                                           _TRISC 0014  
                                         _TRISE 0016               __size_of_TMR0_SetInterruptHandler 0005  
                     ?_TMR0_SetInterruptHandler 0020                            _EUSART1_Transmit_ISR 0D9E  
                              __end_of_TMR0_ISR 0C5B                                   __CFG_WRTB$OFF 0000  
                                 __CFG_WRTC$OFF 0000                                   __CFG_WRTD$OFF 0000  
                                         __puts 0E81                                  ?_EUSART1_Write 0076  
                                         pclath 000A                       ??_NEMS_set_phase_duration 0029  
                                ??_EUSART1_Read 0020                                           status 0003  
                                         wtemp0 007E                     __size_of_NEMS_start_program 001E  
    __end_of_EUSART1_DefaultFramingErrorHandler 0004     __size_of_EUSART1_DefaultFramingErrorHandler 0001  
          ??_EUSART1_DefaultFramingErrorHandler 0076             ?_EUSART1_DefaultFramingErrorHandler 0076  
            _EUSART1_DefaultFramingErrorHandler 0003                               ??_NEMS_initialize 0022  
                     __size_ofi1_DAC1_SetOutput 0005                                 __initialization 0027  
                    __end_of_EUSART1_Initialize 1000                                    __end_of_main 0E3A  
                       __end_of_DAC1_Initialize 0BB0                                  __CFG_SAFEN$OFF 0000  
                    __size_of_NEMS_stop_program 0011                     ?_INTERRUPT_InterruptManager 0076  
                             ?_NEMS_get_program 0076                                          ??_main 00AE  
                           __size_of_NEMS_timer 01BE                                 ?_DAC1_SetOutput 0076  
                            ??_NEMS_get_program 0038                           ?_EUSART1_Transmit_ISR 0076  
                           _NEMS_calculate_ramp 04BD                         __end_of_TMR0_StartTimer 0BA8  
                                        ?__puts 0022                                ___awdiv@dividend 0028  
                                        _ANSELA 1F38                                          _ANSELB 1F43  
                                        _ANSELC 1F4E                              __CFG_RSTOSC$HFINT1 0000  
                    ??_NEMS_set_symmetry_factor 0029                                          _T0CON0 059E  
                                        _T0CON1 059F                                          _RC1REG 0119  
                                        _RC1STA 011D                                          i1l3005 020B  
                                        _ODCONA 1F3A                                          _ODCONB 1F45  
                                        i1l3043 0EEC                                          _ODCONC 1F50  
                                        _RC6PPS 1F26                                          i1l3053 0F08  
                                        _ODCONE 1F66                                          i1l3049 0EFA  
                  __size_of_EUSART1_is_rx_ready 0007                                          i1l2961 0139  
                                        i1l2953 00D6                                  __CFG_WDTCCS$SC 0000  
                                        i1l2971 015D                                          i1l2957 00FD  
                                        i1l2973 0165                                          i1l2985 019E  
                                        i1l2995 01C4                                          u150_25 01B5  
                                        u151_25 01DB                                          u143_25 007E  
                                        _INLVLA 1F3C                                          _INLVLB 1F47  
                                        _INLVLC 1F52                                          u152_24 0200  
                                        u152_25 01FF                                          u144_25 00BD  
                                        u145_25 00EE                                          u146_25 0114  
                                        _FVRCON 090C                                          u147_25 0151  
                                        u149_25 017A                                          _OSCFRQ 0893  
                  __size_of_EUSART1_is_tx_ready 0007                                          _TX1REG 011A  
                                        _TX1STA 011E                         DAC1_SetOutput@inputData 0020  
                                __CFG_PWRTS$OFF 0000                            _NEMS_message_handler 0716  
                          __size_of_eeprom_read 0011                            ?_NEMS_calculate_ramp 0076  
                       ??_NEMS_set_contractions 0029                                          ___bmul 0C25  
                                        ___wmul 0D83                                       ??___awdiv 002A  
                                __CFG_STVREN$ON 0000                                       ??___lbmod 0021  
                                     ??___lwdiv 002A                        ?_EUSART1_SetErrorHandler 0020  
                              ?_TMR0_Initialize 0076                                ___awdiv@quotient 002D  
                    NEMS_message_handler@header 0045                            __end_of_eeprom_write 0E18  
              ??_EUSART1_SetOverrunErrorHandler 0022                 ?_EUSART1_SetOverrunErrorHandler 0020  
                     i1DAC1_SetOutput@inputData 0076                                  _PMD_Initialize 0BFE  
                               ??_EUSART1_Write 0020        TMR0_SetInterruptHandler@InterruptHandler 0020  
                               _eusart1RxBuffer 00A0                            __end_of__sprintf_u8b 0600  
                               _eusart1TxBuffer 004E                            NEMS_calculate_ramp@i 003B  
                             _SYSTEM_Initialize 0C5B                                 ___lbmod@divisor 0020  
                       __end_of__initialization 004B                                 ___lbmod@counter 0024  
                               eeprom_read@addr 0020                              ?_SYSTEM_Initialize 0076  
                         ?_NEMS_message_handler 0076                             ___bmul@multiplicand 0020  
                __size_of_EUSART1_RxDataHandler 0016                           ??_NEMS_calculate_ramp 002E  
                 __end_of_EUSART1_RxDataHandler 0C86                                  __pcstackCOMMON 0076  
                           ??_SYSTEM_Initialize 0023                                ?_DAC1_Initialize 0076  
                                     ?_TMR0_ISR 0076                                   __end_of__puts 0EAB  
                        __end_of_PMD_Initialize 0C08                            __end_of_EUSART1_Read 0E81  
                        ??_EUSART1_Transmit_ISR 0076                               __sprintf_u8b@mess 0037  
                   __end_of_EUSART1_Receive_ISR 0F0B                               ?_NEMS_set_ON_time 0076  
                             eeprom_write@value 0020                                         ??__puts 0024  
                              ?_TMR0_StartTimer 0076                       __end_of_SYSTEM_Initialize 0C70  
                            ??_NEMS_set_ON_time 0029                                   _eusart1RxHead 0073  
                                 _eusart1TxHead 0075                                   _eusart1RxTail 0072  
                                    __pbssBANK0 0046                                      __pbssBANK1 00A0  
                                 _eusart1TxTail 0074               _EUSART1_TxDefaultInterruptHandler 006C  
               ??_EUSART1_SetRxInterruptHandler 0022                                 _NEMS_get_packet 0F7E  
                                  ??_NEMS_timer 0077                                i1_DAC1_SetOutput 0BB4  
               __end_of_EUSART1_SetErrorHandler 0BE4                                ??_FVR_Initialize 0020  
                                    __pmaintext 0E18                                         ?___bmul 0020  
              __end_of_TMR0_SetInterruptHandler 0BBE                         __size_of_TMR0_StopTimer 0003  
                            _NEMS_set_amplitude 0CB4                                         ?___wmul 0020  
                                    ??_TMR0_ISR 007C                                 __CFG_PPS1WAY$ON 0000  
                                    __pintentry 0004                               ?_NEMS_set_ramp_up 0076  
                               __CFG_ZCDDIS$OFF 0000                                 ?_PMD_Initialize 0076  
                           ?_NEMS_set_amplitude 0076          __end_of_EUSART1_SetFramingErrorHandler 0BEC  
       __size_of_EUSART1_SetFramingErrorHandler 0008                  _EUSART1_SetFramingErrorHandler 0BE4  
             __size_of_NEMS_recalculate_program 0169                              ??_NEMS_set_ramp_up 0029  
                     ?_NEMS_recalculate_program 0076                              __end_of_NEMS_timer 020D  
                            _NEMS_set_frequency 0D10                    ?_EUSART1_DefaultErrorHandler 0076  
                                       _SP1BRGH 011C                                         _SP1BRGL 011B  
                                       _OSCCON1 088D                                         _OSCCON3 088F  
                                       _OSCSTAT 0890                                         _NVMADRH 081B  
                                       _NVMADRL 081A                                         _NVMDATH 081D  
                                       _OSCTUNE 0892                                         _NVMDATL 081C  
                                       _NVMCON2 081F                                         _SLRCONA 1F3B  
                                       _SLRCONB 1F46                                         _SLRCONC 1F51  
                               _NEMS_initialize 0F3F                             ?_NEMS_set_frequency 0076  
                            _NEMS_set_ramp_down 0D3E                            ??_NEMS_set_amplitude 0029  
                        ??_NEMS_message_handler 0043                             ?_NEMS_set_ramp_down 0076  
                         __size_of_eeprom_write 0021                                 __size_of___bmul 0011  
                                       ___awdiv 0792                                         ___lbmod 0DD8  
                               __size_of___wmul 001B                                         ___lwdiv 0F0B  
                          ??_NEMS_set_frequency 0029                                ??_DAC1_SetOutput 0020  
                           _EUSART1_is_rx_ready 0BCE                             _EUSART1_is_tx_ready 0BD5  
                                       __ptext1 0C5B                                         __ptext2 07E3  
                                       __ptext3 0BFE                                         __ptext4 0EAB  
                                       __ptext5 0BF4                                         __ptext6 0BB0  
                                       __ptext7 0FBD                                         __ptext8 0BC3  
                                       __ptext9 0BBE                                 __CFG_WRTAPP$OFF 0000  
                         _OSCILLATOR_Initialize 0BF4                            ??_NEMS_set_ramp_down 0029  
                         __size_of__sprintf_u8b 008F                              _EUSART1_Initialize 0FBD  
                      ??_PIN_MANAGER_Initialize 0020                                 __CFG_WRTSAF$OFF 0000  
                       __end_of_NEMS_get_packet 0FBD                   ??_EUSART1_DefaultErrorHandler 0077  
                                       _program 005B                      __size_of_SYSTEM_Initialize 0015  
                                       clrloop0 0C09                            end_of_initialization 004B  
                          ?_EUSART1_is_rx_ready 0076                      __end_of_NEMS_start_program 0DD8  
                           ?_EUSART1_Initialize 0076                            ?_EUSART1_is_tx_ready 0076  
                     __size_of_NEMS_get_program 0147                                    _eeprom_write 0DF7  
                   _EUSART1_OverrunErrorHandler 00AA                               _NEMS_load_program 068C  
         __end_of_EUSART1_SetRxInterruptHandler 0BC3          __size_of_EUSART1_SetRxInterruptHandler 0005  
                 _EUSART1_SetRxInterruptHandler 0BBE                              ?_NEMS_load_program 0076  
                         __size_of_EUSART1_Read 0024                  __size_of_NEMS_set_contractions 0017  
                 __end_of_NEMS_set_contractions 0D10                                    __sprintf_u8b 0571  
                          ??_EUSART1_Initialize 0022                           __CFG_WDTCPS$WDTCPS_31 0000  
                      _TMR0_SetInterruptHandler 0BB9                             ??_NEMS_load_program 0028  
                       __end_of_NEMS_initialize 0F7E                                ___lbmod@dividend 0023  
                      ?_NEMS_set_phase_duration 0076                __size_of_EUSART1_SetErrorHandler 0008  
                           EUSART1_Write@txData 0021                                __CFG_FEXTOSC$OFF 0000  
                         ??_EUSART1_is_rx_ready 0020                           ??_EUSART1_is_tx_ready 0020  
                                   ___lbmod@rem 0025                       __end_of_NEMS_load_program 0716  
                                 ??_eeprom_read 0020                                    _EUSART1_Read 0E5D  
          __size_of_EUSART1_DefaultErrorHandler 0003                            _timer0ReloadVal16bit 0068  
                                _TMR0_StopTimer 0BA2               __size_of_NEMS_set_symmetry_factor 0017  
                     ?_NEMS_set_symmetry_factor 0076                                  __end_of___bmul 0C36  
                                __end_of___wmul 0D9E                               __size_of_TMR0_ISR 0014  
                        ?_OSCILLATOR_Initialize 0076                        __end_ofi1_DAC1_SetOutput 0BB9  
                           start_initialization 0027                               _NEMS_set_OFF_time 0C86  
                      __size_of_TMR0_Initialize 001C                 __size_of_PIN_MANAGER_Initialize 002E  
                                   __end_of_mux 10BE                                ?_NEMS_get_packet 0076  
                            ?_NEMS_set_OFF_time 0076   EUSART1_SetRxInterruptHandler@interruptHandler 0020  
 EUSART1_SetTxInterruptHandler@interruptHandler 0020                           __end_of_EUSART1_Write 0E5D  
                   __end_of_NEMS_calculate_ramp 0571                             ??_NEMS_set_OFF_time 0029  
                        __end_of_TMR0_StopTimer 0BA5                       __size_of_NEMS_set_ON_time 0017  
                              __CFG_LPBOREN$OFF 0000                __end_of_NEMS_recalculate_program 0376  
                                      ??___bmul 0021                                ??_PMD_Initialize 0020  
                                      ??___wmul 0024                             __end_of_eeprom_read 0C25  
                         _EUSART1_RxDataHandler 0C70                  ?_EUSART1_SetRxInterruptHandler 0020  
                                _eusart1RxCount 0071                                ?_NEMS_initialize 0076  
               __end_of_NEMS_set_phase_duration 0D3E                       __end_of_NEMS_set_OFF_time 0C9D  
                                   __pbssBIGRAM 270A                        __size_of_DAC1_Initialize 0004  
                                   __pbssCOMMON 0070               _EUSART1_RxDefaultInterruptHandler 006A  
                                     ___latbits 0003                   __size_of_EUSART1_Transmit_ISR 001C  
                                 __pcstackBANK0 0020                                   __pcstackBANK1 00AE  
                             _NEMS_save_program 0600                                __sprintf_u8b@buf 0034  
                              __sprintf_u8b@aux 0033                                __sprintf_u8b@val 002F  
                     __size_of_NEMS_set_ramp_up 0017                                eeprom_write@addr 0021  
               ??_EUSART1_SetTxInterruptHandler 0022                                _NEMS_get_program 0376  
              ??_EUSART1_SetFramingErrorHandler 0022                 ?_EUSART1_SetFramingErrorHandler 0020  
                  __size_of_EUSART1_Receive_ISR 0032                              ?_NEMS_save_program 0076  
                    __size_of_NEMS_load_program 008A                           _TMR0_InterruptHandler 0066  
                                     __pnvBANK0 0066                                       __pnvBANK1 00A8  
                             _NEMS_set_channel1 0CCB                               _NEMS_set_channel2 0CE2  
                      __size_of_TMR0_StartTimer 0003                                 ?_TMR0_StopTimer 0076  
                           NEMS_get_program@aux 0039                                ___lwdiv@dividend 0028  
                        _PIN_MANAGER_Initialize 0EAB                              ?_NEMS_set_channel1 0076  
                            ?_NEMS_set_channel2 0076                             ??_NEMS_save_program 0028  
                                      ?___awdiv 0026                                        ?___lbmod 0020  
                                      ?___lwdiv 0026                                        _DAC1CON0 090E  
                                      _DAC1CON1 090F                             ??_NEMS_set_channel1 0029  
                           ??_NEMS_set_channel2 0029                    ??_INTERRUPT_InterruptManager 007C  
                                      _BAUD1CON 011F      __end_of_EUSART1_DefaultOverrunErrorHandler 0BAC  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0004            ??_EUSART1_DefaultOverrunErrorHandler 0076  
           ?_EUSART1_DefaultOverrunErrorHandler 0076              _EUSART1_DefaultOverrunErrorHandler 0BA8  
                          _EUSART1_ErrorHandler 00A8                         _EUSART1_SetErrorHandler 0BDC  
                     __end_of_NEMS_save_program 068C                                ___lwdiv@quotient 002B  
                                __size_of__puts 002A                               ??_TMR0_Initialize 0022  
                     __end_of_NEMS_set_channel1 0CE2                       __end_of_NEMS_set_channel2 0CF9  
                                ___wmul@product 0024                                        _LATAbits 0018  
       EUSART1_SetErrorHandler@interruptHandler 0020                     __size_of_NEMS_set_amplitude 0017  
                                     clear_ram0 0C08                                     __puts@index 0027  
                                   _eeprom_read 0C14                           NEMS_save_program@addr 0029  
                                      _PIE0bits 0716                                        _PIE3bits 0719  
           __size_of_INTERRUPT_InterruptManager 0021                      ??_TMR0_SetInterruptHandler 0022  
                        NEMS_get_packet@message 0026                                        _PIR0bits 070C  
                                      _PIR3bits 070F                   __size_of_NEMS_message_handler 007C  
                                      _RX1DTPPS 1ECB                          ?_EUSART1_RxDataHandler 0076  
                             __CFG_BBSIZE$BB512 0000                              _NEMS_start_program 0DBA  
                                      _TMR0_ISR 0C47                     __size_of_NEMS_set_frequency 0017  
                      _NEMS_recalculate_program 020D                               ___wmul@multiplier 0020  
                           ?_NEMS_start_program 0076                      __size_of_NEMS_set_OFF_time 0017  
                       __size_of_FVR_Initialize 0004                     __size_of_NEMS_set_ramp_down 0017  
                             ??_DAC1_Initialize 0020                __end_of_NEMS_set_symmetry_factor 0D83  
                         EUSART1_Read@readValue 0021                            ??_NEMS_start_program 0042  
                              _NEMS_set_ON_time 0C9D           __end_of_EUSART1_SetTxInterruptHandler 0BC8  
        __size_of_EUSART1_SetTxInterruptHandler 0005                   _EUSART1_SetTxInterruptHandler 0BC3  
              __size_of_NEMS_set_phase_duration 0017                         ??_OSCILLATOR_Initialize 0020  
                             ??_TMR0_StartTimer 0020                                __size_of___awdiv 0051  
                              __size_of___lbmod 001F                     __size_of_EUSART1_Initialize 0043  
                              __size_of___lwdiv 0034                           _NEMS_set_contractions 0CF9  
                     ??_EUSART1_SetErrorHandler 0022             __end_of_EUSART1_DefaultErrorHandler 0BA2  
                   _EUSART1_DefaultErrorHandler 0B9F                     __end_of_EUSART1_is_rx_ready 0BD5  
                                    _T0CON0bits 059E                               ?i1_DAC1_SetOutput 0076  
                   __end_of_EUSART1_is_tx_ready 0BDC                                 ___lwdiv@divisor 0026  
                       __size_of_DAC1_SetOutput 0006                      __size_of_NEMS_save_program 008C  
                               ___lwdiv@counter 002D                                        __ptext10 0BEC  
                                      __ptext11 0BE4                                        __ptext20 0D83  
                                      __ptext12 0BDC                                        __ptext21 0F0B  
                                      __ptext13 0BAC                                        __ptext30 0CB4  
                                      __ptext22 0D6C                                        __ptext14 0716  
                                      __ptext31 0C9D                                        __ptext23 0D55  
                                      __ptext15 0C36                                        __ptext40 0376  
                                      __ptext32 0C86                                        __ptext24 0D3E  
                                      __ptext16 0DBA                                        __ptext41 0571  
                                      __ptext33 0F7E                                        __ptext25 0D27  
                                      __ptext17 0BA5                                        __ptext50 0BC8  
                                      __ptext42 0DD8                                        __ptext34 0C25  
                                      __ptext26 0D10                                        __ptext18 020D  
                                      __ptext51 0BCE                                        __ptext43 0792  
                                      __ptext35 0E5D                                        __ptext27 0CF9  
                                      __ptext19 04BD                                        __ptext60 0003  
                                      __ptext44 0E81                                        __ptext36 0600  
                                      __ptext28 0CE2                                        __ptext61 0B9F  
                                      __ptext53 0C47                                        __ptext45 0BD5  
                                      __ptext37 0DF7                                        __ptext29 0CCB  
                                      __ptext62 0C70                                        __ptext54 004F  
                                      __ptext46 0E3A                                        __ptext38 068C  
                                      __ptext55 07FF                                        __ptext47 0F3F  
                                      __ptext39 0C14                                        __ptext56 0BB4  
                                      __ptext48 0BA2                                        __ptext57 0D9E  
                                      __ptext49 0BB9                                        __ptext58 0ED9  
                                      __ptext59 0BA8                              ??i1_DAC1_SetOutput 0076  
                                      __puts@pt 0022                                     _NEMS_states 0059  
                              _NEMS_set_ramp_up 0D55                      __size_of_NEMS_set_channel1 0017  
                    __size_of_NEMS_set_channel2 0017                               _NEMS_pulse_states 0070  
                                 __size_of_main 0022            __end_of_TMR0_DefaultInterruptHandler 0800  
         __size_of_TMR0_DefaultInterruptHandler 0001                    _TMR0_DefaultInterruptHandler 07FF  
                          __CFG_WDTCWS$WDTCWS_7 0000                                      _RC1STAbits 011D  
                             NEMS_get_packet@pt 0028  EUSART1_SetOverrunErrorHandler@interruptHandler 0020  
                                      int$flags 007E                                        _waveform 270A  
            __end_of_INTERRUPT_InterruptManager 0025                      _INTERRUPT_InterruptManager 0004  
                      __end_of_NEMS_get_program 04BD                     _EUSART1_FramingErrorHandler 00AC  
                           _EUSART1_Receive_ISR 0ED9                                _NEMS_wave_states 0058  
                                    _INTCONbits 000B                                     _NVMCON1bits 081E  
                         NEMS_load_program@addr 0029                                  __pstringtext10 10BE  
                                __pstringtext11 10CE                                  __pstringtext20 1127  
                                __pstringtext12 10DD                                  __pstringtext21 112E  
                                __pstringtext13 10EC                                  __pstringtext30 1169  
                                __pstringtext22 1135                                  __pstringtext14 10F8  
                                __pstringtext31 116F                                  __pstringtext23 113C  
                                __pstringtext15 1104                                  __pstringtext40 11A5  
                                __pstringtext32 1175                                  __pstringtext24 1143  
                                __pstringtext16 110B                                  __pstringtext41 11AB  
                                __pstringtext33 117B                                  __pstringtext25 114A  
                                __pstringtext17 1112                                  __pstringtext42 0000  
                                __pstringtext34 1181                                  __pstringtext26 1151  
                                __pstringtext18 1119                                  __pstringtext35 1187  
                                __pstringtext27 1157                                  __pstringtext19 1120  
                                __pstringtext36 118D                                  __pstringtext28 115D  
                                __pstringtext37 1193                                  __pstringtext29 1163  
                                __pstringtext38 1199                                  __pstringtext39 119F  
                                      intlevel1 0000                                ??_TMR0_StopTimer 0020  
                          ?_EUSART1_Receive_ISR 0076                                      _NEMS_nmux1 0057  
                                    _NEMS_pmux1 0056                                      _NEMS_timer 004F  
                       ?_PIN_MANAGER_Initialize 0076                               __CFG_CLKOUTEN$OFF 0000  
                      __size_of_NEMS_get_packet 003F          __end_of_EUSART1_SetOverrunErrorHandler 0BF4  
       __size_of_EUSART1_SetOverrunErrorHandler 0008                  _EUSART1_SetOverrunErrorHandler 0BEC  
                  __end_of_EUSART1_Transmit_ISR 0DBA                        _NEMS_set_symmetry_factor 0D6C  
                 ?_TMR0_DefaultInterruptHandler 0076                    __size_of_NEMS_calculate_ramp 00B4  
EUSART1_SetFramingErrorHandler@interruptHandler 0020                  ?_EUSART1_SetTxInterruptHandler 0020  
                        ?_NEMS_set_contractions 0076                          __size_of_EUSART1_Write 0023  
                            _eusart1RxLastError 005A                                   __pstringtext1 10AE  
                                 __pstringtext2 1000                                   __pstringtext3 101C  
                                 __pstringtext4 1035                                   __pstringtext5 104E  
                                 __pstringtext6 1065                                   __pstringtext7 107A  
                                 __pstringtext8 108C                                   __pstringtext9 109D  
                             _NEMS_stop_program 0C36                                  _FVR_Initialize 0BB0  
                            ?_NEMS_stop_program 0076                                 _TMR0_Initialize 07E3  
                      __size_of_NEMS_initialize 003F                             ??_NEMS_stop_program 0028  
                         ??_EUSART1_Receive_ISR 0077                  __end_of_PIN_MANAGER_Initialize 0ED9  
                                 ?_eeprom_write 0020                                      _STATUSbits 0003  
                                  ?_eeprom_read 0076                         ??_EUSART1_RxDataHandler 0076  
                       _NEMS_set_phase_duration 0D27                      ??_NEMS_recalculate_program 003C  
