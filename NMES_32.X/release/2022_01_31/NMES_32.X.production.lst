

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Jan 31 16:16:30 2022

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og9 
     1                           	processor	16F18456
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    22                           	psect	stringtext17,global,class=STRCODE,delta=2,noexec
    23                           	psect	stringtext18,global,class=STRCODE,delta=2,noexec
    24                           	psect	stringtext19,global,class=STRCODE,delta=2,noexec
    25                           	psect	stringtext20,global,class=STRCODE,delta=2,noexec
    26                           	psect	stringtext21,global,class=STRCODE,delta=2,noexec
    27                           	psect	stringtext22,global,class=STRCODE,delta=2,noexec
    28                           	psect	stringtext23,global,class=STRCODE,delta=2,noexec
    29                           	psect	stringtext24,global,class=STRCODE,delta=2,noexec
    30                           	psect	stringtext25,global,class=STRCODE,delta=2,noexec
    31                           	psect	stringtext26,global,class=STRCODE,delta=2,noexec
    32                           	psect	stringtext27,global,class=STRCODE,delta=2,noexec
    33                           	psect	stringtext28,global,class=STRCODE,delta=2,noexec
    34                           	psect	stringtext29,global,class=STRCODE,delta=2,noexec
    35                           	psect	stringtext30,global,class=STRCODE,delta=2,noexec
    36                           	psect	stringtext31,global,class=STRCODE,delta=2,noexec
    37                           	psect	stringtext32,global,class=STRCODE,delta=2,noexec
    38                           	psect	stringtext33,global,class=STRCODE,delta=2,noexec
    39                           	psect	stringtext34,global,class=STRCODE,delta=2,noexec
    40                           	psect	stringtext35,global,class=STRCODE,delta=2,noexec
    41                           	psect	stringtext36,global,class=STRCODE,delta=2,noexec
    42                           	psect	stringtext37,global,class=STRCODE,delta=2,noexec
    43                           	psect	stringtext38,global,class=STRCODE,delta=2,noexec
    44                           	psect	stringtext39,global,class=STRCODE,delta=2,noexec
    45                           	psect	stringtext40,global,class=STRCODE,delta=2,noexec
    46                           	psect	stringtext41,global,class=STRCODE,delta=2,noexec
    47                           	psect	stringtext42,global,class=STRCODE,delta=2,noexec
    48                           	psect	stringtext43,global,class=STRCODE,delta=2,noexec
    49                           	psect	stringtext44,global,class=STRCODE,delta=2,noexec
    50                           	psect	stringtext45,global,class=STRCODE,delta=2,noexec
    51                           	psect	stringtext46,global,class=STRCODE,delta=2,noexec
    52                           	psect	stringtext47,global,class=STRCODE,delta=2,noexec
    53                           	psect	stringtext48,global,class=STRCODE,delta=2,noexec
    54                           	psect	stringtext49,global,class=STRCODE,delta=2,noexec
    55                           	psect	stringtext50,global,class=STRCODE,delta=2,noexec
    56                           	psect	stringtext51,global,class=STRCODE,delta=2,noexec
    57                           	psect	stringtext52,global,class=STRCODE,delta=2,noexec
    58                           	psect	cinit,global,class=CODE,merge=1,delta=2
    59                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    60                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    61                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    62                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    63                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    64                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    65                           	psect	clrtext,global,class=CODE,delta=2
    66                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    67                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    68                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    69                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    70                           	psect	text1,local,class=CODE,merge=1,delta=2
    71                           	psect	text2,local,class=CODE,merge=1,delta=2
    72                           	psect	text3,local,class=CODE,merge=1,delta=2
    73                           	psect	text4,local,class=CODE,merge=1,delta=2
    74                           	psect	text5,local,class=CODE,merge=1,delta=2
    75                           	psect	text6,local,class=CODE,merge=1,delta=2
    76                           	psect	text7,local,class=CODE,merge=1,delta=2
    77                           	psect	text8,local,class=CODE,merge=1,delta=2
    78                           	psect	text9,local,class=CODE,merge=1,delta=2
    79                           	psect	text10,local,class=CODE,merge=1,delta=2
    80                           	psect	text11,local,class=CODE,merge=1,delta=2
    81                           	psect	text12,local,class=CODE,merge=1,delta=2
    82                           	psect	text13,local,class=CODE,merge=1,delta=2
    83                           	psect	text14,local,class=CODE,merge=1,delta=2
    84                           	psect	text15,local,class=CODE,merge=1,delta=2
    85                           	psect	text16,local,class=CODE,merge=1,delta=2
    86                           	psect	text17,local,class=CODE,merge=1,delta=2
    87                           	psect	text18,local,class=CODE,merge=1,delta=2
    88                           	psect	text19,local,class=CODE,merge=1,delta=2
    89                           	psect	text20,local,class=CODE,merge=1,delta=2
    90                           	psect	text21,local,class=CODE,merge=1,delta=2
    91                           	psect	text22,local,class=CODE,merge=1,delta=2
    92                           	psect	text23,local,class=CODE,merge=1,delta=2
    93                           	psect	text24,local,class=CODE,merge=1,delta=2
    94                           	psect	text25,local,class=CODE,merge=1,delta=2
    95                           	psect	text26,local,class=CODE,merge=1,delta=2
    96                           	psect	text27,local,class=CODE,merge=1,delta=2
    97                           	psect	text28,local,class=CODE,merge=1,delta=2
    98                           	psect	text29,local,class=CODE,merge=1,delta=2
    99                           	psect	text30,local,class=CODE,merge=1,delta=2
   100                           	psect	text31,local,class=CODE,merge=1,delta=2
   101                           	psect	text32,local,class=CODE,merge=1,delta=2
   102                           	psect	text33,local,class=CODE,merge=1,delta=2
   103                           	psect	text34,local,class=CODE,merge=1,delta=2
   104                           	psect	text35,local,class=CODE,merge=1,delta=2
   105                           	psect	text36,local,class=CODE,merge=1,delta=2
   106                           	psect	text37,local,class=CODE,merge=1,delta=2
   107                           	psect	text38,local,class=CODE,merge=1,delta=2
   108                           	psect	text39,local,class=CODE,merge=1,delta=2
   109                           	psect	text40,local,class=CODE,merge=1,delta=2
   110                           	psect	text41,local,class=CODE,merge=1,delta=2
   111                           	psect	text42,local,class=CODE,merge=1,delta=2
   112                           	psect	text43,local,class=CODE,merge=1,delta=2
   113                           	psect	text44,local,class=CODE,merge=1,delta=2
   114                           	psect	text45,local,class=CODE,merge=1,delta=2
   115                           	psect	text46,local,class=CODE,merge=1,delta=2
   116                           	psect	text47,local,class=CODE,merge=1,delta=2
   117                           	psect	text48,local,class=CODE,merge=1,delta=2
   118                           	psect	text49,local,class=CODE,merge=1,delta=2
   119                           	psect	text50,local,class=CODE,merge=1,delta=2,group=1
   120                           	psect	text51,local,class=CODE,merge=1,delta=2
   121                           	psect	text52,local,class=CODE,merge=1,delta=2
   122                           	psect	text53,local,class=CODE,merge=1,delta=2
   123                           	psect	text54,local,class=CODE,merge=1,delta=2
   124                           	psect	text55,local,class=CODE,merge=1,delta=2
   125                           	psect	text56,local,class=CODE,merge=1,delta=2
   126                           	psect	text57,local,class=CODE,merge=1,delta=2
   127                           	psect	text58,local,class=CODE,merge=1,delta=2
   128                           	psect	text59,local,class=CODE,merge=1,delta=2,group=1
   129                           	psect	text60,local,class=CODE,merge=1,delta=2,group=1
   130                           	psect	text61,local,class=CODE,merge=1,delta=2
   131                           	psect	text62,local,class=CODE,merge=1,delta=2,group=1
   132                           	psect	text63,local,class=CODE,merge=1,delta=2,group=1
   133                           	psect	text64,local,class=CODE,merge=1,delta=2
   134                           	psect	text65,local,class=CODE,merge=1,delta=2
   135                           	psect	text66,local,class=CODE,merge=1,delta=2
   136                           	psect	text67,local,class=CODE,merge=1,delta=2
   137                           	psect	text68,local,class=CODE,merge=1,delta=2
   138                           	psect	text69,local,class=CODE,merge=1,delta=2
   139                           	psect	intentry,global,class=CODE,delta=2
   140                           	psect	text71,local,class=CODE,merge=1,delta=2
   141                           	psect	text72,local,class=CODE,merge=1,delta=2
   142                           	psect	text73,local,class=CODE,merge=1,delta=2
   143                           	psect	text74,local,class=CODE,merge=1,delta=2
   144                           	psect	text75,local,class=CODE,merge=1,delta=2
   145                           	psect	text76,local,class=CODE,merge=1,delta=2
   146                           	psect	text77,local,class=CODE,merge=1,delta=2
   147                           	psect	text78,local,class=CODE,merge=1,delta=2
   148                           	psect	text79,local,class=CODE,merge=1,delta=2
   149                           	psect	text80,local,class=CODE,merge=1,delta=2
   150                           	psect	text81,local,class=CODE,merge=1,delta=2
   151                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   152                           	dabs	1,0xCA0,32
   153                           	dabs	1,0xC20,80
   154                           	dabs	1,0xBA0,80
   155                           	dabs	1,0xB20,80
   156                           	dabs	1,0xAA0,80
   157                           	dabs	1,0xA20,80
   158                           	dabs	1,0x9EC,4
   159                           	dabs	1,0x263C,0,_waveform
   160                           	dabs	1,0x7E,2
   161  0000                     
   162                           ; Version 2.30
   163                           ; Generated 15/09/2020 GMT
   164                           ; 
   165                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   166                           ; All rights reserved.
   167                           ; 
   168                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   169                           ; 
   170                           ; Redistribution and use in source and binary forms, with or without modification, are
   171                           ; permitted provided that the following conditions are met:
   172                           ; 
   173                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   174                           ;        conditions and the following disclaimer.
   175                           ; 
   176                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   177                           ;        of conditions and the following disclaimer in the documentation and/or other
   178                           ;        materials provided with the distribution. Publication is not required when
   179                           ;        this file is used in an embedded application.
   180                           ; 
   181                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   182                           ;        software without specific prior written permission.
   183                           ; 
   184                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   185                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   186                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   187                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   188                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   189                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   190                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   191                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   192                           ; 
   193                           ; 
   194                           ; Code-generator required, PIC16F18456 Definitions
   195                           ; 
   196                           ; SFR Addresses
   197  0000                     	;# 
   198  0001                     	;# 
   199  0002                     	;# 
   200  0003                     	;# 
   201  0004                     	;# 
   202  0005                     	;# 
   203  0006                     	;# 
   204  0007                     	;# 
   205  0008                     	;# 
   206  0009                     	;# 
   207  000A                     	;# 
   208  000B                     	;# 
   209  000C                     	;# 
   210  000D                     	;# 
   211  000E                     	;# 
   212  0010                     	;# 
   213  0012                     	;# 
   214  0013                     	;# 
   215  0014                     	;# 
   216  0016                     	;# 
   217  0018                     	;# 
   218  0019                     	;# 
   219  001A                     	;# 
   220  001C                     	;# 
   221  008C                     	;# 
   222  008C                     	;# 
   223  008D                     	;# 
   224  008E                     	;# 
   225  008E                     	;# 
   226  008F                     	;# 
   227  0090                     	;# 
   228  0090                     	;# 
   229  0091                     	;# 
   230  0092                     	;# 
   231  0092                     	;# 
   232  0093                     	;# 
   233  0094                     	;# 
   234  0094                     	;# 
   235  0095                     	;# 
   236  0096                     	;# 
   237  0096                     	;# 
   238  0097                     	;# 
   239  0098                     	;# 
   240  0099                     	;# 
   241  009A                     	;# 
   242  009B                     	;# 
   243  009B                     	;# 
   244  009C                     	;# 
   245  009D                     	;# 
   246  009D                     	;# 
   247  009E                     	;# 
   248  009F                     	;# 
   249  010C                     	;# 
   250  010C                     	;# 
   251  010D                     	;# 
   252  010E                     	;# 
   253  010F                     	;# 
   254  010F                     	;# 
   255  0110                     	;# 
   256  0111                     	;# 
   257  0112                     	;# 
   258  0113                     	;# 
   259  0114                     	;# 
   260  0115                     	;# 
   261  0116                     	;# 
   262  0117                     	;# 
   263  0118                     	;# 
   264  0119                     	;# 
   265  0119                     	;# 
   266  0119                     	;# 
   267  011A                     	;# 
   268  011A                     	;# 
   269  011A                     	;# 
   270  011B                     	;# 
   271  011B                     	;# 
   272  011B                     	;# 
   273  011B                     	;# 
   274  011B                     	;# 
   275  011C                     	;# 
   276  011C                     	;# 
   277  011C                     	;# 
   278  011D                     	;# 
   279  011D                     	;# 
   280  011D                     	;# 
   281  011E                     	;# 
   282  011E                     	;# 
   283  011E                     	;# 
   284  011F                     	;# 
   285  011F                     	;# 
   286  011F                     	;# 
   287  011F                     	;# 
   288  011F                     	;# 
   289  018C                     	;# 
   290  018D                     	;# 
   291  018E                     	;# 
   292  018F                     	;# 
   293  0190                     	;# 
   294  0191                     	;# 
   295  0192                     	;# 
   296  0196                     	;# 
   297  0197                     	;# 
   298  0198                     	;# 
   299  0199                     	;# 
   300  019A                     	;# 
   301  019B                     	;# 
   302  019C                     	;# 
   303  020C                     	;# 
   304  020D                     	;# 
   305  020E                     	;# 
   306  020E                     	;# 
   307  020F                     	;# 
   308  020F                     	;# 
   309  0210                     	;# 
   310  0210                     	;# 
   311  0211                     	;# 
   312  0211                     	;# 
   313  0212                     	;# 
   314  0213                     	;# 
   315  0214                     	;# 
   316  0214                     	;# 
   317  0215                     	;# 
   318  0215                     	;# 
   319  0216                     	;# 
   320  0216                     	;# 
   321  0217                     	;# 
   322  0217                     	;# 
   323  0218                     	;# 
   324  0219                     	;# 
   325  021A                     	;# 
   326  021A                     	;# 
   327  021B                     	;# 
   328  021B                     	;# 
   329  021C                     	;# 
   330  021C                     	;# 
   331  021D                     	;# 
   332  021D                     	;# 
   333  021E                     	;# 
   334  021F                     	;# 
   335  028C                     	;# 
   336  028C                     	;# 
   337  028D                     	;# 
   338  028D                     	;# 
   339  028E                     	;# 
   340  028F                     	;# 
   341  0290                     	;# 
   342  0291                     	;# 
   343  0292                     	;# 
   344  0292                     	;# 
   345  0293                     	;# 
   346  0293                     	;# 
   347  0294                     	;# 
   348  0295                     	;# 
   349  0296                     	;# 
   350  0297                     	;# 
   351  0298                     	;# 
   352  0298                     	;# 
   353  0299                     	;# 
   354  0299                     	;# 
   355  029A                     	;# 
   356  029B                     	;# 
   357  029C                     	;# 
   358  029D                     	;# 
   359  029F                     	;# 
   360  030C                     	;# 
   361  030C                     	;# 
   362  030D                     	;# 
   363  030E                     	;# 
   364  030F                     	;# 
   365  0310                     	;# 
   366  0310                     	;# 
   367  0311                     	;# 
   368  0312                     	;# 
   369  0313                     	;# 
   370  0314                     	;# 
   371  0314                     	;# 
   372  0315                     	;# 
   373  0316                     	;# 
   374  0317                     	;# 
   375  0318                     	;# 
   376  0318                     	;# 
   377  0319                     	;# 
   378  031A                     	;# 
   379  031B                     	;# 
   380  031C                     	;# 
   381  031C                     	;# 
   382  031D                     	;# 
   383  031E                     	;# 
   384  031F                     	;# 
   385  038C                     	;# 
   386  038C                     	;# 
   387  038D                     	;# 
   388  038E                     	;# 
   389  0390                     	;# 
   390  0390                     	;# 
   391  0391                     	;# 
   392  0392                     	;# 
   393  048C                     	;# 
   394  048C                     	;# 
   395  048D                     	;# 
   396  048E                     	;# 
   397  048F                     	;# 
   398  048F                     	;# 
   399  0490                     	;# 
   400  0491                     	;# 
   401  0492                     	;# 
   402  0492                     	;# 
   403  0493                     	;# 
   404  0494                     	;# 
   405  0495                     	;# 
   406  0495                     	;# 
   407  0496                     	;# 
   408  0497                     	;# 
   409  0498                     	;# 
   410  0499                     	;# 
   411  049A                     	;# 
   412  049B                     	;# 
   413  049C                     	;# 
   414  049D                     	;# 
   415  050C                     	;# 
   416  050C                     	;# 
   417  050D                     	;# 
   418  050E                     	;# 
   419  050F                     	;# 
   420  050F                     	;# 
   421  0510                     	;# 
   422  0511                     	;# 
   423  0512                     	;# 
   424  0512                     	;# 
   425  0513                     	;# 
   426  0514                     	;# 
   427  0515                     	;# 
   428  0515                     	;# 
   429  0516                     	;# 
   430  0517                     	;# 
   431  0518                     	;# 
   432  0519                     	;# 
   433  051A                     	;# 
   434  051B                     	;# 
   435  051C                     	;# 
   436  051D                     	;# 
   437  058C                     	;# 
   438  058C                     	;# 
   439  058D                     	;# 
   440  058E                     	;# 
   441  058F                     	;# 
   442  058F                     	;# 
   443  0590                     	;# 
   444  0591                     	;# 
   445  0592                     	;# 
   446  0593                     	;# 
   447  059C                     	;# 
   448  059C                     	;# 
   449  059D                     	;# 
   450  059D                     	;# 
   451  059E                     	;# 
   452  059F                     	;# 
   453  060C                     	;# 
   454  060C                     	;# 
   455  060D                     	;# 
   456  060D                     	;# 
   457  060E                     	;# 
   458  060F                     	;# 
   459  0610                     	;# 
   460  0611                     	;# 
   461  0612                     	;# 
   462  0613                     	;# 
   463  0614                     	;# 
   464  0616                     	;# 
   465  0616                     	;# 
   466  0617                     	;# 
   467  0617                     	;# 
   468  0618                     	;# 
   469  0619                     	;# 
   470  061A                     	;# 
   471  061B                     	;# 
   472  061C                     	;# 
   473  061D                     	;# 
   474  061E                     	;# 
   475  068C                     	;# 
   476  068D                     	;# 
   477  068E                     	;# 
   478  068F                     	;# 
   479  0690                     	;# 
   480  0691                     	;# 
   481  0692                     	;# 
   482  0693                     	;# 
   483  0694                     	;# 
   484  070C                     	;# 
   485  070D                     	;# 
   486  070E                     	;# 
   487  070F                     	;# 
   488  0710                     	;# 
   489  0711                     	;# 
   490  0712                     	;# 
   491  0713                     	;# 
   492  0714                     	;# 
   493  0716                     	;# 
   494  0717                     	;# 
   495  0718                     	;# 
   496  0719                     	;# 
   497  071A                     	;# 
   498  071B                     	;# 
   499  071C                     	;# 
   500  071D                     	;# 
   501  071E                     	;# 
   502  0796                     	;# 
   503  0797                     	;# 
   504  0798                     	;# 
   505  0799                     	;# 
   506  079A                     	;# 
   507  079B                     	;# 
   508  079C                     	;# 
   509  079D                     	;# 
   510  080C                     	;# 
   511  080D                     	;# 
   512  080E                     	;# 
   513  080F                     	;# 
   514  0810                     	;# 
   515  0811                     	;# 
   516  0812                     	;# 
   517  0813                     	;# 
   518  0814                     	;# 
   519  081A                     	;# 
   520  081A                     	;# 
   521  081B                     	;# 
   522  081C                     	;# 
   523  081C                     	;# 
   524  081D                     	;# 
   525  081E                     	;# 
   526  081F                     	;# 
   527  088C                     	;# 
   528  088D                     	;# 
   529  088E                     	;# 
   530  088F                     	;# 
   531  0890                     	;# 
   532  0891                     	;# 
   533  0892                     	;# 
   534  0893                     	;# 
   535  0895                     	;# 
   536  0896                     	;# 
   537  0897                     	;# 
   538  0898                     	;# 
   539  0899                     	;# 
   540  089A                     	;# 
   541  089B                     	;# 
   542  090C                     	;# 
   543  090E                     	;# 
   544  090F                     	;# 
   545  091F                     	;# 
   546  098F                     	;# 
   547  098F                     	;# 
   548  0990                     	;# 
   549  0991                     	;# 
   550  0992                     	;# 
   551  0993                     	;# 
   552  0994                     	;# 
   553  0995                     	;# 
   554  0996                     	;# 
   555  0997                     	;# 
   556  0A19                     	;# 
   557  0A19                     	;# 
   558  0A1A                     	;# 
   559  0A1A                     	;# 
   560  0A1B                     	;# 
   561  0A1B                     	;# 
   562  0A1B                     	;# 
   563  0A1C                     	;# 
   564  0A1C                     	;# 
   565  0A1D                     	;# 
   566  0A1D                     	;# 
   567  0A1E                     	;# 
   568  0A1E                     	;# 
   569  0A1F                     	;# 
   570  0A1F                     	;# 
   571  0A1F                     	;# 
   572  1E0F                     	;# 
   573  1E10                     	;# 
   574  1E11                     	;# 
   575  1E12                     	;# 
   576  1E13                     	;# 
   577  1E14                     	;# 
   578  1E15                     	;# 
   579  1E16                     	;# 
   580  1E17                     	;# 
   581  1E18                     	;# 
   582  1E19                     	;# 
   583  1E1A                     	;# 
   584  1E1B                     	;# 
   585  1E1C                     	;# 
   586  1E1D                     	;# 
   587  1E1E                     	;# 
   588  1E1F                     	;# 
   589  1E20                     	;# 
   590  1E21                     	;# 
   591  1E22                     	;# 
   592  1E23                     	;# 
   593  1E24                     	;# 
   594  1E25                     	;# 
   595  1E26                     	;# 
   596  1E27                     	;# 
   597  1E28                     	;# 
   598  1E29                     	;# 
   599  1E2A                     	;# 
   600  1E2B                     	;# 
   601  1E2C                     	;# 
   602  1E2D                     	;# 
   603  1E2E                     	;# 
   604  1E2F                     	;# 
   605  1E30                     	;# 
   606  1E31                     	;# 
   607  1E32                     	;# 
   608  1E33                     	;# 
   609  1E34                     	;# 
   610  1E35                     	;# 
   611  1E36                     	;# 
   612  1E37                     	;# 
   613  1E8F                     	;# 
   614  1E90                     	;# 
   615  1E91                     	;# 
   616  1E92                     	;# 
   617  1E93                     	;# 
   618  1E94                     	;# 
   619  1E95                     	;# 
   620  1E96                     	;# 
   621  1E97                     	;# 
   622  1E9C                     	;# 
   623  1E9D                     	;# 
   624  1E9E                     	;# 
   625  1EA1                     	;# 
   626  1EA2                     	;# 
   627  1EA3                     	;# 
   628  1EA4                     	;# 
   629  1EA5                     	;# 
   630  1EA9                     	;# 
   631  1EAA                     	;# 
   632  1EAB                     	;# 
   633  1EAC                     	;# 
   634  1EB1                     	;# 
   635  1EB2                     	;# 
   636  1EB3                     	;# 
   637  1EB8                     	;# 
   638  1EB9                     	;# 
   639  1EBA                     	;# 
   640  1EBB                     	;# 
   641  1EBC                     	;# 
   642  1EBD                     	;# 
   643  1EBE                     	;# 
   644  1EC3                     	;# 
   645  1EC5                     	;# 
   646  1EC6                     	;# 
   647  1EC7                     	;# 
   648  1EC8                     	;# 
   649  1EC9                     	;# 
   650  1ECA                     	;# 
   651  1ECB                     	;# 
   652  1ECB                     	;# 
   653  1ECB                     	;# 
   654  1ECC                     	;# 
   655  1ECC                     	;# 
   656  1ECC                     	;# 
   657  1ECD                     	;# 
   658  1ECD                     	;# 
   659  1ECE                     	;# 
   660  1ECE                     	;# 
   661  1F10                     	;# 
   662  1F11                     	;# 
   663  1F12                     	;# 
   664  1F13                     	;# 
   665  1F14                     	;# 
   666  1F15                     	;# 
   667  1F16                     	;# 
   668  1F17                     	;# 
   669  1F18                     	;# 
   670  1F19                     	;# 
   671  1F1A                     	;# 
   672  1F1B                     	;# 
   673  1F1C                     	;# 
   674  1F1D                     	;# 
   675  1F1E                     	;# 
   676  1F1F                     	;# 
   677  1F20                     	;# 
   678  1F21                     	;# 
   679  1F22                     	;# 
   680  1F23                     	;# 
   681  1F24                     	;# 
   682  1F25                     	;# 
   683  1F26                     	;# 
   684  1F27                     	;# 
   685  1F38                     	;# 
   686  1F39                     	;# 
   687  1F3A                     	;# 
   688  1F3B                     	;# 
   689  1F3C                     	;# 
   690  1F3D                     	;# 
   691  1F3E                     	;# 
   692  1F3F                     	;# 
   693  1F43                     	;# 
   694  1F44                     	;# 
   695  1F45                     	;# 
   696  1F46                     	;# 
   697  1F47                     	;# 
   698  1F48                     	;# 
   699  1F49                     	;# 
   700  1F4A                     	;# 
   701  1F4E                     	;# 
   702  1F4F                     	;# 
   703  1F50                     	;# 
   704  1F51                     	;# 
   705  1F52                     	;# 
   706  1F53                     	;# 
   707  1F54                     	;# 
   708  1F55                     	;# 
   709  1F65                     	;# 
   710  1F66                     	;# 
   711  1F67                     	;# 
   712  1F68                     	;# 
   713  1F69                     	;# 
   714  1F6A                     	;# 
   715  1F6B                     	;# 
   716  1FE4                     	;# 
   717  1FE5                     	;# 
   718  1FE6                     	;# 
   719  1FE7                     	;# 
   720  1FE8                     	;# 
   721  1FE8                     	;# 
   722  1FE9                     	;# 
   723  1FEA                     	;# 
   724  1FEB                     	;# 
   725  1FED                     	;# 
   726  1FEE                     	;# 
   727  1FEF                     	;# 
   728  0000                     	;# 
   729  0001                     	;# 
   730  0002                     	;# 
   731  0003                     	;# 
   732  0004                     	;# 
   733  0005                     	;# 
   734  0006                     	;# 
   735  0007                     	;# 
   736  0008                     	;# 
   737  0009                     	;# 
   738  000A                     	;# 
   739  000B                     	;# 
   740  000C                     	;# 
   741  000D                     	;# 
   742  000E                     	;# 
   743  0010                     	;# 
   744  0012                     	;# 
   745  0013                     	;# 
   746  0014                     	;# 
   747  0016                     	;# 
   748  0018                     	;# 
   749  0019                     	;# 
   750  001A                     	;# 
   751  001C                     	;# 
   752  008C                     	;# 
   753  008C                     	;# 
   754  008D                     	;# 
   755  008E                     	;# 
   756  008E                     	;# 
   757  008F                     	;# 
   758  0090                     	;# 
   759  0090                     	;# 
   760  0091                     	;# 
   761  0092                     	;# 
   762  0092                     	;# 
   763  0093                     	;# 
   764  0094                     	;# 
   765  0094                     	;# 
   766  0095                     	;# 
   767  0096                     	;# 
   768  0096                     	;# 
   769  0097                     	;# 
   770  0098                     	;# 
   771  0099                     	;# 
   772  009A                     	;# 
   773  009B                     	;# 
   774  009B                     	;# 
   775  009C                     	;# 
   776  009D                     	;# 
   777  009D                     	;# 
   778  009E                     	;# 
   779  009F                     	;# 
   780  010C                     	;# 
   781  010C                     	;# 
   782  010D                     	;# 
   783  010E                     	;# 
   784  010F                     	;# 
   785  010F                     	;# 
   786  0110                     	;# 
   787  0111                     	;# 
   788  0112                     	;# 
   789  0113                     	;# 
   790  0114                     	;# 
   791  0115                     	;# 
   792  0116                     	;# 
   793  0117                     	;# 
   794  0118                     	;# 
   795  0119                     	;# 
   796  0119                     	;# 
   797  0119                     	;# 
   798  011A                     	;# 
   799  011A                     	;# 
   800  011A                     	;# 
   801  011B                     	;# 
   802  011B                     	;# 
   803  011B                     	;# 
   804  011B                     	;# 
   805  011B                     	;# 
   806  011C                     	;# 
   807  011C                     	;# 
   808  011C                     	;# 
   809  011D                     	;# 
   810  011D                     	;# 
   811  011D                     	;# 
   812  011E                     	;# 
   813  011E                     	;# 
   814  011E                     	;# 
   815  011F                     	;# 
   816  011F                     	;# 
   817  011F                     	;# 
   818  011F                     	;# 
   819  011F                     	;# 
   820  018C                     	;# 
   821  018D                     	;# 
   822  018E                     	;# 
   823  018F                     	;# 
   824  0190                     	;# 
   825  0191                     	;# 
   826  0192                     	;# 
   827  0196                     	;# 
   828  0197                     	;# 
   829  0198                     	;# 
   830  0199                     	;# 
   831  019A                     	;# 
   832  019B                     	;# 
   833  019C                     	;# 
   834  020C                     	;# 
   835  020D                     	;# 
   836  020E                     	;# 
   837  020E                     	;# 
   838  020F                     	;# 
   839  020F                     	;# 
   840  0210                     	;# 
   841  0210                     	;# 
   842  0211                     	;# 
   843  0211                     	;# 
   844  0212                     	;# 
   845  0213                     	;# 
   846  0214                     	;# 
   847  0214                     	;# 
   848  0215                     	;# 
   849  0215                     	;# 
   850  0216                     	;# 
   851  0216                     	;# 
   852  0217                     	;# 
   853  0217                     	;# 
   854  0218                     	;# 
   855  0219                     	;# 
   856  021A                     	;# 
   857  021A                     	;# 
   858  021B                     	;# 
   859  021B                     	;# 
   860  021C                     	;# 
   861  021C                     	;# 
   862  021D                     	;# 
   863  021D                     	;# 
   864  021E                     	;# 
   865  021F                     	;# 
   866  028C                     	;# 
   867  028C                     	;# 
   868  028D                     	;# 
   869  028D                     	;# 
   870  028E                     	;# 
   871  028F                     	;# 
   872  0290                     	;# 
   873  0291                     	;# 
   874  0292                     	;# 
   875  0292                     	;# 
   876  0293                     	;# 
   877  0293                     	;# 
   878  0294                     	;# 
   879  0295                     	;# 
   880  0296                     	;# 
   881  0297                     	;# 
   882  0298                     	;# 
   883  0298                     	;# 
   884  0299                     	;# 
   885  0299                     	;# 
   886  029A                     	;# 
   887  029B                     	;# 
   888  029C                     	;# 
   889  029D                     	;# 
   890  029F                     	;# 
   891  030C                     	;# 
   892  030C                     	;# 
   893  030D                     	;# 
   894  030E                     	;# 
   895  030F                     	;# 
   896  0310                     	;# 
   897  0310                     	;# 
   898  0311                     	;# 
   899  0312                     	;# 
   900  0313                     	;# 
   901  0314                     	;# 
   902  0314                     	;# 
   903  0315                     	;# 
   904  0316                     	;# 
   905  0317                     	;# 
   906  0318                     	;# 
   907  0318                     	;# 
   908  0319                     	;# 
   909  031A                     	;# 
   910  031B                     	;# 
   911  031C                     	;# 
   912  031C                     	;# 
   913  031D                     	;# 
   914  031E                     	;# 
   915  031F                     	;# 
   916  038C                     	;# 
   917  038C                     	;# 
   918  038D                     	;# 
   919  038E                     	;# 
   920  0390                     	;# 
   921  0390                     	;# 
   922  0391                     	;# 
   923  0392                     	;# 
   924  048C                     	;# 
   925  048C                     	;# 
   926  048D                     	;# 
   927  048E                     	;# 
   928  048F                     	;# 
   929  048F                     	;# 
   930  0490                     	;# 
   931  0491                     	;# 
   932  0492                     	;# 
   933  0492                     	;# 
   934  0493                     	;# 
   935  0494                     	;# 
   936  0495                     	;# 
   937  0495                     	;# 
   938  0496                     	;# 
   939  0497                     	;# 
   940  0498                     	;# 
   941  0499                     	;# 
   942  049A                     	;# 
   943  049B                     	;# 
   944  049C                     	;# 
   945  049D                     	;# 
   946  050C                     	;# 
   947  050C                     	;# 
   948  050D                     	;# 
   949  050E                     	;# 
   950  050F                     	;# 
   951  050F                     	;# 
   952  0510                     	;# 
   953  0511                     	;# 
   954  0512                     	;# 
   955  0512                     	;# 
   956  0513                     	;# 
   957  0514                     	;# 
   958  0515                     	;# 
   959  0515                     	;# 
   960  0516                     	;# 
   961  0517                     	;# 
   962  0518                     	;# 
   963  0519                     	;# 
   964  051A                     	;# 
   965  051B                     	;# 
   966  051C                     	;# 
   967  051D                     	;# 
   968  058C                     	;# 
   969  058C                     	;# 
   970  058D                     	;# 
   971  058E                     	;# 
   972  058F                     	;# 
   973  058F                     	;# 
   974  0590                     	;# 
   975  0591                     	;# 
   976  0592                     	;# 
   977  0593                     	;# 
   978  059C                     	;# 
   979  059C                     	;# 
   980  059D                     	;# 
   981  059D                     	;# 
   982  059E                     	;# 
   983  059F                     	;# 
   984  060C                     	;# 
   985  060C                     	;# 
   986  060D                     	;# 
   987  060D                     	;# 
   988  060E                     	;# 
   989  060F                     	;# 
   990  0610                     	;# 
   991  0611                     	;# 
   992  0612                     	;# 
   993  0613                     	;# 
   994  0614                     	;# 
   995  0616                     	;# 
   996  0616                     	;# 
   997  0617                     	;# 
   998  0617                     	;# 
   999  0618                     	;# 
  1000  0619                     	;# 
  1001  061A                     	;# 
  1002  061B                     	;# 
  1003  061C                     	;# 
  1004  061D                     	;# 
  1005  061E                     	;# 
  1006  068C                     	;# 
  1007  068D                     	;# 
  1008  068E                     	;# 
  1009  068F                     	;# 
  1010  0690                     	;# 
  1011  0691                     	;# 
  1012  0692                     	;# 
  1013  0693                     	;# 
  1014  0694                     	;# 
  1015  070C                     	;# 
  1016  070D                     	;# 
  1017  070E                     	;# 
  1018  070F                     	;# 
  1019  0710                     	;# 
  1020  0711                     	;# 
  1021  0712                     	;# 
  1022  0713                     	;# 
  1023  0714                     	;# 
  1024  0716                     	;# 
  1025  0717                     	;# 
  1026  0718                     	;# 
  1027  0719                     	;# 
  1028  071A                     	;# 
  1029  071B                     	;# 
  1030  071C                     	;# 
  1031  071D                     	;# 
  1032  071E                     	;# 
  1033  0796                     	;# 
  1034  0797                     	;# 
  1035  0798                     	;# 
  1036  0799                     	;# 
  1037  079A                     	;# 
  1038  079B                     	;# 
  1039  079C                     	;# 
  1040  079D                     	;# 
  1041  080C                     	;# 
  1042  080D                     	;# 
  1043  080E                     	;# 
  1044  080F                     	;# 
  1045  0810                     	;# 
  1046  0811                     	;# 
  1047  0812                     	;# 
  1048  0813                     	;# 
  1049  0814                     	;# 
  1050  081A                     	;# 
  1051  081A                     	;# 
  1052  081B                     	;# 
  1053  081C                     	;# 
  1054  081C                     	;# 
  1055  081D                     	;# 
  1056  081E                     	;# 
  1057  081F                     	;# 
  1058  088C                     	;# 
  1059  088D                     	;# 
  1060  088E                     	;# 
  1061  088F                     	;# 
  1062  0890                     	;# 
  1063  0891                     	;# 
  1064  0892                     	;# 
  1065  0893                     	;# 
  1066  0895                     	;# 
  1067  0896                     	;# 
  1068  0897                     	;# 
  1069  0898                     	;# 
  1070  0899                     	;# 
  1071  089A                     	;# 
  1072  089B                     	;# 
  1073  090C                     	;# 
  1074  090E                     	;# 
  1075  090F                     	;# 
  1076  091F                     	;# 
  1077  098F                     	;# 
  1078  098F                     	;# 
  1079  0990                     	;# 
  1080  0991                     	;# 
  1081  0992                     	;# 
  1082  0993                     	;# 
  1083  0994                     	;# 
  1084  0995                     	;# 
  1085  0996                     	;# 
  1086  0997                     	;# 
  1087  0A19                     	;# 
  1088  0A19                     	;# 
  1089  0A1A                     	;# 
  1090  0A1A                     	;# 
  1091  0A1B                     	;# 
  1092  0A1B                     	;# 
  1093  0A1B                     	;# 
  1094  0A1C                     	;# 
  1095  0A1C                     	;# 
  1096  0A1D                     	;# 
  1097  0A1D                     	;# 
  1098  0A1E                     	;# 
  1099  0A1E                     	;# 
  1100  0A1F                     	;# 
  1101  0A1F                     	;# 
  1102  0A1F                     	;# 
  1103  1E0F                     	;# 
  1104  1E10                     	;# 
  1105  1E11                     	;# 
  1106  1E12                     	;# 
  1107  1E13                     	;# 
  1108  1E14                     	;# 
  1109  1E15                     	;# 
  1110  1E16                     	;# 
  1111  1E17                     	;# 
  1112  1E18                     	;# 
  1113  1E19                     	;# 
  1114  1E1A                     	;# 
  1115  1E1B                     	;# 
  1116  1E1C                     	;# 
  1117  1E1D                     	;# 
  1118  1E1E                     	;# 
  1119  1E1F                     	;# 
  1120  1E20                     	;# 
  1121  1E21                     	;# 
  1122  1E22                     	;# 
  1123  1E23                     	;# 
  1124  1E24                     	;# 
  1125  1E25                     	;# 
  1126  1E26                     	;# 
  1127  1E27                     	;# 
  1128  1E28                     	;# 
  1129  1E29                     	;# 
  1130  1E2A                     	;# 
  1131  1E2B                     	;# 
  1132  1E2C                     	;# 
  1133  1E2D                     	;# 
  1134  1E2E                     	;# 
  1135  1E2F                     	;# 
  1136  1E30                     	;# 
  1137  1E31                     	;# 
  1138  1E32                     	;# 
  1139  1E33                     	;# 
  1140  1E34                     	;# 
  1141  1E35                     	;# 
  1142  1E36                     	;# 
  1143  1E37                     	;# 
  1144  1E8F                     	;# 
  1145  1E90                     	;# 
  1146  1E91                     	;# 
  1147  1E92                     	;# 
  1148  1E93                     	;# 
  1149  1E94                     	;# 
  1150  1E95                     	;# 
  1151  1E96                     	;# 
  1152  1E97                     	;# 
  1153  1E9C                     	;# 
  1154  1E9D                     	;# 
  1155  1E9E                     	;# 
  1156  1EA1                     	;# 
  1157  1EA2                     	;# 
  1158  1EA3                     	;# 
  1159  1EA4                     	;# 
  1160  1EA5                     	;# 
  1161  1EA9                     	;# 
  1162  1EAA                     	;# 
  1163  1EAB                     	;# 
  1164  1EAC                     	;# 
  1165  1EB1                     	;# 
  1166  1EB2                     	;# 
  1167  1EB3                     	;# 
  1168  1EB8                     	;# 
  1169  1EB9                     	;# 
  1170  1EBA                     	;# 
  1171  1EBB                     	;# 
  1172  1EBC                     	;# 
  1173  1EBD                     	;# 
  1174  1EBE                     	;# 
  1175  1EC3                     	;# 
  1176  1EC5                     	;# 
  1177  1EC6                     	;# 
  1178  1EC7                     	;# 
  1179  1EC8                     	;# 
  1180  1EC9                     	;# 
  1181  1ECA                     	;# 
  1182  1ECB                     	;# 
  1183  1ECB                     	;# 
  1184  1ECB                     	;# 
  1185  1ECC                     	;# 
  1186  1ECC                     	;# 
  1187  1ECC                     	;# 
  1188  1ECD                     	;# 
  1189  1ECD                     	;# 
  1190  1ECE                     	;# 
  1191  1ECE                     	;# 
  1192  1F10                     	;# 
  1193  1F11                     	;# 
  1194  1F12                     	;# 
  1195  1F13                     	;# 
  1196  1F14                     	;# 
  1197  1F15                     	;# 
  1198  1F16                     	;# 
  1199  1F17                     	;# 
  1200  1F18                     	;# 
  1201  1F19                     	;# 
  1202  1F1A                     	;# 
  1203  1F1B                     	;# 
  1204  1F1C                     	;# 
  1205  1F1D                     	;# 
  1206  1F1E                     	;# 
  1207  1F1F                     	;# 
  1208  1F20                     	;# 
  1209  1F21                     	;# 
  1210  1F22                     	;# 
  1211  1F23                     	;# 
  1212  1F24                     	;# 
  1213  1F25                     	;# 
  1214  1F26                     	;# 
  1215  1F27                     	;# 
  1216  1F38                     	;# 
  1217  1F39                     	;# 
  1218  1F3A                     	;# 
  1219  1F3B                     	;# 
  1220  1F3C                     	;# 
  1221  1F3D                     	;# 
  1222  1F3E                     	;# 
  1223  1F3F                     	;# 
  1224  1F43                     	;# 
  1225  1F44                     	;# 
  1226  1F45                     	;# 
  1227  1F46                     	;# 
  1228  1F47                     	;# 
  1229  1F48                     	;# 
  1230  1F49                     	;# 
  1231  1F4A                     	;# 
  1232  1F4E                     	;# 
  1233  1F4F                     	;# 
  1234  1F50                     	;# 
  1235  1F51                     	;# 
  1236  1F52                     	;# 
  1237  1F53                     	;# 
  1238  1F54                     	;# 
  1239  1F55                     	;# 
  1240  1F65                     	;# 
  1241  1F66                     	;# 
  1242  1F67                     	;# 
  1243  1F68                     	;# 
  1244  1F69                     	;# 
  1245  1F6A                     	;# 
  1246  1F6B                     	;# 
  1247  1FE4                     	;# 
  1248  1FE5                     	;# 
  1249  1FE6                     	;# 
  1250  1FE7                     	;# 
  1251  1FE8                     	;# 
  1252  1FE8                     	;# 
  1253  1FE9                     	;# 
  1254  1FEA                     	;# 
  1255  1FEB                     	;# 
  1256  1FED                     	;# 
  1257  1FEE                     	;# 
  1258  1FEF                     	;# 
  1259  0000                     	;# 
  1260  0001                     	;# 
  1261  0002                     	;# 
  1262  0003                     	;# 
  1263  0004                     	;# 
  1264  0005                     	;# 
  1265  0006                     	;# 
  1266  0007                     	;# 
  1267  0008                     	;# 
  1268  0009                     	;# 
  1269  000A                     	;# 
  1270  000B                     	;# 
  1271  000C                     	;# 
  1272  000D                     	;# 
  1273  000E                     	;# 
  1274  0010                     	;# 
  1275  0012                     	;# 
  1276  0013                     	;# 
  1277  0014                     	;# 
  1278  0016                     	;# 
  1279  0018                     	;# 
  1280  0019                     	;# 
  1281  001A                     	;# 
  1282  001C                     	;# 
  1283  008C                     	;# 
  1284  008C                     	;# 
  1285  008D                     	;# 
  1286  008E                     	;# 
  1287  008E                     	;# 
  1288  008F                     	;# 
  1289  0090                     	;# 
  1290  0090                     	;# 
  1291  0091                     	;# 
  1292  0092                     	;# 
  1293  0092                     	;# 
  1294  0093                     	;# 
  1295  0094                     	;# 
  1296  0094                     	;# 
  1297  0095                     	;# 
  1298  0096                     	;# 
  1299  0096                     	;# 
  1300  0097                     	;# 
  1301  0098                     	;# 
  1302  0099                     	;# 
  1303  009A                     	;# 
  1304  009B                     	;# 
  1305  009B                     	;# 
  1306  009C                     	;# 
  1307  009D                     	;# 
  1308  009D                     	;# 
  1309  009E                     	;# 
  1310  009F                     	;# 
  1311  010C                     	;# 
  1312  010C                     	;# 
  1313  010D                     	;# 
  1314  010E                     	;# 
  1315  010F                     	;# 
  1316  010F                     	;# 
  1317  0110                     	;# 
  1318  0111                     	;# 
  1319  0112                     	;# 
  1320  0113                     	;# 
  1321  0114                     	;# 
  1322  0115                     	;# 
  1323  0116                     	;# 
  1324  0117                     	;# 
  1325  0118                     	;# 
  1326  0119                     	;# 
  1327  0119                     	;# 
  1328  0119                     	;# 
  1329  011A                     	;# 
  1330  011A                     	;# 
  1331  011A                     	;# 
  1332  011B                     	;# 
  1333  011B                     	;# 
  1334  011B                     	;# 
  1335  011B                     	;# 
  1336  011B                     	;# 
  1337  011C                     	;# 
  1338  011C                     	;# 
  1339  011C                     	;# 
  1340  011D                     	;# 
  1341  011D                     	;# 
  1342  011D                     	;# 
  1343  011E                     	;# 
  1344  011E                     	;# 
  1345  011E                     	;# 
  1346  011F                     	;# 
  1347  011F                     	;# 
  1348  011F                     	;# 
  1349  011F                     	;# 
  1350  011F                     	;# 
  1351  018C                     	;# 
  1352  018D                     	;# 
  1353  018E                     	;# 
  1354  018F                     	;# 
  1355  0190                     	;# 
  1356  0191                     	;# 
  1357  0192                     	;# 
  1358  0196                     	;# 
  1359  0197                     	;# 
  1360  0198                     	;# 
  1361  0199                     	;# 
  1362  019A                     	;# 
  1363  019B                     	;# 
  1364  019C                     	;# 
  1365  020C                     	;# 
  1366  020D                     	;# 
  1367  020E                     	;# 
  1368  020E                     	;# 
  1369  020F                     	;# 
  1370  020F                     	;# 
  1371  0210                     	;# 
  1372  0210                     	;# 
  1373  0211                     	;# 
  1374  0211                     	;# 
  1375  0212                     	;# 
  1376  0213                     	;# 
  1377  0214                     	;# 
  1378  0214                     	;# 
  1379  0215                     	;# 
  1380  0215                     	;# 
  1381  0216                     	;# 
  1382  0216                     	;# 
  1383  0217                     	;# 
  1384  0217                     	;# 
  1385  0218                     	;# 
  1386  0219                     	;# 
  1387  021A                     	;# 
  1388  021A                     	;# 
  1389  021B                     	;# 
  1390  021B                     	;# 
  1391  021C                     	;# 
  1392  021C                     	;# 
  1393  021D                     	;# 
  1394  021D                     	;# 
  1395  021E                     	;# 
  1396  021F                     	;# 
  1397  028C                     	;# 
  1398  028C                     	;# 
  1399  028D                     	;# 
  1400  028D                     	;# 
  1401  028E                     	;# 
  1402  028F                     	;# 
  1403  0290                     	;# 
  1404  0291                     	;# 
  1405  0292                     	;# 
  1406  0292                     	;# 
  1407  0293                     	;# 
  1408  0293                     	;# 
  1409  0294                     	;# 
  1410  0295                     	;# 
  1411  0296                     	;# 
  1412  0297                     	;# 
  1413  0298                     	;# 
  1414  0298                     	;# 
  1415  0299                     	;# 
  1416  0299                     	;# 
  1417  029A                     	;# 
  1418  029B                     	;# 
  1419  029C                     	;# 
  1420  029D                     	;# 
  1421  029F                     	;# 
  1422  030C                     	;# 
  1423  030C                     	;# 
  1424  030D                     	;# 
  1425  030E                     	;# 
  1426  030F                     	;# 
  1427  0310                     	;# 
  1428  0310                     	;# 
  1429  0311                     	;# 
  1430  0312                     	;# 
  1431  0313                     	;# 
  1432  0314                     	;# 
  1433  0314                     	;# 
  1434  0315                     	;# 
  1435  0316                     	;# 
  1436  0317                     	;# 
  1437  0318                     	;# 
  1438  0318                     	;# 
  1439  0319                     	;# 
  1440  031A                     	;# 
  1441  031B                     	;# 
  1442  031C                     	;# 
  1443  031C                     	;# 
  1444  031D                     	;# 
  1445  031E                     	;# 
  1446  031F                     	;# 
  1447  038C                     	;# 
  1448  038C                     	;# 
  1449  038D                     	;# 
  1450  038E                     	;# 
  1451  0390                     	;# 
  1452  0390                     	;# 
  1453  0391                     	;# 
  1454  0392                     	;# 
  1455  048C                     	;# 
  1456  048C                     	;# 
  1457  048D                     	;# 
  1458  048E                     	;# 
  1459  048F                     	;# 
  1460  048F                     	;# 
  1461  0490                     	;# 
  1462  0491                     	;# 
  1463  0492                     	;# 
  1464  0492                     	;# 
  1465  0493                     	;# 
  1466  0494                     	;# 
  1467  0495                     	;# 
  1468  0495                     	;# 
  1469  0496                     	;# 
  1470  0497                     	;# 
  1471  0498                     	;# 
  1472  0499                     	;# 
  1473  049A                     	;# 
  1474  049B                     	;# 
  1475  049C                     	;# 
  1476  049D                     	;# 
  1477  050C                     	;# 
  1478  050C                     	;# 
  1479  050D                     	;# 
  1480  050E                     	;# 
  1481  050F                     	;# 
  1482  050F                     	;# 
  1483  0510                     	;# 
  1484  0511                     	;# 
  1485  0512                     	;# 
  1486  0512                     	;# 
  1487  0513                     	;# 
  1488  0514                     	;# 
  1489  0515                     	;# 
  1490  0515                     	;# 
  1491  0516                     	;# 
  1492  0517                     	;# 
  1493  0518                     	;# 
  1494  0519                     	;# 
  1495  051A                     	;# 
  1496  051B                     	;# 
  1497  051C                     	;# 
  1498  051D                     	;# 
  1499  058C                     	;# 
  1500  058C                     	;# 
  1501  058D                     	;# 
  1502  058E                     	;# 
  1503  058F                     	;# 
  1504  058F                     	;# 
  1505  0590                     	;# 
  1506  0591                     	;# 
  1507  0592                     	;# 
  1508  0593                     	;# 
  1509  059C                     	;# 
  1510  059C                     	;# 
  1511  059D                     	;# 
  1512  059D                     	;# 
  1513  059E                     	;# 
  1514  059F                     	;# 
  1515  060C                     	;# 
  1516  060C                     	;# 
  1517  060D                     	;# 
  1518  060D                     	;# 
  1519  060E                     	;# 
  1520  060F                     	;# 
  1521  0610                     	;# 
  1522  0611                     	;# 
  1523  0612                     	;# 
  1524  0613                     	;# 
  1525  0614                     	;# 
  1526  0616                     	;# 
  1527  0616                     	;# 
  1528  0617                     	;# 
  1529  0617                     	;# 
  1530  0618                     	;# 
  1531  0619                     	;# 
  1532  061A                     	;# 
  1533  061B                     	;# 
  1534  061C                     	;# 
  1535  061D                     	;# 
  1536  061E                     	;# 
  1537  068C                     	;# 
  1538  068D                     	;# 
  1539  068E                     	;# 
  1540  068F                     	;# 
  1541  0690                     	;# 
  1542  0691                     	;# 
  1543  0692                     	;# 
  1544  0693                     	;# 
  1545  0694                     	;# 
  1546  070C                     	;# 
  1547  070D                     	;# 
  1548  070E                     	;# 
  1549  070F                     	;# 
  1550  0710                     	;# 
  1551  0711                     	;# 
  1552  0712                     	;# 
  1553  0713                     	;# 
  1554  0714                     	;# 
  1555  0716                     	;# 
  1556  0717                     	;# 
  1557  0718                     	;# 
  1558  0719                     	;# 
  1559  071A                     	;# 
  1560  071B                     	;# 
  1561  071C                     	;# 
  1562  071D                     	;# 
  1563  071E                     	;# 
  1564  0796                     	;# 
  1565  0797                     	;# 
  1566  0798                     	;# 
  1567  0799                     	;# 
  1568  079A                     	;# 
  1569  079B                     	;# 
  1570  079C                     	;# 
  1571  079D                     	;# 
  1572  080C                     	;# 
  1573  080D                     	;# 
  1574  080E                     	;# 
  1575  080F                     	;# 
  1576  0810                     	;# 
  1577  0811                     	;# 
  1578  0812                     	;# 
  1579  0813                     	;# 
  1580  0814                     	;# 
  1581  081A                     	;# 
  1582  081A                     	;# 
  1583  081B                     	;# 
  1584  081C                     	;# 
  1585  081C                     	;# 
  1586  081D                     	;# 
  1587  081E                     	;# 
  1588  081F                     	;# 
  1589  088C                     	;# 
  1590  088D                     	;# 
  1591  088E                     	;# 
  1592  088F                     	;# 
  1593  0890                     	;# 
  1594  0891                     	;# 
  1595  0892                     	;# 
  1596  0893                     	;# 
  1597  0895                     	;# 
  1598  0896                     	;# 
  1599  0897                     	;# 
  1600  0898                     	;# 
  1601  0899                     	;# 
  1602  089A                     	;# 
  1603  089B                     	;# 
  1604  090C                     	;# 
  1605  090E                     	;# 
  1606  090F                     	;# 
  1607  091F                     	;# 
  1608  098F                     	;# 
  1609  098F                     	;# 
  1610  0990                     	;# 
  1611  0991                     	;# 
  1612  0992                     	;# 
  1613  0993                     	;# 
  1614  0994                     	;# 
  1615  0995                     	;# 
  1616  0996                     	;# 
  1617  0997                     	;# 
  1618  0A19                     	;# 
  1619  0A19                     	;# 
  1620  0A1A                     	;# 
  1621  0A1A                     	;# 
  1622  0A1B                     	;# 
  1623  0A1B                     	;# 
  1624  0A1B                     	;# 
  1625  0A1C                     	;# 
  1626  0A1C                     	;# 
  1627  0A1D                     	;# 
  1628  0A1D                     	;# 
  1629  0A1E                     	;# 
  1630  0A1E                     	;# 
  1631  0A1F                     	;# 
  1632  0A1F                     	;# 
  1633  0A1F                     	;# 
  1634  1E0F                     	;# 
  1635  1E10                     	;# 
  1636  1E11                     	;# 
  1637  1E12                     	;# 
  1638  1E13                     	;# 
  1639  1E14                     	;# 
  1640  1E15                     	;# 
  1641  1E16                     	;# 
  1642  1E17                     	;# 
  1643  1E18                     	;# 
  1644  1E19                     	;# 
  1645  1E1A                     	;# 
  1646  1E1B                     	;# 
  1647  1E1C                     	;# 
  1648  1E1D                     	;# 
  1649  1E1E                     	;# 
  1650  1E1F                     	;# 
  1651  1E20                     	;# 
  1652  1E21                     	;# 
  1653  1E22                     	;# 
  1654  1E23                     	;# 
  1655  1E24                     	;# 
  1656  1E25                     	;# 
  1657  1E26                     	;# 
  1658  1E27                     	;# 
  1659  1E28                     	;# 
  1660  1E29                     	;# 
  1661  1E2A                     	;# 
  1662  1E2B                     	;# 
  1663  1E2C                     	;# 
  1664  1E2D                     	;# 
  1665  1E2E                     	;# 
  1666  1E2F                     	;# 
  1667  1E30                     	;# 
  1668  1E31                     	;# 
  1669  1E32                     	;# 
  1670  1E33                     	;# 
  1671  1E34                     	;# 
  1672  1E35                     	;# 
  1673  1E36                     	;# 
  1674  1E37                     	;# 
  1675  1E8F                     	;# 
  1676  1E90                     	;# 
  1677  1E91                     	;# 
  1678  1E92                     	;# 
  1679  1E93                     	;# 
  1680  1E94                     	;# 
  1681  1E95                     	;# 
  1682  1E96                     	;# 
  1683  1E97                     	;# 
  1684  1E9C                     	;# 
  1685  1E9D                     	;# 
  1686  1E9E                     	;# 
  1687  1EA1                     	;# 
  1688  1EA2                     	;# 
  1689  1EA3                     	;# 
  1690  1EA4                     	;# 
  1691  1EA5                     	;# 
  1692  1EA9                     	;# 
  1693  1EAA                     	;# 
  1694  1EAB                     	;# 
  1695  1EAC                     	;# 
  1696  1EB1                     	;# 
  1697  1EB2                     	;# 
  1698  1EB3                     	;# 
  1699  1EB8                     	;# 
  1700  1EB9                     	;# 
  1701  1EBA                     	;# 
  1702  1EBB                     	;# 
  1703  1EBC                     	;# 
  1704  1EBD                     	;# 
  1705  1EBE                     	;# 
  1706  1EC3                     	;# 
  1707  1EC5                     	;# 
  1708  1EC6                     	;# 
  1709  1EC7                     	;# 
  1710  1EC8                     	;# 
  1711  1EC9                     	;# 
  1712  1ECA                     	;# 
  1713  1ECB                     	;# 
  1714  1ECB                     	;# 
  1715  1ECB                     	;# 
  1716  1ECC                     	;# 
  1717  1ECC                     	;# 
  1718  1ECC                     	;# 
  1719  1ECD                     	;# 
  1720  1ECD                     	;# 
  1721  1ECE                     	;# 
  1722  1ECE                     	;# 
  1723  1F10                     	;# 
  1724  1F11                     	;# 
  1725  1F12                     	;# 
  1726  1F13                     	;# 
  1727  1F14                     	;# 
  1728  1F15                     	;# 
  1729  1F16                     	;# 
  1730  1F17                     	;# 
  1731  1F18                     	;# 
  1732  1F19                     	;# 
  1733  1F1A                     	;# 
  1734  1F1B                     	;# 
  1735  1F1C                     	;# 
  1736  1F1D                     	;# 
  1737  1F1E                     	;# 
  1738  1F1F                     	;# 
  1739  1F20                     	;# 
  1740  1F21                     	;# 
  1741  1F22                     	;# 
  1742  1F23                     	;# 
  1743  1F24                     	;# 
  1744  1F25                     	;# 
  1745  1F26                     	;# 
  1746  1F27                     	;# 
  1747  1F38                     	;# 
  1748  1F39                     	;# 
  1749  1F3A                     	;# 
  1750  1F3B                     	;# 
  1751  1F3C                     	;# 
  1752  1F3D                     	;# 
  1753  1F3E                     	;# 
  1754  1F3F                     	;# 
  1755  1F43                     	;# 
  1756  1F44                     	;# 
  1757  1F45                     	;# 
  1758  1F46                     	;# 
  1759  1F47                     	;# 
  1760  1F48                     	;# 
  1761  1F49                     	;# 
  1762  1F4A                     	;# 
  1763  1F4E                     	;# 
  1764  1F4F                     	;# 
  1765  1F50                     	;# 
  1766  1F51                     	;# 
  1767  1F52                     	;# 
  1768  1F53                     	;# 
  1769  1F54                     	;# 
  1770  1F55                     	;# 
  1771  1F65                     	;# 
  1772  1F66                     	;# 
  1773  1F67                     	;# 
  1774  1F68                     	;# 
  1775  1F69                     	;# 
  1776  1F6A                     	;# 
  1777  1F6B                     	;# 
  1778  1FE4                     	;# 
  1779  1FE5                     	;# 
  1780  1FE6                     	;# 
  1781  1FE7                     	;# 
  1782  1FE8                     	;# 
  1783  1FE8                     	;# 
  1784  1FE9                     	;# 
  1785  1FEA                     	;# 
  1786  1FEB                     	;# 
  1787  1FED                     	;# 
  1788  1FEE                     	;# 
  1789  1FEF                     	;# 
  1790  0000                     	;# 
  1791  0001                     	;# 
  1792  0002                     	;# 
  1793  0003                     	;# 
  1794  0004                     	;# 
  1795  0005                     	;# 
  1796  0006                     	;# 
  1797  0007                     	;# 
  1798  0008                     	;# 
  1799  0009                     	;# 
  1800  000A                     	;# 
  1801  000B                     	;# 
  1802  000C                     	;# 
  1803  000D                     	;# 
  1804  000E                     	;# 
  1805  0010                     	;# 
  1806  0012                     	;# 
  1807  0013                     	;# 
  1808  0014                     	;# 
  1809  0016                     	;# 
  1810  0018                     	;# 
  1811  0019                     	;# 
  1812  001A                     	;# 
  1813  001C                     	;# 
  1814  008C                     	;# 
  1815  008C                     	;# 
  1816  008D                     	;# 
  1817  008E                     	;# 
  1818  008E                     	;# 
  1819  008F                     	;# 
  1820  0090                     	;# 
  1821  0090                     	;# 
  1822  0091                     	;# 
  1823  0092                     	;# 
  1824  0092                     	;# 
  1825  0093                     	;# 
  1826  0094                     	;# 
  1827  0094                     	;# 
  1828  0095                     	;# 
  1829  0096                     	;# 
  1830  0096                     	;# 
  1831  0097                     	;# 
  1832  0098                     	;# 
  1833  0099                     	;# 
  1834  009A                     	;# 
  1835  009B                     	;# 
  1836  009B                     	;# 
  1837  009C                     	;# 
  1838  009D                     	;# 
  1839  009D                     	;# 
  1840  009E                     	;# 
  1841  009F                     	;# 
  1842  010C                     	;# 
  1843  010C                     	;# 
  1844  010D                     	;# 
  1845  010E                     	;# 
  1846  010F                     	;# 
  1847  010F                     	;# 
  1848  0110                     	;# 
  1849  0111                     	;# 
  1850  0112                     	;# 
  1851  0113                     	;# 
  1852  0114                     	;# 
  1853  0115                     	;# 
  1854  0116                     	;# 
  1855  0117                     	;# 
  1856  0118                     	;# 
  1857  0119                     	;# 
  1858  0119                     	;# 
  1859  0119                     	;# 
  1860  011A                     	;# 
  1861  011A                     	;# 
  1862  011A                     	;# 
  1863  011B                     	;# 
  1864  011B                     	;# 
  1865  011B                     	;# 
  1866  011B                     	;# 
  1867  011B                     	;# 
  1868  011C                     	;# 
  1869  011C                     	;# 
  1870  011C                     	;# 
  1871  011D                     	;# 
  1872  011D                     	;# 
  1873  011D                     	;# 
  1874  011E                     	;# 
  1875  011E                     	;# 
  1876  011E                     	;# 
  1877  011F                     	;# 
  1878  011F                     	;# 
  1879  011F                     	;# 
  1880  011F                     	;# 
  1881  011F                     	;# 
  1882  018C                     	;# 
  1883  018D                     	;# 
  1884  018E                     	;# 
  1885  018F                     	;# 
  1886  0190                     	;# 
  1887  0191                     	;# 
  1888  0192                     	;# 
  1889  0196                     	;# 
  1890  0197                     	;# 
  1891  0198                     	;# 
  1892  0199                     	;# 
  1893  019A                     	;# 
  1894  019B                     	;# 
  1895  019C                     	;# 
  1896  020C                     	;# 
  1897  020D                     	;# 
  1898  020E                     	;# 
  1899  020E                     	;# 
  1900  020F                     	;# 
  1901  020F                     	;# 
  1902  0210                     	;# 
  1903  0210                     	;# 
  1904  0211                     	;# 
  1905  0211                     	;# 
  1906  0212                     	;# 
  1907  0213                     	;# 
  1908  0214                     	;# 
  1909  0214                     	;# 
  1910  0215                     	;# 
  1911  0215                     	;# 
  1912  0216                     	;# 
  1913  0216                     	;# 
  1914  0217                     	;# 
  1915  0217                     	;# 
  1916  0218                     	;# 
  1917  0219                     	;# 
  1918  021A                     	;# 
  1919  021A                     	;# 
  1920  021B                     	;# 
  1921  021B                     	;# 
  1922  021C                     	;# 
  1923  021C                     	;# 
  1924  021D                     	;# 
  1925  021D                     	;# 
  1926  021E                     	;# 
  1927  021F                     	;# 
  1928  028C                     	;# 
  1929  028C                     	;# 
  1930  028D                     	;# 
  1931  028D                     	;# 
  1932  028E                     	;# 
  1933  028F                     	;# 
  1934  0290                     	;# 
  1935  0291                     	;# 
  1936  0292                     	;# 
  1937  0292                     	;# 
  1938  0293                     	;# 
  1939  0293                     	;# 
  1940  0294                     	;# 
  1941  0295                     	;# 
  1942  0296                     	;# 
  1943  0297                     	;# 
  1944  0298                     	;# 
  1945  0298                     	;# 
  1946  0299                     	;# 
  1947  0299                     	;# 
  1948  029A                     	;# 
  1949  029B                     	;# 
  1950  029C                     	;# 
  1951  029D                     	;# 
  1952  029F                     	;# 
  1953  030C                     	;# 
  1954  030C                     	;# 
  1955  030D                     	;# 
  1956  030E                     	;# 
  1957  030F                     	;# 
  1958  0310                     	;# 
  1959  0310                     	;# 
  1960  0311                     	;# 
  1961  0312                     	;# 
  1962  0313                     	;# 
  1963  0314                     	;# 
  1964  0314                     	;# 
  1965  0315                     	;# 
  1966  0316                     	;# 
  1967  0317                     	;# 
  1968  0318                     	;# 
  1969  0318                     	;# 
  1970  0319                     	;# 
  1971  031A                     	;# 
  1972  031B                     	;# 
  1973  031C                     	;# 
  1974  031C                     	;# 
  1975  031D                     	;# 
  1976  031E                     	;# 
  1977  031F                     	;# 
  1978  038C                     	;# 
  1979  038C                     	;# 
  1980  038D                     	;# 
  1981  038E                     	;# 
  1982  0390                     	;# 
  1983  0390                     	;# 
  1984  0391                     	;# 
  1985  0392                     	;# 
  1986  048C                     	;# 
  1987  048C                     	;# 
  1988  048D                     	;# 
  1989  048E                     	;# 
  1990  048F                     	;# 
  1991  048F                     	;# 
  1992  0490                     	;# 
  1993  0491                     	;# 
  1994  0492                     	;# 
  1995  0492                     	;# 
  1996  0493                     	;# 
  1997  0494                     	;# 
  1998  0495                     	;# 
  1999  0495                     	;# 
  2000  0496                     	;# 
  2001  0497                     	;# 
  2002  0498                     	;# 
  2003  0499                     	;# 
  2004  049A                     	;# 
  2005  049B                     	;# 
  2006  049C                     	;# 
  2007  049D                     	;# 
  2008  050C                     	;# 
  2009  050C                     	;# 
  2010  050D                     	;# 
  2011  050E                     	;# 
  2012  050F                     	;# 
  2013  050F                     	;# 
  2014  0510                     	;# 
  2015  0511                     	;# 
  2016  0512                     	;# 
  2017  0512                     	;# 
  2018  0513                     	;# 
  2019  0514                     	;# 
  2020  0515                     	;# 
  2021  0515                     	;# 
  2022  0516                     	;# 
  2023  0517                     	;# 
  2024  0518                     	;# 
  2025  0519                     	;# 
  2026  051A                     	;# 
  2027  051B                     	;# 
  2028  051C                     	;# 
  2029  051D                     	;# 
  2030  058C                     	;# 
  2031  058C                     	;# 
  2032  058D                     	;# 
  2033  058E                     	;# 
  2034  058F                     	;# 
  2035  058F                     	;# 
  2036  0590                     	;# 
  2037  0591                     	;# 
  2038  0592                     	;# 
  2039  0593                     	;# 
  2040  059C                     	;# 
  2041  059C                     	;# 
  2042  059D                     	;# 
  2043  059D                     	;# 
  2044  059E                     	;# 
  2045  059F                     	;# 
  2046  060C                     	;# 
  2047  060C                     	;# 
  2048  060D                     	;# 
  2049  060D                     	;# 
  2050  060E                     	;# 
  2051  060F                     	;# 
  2052  0610                     	;# 
  2053  0611                     	;# 
  2054  0612                     	;# 
  2055  0613                     	;# 
  2056  0614                     	;# 
  2057  0616                     	;# 
  2058  0616                     	;# 
  2059  0617                     	;# 
  2060  0617                     	;# 
  2061  0618                     	;# 
  2062  0619                     	;# 
  2063  061A                     	;# 
  2064  061B                     	;# 
  2065  061C                     	;# 
  2066  061D                     	;# 
  2067  061E                     	;# 
  2068  068C                     	;# 
  2069  068D                     	;# 
  2070  068E                     	;# 
  2071  068F                     	;# 
  2072  0690                     	;# 
  2073  0691                     	;# 
  2074  0692                     	;# 
  2075  0693                     	;# 
  2076  0694                     	;# 
  2077  070C                     	;# 
  2078  070D                     	;# 
  2079  070E                     	;# 
  2080  070F                     	;# 
  2081  0710                     	;# 
  2082  0711                     	;# 
  2083  0712                     	;# 
  2084  0713                     	;# 
  2085  0714                     	;# 
  2086  0716                     	;# 
  2087  0717                     	;# 
  2088  0718                     	;# 
  2089  0719                     	;# 
  2090  071A                     	;# 
  2091  071B                     	;# 
  2092  071C                     	;# 
  2093  071D                     	;# 
  2094  071E                     	;# 
  2095  0796                     	;# 
  2096  0797                     	;# 
  2097  0798                     	;# 
  2098  0799                     	;# 
  2099  079A                     	;# 
  2100  079B                     	;# 
  2101  079C                     	;# 
  2102  079D                     	;# 
  2103  080C                     	;# 
  2104  080D                     	;# 
  2105  080E                     	;# 
  2106  080F                     	;# 
  2107  0810                     	;# 
  2108  0811                     	;# 
  2109  0812                     	;# 
  2110  0813                     	;# 
  2111  0814                     	;# 
  2112  081A                     	;# 
  2113  081A                     	;# 
  2114  081B                     	;# 
  2115  081C                     	;# 
  2116  081C                     	;# 
  2117  081D                     	;# 
  2118  081E                     	;# 
  2119  081F                     	;# 
  2120  088C                     	;# 
  2121  088D                     	;# 
  2122  088E                     	;# 
  2123  088F                     	;# 
  2124  0890                     	;# 
  2125  0891                     	;# 
  2126  0892                     	;# 
  2127  0893                     	;# 
  2128  0895                     	;# 
  2129  0896                     	;# 
  2130  0897                     	;# 
  2131  0898                     	;# 
  2132  0899                     	;# 
  2133  089A                     	;# 
  2134  089B                     	;# 
  2135  090C                     	;# 
  2136  090E                     	;# 
  2137  090F                     	;# 
  2138  091F                     	;# 
  2139  098F                     	;# 
  2140  098F                     	;# 
  2141  0990                     	;# 
  2142  0991                     	;# 
  2143  0992                     	;# 
  2144  0993                     	;# 
  2145  0994                     	;# 
  2146  0995                     	;# 
  2147  0996                     	;# 
  2148  0997                     	;# 
  2149  0A19                     	;# 
  2150  0A19                     	;# 
  2151  0A1A                     	;# 
  2152  0A1A                     	;# 
  2153  0A1B                     	;# 
  2154  0A1B                     	;# 
  2155  0A1B                     	;# 
  2156  0A1C                     	;# 
  2157  0A1C                     	;# 
  2158  0A1D                     	;# 
  2159  0A1D                     	;# 
  2160  0A1E                     	;# 
  2161  0A1E                     	;# 
  2162  0A1F                     	;# 
  2163  0A1F                     	;# 
  2164  0A1F                     	;# 
  2165  1E0F                     	;# 
  2166  1E10                     	;# 
  2167  1E11                     	;# 
  2168  1E12                     	;# 
  2169  1E13                     	;# 
  2170  1E14                     	;# 
  2171  1E15                     	;# 
  2172  1E16                     	;# 
  2173  1E17                     	;# 
  2174  1E18                     	;# 
  2175  1E19                     	;# 
  2176  1E1A                     	;# 
  2177  1E1B                     	;# 
  2178  1E1C                     	;# 
  2179  1E1D                     	;# 
  2180  1E1E                     	;# 
  2181  1E1F                     	;# 
  2182  1E20                     	;# 
  2183  1E21                     	;# 
  2184  1E22                     	;# 
  2185  1E23                     	;# 
  2186  1E24                     	;# 
  2187  1E25                     	;# 
  2188  1E26                     	;# 
  2189  1E27                     	;# 
  2190  1E28                     	;# 
  2191  1E29                     	;# 
  2192  1E2A                     	;# 
  2193  1E2B                     	;# 
  2194  1E2C                     	;# 
  2195  1E2D                     	;# 
  2196  1E2E                     	;# 
  2197  1E2F                     	;# 
  2198  1E30                     	;# 
  2199  1E31                     	;# 
  2200  1E32                     	;# 
  2201  1E33                     	;# 
  2202  1E34                     	;# 
  2203  1E35                     	;# 
  2204  1E36                     	;# 
  2205  1E37                     	;# 
  2206  1E8F                     	;# 
  2207  1E90                     	;# 
  2208  1E91                     	;# 
  2209  1E92                     	;# 
  2210  1E93                     	;# 
  2211  1E94                     	;# 
  2212  1E95                     	;# 
  2213  1E96                     	;# 
  2214  1E97                     	;# 
  2215  1E9C                     	;# 
  2216  1E9D                     	;# 
  2217  1E9E                     	;# 
  2218  1EA1                     	;# 
  2219  1EA2                     	;# 
  2220  1EA3                     	;# 
  2221  1EA4                     	;# 
  2222  1EA5                     	;# 
  2223  1EA9                     	;# 
  2224  1EAA                     	;# 
  2225  1EAB                     	;# 
  2226  1EAC                     	;# 
  2227  1EB1                     	;# 
  2228  1EB2                     	;# 
  2229  1EB3                     	;# 
  2230  1EB8                     	;# 
  2231  1EB9                     	;# 
  2232  1EBA                     	;# 
  2233  1EBB                     	;# 
  2234  1EBC                     	;# 
  2235  1EBD                     	;# 
  2236  1EBE                     	;# 
  2237  1EC3                     	;# 
  2238  1EC5                     	;# 
  2239  1EC6                     	;# 
  2240  1EC7                     	;# 
  2241  1EC8                     	;# 
  2242  1EC9                     	;# 
  2243  1ECA                     	;# 
  2244  1ECB                     	;# 
  2245  1ECB                     	;# 
  2246  1ECB                     	;# 
  2247  1ECC                     	;# 
  2248  1ECC                     	;# 
  2249  1ECC                     	;# 
  2250  1ECD                     	;# 
  2251  1ECD                     	;# 
  2252  1ECE                     	;# 
  2253  1ECE                     	;# 
  2254  1F10                     	;# 
  2255  1F11                     	;# 
  2256  1F12                     	;# 
  2257  1F13                     	;# 
  2258  1F14                     	;# 
  2259  1F15                     	;# 
  2260  1F16                     	;# 
  2261  1F17                     	;# 
  2262  1F18                     	;# 
  2263  1F19                     	;# 
  2264  1F1A                     	;# 
  2265  1F1B                     	;# 
  2266  1F1C                     	;# 
  2267  1F1D                     	;# 
  2268  1F1E                     	;# 
  2269  1F1F                     	;# 
  2270  1F20                     	;# 
  2271  1F21                     	;# 
  2272  1F22                     	;# 
  2273  1F23                     	;# 
  2274  1F24                     	;# 
  2275  1F25                     	;# 
  2276  1F26                     	;# 
  2277  1F27                     	;# 
  2278  1F38                     	;# 
  2279  1F39                     	;# 
  2280  1F3A                     	;# 
  2281  1F3B                     	;# 
  2282  1F3C                     	;# 
  2283  1F3D                     	;# 
  2284  1F3E                     	;# 
  2285  1F3F                     	;# 
  2286  1F43                     	;# 
  2287  1F44                     	;# 
  2288  1F45                     	;# 
  2289  1F46                     	;# 
  2290  1F47                     	;# 
  2291  1F48                     	;# 
  2292  1F49                     	;# 
  2293  1F4A                     	;# 
  2294  1F4E                     	;# 
  2295  1F4F                     	;# 
  2296  1F50                     	;# 
  2297  1F51                     	;# 
  2298  1F52                     	;# 
  2299  1F53                     	;# 
  2300  1F54                     	;# 
  2301  1F55                     	;# 
  2302  1F65                     	;# 
  2303  1F66                     	;# 
  2304  1F67                     	;# 
  2305  1F68                     	;# 
  2306  1F69                     	;# 
  2307  1F6A                     	;# 
  2308  1F6B                     	;# 
  2309  1FE4                     	;# 
  2310  1FE5                     	;# 
  2311  1FE6                     	;# 
  2312  1FE7                     	;# 
  2313  1FE8                     	;# 
  2314  1FE8                     	;# 
  2315  1FE9                     	;# 
  2316  1FEA                     	;# 
  2317  1FEB                     	;# 
  2318  1FED                     	;# 
  2319  1FEE                     	;# 
  2320  1FEF                     	;# 
  2321  0000                     	;# 
  2322  0001                     	;# 
  2323  0002                     	;# 
  2324  0003                     	;# 
  2325  0004                     	;# 
  2326  0005                     	;# 
  2327  0006                     	;# 
  2328  0007                     	;# 
  2329  0008                     	;# 
  2330  0009                     	;# 
  2331  000A                     	;# 
  2332  000B                     	;# 
  2333  000C                     	;# 
  2334  000D                     	;# 
  2335  000E                     	;# 
  2336  0010                     	;# 
  2337  0012                     	;# 
  2338  0013                     	;# 
  2339  0014                     	;# 
  2340  0016                     	;# 
  2341  0018                     	;# 
  2342  0019                     	;# 
  2343  001A                     	;# 
  2344  001C                     	;# 
  2345  008C                     	;# 
  2346  008C                     	;# 
  2347  008D                     	;# 
  2348  008E                     	;# 
  2349  008E                     	;# 
  2350  008F                     	;# 
  2351  0090                     	;# 
  2352  0090                     	;# 
  2353  0091                     	;# 
  2354  0092                     	;# 
  2355  0092                     	;# 
  2356  0093                     	;# 
  2357  0094                     	;# 
  2358  0094                     	;# 
  2359  0095                     	;# 
  2360  0096                     	;# 
  2361  0096                     	;# 
  2362  0097                     	;# 
  2363  0098                     	;# 
  2364  0099                     	;# 
  2365  009A                     	;# 
  2366  009B                     	;# 
  2367  009B                     	;# 
  2368  009C                     	;# 
  2369  009D                     	;# 
  2370  009D                     	;# 
  2371  009E                     	;# 
  2372  009F                     	;# 
  2373  010C                     	;# 
  2374  010C                     	;# 
  2375  010D                     	;# 
  2376  010E                     	;# 
  2377  010F                     	;# 
  2378  010F                     	;# 
  2379  0110                     	;# 
  2380  0111                     	;# 
  2381  0112                     	;# 
  2382  0113                     	;# 
  2383  0114                     	;# 
  2384  0115                     	;# 
  2385  0116                     	;# 
  2386  0117                     	;# 
  2387  0118                     	;# 
  2388  0119                     	;# 
  2389  0119                     	;# 
  2390  0119                     	;# 
  2391  011A                     	;# 
  2392  011A                     	;# 
  2393  011A                     	;# 
  2394  011B                     	;# 
  2395  011B                     	;# 
  2396  011B                     	;# 
  2397  011B                     	;# 
  2398  011B                     	;# 
  2399  011C                     	;# 
  2400  011C                     	;# 
  2401  011C                     	;# 
  2402  011D                     	;# 
  2403  011D                     	;# 
  2404  011D                     	;# 
  2405  011E                     	;# 
  2406  011E                     	;# 
  2407  011E                     	;# 
  2408  011F                     	;# 
  2409  011F                     	;# 
  2410  011F                     	;# 
  2411  011F                     	;# 
  2412  011F                     	;# 
  2413  018C                     	;# 
  2414  018D                     	;# 
  2415  018E                     	;# 
  2416  018F                     	;# 
  2417  0190                     	;# 
  2418  0191                     	;# 
  2419  0192                     	;# 
  2420  0196                     	;# 
  2421  0197                     	;# 
  2422  0198                     	;# 
  2423  0199                     	;# 
  2424  019A                     	;# 
  2425  019B                     	;# 
  2426  019C                     	;# 
  2427  020C                     	;# 
  2428  020D                     	;# 
  2429  020E                     	;# 
  2430  020E                     	;# 
  2431  020F                     	;# 
  2432  020F                     	;# 
  2433  0210                     	;# 
  2434  0210                     	;# 
  2435  0211                     	;# 
  2436  0211                     	;# 
  2437  0212                     	;# 
  2438  0213                     	;# 
  2439  0214                     	;# 
  2440  0214                     	;# 
  2441  0215                     	;# 
  2442  0215                     	;# 
  2443  0216                     	;# 
  2444  0216                     	;# 
  2445  0217                     	;# 
  2446  0217                     	;# 
  2447  0218                     	;# 
  2448  0219                     	;# 
  2449  021A                     	;# 
  2450  021A                     	;# 
  2451  021B                     	;# 
  2452  021B                     	;# 
  2453  021C                     	;# 
  2454  021C                     	;# 
  2455  021D                     	;# 
  2456  021D                     	;# 
  2457  021E                     	;# 
  2458  021F                     	;# 
  2459  028C                     	;# 
  2460  028C                     	;# 
  2461  028D                     	;# 
  2462  028D                     	;# 
  2463  028E                     	;# 
  2464  028F                     	;# 
  2465  0290                     	;# 
  2466  0291                     	;# 
  2467  0292                     	;# 
  2468  0292                     	;# 
  2469  0293                     	;# 
  2470  0293                     	;# 
  2471  0294                     	;# 
  2472  0295                     	;# 
  2473  0296                     	;# 
  2474  0297                     	;# 
  2475  0298                     	;# 
  2476  0298                     	;# 
  2477  0299                     	;# 
  2478  0299                     	;# 
  2479  029A                     	;# 
  2480  029B                     	;# 
  2481  029C                     	;# 
  2482  029D                     	;# 
  2483  029F                     	;# 
  2484  030C                     	;# 
  2485  030C                     	;# 
  2486  030D                     	;# 
  2487  030E                     	;# 
  2488  030F                     	;# 
  2489  0310                     	;# 
  2490  0310                     	;# 
  2491  0311                     	;# 
  2492  0312                     	;# 
  2493  0313                     	;# 
  2494  0314                     	;# 
  2495  0314                     	;# 
  2496  0315                     	;# 
  2497  0316                     	;# 
  2498  0317                     	;# 
  2499  0318                     	;# 
  2500  0318                     	;# 
  2501  0319                     	;# 
  2502  031A                     	;# 
  2503  031B                     	;# 
  2504  031C                     	;# 
  2505  031C                     	;# 
  2506  031D                     	;# 
  2507  031E                     	;# 
  2508  031F                     	;# 
  2509  038C                     	;# 
  2510  038C                     	;# 
  2511  038D                     	;# 
  2512  038E                     	;# 
  2513  0390                     	;# 
  2514  0390                     	;# 
  2515  0391                     	;# 
  2516  0392                     	;# 
  2517  048C                     	;# 
  2518  048C                     	;# 
  2519  048D                     	;# 
  2520  048E                     	;# 
  2521  048F                     	;# 
  2522  048F                     	;# 
  2523  0490                     	;# 
  2524  0491                     	;# 
  2525  0492                     	;# 
  2526  0492                     	;# 
  2527  0493                     	;# 
  2528  0494                     	;# 
  2529  0495                     	;# 
  2530  0495                     	;# 
  2531  0496                     	;# 
  2532  0497                     	;# 
  2533  0498                     	;# 
  2534  0499                     	;# 
  2535  049A                     	;# 
  2536  049B                     	;# 
  2537  049C                     	;# 
  2538  049D                     	;# 
  2539  050C                     	;# 
  2540  050C                     	;# 
  2541  050D                     	;# 
  2542  050E                     	;# 
  2543  050F                     	;# 
  2544  050F                     	;# 
  2545  0510                     	;# 
  2546  0511                     	;# 
  2547  0512                     	;# 
  2548  0512                     	;# 
  2549  0513                     	;# 
  2550  0514                     	;# 
  2551  0515                     	;# 
  2552  0515                     	;# 
  2553  0516                     	;# 
  2554  0517                     	;# 
  2555  0518                     	;# 
  2556  0519                     	;# 
  2557  051A                     	;# 
  2558  051B                     	;# 
  2559  051C                     	;# 
  2560  051D                     	;# 
  2561  058C                     	;# 
  2562  058C                     	;# 
  2563  058D                     	;# 
  2564  058E                     	;# 
  2565  058F                     	;# 
  2566  058F                     	;# 
  2567  0590                     	;# 
  2568  0591                     	;# 
  2569  0592                     	;# 
  2570  0593                     	;# 
  2571  059C                     	;# 
  2572  059C                     	;# 
  2573  059D                     	;# 
  2574  059D                     	;# 
  2575  059E                     	;# 
  2576  059F                     	;# 
  2577  060C                     	;# 
  2578  060C                     	;# 
  2579  060D                     	;# 
  2580  060D                     	;# 
  2581  060E                     	;# 
  2582  060F                     	;# 
  2583  0610                     	;# 
  2584  0611                     	;# 
  2585  0612                     	;# 
  2586  0613                     	;# 
  2587  0614                     	;# 
  2588  0616                     	;# 
  2589  0616                     	;# 
  2590  0617                     	;# 
  2591  0617                     	;# 
  2592  0618                     	;# 
  2593  0619                     	;# 
  2594  061A                     	;# 
  2595  061B                     	;# 
  2596  061C                     	;# 
  2597  061D                     	;# 
  2598  061E                     	;# 
  2599  068C                     	;# 
  2600  068D                     	;# 
  2601  068E                     	;# 
  2602  068F                     	;# 
  2603  0690                     	;# 
  2604  0691                     	;# 
  2605  0692                     	;# 
  2606  0693                     	;# 
  2607  0694                     	;# 
  2608  070C                     	;# 
  2609  070D                     	;# 
  2610  070E                     	;# 
  2611  070F                     	;# 
  2612  0710                     	;# 
  2613  0711                     	;# 
  2614  0712                     	;# 
  2615  0713                     	;# 
  2616  0714                     	;# 
  2617  0716                     	;# 
  2618  0717                     	;# 
  2619  0718                     	;# 
  2620  0719                     	;# 
  2621  071A                     	;# 
  2622  071B                     	;# 
  2623  071C                     	;# 
  2624  071D                     	;# 
  2625  071E                     	;# 
  2626  0796                     	;# 
  2627  0797                     	;# 
  2628  0798                     	;# 
  2629  0799                     	;# 
  2630  079A                     	;# 
  2631  079B                     	;# 
  2632  079C                     	;# 
  2633  079D                     	;# 
  2634  080C                     	;# 
  2635  080D                     	;# 
  2636  080E                     	;# 
  2637  080F                     	;# 
  2638  0810                     	;# 
  2639  0811                     	;# 
  2640  0812                     	;# 
  2641  0813                     	;# 
  2642  0814                     	;# 
  2643  081A                     	;# 
  2644  081A                     	;# 
  2645  081B                     	;# 
  2646  081C                     	;# 
  2647  081C                     	;# 
  2648  081D                     	;# 
  2649  081E                     	;# 
  2650  081F                     	;# 
  2651  088C                     	;# 
  2652  088D                     	;# 
  2653  088E                     	;# 
  2654  088F                     	;# 
  2655  0890                     	;# 
  2656  0891                     	;# 
  2657  0892                     	;# 
  2658  0893                     	;# 
  2659  0895                     	;# 
  2660  0896                     	;# 
  2661  0897                     	;# 
  2662  0898                     	;# 
  2663  0899                     	;# 
  2664  089A                     	;# 
  2665  089B                     	;# 
  2666  090C                     	;# 
  2667  090E                     	;# 
  2668  090F                     	;# 
  2669  091F                     	;# 
  2670  098F                     	;# 
  2671  098F                     	;# 
  2672  0990                     	;# 
  2673  0991                     	;# 
  2674  0992                     	;# 
  2675  0993                     	;# 
  2676  0994                     	;# 
  2677  0995                     	;# 
  2678  0996                     	;# 
  2679  0997                     	;# 
  2680  0A19                     	;# 
  2681  0A19                     	;# 
  2682  0A1A                     	;# 
  2683  0A1A                     	;# 
  2684  0A1B                     	;# 
  2685  0A1B                     	;# 
  2686  0A1B                     	;# 
  2687  0A1C                     	;# 
  2688  0A1C                     	;# 
  2689  0A1D                     	;# 
  2690  0A1D                     	;# 
  2691  0A1E                     	;# 
  2692  0A1E                     	;# 
  2693  0A1F                     	;# 
  2694  0A1F                     	;# 
  2695  0A1F                     	;# 
  2696  1E0F                     	;# 
  2697  1E10                     	;# 
  2698  1E11                     	;# 
  2699  1E12                     	;# 
  2700  1E13                     	;# 
  2701  1E14                     	;# 
  2702  1E15                     	;# 
  2703  1E16                     	;# 
  2704  1E17                     	;# 
  2705  1E18                     	;# 
  2706  1E19                     	;# 
  2707  1E1A                     	;# 
  2708  1E1B                     	;# 
  2709  1E1C                     	;# 
  2710  1E1D                     	;# 
  2711  1E1E                     	;# 
  2712  1E1F                     	;# 
  2713  1E20                     	;# 
  2714  1E21                     	;# 
  2715  1E22                     	;# 
  2716  1E23                     	;# 
  2717  1E24                     	;# 
  2718  1E25                     	;# 
  2719  1E26                     	;# 
  2720  1E27                     	;# 
  2721  1E28                     	;# 
  2722  1E29                     	;# 
  2723  1E2A                     	;# 
  2724  1E2B                     	;# 
  2725  1E2C                     	;# 
  2726  1E2D                     	;# 
  2727  1E2E                     	;# 
  2728  1E2F                     	;# 
  2729  1E30                     	;# 
  2730  1E31                     	;# 
  2731  1E32                     	;# 
  2732  1E33                     	;# 
  2733  1E34                     	;# 
  2734  1E35                     	;# 
  2735  1E36                     	;# 
  2736  1E37                     	;# 
  2737  1E8F                     	;# 
  2738  1E90                     	;# 
  2739  1E91                     	;# 
  2740  1E92                     	;# 
  2741  1E93                     	;# 
  2742  1E94                     	;# 
  2743  1E95                     	;# 
  2744  1E96                     	;# 
  2745  1E97                     	;# 
  2746  1E9C                     	;# 
  2747  1E9D                     	;# 
  2748  1E9E                     	;# 
  2749  1EA1                     	;# 
  2750  1EA2                     	;# 
  2751  1EA3                     	;# 
  2752  1EA4                     	;# 
  2753  1EA5                     	;# 
  2754  1EA9                     	;# 
  2755  1EAA                     	;# 
  2756  1EAB                     	;# 
  2757  1EAC                     	;# 
  2758  1EB1                     	;# 
  2759  1EB2                     	;# 
  2760  1EB3                     	;# 
  2761  1EB8                     	;# 
  2762  1EB9                     	;# 
  2763  1EBA                     	;# 
  2764  1EBB                     	;# 
  2765  1EBC                     	;# 
  2766  1EBD                     	;# 
  2767  1EBE                     	;# 
  2768  1EC3                     	;# 
  2769  1EC5                     	;# 
  2770  1EC6                     	;# 
  2771  1EC7                     	;# 
  2772  1EC8                     	;# 
  2773  1EC9                     	;# 
  2774  1ECA                     	;# 
  2775  1ECB                     	;# 
  2776  1ECB                     	;# 
  2777  1ECB                     	;# 
  2778  1ECC                     	;# 
  2779  1ECC                     	;# 
  2780  1ECC                     	;# 
  2781  1ECD                     	;# 
  2782  1ECD                     	;# 
  2783  1ECE                     	;# 
  2784  1ECE                     	;# 
  2785  1F10                     	;# 
  2786  1F11                     	;# 
  2787  1F12                     	;# 
  2788  1F13                     	;# 
  2789  1F14                     	;# 
  2790  1F15                     	;# 
  2791  1F16                     	;# 
  2792  1F17                     	;# 
  2793  1F18                     	;# 
  2794  1F19                     	;# 
  2795  1F1A                     	;# 
  2796  1F1B                     	;# 
  2797  1F1C                     	;# 
  2798  1F1D                     	;# 
  2799  1F1E                     	;# 
  2800  1F1F                     	;# 
  2801  1F20                     	;# 
  2802  1F21                     	;# 
  2803  1F22                     	;# 
  2804  1F23                     	;# 
  2805  1F24                     	;# 
  2806  1F25                     	;# 
  2807  1F26                     	;# 
  2808  1F27                     	;# 
  2809  1F38                     	;# 
  2810  1F39                     	;# 
  2811  1F3A                     	;# 
  2812  1F3B                     	;# 
  2813  1F3C                     	;# 
  2814  1F3D                     	;# 
  2815  1F3E                     	;# 
  2816  1F3F                     	;# 
  2817  1F43                     	;# 
  2818  1F44                     	;# 
  2819  1F45                     	;# 
  2820  1F46                     	;# 
  2821  1F47                     	;# 
  2822  1F48                     	;# 
  2823  1F49                     	;# 
  2824  1F4A                     	;# 
  2825  1F4E                     	;# 
  2826  1F4F                     	;# 
  2827  1F50                     	;# 
  2828  1F51                     	;# 
  2829  1F52                     	;# 
  2830  1F53                     	;# 
  2831  1F54                     	;# 
  2832  1F55                     	;# 
  2833  1F65                     	;# 
  2834  1F66                     	;# 
  2835  1F67                     	;# 
  2836  1F68                     	;# 
  2837  1F69                     	;# 
  2838  1F6A                     	;# 
  2839  1F6B                     	;# 
  2840  1FE4                     	;# 
  2841  1FE5                     	;# 
  2842  1FE6                     	;# 
  2843  1FE7                     	;# 
  2844  1FE8                     	;# 
  2845  1FE8                     	;# 
  2846  1FE9                     	;# 
  2847  1FEA                     	;# 
  2848  1FEB                     	;# 
  2849  1FED                     	;# 
  2850  1FEE                     	;# 
  2851  1FEF                     	;# 
  2852  0000                     	;# 
  2853  0001                     	;# 
  2854  0002                     	;# 
  2855  0003                     	;# 
  2856  0004                     	;# 
  2857  0005                     	;# 
  2858  0006                     	;# 
  2859  0007                     	;# 
  2860  0008                     	;# 
  2861  0009                     	;# 
  2862  000A                     	;# 
  2863  000B                     	;# 
  2864  000C                     	;# 
  2865  000D                     	;# 
  2866  000E                     	;# 
  2867  0010                     	;# 
  2868  0012                     	;# 
  2869  0013                     	;# 
  2870  0014                     	;# 
  2871  0016                     	;# 
  2872  0018                     	;# 
  2873  0019                     	;# 
  2874  001A                     	;# 
  2875  001C                     	;# 
  2876  008C                     	;# 
  2877  008C                     	;# 
  2878  008D                     	;# 
  2879  008E                     	;# 
  2880  008E                     	;# 
  2881  008F                     	;# 
  2882  0090                     	;# 
  2883  0090                     	;# 
  2884  0091                     	;# 
  2885  0092                     	;# 
  2886  0092                     	;# 
  2887  0093                     	;# 
  2888  0094                     	;# 
  2889  0094                     	;# 
  2890  0095                     	;# 
  2891  0096                     	;# 
  2892  0096                     	;# 
  2893  0097                     	;# 
  2894  0098                     	;# 
  2895  0099                     	;# 
  2896  009A                     	;# 
  2897  009B                     	;# 
  2898  009B                     	;# 
  2899  009C                     	;# 
  2900  009D                     	;# 
  2901  009D                     	;# 
  2902  009E                     	;# 
  2903  009F                     	;# 
  2904  010C                     	;# 
  2905  010C                     	;# 
  2906  010D                     	;# 
  2907  010E                     	;# 
  2908  010F                     	;# 
  2909  010F                     	;# 
  2910  0110                     	;# 
  2911  0111                     	;# 
  2912  0112                     	;# 
  2913  0113                     	;# 
  2914  0114                     	;# 
  2915  0115                     	;# 
  2916  0116                     	;# 
  2917  0117                     	;# 
  2918  0118                     	;# 
  2919  0119                     	;# 
  2920  0119                     	;# 
  2921  0119                     	;# 
  2922  011A                     	;# 
  2923  011A                     	;# 
  2924  011A                     	;# 
  2925  011B                     	;# 
  2926  011B                     	;# 
  2927  011B                     	;# 
  2928  011B                     	;# 
  2929  011B                     	;# 
  2930  011C                     	;# 
  2931  011C                     	;# 
  2932  011C                     	;# 
  2933  011D                     	;# 
  2934  011D                     	;# 
  2935  011D                     	;# 
  2936  011E                     	;# 
  2937  011E                     	;# 
  2938  011E                     	;# 
  2939  011F                     	;# 
  2940  011F                     	;# 
  2941  011F                     	;# 
  2942  011F                     	;# 
  2943  011F                     	;# 
  2944  018C                     	;# 
  2945  018D                     	;# 
  2946  018E                     	;# 
  2947  018F                     	;# 
  2948  0190                     	;# 
  2949  0191                     	;# 
  2950  0192                     	;# 
  2951  0196                     	;# 
  2952  0197                     	;# 
  2953  0198                     	;# 
  2954  0199                     	;# 
  2955  019A                     	;# 
  2956  019B                     	;# 
  2957  019C                     	;# 
  2958  020C                     	;# 
  2959  020D                     	;# 
  2960  020E                     	;# 
  2961  020E                     	;# 
  2962  020F                     	;# 
  2963  020F                     	;# 
  2964  0210                     	;# 
  2965  0210                     	;# 
  2966  0211                     	;# 
  2967  0211                     	;# 
  2968  0212                     	;# 
  2969  0213                     	;# 
  2970  0214                     	;# 
  2971  0214                     	;# 
  2972  0215                     	;# 
  2973  0215                     	;# 
  2974  0216                     	;# 
  2975  0216                     	;# 
  2976  0217                     	;# 
  2977  0217                     	;# 
  2978  0218                     	;# 
  2979  0219                     	;# 
  2980  021A                     	;# 
  2981  021A                     	;# 
  2982  021B                     	;# 
  2983  021B                     	;# 
  2984  021C                     	;# 
  2985  021C                     	;# 
  2986  021D                     	;# 
  2987  021D                     	;# 
  2988  021E                     	;# 
  2989  021F                     	;# 
  2990  028C                     	;# 
  2991  028C                     	;# 
  2992  028D                     	;# 
  2993  028D                     	;# 
  2994  028E                     	;# 
  2995  028F                     	;# 
  2996  0290                     	;# 
  2997  0291                     	;# 
  2998  0292                     	;# 
  2999  0292                     	;# 
  3000  0293                     	;# 
  3001  0293                     	;# 
  3002  0294                     	;# 
  3003  0295                     	;# 
  3004  0296                     	;# 
  3005  0297                     	;# 
  3006  0298                     	;# 
  3007  0298                     	;# 
  3008  0299                     	;# 
  3009  0299                     	;# 
  3010  029A                     	;# 
  3011  029B                     	;# 
  3012  029C                     	;# 
  3013  029D                     	;# 
  3014  029F                     	;# 
  3015  030C                     	;# 
  3016  030C                     	;# 
  3017  030D                     	;# 
  3018  030E                     	;# 
  3019  030F                     	;# 
  3020  0310                     	;# 
  3021  0310                     	;# 
  3022  0311                     	;# 
  3023  0312                     	;# 
  3024  0313                     	;# 
  3025  0314                     	;# 
  3026  0314                     	;# 
  3027  0315                     	;# 
  3028  0316                     	;# 
  3029  0317                     	;# 
  3030  0318                     	;# 
  3031  0318                     	;# 
  3032  0319                     	;# 
  3033  031A                     	;# 
  3034  031B                     	;# 
  3035  031C                     	;# 
  3036  031C                     	;# 
  3037  031D                     	;# 
  3038  031E                     	;# 
  3039  031F                     	;# 
  3040  038C                     	;# 
  3041  038C                     	;# 
  3042  038D                     	;# 
  3043  038E                     	;# 
  3044  0390                     	;# 
  3045  0390                     	;# 
  3046  0391                     	;# 
  3047  0392                     	;# 
  3048  048C                     	;# 
  3049  048C                     	;# 
  3050  048D                     	;# 
  3051  048E                     	;# 
  3052  048F                     	;# 
  3053  048F                     	;# 
  3054  0490                     	;# 
  3055  0491                     	;# 
  3056  0492                     	;# 
  3057  0492                     	;# 
  3058  0493                     	;# 
  3059  0494                     	;# 
  3060  0495                     	;# 
  3061  0495                     	;# 
  3062  0496                     	;# 
  3063  0497                     	;# 
  3064  0498                     	;# 
  3065  0499                     	;# 
  3066  049A                     	;# 
  3067  049B                     	;# 
  3068  049C                     	;# 
  3069  049D                     	;# 
  3070  050C                     	;# 
  3071  050C                     	;# 
  3072  050D                     	;# 
  3073  050E                     	;# 
  3074  050F                     	;# 
  3075  050F                     	;# 
  3076  0510                     	;# 
  3077  0511                     	;# 
  3078  0512                     	;# 
  3079  0512                     	;# 
  3080  0513                     	;# 
  3081  0514                     	;# 
  3082  0515                     	;# 
  3083  0515                     	;# 
  3084  0516                     	;# 
  3085  0517                     	;# 
  3086  0518                     	;# 
  3087  0519                     	;# 
  3088  051A                     	;# 
  3089  051B                     	;# 
  3090  051C                     	;# 
  3091  051D                     	;# 
  3092  058C                     	;# 
  3093  058C                     	;# 
  3094  058D                     	;# 
  3095  058E                     	;# 
  3096  058F                     	;# 
  3097  058F                     	;# 
  3098  0590                     	;# 
  3099  0591                     	;# 
  3100  0592                     	;# 
  3101  0593                     	;# 
  3102  059C                     	;# 
  3103  059C                     	;# 
  3104  059D                     	;# 
  3105  059D                     	;# 
  3106  059E                     	;# 
  3107  059F                     	;# 
  3108  060C                     	;# 
  3109  060C                     	;# 
  3110  060D                     	;# 
  3111  060D                     	;# 
  3112  060E                     	;# 
  3113  060F                     	;# 
  3114  0610                     	;# 
  3115  0611                     	;# 
  3116  0612                     	;# 
  3117  0613                     	;# 
  3118  0614                     	;# 
  3119  0616                     	;# 
  3120  0616                     	;# 
  3121  0617                     	;# 
  3122  0617                     	;# 
  3123  0618                     	;# 
  3124  0619                     	;# 
  3125  061A                     	;# 
  3126  061B                     	;# 
  3127  061C                     	;# 
  3128  061D                     	;# 
  3129  061E                     	;# 
  3130  068C                     	;# 
  3131  068D                     	;# 
  3132  068E                     	;# 
  3133  068F                     	;# 
  3134  0690                     	;# 
  3135  0691                     	;# 
  3136  0692                     	;# 
  3137  0693                     	;# 
  3138  0694                     	;# 
  3139  070C                     	;# 
  3140  070D                     	;# 
  3141  070E                     	;# 
  3142  070F                     	;# 
  3143  0710                     	;# 
  3144  0711                     	;# 
  3145  0712                     	;# 
  3146  0713                     	;# 
  3147  0714                     	;# 
  3148  0716                     	;# 
  3149  0717                     	;# 
  3150  0718                     	;# 
  3151  0719                     	;# 
  3152  071A                     	;# 
  3153  071B                     	;# 
  3154  071C                     	;# 
  3155  071D                     	;# 
  3156  071E                     	;# 
  3157  0796                     	;# 
  3158  0797                     	;# 
  3159  0798                     	;# 
  3160  0799                     	;# 
  3161  079A                     	;# 
  3162  079B                     	;# 
  3163  079C                     	;# 
  3164  079D                     	;# 
  3165  080C                     	;# 
  3166  080D                     	;# 
  3167  080E                     	;# 
  3168  080F                     	;# 
  3169  0810                     	;# 
  3170  0811                     	;# 
  3171  0812                     	;# 
  3172  0813                     	;# 
  3173  0814                     	;# 
  3174  081A                     	;# 
  3175  081A                     	;# 
  3176  081B                     	;# 
  3177  081C                     	;# 
  3178  081C                     	;# 
  3179  081D                     	;# 
  3180  081E                     	;# 
  3181  081F                     	;# 
  3182  088C                     	;# 
  3183  088D                     	;# 
  3184  088E                     	;# 
  3185  088F                     	;# 
  3186  0890                     	;# 
  3187  0891                     	;# 
  3188  0892                     	;# 
  3189  0893                     	;# 
  3190  0895                     	;# 
  3191  0896                     	;# 
  3192  0897                     	;# 
  3193  0898                     	;# 
  3194  0899                     	;# 
  3195  089A                     	;# 
  3196  089B                     	;# 
  3197  090C                     	;# 
  3198  090E                     	;# 
  3199  090F                     	;# 
  3200  091F                     	;# 
  3201  098F                     	;# 
  3202  098F                     	;# 
  3203  0990                     	;# 
  3204  0991                     	;# 
  3205  0992                     	;# 
  3206  0993                     	;# 
  3207  0994                     	;# 
  3208  0995                     	;# 
  3209  0996                     	;# 
  3210  0997                     	;# 
  3211  0A19                     	;# 
  3212  0A19                     	;# 
  3213  0A1A                     	;# 
  3214  0A1A                     	;# 
  3215  0A1B                     	;# 
  3216  0A1B                     	;# 
  3217  0A1B                     	;# 
  3218  0A1C                     	;# 
  3219  0A1C                     	;# 
  3220  0A1D                     	;# 
  3221  0A1D                     	;# 
  3222  0A1E                     	;# 
  3223  0A1E                     	;# 
  3224  0A1F                     	;# 
  3225  0A1F                     	;# 
  3226  0A1F                     	;# 
  3227  1E0F                     	;# 
  3228  1E10                     	;# 
  3229  1E11                     	;# 
  3230  1E12                     	;# 
  3231  1E13                     	;# 
  3232  1E14                     	;# 
  3233  1E15                     	;# 
  3234  1E16                     	;# 
  3235  1E17                     	;# 
  3236  1E18                     	;# 
  3237  1E19                     	;# 
  3238  1E1A                     	;# 
  3239  1E1B                     	;# 
  3240  1E1C                     	;# 
  3241  1E1D                     	;# 
  3242  1E1E                     	;# 
  3243  1E1F                     	;# 
  3244  1E20                     	;# 
  3245  1E21                     	;# 
  3246  1E22                     	;# 
  3247  1E23                     	;# 
  3248  1E24                     	;# 
  3249  1E25                     	;# 
  3250  1E26                     	;# 
  3251  1E27                     	;# 
  3252  1E28                     	;# 
  3253  1E29                     	;# 
  3254  1E2A                     	;# 
  3255  1E2B                     	;# 
  3256  1E2C                     	;# 
  3257  1E2D                     	;# 
  3258  1E2E                     	;# 
  3259  1E2F                     	;# 
  3260  1E30                     	;# 
  3261  1E31                     	;# 
  3262  1E32                     	;# 
  3263  1E33                     	;# 
  3264  1E34                     	;# 
  3265  1E35                     	;# 
  3266  1E36                     	;# 
  3267  1E37                     	;# 
  3268  1E8F                     	;# 
  3269  1E90                     	;# 
  3270  1E91                     	;# 
  3271  1E92                     	;# 
  3272  1E93                     	;# 
  3273  1E94                     	;# 
  3274  1E95                     	;# 
  3275  1E96                     	;# 
  3276  1E97                     	;# 
  3277  1E9C                     	;# 
  3278  1E9D                     	;# 
  3279  1E9E                     	;# 
  3280  1EA1                     	;# 
  3281  1EA2                     	;# 
  3282  1EA3                     	;# 
  3283  1EA4                     	;# 
  3284  1EA5                     	;# 
  3285  1EA9                     	;# 
  3286  1EAA                     	;# 
  3287  1EAB                     	;# 
  3288  1EAC                     	;# 
  3289  1EB1                     	;# 
  3290  1EB2                     	;# 
  3291  1EB3                     	;# 
  3292  1EB8                     	;# 
  3293  1EB9                     	;# 
  3294  1EBA                     	;# 
  3295  1EBB                     	;# 
  3296  1EBC                     	;# 
  3297  1EBD                     	;# 
  3298  1EBE                     	;# 
  3299  1EC3                     	;# 
  3300  1EC5                     	;# 
  3301  1EC6                     	;# 
  3302  1EC7                     	;# 
  3303  1EC8                     	;# 
  3304  1EC9                     	;# 
  3305  1ECA                     	;# 
  3306  1ECB                     	;# 
  3307  1ECB                     	;# 
  3308  1ECB                     	;# 
  3309  1ECC                     	;# 
  3310  1ECC                     	;# 
  3311  1ECC                     	;# 
  3312  1ECD                     	;# 
  3313  1ECD                     	;# 
  3314  1ECE                     	;# 
  3315  1ECE                     	;# 
  3316  1F10                     	;# 
  3317  1F11                     	;# 
  3318  1F12                     	;# 
  3319  1F13                     	;# 
  3320  1F14                     	;# 
  3321  1F15                     	;# 
  3322  1F16                     	;# 
  3323  1F17                     	;# 
  3324  1F18                     	;# 
  3325  1F19                     	;# 
  3326  1F1A                     	;# 
  3327  1F1B                     	;# 
  3328  1F1C                     	;# 
  3329  1F1D                     	;# 
  3330  1F1E                     	;# 
  3331  1F1F                     	;# 
  3332  1F20                     	;# 
  3333  1F21                     	;# 
  3334  1F22                     	;# 
  3335  1F23                     	;# 
  3336  1F24                     	;# 
  3337  1F25                     	;# 
  3338  1F26                     	;# 
  3339  1F27                     	;# 
  3340  1F38                     	;# 
  3341  1F39                     	;# 
  3342  1F3A                     	;# 
  3343  1F3B                     	;# 
  3344  1F3C                     	;# 
  3345  1F3D                     	;# 
  3346  1F3E                     	;# 
  3347  1F3F                     	;# 
  3348  1F43                     	;# 
  3349  1F44                     	;# 
  3350  1F45                     	;# 
  3351  1F46                     	;# 
  3352  1F47                     	;# 
  3353  1F48                     	;# 
  3354  1F49                     	;# 
  3355  1F4A                     	;# 
  3356  1F4E                     	;# 
  3357  1F4F                     	;# 
  3358  1F50                     	;# 
  3359  1F51                     	;# 
  3360  1F52                     	;# 
  3361  1F53                     	;# 
  3362  1F54                     	;# 
  3363  1F55                     	;# 
  3364  1F65                     	;# 
  3365  1F66                     	;# 
  3366  1F67                     	;# 
  3367  1F68                     	;# 
  3368  1F69                     	;# 
  3369  1F6A                     	;# 
  3370  1F6B                     	;# 
  3371  1FE4                     	;# 
  3372  1FE5                     	;# 
  3373  1FE6                     	;# 
  3374  1FE7                     	;# 
  3375  1FE8                     	;# 
  3376  1FE8                     	;# 
  3377  1FE9                     	;# 
  3378  1FEA                     	;# 
  3379  1FEB                     	;# 
  3380  1FED                     	;# 
  3381  1FEE                     	;# 
  3382  1FEF                     	;# 
  3383  0000                     	;# 
  3384  0001                     	;# 
  3385  0002                     	;# 
  3386  0003                     	;# 
  3387  0004                     	;# 
  3388  0005                     	;# 
  3389  0006                     	;# 
  3390  0007                     	;# 
  3391  0008                     	;# 
  3392  0009                     	;# 
  3393  000A                     	;# 
  3394  000B                     	;# 
  3395  000C                     	;# 
  3396  000D                     	;# 
  3397  000E                     	;# 
  3398  0010                     	;# 
  3399  0012                     	;# 
  3400  0013                     	;# 
  3401  0014                     	;# 
  3402  0016                     	;# 
  3403  0018                     	;# 
  3404  0019                     	;# 
  3405  001A                     	;# 
  3406  001C                     	;# 
  3407  008C                     	;# 
  3408  008C                     	;# 
  3409  008D                     	;# 
  3410  008E                     	;# 
  3411  008E                     	;# 
  3412  008F                     	;# 
  3413  0090                     	;# 
  3414  0090                     	;# 
  3415  0091                     	;# 
  3416  0092                     	;# 
  3417  0092                     	;# 
  3418  0093                     	;# 
  3419  0094                     	;# 
  3420  0094                     	;# 
  3421  0095                     	;# 
  3422  0096                     	;# 
  3423  0096                     	;# 
  3424  0097                     	;# 
  3425  0098                     	;# 
  3426  0099                     	;# 
  3427  009A                     	;# 
  3428  009B                     	;# 
  3429  009B                     	;# 
  3430  009C                     	;# 
  3431  009D                     	;# 
  3432  009D                     	;# 
  3433  009E                     	;# 
  3434  009F                     	;# 
  3435  010C                     	;# 
  3436  010C                     	;# 
  3437  010D                     	;# 
  3438  010E                     	;# 
  3439  010F                     	;# 
  3440  010F                     	;# 
  3441  0110                     	;# 
  3442  0111                     	;# 
  3443  0112                     	;# 
  3444  0113                     	;# 
  3445  0114                     	;# 
  3446  0115                     	;# 
  3447  0116                     	;# 
  3448  0117                     	;# 
  3449  0118                     	;# 
  3450  0119                     	;# 
  3451  0119                     	;# 
  3452  0119                     	;# 
  3453  011A                     	;# 
  3454  011A                     	;# 
  3455  011A                     	;# 
  3456  011B                     	;# 
  3457  011B                     	;# 
  3458  011B                     	;# 
  3459  011B                     	;# 
  3460  011B                     	;# 
  3461  011C                     	;# 
  3462  011C                     	;# 
  3463  011C                     	;# 
  3464  011D                     	;# 
  3465  011D                     	;# 
  3466  011D                     	;# 
  3467  011E                     	;# 
  3468  011E                     	;# 
  3469  011E                     	;# 
  3470  011F                     	;# 
  3471  011F                     	;# 
  3472  011F                     	;# 
  3473  011F                     	;# 
  3474  011F                     	;# 
  3475  018C                     	;# 
  3476  018D                     	;# 
  3477  018E                     	;# 
  3478  018F                     	;# 
  3479  0190                     	;# 
  3480  0191                     	;# 
  3481  0192                     	;# 
  3482  0196                     	;# 
  3483  0197                     	;# 
  3484  0198                     	;# 
  3485  0199                     	;# 
  3486  019A                     	;# 
  3487  019B                     	;# 
  3488  019C                     	;# 
  3489  020C                     	;# 
  3490  020D                     	;# 
  3491  020E                     	;# 
  3492  020E                     	;# 
  3493  020F                     	;# 
  3494  020F                     	;# 
  3495  0210                     	;# 
  3496  0210                     	;# 
  3497  0211                     	;# 
  3498  0211                     	;# 
  3499  0212                     	;# 
  3500  0213                     	;# 
  3501  0214                     	;# 
  3502  0214                     	;# 
  3503  0215                     	;# 
  3504  0215                     	;# 
  3505  0216                     	;# 
  3506  0216                     	;# 
  3507  0217                     	;# 
  3508  0217                     	;# 
  3509  0218                     	;# 
  3510  0219                     	;# 
  3511  021A                     	;# 
  3512  021A                     	;# 
  3513  021B                     	;# 
  3514  021B                     	;# 
  3515  021C                     	;# 
  3516  021C                     	;# 
  3517  021D                     	;# 
  3518  021D                     	;# 
  3519  021E                     	;# 
  3520  021F                     	;# 
  3521  028C                     	;# 
  3522  028C                     	;# 
  3523  028D                     	;# 
  3524  028D                     	;# 
  3525  028E                     	;# 
  3526  028F                     	;# 
  3527  0290                     	;# 
  3528  0291                     	;# 
  3529  0292                     	;# 
  3530  0292                     	;# 
  3531  0293                     	;# 
  3532  0293                     	;# 
  3533  0294                     	;# 
  3534  0295                     	;# 
  3535  0296                     	;# 
  3536  0297                     	;# 
  3537  0298                     	;# 
  3538  0298                     	;# 
  3539  0299                     	;# 
  3540  0299                     	;# 
  3541  029A                     	;# 
  3542  029B                     	;# 
  3543  029C                     	;# 
  3544  029D                     	;# 
  3545  029F                     	;# 
  3546  030C                     	;# 
  3547  030C                     	;# 
  3548  030D                     	;# 
  3549  030E                     	;# 
  3550  030F                     	;# 
  3551  0310                     	;# 
  3552  0310                     	;# 
  3553  0311                     	;# 
  3554  0312                     	;# 
  3555  0313                     	;# 
  3556  0314                     	;# 
  3557  0314                     	;# 
  3558  0315                     	;# 
  3559  0316                     	;# 
  3560  0317                     	;# 
  3561  0318                     	;# 
  3562  0318                     	;# 
  3563  0319                     	;# 
  3564  031A                     	;# 
  3565  031B                     	;# 
  3566  031C                     	;# 
  3567  031C                     	;# 
  3568  031D                     	;# 
  3569  031E                     	;# 
  3570  031F                     	;# 
  3571  038C                     	;# 
  3572  038C                     	;# 
  3573  038D                     	;# 
  3574  038E                     	;# 
  3575  0390                     	;# 
  3576  0390                     	;# 
  3577  0391                     	;# 
  3578  0392                     	;# 
  3579  048C                     	;# 
  3580  048C                     	;# 
  3581  048D                     	;# 
  3582  048E                     	;# 
  3583  048F                     	;# 
  3584  048F                     	;# 
  3585  0490                     	;# 
  3586  0491                     	;# 
  3587  0492                     	;# 
  3588  0492                     	;# 
  3589  0493                     	;# 
  3590  0494                     	;# 
  3591  0495                     	;# 
  3592  0495                     	;# 
  3593  0496                     	;# 
  3594  0497                     	;# 
  3595  0498                     	;# 
  3596  0499                     	;# 
  3597  049A                     	;# 
  3598  049B                     	;# 
  3599  049C                     	;# 
  3600  049D                     	;# 
  3601  050C                     	;# 
  3602  050C                     	;# 
  3603  050D                     	;# 
  3604  050E                     	;# 
  3605  050F                     	;# 
  3606  050F                     	;# 
  3607  0510                     	;# 
  3608  0511                     	;# 
  3609  0512                     	;# 
  3610  0512                     	;# 
  3611  0513                     	;# 
  3612  0514                     	;# 
  3613  0515                     	;# 
  3614  0515                     	;# 
  3615  0516                     	;# 
  3616  0517                     	;# 
  3617  0518                     	;# 
  3618  0519                     	;# 
  3619  051A                     	;# 
  3620  051B                     	;# 
  3621  051C                     	;# 
  3622  051D                     	;# 
  3623  058C                     	;# 
  3624  058C                     	;# 
  3625  058D                     	;# 
  3626  058E                     	;# 
  3627  058F                     	;# 
  3628  058F                     	;# 
  3629  0590                     	;# 
  3630  0591                     	;# 
  3631  0592                     	;# 
  3632  0593                     	;# 
  3633  059C                     	;# 
  3634  059C                     	;# 
  3635  059D                     	;# 
  3636  059D                     	;# 
  3637  059E                     	;# 
  3638  059F                     	;# 
  3639  060C                     	;# 
  3640  060C                     	;# 
  3641  060D                     	;# 
  3642  060D                     	;# 
  3643  060E                     	;# 
  3644  060F                     	;# 
  3645  0610                     	;# 
  3646  0611                     	;# 
  3647  0612                     	;# 
  3648  0613                     	;# 
  3649  0614                     	;# 
  3650  0616                     	;# 
  3651  0616                     	;# 
  3652  0617                     	;# 
  3653  0617                     	;# 
  3654  0618                     	;# 
  3655  0619                     	;# 
  3656  061A                     	;# 
  3657  061B                     	;# 
  3658  061C                     	;# 
  3659  061D                     	;# 
  3660  061E                     	;# 
  3661  068C                     	;# 
  3662  068D                     	;# 
  3663  068E                     	;# 
  3664  068F                     	;# 
  3665  0690                     	;# 
  3666  0691                     	;# 
  3667  0692                     	;# 
  3668  0693                     	;# 
  3669  0694                     	;# 
  3670  070C                     	;# 
  3671  070D                     	;# 
  3672  070E                     	;# 
  3673  070F                     	;# 
  3674  0710                     	;# 
  3675  0711                     	;# 
  3676  0712                     	;# 
  3677  0713                     	;# 
  3678  0714                     	;# 
  3679  0716                     	;# 
  3680  0717                     	;# 
  3681  0718                     	;# 
  3682  0719                     	;# 
  3683  071A                     	;# 
  3684  071B                     	;# 
  3685  071C                     	;# 
  3686  071D                     	;# 
  3687  071E                     	;# 
  3688  0796                     	;# 
  3689  0797                     	;# 
  3690  0798                     	;# 
  3691  0799                     	;# 
  3692  079A                     	;# 
  3693  079B                     	;# 
  3694  079C                     	;# 
  3695  079D                     	;# 
  3696  080C                     	;# 
  3697  080D                     	;# 
  3698  080E                     	;# 
  3699  080F                     	;# 
  3700  0810                     	;# 
  3701  0811                     	;# 
  3702  0812                     	;# 
  3703  0813                     	;# 
  3704  0814                     	;# 
  3705  081A                     	;# 
  3706  081A                     	;# 
  3707  081B                     	;# 
  3708  081C                     	;# 
  3709  081C                     	;# 
  3710  081D                     	;# 
  3711  081E                     	;# 
  3712  081F                     	;# 
  3713  088C                     	;# 
  3714  088D                     	;# 
  3715  088E                     	;# 
  3716  088F                     	;# 
  3717  0890                     	;# 
  3718  0891                     	;# 
  3719  0892                     	;# 
  3720  0893                     	;# 
  3721  0895                     	;# 
  3722  0896                     	;# 
  3723  0897                     	;# 
  3724  0898                     	;# 
  3725  0899                     	;# 
  3726  089A                     	;# 
  3727  089B                     	;# 
  3728  090C                     	;# 
  3729  090E                     	;# 
  3730  090F                     	;# 
  3731  091F                     	;# 
  3732  098F                     	;# 
  3733  098F                     	;# 
  3734  0990                     	;# 
  3735  0991                     	;# 
  3736  0992                     	;# 
  3737  0993                     	;# 
  3738  0994                     	;# 
  3739  0995                     	;# 
  3740  0996                     	;# 
  3741  0997                     	;# 
  3742  0A19                     	;# 
  3743  0A19                     	;# 
  3744  0A1A                     	;# 
  3745  0A1A                     	;# 
  3746  0A1B                     	;# 
  3747  0A1B                     	;# 
  3748  0A1B                     	;# 
  3749  0A1C                     	;# 
  3750  0A1C                     	;# 
  3751  0A1D                     	;# 
  3752  0A1D                     	;# 
  3753  0A1E                     	;# 
  3754  0A1E                     	;# 
  3755  0A1F                     	;# 
  3756  0A1F                     	;# 
  3757  0A1F                     	;# 
  3758  1E0F                     	;# 
  3759  1E10                     	;# 
  3760  1E11                     	;# 
  3761  1E12                     	;# 
  3762  1E13                     	;# 
  3763  1E14                     	;# 
  3764  1E15                     	;# 
  3765  1E16                     	;# 
  3766  1E17                     	;# 
  3767  1E18                     	;# 
  3768  1E19                     	;# 
  3769  1E1A                     	;# 
  3770  1E1B                     	;# 
  3771  1E1C                     	;# 
  3772  1E1D                     	;# 
  3773  1E1E                     	;# 
  3774  1E1F                     	;# 
  3775  1E20                     	;# 
  3776  1E21                     	;# 
  3777  1E22                     	;# 
  3778  1E23                     	;# 
  3779  1E24                     	;# 
  3780  1E25                     	;# 
  3781  1E26                     	;# 
  3782  1E27                     	;# 
  3783  1E28                     	;# 
  3784  1E29                     	;# 
  3785  1E2A                     	;# 
  3786  1E2B                     	;# 
  3787  1E2C                     	;# 
  3788  1E2D                     	;# 
  3789  1E2E                     	;# 
  3790  1E2F                     	;# 
  3791  1E30                     	;# 
  3792  1E31                     	;# 
  3793  1E32                     	;# 
  3794  1E33                     	;# 
  3795  1E34                     	;# 
  3796  1E35                     	;# 
  3797  1E36                     	;# 
  3798  1E37                     	;# 
  3799  1E8F                     	;# 
  3800  1E90                     	;# 
  3801  1E91                     	;# 
  3802  1E92                     	;# 
  3803  1E93                     	;# 
  3804  1E94                     	;# 
  3805  1E95                     	;# 
  3806  1E96                     	;# 
  3807  1E97                     	;# 
  3808  1E9C                     	;# 
  3809  1E9D                     	;# 
  3810  1E9E                     	;# 
  3811  1EA1                     	;# 
  3812  1EA2                     	;# 
  3813  1EA3                     	;# 
  3814  1EA4                     	;# 
  3815  1EA5                     	;# 
  3816  1EA9                     	;# 
  3817  1EAA                     	;# 
  3818  1EAB                     	;# 
  3819  1EAC                     	;# 
  3820  1EB1                     	;# 
  3821  1EB2                     	;# 
  3822  1EB3                     	;# 
  3823  1EB8                     	;# 
  3824  1EB9                     	;# 
  3825  1EBA                     	;# 
  3826  1EBB                     	;# 
  3827  1EBC                     	;# 
  3828  1EBD                     	;# 
  3829  1EBE                     	;# 
  3830  1EC3                     	;# 
  3831  1EC5                     	;# 
  3832  1EC6                     	;# 
  3833  1EC7                     	;# 
  3834  1EC8                     	;# 
  3835  1EC9                     	;# 
  3836  1ECA                     	;# 
  3837  1ECB                     	;# 
  3838  1ECB                     	;# 
  3839  1ECB                     	;# 
  3840  1ECC                     	;# 
  3841  1ECC                     	;# 
  3842  1ECC                     	;# 
  3843  1ECD                     	;# 
  3844  1ECD                     	;# 
  3845  1ECE                     	;# 
  3846  1ECE                     	;# 
  3847  1F10                     	;# 
  3848  1F11                     	;# 
  3849  1F12                     	;# 
  3850  1F13                     	;# 
  3851  1F14                     	;# 
  3852  1F15                     	;# 
  3853  1F16                     	;# 
  3854  1F17                     	;# 
  3855  1F18                     	;# 
  3856  1F19                     	;# 
  3857  1F1A                     	;# 
  3858  1F1B                     	;# 
  3859  1F1C                     	;# 
  3860  1F1D                     	;# 
  3861  1F1E                     	;# 
  3862  1F1F                     	;# 
  3863  1F20                     	;# 
  3864  1F21                     	;# 
  3865  1F22                     	;# 
  3866  1F23                     	;# 
  3867  1F24                     	;# 
  3868  1F25                     	;# 
  3869  1F26                     	;# 
  3870  1F27                     	;# 
  3871  1F38                     	;# 
  3872  1F39                     	;# 
  3873  1F3A                     	;# 
  3874  1F3B                     	;# 
  3875  1F3C                     	;# 
  3876  1F3D                     	;# 
  3877  1F3E                     	;# 
  3878  1F3F                     	;# 
  3879  1F43                     	;# 
  3880  1F44                     	;# 
  3881  1F45                     	;# 
  3882  1F46                     	;# 
  3883  1F47                     	;# 
  3884  1F48                     	;# 
  3885  1F49                     	;# 
  3886  1F4A                     	;# 
  3887  1F4E                     	;# 
  3888  1F4F                     	;# 
  3889  1F50                     	;# 
  3890  1F51                     	;# 
  3891  1F52                     	;# 
  3892  1F53                     	;# 
  3893  1F54                     	;# 
  3894  1F55                     	;# 
  3895  1F65                     	;# 
  3896  1F66                     	;# 
  3897  1F67                     	;# 
  3898  1F68                     	;# 
  3899  1F69                     	;# 
  3900  1F6A                     	;# 
  3901  1F6B                     	;# 
  3902  1FE4                     	;# 
  3903  1FE5                     	;# 
  3904  1FE6                     	;# 
  3905  1FE7                     	;# 
  3906  1FE8                     	;# 
  3907  1FE8                     	;# 
  3908  1FE9                     	;# 
  3909  1FEA                     	;# 
  3910  1FEB                     	;# 
  3911  1FED                     	;# 
  3912  1FEE                     	;# 
  3913  1FEF                     	;# 
  3914  0000                     	;# 
  3915  0001                     	;# 
  3916  0002                     	;# 
  3917  0003                     	;# 
  3918  0004                     	;# 
  3919  0005                     	;# 
  3920  0006                     	;# 
  3921  0007                     	;# 
  3922  0008                     	;# 
  3923  0009                     	;# 
  3924  000A                     	;# 
  3925  000B                     	;# 
  3926  000C                     	;# 
  3927  000D                     	;# 
  3928  000E                     	;# 
  3929  0010                     	;# 
  3930  0012                     	;# 
  3931  0013                     	;# 
  3932  0014                     	;# 
  3933  0016                     	;# 
  3934  0018                     	;# 
  3935  0019                     	;# 
  3936  001A                     	;# 
  3937  001C                     	;# 
  3938  008C                     	;# 
  3939  008C                     	;# 
  3940  008D                     	;# 
  3941  008E                     	;# 
  3942  008E                     	;# 
  3943  008F                     	;# 
  3944  0090                     	;# 
  3945  0090                     	;# 
  3946  0091                     	;# 
  3947  0092                     	;# 
  3948  0092                     	;# 
  3949  0093                     	;# 
  3950  0094                     	;# 
  3951  0094                     	;# 
  3952  0095                     	;# 
  3953  0096                     	;# 
  3954  0096                     	;# 
  3955  0097                     	;# 
  3956  0098                     	;# 
  3957  0099                     	;# 
  3958  009A                     	;# 
  3959  009B                     	;# 
  3960  009B                     	;# 
  3961  009C                     	;# 
  3962  009D                     	;# 
  3963  009D                     	;# 
  3964  009E                     	;# 
  3965  009F                     	;# 
  3966  010C                     	;# 
  3967  010C                     	;# 
  3968  010D                     	;# 
  3969  010E                     	;# 
  3970  010F                     	;# 
  3971  010F                     	;# 
  3972  0110                     	;# 
  3973  0111                     	;# 
  3974  0112                     	;# 
  3975  0113                     	;# 
  3976  0114                     	;# 
  3977  0115                     	;# 
  3978  0116                     	;# 
  3979  0117                     	;# 
  3980  0118                     	;# 
  3981  0119                     	;# 
  3982  0119                     	;# 
  3983  0119                     	;# 
  3984  011A                     	;# 
  3985  011A                     	;# 
  3986  011A                     	;# 
  3987  011B                     	;# 
  3988  011B                     	;# 
  3989  011B                     	;# 
  3990  011B                     	;# 
  3991  011B                     	;# 
  3992  011C                     	;# 
  3993  011C                     	;# 
  3994  011C                     	;# 
  3995  011D                     	;# 
  3996  011D                     	;# 
  3997  011D                     	;# 
  3998  011E                     	;# 
  3999  011E                     	;# 
  4000  011E                     	;# 
  4001  011F                     	;# 
  4002  011F                     	;# 
  4003  011F                     	;# 
  4004  011F                     	;# 
  4005  011F                     	;# 
  4006  018C                     	;# 
  4007  018D                     	;# 
  4008  018E                     	;# 
  4009  018F                     	;# 
  4010  0190                     	;# 
  4011  0191                     	;# 
  4012  0192                     	;# 
  4013  0196                     	;# 
  4014  0197                     	;# 
  4015  0198                     	;# 
  4016  0199                     	;# 
  4017  019A                     	;# 
  4018  019B                     	;# 
  4019  019C                     	;# 
  4020  020C                     	;# 
  4021  020D                     	;# 
  4022  020E                     	;# 
  4023  020E                     	;# 
  4024  020F                     	;# 
  4025  020F                     	;# 
  4026  0210                     	;# 
  4027  0210                     	;# 
  4028  0211                     	;# 
  4029  0211                     	;# 
  4030  0212                     	;# 
  4031  0213                     	;# 
  4032  0214                     	;# 
  4033  0214                     	;# 
  4034  0215                     	;# 
  4035  0215                     	;# 
  4036  0216                     	;# 
  4037  0216                     	;# 
  4038  0217                     	;# 
  4039  0217                     	;# 
  4040  0218                     	;# 
  4041  0219                     	;# 
  4042  021A                     	;# 
  4043  021A                     	;# 
  4044  021B                     	;# 
  4045  021B                     	;# 
  4046  021C                     	;# 
  4047  021C                     	;# 
  4048  021D                     	;# 
  4049  021D                     	;# 
  4050  021E                     	;# 
  4051  021F                     	;# 
  4052  028C                     	;# 
  4053  028C                     	;# 
  4054  028D                     	;# 
  4055  028D                     	;# 
  4056  028E                     	;# 
  4057  028F                     	;# 
  4058  0290                     	;# 
  4059  0291                     	;# 
  4060  0292                     	;# 
  4061  0292                     	;# 
  4062  0293                     	;# 
  4063  0293                     	;# 
  4064  0294                     	;# 
  4065  0295                     	;# 
  4066  0296                     	;# 
  4067  0297                     	;# 
  4068  0298                     	;# 
  4069  0298                     	;# 
  4070  0299                     	;# 
  4071  0299                     	;# 
  4072  029A                     	;# 
  4073  029B                     	;# 
  4074  029C                     	;# 
  4075  029D                     	;# 
  4076  029F                     	;# 
  4077  030C                     	;# 
  4078  030C                     	;# 
  4079  030D                     	;# 
  4080  030E                     	;# 
  4081  030F                     	;# 
  4082  0310                     	;# 
  4083  0310                     	;# 
  4084  0311                     	;# 
  4085  0312                     	;# 
  4086  0313                     	;# 
  4087  0314                     	;# 
  4088  0314                     	;# 
  4089  0315                     	;# 
  4090  0316                     	;# 
  4091  0317                     	;# 
  4092  0318                     	;# 
  4093  0318                     	;# 
  4094  0319                     	;# 
  4095  031A                     	;# 
  4096  031B                     	;# 
  4097  031C                     	;# 
  4098  031C                     	;# 
  4099  031D                     	;# 
  4100  031E                     	;# 
  4101  031F                     	;# 
  4102  038C                     	;# 
  4103  038C                     	;# 
  4104  038D                     	;# 
  4105  038E                     	;# 
  4106  0390                     	;# 
  4107  0390                     	;# 
  4108  0391                     	;# 
  4109  0392                     	;# 
  4110  048C                     	;# 
  4111  048C                     	;# 
  4112  048D                     	;# 
  4113  048E                     	;# 
  4114  048F                     	;# 
  4115  048F                     	;# 
  4116  0490                     	;# 
  4117  0491                     	;# 
  4118  0492                     	;# 
  4119  0492                     	;# 
  4120  0493                     	;# 
  4121  0494                     	;# 
  4122  0495                     	;# 
  4123  0495                     	;# 
  4124  0496                     	;# 
  4125  0497                     	;# 
  4126  0498                     	;# 
  4127  0499                     	;# 
  4128  049A                     	;# 
  4129  049B                     	;# 
  4130  049C                     	;# 
  4131  049D                     	;# 
  4132  050C                     	;# 
  4133  050C                     	;# 
  4134  050D                     	;# 
  4135  050E                     	;# 
  4136  050F                     	;# 
  4137  050F                     	;# 
  4138  0510                     	;# 
  4139  0511                     	;# 
  4140  0512                     	;# 
  4141  0512                     	;# 
  4142  0513                     	;# 
  4143  0514                     	;# 
  4144  0515                     	;# 
  4145  0515                     	;# 
  4146  0516                     	;# 
  4147  0517                     	;# 
  4148  0518                     	;# 
  4149  0519                     	;# 
  4150  051A                     	;# 
  4151  051B                     	;# 
  4152  051C                     	;# 
  4153  051D                     	;# 
  4154  058C                     	;# 
  4155  058C                     	;# 
  4156  058D                     	;# 
  4157  058E                     	;# 
  4158  058F                     	;# 
  4159  058F                     	;# 
  4160  0590                     	;# 
  4161  0591                     	;# 
  4162  0592                     	;# 
  4163  0593                     	;# 
  4164  059C                     	;# 
  4165  059C                     	;# 
  4166  059D                     	;# 
  4167  059D                     	;# 
  4168  059E                     	;# 
  4169  059F                     	;# 
  4170  060C                     	;# 
  4171  060C                     	;# 
  4172  060D                     	;# 
  4173  060D                     	;# 
  4174  060E                     	;# 
  4175  060F                     	;# 
  4176  0610                     	;# 
  4177  0611                     	;# 
  4178  0612                     	;# 
  4179  0613                     	;# 
  4180  0614                     	;# 
  4181  0616                     	;# 
  4182  0616                     	;# 
  4183  0617                     	;# 
  4184  0617                     	;# 
  4185  0618                     	;# 
  4186  0619                     	;# 
  4187  061A                     	;# 
  4188  061B                     	;# 
  4189  061C                     	;# 
  4190  061D                     	;# 
  4191  061E                     	;# 
  4192  068C                     	;# 
  4193  068D                     	;# 
  4194  068E                     	;# 
  4195  068F                     	;# 
  4196  0690                     	;# 
  4197  0691                     	;# 
  4198  0692                     	;# 
  4199  0693                     	;# 
  4200  0694                     	;# 
  4201  070C                     	;# 
  4202  070D                     	;# 
  4203  070E                     	;# 
  4204  070F                     	;# 
  4205  0710                     	;# 
  4206  0711                     	;# 
  4207  0712                     	;# 
  4208  0713                     	;# 
  4209  0714                     	;# 
  4210  0716                     	;# 
  4211  0717                     	;# 
  4212  0718                     	;# 
  4213  0719                     	;# 
  4214  071A                     	;# 
  4215  071B                     	;# 
  4216  071C                     	;# 
  4217  071D                     	;# 
  4218  071E                     	;# 
  4219  0796                     	;# 
  4220  0797                     	;# 
  4221  0798                     	;# 
  4222  0799                     	;# 
  4223  079A                     	;# 
  4224  079B                     	;# 
  4225  079C                     	;# 
  4226  079D                     	;# 
  4227  080C                     	;# 
  4228  080D                     	;# 
  4229  080E                     	;# 
  4230  080F                     	;# 
  4231  0810                     	;# 
  4232  0811                     	;# 
  4233  0812                     	;# 
  4234  0813                     	;# 
  4235  0814                     	;# 
  4236  081A                     	;# 
  4237  081A                     	;# 
  4238  081B                     	;# 
  4239  081C                     	;# 
  4240  081C                     	;# 
  4241  081D                     	;# 
  4242  081E                     	;# 
  4243  081F                     	;# 
  4244  088C                     	;# 
  4245  088D                     	;# 
  4246  088E                     	;# 
  4247  088F                     	;# 
  4248  0890                     	;# 
  4249  0891                     	;# 
  4250  0892                     	;# 
  4251  0893                     	;# 
  4252  0895                     	;# 
  4253  0896                     	;# 
  4254  0897                     	;# 
  4255  0898                     	;# 
  4256  0899                     	;# 
  4257  089A                     	;# 
  4258  089B                     	;# 
  4259  090C                     	;# 
  4260  090E                     	;# 
  4261  090F                     	;# 
  4262  091F                     	;# 
  4263  098F                     	;# 
  4264  098F                     	;# 
  4265  0990                     	;# 
  4266  0991                     	;# 
  4267  0992                     	;# 
  4268  0993                     	;# 
  4269  0994                     	;# 
  4270  0995                     	;# 
  4271  0996                     	;# 
  4272  0997                     	;# 
  4273  0A19                     	;# 
  4274  0A19                     	;# 
  4275  0A1A                     	;# 
  4276  0A1A                     	;# 
  4277  0A1B                     	;# 
  4278  0A1B                     	;# 
  4279  0A1B                     	;# 
  4280  0A1C                     	;# 
  4281  0A1C                     	;# 
  4282  0A1D                     	;# 
  4283  0A1D                     	;# 
  4284  0A1E                     	;# 
  4285  0A1E                     	;# 
  4286  0A1F                     	;# 
  4287  0A1F                     	;# 
  4288  0A1F                     	;# 
  4289  1E0F                     	;# 
  4290  1E10                     	;# 
  4291  1E11                     	;# 
  4292  1E12                     	;# 
  4293  1E13                     	;# 
  4294  1E14                     	;# 
  4295  1E15                     	;# 
  4296  1E16                     	;# 
  4297  1E17                     	;# 
  4298  1E18                     	;# 
  4299  1E19                     	;# 
  4300  1E1A                     	;# 
  4301  1E1B                     	;# 
  4302  1E1C                     	;# 
  4303  1E1D                     	;# 
  4304  1E1E                     	;# 
  4305  1E1F                     	;# 
  4306  1E20                     	;# 
  4307  1E21                     	;# 
  4308  1E22                     	;# 
  4309  1E23                     	;# 
  4310  1E24                     	;# 
  4311  1E25                     	;# 
  4312  1E26                     	;# 
  4313  1E27                     	;# 
  4314  1E28                     	;# 
  4315  1E29                     	;# 
  4316  1E2A                     	;# 
  4317  1E2B                     	;# 
  4318  1E2C                     	;# 
  4319  1E2D                     	;# 
  4320  1E2E                     	;# 
  4321  1E2F                     	;# 
  4322  1E30                     	;# 
  4323  1E31                     	;# 
  4324  1E32                     	;# 
  4325  1E33                     	;# 
  4326  1E34                     	;# 
  4327  1E35                     	;# 
  4328  1E36                     	;# 
  4329  1E37                     	;# 
  4330  1E8F                     	;# 
  4331  1E90                     	;# 
  4332  1E91                     	;# 
  4333  1E92                     	;# 
  4334  1E93                     	;# 
  4335  1E94                     	;# 
  4336  1E95                     	;# 
  4337  1E96                     	;# 
  4338  1E97                     	;# 
  4339  1E9C                     	;# 
  4340  1E9D                     	;# 
  4341  1E9E                     	;# 
  4342  1EA1                     	;# 
  4343  1EA2                     	;# 
  4344  1EA3                     	;# 
  4345  1EA4                     	;# 
  4346  1EA5                     	;# 
  4347  1EA9                     	;# 
  4348  1EAA                     	;# 
  4349  1EAB                     	;# 
  4350  1EAC                     	;# 
  4351  1EB1                     	;# 
  4352  1EB2                     	;# 
  4353  1EB3                     	;# 
  4354  1EB8                     	;# 
  4355  1EB9                     	;# 
  4356  1EBA                     	;# 
  4357  1EBB                     	;# 
  4358  1EBC                     	;# 
  4359  1EBD                     	;# 
  4360  1EBE                     	;# 
  4361  1EC3                     	;# 
  4362  1EC5                     	;# 
  4363  1EC6                     	;# 
  4364  1EC7                     	;# 
  4365  1EC8                     	;# 
  4366  1EC9                     	;# 
  4367  1ECA                     	;# 
  4368  1ECB                     	;# 
  4369  1ECB                     	;# 
  4370  1ECB                     	;# 
  4371  1ECC                     	;# 
  4372  1ECC                     	;# 
  4373  1ECC                     	;# 
  4374  1ECD                     	;# 
  4375  1ECD                     	;# 
  4376  1ECE                     	;# 
  4377  1ECE                     	;# 
  4378  1F10                     	;# 
  4379  1F11                     	;# 
  4380  1F12                     	;# 
  4381  1F13                     	;# 
  4382  1F14                     	;# 
  4383  1F15                     	;# 
  4384  1F16                     	;# 
  4385  1F17                     	;# 
  4386  1F18                     	;# 
  4387  1F19                     	;# 
  4388  1F1A                     	;# 
  4389  1F1B                     	;# 
  4390  1F1C                     	;# 
  4391  1F1D                     	;# 
  4392  1F1E                     	;# 
  4393  1F1F                     	;# 
  4394  1F20                     	;# 
  4395  1F21                     	;# 
  4396  1F22                     	;# 
  4397  1F23                     	;# 
  4398  1F24                     	;# 
  4399  1F25                     	;# 
  4400  1F26                     	;# 
  4401  1F27                     	;# 
  4402  1F38                     	;# 
  4403  1F39                     	;# 
  4404  1F3A                     	;# 
  4405  1F3B                     	;# 
  4406  1F3C                     	;# 
  4407  1F3D                     	;# 
  4408  1F3E                     	;# 
  4409  1F3F                     	;# 
  4410  1F43                     	;# 
  4411  1F44                     	;# 
  4412  1F45                     	;# 
  4413  1F46                     	;# 
  4414  1F47                     	;# 
  4415  1F48                     	;# 
  4416  1F49                     	;# 
  4417  1F4A                     	;# 
  4418  1F4E                     	;# 
  4419  1F4F                     	;# 
  4420  1F50                     	;# 
  4421  1F51                     	;# 
  4422  1F52                     	;# 
  4423  1F53                     	;# 
  4424  1F54                     	;# 
  4425  1F55                     	;# 
  4426  1F65                     	;# 
  4427  1F66                     	;# 
  4428  1F67                     	;# 
  4429  1F68                     	;# 
  4430  1F69                     	;# 
  4431  1F6A                     	;# 
  4432  1F6B                     	;# 
  4433  1FE4                     	;# 
  4434  1FE5                     	;# 
  4435  1FE6                     	;# 
  4436  1FE7                     	;# 
  4437  1FE8                     	;# 
  4438  1FE8                     	;# 
  4439  1FE9                     	;# 
  4440  1FEA                     	;# 
  4441  1FEB                     	;# 
  4442  1FED                     	;# 
  4443  1FEE                     	;# 
  4444  1FEF                     	;# 
  4445  0000                     	;# 
  4446  0001                     	;# 
  4447  0002                     	;# 
  4448  0003                     	;# 
  4449  0004                     	;# 
  4450  0005                     	;# 
  4451  0006                     	;# 
  4452  0007                     	;# 
  4453  0008                     	;# 
  4454  0009                     	;# 
  4455  000A                     	;# 
  4456  000B                     	;# 
  4457  000C                     	;# 
  4458  000D                     	;# 
  4459  000E                     	;# 
  4460  0010                     	;# 
  4461  0012                     	;# 
  4462  0013                     	;# 
  4463  0014                     	;# 
  4464  0016                     	;# 
  4465  0018                     	;# 
  4466  0019                     	;# 
  4467  001A                     	;# 
  4468  001C                     	;# 
  4469  008C                     	;# 
  4470  008C                     	;# 
  4471  008D                     	;# 
  4472  008E                     	;# 
  4473  008E                     	;# 
  4474  008F                     	;# 
  4475  0090                     	;# 
  4476  0090                     	;# 
  4477  0091                     	;# 
  4478  0092                     	;# 
  4479  0092                     	;# 
  4480  0093                     	;# 
  4481  0094                     	;# 
  4482  0094                     	;# 
  4483  0095                     	;# 
  4484  0096                     	;# 
  4485  0096                     	;# 
  4486  0097                     	;# 
  4487  0098                     	;# 
  4488  0099                     	;# 
  4489  009A                     	;# 
  4490  009B                     	;# 
  4491  009B                     	;# 
  4492  009C                     	;# 
  4493  009D                     	;# 
  4494  009D                     	;# 
  4495  009E                     	;# 
  4496  009F                     	;# 
  4497  010C                     	;# 
  4498  010C                     	;# 
  4499  010D                     	;# 
  4500  010E                     	;# 
  4501  010F                     	;# 
  4502  010F                     	;# 
  4503  0110                     	;# 
  4504  0111                     	;# 
  4505  0112                     	;# 
  4506  0113                     	;# 
  4507  0114                     	;# 
  4508  0115                     	;# 
  4509  0116                     	;# 
  4510  0117                     	;# 
  4511  0118                     	;# 
  4512  0119                     	;# 
  4513  0119                     	;# 
  4514  0119                     	;# 
  4515  011A                     	;# 
  4516  011A                     	;# 
  4517  011A                     	;# 
  4518  011B                     	;# 
  4519  011B                     	;# 
  4520  011B                     	;# 
  4521  011B                     	;# 
  4522  011B                     	;# 
  4523  011C                     	;# 
  4524  011C                     	;# 
  4525  011C                     	;# 
  4526  011D                     	;# 
  4527  011D                     	;# 
  4528  011D                     	;# 
  4529  011E                     	;# 
  4530  011E                     	;# 
  4531  011E                     	;# 
  4532  011F                     	;# 
  4533  011F                     	;# 
  4534  011F                     	;# 
  4535  011F                     	;# 
  4536  011F                     	;# 
  4537  018C                     	;# 
  4538  018D                     	;# 
  4539  018E                     	;# 
  4540  018F                     	;# 
  4541  0190                     	;# 
  4542  0191                     	;# 
  4543  0192                     	;# 
  4544  0196                     	;# 
  4545  0197                     	;# 
  4546  0198                     	;# 
  4547  0199                     	;# 
  4548  019A                     	;# 
  4549  019B                     	;# 
  4550  019C                     	;# 
  4551  020C                     	;# 
  4552  020D                     	;# 
  4553  020E                     	;# 
  4554  020E                     	;# 
  4555  020F                     	;# 
  4556  020F                     	;# 
  4557  0210                     	;# 
  4558  0210                     	;# 
  4559  0211                     	;# 
  4560  0211                     	;# 
  4561  0212                     	;# 
  4562  0213                     	;# 
  4563  0214                     	;# 
  4564  0214                     	;# 
  4565  0215                     	;# 
  4566  0215                     	;# 
  4567  0216                     	;# 
  4568  0216                     	;# 
  4569  0217                     	;# 
  4570  0217                     	;# 
  4571  0218                     	;# 
  4572  0219                     	;# 
  4573  021A                     	;# 
  4574  021A                     	;# 
  4575  021B                     	;# 
  4576  021B                     	;# 
  4577  021C                     	;# 
  4578  021C                     	;# 
  4579  021D                     	;# 
  4580  021D                     	;# 
  4581  021E                     	;# 
  4582  021F                     	;# 
  4583  028C                     	;# 
  4584  028C                     	;# 
  4585  028D                     	;# 
  4586  028D                     	;# 
  4587  028E                     	;# 
  4588  028F                     	;# 
  4589  0290                     	;# 
  4590  0291                     	;# 
  4591  0292                     	;# 
  4592  0292                     	;# 
  4593  0293                     	;# 
  4594  0293                     	;# 
  4595  0294                     	;# 
  4596  0295                     	;# 
  4597  0296                     	;# 
  4598  0297                     	;# 
  4599  0298                     	;# 
  4600  0298                     	;# 
  4601  0299                     	;# 
  4602  0299                     	;# 
  4603  029A                     	;# 
  4604  029B                     	;# 
  4605  029C                     	;# 
  4606  029D                     	;# 
  4607  029F                     	;# 
  4608  030C                     	;# 
  4609  030C                     	;# 
  4610  030D                     	;# 
  4611  030E                     	;# 
  4612  030F                     	;# 
  4613  0310                     	;# 
  4614  0310                     	;# 
  4615  0311                     	;# 
  4616  0312                     	;# 
  4617  0313                     	;# 
  4618  0314                     	;# 
  4619  0314                     	;# 
  4620  0315                     	;# 
  4621  0316                     	;# 
  4622  0317                     	;# 
  4623  0318                     	;# 
  4624  0318                     	;# 
  4625  0319                     	;# 
  4626  031A                     	;# 
  4627  031B                     	;# 
  4628  031C                     	;# 
  4629  031C                     	;# 
  4630  031D                     	;# 
  4631  031E                     	;# 
  4632  031F                     	;# 
  4633  038C                     	;# 
  4634  038C                     	;# 
  4635  038D                     	;# 
  4636  038E                     	;# 
  4637  0390                     	;# 
  4638  0390                     	;# 
  4639  0391                     	;# 
  4640  0392                     	;# 
  4641  048C                     	;# 
  4642  048C                     	;# 
  4643  048D                     	;# 
  4644  048E                     	;# 
  4645  048F                     	;# 
  4646  048F                     	;# 
  4647  0490                     	;# 
  4648  0491                     	;# 
  4649  0492                     	;# 
  4650  0492                     	;# 
  4651  0493                     	;# 
  4652  0494                     	;# 
  4653  0495                     	;# 
  4654  0495                     	;# 
  4655  0496                     	;# 
  4656  0497                     	;# 
  4657  0498                     	;# 
  4658  0499                     	;# 
  4659  049A                     	;# 
  4660  049B                     	;# 
  4661  049C                     	;# 
  4662  049D                     	;# 
  4663  050C                     	;# 
  4664  050C                     	;# 
  4665  050D                     	;# 
  4666  050E                     	;# 
  4667  050F                     	;# 
  4668  050F                     	;# 
  4669  0510                     	;# 
  4670  0511                     	;# 
  4671  0512                     	;# 
  4672  0512                     	;# 
  4673  0513                     	;# 
  4674  0514                     	;# 
  4675  0515                     	;# 
  4676  0515                     	;# 
  4677  0516                     	;# 
  4678  0517                     	;# 
  4679  0518                     	;# 
  4680  0519                     	;# 
  4681  051A                     	;# 
  4682  051B                     	;# 
  4683  051C                     	;# 
  4684  051D                     	;# 
  4685  058C                     	;# 
  4686  058C                     	;# 
  4687  058D                     	;# 
  4688  058E                     	;# 
  4689  058F                     	;# 
  4690  058F                     	;# 
  4691  0590                     	;# 
  4692  0591                     	;# 
  4693  0592                     	;# 
  4694  0593                     	;# 
  4695  059C                     	;# 
  4696  059C                     	;# 
  4697  059D                     	;# 
  4698  059D                     	;# 
  4699  059E                     	;# 
  4700  059F                     	;# 
  4701  060C                     	;# 
  4702  060C                     	;# 
  4703  060D                     	;# 
  4704  060D                     	;# 
  4705  060E                     	;# 
  4706  060F                     	;# 
  4707  0610                     	;# 
  4708  0611                     	;# 
  4709  0612                     	;# 
  4710  0613                     	;# 
  4711  0614                     	;# 
  4712  0616                     	;# 
  4713  0616                     	;# 
  4714  0617                     	;# 
  4715  0617                     	;# 
  4716  0618                     	;# 
  4717  0619                     	;# 
  4718  061A                     	;# 
  4719  061B                     	;# 
  4720  061C                     	;# 
  4721  061D                     	;# 
  4722  061E                     	;# 
  4723  068C                     	;# 
  4724  068D                     	;# 
  4725  068E                     	;# 
  4726  068F                     	;# 
  4727  0690                     	;# 
  4728  0691                     	;# 
  4729  0692                     	;# 
  4730  0693                     	;# 
  4731  0694                     	;# 
  4732  070C                     	;# 
  4733  070D                     	;# 
  4734  070E                     	;# 
  4735  070F                     	;# 
  4736  0710                     	;# 
  4737  0711                     	;# 
  4738  0712                     	;# 
  4739  0713                     	;# 
  4740  0714                     	;# 
  4741  0716                     	;# 
  4742  0717                     	;# 
  4743  0718                     	;# 
  4744  0719                     	;# 
  4745  071A                     	;# 
  4746  071B                     	;# 
  4747  071C                     	;# 
  4748  071D                     	;# 
  4749  071E                     	;# 
  4750  0796                     	;# 
  4751  0797                     	;# 
  4752  0798                     	;# 
  4753  0799                     	;# 
  4754  079A                     	;# 
  4755  079B                     	;# 
  4756  079C                     	;# 
  4757  079D                     	;# 
  4758  080C                     	;# 
  4759  080D                     	;# 
  4760  080E                     	;# 
  4761  080F                     	;# 
  4762  0810                     	;# 
  4763  0811                     	;# 
  4764  0812                     	;# 
  4765  0813                     	;# 
  4766  0814                     	;# 
  4767  081A                     	;# 
  4768  081A                     	;# 
  4769  081B                     	;# 
  4770  081C                     	;# 
  4771  081C                     	;# 
  4772  081D                     	;# 
  4773  081E                     	;# 
  4774  081F                     	;# 
  4775  088C                     	;# 
  4776  088D                     	;# 
  4777  088E                     	;# 
  4778  088F                     	;# 
  4779  0890                     	;# 
  4780  0891                     	;# 
  4781  0892                     	;# 
  4782  0893                     	;# 
  4783  0895                     	;# 
  4784  0896                     	;# 
  4785  0897                     	;# 
  4786  0898                     	;# 
  4787  0899                     	;# 
  4788  089A                     	;# 
  4789  089B                     	;# 
  4790  090C                     	;# 
  4791  090E                     	;# 
  4792  090F                     	;# 
  4793  091F                     	;# 
  4794  098F                     	;# 
  4795  098F                     	;# 
  4796  0990                     	;# 
  4797  0991                     	;# 
  4798  0992                     	;# 
  4799  0993                     	;# 
  4800  0994                     	;# 
  4801  0995                     	;# 
  4802  0996                     	;# 
  4803  0997                     	;# 
  4804  0A19                     	;# 
  4805  0A19                     	;# 
  4806  0A1A                     	;# 
  4807  0A1A                     	;# 
  4808  0A1B                     	;# 
  4809  0A1B                     	;# 
  4810  0A1B                     	;# 
  4811  0A1C                     	;# 
  4812  0A1C                     	;# 
  4813  0A1D                     	;# 
  4814  0A1D                     	;# 
  4815  0A1E                     	;# 
  4816  0A1E                     	;# 
  4817  0A1F                     	;# 
  4818  0A1F                     	;# 
  4819  0A1F                     	;# 
  4820  1E0F                     	;# 
  4821  1E10                     	;# 
  4822  1E11                     	;# 
  4823  1E12                     	;# 
  4824  1E13                     	;# 
  4825  1E14                     	;# 
  4826  1E15                     	;# 
  4827  1E16                     	;# 
  4828  1E17                     	;# 
  4829  1E18                     	;# 
  4830  1E19                     	;# 
  4831  1E1A                     	;# 
  4832  1E1B                     	;# 
  4833  1E1C                     	;# 
  4834  1E1D                     	;# 
  4835  1E1E                     	;# 
  4836  1E1F                     	;# 
  4837  1E20                     	;# 
  4838  1E21                     	;# 
  4839  1E22                     	;# 
  4840  1E23                     	;# 
  4841  1E24                     	;# 
  4842  1E25                     	;# 
  4843  1E26                     	;# 
  4844  1E27                     	;# 
  4845  1E28                     	;# 
  4846  1E29                     	;# 
  4847  1E2A                     	;# 
  4848  1E2B                     	;# 
  4849  1E2C                     	;# 
  4850  1E2D                     	;# 
  4851  1E2E                     	;# 
  4852  1E2F                     	;# 
  4853  1E30                     	;# 
  4854  1E31                     	;# 
  4855  1E32                     	;# 
  4856  1E33                     	;# 
  4857  1E34                     	;# 
  4858  1E35                     	;# 
  4859  1E36                     	;# 
  4860  1E37                     	;# 
  4861  1E8F                     	;# 
  4862  1E90                     	;# 
  4863  1E91                     	;# 
  4864  1E92                     	;# 
  4865  1E93                     	;# 
  4866  1E94                     	;# 
  4867  1E95                     	;# 
  4868  1E96                     	;# 
  4869  1E97                     	;# 
  4870  1E9C                     	;# 
  4871  1E9D                     	;# 
  4872  1E9E                     	;# 
  4873  1EA1                     	;# 
  4874  1EA2                     	;# 
  4875  1EA3                     	;# 
  4876  1EA4                     	;# 
  4877  1EA5                     	;# 
  4878  1EA9                     	;# 
  4879  1EAA                     	;# 
  4880  1EAB                     	;# 
  4881  1EAC                     	;# 
  4882  1EB1                     	;# 
  4883  1EB2                     	;# 
  4884  1EB3                     	;# 
  4885  1EB8                     	;# 
  4886  1EB9                     	;# 
  4887  1EBA                     	;# 
  4888  1EBB                     	;# 
  4889  1EBC                     	;# 
  4890  1EBD                     	;# 
  4891  1EBE                     	;# 
  4892  1EC3                     	;# 
  4893  1EC5                     	;# 
  4894  1EC6                     	;# 
  4895  1EC7                     	;# 
  4896  1EC8                     	;# 
  4897  1EC9                     	;# 
  4898  1ECA                     	;# 
  4899  1ECB                     	;# 
  4900  1ECB                     	;# 
  4901  1ECB                     	;# 
  4902  1ECC                     	;# 
  4903  1ECC                     	;# 
  4904  1ECC                     	;# 
  4905  1ECD                     	;# 
  4906  1ECD                     	;# 
  4907  1ECE                     	;# 
  4908  1ECE                     	;# 
  4909  1F10                     	;# 
  4910  1F11                     	;# 
  4911  1F12                     	;# 
  4912  1F13                     	;# 
  4913  1F14                     	;# 
  4914  1F15                     	;# 
  4915  1F16                     	;# 
  4916  1F17                     	;# 
  4917  1F18                     	;# 
  4918  1F19                     	;# 
  4919  1F1A                     	;# 
  4920  1F1B                     	;# 
  4921  1F1C                     	;# 
  4922  1F1D                     	;# 
  4923  1F1E                     	;# 
  4924  1F1F                     	;# 
  4925  1F20                     	;# 
  4926  1F21                     	;# 
  4927  1F22                     	;# 
  4928  1F23                     	;# 
  4929  1F24                     	;# 
  4930  1F25                     	;# 
  4931  1F26                     	;# 
  4932  1F27                     	;# 
  4933  1F38                     	;# 
  4934  1F39                     	;# 
  4935  1F3A                     	;# 
  4936  1F3B                     	;# 
  4937  1F3C                     	;# 
  4938  1F3D                     	;# 
  4939  1F3E                     	;# 
  4940  1F3F                     	;# 
  4941  1F43                     	;# 
  4942  1F44                     	;# 
  4943  1F45                     	;# 
  4944  1F46                     	;# 
  4945  1F47                     	;# 
  4946  1F48                     	;# 
  4947  1F49                     	;# 
  4948  1F4A                     	;# 
  4949  1F4E                     	;# 
  4950  1F4F                     	;# 
  4951  1F50                     	;# 
  4952  1F51                     	;# 
  4953  1F52                     	;# 
  4954  1F53                     	;# 
  4955  1F54                     	;# 
  4956  1F55                     	;# 
  4957  1F65                     	;# 
  4958  1F66                     	;# 
  4959  1F67                     	;# 
  4960  1F68                     	;# 
  4961  1F69                     	;# 
  4962  1F6A                     	;# 
  4963  1F6B                     	;# 
  4964  1FE4                     	;# 
  4965  1FE5                     	;# 
  4966  1FE6                     	;# 
  4967  1FE7                     	;# 
  4968  1FE8                     	;# 
  4969  1FE8                     	;# 
  4970  1FE9                     	;# 
  4971  1FEA                     	;# 
  4972  1FEB                     	;# 
  4973  1FED                     	;# 
  4974  1FEE                     	;# 
  4975  1FEF                     	;# 
  4976  0000                     	;# 
  4977  0001                     	;# 
  4978  0002                     	;# 
  4979  0003                     	;# 
  4980  0004                     	;# 
  4981  0005                     	;# 
  4982  0006                     	;# 
  4983  0007                     	;# 
  4984  0008                     	;# 
  4985  0009                     	;# 
  4986  000A                     	;# 
  4987  000B                     	;# 
  4988  000C                     	;# 
  4989  000D                     	;# 
  4990  000E                     	;# 
  4991  0010                     	;# 
  4992  0012                     	;# 
  4993  0013                     	;# 
  4994  0014                     	;# 
  4995  0016                     	;# 
  4996  0018                     	;# 
  4997  0019                     	;# 
  4998  001A                     	;# 
  4999  001C                     	;# 
  5000  008C                     	;# 
  5001  008C                     	;# 
  5002  008D                     	;# 
  5003  008E                     	;# 
  5004  008E                     	;# 
  5005  008F                     	;# 
  5006  0090                     	;# 
  5007  0090                     	;# 
  5008  0091                     	;# 
  5009  0092                     	;# 
  5010  0092                     	;# 
  5011  0093                     	;# 
  5012  0094                     	;# 
  5013  0094                     	;# 
  5014  0095                     	;# 
  5015  0096                     	;# 
  5016  0096                     	;# 
  5017  0097                     	;# 
  5018  0098                     	;# 
  5019  0099                     	;# 
  5020  009A                     	;# 
  5021  009B                     	;# 
  5022  009B                     	;# 
  5023  009C                     	;# 
  5024  009D                     	;# 
  5025  009D                     	;# 
  5026  009E                     	;# 
  5027  009F                     	;# 
  5028  010C                     	;# 
  5029  010C                     	;# 
  5030  010D                     	;# 
  5031  010E                     	;# 
  5032  010F                     	;# 
  5033  010F                     	;# 
  5034  0110                     	;# 
  5035  0111                     	;# 
  5036  0112                     	;# 
  5037  0113                     	;# 
  5038  0114                     	;# 
  5039  0115                     	;# 
  5040  0116                     	;# 
  5041  0117                     	;# 
  5042  0118                     	;# 
  5043  0119                     	;# 
  5044  0119                     	;# 
  5045  0119                     	;# 
  5046  011A                     	;# 
  5047  011A                     	;# 
  5048  011A                     	;# 
  5049  011B                     	;# 
  5050  011B                     	;# 
  5051  011B                     	;# 
  5052  011B                     	;# 
  5053  011B                     	;# 
  5054  011C                     	;# 
  5055  011C                     	;# 
  5056  011C                     	;# 
  5057  011D                     	;# 
  5058  011D                     	;# 
  5059  011D                     	;# 
  5060  011E                     	;# 
  5061  011E                     	;# 
  5062  011E                     	;# 
  5063  011F                     	;# 
  5064  011F                     	;# 
  5065  011F                     	;# 
  5066  011F                     	;# 
  5067  011F                     	;# 
  5068  018C                     	;# 
  5069  018D                     	;# 
  5070  018E                     	;# 
  5071  018F                     	;# 
  5072  0190                     	;# 
  5073  0191                     	;# 
  5074  0192                     	;# 
  5075  0196                     	;# 
  5076  0197                     	;# 
  5077  0198                     	;# 
  5078  0199                     	;# 
  5079  019A                     	;# 
  5080  019B                     	;# 
  5081  019C                     	;# 
  5082  020C                     	;# 
  5083  020D                     	;# 
  5084  020E                     	;# 
  5085  020E                     	;# 
  5086  020F                     	;# 
  5087  020F                     	;# 
  5088  0210                     	;# 
  5089  0210                     	;# 
  5090  0211                     	;# 
  5091  0211                     	;# 
  5092  0212                     	;# 
  5093  0213                     	;# 
  5094  0214                     	;# 
  5095  0214                     	;# 
  5096  0215                     	;# 
  5097  0215                     	;# 
  5098  0216                     	;# 
  5099  0216                     	;# 
  5100  0217                     	;# 
  5101  0217                     	;# 
  5102  0218                     	;# 
  5103  0219                     	;# 
  5104  021A                     	;# 
  5105  021A                     	;# 
  5106  021B                     	;# 
  5107  021B                     	;# 
  5108  021C                     	;# 
  5109  021C                     	;# 
  5110  021D                     	;# 
  5111  021D                     	;# 
  5112  021E                     	;# 
  5113  021F                     	;# 
  5114  028C                     	;# 
  5115  028C                     	;# 
  5116  028D                     	;# 
  5117  028D                     	;# 
  5118  028E                     	;# 
  5119  028F                     	;# 
  5120  0290                     	;# 
  5121  0291                     	;# 
  5122  0292                     	;# 
  5123  0292                     	;# 
  5124  0293                     	;# 
  5125  0293                     	;# 
  5126  0294                     	;# 
  5127  0295                     	;# 
  5128  0296                     	;# 
  5129  0297                     	;# 
  5130  0298                     	;# 
  5131  0298                     	;# 
  5132  0299                     	;# 
  5133  0299                     	;# 
  5134  029A                     	;# 
  5135  029B                     	;# 
  5136  029C                     	;# 
  5137  029D                     	;# 
  5138  029F                     	;# 
  5139  030C                     	;# 
  5140  030C                     	;# 
  5141  030D                     	;# 
  5142  030E                     	;# 
  5143  030F                     	;# 
  5144  0310                     	;# 
  5145  0310                     	;# 
  5146  0311                     	;# 
  5147  0312                     	;# 
  5148  0313                     	;# 
  5149  0314                     	;# 
  5150  0314                     	;# 
  5151  0315                     	;# 
  5152  0316                     	;# 
  5153  0317                     	;# 
  5154  0318                     	;# 
  5155  0318                     	;# 
  5156  0319                     	;# 
  5157  031A                     	;# 
  5158  031B                     	;# 
  5159  031C                     	;# 
  5160  031C                     	;# 
  5161  031D                     	;# 
  5162  031E                     	;# 
  5163  031F                     	;# 
  5164  038C                     	;# 
  5165  038C                     	;# 
  5166  038D                     	;# 
  5167  038E                     	;# 
  5168  0390                     	;# 
  5169  0390                     	;# 
  5170  0391                     	;# 
  5171  0392                     	;# 
  5172  048C                     	;# 
  5173  048C                     	;# 
  5174  048D                     	;# 
  5175  048E                     	;# 
  5176  048F                     	;# 
  5177  048F                     	;# 
  5178  0490                     	;# 
  5179  0491                     	;# 
  5180  0492                     	;# 
  5181  0492                     	;# 
  5182  0493                     	;# 
  5183  0494                     	;# 
  5184  0495                     	;# 
  5185  0495                     	;# 
  5186  0496                     	;# 
  5187  0497                     	;# 
  5188  0498                     	;# 
  5189  0499                     	;# 
  5190  049A                     	;# 
  5191  049B                     	;# 
  5192  049C                     	;# 
  5193  049D                     	;# 
  5194  050C                     	;# 
  5195  050C                     	;# 
  5196  050D                     	;# 
  5197  050E                     	;# 
  5198  050F                     	;# 
  5199  050F                     	;# 
  5200  0510                     	;# 
  5201  0511                     	;# 
  5202  0512                     	;# 
  5203  0512                     	;# 
  5204  0513                     	;# 
  5205  0514                     	;# 
  5206  0515                     	;# 
  5207  0515                     	;# 
  5208  0516                     	;# 
  5209  0517                     	;# 
  5210  0518                     	;# 
  5211  0519                     	;# 
  5212  051A                     	;# 
  5213  051B                     	;# 
  5214  051C                     	;# 
  5215  051D                     	;# 
  5216  058C                     	;# 
  5217  058C                     	;# 
  5218  058D                     	;# 
  5219  058E                     	;# 
  5220  058F                     	;# 
  5221  058F                     	;# 
  5222  0590                     	;# 
  5223  0591                     	;# 
  5224  0592                     	;# 
  5225  0593                     	;# 
  5226  059C                     	;# 
  5227  059C                     	;# 
  5228  059D                     	;# 
  5229  059D                     	;# 
  5230  059E                     	;# 
  5231  059F                     	;# 
  5232  060C                     	;# 
  5233  060C                     	;# 
  5234  060D                     	;# 
  5235  060D                     	;# 
  5236  060E                     	;# 
  5237  060F                     	;# 
  5238  0610                     	;# 
  5239  0611                     	;# 
  5240  0612                     	;# 
  5241  0613                     	;# 
  5242  0614                     	;# 
  5243  0616                     	;# 
  5244  0616                     	;# 
  5245  0617                     	;# 
  5246  0617                     	;# 
  5247  0618                     	;# 
  5248  0619                     	;# 
  5249  061A                     	;# 
  5250  061B                     	;# 
  5251  061C                     	;# 
  5252  061D                     	;# 
  5253  061E                     	;# 
  5254  068C                     	;# 
  5255  068D                     	;# 
  5256  068E                     	;# 
  5257  068F                     	;# 
  5258  0690                     	;# 
  5259  0691                     	;# 
  5260  0692                     	;# 
  5261  0693                     	;# 
  5262  0694                     	;# 
  5263  070C                     	;# 
  5264  070D                     	;# 
  5265  070E                     	;# 
  5266  070F                     	;# 
  5267  0710                     	;# 
  5268  0711                     	;# 
  5269  0712                     	;# 
  5270  0713                     	;# 
  5271  0714                     	;# 
  5272  0716                     	;# 
  5273  0717                     	;# 
  5274  0718                     	;# 
  5275  0719                     	;# 
  5276  071A                     	;# 
  5277  071B                     	;# 
  5278  071C                     	;# 
  5279  071D                     	;# 
  5280  071E                     	;# 
  5281  0796                     	;# 
  5282  0797                     	;# 
  5283  0798                     	;# 
  5284  0799                     	;# 
  5285  079A                     	;# 
  5286  079B                     	;# 
  5287  079C                     	;# 
  5288  079D                     	;# 
  5289  080C                     	;# 
  5290  080D                     	;# 
  5291  080E                     	;# 
  5292  080F                     	;# 
  5293  0810                     	;# 
  5294  0811                     	;# 
  5295  0812                     	;# 
  5296  0813                     	;# 
  5297  0814                     	;# 
  5298  081A                     	;# 
  5299  081A                     	;# 
  5300  081B                     	;# 
  5301  081C                     	;# 
  5302  081C                     	;# 
  5303  081D                     	;# 
  5304  081E                     	;# 
  5305  081F                     	;# 
  5306  088C                     	;# 
  5307  088D                     	;# 
  5308  088E                     	;# 
  5309  088F                     	;# 
  5310  0890                     	;# 
  5311  0891                     	;# 
  5312  0892                     	;# 
  5313  0893                     	;# 
  5314  0895                     	;# 
  5315  0896                     	;# 
  5316  0897                     	;# 
  5317  0898                     	;# 
  5318  0899                     	;# 
  5319  089A                     	;# 
  5320  089B                     	;# 
  5321  090C                     	;# 
  5322  090E                     	;# 
  5323  090F                     	;# 
  5324  091F                     	;# 
  5325  098F                     	;# 
  5326  098F                     	;# 
  5327  0990                     	;# 
  5328  0991                     	;# 
  5329  0992                     	;# 
  5330  0993                     	;# 
  5331  0994                     	;# 
  5332  0995                     	;# 
  5333  0996                     	;# 
  5334  0997                     	;# 
  5335  0A19                     	;# 
  5336  0A19                     	;# 
  5337  0A1A                     	;# 
  5338  0A1A                     	;# 
  5339  0A1B                     	;# 
  5340  0A1B                     	;# 
  5341  0A1B                     	;# 
  5342  0A1C                     	;# 
  5343  0A1C                     	;# 
  5344  0A1D                     	;# 
  5345  0A1D                     	;# 
  5346  0A1E                     	;# 
  5347  0A1E                     	;# 
  5348  0A1F                     	;# 
  5349  0A1F                     	;# 
  5350  0A1F                     	;# 
  5351  1E0F                     	;# 
  5352  1E10                     	;# 
  5353  1E11                     	;# 
  5354  1E12                     	;# 
  5355  1E13                     	;# 
  5356  1E14                     	;# 
  5357  1E15                     	;# 
  5358  1E16                     	;# 
  5359  1E17                     	;# 
  5360  1E18                     	;# 
  5361  1E19                     	;# 
  5362  1E1A                     	;# 
  5363  1E1B                     	;# 
  5364  1E1C                     	;# 
  5365  1E1D                     	;# 
  5366  1E1E                     	;# 
  5367  1E1F                     	;# 
  5368  1E20                     	;# 
  5369  1E21                     	;# 
  5370  1E22                     	;# 
  5371  1E23                     	;# 
  5372  1E24                     	;# 
  5373  1E25                     	;# 
  5374  1E26                     	;# 
  5375  1E27                     	;# 
  5376  1E28                     	;# 
  5377  1E29                     	;# 
  5378  1E2A                     	;# 
  5379  1E2B                     	;# 
  5380  1E2C                     	;# 
  5381  1E2D                     	;# 
  5382  1E2E                     	;# 
  5383  1E2F                     	;# 
  5384  1E30                     	;# 
  5385  1E31                     	;# 
  5386  1E32                     	;# 
  5387  1E33                     	;# 
  5388  1E34                     	;# 
  5389  1E35                     	;# 
  5390  1E36                     	;# 
  5391  1E37                     	;# 
  5392  1E8F                     	;# 
  5393  1E90                     	;# 
  5394  1E91                     	;# 
  5395  1E92                     	;# 
  5396  1E93                     	;# 
  5397  1E94                     	;# 
  5398  1E95                     	;# 
  5399  1E96                     	;# 
  5400  1E97                     	;# 
  5401  1E9C                     	;# 
  5402  1E9D                     	;# 
  5403  1E9E                     	;# 
  5404  1EA1                     	;# 
  5405  1EA2                     	;# 
  5406  1EA3                     	;# 
  5407  1EA4                     	;# 
  5408  1EA5                     	;# 
  5409  1EA9                     	;# 
  5410  1EAA                     	;# 
  5411  1EAB                     	;# 
  5412  1EAC                     	;# 
  5413  1EB1                     	;# 
  5414  1EB2                     	;# 
  5415  1EB3                     	;# 
  5416  1EB8                     	;# 
  5417  1EB9                     	;# 
  5418  1EBA                     	;# 
  5419  1EBB                     	;# 
  5420  1EBC                     	;# 
  5421  1EBD                     	;# 
  5422  1EBE                     	;# 
  5423  1EC3                     	;# 
  5424  1EC5                     	;# 
  5425  1EC6                     	;# 
  5426  1EC7                     	;# 
  5427  1EC8                     	;# 
  5428  1EC9                     	;# 
  5429  1ECA                     	;# 
  5430  1ECB                     	;# 
  5431  1ECB                     	;# 
  5432  1ECB                     	;# 
  5433  1ECC                     	;# 
  5434  1ECC                     	;# 
  5435  1ECC                     	;# 
  5436  1ECD                     	;# 
  5437  1ECD                     	;# 
  5438  1ECE                     	;# 
  5439  1ECE                     	;# 
  5440  1F10                     	;# 
  5441  1F11                     	;# 
  5442  1F12                     	;# 
  5443  1F13                     	;# 
  5444  1F14                     	;# 
  5445  1F15                     	;# 
  5446  1F16                     	;# 
  5447  1F17                     	;# 
  5448  1F18                     	;# 
  5449  1F19                     	;# 
  5450  1F1A                     	;# 
  5451  1F1B                     	;# 
  5452  1F1C                     	;# 
  5453  1F1D                     	;# 
  5454  1F1E                     	;# 
  5455  1F1F                     	;# 
  5456  1F20                     	;# 
  5457  1F21                     	;# 
  5458  1F22                     	;# 
  5459  1F23                     	;# 
  5460  1F24                     	;# 
  5461  1F25                     	;# 
  5462  1F26                     	;# 
  5463  1F27                     	;# 
  5464  1F38                     	;# 
  5465  1F39                     	;# 
  5466  1F3A                     	;# 
  5467  1F3B                     	;# 
  5468  1F3C                     	;# 
  5469  1F3D                     	;# 
  5470  1F3E                     	;# 
  5471  1F3F                     	;# 
  5472  1F43                     	;# 
  5473  1F44                     	;# 
  5474  1F45                     	;# 
  5475  1F46                     	;# 
  5476  1F47                     	;# 
  5477  1F48                     	;# 
  5478  1F49                     	;# 
  5479  1F4A                     	;# 
  5480  1F4E                     	;# 
  5481  1F4F                     	;# 
  5482  1F50                     	;# 
  5483  1F51                     	;# 
  5484  1F52                     	;# 
  5485  1F53                     	;# 
  5486  1F54                     	;# 
  5487  1F55                     	;# 
  5488  1F65                     	;# 
  5489  1F66                     	;# 
  5490  1F67                     	;# 
  5491  1F68                     	;# 
  5492  1F69                     	;# 
  5493  1F6A                     	;# 
  5494  1F6B                     	;# 
  5495  1FE4                     	;# 
  5496  1FE5                     	;# 
  5497  1FE6                     	;# 
  5498  1FE7                     	;# 
  5499  1FE8                     	;# 
  5500  1FE8                     	;# 
  5501  1FE9                     	;# 
  5502  1FEA                     	;# 
  5503  1FEB                     	;# 
  5504  1FED                     	;# 
  5505  1FEE                     	;# 
  5506  1FEF                     	;# 
  5507  0000                     	;# 
  5508  0001                     	;# 
  5509  0002                     	;# 
  5510  0003                     	;# 
  5511  0004                     	;# 
  5512  0005                     	;# 
  5513  0006                     	;# 
  5514  0007                     	;# 
  5515  0008                     	;# 
  5516  0009                     	;# 
  5517  000A                     	;# 
  5518  000B                     	;# 
  5519  000C                     	;# 
  5520  000D                     	;# 
  5521  000E                     	;# 
  5522  0010                     	;# 
  5523  0012                     	;# 
  5524  0013                     	;# 
  5525  0014                     	;# 
  5526  0016                     	;# 
  5527  0018                     	;# 
  5528  0019                     	;# 
  5529  001A                     	;# 
  5530  001C                     	;# 
  5531  008C                     	;# 
  5532  008C                     	;# 
  5533  008D                     	;# 
  5534  008E                     	;# 
  5535  008E                     	;# 
  5536  008F                     	;# 
  5537  0090                     	;# 
  5538  0090                     	;# 
  5539  0091                     	;# 
  5540  0092                     	;# 
  5541  0092                     	;# 
  5542  0093                     	;# 
  5543  0094                     	;# 
  5544  0094                     	;# 
  5545  0095                     	;# 
  5546  0096                     	;# 
  5547  0096                     	;# 
  5548  0097                     	;# 
  5549  0098                     	;# 
  5550  0099                     	;# 
  5551  009A                     	;# 
  5552  009B                     	;# 
  5553  009B                     	;# 
  5554  009C                     	;# 
  5555  009D                     	;# 
  5556  009D                     	;# 
  5557  009E                     	;# 
  5558  009F                     	;# 
  5559  010C                     	;# 
  5560  010C                     	;# 
  5561  010D                     	;# 
  5562  010E                     	;# 
  5563  010F                     	;# 
  5564  010F                     	;# 
  5565  0110                     	;# 
  5566  0111                     	;# 
  5567  0112                     	;# 
  5568  0113                     	;# 
  5569  0114                     	;# 
  5570  0115                     	;# 
  5571  0116                     	;# 
  5572  0117                     	;# 
  5573  0118                     	;# 
  5574  0119                     	;# 
  5575  0119                     	;# 
  5576  0119                     	;# 
  5577  011A                     	;# 
  5578  011A                     	;# 
  5579  011A                     	;# 
  5580  011B                     	;# 
  5581  011B                     	;# 
  5582  011B                     	;# 
  5583  011B                     	;# 
  5584  011B                     	;# 
  5585  011C                     	;# 
  5586  011C                     	;# 
  5587  011C                     	;# 
  5588  011D                     	;# 
  5589  011D                     	;# 
  5590  011D                     	;# 
  5591  011E                     	;# 
  5592  011E                     	;# 
  5593  011E                     	;# 
  5594  011F                     	;# 
  5595  011F                     	;# 
  5596  011F                     	;# 
  5597  011F                     	;# 
  5598  011F                     	;# 
  5599  018C                     	;# 
  5600  018D                     	;# 
  5601  018E                     	;# 
  5602  018F                     	;# 
  5603  0190                     	;# 
  5604  0191                     	;# 
  5605  0192                     	;# 
  5606  0196                     	;# 
  5607  0197                     	;# 
  5608  0198                     	;# 
  5609  0199                     	;# 
  5610  019A                     	;# 
  5611  019B                     	;# 
  5612  019C                     	;# 
  5613  020C                     	;# 
  5614  020D                     	;# 
  5615  020E                     	;# 
  5616  020E                     	;# 
  5617  020F                     	;# 
  5618  020F                     	;# 
  5619  0210                     	;# 
  5620  0210                     	;# 
  5621  0211                     	;# 
  5622  0211                     	;# 
  5623  0212                     	;# 
  5624  0213                     	;# 
  5625  0214                     	;# 
  5626  0214                     	;# 
  5627  0215                     	;# 
  5628  0215                     	;# 
  5629  0216                     	;# 
  5630  0216                     	;# 
  5631  0217                     	;# 
  5632  0217                     	;# 
  5633  0218                     	;# 
  5634  0219                     	;# 
  5635  021A                     	;# 
  5636  021A                     	;# 
  5637  021B                     	;# 
  5638  021B                     	;# 
  5639  021C                     	;# 
  5640  021C                     	;# 
  5641  021D                     	;# 
  5642  021D                     	;# 
  5643  021E                     	;# 
  5644  021F                     	;# 
  5645  028C                     	;# 
  5646  028C                     	;# 
  5647  028D                     	;# 
  5648  028D                     	;# 
  5649  028E                     	;# 
  5650  028F                     	;# 
  5651  0290                     	;# 
  5652  0291                     	;# 
  5653  0292                     	;# 
  5654  0292                     	;# 
  5655  0293                     	;# 
  5656  0293                     	;# 
  5657  0294                     	;# 
  5658  0295                     	;# 
  5659  0296                     	;# 
  5660  0297                     	;# 
  5661  0298                     	;# 
  5662  0298                     	;# 
  5663  0299                     	;# 
  5664  0299                     	;# 
  5665  029A                     	;# 
  5666  029B                     	;# 
  5667  029C                     	;# 
  5668  029D                     	;# 
  5669  029F                     	;# 
  5670  030C                     	;# 
  5671  030C                     	;# 
  5672  030D                     	;# 
  5673  030E                     	;# 
  5674  030F                     	;# 
  5675  0310                     	;# 
  5676  0310                     	;# 
  5677  0311                     	;# 
  5678  0312                     	;# 
  5679  0313                     	;# 
  5680  0314                     	;# 
  5681  0314                     	;# 
  5682  0315                     	;# 
  5683  0316                     	;# 
  5684  0317                     	;# 
  5685  0318                     	;# 
  5686  0318                     	;# 
  5687  0319                     	;# 
  5688  031A                     	;# 
  5689  031B                     	;# 
  5690  031C                     	;# 
  5691  031C                     	;# 
  5692  031D                     	;# 
  5693  031E                     	;# 
  5694  031F                     	;# 
  5695  038C                     	;# 
  5696  038C                     	;# 
  5697  038D                     	;# 
  5698  038E                     	;# 
  5699  0390                     	;# 
  5700  0390                     	;# 
  5701  0391                     	;# 
  5702  0392                     	;# 
  5703  048C                     	;# 
  5704  048C                     	;# 
  5705  048D                     	;# 
  5706  048E                     	;# 
  5707  048F                     	;# 
  5708  048F                     	;# 
  5709  0490                     	;# 
  5710  0491                     	;# 
  5711  0492                     	;# 
  5712  0492                     	;# 
  5713  0493                     	;# 
  5714  0494                     	;# 
  5715  0495                     	;# 
  5716  0495                     	;# 
  5717  0496                     	;# 
  5718  0497                     	;# 
  5719  0498                     	;# 
  5720  0499                     	;# 
  5721  049A                     	;# 
  5722  049B                     	;# 
  5723  049C                     	;# 
  5724  049D                     	;# 
  5725  050C                     	;# 
  5726  050C                     	;# 
  5727  050D                     	;# 
  5728  050E                     	;# 
  5729  050F                     	;# 
  5730  050F                     	;# 
  5731  0510                     	;# 
  5732  0511                     	;# 
  5733  0512                     	;# 
  5734  0512                     	;# 
  5735  0513                     	;# 
  5736  0514                     	;# 
  5737  0515                     	;# 
  5738  0515                     	;# 
  5739  0516                     	;# 
  5740  0517                     	;# 
  5741  0518                     	;# 
  5742  0519                     	;# 
  5743  051A                     	;# 
  5744  051B                     	;# 
  5745  051C                     	;# 
  5746  051D                     	;# 
  5747  058C                     	;# 
  5748  058C                     	;# 
  5749  058D                     	;# 
  5750  058E                     	;# 
  5751  058F                     	;# 
  5752  058F                     	;# 
  5753  0590                     	;# 
  5754  0591                     	;# 
  5755  0592                     	;# 
  5756  0593                     	;# 
  5757  059C                     	;# 
  5758  059C                     	;# 
  5759  059D                     	;# 
  5760  059D                     	;# 
  5761  059E                     	;# 
  5762  059F                     	;# 
  5763  060C                     	;# 
  5764  060C                     	;# 
  5765  060D                     	;# 
  5766  060D                     	;# 
  5767  060E                     	;# 
  5768  060F                     	;# 
  5769  0610                     	;# 
  5770  0611                     	;# 
  5771  0612                     	;# 
  5772  0613                     	;# 
  5773  0614                     	;# 
  5774  0616                     	;# 
  5775  0616                     	;# 
  5776  0617                     	;# 
  5777  0617                     	;# 
  5778  0618                     	;# 
  5779  0619                     	;# 
  5780  061A                     	;# 
  5781  061B                     	;# 
  5782  061C                     	;# 
  5783  061D                     	;# 
  5784  061E                     	;# 
  5785  068C                     	;# 
  5786  068D                     	;# 
  5787  068E                     	;# 
  5788  068F                     	;# 
  5789  0690                     	;# 
  5790  0691                     	;# 
  5791  0692                     	;# 
  5792  0693                     	;# 
  5793  0694                     	;# 
  5794  070C                     	;# 
  5795  070D                     	;# 
  5796  070E                     	;# 
  5797  070F                     	;# 
  5798  0710                     	;# 
  5799  0711                     	;# 
  5800  0712                     	;# 
  5801  0713                     	;# 
  5802  0714                     	;# 
  5803  0716                     	;# 
  5804  0717                     	;# 
  5805  0718                     	;# 
  5806  0719                     	;# 
  5807  071A                     	;# 
  5808  071B                     	;# 
  5809  071C                     	;# 
  5810  071D                     	;# 
  5811  071E                     	;# 
  5812  0796                     	;# 
  5813  0797                     	;# 
  5814  0798                     	;# 
  5815  0799                     	;# 
  5816  079A                     	;# 
  5817  079B                     	;# 
  5818  079C                     	;# 
  5819  079D                     	;# 
  5820  080C                     	;# 
  5821  080D                     	;# 
  5822  080E                     	;# 
  5823  080F                     	;# 
  5824  0810                     	;# 
  5825  0811                     	;# 
  5826  0812                     	;# 
  5827  0813                     	;# 
  5828  0814                     	;# 
  5829  081A                     	;# 
  5830  081A                     	;# 
  5831  081B                     	;# 
  5832  081C                     	;# 
  5833  081C                     	;# 
  5834  081D                     	;# 
  5835  081E                     	;# 
  5836  081F                     	;# 
  5837  088C                     	;# 
  5838  088D                     	;# 
  5839  088E                     	;# 
  5840  088F                     	;# 
  5841  0890                     	;# 
  5842  0891                     	;# 
  5843  0892                     	;# 
  5844  0893                     	;# 
  5845  0895                     	;# 
  5846  0896                     	;# 
  5847  0897                     	;# 
  5848  0898                     	;# 
  5849  0899                     	;# 
  5850  089A                     	;# 
  5851  089B                     	;# 
  5852  090C                     	;# 
  5853  090E                     	;# 
  5854  090F                     	;# 
  5855  091F                     	;# 
  5856  098F                     	;# 
  5857  098F                     	;# 
  5858  0990                     	;# 
  5859  0991                     	;# 
  5860  0992                     	;# 
  5861  0993                     	;# 
  5862  0994                     	;# 
  5863  0995                     	;# 
  5864  0996                     	;# 
  5865  0997                     	;# 
  5866  0A19                     	;# 
  5867  0A19                     	;# 
  5868  0A1A                     	;# 
  5869  0A1A                     	;# 
  5870  0A1B                     	;# 
  5871  0A1B                     	;# 
  5872  0A1B                     	;# 
  5873  0A1C                     	;# 
  5874  0A1C                     	;# 
  5875  0A1D                     	;# 
  5876  0A1D                     	;# 
  5877  0A1E                     	;# 
  5878  0A1E                     	;# 
  5879  0A1F                     	;# 
  5880  0A1F                     	;# 
  5881  0A1F                     	;# 
  5882  1E0F                     	;# 
  5883  1E10                     	;# 
  5884  1E11                     	;# 
  5885  1E12                     	;# 
  5886  1E13                     	;# 
  5887  1E14                     	;# 
  5888  1E15                     	;# 
  5889  1E16                     	;# 
  5890  1E17                     	;# 
  5891  1E18                     	;# 
  5892  1E19                     	;# 
  5893  1E1A                     	;# 
  5894  1E1B                     	;# 
  5895  1E1C                     	;# 
  5896  1E1D                     	;# 
  5897  1E1E                     	;# 
  5898  1E1F                     	;# 
  5899  1E20                     	;# 
  5900  1E21                     	;# 
  5901  1E22                     	;# 
  5902  1E23                     	;# 
  5903  1E24                     	;# 
  5904  1E25                     	;# 
  5905  1E26                     	;# 
  5906  1E27                     	;# 
  5907  1E28                     	;# 
  5908  1E29                     	;# 
  5909  1E2A                     	;# 
  5910  1E2B                     	;# 
  5911  1E2C                     	;# 
  5912  1E2D                     	;# 
  5913  1E2E                     	;# 
  5914  1E2F                     	;# 
  5915  1E30                     	;# 
  5916  1E31                     	;# 
  5917  1E32                     	;# 
  5918  1E33                     	;# 
  5919  1E34                     	;# 
  5920  1E35                     	;# 
  5921  1E36                     	;# 
  5922  1E37                     	;# 
  5923  1E8F                     	;# 
  5924  1E90                     	;# 
  5925  1E91                     	;# 
  5926  1E92                     	;# 
  5927  1E93                     	;# 
  5928  1E94                     	;# 
  5929  1E95                     	;# 
  5930  1E96                     	;# 
  5931  1E97                     	;# 
  5932  1E9C                     	;# 
  5933  1E9D                     	;# 
  5934  1E9E                     	;# 
  5935  1EA1                     	;# 
  5936  1EA2                     	;# 
  5937  1EA3                     	;# 
  5938  1EA4                     	;# 
  5939  1EA5                     	;# 
  5940  1EA9                     	;# 
  5941  1EAA                     	;# 
  5942  1EAB                     	;# 
  5943  1EAC                     	;# 
  5944  1EB1                     	;# 
  5945  1EB2                     	;# 
  5946  1EB3                     	;# 
  5947  1EB8                     	;# 
  5948  1EB9                     	;# 
  5949  1EBA                     	;# 
  5950  1EBB                     	;# 
  5951  1EBC                     	;# 
  5952  1EBD                     	;# 
  5953  1EBE                     	;# 
  5954  1EC3                     	;# 
  5955  1EC5                     	;# 
  5956  1EC6                     	;# 
  5957  1EC7                     	;# 
  5958  1EC8                     	;# 
  5959  1EC9                     	;# 
  5960  1ECA                     	;# 
  5961  1ECB                     	;# 
  5962  1ECB                     	;# 
  5963  1ECB                     	;# 
  5964  1ECC                     	;# 
  5965  1ECC                     	;# 
  5966  1ECC                     	;# 
  5967  1ECD                     	;# 
  5968  1ECD                     	;# 
  5969  1ECE                     	;# 
  5970  1ECE                     	;# 
  5971  1F10                     	;# 
  5972  1F11                     	;# 
  5973  1F12                     	;# 
  5974  1F13                     	;# 
  5975  1F14                     	;# 
  5976  1F15                     	;# 
  5977  1F16                     	;# 
  5978  1F17                     	;# 
  5979  1F18                     	;# 
  5980  1F19                     	;# 
  5981  1F1A                     	;# 
  5982  1F1B                     	;# 
  5983  1F1C                     	;# 
  5984  1F1D                     	;# 
  5985  1F1E                     	;# 
  5986  1F1F                     	;# 
  5987  1F20                     	;# 
  5988  1F21                     	;# 
  5989  1F22                     	;# 
  5990  1F23                     	;# 
  5991  1F24                     	;# 
  5992  1F25                     	;# 
  5993  1F26                     	;# 
  5994  1F27                     	;# 
  5995  1F38                     	;# 
  5996  1F39                     	;# 
  5997  1F3A                     	;# 
  5998  1F3B                     	;# 
  5999  1F3C                     	;# 
  6000  1F3D                     	;# 
  6001  1F3E                     	;# 
  6002  1F3F                     	;# 
  6003  1F43                     	;# 
  6004  1F44                     	;# 
  6005  1F45                     	;# 
  6006  1F46                     	;# 
  6007  1F47                     	;# 
  6008  1F48                     	;# 
  6009  1F49                     	;# 
  6010  1F4A                     	;# 
  6011  1F4E                     	;# 
  6012  1F4F                     	;# 
  6013  1F50                     	;# 
  6014  1F51                     	;# 
  6015  1F52                     	;# 
  6016  1F53                     	;# 
  6017  1F54                     	;# 
  6018  1F55                     	;# 
  6019  1F65                     	;# 
  6020  1F66                     	;# 
  6021  1F67                     	;# 
  6022  1F68                     	;# 
  6023  1F69                     	;# 
  6024  1F6A                     	;# 
  6025  1F6B                     	;# 
  6026  1FE4                     	;# 
  6027  1FE5                     	;# 
  6028  1FE6                     	;# 
  6029  1FE7                     	;# 
  6030  1FE8                     	;# 
  6031  1FE8                     	;# 
  6032  1FE9                     	;# 
  6033  1FEA                     	;# 
  6034  1FEB                     	;# 
  6035  1FED                     	;# 
  6036  1FEE                     	;# 
  6037  1FEF                     	;# 
  6038  0000                     	;# 
  6039  0001                     	;# 
  6040  0002                     	;# 
  6041  0003                     	;# 
  6042  0004                     	;# 
  6043  0005                     	;# 
  6044  0006                     	;# 
  6045  0007                     	;# 
  6046  0008                     	;# 
  6047  0009                     	;# 
  6048  000A                     	;# 
  6049  000B                     	;# 
  6050  000C                     	;# 
  6051  000D                     	;# 
  6052  000E                     	;# 
  6053  0010                     	;# 
  6054  0012                     	;# 
  6055  0013                     	;# 
  6056  0014                     	;# 
  6057  0016                     	;# 
  6058  0018                     	;# 
  6059  0019                     	;# 
  6060  001A                     	;# 
  6061  001C                     	;# 
  6062  008C                     	;# 
  6063  008C                     	;# 
  6064  008D                     	;# 
  6065  008E                     	;# 
  6066  008E                     	;# 
  6067  008F                     	;# 
  6068  0090                     	;# 
  6069  0090                     	;# 
  6070  0091                     	;# 
  6071  0092                     	;# 
  6072  0092                     	;# 
  6073  0093                     	;# 
  6074  0094                     	;# 
  6075  0094                     	;# 
  6076  0095                     	;# 
  6077  0096                     	;# 
  6078  0096                     	;# 
  6079  0097                     	;# 
  6080  0098                     	;# 
  6081  0099                     	;# 
  6082  009A                     	;# 
  6083  009B                     	;# 
  6084  009B                     	;# 
  6085  009C                     	;# 
  6086  009D                     	;# 
  6087  009D                     	;# 
  6088  009E                     	;# 
  6089  009F                     	;# 
  6090  010C                     	;# 
  6091  010C                     	;# 
  6092  010D                     	;# 
  6093  010E                     	;# 
  6094  010F                     	;# 
  6095  010F                     	;# 
  6096  0110                     	;# 
  6097  0111                     	;# 
  6098  0112                     	;# 
  6099  0113                     	;# 
  6100  0114                     	;# 
  6101  0115                     	;# 
  6102  0116                     	;# 
  6103  0117                     	;# 
  6104  0118                     	;# 
  6105  0119                     	;# 
  6106  0119                     	;# 
  6107  0119                     	;# 
  6108  011A                     	;# 
  6109  011A                     	;# 
  6110  011A                     	;# 
  6111  011B                     	;# 
  6112  011B                     	;# 
  6113  011B                     	;# 
  6114  011B                     	;# 
  6115  011B                     	;# 
  6116  011C                     	;# 
  6117  011C                     	;# 
  6118  011C                     	;# 
  6119  011D                     	;# 
  6120  011D                     	;# 
  6121  011D                     	;# 
  6122  011E                     	;# 
  6123  011E                     	;# 
  6124  011E                     	;# 
  6125  011F                     	;# 
  6126  011F                     	;# 
  6127  011F                     	;# 
  6128  011F                     	;# 
  6129  011F                     	;# 
  6130  018C                     	;# 
  6131  018D                     	;# 
  6132  018E                     	;# 
  6133  018F                     	;# 
  6134  0190                     	;# 
  6135  0191                     	;# 
  6136  0192                     	;# 
  6137  0196                     	;# 
  6138  0197                     	;# 
  6139  0198                     	;# 
  6140  0199                     	;# 
  6141  019A                     	;# 
  6142  019B                     	;# 
  6143  019C                     	;# 
  6144  020C                     	;# 
  6145  020D                     	;# 
  6146  020E                     	;# 
  6147  020E                     	;# 
  6148  020F                     	;# 
  6149  020F                     	;# 
  6150  0210                     	;# 
  6151  0210                     	;# 
  6152  0211                     	;# 
  6153  0211                     	;# 
  6154  0212                     	;# 
  6155  0213                     	;# 
  6156  0214                     	;# 
  6157  0214                     	;# 
  6158  0215                     	;# 
  6159  0215                     	;# 
  6160  0216                     	;# 
  6161  0216                     	;# 
  6162  0217                     	;# 
  6163  0217                     	;# 
  6164  0218                     	;# 
  6165  0219                     	;# 
  6166  021A                     	;# 
  6167  021A                     	;# 
  6168  021B                     	;# 
  6169  021B                     	;# 
  6170  021C                     	;# 
  6171  021C                     	;# 
  6172  021D                     	;# 
  6173  021D                     	;# 
  6174  021E                     	;# 
  6175  021F                     	;# 
  6176  028C                     	;# 
  6177  028C                     	;# 
  6178  028D                     	;# 
  6179  028D                     	;# 
  6180  028E                     	;# 
  6181  028F                     	;# 
  6182  0290                     	;# 
  6183  0291                     	;# 
  6184  0292                     	;# 
  6185  0292                     	;# 
  6186  0293                     	;# 
  6187  0293                     	;# 
  6188  0294                     	;# 
  6189  0295                     	;# 
  6190  0296                     	;# 
  6191  0297                     	;# 
  6192  0298                     	;# 
  6193  0298                     	;# 
  6194  0299                     	;# 
  6195  0299                     	;# 
  6196  029A                     	;# 
  6197  029B                     	;# 
  6198  029C                     	;# 
  6199  029D                     	;# 
  6200  029F                     	;# 
  6201  030C                     	;# 
  6202  030C                     	;# 
  6203  030D                     	;# 
  6204  030E                     	;# 
  6205  030F                     	;# 
  6206  0310                     	;# 
  6207  0310                     	;# 
  6208  0311                     	;# 
  6209  0312                     	;# 
  6210  0313                     	;# 
  6211  0314                     	;# 
  6212  0314                     	;# 
  6213  0315                     	;# 
  6214  0316                     	;# 
  6215  0317                     	;# 
  6216  0318                     	;# 
  6217  0318                     	;# 
  6218  0319                     	;# 
  6219  031A                     	;# 
  6220  031B                     	;# 
  6221  031C                     	;# 
  6222  031C                     	;# 
  6223  031D                     	;# 
  6224  031E                     	;# 
  6225  031F                     	;# 
  6226  038C                     	;# 
  6227  038C                     	;# 
  6228  038D                     	;# 
  6229  038E                     	;# 
  6230  0390                     	;# 
  6231  0390                     	;# 
  6232  0391                     	;# 
  6233  0392                     	;# 
  6234  048C                     	;# 
  6235  048C                     	;# 
  6236  048D                     	;# 
  6237  048E                     	;# 
  6238  048F                     	;# 
  6239  048F                     	;# 
  6240  0490                     	;# 
  6241  0491                     	;# 
  6242  0492                     	;# 
  6243  0492                     	;# 
  6244  0493                     	;# 
  6245  0494                     	;# 
  6246  0495                     	;# 
  6247  0495                     	;# 
  6248  0496                     	;# 
  6249  0497                     	;# 
  6250  0498                     	;# 
  6251  0499                     	;# 
  6252  049A                     	;# 
  6253  049B                     	;# 
  6254  049C                     	;# 
  6255  049D                     	;# 
  6256  050C                     	;# 
  6257  050C                     	;# 
  6258  050D                     	;# 
  6259  050E                     	;# 
  6260  050F                     	;# 
  6261  050F                     	;# 
  6262  0510                     	;# 
  6263  0511                     	;# 
  6264  0512                     	;# 
  6265  0512                     	;# 
  6266  0513                     	;# 
  6267  0514                     	;# 
  6268  0515                     	;# 
  6269  0515                     	;# 
  6270  0516                     	;# 
  6271  0517                     	;# 
  6272  0518                     	;# 
  6273  0519                     	;# 
  6274  051A                     	;# 
  6275  051B                     	;# 
  6276  051C                     	;# 
  6277  051D                     	;# 
  6278  058C                     	;# 
  6279  058C                     	;# 
  6280  058D                     	;# 
  6281  058E                     	;# 
  6282  058F                     	;# 
  6283  058F                     	;# 
  6284  0590                     	;# 
  6285  0591                     	;# 
  6286  0592                     	;# 
  6287  0593                     	;# 
  6288  059C                     	;# 
  6289  059C                     	;# 
  6290  059D                     	;# 
  6291  059D                     	;# 
  6292  059E                     	;# 
  6293  059F                     	;# 
  6294  060C                     	;# 
  6295  060C                     	;# 
  6296  060D                     	;# 
  6297  060D                     	;# 
  6298  060E                     	;# 
  6299  060F                     	;# 
  6300  0610                     	;# 
  6301  0611                     	;# 
  6302  0612                     	;# 
  6303  0613                     	;# 
  6304  0614                     	;# 
  6305  0616                     	;# 
  6306  0616                     	;# 
  6307  0617                     	;# 
  6308  0617                     	;# 
  6309  0618                     	;# 
  6310  0619                     	;# 
  6311  061A                     	;# 
  6312  061B                     	;# 
  6313  061C                     	;# 
  6314  061D                     	;# 
  6315  061E                     	;# 
  6316  068C                     	;# 
  6317  068D                     	;# 
  6318  068E                     	;# 
  6319  068F                     	;# 
  6320  0690                     	;# 
  6321  0691                     	;# 
  6322  0692                     	;# 
  6323  0693                     	;# 
  6324  0694                     	;# 
  6325  070C                     	;# 
  6326  070D                     	;# 
  6327  070E                     	;# 
  6328  070F                     	;# 
  6329  0710                     	;# 
  6330  0711                     	;# 
  6331  0712                     	;# 
  6332  0713                     	;# 
  6333  0714                     	;# 
  6334  0716                     	;# 
  6335  0717                     	;# 
  6336  0718                     	;# 
  6337  0719                     	;# 
  6338  071A                     	;# 
  6339  071B                     	;# 
  6340  071C                     	;# 
  6341  071D                     	;# 
  6342  071E                     	;# 
  6343  0796                     	;# 
  6344  0797                     	;# 
  6345  0798                     	;# 
  6346  0799                     	;# 
  6347  079A                     	;# 
  6348  079B                     	;# 
  6349  079C                     	;# 
  6350  079D                     	;# 
  6351  080C                     	;# 
  6352  080D                     	;# 
  6353  080E                     	;# 
  6354  080F                     	;# 
  6355  0810                     	;# 
  6356  0811                     	;# 
  6357  0812                     	;# 
  6358  0813                     	;# 
  6359  0814                     	;# 
  6360  081A                     	;# 
  6361  081A                     	;# 
  6362  081B                     	;# 
  6363  081C                     	;# 
  6364  081C                     	;# 
  6365  081D                     	;# 
  6366  081E                     	;# 
  6367  081F                     	;# 
  6368  088C                     	;# 
  6369  088D                     	;# 
  6370  088E                     	;# 
  6371  088F                     	;# 
  6372  0890                     	;# 
  6373  0891                     	;# 
  6374  0892                     	;# 
  6375  0893                     	;# 
  6376  0895                     	;# 
  6377  0896                     	;# 
  6378  0897                     	;# 
  6379  0898                     	;# 
  6380  0899                     	;# 
  6381  089A                     	;# 
  6382  089B                     	;# 
  6383  090C                     	;# 
  6384  090E                     	;# 
  6385  090F                     	;# 
  6386  091F                     	;# 
  6387  098F                     	;# 
  6388  098F                     	;# 
  6389  0990                     	;# 
  6390  0991                     	;# 
  6391  0992                     	;# 
  6392  0993                     	;# 
  6393  0994                     	;# 
  6394  0995                     	;# 
  6395  0996                     	;# 
  6396  0997                     	;# 
  6397  0A19                     	;# 
  6398  0A19                     	;# 
  6399  0A1A                     	;# 
  6400  0A1A                     	;# 
  6401  0A1B                     	;# 
  6402  0A1B                     	;# 
  6403  0A1B                     	;# 
  6404  0A1C                     	;# 
  6405  0A1C                     	;# 
  6406  0A1D                     	;# 
  6407  0A1D                     	;# 
  6408  0A1E                     	;# 
  6409  0A1E                     	;# 
  6410  0A1F                     	;# 
  6411  0A1F                     	;# 
  6412  0A1F                     	;# 
  6413  1E0F                     	;# 
  6414  1E10                     	;# 
  6415  1E11                     	;# 
  6416  1E12                     	;# 
  6417  1E13                     	;# 
  6418  1E14                     	;# 
  6419  1E15                     	;# 
  6420  1E16                     	;# 
  6421  1E17                     	;# 
  6422  1E18                     	;# 
  6423  1E19                     	;# 
  6424  1E1A                     	;# 
  6425  1E1B                     	;# 
  6426  1E1C                     	;# 
  6427  1E1D                     	;# 
  6428  1E1E                     	;# 
  6429  1E1F                     	;# 
  6430  1E20                     	;# 
  6431  1E21                     	;# 
  6432  1E22                     	;# 
  6433  1E23                     	;# 
  6434  1E24                     	;# 
  6435  1E25                     	;# 
  6436  1E26                     	;# 
  6437  1E27                     	;# 
  6438  1E28                     	;# 
  6439  1E29                     	;# 
  6440  1E2A                     	;# 
  6441  1E2B                     	;# 
  6442  1E2C                     	;# 
  6443  1E2D                     	;# 
  6444  1E2E                     	;# 
  6445  1E2F                     	;# 
  6446  1E30                     	;# 
  6447  1E31                     	;# 
  6448  1E32                     	;# 
  6449  1E33                     	;# 
  6450  1E34                     	;# 
  6451  1E35                     	;# 
  6452  1E36                     	;# 
  6453  1E37                     	;# 
  6454  1E8F                     	;# 
  6455  1E90                     	;# 
  6456  1E91                     	;# 
  6457  1E92                     	;# 
  6458  1E93                     	;# 
  6459  1E94                     	;# 
  6460  1E95                     	;# 
  6461  1E96                     	;# 
  6462  1E97                     	;# 
  6463  1E9C                     	;# 
  6464  1E9D                     	;# 
  6465  1E9E                     	;# 
  6466  1EA1                     	;# 
  6467  1EA2                     	;# 
  6468  1EA3                     	;# 
  6469  1EA4                     	;# 
  6470  1EA5                     	;# 
  6471  1EA9                     	;# 
  6472  1EAA                     	;# 
  6473  1EAB                     	;# 
  6474  1EAC                     	;# 
  6475  1EB1                     	;# 
  6476  1EB2                     	;# 
  6477  1EB3                     	;# 
  6478  1EB8                     	;# 
  6479  1EB9                     	;# 
  6480  1EBA                     	;# 
  6481  1EBB                     	;# 
  6482  1EBC                     	;# 
  6483  1EBD                     	;# 
  6484  1EBE                     	;# 
  6485  1EC3                     	;# 
  6486  1EC5                     	;# 
  6487  1EC6                     	;# 
  6488  1EC7                     	;# 
  6489  1EC8                     	;# 
  6490  1EC9                     	;# 
  6491  1ECA                     	;# 
  6492  1ECB                     	;# 
  6493  1ECB                     	;# 
  6494  1ECB                     	;# 
  6495  1ECC                     	;# 
  6496  1ECC                     	;# 
  6497  1ECC                     	;# 
  6498  1ECD                     	;# 
  6499  1ECD                     	;# 
  6500  1ECE                     	;# 
  6501  1ECE                     	;# 
  6502  1F10                     	;# 
  6503  1F11                     	;# 
  6504  1F12                     	;# 
  6505  1F13                     	;# 
  6506  1F14                     	;# 
  6507  1F15                     	;# 
  6508  1F16                     	;# 
  6509  1F17                     	;# 
  6510  1F18                     	;# 
  6511  1F19                     	;# 
  6512  1F1A                     	;# 
  6513  1F1B                     	;# 
  6514  1F1C                     	;# 
  6515  1F1D                     	;# 
  6516  1F1E                     	;# 
  6517  1F1F                     	;# 
  6518  1F20                     	;# 
  6519  1F21                     	;# 
  6520  1F22                     	;# 
  6521  1F23                     	;# 
  6522  1F24                     	;# 
  6523  1F25                     	;# 
  6524  1F26                     	;# 
  6525  1F27                     	;# 
  6526  1F38                     	;# 
  6527  1F39                     	;# 
  6528  1F3A                     	;# 
  6529  1F3B                     	;# 
  6530  1F3C                     	;# 
  6531  1F3D                     	;# 
  6532  1F3E                     	;# 
  6533  1F3F                     	;# 
  6534  1F43                     	;# 
  6535  1F44                     	;# 
  6536  1F45                     	;# 
  6537  1F46                     	;# 
  6538  1F47                     	;# 
  6539  1F48                     	;# 
  6540  1F49                     	;# 
  6541  1F4A                     	;# 
  6542  1F4E                     	;# 
  6543  1F4F                     	;# 
  6544  1F50                     	;# 
  6545  1F51                     	;# 
  6546  1F52                     	;# 
  6547  1F53                     	;# 
  6548  1F54                     	;# 
  6549  1F55                     	;# 
  6550  1F65                     	;# 
  6551  1F66                     	;# 
  6552  1F67                     	;# 
  6553  1F68                     	;# 
  6554  1F69                     	;# 
  6555  1F6A                     	;# 
  6556  1F6B                     	;# 
  6557  1FE4                     	;# 
  6558  1FE5                     	;# 
  6559  1FE6                     	;# 
  6560  1FE7                     	;# 
  6561  1FE8                     	;# 
  6562  1FE8                     	;# 
  6563  1FE9                     	;# 
  6564  1FEA                     	;# 
  6565  1FEB                     	;# 
  6566  1FED                     	;# 
  6567  1FEE                     	;# 
  6568  1FEF                     	;# 
  6569  0000                     	;# 
  6570  0001                     	;# 
  6571  0002                     	;# 
  6572  0003                     	;# 
  6573  0004                     	;# 
  6574  0005                     	;# 
  6575  0006                     	;# 
  6576  0007                     	;# 
  6577  0008                     	;# 
  6578  0009                     	;# 
  6579  000A                     	;# 
  6580  000B                     	;# 
  6581  000C                     	;# 
  6582  000D                     	;# 
  6583  000E                     	;# 
  6584  0010                     	;# 
  6585  0012                     	;# 
  6586  0013                     	;# 
  6587  0014                     	;# 
  6588  0016                     	;# 
  6589  0018                     	;# 
  6590  0019                     	;# 
  6591  001A                     	;# 
  6592  001C                     	;# 
  6593  008C                     	;# 
  6594  008C                     	;# 
  6595  008D                     	;# 
  6596  008E                     	;# 
  6597  008E                     	;# 
  6598  008F                     	;# 
  6599  0090                     	;# 
  6600  0090                     	;# 
  6601  0091                     	;# 
  6602  0092                     	;# 
  6603  0092                     	;# 
  6604  0093                     	;# 
  6605  0094                     	;# 
  6606  0094                     	;# 
  6607  0095                     	;# 
  6608  0096                     	;# 
  6609  0096                     	;# 
  6610  0097                     	;# 
  6611  0098                     	;# 
  6612  0099                     	;# 
  6613  009A                     	;# 
  6614  009B                     	;# 
  6615  009B                     	;# 
  6616  009C                     	;# 
  6617  009D                     	;# 
  6618  009D                     	;# 
  6619  009E                     	;# 
  6620  009F                     	;# 
  6621  010C                     	;# 
  6622  010C                     	;# 
  6623  010D                     	;# 
  6624  010E                     	;# 
  6625  010F                     	;# 
  6626  010F                     	;# 
  6627  0110                     	;# 
  6628  0111                     	;# 
  6629  0112                     	;# 
  6630  0113                     	;# 
  6631  0114                     	;# 
  6632  0115                     	;# 
  6633  0116                     	;# 
  6634  0117                     	;# 
  6635  0118                     	;# 
  6636  0119                     	;# 
  6637  0119                     	;# 
  6638  0119                     	;# 
  6639  011A                     	;# 
  6640  011A                     	;# 
  6641  011A                     	;# 
  6642  011B                     	;# 
  6643  011B                     	;# 
  6644  011B                     	;# 
  6645  011B                     	;# 
  6646  011B                     	;# 
  6647  011C                     	;# 
  6648  011C                     	;# 
  6649  011C                     	;# 
  6650  011D                     	;# 
  6651  011D                     	;# 
  6652  011D                     	;# 
  6653  011E                     	;# 
  6654  011E                     	;# 
  6655  011E                     	;# 
  6656  011F                     	;# 
  6657  011F                     	;# 
  6658  011F                     	;# 
  6659  011F                     	;# 
  6660  011F                     	;# 
  6661  018C                     	;# 
  6662  018D                     	;# 
  6663  018E                     	;# 
  6664  018F                     	;# 
  6665  0190                     	;# 
  6666  0191                     	;# 
  6667  0192                     	;# 
  6668  0196                     	;# 
  6669  0197                     	;# 
  6670  0198                     	;# 
  6671  0199                     	;# 
  6672  019A                     	;# 
  6673  019B                     	;# 
  6674  019C                     	;# 
  6675  020C                     	;# 
  6676  020D                     	;# 
  6677  020E                     	;# 
  6678  020E                     	;# 
  6679  020F                     	;# 
  6680  020F                     	;# 
  6681  0210                     	;# 
  6682  0210                     	;# 
  6683  0211                     	;# 
  6684  0211                     	;# 
  6685  0212                     	;# 
  6686  0213                     	;# 
  6687  0214                     	;# 
  6688  0214                     	;# 
  6689  0215                     	;# 
  6690  0215                     	;# 
  6691  0216                     	;# 
  6692  0216                     	;# 
  6693  0217                     	;# 
  6694  0217                     	;# 
  6695  0218                     	;# 
  6696  0219                     	;# 
  6697  021A                     	;# 
  6698  021A                     	;# 
  6699  021B                     	;# 
  6700  021B                     	;# 
  6701  021C                     	;# 
  6702  021C                     	;# 
  6703  021D                     	;# 
  6704  021D                     	;# 
  6705  021E                     	;# 
  6706  021F                     	;# 
  6707  028C                     	;# 
  6708  028C                     	;# 
  6709  028D                     	;# 
  6710  028D                     	;# 
  6711  028E                     	;# 
  6712  028F                     	;# 
  6713  0290                     	;# 
  6714  0291                     	;# 
  6715  0292                     	;# 
  6716  0292                     	;# 
  6717  0293                     	;# 
  6718  0293                     	;# 
  6719  0294                     	;# 
  6720  0295                     	;# 
  6721  0296                     	;# 
  6722  0297                     	;# 
  6723  0298                     	;# 
  6724  0298                     	;# 
  6725  0299                     	;# 
  6726  0299                     	;# 
  6727  029A                     	;# 
  6728  029B                     	;# 
  6729  029C                     	;# 
  6730  029D                     	;# 
  6731  029F                     	;# 
  6732  030C                     	;# 
  6733  030C                     	;# 
  6734  030D                     	;# 
  6735  030E                     	;# 
  6736  030F                     	;# 
  6737  0310                     	;# 
  6738  0310                     	;# 
  6739  0311                     	;# 
  6740  0312                     	;# 
  6741  0313                     	;# 
  6742  0314                     	;# 
  6743  0314                     	;# 
  6744  0315                     	;# 
  6745  0316                     	;# 
  6746  0317                     	;# 
  6747  0318                     	;# 
  6748  0318                     	;# 
  6749  0319                     	;# 
  6750  031A                     	;# 
  6751  031B                     	;# 
  6752  031C                     	;# 
  6753  031C                     	;# 
  6754  031D                     	;# 
  6755  031E                     	;# 
  6756  031F                     	;# 
  6757  038C                     	;# 
  6758  038C                     	;# 
  6759  038D                     	;# 
  6760  038E                     	;# 
  6761  0390                     	;# 
  6762  0390                     	;# 
  6763  0391                     	;# 
  6764  0392                     	;# 
  6765  048C                     	;# 
  6766  048C                     	;# 
  6767  048D                     	;# 
  6768  048E                     	;# 
  6769  048F                     	;# 
  6770  048F                     	;# 
  6771  0490                     	;# 
  6772  0491                     	;# 
  6773  0492                     	;# 
  6774  0492                     	;# 
  6775  0493                     	;# 
  6776  0494                     	;# 
  6777  0495                     	;# 
  6778  0495                     	;# 
  6779  0496                     	;# 
  6780  0497                     	;# 
  6781  0498                     	;# 
  6782  0499                     	;# 
  6783  049A                     	;# 
  6784  049B                     	;# 
  6785  049C                     	;# 
  6786  049D                     	;# 
  6787  050C                     	;# 
  6788  050C                     	;# 
  6789  050D                     	;# 
  6790  050E                     	;# 
  6791  050F                     	;# 
  6792  050F                     	;# 
  6793  0510                     	;# 
  6794  0511                     	;# 
  6795  0512                     	;# 
  6796  0512                     	;# 
  6797  0513                     	;# 
  6798  0514                     	;# 
  6799  0515                     	;# 
  6800  0515                     	;# 
  6801  0516                     	;# 
  6802  0517                     	;# 
  6803  0518                     	;# 
  6804  0519                     	;# 
  6805  051A                     	;# 
  6806  051B                     	;# 
  6807  051C                     	;# 
  6808  051D                     	;# 
  6809  058C                     	;# 
  6810  058C                     	;# 
  6811  058D                     	;# 
  6812  058E                     	;# 
  6813  058F                     	;# 
  6814  058F                     	;# 
  6815  0590                     	;# 
  6816  0591                     	;# 
  6817  0592                     	;# 
  6818  0593                     	;# 
  6819  059C                     	;# 
  6820  059C                     	;# 
  6821  059D                     	;# 
  6822  059D                     	;# 
  6823  059E                     	;# 
  6824  059F                     	;# 
  6825  060C                     	;# 
  6826  060C                     	;# 
  6827  060D                     	;# 
  6828  060D                     	;# 
  6829  060E                     	;# 
  6830  060F                     	;# 
  6831  0610                     	;# 
  6832  0611                     	;# 
  6833  0612                     	;# 
  6834  0613                     	;# 
  6835  0614                     	;# 
  6836  0616                     	;# 
  6837  0616                     	;# 
  6838  0617                     	;# 
  6839  0617                     	;# 
  6840  0618                     	;# 
  6841  0619                     	;# 
  6842  061A                     	;# 
  6843  061B                     	;# 
  6844  061C                     	;# 
  6845  061D                     	;# 
  6846  061E                     	;# 
  6847  068C                     	;# 
  6848  068D                     	;# 
  6849  068E                     	;# 
  6850  068F                     	;# 
  6851  0690                     	;# 
  6852  0691                     	;# 
  6853  0692                     	;# 
  6854  0693                     	;# 
  6855  0694                     	;# 
  6856  070C                     	;# 
  6857  070D                     	;# 
  6858  070E                     	;# 
  6859  070F                     	;# 
  6860  0710                     	;# 
  6861  0711                     	;# 
  6862  0712                     	;# 
  6863  0713                     	;# 
  6864  0714                     	;# 
  6865  0716                     	;# 
  6866  0717                     	;# 
  6867  0718                     	;# 
  6868  0719                     	;# 
  6869  071A                     	;# 
  6870  071B                     	;# 
  6871  071C                     	;# 
  6872  071D                     	;# 
  6873  071E                     	;# 
  6874  0796                     	;# 
  6875  0797                     	;# 
  6876  0798                     	;# 
  6877  0799                     	;# 
  6878  079A                     	;# 
  6879  079B                     	;# 
  6880  079C                     	;# 
  6881  079D                     	;# 
  6882  080C                     	;# 
  6883  080D                     	;# 
  6884  080E                     	;# 
  6885  080F                     	;# 
  6886  0810                     	;# 
  6887  0811                     	;# 
  6888  0812                     	;# 
  6889  0813                     	;# 
  6890  0814                     	;# 
  6891  081A                     	;# 
  6892  081A                     	;# 
  6893  081B                     	;# 
  6894  081C                     	;# 
  6895  081C                     	;# 
  6896  081D                     	;# 
  6897  081E                     	;# 
  6898  081F                     	;# 
  6899  088C                     	;# 
  6900  088D                     	;# 
  6901  088E                     	;# 
  6902  088F                     	;# 
  6903  0890                     	;# 
  6904  0891                     	;# 
  6905  0892                     	;# 
  6906  0893                     	;# 
  6907  0895                     	;# 
  6908  0896                     	;# 
  6909  0897                     	;# 
  6910  0898                     	;# 
  6911  0899                     	;# 
  6912  089A                     	;# 
  6913  089B                     	;# 
  6914  090C                     	;# 
  6915  090E                     	;# 
  6916  090F                     	;# 
  6917  091F                     	;# 
  6918  098F                     	;# 
  6919  098F                     	;# 
  6920  0990                     	;# 
  6921  0991                     	;# 
  6922  0992                     	;# 
  6923  0993                     	;# 
  6924  0994                     	;# 
  6925  0995                     	;# 
  6926  0996                     	;# 
  6927  0997                     	;# 
  6928  0A19                     	;# 
  6929  0A19                     	;# 
  6930  0A1A                     	;# 
  6931  0A1A                     	;# 
  6932  0A1B                     	;# 
  6933  0A1B                     	;# 
  6934  0A1B                     	;# 
  6935  0A1C                     	;# 
  6936  0A1C                     	;# 
  6937  0A1D                     	;# 
  6938  0A1D                     	;# 
  6939  0A1E                     	;# 
  6940  0A1E                     	;# 
  6941  0A1F                     	;# 
  6942  0A1F                     	;# 
  6943  0A1F                     	;# 
  6944  1E0F                     	;# 
  6945  1E10                     	;# 
  6946  1E11                     	;# 
  6947  1E12                     	;# 
  6948  1E13                     	;# 
  6949  1E14                     	;# 
  6950  1E15                     	;# 
  6951  1E16                     	;# 
  6952  1E17                     	;# 
  6953  1E18                     	;# 
  6954  1E19                     	;# 
  6955  1E1A                     	;# 
  6956  1E1B                     	;# 
  6957  1E1C                     	;# 
  6958  1E1D                     	;# 
  6959  1E1E                     	;# 
  6960  1E1F                     	;# 
  6961  1E20                     	;# 
  6962  1E21                     	;# 
  6963  1E22                     	;# 
  6964  1E23                     	;# 
  6965  1E24                     	;# 
  6966  1E25                     	;# 
  6967  1E26                     	;# 
  6968  1E27                     	;# 
  6969  1E28                     	;# 
  6970  1E29                     	;# 
  6971  1E2A                     	;# 
  6972  1E2B                     	;# 
  6973  1E2C                     	;# 
  6974  1E2D                     	;# 
  6975  1E2E                     	;# 
  6976  1E2F                     	;# 
  6977  1E30                     	;# 
  6978  1E31                     	;# 
  6979  1E32                     	;# 
  6980  1E33                     	;# 
  6981  1E34                     	;# 
  6982  1E35                     	;# 
  6983  1E36                     	;# 
  6984  1E37                     	;# 
  6985  1E8F                     	;# 
  6986  1E90                     	;# 
  6987  1E91                     	;# 
  6988  1E92                     	;# 
  6989  1E93                     	;# 
  6990  1E94                     	;# 
  6991  1E95                     	;# 
  6992  1E96                     	;# 
  6993  1E97                     	;# 
  6994  1E9C                     	;# 
  6995  1E9D                     	;# 
  6996  1E9E                     	;# 
  6997  1EA1                     	;# 
  6998  1EA2                     	;# 
  6999  1EA3                     	;# 
  7000  1EA4                     	;# 
  7001  1EA5                     	;# 
  7002  1EA9                     	;# 
  7003  1EAA                     	;# 
  7004  1EAB                     	;# 
  7005  1EAC                     	;# 
  7006  1EB1                     	;# 
  7007  1EB2                     	;# 
  7008  1EB3                     	;# 
  7009  1EB8                     	;# 
  7010  1EB9                     	;# 
  7011  1EBA                     	;# 
  7012  1EBB                     	;# 
  7013  1EBC                     	;# 
  7014  1EBD                     	;# 
  7015  1EBE                     	;# 
  7016  1EC3                     	;# 
  7017  1EC5                     	;# 
  7018  1EC6                     	;# 
  7019  1EC7                     	;# 
  7020  1EC8                     	;# 
  7021  1EC9                     	;# 
  7022  1ECA                     	;# 
  7023  1ECB                     	;# 
  7024  1ECB                     	;# 
  7025  1ECB                     	;# 
  7026  1ECC                     	;# 
  7027  1ECC                     	;# 
  7028  1ECC                     	;# 
  7029  1ECD                     	;# 
  7030  1ECD                     	;# 
  7031  1ECE                     	;# 
  7032  1ECE                     	;# 
  7033  1F10                     	;# 
  7034  1F11                     	;# 
  7035  1F12                     	;# 
  7036  1F13                     	;# 
  7037  1F14                     	;# 
  7038  1F15                     	;# 
  7039  1F16                     	;# 
  7040  1F17                     	;# 
  7041  1F18                     	;# 
  7042  1F19                     	;# 
  7043  1F1A                     	;# 
  7044  1F1B                     	;# 
  7045  1F1C                     	;# 
  7046  1F1D                     	;# 
  7047  1F1E                     	;# 
  7048  1F1F                     	;# 
  7049  1F20                     	;# 
  7050  1F21                     	;# 
  7051  1F22                     	;# 
  7052  1F23                     	;# 
  7053  1F24                     	;# 
  7054  1F25                     	;# 
  7055  1F26                     	;# 
  7056  1F27                     	;# 
  7057  1F38                     	;# 
  7058  1F39                     	;# 
  7059  1F3A                     	;# 
  7060  1F3B                     	;# 
  7061  1F3C                     	;# 
  7062  1F3D                     	;# 
  7063  1F3E                     	;# 
  7064  1F3F                     	;# 
  7065  1F43                     	;# 
  7066  1F44                     	;# 
  7067  1F45                     	;# 
  7068  1F46                     	;# 
  7069  1F47                     	;# 
  7070  1F48                     	;# 
  7071  1F49                     	;# 
  7072  1F4A                     	;# 
  7073  1F4E                     	;# 
  7074  1F4F                     	;# 
  7075  1F50                     	;# 
  7076  1F51                     	;# 
  7077  1F52                     	;# 
  7078  1F53                     	;# 
  7079  1F54                     	;# 
  7080  1F55                     	;# 
  7081  1F65                     	;# 
  7082  1F66                     	;# 
  7083  1F67                     	;# 
  7084  1F68                     	;# 
  7085  1F69                     	;# 
  7086  1F6A                     	;# 
  7087  1F6B                     	;# 
  7088  1FE4                     	;# 
  7089  1FE5                     	;# 
  7090  1FE6                     	;# 
  7091  1FE7                     	;# 
  7092  1FE8                     	;# 
  7093  1FE8                     	;# 
  7094  1FE9                     	;# 
  7095  1FEA                     	;# 
  7096  1FEB                     	;# 
  7097  1FED                     	;# 
  7098  1FEE                     	;# 
  7099  1FEF                     	;# 
  7100  0000                     	;# 
  7101  0001                     	;# 
  7102  0002                     	;# 
  7103  0003                     	;# 
  7104  0004                     	;# 
  7105  0005                     	;# 
  7106  0006                     	;# 
  7107  0007                     	;# 
  7108  0008                     	;# 
  7109  0009                     	;# 
  7110  000A                     	;# 
  7111  000B                     	;# 
  7112  000C                     	;# 
  7113  000D                     	;# 
  7114  000E                     	;# 
  7115  0010                     	;# 
  7116  0012                     	;# 
  7117  0013                     	;# 
  7118  0014                     	;# 
  7119  0016                     	;# 
  7120  0018                     	;# 
  7121  0019                     	;# 
  7122  001A                     	;# 
  7123  001C                     	;# 
  7124  008C                     	;# 
  7125  008C                     	;# 
  7126  008D                     	;# 
  7127  008E                     	;# 
  7128  008E                     	;# 
  7129  008F                     	;# 
  7130  0090                     	;# 
  7131  0090                     	;# 
  7132  0091                     	;# 
  7133  0092                     	;# 
  7134  0092                     	;# 
  7135  0093                     	;# 
  7136  0094                     	;# 
  7137  0094                     	;# 
  7138  0095                     	;# 
  7139  0096                     	;# 
  7140  0096                     	;# 
  7141  0097                     	;# 
  7142  0098                     	;# 
  7143  0099                     	;# 
  7144  009A                     	;# 
  7145  009B                     	;# 
  7146  009B                     	;# 
  7147  009C                     	;# 
  7148  009D                     	;# 
  7149  009D                     	;# 
  7150  009E                     	;# 
  7151  009F                     	;# 
  7152  010C                     	;# 
  7153  010C                     	;# 
  7154  010D                     	;# 
  7155  010E                     	;# 
  7156  010F                     	;# 
  7157  010F                     	;# 
  7158  0110                     	;# 
  7159  0111                     	;# 
  7160  0112                     	;# 
  7161  0113                     	;# 
  7162  0114                     	;# 
  7163  0115                     	;# 
  7164  0116                     	;# 
  7165  0117                     	;# 
  7166  0118                     	;# 
  7167  0119                     	;# 
  7168  0119                     	;# 
  7169  0119                     	;# 
  7170  011A                     	;# 
  7171  011A                     	;# 
  7172  011A                     	;# 
  7173  011B                     	;# 
  7174  011B                     	;# 
  7175  011B                     	;# 
  7176  011B                     	;# 
  7177  011B                     	;# 
  7178  011C                     	;# 
  7179  011C                     	;# 
  7180  011C                     	;# 
  7181  011D                     	;# 
  7182  011D                     	;# 
  7183  011D                     	;# 
  7184  011E                     	;# 
  7185  011E                     	;# 
  7186  011E                     	;# 
  7187  011F                     	;# 
  7188  011F                     	;# 
  7189  011F                     	;# 
  7190  011F                     	;# 
  7191  011F                     	;# 
  7192  018C                     	;# 
  7193  018D                     	;# 
  7194  018E                     	;# 
  7195  018F                     	;# 
  7196  0190                     	;# 
  7197  0191                     	;# 
  7198  0192                     	;# 
  7199  0196                     	;# 
  7200  0197                     	;# 
  7201  0198                     	;# 
  7202  0199                     	;# 
  7203  019A                     	;# 
  7204  019B                     	;# 
  7205  019C                     	;# 
  7206  020C                     	;# 
  7207  020D                     	;# 
  7208  020E                     	;# 
  7209  020E                     	;# 
  7210  020F                     	;# 
  7211  020F                     	;# 
  7212  0210                     	;# 
  7213  0210                     	;# 
  7214  0211                     	;# 
  7215  0211                     	;# 
  7216  0212                     	;# 
  7217  0213                     	;# 
  7218  0214                     	;# 
  7219  0214                     	;# 
  7220  0215                     	;# 
  7221  0215                     	;# 
  7222  0216                     	;# 
  7223  0216                     	;# 
  7224  0217                     	;# 
  7225  0217                     	;# 
  7226  0218                     	;# 
  7227  0219                     	;# 
  7228  021A                     	;# 
  7229  021A                     	;# 
  7230  021B                     	;# 
  7231  021B                     	;# 
  7232  021C                     	;# 
  7233  021C                     	;# 
  7234  021D                     	;# 
  7235  021D                     	;# 
  7236  021E                     	;# 
  7237  021F                     	;# 
  7238  028C                     	;# 
  7239  028C                     	;# 
  7240  028D                     	;# 
  7241  028D                     	;# 
  7242  028E                     	;# 
  7243  028F                     	;# 
  7244  0290                     	;# 
  7245  0291                     	;# 
  7246  0292                     	;# 
  7247  0292                     	;# 
  7248  0293                     	;# 
  7249  0293                     	;# 
  7250  0294                     	;# 
  7251  0295                     	;# 
  7252  0296                     	;# 
  7253  0297                     	;# 
  7254  0298                     	;# 
  7255  0298                     	;# 
  7256  0299                     	;# 
  7257  0299                     	;# 
  7258  029A                     	;# 
  7259  029B                     	;# 
  7260  029C                     	;# 
  7261  029D                     	;# 
  7262  029F                     	;# 
  7263  030C                     	;# 
  7264  030C                     	;# 
  7265  030D                     	;# 
  7266  030E                     	;# 
  7267  030F                     	;# 
  7268  0310                     	;# 
  7269  0310                     	;# 
  7270  0311                     	;# 
  7271  0312                     	;# 
  7272  0313                     	;# 
  7273  0314                     	;# 
  7274  0314                     	;# 
  7275  0315                     	;# 
  7276  0316                     	;# 
  7277  0317                     	;# 
  7278  0318                     	;# 
  7279  0318                     	;# 
  7280  0319                     	;# 
  7281  031A                     	;# 
  7282  031B                     	;# 
  7283  031C                     	;# 
  7284  031C                     	;# 
  7285  031D                     	;# 
  7286  031E                     	;# 
  7287  031F                     	;# 
  7288  038C                     	;# 
  7289  038C                     	;# 
  7290  038D                     	;# 
  7291  038E                     	;# 
  7292  0390                     	;# 
  7293  0390                     	;# 
  7294  0391                     	;# 
  7295  0392                     	;# 
  7296  048C                     	;# 
  7297  048C                     	;# 
  7298  048D                     	;# 
  7299  048E                     	;# 
  7300  048F                     	;# 
  7301  048F                     	;# 
  7302  0490                     	;# 
  7303  0491                     	;# 
  7304  0492                     	;# 
  7305  0492                     	;# 
  7306  0493                     	;# 
  7307  0494                     	;# 
  7308  0495                     	;# 
  7309  0495                     	;# 
  7310  0496                     	;# 
  7311  0497                     	;# 
  7312  0498                     	;# 
  7313  0499                     	;# 
  7314  049A                     	;# 
  7315  049B                     	;# 
  7316  049C                     	;# 
  7317  049D                     	;# 
  7318  050C                     	;# 
  7319  050C                     	;# 
  7320  050D                     	;# 
  7321  050E                     	;# 
  7322  050F                     	;# 
  7323  050F                     	;# 
  7324  0510                     	;# 
  7325  0511                     	;# 
  7326  0512                     	;# 
  7327  0512                     	;# 
  7328  0513                     	;# 
  7329  0514                     	;# 
  7330  0515                     	;# 
  7331  0515                     	;# 
  7332  0516                     	;# 
  7333  0517                     	;# 
  7334  0518                     	;# 
  7335  0519                     	;# 
  7336  051A                     	;# 
  7337  051B                     	;# 
  7338  051C                     	;# 
  7339  051D                     	;# 
  7340  058C                     	;# 
  7341  058C                     	;# 
  7342  058D                     	;# 
  7343  058E                     	;# 
  7344  058F                     	;# 
  7345  058F                     	;# 
  7346  0590                     	;# 
  7347  0591                     	;# 
  7348  0592                     	;# 
  7349  0593                     	;# 
  7350  059C                     	;# 
  7351  059C                     	;# 
  7352  059D                     	;# 
  7353  059D                     	;# 
  7354  059E                     	;# 
  7355  059F                     	;# 
  7356  060C                     	;# 
  7357  060C                     	;# 
  7358  060D                     	;# 
  7359  060D                     	;# 
  7360  060E                     	;# 
  7361  060F                     	;# 
  7362  0610                     	;# 
  7363  0611                     	;# 
  7364  0612                     	;# 
  7365  0613                     	;# 
  7366  0614                     	;# 
  7367  0616                     	;# 
  7368  0616                     	;# 
  7369  0617                     	;# 
  7370  0617                     	;# 
  7371  0618                     	;# 
  7372  0619                     	;# 
  7373  061A                     	;# 
  7374  061B                     	;# 
  7375  061C                     	;# 
  7376  061D                     	;# 
  7377  061E                     	;# 
  7378  068C                     	;# 
  7379  068D                     	;# 
  7380  068E                     	;# 
  7381  068F                     	;# 
  7382  0690                     	;# 
  7383  0691                     	;# 
  7384  0692                     	;# 
  7385  0693                     	;# 
  7386  0694                     	;# 
  7387  070C                     	;# 
  7388  070D                     	;# 
  7389  070E                     	;# 
  7390  070F                     	;# 
  7391  0710                     	;# 
  7392  0711                     	;# 
  7393  0712                     	;# 
  7394  0713                     	;# 
  7395  0714                     	;# 
  7396  0716                     	;# 
  7397  0717                     	;# 
  7398  0718                     	;# 
  7399  0719                     	;# 
  7400  071A                     	;# 
  7401  071B                     	;# 
  7402  071C                     	;# 
  7403  071D                     	;# 
  7404  071E                     	;# 
  7405  0796                     	;# 
  7406  0797                     	;# 
  7407  0798                     	;# 
  7408  0799                     	;# 
  7409  079A                     	;# 
  7410  079B                     	;# 
  7411  079C                     	;# 
  7412  079D                     	;# 
  7413  080C                     	;# 
  7414  080D                     	;# 
  7415  080E                     	;# 
  7416  080F                     	;# 
  7417  0810                     	;# 
  7418  0811                     	;# 
  7419  0812                     	;# 
  7420  0813                     	;# 
  7421  0814                     	;# 
  7422  081A                     	;# 
  7423  081A                     	;# 
  7424  081B                     	;# 
  7425  081C                     	;# 
  7426  081C                     	;# 
  7427  081D                     	;# 
  7428  081E                     	;# 
  7429  081F                     	;# 
  7430  088C                     	;# 
  7431  088D                     	;# 
  7432  088E                     	;# 
  7433  088F                     	;# 
  7434  0890                     	;# 
  7435  0891                     	;# 
  7436  0892                     	;# 
  7437  0893                     	;# 
  7438  0895                     	;# 
  7439  0896                     	;# 
  7440  0897                     	;# 
  7441  0898                     	;# 
  7442  0899                     	;# 
  7443  089A                     	;# 
  7444  089B                     	;# 
  7445  090C                     	;# 
  7446  090E                     	;# 
  7447  090F                     	;# 
  7448  091F                     	;# 
  7449  098F                     	;# 
  7450  098F                     	;# 
  7451  0990                     	;# 
  7452  0991                     	;# 
  7453  0992                     	;# 
  7454  0993                     	;# 
  7455  0994                     	;# 
  7456  0995                     	;# 
  7457  0996                     	;# 
  7458  0997                     	;# 
  7459  0A19                     	;# 
  7460  0A19                     	;# 
  7461  0A1A                     	;# 
  7462  0A1A                     	;# 
  7463  0A1B                     	;# 
  7464  0A1B                     	;# 
  7465  0A1B                     	;# 
  7466  0A1C                     	;# 
  7467  0A1C                     	;# 
  7468  0A1D                     	;# 
  7469  0A1D                     	;# 
  7470  0A1E                     	;# 
  7471  0A1E                     	;# 
  7472  0A1F                     	;# 
  7473  0A1F                     	;# 
  7474  0A1F                     	;# 
  7475  1E0F                     	;# 
  7476  1E10                     	;# 
  7477  1E11                     	;# 
  7478  1E12                     	;# 
  7479  1E13                     	;# 
  7480  1E14                     	;# 
  7481  1E15                     	;# 
  7482  1E16                     	;# 
  7483  1E17                     	;# 
  7484  1E18                     	;# 
  7485  1E19                     	;# 
  7486  1E1A                     	;# 
  7487  1E1B                     	;# 
  7488  1E1C                     	;# 
  7489  1E1D                     	;# 
  7490  1E1E                     	;# 
  7491  1E1F                     	;# 
  7492  1E20                     	;# 
  7493  1E21                     	;# 
  7494  1E22                     	;# 
  7495  1E23                     	;# 
  7496  1E24                     	;# 
  7497  1E25                     	;# 
  7498  1E26                     	;# 
  7499  1E27                     	;# 
  7500  1E28                     	;# 
  7501  1E29                     	;# 
  7502  1E2A                     	;# 
  7503  1E2B                     	;# 
  7504  1E2C                     	;# 
  7505  1E2D                     	;# 
  7506  1E2E                     	;# 
  7507  1E2F                     	;# 
  7508  1E30                     	;# 
  7509  1E31                     	;# 
  7510  1E32                     	;# 
  7511  1E33                     	;# 
  7512  1E34                     	;# 
  7513  1E35                     	;# 
  7514  1E36                     	;# 
  7515  1E37                     	;# 
  7516  1E8F                     	;# 
  7517  1E90                     	;# 
  7518  1E91                     	;# 
  7519  1E92                     	;# 
  7520  1E93                     	;# 
  7521  1E94                     	;# 
  7522  1E95                     	;# 
  7523  1E96                     	;# 
  7524  1E97                     	;# 
  7525  1E9C                     	;# 
  7526  1E9D                     	;# 
  7527  1E9E                     	;# 
  7528  1EA1                     	;# 
  7529  1EA2                     	;# 
  7530  1EA3                     	;# 
  7531  1EA4                     	;# 
  7532  1EA5                     	;# 
  7533  1EA9                     	;# 
  7534  1EAA                     	;# 
  7535  1EAB                     	;# 
  7536  1EAC                     	;# 
  7537  1EB1                     	;# 
  7538  1EB2                     	;# 
  7539  1EB3                     	;# 
  7540  1EB8                     	;# 
  7541  1EB9                     	;# 
  7542  1EBA                     	;# 
  7543  1EBB                     	;# 
  7544  1EBC                     	;# 
  7545  1EBD                     	;# 
  7546  1EBE                     	;# 
  7547  1EC3                     	;# 
  7548  1EC5                     	;# 
  7549  1EC6                     	;# 
  7550  1EC7                     	;# 
  7551  1EC8                     	;# 
  7552  1EC9                     	;# 
  7553  1ECA                     	;# 
  7554  1ECB                     	;# 
  7555  1ECB                     	;# 
  7556  1ECB                     	;# 
  7557  1ECC                     	;# 
  7558  1ECC                     	;# 
  7559  1ECC                     	;# 
  7560  1ECD                     	;# 
  7561  1ECD                     	;# 
  7562  1ECE                     	;# 
  7563  1ECE                     	;# 
  7564  1F10                     	;# 
  7565  1F11                     	;# 
  7566  1F12                     	;# 
  7567  1F13                     	;# 
  7568  1F14                     	;# 
  7569  1F15                     	;# 
  7570  1F16                     	;# 
  7571  1F17                     	;# 
  7572  1F18                     	;# 
  7573  1F19                     	;# 
  7574  1F1A                     	;# 
  7575  1F1B                     	;# 
  7576  1F1C                     	;# 
  7577  1F1D                     	;# 
  7578  1F1E                     	;# 
  7579  1F1F                     	;# 
  7580  1F20                     	;# 
  7581  1F21                     	;# 
  7582  1F22                     	;# 
  7583  1F23                     	;# 
  7584  1F24                     	;# 
  7585  1F25                     	;# 
  7586  1F26                     	;# 
  7587  1F27                     	;# 
  7588  1F38                     	;# 
  7589  1F39                     	;# 
  7590  1F3A                     	;# 
  7591  1F3B                     	;# 
  7592  1F3C                     	;# 
  7593  1F3D                     	;# 
  7594  1F3E                     	;# 
  7595  1F3F                     	;# 
  7596  1F43                     	;# 
  7597  1F44                     	;# 
  7598  1F45                     	;# 
  7599  1F46                     	;# 
  7600  1F47                     	;# 
  7601  1F48                     	;# 
  7602  1F49                     	;# 
  7603  1F4A                     	;# 
  7604  1F4E                     	;# 
  7605  1F4F                     	;# 
  7606  1F50                     	;# 
  7607  1F51                     	;# 
  7608  1F52                     	;# 
  7609  1F53                     	;# 
  7610  1F54                     	;# 
  7611  1F55                     	;# 
  7612  1F65                     	;# 
  7613  1F66                     	;# 
  7614  1F67                     	;# 
  7615  1F68                     	;# 
  7616  1F69                     	;# 
  7617  1F6A                     	;# 
  7618  1F6B                     	;# 
  7619  1FE4                     	;# 
  7620  1FE5                     	;# 
  7621  1FE6                     	;# 
  7622  1FE7                     	;# 
  7623  1FE8                     	;# 
  7624  1FE8                     	;# 
  7625  1FE9                     	;# 
  7626  1FEA                     	;# 
  7627  1FEB                     	;# 
  7628  1FED                     	;# 
  7629  1FEE                     	;# 
  7630  1FEF                     	;# 
  7631  0000                     	;# 
  7632  0001                     	;# 
  7633  0002                     	;# 
  7634  0003                     	;# 
  7635  0004                     	;# 
  7636  0005                     	;# 
  7637  0006                     	;# 
  7638  0007                     	;# 
  7639  0008                     	;# 
  7640  0009                     	;# 
  7641  000A                     	;# 
  7642  000B                     	;# 
  7643  000C                     	;# 
  7644  000D                     	;# 
  7645  000E                     	;# 
  7646  0010                     	;# 
  7647  0012                     	;# 
  7648  0013                     	;# 
  7649  0014                     	;# 
  7650  0016                     	;# 
  7651  0018                     	;# 
  7652  0019                     	;# 
  7653  001A                     	;# 
  7654  001C                     	;# 
  7655  008C                     	;# 
  7656  008C                     	;# 
  7657  008D                     	;# 
  7658  008E                     	;# 
  7659  008E                     	;# 
  7660  008F                     	;# 
  7661  0090                     	;# 
  7662  0090                     	;# 
  7663  0091                     	;# 
  7664  0092                     	;# 
  7665  0092                     	;# 
  7666  0093                     	;# 
  7667  0094                     	;# 
  7668  0094                     	;# 
  7669  0095                     	;# 
  7670  0096                     	;# 
  7671  0096                     	;# 
  7672  0097                     	;# 
  7673  0098                     	;# 
  7674  0099                     	;# 
  7675  009A                     	;# 
  7676  009B                     	;# 
  7677  009B                     	;# 
  7678  009C                     	;# 
  7679  009D                     	;# 
  7680  009D                     	;# 
  7681  009E                     	;# 
  7682  009F                     	;# 
  7683  010C                     	;# 
  7684  010C                     	;# 
  7685  010D                     	;# 
  7686  010E                     	;# 
  7687  010F                     	;# 
  7688  010F                     	;# 
  7689  0110                     	;# 
  7690  0111                     	;# 
  7691  0112                     	;# 
  7692  0113                     	;# 
  7693  0114                     	;# 
  7694  0115                     	;# 
  7695  0116                     	;# 
  7696  0117                     	;# 
  7697  0118                     	;# 
  7698  0119                     	;# 
  7699  0119                     	;# 
  7700  0119                     	;# 
  7701  011A                     	;# 
  7702  011A                     	;# 
  7703  011A                     	;# 
  7704  011B                     	;# 
  7705  011B                     	;# 
  7706  011B                     	;# 
  7707  011B                     	;# 
  7708  011B                     	;# 
  7709  011C                     	;# 
  7710  011C                     	;# 
  7711  011C                     	;# 
  7712  011D                     	;# 
  7713  011D                     	;# 
  7714  011D                     	;# 
  7715  011E                     	;# 
  7716  011E                     	;# 
  7717  011E                     	;# 
  7718  011F                     	;# 
  7719  011F                     	;# 
  7720  011F                     	;# 
  7721  011F                     	;# 
  7722  011F                     	;# 
  7723  018C                     	;# 
  7724  018D                     	;# 
  7725  018E                     	;# 
  7726  018F                     	;# 
  7727  0190                     	;# 
  7728  0191                     	;# 
  7729  0192                     	;# 
  7730  0196                     	;# 
  7731  0197                     	;# 
  7732  0198                     	;# 
  7733  0199                     	;# 
  7734  019A                     	;# 
  7735  019B                     	;# 
  7736  019C                     	;# 
  7737  020C                     	;# 
  7738  020D                     	;# 
  7739  020E                     	;# 
  7740  020E                     	;# 
  7741  020F                     	;# 
  7742  020F                     	;# 
  7743  0210                     	;# 
  7744  0210                     	;# 
  7745  0211                     	;# 
  7746  0211                     	;# 
  7747  0212                     	;# 
  7748  0213                     	;# 
  7749  0214                     	;# 
  7750  0214                     	;# 
  7751  0215                     	;# 
  7752  0215                     	;# 
  7753  0216                     	;# 
  7754  0216                     	;# 
  7755  0217                     	;# 
  7756  0217                     	;# 
  7757  0218                     	;# 
  7758  0219                     	;# 
  7759  021A                     	;# 
  7760  021A                     	;# 
  7761  021B                     	;# 
  7762  021B                     	;# 
  7763  021C                     	;# 
  7764  021C                     	;# 
  7765  021D                     	;# 
  7766  021D                     	;# 
  7767  021E                     	;# 
  7768  021F                     	;# 
  7769  028C                     	;# 
  7770  028C                     	;# 
  7771  028D                     	;# 
  7772  028D                     	;# 
  7773  028E                     	;# 
  7774  028F                     	;# 
  7775  0290                     	;# 
  7776  0291                     	;# 
  7777  0292                     	;# 
  7778  0292                     	;# 
  7779  0293                     	;# 
  7780  0293                     	;# 
  7781  0294                     	;# 
  7782  0295                     	;# 
  7783  0296                     	;# 
  7784  0297                     	;# 
  7785  0298                     	;# 
  7786  0298                     	;# 
  7787  0299                     	;# 
  7788  0299                     	;# 
  7789  029A                     	;# 
  7790  029B                     	;# 
  7791  029C                     	;# 
  7792  029D                     	;# 
  7793  029F                     	;# 
  7794  030C                     	;# 
  7795  030C                     	;# 
  7796  030D                     	;# 
  7797  030E                     	;# 
  7798  030F                     	;# 
  7799  0310                     	;# 
  7800  0310                     	;# 
  7801  0311                     	;# 
  7802  0312                     	;# 
  7803  0313                     	;# 
  7804  0314                     	;# 
  7805  0314                     	;# 
  7806  0315                     	;# 
  7807  0316                     	;# 
  7808  0317                     	;# 
  7809  0318                     	;# 
  7810  0318                     	;# 
  7811  0319                     	;# 
  7812  031A                     	;# 
  7813  031B                     	;# 
  7814  031C                     	;# 
  7815  031C                     	;# 
  7816  031D                     	;# 
  7817  031E                     	;# 
  7818  031F                     	;# 
  7819  038C                     	;# 
  7820  038C                     	;# 
  7821  038D                     	;# 
  7822  038E                     	;# 
  7823  0390                     	;# 
  7824  0390                     	;# 
  7825  0391                     	;# 
  7826  0392                     	;# 
  7827  048C                     	;# 
  7828  048C                     	;# 
  7829  048D                     	;# 
  7830  048E                     	;# 
  7831  048F                     	;# 
  7832  048F                     	;# 
  7833  0490                     	;# 
  7834  0491                     	;# 
  7835  0492                     	;# 
  7836  0492                     	;# 
  7837  0493                     	;# 
  7838  0494                     	;# 
  7839  0495                     	;# 
  7840  0495                     	;# 
  7841  0496                     	;# 
  7842  0497                     	;# 
  7843  0498                     	;# 
  7844  0499                     	;# 
  7845  049A                     	;# 
  7846  049B                     	;# 
  7847  049C                     	;# 
  7848  049D                     	;# 
  7849  050C                     	;# 
  7850  050C                     	;# 
  7851  050D                     	;# 
  7852  050E                     	;# 
  7853  050F                     	;# 
  7854  050F                     	;# 
  7855  0510                     	;# 
  7856  0511                     	;# 
  7857  0512                     	;# 
  7858  0512                     	;# 
  7859  0513                     	;# 
  7860  0514                     	;# 
  7861  0515                     	;# 
  7862  0515                     	;# 
  7863  0516                     	;# 
  7864  0517                     	;# 
  7865  0518                     	;# 
  7866  0519                     	;# 
  7867  051A                     	;# 
  7868  051B                     	;# 
  7869  051C                     	;# 
  7870  051D                     	;# 
  7871  058C                     	;# 
  7872  058C                     	;# 
  7873  058D                     	;# 
  7874  058E                     	;# 
  7875  058F                     	;# 
  7876  058F                     	;# 
  7877  0590                     	;# 
  7878  0591                     	;# 
  7879  0592                     	;# 
  7880  0593                     	;# 
  7881  059C                     	;# 
  7882  059C                     	;# 
  7883  059D                     	;# 
  7884  059D                     	;# 
  7885  059E                     	;# 
  7886  059F                     	;# 
  7887  060C                     	;# 
  7888  060C                     	;# 
  7889  060D                     	;# 
  7890  060D                     	;# 
  7891  060E                     	;# 
  7892  060F                     	;# 
  7893  0610                     	;# 
  7894  0611                     	;# 
  7895  0612                     	;# 
  7896  0613                     	;# 
  7897  0614                     	;# 
  7898  0616                     	;# 
  7899  0616                     	;# 
  7900  0617                     	;# 
  7901  0617                     	;# 
  7902  0618                     	;# 
  7903  0619                     	;# 
  7904  061A                     	;# 
  7905  061B                     	;# 
  7906  061C                     	;# 
  7907  061D                     	;# 
  7908  061E                     	;# 
  7909  068C                     	;# 
  7910  068D                     	;# 
  7911  068E                     	;# 
  7912  068F                     	;# 
  7913  0690                     	;# 
  7914  0691                     	;# 
  7915  0692                     	;# 
  7916  0693                     	;# 
  7917  0694                     	;# 
  7918  070C                     	;# 
  7919  070D                     	;# 
  7920  070E                     	;# 
  7921  070F                     	;# 
  7922  0710                     	;# 
  7923  0711                     	;# 
  7924  0712                     	;# 
  7925  0713                     	;# 
  7926  0714                     	;# 
  7927  0716                     	;# 
  7928  0717                     	;# 
  7929  0718                     	;# 
  7930  0719                     	;# 
  7931  071A                     	;# 
  7932  071B                     	;# 
  7933  071C                     	;# 
  7934  071D                     	;# 
  7935  071E                     	;# 
  7936  0796                     	;# 
  7937  0797                     	;# 
  7938  0798                     	;# 
  7939  0799                     	;# 
  7940  079A                     	;# 
  7941  079B                     	;# 
  7942  079C                     	;# 
  7943  079D                     	;# 
  7944  080C                     	;# 
  7945  080D                     	;# 
  7946  080E                     	;# 
  7947  080F                     	;# 
  7948  0810                     	;# 
  7949  0811                     	;# 
  7950  0812                     	;# 
  7951  0813                     	;# 
  7952  0814                     	;# 
  7953  081A                     	;# 
  7954  081A                     	;# 
  7955  081B                     	;# 
  7956  081C                     	;# 
  7957  081C                     	;# 
  7958  081D                     	;# 
  7959  081E                     	;# 
  7960  081F                     	;# 
  7961  088C                     	;# 
  7962  088D                     	;# 
  7963  088E                     	;# 
  7964  088F                     	;# 
  7965  0890                     	;# 
  7966  0891                     	;# 
  7967  0892                     	;# 
  7968  0893                     	;# 
  7969  0895                     	;# 
  7970  0896                     	;# 
  7971  0897                     	;# 
  7972  0898                     	;# 
  7973  0899                     	;# 
  7974  089A                     	;# 
  7975  089B                     	;# 
  7976  090C                     	;# 
  7977  090E                     	;# 
  7978  090F                     	;# 
  7979  091F                     	;# 
  7980  098F                     	;# 
  7981  098F                     	;# 
  7982  0990                     	;# 
  7983  0991                     	;# 
  7984  0992                     	;# 
  7985  0993                     	;# 
  7986  0994                     	;# 
  7987  0995                     	;# 
  7988  0996                     	;# 
  7989  0997                     	;# 
  7990  0A19                     	;# 
  7991  0A19                     	;# 
  7992  0A1A                     	;# 
  7993  0A1A                     	;# 
  7994  0A1B                     	;# 
  7995  0A1B                     	;# 
  7996  0A1B                     	;# 
  7997  0A1C                     	;# 
  7998  0A1C                     	;# 
  7999  0A1D                     	;# 
  8000  0A1D                     	;# 
  8001  0A1E                     	;# 
  8002  0A1E                     	;# 
  8003  0A1F                     	;# 
  8004  0A1F                     	;# 
  8005  0A1F                     	;# 
  8006  1E0F                     	;# 
  8007  1E10                     	;# 
  8008  1E11                     	;# 
  8009  1E12                     	;# 
  8010  1E13                     	;# 
  8011  1E14                     	;# 
  8012  1E15                     	;# 
  8013  1E16                     	;# 
  8014  1E17                     	;# 
  8015  1E18                     	;# 
  8016  1E19                     	;# 
  8017  1E1A                     	;# 
  8018  1E1B                     	;# 
  8019  1E1C                     	;# 
  8020  1E1D                     	;# 
  8021  1E1E                     	;# 
  8022  1E1F                     	;# 
  8023  1E20                     	;# 
  8024  1E21                     	;# 
  8025  1E22                     	;# 
  8026  1E23                     	;# 
  8027  1E24                     	;# 
  8028  1E25                     	;# 
  8029  1E26                     	;# 
  8030  1E27                     	;# 
  8031  1E28                     	;# 
  8032  1E29                     	;# 
  8033  1E2A                     	;# 
  8034  1E2B                     	;# 
  8035  1E2C                     	;# 
  8036  1E2D                     	;# 
  8037  1E2E                     	;# 
  8038  1E2F                     	;# 
  8039  1E30                     	;# 
  8040  1E31                     	;# 
  8041  1E32                     	;# 
  8042  1E33                     	;# 
  8043  1E34                     	;# 
  8044  1E35                     	;# 
  8045  1E36                     	;# 
  8046  1E37                     	;# 
  8047  1E8F                     	;# 
  8048  1E90                     	;# 
  8049  1E91                     	;# 
  8050  1E92                     	;# 
  8051  1E93                     	;# 
  8052  1E94                     	;# 
  8053  1E95                     	;# 
  8054  1E96                     	;# 
  8055  1E97                     	;# 
  8056  1E9C                     	;# 
  8057  1E9D                     	;# 
  8058  1E9E                     	;# 
  8059  1EA1                     	;# 
  8060  1EA2                     	;# 
  8061  1EA3                     	;# 
  8062  1EA4                     	;# 
  8063  1EA5                     	;# 
  8064  1EA9                     	;# 
  8065  1EAA                     	;# 
  8066  1EAB                     	;# 
  8067  1EAC                     	;# 
  8068  1EB1                     	;# 
  8069  1EB2                     	;# 
  8070  1EB3                     	;# 
  8071  1EB8                     	;# 
  8072  1EB9                     	;# 
  8073  1EBA                     	;# 
  8074  1EBB                     	;# 
  8075  1EBC                     	;# 
  8076  1EBD                     	;# 
  8077  1EBE                     	;# 
  8078  1EC3                     	;# 
  8079  1EC5                     	;# 
  8080  1EC6                     	;# 
  8081  1EC7                     	;# 
  8082  1EC8                     	;# 
  8083  1EC9                     	;# 
  8084  1ECA                     	;# 
  8085  1ECB                     	;# 
  8086  1ECB                     	;# 
  8087  1ECB                     	;# 
  8088  1ECC                     	;# 
  8089  1ECC                     	;# 
  8090  1ECC                     	;# 
  8091  1ECD                     	;# 
  8092  1ECD                     	;# 
  8093  1ECE                     	;# 
  8094  1ECE                     	;# 
  8095  1F10                     	;# 
  8096  1F11                     	;# 
  8097  1F12                     	;# 
  8098  1F13                     	;# 
  8099  1F14                     	;# 
  8100  1F15                     	;# 
  8101  1F16                     	;# 
  8102  1F17                     	;# 
  8103  1F18                     	;# 
  8104  1F19                     	;# 
  8105  1F1A                     	;# 
  8106  1F1B                     	;# 
  8107  1F1C                     	;# 
  8108  1F1D                     	;# 
  8109  1F1E                     	;# 
  8110  1F1F                     	;# 
  8111  1F20                     	;# 
  8112  1F21                     	;# 
  8113  1F22                     	;# 
  8114  1F23                     	;# 
  8115  1F24                     	;# 
  8116  1F25                     	;# 
  8117  1F26                     	;# 
  8118  1F27                     	;# 
  8119  1F38                     	;# 
  8120  1F39                     	;# 
  8121  1F3A                     	;# 
  8122  1F3B                     	;# 
  8123  1F3C                     	;# 
  8124  1F3D                     	;# 
  8125  1F3E                     	;# 
  8126  1F3F                     	;# 
  8127  1F43                     	;# 
  8128  1F44                     	;# 
  8129  1F45                     	;# 
  8130  1F46                     	;# 
  8131  1F47                     	;# 
  8132  1F48                     	;# 
  8133  1F49                     	;# 
  8134  1F4A                     	;# 
  8135  1F4E                     	;# 
  8136  1F4F                     	;# 
  8137  1F50                     	;# 
  8138  1F51                     	;# 
  8139  1F52                     	;# 
  8140  1F53                     	;# 
  8141  1F54                     	;# 
  8142  1F55                     	;# 
  8143  1F65                     	;# 
  8144  1F66                     	;# 
  8145  1F67                     	;# 
  8146  1F68                     	;# 
  8147  1F69                     	;# 
  8148  1F6A                     	;# 
  8149  1F6B                     	;# 
  8150  1FE4                     	;# 
  8151  1FE5                     	;# 
  8152  1FE6                     	;# 
  8153  1FE7                     	;# 
  8154  1FE8                     	;# 
  8155  1FE8                     	;# 
  8156  1FE9                     	;# 
  8157  1FEA                     	;# 
  8158  1FEB                     	;# 
  8159  1FED                     	;# 
  8160  1FEE                     	;# 
  8161  1FEF                     	;_waveform
  8162                           
  8163                           	psect	stringtext1
  8164  1000                     __pstringtext1:
  8165  1000                     _mux:
  8166  1000  3400               	retlw	0
  8167  1001  3410               	retlw	16
  8168  1002  3411               	retlw	17
  8169  1003  3412               	retlw	18
  8170  1004  3413               	retlw	19
  8171  1005  3414               	retlw	20
  8172  1006  3415               	retlw	21
  8173  1007  3416               	retlw	22
  8174  1008  3417               	retlw	23
  8175  1009  3418               	retlw	24
  8176  100A  3419               	retlw	25
  8177  100B  341A               	retlw	26
  8178  100C  341B               	retlw	27
  8179  100D  341C               	retlw	28
  8180  100E  341D               	retlw	29
  8181  100F  341E               	retlw	30
  8182  1010  341F               	retlw	31
  8183  1011  3420               	retlw	32
  8184  1012  3421               	retlw	33
  8185  1013  3422               	retlw	34
  8186  1014  3423               	retlw	35
  8187  1015  3424               	retlw	36
  8188  1016  3425               	retlw	37
  8189  1017  3426               	retlw	38
  8190  1018  3427               	retlw	39
  8191  1019  3428               	retlw	40
  8192  101A  3429               	retlw	41
  8193  101B  342A               	retlw	42
  8194  101C  342B               	retlw	43
  8195  101D  342C               	retlw	44
  8196  101E  342D               	retlw	45
  8197  101F  342E               	retlw	46
  8198  1020  342F               	retlw	47
  8199  1021                     __end_of_mux:
  8200                           
  8201                           	psect	nvBANK0
  8202  0065                     __pnvBANK0:
  8203  0065                     _TMR0_InterruptHandler:
  8204  0065                     	ds	2
  8205  0067                     _timer0ReloadVal16bit:
  8206  0067                     	ds	2
  8207  0069                     _timer1ReloadVal:
  8208  0069                     	ds	2
  8209  006B                     _EUSART1_RxDefaultInterruptHandler:
  8210  006B                     	ds	2
  8211  006D                     _EUSART1_TxDefaultInterruptHandler:
  8212  006D                     	ds	2
  8213  006F                     _eusart1TxBufferRemaining:
  8214  006F                     	ds	1
  8215                           
  8216                           	psect	nvBANK1
  8217  00C0                     __pnvBANK1:
  8218  00C0                     _EUSART1_ErrorHandler:
  8219  00C0                     	ds	2
  8220  00C2                     _EUSART1_OverrunErrorHandler:
  8221  00C2                     	ds	2
  8222  00C4                     _EUSART1_FramingErrorHandler:
  8223  00C4                     	ds	2
  8224  00C6                     _NMES_freq_multiplier:
  8225  00C6                     	ds	1
  8226  0003                     _STATUSbits	set	3
  8227  0018                     _LATAbits	set	24
  8228  000B                     _INTCONbits	set	11
  8229  0014                     _TRISC	set	20
  8230  0013                     _TRISB	set	19
  8231  0012                     _TRISA	set	18
  8232  0016                     _TRISE	set	22
  8233  001A                     _LATC	set	26
  8234  0019                     _LATB	set	25
  8235  0018                     _LATA	set	24
  8236  001C                     _LATE	set	28
  8237  009D                     _ADRESL	set	157
  8238  009E                     _ADRESH	set	158
  8239  009F                     _ADPCH	set	159
  8240  009A                     _ADRPT	set	154
  8241  0098                     _ADACCU	set	152
  8242  0093                     _ADSTPTH	set	147
  8243  0092                     _ADSTPTL	set	146
  8244  008F                     _ADUTHH	set	143
  8245  008E                     _ADUTHL	set	142
  8246  008D                     _ADLTHH	set	141
  8247  008C                     _ADLTHL	set	140
  8248  0111                     _ADCON0bits	set	273
  8249  0111                     _ADCON0	set	273
  8250  0118                     _ADCLK	set	280
  8251  0117                     _ADACT	set	279
  8252  0116                     _ADREF	set	278
  8253  0115                     _ADSTAT	set	277
  8254  0114                     _ADCON3	set	276
  8255  0113                     _ADCON2	set	275
  8256  0112                     _ADCON1	set	274
  8257  0110                     _ADPREH	set	272
  8258  010F                     _ADPREL	set	271
  8259  010E                     _ADCAP	set	270
  8260  010D                     _ADACQH	set	269
  8261  010C                     _ADACQL	set	268
  8262  0119                     _RC1REG	set	281
  8263  011D                     _RC1STAbits	set	285
  8264  011A                     _TX1REG	set	282
  8265  011C                     _SP1BRGH	set	284
  8266  011B                     _SP1BRGL	set	283
  8267  011E                     _TX1STA	set	286
  8268  011D                     _RC1STA	set	285
  8269  011F                     _BAUD1CON	set	287
  8270  020E                     _T1CONbits	set	526
  8271  020E                     _T1CON	set	526
  8272  020C                     _TMR1L	set	524
  8273  020D                     _TMR1H	set	525
  8274  0211                     _T1CLK	set	529
  8275  0210                     _T1GATE	set	528
  8276  020F                     _T1GCON	set	527
  8277  059E                     _T0CON0bits	set	1438
  8278  059E                     _T0CON0	set	1438
  8279  059C                     _TMR0L	set	1436
  8280  059D                     _TMR0H	set	1437
  8281  059F                     _T0CON1	set	1439
  8282  070F                     _PIR3bits	set	1807
  8283  0716                     _PIE0bits	set	1814
  8284  070C                     _PIR0bits	set	1804
  8285  0710                     _PIR4bits	set	1808
  8286  0719                     _PIE3bits	set	1817
  8287  3880                     _TMR1IF	set	14464
  8288  079D                     _PMD7	set	1949
  8289  079C                     _PMD6	set	1948
  8290  079B                     _PMD5	set	1947
  8291  079A                     _PMD4	set	1946
  8292  0799                     _PMD3	set	1945
  8293  0798                     _PMD2	set	1944
  8294  0797                     _PMD1	set	1943
  8295  0796                     _PMD0	set	1942
  8296  081F                     _NVMCON2	set	2079
  8297  081D                     _NVMDATH	set	2077
  8298  081C                     _NVMDATL	set	2076
  8299  081B                     _NVMADRH	set	2075
  8300  081A                     _NVMADRL	set	2074
  8301  081E                     _NVMCON1bits	set	2078
  8302  0892                     _OSCTUNE	set	2194
  8303  0890                     _OSCSTAT	set	2192
  8304  0893                     _OSCFRQ	set	2195
  8305  0891                     _OSCEN	set	2193
  8306  088F                     _OSCCON3	set	2191
  8307  088D                     _OSCCON1	set	2189
  8308  090C                     _FVRCON	set	2316
  8309  090F                     _DAC1CON1	set	2319
  8310  090E                     _DAC1CON0	set	2318
  8311  1ECB                     _RX1DTPPS	set	7883
  8312  1F26                     _RC6PPS	set	7974
  8313  1F52                     _INLVLC	set	8018
  8314  1F47                     _INLVLB	set	8007
  8315  1F3C                     _INLVLA	set	7996
  8316  1F51                     _SLRCONC	set	8017
  8317  1F46                     _SLRCONB	set	8006
  8318  1F3B                     _SLRCONA	set	7995
  8319  1F50                     _ODCONC	set	8016
  8320  1F45                     _ODCONB	set	8005
  8321  1F3A                     _ODCONA	set	7994
  8322  1F66                     _ODCONE	set	8038
  8323  1F4F                     _WPUC	set	8015
  8324  1F39                     _WPUA	set	7993
  8325  1F44                     _WPUB	set	8004
  8326  1F65                     _WPUE	set	8037
  8327  1F38                     _ANSELA	set	7992
  8328  1F43                     _ANSELB	set	8003
  8329  1F4E                     _ANSELC	set	8014
  8330                           
  8331                           	psect	stringtext2
  8332  1021                     __pstringtext2:
  8333  1021                     STR_62:
  8334  1021  3445               	retlw	69	;'E'
  8335  1022  3472               	retlw	114	;'r'
  8336  1023  3472               	retlw	114	;'r'
  8337  1024  346F               	retlw	111	;'o'
  8338  1025  3472               	retlw	114	;'r'
  8339  1026  343A               	retlw	58	;':'
  8340  1027  3420               	retlw	32	;' '
  8341  1028  3463               	retlw	99	;'c'
  8342  1029  3468               	retlw	104	;'h'
  8343  102A  3461               	retlw	97	;'a'
  8344  102B  346E               	retlw	110	;'n'
  8345  102C  346E               	retlw	110	;'n'
  8346  102D  3465               	retlw	101	;'e'
  8347  102E  346C               	retlw	108	;'l'
  8348  102F  3431               	retlw	49	;'1'
  8349  1030  3420               	retlw	32	;' '
  8350  1031  343D               	retlw	61	;'='
  8351  1032  3420               	retlw	32	;' '
  8352  1033  3463               	retlw	99	;'c'
  8353  1034  3468               	retlw	104	;'h'
  8354  1035  3461               	retlw	97	;'a'
  8355  1036  346E               	retlw	110	;'n'
  8356  1037  346E               	retlw	110	;'n'
  8357  1038  3465               	retlw	101	;'e'
  8358  1039  346C               	retlw	108	;'l'
  8359  103A  3432               	retlw	50	;'2'
  8360  103B  340A               	retlw	10
  8361  103C  3400               	retlw	0
  8362                           
  8363                           	psect	stringtext3
  8364  103D                     __pstringtext3:
  8365  103D                     STR_63:
  8366  103D  3445               	retlw	69	;'E'
  8367  103E  3472               	retlw	114	;'r'
  8368  103F  3472               	retlw	114	;'r'
  8369  1040  346F               	retlw	111	;'o'
  8370  1041  3472               	retlw	114	;'r'
  8371  1042  343A               	retlw	58	;':'
  8372  1043  3420               	retlw	32	;' '
  8373  1044  3463               	retlw	99	;'c'
  8374  1045  3468               	retlw	104	;'h'
  8375  1046  3461               	retlw	97	;'a'
  8376  1047  346E               	retlw	110	;'n'
  8377  1048  346E               	retlw	110	;'n'
  8378  1049  3465               	retlw	101	;'e'
  8379  104A  346C               	retlw	108	;'l'
  8380  104B  3433               	retlw	51	;'3'
  8381  104C  3420               	retlw	32	;' '
  8382  104D  343D               	retlw	61	;'='
  8383  104E  3420               	retlw	32	;' '
  8384  104F  3463               	retlw	99	;'c'
  8385  1050  3468               	retlw	104	;'h'
  8386  1051  3461               	retlw	97	;'a'
  8387  1052  346E               	retlw	110	;'n'
  8388  1053  346E               	retlw	110	;'n'
  8389  1054  3465               	retlw	101	;'e'
  8390  1055  346C               	retlw	108	;'l'
  8391  1056  3434               	retlw	52	;'4'
  8392  1057  340A               	retlw	10
  8393  1058  3400               	retlw	0
  8394                           
  8395                           	psect	stringtext4
  8396  1059                     __pstringtext4:
  8397  1059                     STR_29:
  8398  1059  3450               	retlw	80	;'P'
  8399  105A  3468               	retlw	104	;'h'
  8400  105B  3461               	retlw	97	;'a'
  8401  105C  3473               	retlw	115	;'s'
  8402  105D  3465               	retlw	101	;'e'
  8403  105E  3420               	retlw	32	;' '
  8404  105F  3464               	retlw	100	;'d'
  8405  1060  3475               	retlw	117	;'u'
  8406  1061  3472               	retlw	114	;'r'
  8407  1062  3461               	retlw	97	;'a'
  8408  1063  3474               	retlw	116	;'t'
  8409  1064  3469               	retlw	105	;'i'
  8410  1065  346F               	retlw	111	;'o'
  8411  1066  346E               	retlw	110	;'n'
  8412  1067  3420               	retlw	32	;' '
  8413  1068  3428               	retlw	40	;'('
  8414  1069  3475               	retlw	117	;'u'
  8415  106A  3473               	retlw	115	;'s'
  8416  106B  342F               	retlw	47	;'/'
  8417  106C  3435               	retlw	53	;'5'
  8418  106D  3430               	retlw	48	;'0'
  8419  106E  3429               	retlw	41	;')'
  8420  106F  343A               	retlw	58	;':'
  8421  1070  3420               	retlw	32	;' '
  8422  1071  3400               	retlw	0
  8423                           
  8424                           	psect	stringtext5
  8425  1072                     __pstringtext5:
  8426  1072                     STR_41:
  8427  1072  344E               	retlw	78	;'N'
  8428  1073  3475               	retlw	117	;'u'
  8429  1074  346D               	retlw	109	;'m'
  8430  1075  3462               	retlw	98	;'b'
  8431  1076  3465               	retlw	101	;'e'
  8432  1077  3472               	retlw	114	;'r'
  8433  1078  3420               	retlw	32	;' '
  8434  1079  346F               	retlw	111	;'o'
  8435  107A  3466               	retlw	102	;'f'
  8436  107B  3420               	retlw	32	;' '
  8437  107C  3463               	retlw	99	;'c'
  8438  107D  346F               	retlw	111	;'o'
  8439  107E  346E               	retlw	110	;'n'
  8440  107F  3474               	retlw	116	;'t'
  8441  1080  3472               	retlw	114	;'r'
  8442  1081  3461               	retlw	97	;'a'
  8443  1082  3463               	retlw	99	;'c'
  8444  1083  3474               	retlw	116	;'t'
  8445  1084  3469               	retlw	105	;'i'
  8446  1085  346F               	retlw	111	;'o'
  8447  1086  346E               	retlw	110	;'n'
  8448  1087  3473               	retlw	115	;'s'
  8449  1088  343A               	retlw	58	;':'
  8450  1089  3420               	retlw	32	;' '
  8451  108A  3400               	retlw	0
  8452                           
  8453                           	psect	stringtext6
  8454  108B                     __pstringtext6:
  8455  108B                     STR_39:
  8456  108B  3452               	retlw	82	;'R'
  8457  108C  3461               	retlw	97	;'a'
  8458  108D  346D               	retlw	109	;'m'
  8459  108E  3470               	retlw	112	;'p'
  8460  108F  3420               	retlw	32	;' '
  8461  1090  3464               	retlw	100	;'d'
  8462  1091  346F               	retlw	111	;'o'
  8463  1092  3477               	retlw	119	;'w'
  8464  1093  346E               	retlw	110	;'n'
  8465  1094  3420               	retlw	32	;' '
  8466  1095  3474               	retlw	116	;'t'
  8467  1096  3469               	retlw	105	;'i'
  8468  1097  346D               	retlw	109	;'m'
  8469  1098  3465               	retlw	101	;'e'
  8470  1099  3420               	retlw	32	;' '
  8471  109A  3428               	retlw	40	;'('
  8472  109B  3464               	retlw	100	;'d'
  8473  109C  3473               	retlw	115	;'s'
  8474  109D  3429               	retlw	41	;')'
  8475  109E  3420               	retlw	32	;' '
  8476  109F  343A               	retlw	58	;':'
  8477  10A0  3420               	retlw	32	;' '
  8478  10A1  3400               	retlw	0
  8479                           
  8480                           	psect	stringtext7
  8481  1800                     __pstringtext7:
  8482  1800                     STR_37:
  8483  1800  3452               	retlw	82	;'R'
  8484  1801  3461               	retlw	97	;'a'
  8485  1802  346D               	retlw	109	;'m'
  8486  1803  3470               	retlw	112	;'p'
  8487  1804  3420               	retlw	32	;' '
  8488  1805  3475               	retlw	117	;'u'
  8489  1806  3470               	retlw	112	;'p'
  8490  1807  3420               	retlw	32	;' '
  8491  1808  3474               	retlw	116	;'t'
  8492  1809  3469               	retlw	105	;'i'
  8493  180A  346D               	retlw	109	;'m'
  8494  180B  3465               	retlw	101	;'e'
  8495  180C  3420               	retlw	32	;' '
  8496  180D  3428               	retlw	40	;'('
  8497  180E  3464               	retlw	100	;'d'
  8498  180F  3473               	retlw	115	;'s'
  8499  1810  3429               	retlw	41	;')'
  8500  1811  3420               	retlw	32	;' '
  8501  1812  343A               	retlw	58	;':'
  8502  1813  3420               	retlw	32	;' '
  8503  1814  3400               	retlw	0
  8504                           
  8505                           	psect	stringtext8
  8506  1815                     __pstringtext8:
  8507  1815                     STR_23:
  8508  1815  3441               	retlw	65	;'A'
  8509  1816  346D               	retlw	109	;'m'
  8510  1817  3470               	retlw	112	;'p'
  8511  1818  346C               	retlw	108	;'l'
  8512  1819  3469               	retlw	105	;'i'
  8513  181A  3474               	retlw	116	;'t'
  8514  181B  3475               	retlw	117	;'u'
  8515  181C  3464               	retlw	100	;'d'
  8516  181D  3465               	retlw	101	;'e'
  8517  181E  3431               	retlw	49	;'1'
  8518  181F  3420               	retlw	32	;' '
  8519  1820  3428               	retlw	40	;'('
  8520  1821  346D               	retlw	109	;'m'
  8521  1822  3441               	retlw	65	;'A'
  8522  1823  3429               	retlw	41	;')'
  8523  1824  343A               	retlw	58	;':'
  8524  1825  3420               	retlw	32	;' '
  8525  1826  3400               	retlw	0
  8526                           
  8527                           	psect	stringtext9
  8528  1827                     __pstringtext9:
  8529  1827                     STR_25:
  8530  1827  3441               	retlw	65	;'A'
  8531  1828  346D               	retlw	109	;'m'
  8532  1829  3470               	retlw	112	;'p'
  8533  182A  346C               	retlw	108	;'l'
  8534  182B  3469               	retlw	105	;'i'
  8535  182C  3474               	retlw	116	;'t'
  8536  182D  3475               	retlw	117	;'u'
  8537  182E  3464               	retlw	100	;'d'
  8538  182F  3465               	retlw	101	;'e'
  8539  1830  3432               	retlw	50	;'2'
  8540  1831  3420               	retlw	32	;' '
  8541  1832  3428               	retlw	40	;'('
  8542  1833  346D               	retlw	109	;'m'
  8543  1834  3441               	retlw	65	;'A'
  8544  1835  3429               	retlw	41	;')'
  8545  1836  343A               	retlw	58	;':'
  8546  1837  3420               	retlw	32	;' '
  8547  1838  3400               	retlw	0
  8548                           
  8549                           	psect	stringtext10
  8550  1839                     __pstringtext10:
  8551  1839                     STR_31:
  8552  1839  3453               	retlw	83	;'S'
  8553  183A  3479               	retlw	121	;'y'
  8554  183B  346D               	retlw	109	;'m'
  8555  183C  346D               	retlw	109	;'m'
  8556  183D  3465               	retlw	101	;'e'
  8557  183E  3474               	retlw	116	;'t'
  8558  183F  3472               	retlw	114	;'r'
  8559  1840  3479               	retlw	121	;'y'
  8560  1841  3420               	retlw	32	;' '
  8561  1842  3466               	retlw	102	;'f'
  8562  1843  3461               	retlw	97	;'a'
  8563  1844  3463               	retlw	99	;'c'
  8564  1845  3474               	retlw	116	;'t'
  8565  1846  346F               	retlw	111	;'o'
  8566  1847  3472               	retlw	114	;'r'
  8567  1848  343A               	retlw	58	;':'
  8568  1849  3420               	retlw	32	;' '
  8569  184A  3400               	retlw	0
  8570                           
  8571                           	psect	stringtext11
  8572  184B                     __pstringtext11:
  8573  184B                     STR_27:
  8574  184B  3446               	retlw	70	;'F'
  8575  184C  3472               	retlw	114	;'r'
  8576  184D  3465               	retlw	101	;'e'
  8577  184E  3471               	retlw	113	;'q'
  8578  184F  3475               	retlw	117	;'u'
  8579  1850  3465               	retlw	101	;'e'
  8580  1851  346E               	retlw	110	;'n'
  8581  1852  3463               	retlw	99	;'c'
  8582  1853  3479               	retlw	121	;'y'
  8583  1854  3420               	retlw	32	;' '
  8584  1855  3428               	retlw	40	;'('
  8585  1856  3448               	retlw	72	;'H'
  8586  1857  347A               	retlw	122	;'z'
  8587  1858  3429               	retlw	41	;')'
  8588  1859  343A               	retlw	58	;':'
  8589  185A  3420               	retlw	32	;' '
  8590  185B  3400               	retlw	0
  8591                           
  8592                           	psect	stringtext12
  8593  185C                     __pstringtext12:
  8594  185C                     STR_35:
  8595  185C  344F               	retlw	79	;'O'
  8596  185D  3446               	retlw	70	;'F'
  8597  185E  3446               	retlw	70	;'F'
  8598  185F  3420               	retlw	32	;' '
  8599  1860  3474               	retlw	116	;'t'
  8600  1861  3469               	retlw	105	;'i'
  8601  1862  346D               	retlw	109	;'m'
  8602  1863  3465               	retlw	101	;'e'
  8603  1864  3420               	retlw	32	;' '
  8604  1865  3428               	retlw	40	;'('
  8605  1866  3473               	retlw	115	;'s'
  8606  1867  3429               	retlw	41	;')'
  8607  1868  3420               	retlw	32	;' '
  8608  1869  343A               	retlw	58	;':'
  8609  186A  3420               	retlw	32	;' '
  8610  186B  3400               	retlw	0
  8611                           
  8612                           	psect	stringtext13
  8613  186C                     __pstringtext13:
  8614  186C                     STR_22:
  8615  186C  340A               	retlw	10
  8616  186D  344E               	retlw	78	;'N'
  8617  186E  3445               	retlw	69	;'E'
  8618  186F  344D               	retlw	77	;'M'
  8619  1870  3453               	retlw	83	;'S'
  8620  1871  3420               	retlw	32	;' '
  8621  1872  3470               	retlw	112	;'p'
  8622  1873  3472               	retlw	114	;'r'
  8623  1874  346F               	retlw	111	;'o'
  8624  1875  3467               	retlw	103	;'g'
  8625  1876  3472               	retlw	114	;'r'
  8626  1877  3461               	retlw	97	;'a'
  8627  1878  346D               	retlw	109	;'m'
  8628  1879  340A               	retlw	10
  8629  187A  3400               	retlw	0
  8630                           
  8631                           	psect	stringtext14
  8632  187B                     __pstringtext14:
  8633  187B                     STR_33:
  8634  187B  344F               	retlw	79	;'O'
  8635  187C  344E               	retlw	78	;'N'
  8636  187D  3420               	retlw	32	;' '
  8637  187E  3474               	retlw	116	;'t'
  8638  187F  3469               	retlw	105	;'i'
  8639  1880  346D               	retlw	109	;'m'
  8640  1881  3465               	retlw	101	;'e'
  8641  1882  3420               	retlw	32	;' '
  8642  1883  3428               	retlw	40	;'('
  8643  1884  3473               	retlw	115	;'s'
  8644  1885  3429               	retlw	41	;')'
  8645  1886  3420               	retlw	32	;' '
  8646  1887  343A               	retlw	58	;':'
  8647  1888  3420               	retlw	32	;' '
  8648  1889  3400               	retlw	0
  8649                           
  8650                           	psect	stringtext15
  8651  188A                     __pstringtext15:
  8652  188A                     STR_43:
  8653  188A  3443               	retlw	67	;'C'
  8654  188B  3468               	retlw	104	;'h'
  8655  188C  3461               	retlw	97	;'a'
  8656  188D  346E               	retlw	110	;'n'
  8657  188E  346E               	retlw	110	;'n'
  8658  188F  3465               	retlw	101	;'e'
  8659  1890  346C               	retlw	108	;'l'
  8660  1891  3420               	retlw	32	;' '
  8661  1892  3431               	retlw	49	;'1'
  8662  1893  343A               	retlw	58	;':'
  8663  1894  3420               	retlw	32	;' '
  8664  1895  3400               	retlw	0
  8665                           
  8666                           	psect	stringtext16
  8667  1896                     __pstringtext16:
  8668  1896                     STR_45:
  8669  1896  3443               	retlw	67	;'C'
  8670  1897  3468               	retlw	104	;'h'
  8671  1898  3461               	retlw	97	;'a'
  8672  1899  346E               	retlw	110	;'n'
  8673  189A  346E               	retlw	110	;'n'
  8674  189B  3465               	retlw	101	;'e'
  8675  189C  346C               	retlw	108	;'l'
  8676  189D  3420               	retlw	32	;' '
  8677  189E  3432               	retlw	50	;'2'
  8678  189F  343A               	retlw	58	;':'
  8679  18A0  3420               	retlw	32	;' '
  8680  18A1  3400               	retlw	0
  8681                           
  8682                           	psect	stringtext17
  8683  18A2                     __pstringtext17:
  8684  18A2                     STR_47:
  8685  18A2  3443               	retlw	67	;'C'
  8686  18A3  3468               	retlw	104	;'h'
  8687  18A4  3461               	retlw	97	;'a'
  8688  18A5  346E               	retlw	110	;'n'
  8689  18A6  346E               	retlw	110	;'n'
  8690  18A7  3465               	retlw	101	;'e'
  8691  18A8  346C               	retlw	108	;'l'
  8692  18A9  3420               	retlw	32	;' '
  8693  18AA  3433               	retlw	51	;'3'
  8694  18AB  343A               	retlw	58	;':'
  8695  18AC  3420               	retlw	32	;' '
  8696  18AD  3400               	retlw	0
  8697                           
  8698                           	psect	stringtext18
  8699  18AE                     __pstringtext18:
  8700  18AE                     STR_49:
  8701  18AE  3443               	retlw	67	;'C'
  8702  18AF  3468               	retlw	104	;'h'
  8703  18B0  3461               	retlw	97	;'a'
  8704  18B1  346E               	retlw	110	;'n'
  8705  18B2  346E               	retlw	110	;'n'
  8706  18B3  3465               	retlw	101	;'e'
  8707  18B4  346C               	retlw	108	;'l'
  8708  18B5  3420               	retlw	32	;' '
  8709  18B6  3434               	retlw	52	;'4'
  8710  18B7  343A               	retlw	58	;':'
  8711  18B8  3420               	retlw	32	;' '
  8712  18B9  3400               	retlw	0
  8713                           
  8714                           	psect	stringtext19
  8715  18BA                     __pstringtext19:
  8716  18BA                     STR_5:
  8717  18BA  3441               	retlw	65	;'A'
  8718  18BB  342D               	retlw	45	;'-'
  8719  18BC  3465               	retlw	101	;'e'
  8720  18BD  3472               	retlw	114	;'r'
  8721  18BE  3472               	retlw	114	;'r'
  8722  18BF  3420               	retlw	32	;' '
  8723  18C0  3400               	retlw	0
  8724                           
  8725                           	psect	stringtext20
  8726  18C1                     __pstringtext20:
  8727  18C1                     STR_52:
  8728  18C1  344D               	retlw	77	;'M'
  8729  18C2  342D               	retlw	45	;'-'
  8730  18C3  3465               	retlw	101	;'e'
  8731  18C4  3472               	retlw	114	;'r'
  8732  18C5  3472               	retlw	114	;'r'
  8733  18C6  3420               	retlw	32	;' '
  8734  18C7  3400               	retlw	0
  8735                           
  8736                           	psect	stringtext21
  8737  18C8                     __pstringtext21:
  8738  18C8                     STR_15:
  8739  18C8  344F               	retlw	79	;'O'
  8740  18C9  342D               	retlw	45	;'-'
  8741  18CA  3465               	retlw	101	;'e'
  8742  18CB  3472               	retlw	114	;'r'
  8743  18CC  3472               	retlw	114	;'r'
  8744  18CD  3420               	retlw	32	;' '
  8745  18CE  3400               	retlw	0
  8746                           
  8747                           	psect	stringtext22
  8748  18CF                     __pstringtext22:
  8749  18CF                     STR_56:
  8750  18CF  3451               	retlw	81	;'Q'
  8751  18D0  342D               	retlw	45	;'-'
  8752  18D1  3465               	retlw	101	;'e'
  8753  18D2  3472               	retlw	114	;'r'
  8754  18D3  3472               	retlw	114	;'r'
  8755  18D4  3420               	retlw	32	;' '
  8756  18D5  3400               	retlw	0
  8757                           
  8758                           	psect	stringtext23
  8759  18D6                     __pstringtext23:
  8760  18D6                     STR_21:
  8761  18D6  3452               	retlw	82	;'R'
  8762  18D7  342D               	retlw	45	;'-'
  8763  18D8  3465               	retlw	101	;'e'
  8764  18D9  3472               	retlw	114	;'r'
  8765  18DA  3472               	retlw	114	;'r'
  8766  18DB  3420               	retlw	32	;' '
  8767  18DC  3400               	retlw	0
  8768                           
  8769                           	psect	stringtext24
  8770  18DD                     __pstringtext24:
  8771  18DD                     STR_3:
  8772  18DD  3461               	retlw	97	;'a'
  8773  18DE  342D               	retlw	45	;'-'
  8774  18DF  3465               	retlw	101	;'e'
  8775  18E0  3472               	retlw	114	;'r'
  8776  18E1  3472               	retlw	114	;'r'
  8777  18E2  3420               	retlw	32	;' '
  8778  18E3  3400               	retlw	0
  8779                           
  8780                           	psect	stringtext25
  8781  18E4                     __pstringtext25:
  8782  18E4                     STR_17:
  8783  18E4  3463               	retlw	99	;'c'
  8784  18E5  342D               	retlw	45	;'-'
  8785  18E6  3465               	retlw	101	;'e'
  8786  18E7  3472               	retlw	114	;'r'
  8787  18E8  3472               	retlw	114	;'r'
  8788  18E9  3420               	retlw	32	;' '
  8789  18EA  3400               	retlw	0
  8790                           
  8791                           	psect	stringtext26
  8792  18EB                     __pstringtext26:
  8793  18EB                     STR_9:
  8794  18EB  3464               	retlw	100	;'d'
  8795  18EC  342D               	retlw	45	;'-'
  8796  18ED  3465               	retlw	101	;'e'
  8797  18EE  3472               	retlw	114	;'r'
  8798  18EF  3472               	retlw	114	;'r'
  8799  18F0  3420               	retlw	32	;' '
  8800  18F1  3400               	retlw	0
  8801                           
  8802                           	psect	stringtext27
  8803  18F2                     __pstringtext27:
  8804  18F2                     STR_7:
  8805  18F2  3466               	retlw	102	;'f'
  8806  18F3  342D               	retlw	45	;'-'
  8807  18F4  3465               	retlw	101	;'e'
  8808  18F5  3472               	retlw	114	;'r'
  8809  18F6  3472               	retlw	114	;'r'
  8810  18F7  3420               	retlw	32	;' '
  8811  18F8  3400               	retlw	0
  8812                           
  8813                           	psect	stringtext28
  8814  18F9                     __pstringtext28:
  8815  18F9                     STR_11:
  8816  18F9  346B               	retlw	107	;'k'
  8817  18FA  342D               	retlw	45	;'-'
  8818  18FB  3465               	retlw	101	;'e'
  8819  18FC  3472               	retlw	114	;'r'
  8820  18FD  3472               	retlw	114	;'r'
  8821  18FE  3420               	retlw	32	;' '
  8822  18FF  3400               	retlw	0
  8823                           
  8824                           	psect	stringtext29
  8825  1900                     __pstringtext29:
  8826  1900                     STR_54:
  8827  1900  346D               	retlw	109	;'m'
  8828  1901  342D               	retlw	45	;'-'
  8829  1902  3465               	retlw	101	;'e'
  8830  1903  3472               	retlw	114	;'r'
  8831  1904  3472               	retlw	114	;'r'
  8832  1905  3420               	retlw	32	;' '
  8833  1906  3400               	retlw	0
  8834                           
  8835                           	psect	stringtext30
  8836  1907                     __pstringtext30:
  8837  1907                     STR_13:
  8838  1907  346F               	retlw	111	;'o'
  8839  1908  342D               	retlw	45	;'-'
  8840  1909  3465               	retlw	101	;'e'
  8841  190A  3472               	retlw	114	;'r'
  8842  190B  3472               	retlw	114	;'r'
  8843  190C  3420               	retlw	32	;' '
  8844  190D  3400               	retlw	0
  8845                           
  8846                           	psect	stringtext31
  8847  190E                     __pstringtext31:
  8848  190E                     STR_58:
  8849  190E  3471               	retlw	113	;'q'
  8850  190F  342D               	retlw	45	;'-'
  8851  1910  3465               	retlw	101	;'e'
  8852  1911  3472               	retlw	114	;'r'
  8853  1912  3472               	retlw	114	;'r'
  8854  1913  3420               	retlw	32	;' '
  8855  1914  3400               	retlw	0
  8856                           
  8857                           	psect	stringtext32
  8858  1915                     __pstringtext32:
  8859  1915                     STR_19:
  8860  1915  3472               	retlw	114	;'r'
  8861  1916  342D               	retlw	45	;'-'
  8862  1917  3465               	retlw	101	;'e'
  8863  1918  3472               	retlw	114	;'r'
  8864  1919  3472               	retlw	114	;'r'
  8865  191A  3420               	retlw	32	;' '
  8866  191B  3400               	retlw	0
  8867                           
  8868                           	psect	stringtext33
  8869  191C                     __pstringtext33:
  8870  191C                     STR_4:
  8871  191C  3441               	retlw	65	;'A'
  8872  191D  342D               	retlw	45	;'-'
  8873  191E  346F               	retlw	111	;'o'
  8874  191F  346B               	retlw	107	;'k'
  8875  1920  3420               	retlw	32	;' '
  8876  1921  3400               	retlw	0
  8877                           
  8878                           	psect	stringtext34
  8879  1922                     __pstringtext34:
  8880  1922                     STR_51:
  8881  1922  344D               	retlw	77	;'M'
  8882  1923  342D               	retlw	45	;'-'
  8883  1924  346F               	retlw	111	;'o'
  8884  1925  346B               	retlw	107	;'k'
  8885  1926  3420               	retlw	32	;' '
  8886  1927  3400               	retlw	0
  8887                           
  8888                           	psect	stringtext35
  8889  1928                     __pstringtext35:
  8890  1928                     STR_64:
  8891  1928  344E               	retlw	78	;'N'
  8892  1929  342D               	retlw	45	;'-'
  8893  192A  346F               	retlw	111	;'o'
  8894  192B  346B               	retlw	107	;'k'
  8895  192C  3420               	retlw	32	;' '
  8896  192D  3400               	retlw	0
  8897                           
  8898                           	psect	stringtext36
  8899  192E                     __pstringtext36:
  8900  192E                     STR_14:
  8901  192E  344F               	retlw	79	;'O'
  8902  192F  342D               	retlw	45	;'-'
  8903  1930  346F               	retlw	111	;'o'
  8904  1931  346B               	retlw	107	;'k'
  8905  1932  3420               	retlw	32	;' '
  8906  1933  3400               	retlw	0
  8907                           
  8908                           	psect	stringtext37
  8909  1934                     __pstringtext37:
  8910  1934                     STR_55:
  8911  1934  3451               	retlw	81	;'Q'
  8912  1935  342D               	retlw	45	;'-'
  8913  1936  346F               	retlw	111	;'o'
  8914  1937  346B               	retlw	107	;'k'
  8915  1938  3420               	retlw	32	;' '
  8916  1939  3400               	retlw	0
  8917                           
  8918                           	psect	stringtext38
  8919  193A                     __pstringtext38:
  8920  193A                     STR_20:
  8921  193A  3452               	retlw	82	;'R'
  8922  193B  342D               	retlw	45	;'-'
  8923  193C  346F               	retlw	111	;'o'
  8924  193D  346B               	retlw	107	;'k'
  8925  193E  3420               	retlw	32	;' '
  8926  193F  3400               	retlw	0
  8927                           
  8928                           	psect	stringtext39
  8929  1940                     __pstringtext39:
  8930  1940                     STR_2:
  8931  1940  3461               	retlw	97	;'a'
  8932  1941  342D               	retlw	45	;'-'
  8933  1942  346F               	retlw	111	;'o'
  8934  1943  346B               	retlw	107	;'k'
  8935  1944  3420               	retlw	32	;' '
  8936  1945  3400               	retlw	0
  8937                           
  8938                           	psect	stringtext40
  8939  1946                     __pstringtext40:
  8940  1946                     STR_16:
  8941  1946  3463               	retlw	99	;'c'
  8942  1947  342D               	retlw	45	;'-'
  8943  1948  346F               	retlw	111	;'o'
  8944  1949  346B               	retlw	107	;'k'
  8945  194A  3420               	retlw	32	;' '
  8946  194B  3400               	retlw	0
  8947                           
  8948                           	psect	stringtext41
  8949  194C                     __pstringtext41:
  8950  194C                     STR_8:
  8951  194C  3464               	retlw	100	;'d'
  8952  194D  342D               	retlw	45	;'-'
  8953  194E  346F               	retlw	111	;'o'
  8954  194F  346B               	retlw	107	;'k'
  8955  1950  3420               	retlw	32	;' '
  8956  1951  3400               	retlw	0
  8957                           
  8958                           	psect	stringtext42
  8959  1952                     __pstringtext42:
  8960  1952                     STR_6:
  8961  1952  3466               	retlw	102	;'f'
  8962  1953  342D               	retlw	45	;'-'
  8963  1954  346F               	retlw	111	;'o'
  8964  1955  346B               	retlw	107	;'k'
  8965  1956  3420               	retlw	32	;' '
  8966  1957  3400               	retlw	0
  8967                           
  8968                           	psect	stringtext43
  8969  1958                     __pstringtext43:
  8970  1958                     STR_10:
  8971  1958  346B               	retlw	107	;'k'
  8972  1959  342D               	retlw	45	;'-'
  8973  195A  346F               	retlw	111	;'o'
  8974  195B  346B               	retlw	107	;'k'
  8975  195C  3420               	retlw	32	;' '
  8976  195D  3400               	retlw	0
  8977                           
  8978                           	psect	stringtext44
  8979  195E                     __pstringtext44:
  8980  195E                     STR_60:
  8981  195E  346C               	retlw	108	;'l'
  8982  195F  342D               	retlw	45	;'-'
  8983  1960  346F               	retlw	111	;'o'
  8984  1961  346B               	retlw	107	;'k'
  8985  1962  3420               	retlw	32	;' '
  8986  1963  3400               	retlw	0
  8987                           
  8988                           	psect	stringtext45
  8989  1964                     __pstringtext45:
  8990  1964                     STR_53:
  8991  1964  346D               	retlw	109	;'m'
  8992  1965  342D               	retlw	45	;'-'
  8993  1966  346F               	retlw	111	;'o'
  8994  1967  346B               	retlw	107	;'k'
  8995  1968  3420               	retlw	32	;' '
  8996  1969  3400               	retlw	0
  8997                           
  8998                           	psect	stringtext46
  8999  196A                     __pstringtext46:
  9000  196A                     STR_61:
  9001  196A  346E               	retlw	110	;'n'
  9002  196B  342D               	retlw	45	;'-'
  9003  196C  346F               	retlw	111	;'o'
  9004  196D  346B               	retlw	107	;'k'
  9005  196E  3420               	retlw	32	;' '
  9006  196F  3400               	retlw	0
  9007                           
  9008                           	psect	stringtext47
  9009  1970                     __pstringtext47:
  9010  1970                     STR_12:
  9011  1970  346F               	retlw	111	;'o'
  9012  1971  342D               	retlw	45	;'-'
  9013  1972  346F               	retlw	111	;'o'
  9014  1973  346B               	retlw	107	;'k'
  9015  1974  3420               	retlw	32	;' '
  9016  1975  3400               	retlw	0
  9017                           
  9018                           	psect	stringtext48
  9019  1976                     __pstringtext48:
  9020  1976                     STR_57:
  9021  1976  3471               	retlw	113	;'q'
  9022  1977  342D               	retlw	45	;'-'
  9023  1978  346F               	retlw	111	;'o'
  9024  1979  346B               	retlw	107	;'k'
  9025  197A  3420               	retlw	32	;' '
  9026  197B  3400               	retlw	0
  9027                           
  9028                           	psect	stringtext49
  9029  197C                     __pstringtext49:
  9030  197C                     STR_18:
  9031  197C  3472               	retlw	114	;'r'
  9032  197D  342D               	retlw	45	;'-'
  9033  197E  346F               	retlw	111	;'o'
  9034  197F  346B               	retlw	107	;'k'
  9035  1980  3420               	retlw	32	;' '
  9036  1981  3400               	retlw	0
  9037                           
  9038                           	psect	stringtext50
  9039  1982                     __pstringtext50:
  9040  1982                     STR_59:
  9041  1982  3473               	retlw	115	;'s'
  9042  1983  342D               	retlw	45	;'-'
  9043  1984  346F               	retlw	111	;'o'
  9044  1985  346B               	retlw	107	;'k'
  9045  1986  3420               	retlw	32	;' '
  9046  1987  3400               	retlw	0
  9047                           
  9048                           	psect	stringtext51
  9049  1988                     __pstringtext51:
  9050  1988                     STR_1:
  9051  1988  344F               	retlw	79	;'O'
  9052  1989  346B               	retlw	107	;'k'
  9053  198A  3420               	retlw	32	;' '
  9054  198B  3400               	retlw	0
  9055                           
  9056                           	psect	stringtext52
  9057  0000                     __pstringtext52:
  9058  103B                     
  9059                           	psect	cinit
  9060  0027                     start_initialization:	
  9061                           ; #config settings
  9062                           
  9063  0027                     __initialization:	;BIGRAM
  9064                           
  9065                           ; Clear objects allocated to BIGRAM
  9066  0027  303C               	movlw	low (0+9788)
  9067  0028  0084               	movwf	4
  9068  0029  3026               	movlw	high (0+9788)
  9069  002A  0085               	movwf	5
  9070  002B  30B4               	movlw	180
  9071  002C  00FE               	movwf	btemp
  9072  002D  3001               	movlw	1
  9073  002E  00FF               	movwf	btemp+1
  9074  002F  3195  25FF  3180   	fcall	clear_ram0
  9075                           
  9076                           ; Clear objects allocated to COMMON
  9077  0032  01F0               	clrf	__pbssCOMMON& (0+127)
  9078  0033  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  9079  0034  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  9080  0035  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  9081  0036  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  9082  0037  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  9083                           
  9084                           ; Clear objects allocated to BANK0
  9085  0038  304D               	movlw	low __pbssBANK0
  9086  0039  0084               	movwf	4
  9087  003A  3000               	movlw	high __pbssBANK0
  9088  003B  0085               	movwf	5
  9089  003C  3018               	movlw	24
  9090  003D  00FE               	movwf	btemp
  9091  003E  3000               	movlw	0
  9092  003F  00FF               	movwf	btemp+1
  9093  0040  3195  25FF  3180   	fcall	clear_ram0
  9094                           
  9095                           ; Clear objects allocated to BANK1
  9096  0043  30A0               	movlw	low __pbssBANK1
  9097  0044  0084               	movwf	4
  9098  0045  3000               	movlw	high __pbssBANK1
  9099  0046  0085               	movwf	5
  9100  0047  3020               	movlw	32
  9101  0048  00FE               	movwf	btemp
  9102  0049  3000               	movlw	0
  9103  004A  00FF               	movwf	btemp+1
  9104  004B  3195  25FF  3180   	fcall	clear_ram0
  9105                           
  9106                           ; Clear objects allocated to BANK2
  9107  004E  3020               	movlw	low __pbssBANK2
  9108  004F  0084               	movwf	4
  9109  0050  3001               	movlw	high __pbssBANK2
  9110  0051  0085               	movwf	5
  9111  0052  3040               	movlw	64
  9112  0053  00FE               	movwf	btemp
  9113  0054  3000               	movlw	0
  9114  0055  00FF               	movwf	btemp+1
  9115  0056  3195  25FF  3180   	fcall	clear_ram0
  9116                           
  9117                           ; Clear objects allocated to BANK3
  9118  0059  30A0               	movlw	low __pbssBANK3
  9119  005A  0084               	movwf	4
  9120  005B  3001               	movlw	high __pbssBANK3
  9121  005C  0085               	movwf	5
  9122  005D  3040               	movlw	64
  9123  005E  00FE               	movwf	btemp
  9124  005F  3000               	movlw	0
  9125  0060  00FF               	movwf	btemp+1
  9126  0061  3195  25FF  3180   	fcall	clear_ram0
  9127                           
  9128                           ; Clear objects allocated to BANK4
  9129  0064  3020               	movlw	low __pbssBANK4
  9130  0065  0084               	movwf	4
  9131  0066  3002               	movlw	high __pbssBANK4
  9132  0067  0085               	movwf	5
  9133  0068  3040               	movlw	64
  9134  0069  00FE               	movwf	btemp
  9135  006A  3000               	movlw	0
  9136  006B  00FF               	movwf	btemp+1
  9137  006C  3195  25FF         	fcall	clear_ram0
  9138  006E                     end_of_initialization:	
  9139                           ;End of C runtime variable initialization code
  9140                           
  9141  006E                     __end_of__initialization:
  9142  006E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  9143  006F  0140               	movlb	0
  9144  0070  3189  29B6         	ljmp	_main	;jump to C main() function
  9145                           
  9146                           	psect	bssCOMMON
  9147  0070                     __pbssCOMMON:
  9148  0070                     _NEMS_nmux1:
  9149  0070                     	ds	1
  9150  0071                     _eusart1RxCount:
  9151  0071                     	ds	1
  9152  0072                     _eusart1RxTail:
  9153  0072                     	ds	1
  9154  0073                     _eusart1RxHead:
  9155  0073                     	ds	1
  9156  0074                     _eusart1TxTail:
  9157  0074                     	ds	1
  9158  0075                     _eusart1TxHead:
  9159  0075                     	ds	1
  9160                           
  9161                           	psect	bssBANK0
  9162  004D                     __pbssBANK0:
  9163  004D                     _sensor_ind:
  9164  004D                     	ds	1
  9165  004E                     _se_channel:
  9166  004E                     	ds	1
  9167  004F                     _se_index:
  9168  004F                     	ds	1
  9169  0050                     _NMES_se_control:
  9170  0050                     	ds	1
  9171  0051                     _channel_control:
  9172  0051                     	ds	1
  9173  0052                     _NEMS_pmux1:
  9174  0052                     	ds	1
  9175  0053                     _NEMS_pulse_states:
  9176  0053                     	ds	1
  9177  0054                     _NEMS_wave_states:
  9178  0054                     	ds	1
  9179  0055                     _NEMS_states:
  9180  0055                     	ds	1
  9181  0056                     _eusart1RxLastError:
  9182  0056                     	ds	1
  9183  0057                     _program:
  9184  0057                     	ds	14
  9185                           
  9186                           	psect	bssBANK1
  9187  00A0                     __pbssBANK1:
  9188  00A0                     _sens_buf:
  9189  00A0                     	ds	32
  9190                           
  9191                           	psect	bssBANK2
  9192  0120                     __pbssBANK2:
  9193  0120                     _eusart1RxStatusBuffer:
  9194  0120                     	ds	64
  9195                           
  9196                           	psect	bssBANK3
  9197  01A0                     __pbssBANK3:
  9198  01A0                     _eusart1TxBuffer:
  9199  01A0                     	ds	64
  9200                           
  9201                           	psect	bssBANK4
  9202  0220                     __pbssBANK4:
  9203  0220                     _eusart1RxBuffer:
  9204  0220                     	ds	64
  9205                           
  9206                           	psect	clrtext
  9207  15FF                     clear_ram0:	
  9208                           ;	Called with FSR0 containing the base address, and
  9209                           ;	btemp/btemp+1 has the size to clear
  9210                           
  9211  15FF  0064               	clrwdt	;clear the watchdog before getting into this loop
  9212  1600                     clrloop0:
  9213  1600  0180               	clrf	0	;clear RAM location pointed to by FSR
  9214  1601  3101               	addfsr 0,1
  9215  1602  3001               	movlw	1
  9216  1603  02FE               	subwf	126,f
  9217  1604  3000               	movlw	0
  9218  1605  3BFF               	subwfb	127,f
  9219  1606  087F               	movf	127,w
  9220  1607  047E               	iorwf	126,w
  9221  1608  1903               	btfsc	3,2
  9222  1609  3400               	retlw	0	;all done for this memory range, return
  9223  160A  2E00               	goto	clrloop0	;have we reached the end yet?
  9224                           
  9225                           	psect	cstackBANK1
  9226  00C7                     __pcstackBANK1:
  9227  00C7                     ??_main:
  9228                           
  9229                           ; 1 bytes @ 0x0
  9230  00C7                     	ds	2
  9231                           
  9232                           	psect	cstackCOMMON
  9233  0076                     __pcstackCOMMON:
  9234  0076                     ?_PMD_Initialize:
  9235  0076                     ?_PIN_MANAGER_Initialize:	
  9236                           ; 1 bytes @ 0x0
  9237                           
  9238  0076                     ?_OSCILLATOR_Initialize:	
  9239                           ; 1 bytes @ 0x0
  9240                           
  9241  0076                     ?_FVR_Initialize:	
  9242                           ; 1 bytes @ 0x0
  9243                           
  9244  0076                     ?_ADCC_Initialize:	
  9245                           ; 1 bytes @ 0x0
  9246                           
  9247  0076                     ?_DAC1_Initialize:	
  9248                           ; 1 bytes @ 0x0
  9249                           
  9250  0076                     ?_TMR1_Initialize:	
  9251                           ; 1 bytes @ 0x0
  9252                           
  9253  0076                     ?_TMR0_Initialize:	
  9254                           ; 1 bytes @ 0x0
  9255                           
  9256  0076                     ?_EUSART1_Initialize:	
  9257                           ; 1 bytes @ 0x0
  9258                           
  9259  0076                     ?_EUSART1_Receive_ISR:	
  9260                           ; 1 bytes @ 0x0
  9261                           
  9262  0076                     ?_EUSART1_Transmit_ISR:	
  9263                           ; 1 bytes @ 0x0
  9264                           
  9265  0076                     ??_EUSART1_Transmit_ISR:	
  9266                           ; 1 bytes @ 0x0
  9267                           
  9268  0076                     ?_EUSART1_DefaultFramingErrorHandler:	
  9269                           ; 1 bytes @ 0x0
  9270                           
  9271  0076                     ??_EUSART1_DefaultFramingErrorHandler:	
  9272                           ; 1 bytes @ 0x0
  9273                           
  9274  0076                     ?_EUSART1_DefaultOverrunErrorHandler:	
  9275                           ; 1 bytes @ 0x0
  9276                           
  9277  0076                     ??_EUSART1_DefaultOverrunErrorHandler:	
  9278                           ; 1 bytes @ 0x0
  9279                           
  9280  0076                     ?_EUSART1_DefaultErrorHandler:	
  9281                           ; 1 bytes @ 0x0
  9282                           
  9283  0076                     ?_EUSART1_RxDataHandler:	
  9284                           ; 1 bytes @ 0x0
  9285                           
  9286  0076                     ??_EUSART1_RxDataHandler:	
  9287                           ; 1 bytes @ 0x0
  9288                           
  9289  0076                     ?_TMR0_DefaultInterruptHandler:	
  9290                           ; 1 bytes @ 0x0
  9291                           
  9292  0076                     ??_TMR0_DefaultInterruptHandler:	
  9293                           ; 1 bytes @ 0x0
  9294                           
  9295  0076                     ?_NEMS_initialize:	
  9296                           ; 1 bytes @ 0x0
  9297                           
  9298  0076                     ?_NEMS_message_handler:	
  9299                           ; 1 bytes @ 0x0
  9300                           
  9301  0076                     ?_NEMS_read_sensors:	
  9302                           ; 1 bytes @ 0x0
  9303                           
  9304  0076                     ?_NEMS_timer:	
  9305                           ; 1 bytes @ 0x0
  9306                           
  9307  0076                     ?_NEMS_binary_command:	
  9308                           ; 1 bytes @ 0x0
  9309                           
  9310  0076                     ?_NEMS_set_amplitude:	
  9311                           ; 1 bytes @ 0x0
  9312                           
  9313  0076                     ?_NEMS_set_amplitude2:	
  9314                           ; 1 bytes @ 0x0
  9315                           
  9316  0076                     ?_NEMS_set_frequency:	
  9317                           ; 1 bytes @ 0x0
  9318                           
  9319  0076                     ?_NEMS_set_phase_duration:	
  9320                           ; 1 bytes @ 0x0
  9321                           
  9322  0076                     ?_NEMS_set_symmetry_factor:	
  9323                           ; 1 bytes @ 0x0
  9324                           
  9325  0076                     ?_NEMS_set_ON_time:	
  9326                           ; 1 bytes @ 0x0
  9327                           
  9328  0076                     ?_NEMS_set_OFF_time:	
  9329                           ; 1 bytes @ 0x0
  9330                           
  9331  0076                     ?_NEMS_set_contractions:	
  9332                           ; 1 bytes @ 0x0
  9333                           
  9334  0076                     ?_NEMS_set_ramp_up:	
  9335                           ; 1 bytes @ 0x0
  9336                           
  9337  0076                     ?_NEMS_set_ramp_down:	
  9338                           ; 1 bytes @ 0x0
  9339                           
  9340  0076                     ?_NEMS_get_program:	
  9341                           ; 1 bytes @ 0x0
  9342                           
  9343  0076                     ?_NEMS_save_program:	
  9344                           ; 1 bytes @ 0x0
  9345                           
  9346  0076                     ?_NEMS_load_program:	
  9347                           ; 1 bytes @ 0x0
  9348                           
  9349  0076                     ?_NEMS_start_program:	
  9350                           ; 1 bytes @ 0x0
  9351                           
  9352  0076                     ?_NEMS_stop_program:	
  9353                           ; 1 bytes @ 0x0
  9354                           
  9355  0076                     ?_NEMS_set_channel1:	
  9356                           ; 1 bytes @ 0x0
  9357                           
  9358  0076                     ?_NEMS_set_channel2:	
  9359                           ; 1 bytes @ 0x0
  9360                           
  9361  0076                     ?_NEMS_set_channel3:	
  9362                           ; 1 bytes @ 0x0
  9363                           
  9364  0076                     ?_NEMS_set_channel4:	
  9365                           ; 1 bytes @ 0x0
  9366                           
  9367  0076                     ?_NEMS_start_sensors:	
  9368                           ; 1 bytes @ 0x0
  9369                           
  9370  0076                     ?_NEMS_stop_sensors:	
  9371                           ; 1 bytes @ 0x0
  9372                           
  9373  0076                     ?_NEMS_stop_program_nack:	
  9374                           ; 1 bytes @ 0x0
  9375                           
  9376  0076                     ?_NEMS_timer_SE:	
  9377                           ; 1 bytes @ 0x0
  9378                           
  9379  0076                     ?_NEMS_start_program_nack:	
  9380                           ; 1 bytes @ 0x0
  9381                           
  9382  0076                     ?_eeprom_read:	
  9383                           ; 1 bytes @ 0x0
  9384                           
  9385  0076                     ?_NEMS_calculate_ramp:	
  9386                           ; 1 bytes @ 0x0
  9387                           
  9388  0076                     ?_SYSTEM_Initialize:	
  9389                           ; 1 bytes @ 0x0
  9390                           
  9391  0076                     ?_EUSART1_is_tx_ready:	
  9392                           ; 1 bytes @ 0x0
  9393                           
  9394  0076                     ?_EUSART1_is_rx_ready:	
  9395                           ; 1 bytes @ 0x0
  9396                           
  9397  0076                     ?_EUSART1_Read:	
  9398                           ; 1 bytes @ 0x0
  9399                           
  9400  0076                     ?_EUSART1_Write:	
  9401                           ; 1 bytes @ 0x0
  9402                           
  9403  0076                     ?_TMR1_StartTimer:	
  9404                           ; 1 bytes @ 0x0
  9405                           
  9406  0076                     ?_TMR1_StopTimer:	
  9407                           ; 1 bytes @ 0x0
  9408                           
  9409  0076                     ?_TMR1_Reload:	
  9410                           ; 1 bytes @ 0x0
  9411                           
  9412  0076                     ?_TMR1_HasOverflowOccured:	
  9413                           ; 1 bytes @ 0x0
  9414                           
  9415  0076                     ?_TMR0_StartTimer:	
  9416                           ; 1 bytes @ 0x0
  9417                           
  9418  0076                     ?_TMR0_StopTimer:	
  9419                           ; 1 bytes @ 0x0
  9420                           
  9421  0076                     ?_TMR0_ISR:	
  9422                           ; 1 bytes @ 0x0
  9423                           
  9424  0076                     ?_DAC1_SetOutput:	
  9425                           ; 1 bytes @ 0x0
  9426                           
  9427  0076                     ?_INTERRUPT_InterruptManager:	
  9428                           ; 1 bytes @ 0x0
  9429                           
  9430  0076                     ?_main:	
  9431                           ; 1 bytes @ 0x0
  9432                           
  9433  0076                     ?_NEMS_get_packet:	
  9434                           ; 1 bytes @ 0x0
  9435                           
  9436  0076                     ?_NEMS_recalculate_program:	
  9437                           ; 1 bytes @ 0x0
  9438                           
  9439  0076                     ?i1_DAC1_SetOutput:	
  9440                           ; 1 bytes @ 0x0
  9441                           
  9442  0076                     ??i1_DAC1_SetOutput:	
  9443                           ; 1 bytes @ 0x0
  9444                           
  9445  0076                     i1DAC1_SetOutput@inputData:	
  9446                           ; 1 bytes @ 0x0
  9447                           
  9448                           
  9449                           ; 1 bytes @ 0x0
  9450  0076                     	ds	1
  9451  0077                     ??_EUSART1_Receive_ISR:
  9452  0077                     ??_EUSART1_DefaultErrorHandler:	
  9453                           ; 1 bytes @ 0x1
  9454                           
  9455  0077                     ??_NEMS_timer:	
  9456                           ; 1 bytes @ 0x1
  9457                           
  9458  0077                     ??_NEMS_timer_SE:	
  9459                           ; 1 bytes @ 0x1
  9460                           
  9461                           
  9462                           ; 1 bytes @ 0x1
  9463  0077                     	ds	5
  9464  007C                     ??_TMR0_ISR:
  9465  007C                     ??_INTERRUPT_InterruptManager:	
  9466                           ; 1 bytes @ 0x6
  9467                           
  9468                           
  9469                           	psect	cstackBANK0
  9470  0020                     __pcstackBANK0:	
  9471                           ; 1 bytes @ 0x6
  9472                           
  9473  0020                     ??_PMD_Initialize:
  9474  0020                     ??_PIN_MANAGER_Initialize:	
  9475                           ; 1 bytes @ 0x0
  9476                           
  9477  0020                     ??_OSCILLATOR_Initialize:	
  9478                           ; 1 bytes @ 0x0
  9479                           
  9480  0020                     ??_FVR_Initialize:	
  9481                           ; 1 bytes @ 0x0
  9482                           
  9483  0020                     ??_ADCC_Initialize:	
  9484                           ; 1 bytes @ 0x0
  9485                           
  9486  0020                     ??_DAC1_Initialize:	
  9487                           ; 1 bytes @ 0x0
  9488                           
  9489  0020                     ??_TMR1_Initialize:	
  9490                           ; 1 bytes @ 0x0
  9491                           
  9492  0020                     ?_EUSART1_SetRxInterruptHandler:	
  9493                           ; 1 bytes @ 0x0
  9494                           
  9495  0020                     ?_EUSART1_SetTxInterruptHandler:	
  9496                           ; 1 bytes @ 0x0
  9497                           
  9498  0020                     ?_EUSART1_SetFramingErrorHandler:	
  9499                           ; 1 bytes @ 0x0
  9500                           
  9501  0020                     ?_EUSART1_SetOverrunErrorHandler:	
  9502                           ; 1 bytes @ 0x0
  9503                           
  9504  0020                     ?_EUSART1_SetErrorHandler:	
  9505                           ; 1 bytes @ 0x0
  9506                           
  9507  0020                     ?_TMR0_SetInterruptHandler:	
  9508                           ; 1 bytes @ 0x0
  9509                           
  9510  0020                     ??_NEMS_stop_sensors:	
  9511                           ; 1 bytes @ 0x0
  9512                           
  9513  0020                     ?_eeprom_write:	
  9514                           ; 1 bytes @ 0x0
  9515                           
  9516  0020                     ??_eeprom_read:	
  9517                           ; 1 bytes @ 0x0
  9518                           
  9519  0020                     ??_EUSART1_is_tx_ready:	
  9520                           ; 1 bytes @ 0x0
  9521                           
  9522  0020                     ??_EUSART1_is_rx_ready:	
  9523                           ; 1 bytes @ 0x0
  9524                           
  9525  0020                     ??_EUSART1_Read:	
  9526                           ; 1 bytes @ 0x0
  9527                           
  9528  0020                     ??_EUSART1_Write:	
  9529                           ; 1 bytes @ 0x0
  9530                           
  9531  0020                     ??_TMR1_StartTimer:	
  9532                           ; 1 bytes @ 0x0
  9533                           
  9534  0020                     ??_TMR1_StopTimer:	
  9535                           ; 1 bytes @ 0x0
  9536                           
  9537  0020                     ?_TMR1_WriteTimer:	
  9538                           ; 1 bytes @ 0x0
  9539                           
  9540  0020                     ??_TMR1_HasOverflowOccured:	
  9541                           ; 1 bytes @ 0x0
  9542                           
  9543  0020                     ??_TMR0_StartTimer:	
  9544                           ; 1 bytes @ 0x0
  9545                           
  9546  0020                     ??_TMR0_StopTimer:	
  9547                           ; 1 bytes @ 0x0
  9548                           
  9549  0020                     ??_DAC1_SetOutput:	
  9550                           ; 1 bytes @ 0x0
  9551                           
  9552  0020                     ?___bmul:	
  9553                           ; 1 bytes @ 0x0
  9554                           
  9555  0020                     ?___lbmod:	
  9556                           ; 1 bytes @ 0x0
  9557                           
  9558  0020                     ?_ADCC_GetSingleConversion:	
  9559                           ; 1 bytes @ 0x0
  9560                           
  9561  0020                     ?___wmul:	
  9562                           ; 2 bytes @ 0x0
  9563                           
  9564  0020                     DAC1_SetOutput@inputData:	
  9565                           ; 2 bytes @ 0x0
  9566                           
  9567  0020                     eeprom_read@addr:	
  9568                           ; 1 bytes @ 0x0
  9569                           
  9570  0020                     eeprom_write@value:	
  9571                           ; 1 bytes @ 0x0
  9572                           
  9573  0020                     ___bmul@multiplicand:	
  9574                           ; 1 bytes @ 0x0
  9575                           
  9576  0020                     ___lbmod@divisor:	
  9577                           ; 1 bytes @ 0x0
  9578                           
  9579  0020                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  9580                           ; 1 bytes @ 0x0
  9581                           
  9582  0020                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  9583                           ; 2 bytes @ 0x0
  9584                           
  9585  0020                     EUSART1_SetErrorHandler@interruptHandler:	
  9586                           ; 2 bytes @ 0x0
  9587                           
  9588  0020                     EUSART1_SetTxInterruptHandler@interruptHandler:	
  9589                           ; 2 bytes @ 0x0
  9590                           
  9591  0020                     EUSART1_SetRxInterruptHandler@interruptHandler:	
  9592                           ; 2 bytes @ 0x0
  9593                           
  9594  0020                     TMR1_WriteTimer@timerVal:	
  9595                           ; 2 bytes @ 0x0
  9596                           
  9597  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
  9598                           ; 2 bytes @ 0x0
  9599                           
  9600  0020                     ___wmul@multiplier:	
  9601                           ; 2 bytes @ 0x0
  9602                           
  9603                           
  9604                           ; 2 bytes @ 0x0
  9605  0020                     	ds	1
  9606  0021                     ??_NEMS_stop_program_nack:
  9607  0021                     ??_eeprom_write:	
  9608                           ; 1 bytes @ 0x1
  9609                           
  9610  0021                     ??___bmul:	
  9611                           ; 1 bytes @ 0x1
  9612                           
  9613  0021                     ??___lbmod:	
  9614                           ; 1 bytes @ 0x1
  9615                           
  9616  0021                     EUSART1_Read@readValue:	
  9617                           ; 1 bytes @ 0x1
  9618                           
  9619  0021                     EUSART1_Write@txData:	
  9620                           ; 1 bytes @ 0x1
  9621                           
  9622  0021                     eeprom_write@addr:	
  9623                           ; 1 bytes @ 0x1
  9624                           
  9625                           
  9626                           ; 1 bytes @ 0x1
  9627  0021                     	ds	1
  9628  0022                     ??_TMR0_Initialize:
  9629  0022                     ??_EUSART1_Initialize:	
  9630                           ; 1 bytes @ 0x2
  9631                           
  9632  0022                     ??_EUSART1_SetRxInterruptHandler:	
  9633                           ; 1 bytes @ 0x2
  9634                           
  9635  0022                     ??_EUSART1_SetTxInterruptHandler:	
  9636                           ; 1 bytes @ 0x2
  9637                           
  9638  0022                     ??_EUSART1_SetFramingErrorHandler:	
  9639                           ; 1 bytes @ 0x2
  9640                           
  9641  0022                     ??_EUSART1_SetOverrunErrorHandler:	
  9642                           ; 1 bytes @ 0x2
  9643                           
  9644  0022                     ??_EUSART1_SetErrorHandler:	
  9645                           ; 1 bytes @ 0x2
  9646                           
  9647  0022                     ??_TMR0_SetInterruptHandler:	
  9648                           ; 1 bytes @ 0x2
  9649                           
  9650  0022                     ??_NEMS_initialize:	
  9651                           ; 1 bytes @ 0x2
  9652                           
  9653  0022                     ?__puts:	
  9654                           ; 1 bytes @ 0x2
  9655                           
  9656  0022                     ??_NEMS_start_sensors:	
  9657                           ; 1 bytes @ 0x2
  9658                           
  9659  0022                     ?_write:	
  9660                           ; 1 bytes @ 0x2
  9661                           
  9662  0022                     ??_TMR1_WriteTimer:	
  9663                           ; 1 bytes @ 0x2
  9664                           
  9665  0022                     ??_TMR1_Reload:	
  9666                           ; 1 bytes @ 0x2
  9667                           
  9668  0022                     write@lenght:	
  9669                           ; 1 bytes @ 0x2
  9670                           
  9671  0022                     ___bmul@product:	
  9672                           ; 1 bytes @ 0x2
  9673                           
  9674  0022                     __puts@pt:	
  9675                           ; 1 bytes @ 0x2
  9676                           
  9677  0022                     ___wmul@multiplicand:	
  9678                           ; 2 bytes @ 0x2
  9679                           
  9680                           
  9681                           ; 2 bytes @ 0x2
  9682  0022                     	ds	1
  9683  0023                     ??_write:
  9684  0023                     ??_SYSTEM_Initialize:	
  9685                           ; 1 bytes @ 0x3
  9686                           
  9687  0023                     ??_ADCC_GetSingleConversion:	
  9688                           ; 1 bytes @ 0x3
  9689                           
  9690  0023                     ADCC_GetSingleConversion@channel:	
  9691                           ; 1 bytes @ 0x3
  9692                           
  9693  0023                     ___bmul@multiplier:	
  9694                           ; 1 bytes @ 0x3
  9695                           
  9696  0023                     ___lbmod@dividend:	
  9697                           ; 1 bytes @ 0x3
  9698                           
  9699                           
  9700                           ; 1 bytes @ 0x3
  9701  0023                     	ds	1
  9702  0024                     ??__puts:
  9703  0024                     ??_NEMS_get_packet:	
  9704                           ; 1 bytes @ 0x4
  9705                           
  9706  0024                     ??___wmul:	
  9707                           ; 1 bytes @ 0x4
  9708                           
  9709  0024                     write@pt:	
  9710                           ; 1 bytes @ 0x4
  9711                           
  9712  0024                     ___lbmod@counter:	
  9713                           ; 1 bytes @ 0x4
  9714                           
  9715  0024                     ___wmul@product:	
  9716                           ; 1 bytes @ 0x4
  9717                           
  9718                           
  9719                           ; 2 bytes @ 0x4
  9720  0024                     	ds	1
  9721  0025                     write@i:
  9722  0025                     ___lbmod@rem:	
  9723                           ; 1 bytes @ 0x5
  9724                           
  9725                           
  9726                           ; 1 bytes @ 0x5
  9727  0025                     	ds	1
  9728  0026                     ??_NEMS_read_sensors:
  9729  0026                     ?___awdiv:	
  9730                           ; 1 bytes @ 0x6
  9731                           
  9732  0026                     ?___lwdiv:	
  9733                           ; 2 bytes @ 0x6
  9734                           
  9735  0026                     NEMS_get_packet@message:	
  9736                           ; 2 bytes @ 0x6
  9737                           
  9738  0026                     ___awdiv@divisor:	
  9739                           ; 2 bytes @ 0x6
  9740                           
  9741  0026                     ___lwdiv@divisor:	
  9742                           ; 2 bytes @ 0x6
  9743                           
  9744                           
  9745                           ; 2 bytes @ 0x6
  9746  0026                     	ds	1
  9747  0027                     __puts@index:
  9748  0027                     NEMS_read_sensors@aux:	
  9749                           ; 1 bytes @ 0x7
  9750                           
  9751                           
  9752                           ; 2 bytes @ 0x7
  9753  0027                     	ds	1
  9754  0028                     ??_NEMS_save_program:
  9755  0028                     ??_NEMS_load_program:	
  9756                           ; 1 bytes @ 0x8
  9757                           
  9758  0028                     ??_NEMS_stop_program:	
  9759                           ; 1 bytes @ 0x8
  9760                           
  9761  0028                     NEMS_get_packet@pt:	
  9762                           ; 1 bytes @ 0x8
  9763                           
  9764  0028                     ___awdiv@dividend:	
  9765                           ; 1 bytes @ 0x8
  9766                           
  9767  0028                     ___lwdiv@dividend:	
  9768                           ; 2 bytes @ 0x8
  9769                           
  9770                           
  9771                           ; 2 bytes @ 0x8
  9772  0028                     	ds	1
  9773  0029                     ??_NEMS_set_amplitude:
  9774  0029                     ??_NEMS_set_amplitude2:	
  9775                           ; 1 bytes @ 0x9
  9776                           
  9777  0029                     ??_NEMS_set_frequency:	
  9778                           ; 1 bytes @ 0x9
  9779                           
  9780  0029                     ??_NEMS_set_phase_duration:	
  9781                           ; 1 bytes @ 0x9
  9782                           
  9783  0029                     ??_NEMS_set_symmetry_factor:	
  9784                           ; 1 bytes @ 0x9
  9785                           
  9786  0029                     ??_NEMS_set_ON_time:	
  9787                           ; 1 bytes @ 0x9
  9788                           
  9789  0029                     ??_NEMS_set_OFF_time:	
  9790                           ; 1 bytes @ 0x9
  9791                           
  9792  0029                     ??_NEMS_set_contractions:	
  9793                           ; 1 bytes @ 0x9
  9794                           
  9795  0029                     ??_NEMS_set_ramp_up:	
  9796                           ; 1 bytes @ 0x9
  9797                           
  9798  0029                     ??_NEMS_set_ramp_down:	
  9799                           ; 1 bytes @ 0x9
  9800                           
  9801  0029                     ??_NEMS_set_channel1:	
  9802                           ; 1 bytes @ 0x9
  9803                           
  9804  0029                     ??_NEMS_set_channel2:	
  9805                           ; 1 bytes @ 0x9
  9806                           
  9807  0029                     ??_NEMS_set_channel3:	
  9808                           ; 1 bytes @ 0x9
  9809                           
  9810  0029                     ??_NEMS_set_channel4:	
  9811                           ; 1 bytes @ 0x9
  9812                           
  9813  0029                     NEMS_save_program@addr:	
  9814                           ; 1 bytes @ 0x9
  9815                           
  9816  0029                     NEMS_load_program@addr:	
  9817                           ; 1 bytes @ 0x9
  9818                           
  9819  0029                     NEMS_read_sensors@aux2:	
  9820                           ; 2 bytes @ 0x9
  9821                           
  9822                           
  9823                           ; 2 bytes @ 0x9
  9824  0029                     	ds	1
  9825  002A                     ??___awdiv:
  9826  002A                     ??___lwdiv:	
  9827                           ; 1 bytes @ 0xA
  9828                           
  9829                           
  9830                           ; 1 bytes @ 0xA
  9831  002A                     	ds	1
  9832  002B                     ___awdiv@counter:
  9833  002B                     ___lwdiv@quotient:	
  9834                           ; 1 bytes @ 0xB
  9835                           
  9836                           
  9837                           ; 2 bytes @ 0xB
  9838  002B                     	ds	1
  9839  002C                     ___awdiv@sign:
  9840                           
  9841                           ; 1 bytes @ 0xC
  9842  002C                     	ds	1
  9843  002D                     ___lwdiv@counter:
  9844  002D                     ___awdiv@quotient:	
  9845                           ; 1 bytes @ 0xD
  9846                           
  9847                           
  9848                           ; 2 bytes @ 0xD
  9849  002D                     	ds	1
  9850  002E                     ??_NEMS_calculate_ramp:
  9851                           
  9852                           ; 1 bytes @ 0xE
  9853  002E                     	ds	1
  9854  002F                     ?__sprintf_u8b:
  9855  002F                     __sprintf_u8b@val:	
  9856                           ; 1 bytes @ 0xF
  9857                           
  9858                           
  9859                           ; 1 bytes @ 0xF
  9860  002F                     	ds	1
  9861  0030                     ??__sprintf_u8b:
  9862                           
  9863                           ; 1 bytes @ 0x10
  9864  0030                     	ds	3
  9865  0033                     __sprintf_u8b@aux:
  9866                           
  9867                           ; 1 bytes @ 0x13
  9868  0033                     	ds	1
  9869  0034                     __sprintf_u8b@buf:
  9870                           
  9871                           ; 3 bytes @ 0x14
  9872  0034                     	ds	3
  9873  0037                     __sprintf_u8b@mess:
  9874                           
  9875                           ; 1 bytes @ 0x17
  9876  0037                     	ds	1
  9877  0038                     ??_NEMS_get_program:
  9878                           
  9879                           ; 1 bytes @ 0x18
  9880  0038                     	ds	1
  9881  0039                     NEMS_get_program@aux:
  9882                           
  9883                           ; 4 bytes @ 0x19
  9884  0039                     	ds	2
  9885  003B                     NEMS_calculate_ramp@i:
  9886                           
  9887                           ; 1 bytes @ 0x1B
  9888  003B                     	ds	1
  9889  003C                     ??_NEMS_recalculate_program:
  9890                           
  9891                           ; 1 bytes @ 0x1C
  9892  003C                     	ds	6
  9893  0042                     NEMS_recalculate_program@se_frequency:
  9894                           
  9895                           ; 1 bytes @ 0x22
  9896  0042                     	ds	1
  9897  0043                     ??_NEMS_start_program_nack:
  9898                           
  9899                           ; 1 bytes @ 0x23
  9900  0043                     	ds	1
  9901  0044                     ??_NEMS_binary_command:
  9902  0044                     ??_NEMS_start_program:	
  9903                           ; 1 bytes @ 0x24
  9904                           
  9905                           
  9906                           ; 1 bytes @ 0x24
  9907  0044                     	ds	1
  9908  0045                     NEMS_binary_command@amp:
  9909                           
  9910                           ; 1 bytes @ 0x25
  9911  0045                     	ds	1
  9912  0046                     NEMS_binary_command@chan1:
  9913                           
  9914                           ; 1 bytes @ 0x26
  9915  0046                     	ds	1
  9916  0047                     NEMS_binary_command@chan2:
  9917                           
  9918                           ; 1 bytes @ 0x27
  9919  0047                     	ds	1
  9920  0048                     NEMS_binary_command@go_stop:
  9921                           
  9922                           ; 1 bytes @ 0x28
  9923  0048                     	ds	1
  9924  0049                     NEMS_binary_command@super_electrode:
  9925                           
  9926                           ; 1 bytes @ 0x29
  9927  0049                     	ds	1
  9928  004A                     ??_NEMS_message_handler:
  9929                           
  9930                           ; 1 bytes @ 0x2A
  9931  004A                     	ds	2
  9932  004C                     NEMS_message_handler@header:
  9933                           
  9934                           ; 1 bytes @ 0x2C
  9935  004C                     	ds	1
  9936                           
  9937                           	psect	maintext
  9938  09B6                     __pmaintext:	
  9939 ;;
  9940 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  9941 ;;
  9942 ;; *************** function _main *****************
  9943 ;; Defined at:
  9944 ;;		line 52 in file "main.c"
  9945 ;; Parameters:    Size  Location     Type
  9946 ;;		None
  9947 ;; Auto vars:     Size  Location     Type
  9948 ;;  aux             2    0        unsigned short 
  9949 ;; Return value:  Size  Location     Type
  9950 ;;                  1    wreg      void 
  9951 ;; Registers used:
  9952 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9953 ;; Tracked objects:
  9954 ;;		On entry : B3F/0
  9955 ;;		On exit  : 3F/0
  9956 ;;		Unchanged: 0/0
  9957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9960 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9961 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9962 ;;Total ram usage:        2 bytes
  9963 ;; Hardware stack levels required when called:   10
  9964 ;; This function calls:
  9965 ;;		_EUSART1_is_rx_ready
  9966 ;;		_NEMS_initialize
  9967 ;;		_NEMS_message_handler
  9968 ;;		_NEMS_read_sensors
  9969 ;;		_SYSTEM_Initialize
  9970 ;;		_TMR1_HasOverflowOccured
  9971 ;;		_TMR1_Reload
  9972 ;; This function is called by:
  9973 ;;		Startup code after reset
  9974 ;; This function uses a non-reentrant model
  9975 ;;
  9976                           
  9977                           
  9978                           ;psect for function _main
  9979  09B6                     _main:
  9980                           
  9981                           ;main.c: 54:     unsigned short aux;;main.c: 57:     SYSTEM_Initialize();
  9982                           
  9983                           ;incstack = 0
  9984                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9985  09B6  3188  2038  3189   	fcall	_SYSTEM_Initialize
  9986                           
  9987                           ;main.c: 58:     NEMS_initialize();
  9988  09B9  318A  228E  3189   	fcall	_NEMS_initialize
  9989                           
  9990                           ;main.c: 64:     (INTCONbits.GIE = 1);
  9991  09BC  178B               	bsf	11,7	;volatile
  9992                           
  9993                           ;main.c: 67:     (INTCONbits.PEIE = 1);
  9994  09BD  170B               	bsf	11,6	;volatile
  9995  09BE  1018               	bcf	24,0	;volatile
  9996                           
  9997                           ;main.c: 76:         _delay((unsigned long)((200)*(32000000/4000.0)));
  9998  09BF  3009               	movlw	9
  9999  09C0  0141               	movlb	1	; select bank1
 10000  09C1  00C8               	movwf	(??_main^(0+128)+1)
 10001  09C2  301E               	movlw	30
 10002  09C3  00C7               	movwf	??_main^(0+128)
 10003  09C4  30E4               	movlw	228
 10004  09C5                     u3007:
 10005  09C5  0B89               	decfsz	9,f
 10006  09C6  29C5               	goto	u3007
 10007  09C7  0BC7               	decfsz	??_main^(0+128),f
 10008  09C8  29C5               	goto	u3007
 10009  09C9  0BC8               	decfsz	(??_main^(0+128)+1),f
 10010  09CA  29C5               	goto	u3007
 10011  09CB  0000               	nop
 10012  09CC  0140               	movlb	0	; select bank0
 10013  09CD  1418               	bsf	24,0	;volatile
 10014  09CE                     l5307:
 10015                           
 10016                           ;main.c: 105:     {;main.c: 108:         if(EUSART1_is_rx_ready()) {
 10017  09CE  3195  25B3  3189   	fcall	_EUSART1_is_rx_ready
 10018  09D1  3A00               	xorlw	0
 10019  09D2  1903               	skipnz
 10020  09D3  29D7               	goto	l5311
 10021                           
 10022                           ;main.c: 109:             NEMS_message_handler();
 10023  09D4  318C  2459  3189   	fcall	_NEMS_message_handler
 10024  09D7                     l5311:
 10025                           
 10026                           ;main.c: 113:         if(TMR1_HasOverflowOccured()) {
 10027  09D7  3195  258A  3189   	fcall	_TMR1_HasOverflowOccured
 10028  09DA  3A00               	xorlw	0
 10029  09DB  1903               	skipnz
 10030  09DC  29CE               	goto	l5307
 10031                           
 10032                           ;main.c: 114:             TMR1IF = 0;
 10033  09DD  1010               	bcf	16,0	;volatile
 10034                           
 10035                           ;main.c: 115:             TMR1_Reload();
 10036  09DE  3195  25C1  3189   	fcall	_TMR1_Reload
 10037                           
 10038                           ;main.c: 116:             NEMS_read_sensors();
 10039  09E1  318A  22DB  3189   	fcall	_NEMS_read_sensors
 10040  09E4  29CE               	goto	l5307
 10041  09E5                     __end_of_main:
 10042                           
 10043                           	psect	text1
 10044  158A                     __ptext1:	
 10045 ;; *************** function _TMR1_HasOverflowOccured *****************
 10046 ;; Defined at:
 10047 ;;		line 157 in file "mcc_generated_files/tmr1.c"
 10048 ;; Parameters:    Size  Location     Type
 10049 ;;		None
 10050 ;; Auto vars:     Size  Location     Type
 10051 ;;		None
 10052 ;; Return value:  Size  Location     Type
 10053 ;;                  1    wreg      _Bool 
 10054 ;; Registers used:
 10055 ;;		wreg, status,2, status,0
 10056 ;; Tracked objects:
 10057 ;;		On entry : 0/0
 10058 ;;		On exit  : 3F/E
 10059 ;;		Unchanged: 0/0
 10060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10065 ;;Total ram usage:        0 bytes
 10066 ;; Hardware stack levels used:    1
 10067 ;; Hardware stack levels required when called:    4
 10068 ;; This function calls:
 10069 ;;		Nothing
 10070 ;; This function is called by:
 10071 ;;		_main
 10072 ;; This function uses a non-reentrant model
 10073 ;;
 10074                           
 10075                           
 10076                           ;psect for function _TMR1_HasOverflowOccured
 10077  158A                     _TMR1_HasOverflowOccured:
 10078                           
 10079                           ;mcc_generated_files/tmr1.c: 160:     return(PIR4bits.TMR1IF);
 10080                           
 10081                           ;incstack = 0
 10082                           ; Regs used in _TMR1_HasOverflowOccured: [wreg+status,2+status,0]
 10083  158A  014E               	movlb	14	; select bank14
 10084  158B  0810               	movf	16,w	;volatile
 10085  158C  3901               	andlw	1
 10086  158D  0008               	return
 10087  158E                     __end_of_TMR1_HasOverflowOccured:
 10088                           
 10089                           	psect	text2
 10090  0838                     __ptext2:	
 10091 ;; *************** function _SYSTEM_Initialize *****************
 10092 ;; Defined at:
 10093 ;;		line 50 in file "mcc_generated_files/mcc.c"
 10094 ;; Parameters:    Size  Location     Type
 10095 ;;		None
 10096 ;; Auto vars:     Size  Location     Type
 10097 ;;		None
 10098 ;; Return value:  Size  Location     Type
 10099 ;;                  1    wreg      void 
 10100 ;; Registers used:
 10101 ;;		wreg, status,2, status,0, pclath, cstack
 10102 ;; Tracked objects:
 10103 ;;		On entry : B3F/0
 10104 ;;		On exit  : 3F/E
 10105 ;;		Unchanged: 0/0
 10106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10111 ;;Total ram usage:        0 bytes
 10112 ;; Hardware stack levels used:    1
 10113 ;; Hardware stack levels required when called:    6
 10114 ;; This function calls:
 10115 ;;		_ADCC_Initialize
 10116 ;;		_DAC1_Initialize
 10117 ;;		_EUSART1_Initialize
 10118 ;;		_FVR_Initialize
 10119 ;;		_OSCILLATOR_Initialize
 10120 ;;		_PIN_MANAGER_Initialize
 10121 ;;		_PMD_Initialize
 10122 ;;		_TMR0_Initialize
 10123 ;;		_TMR1_Initialize
 10124 ;; This function is called by:
 10125 ;;		_main
 10126 ;; This function uses a non-reentrant model
 10127 ;;
 10128                           
 10129                           
 10130                           ;psect for function _SYSTEM_Initialize
 10131  0838                     _SYSTEM_Initialize:
 10132                           
 10133                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 10134                           
 10135                           ;incstack = 0
 10136                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10137  0838  3195  25F5  3188   	fcall	_PMD_Initialize
 10138                           
 10139                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 10140  083B  3189  2188  3188   	fcall	_PIN_MANAGER_Initialize
 10141                           
 10142                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 10143  083E  3195  25EB  3188   	fcall	_OSCILLATOR_Initialize
 10144                           
 10145                           ;mcc_generated_files/mcc.c: 55:     FVR_Initialize();
 10146  0841  3195  2586  3188   	fcall	_FVR_Initialize
 10147                           
 10148                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 10149  0844  3188  2003  3188   	fcall	_ADCC_Initialize
 10150                           
 10151                           ;mcc_generated_files/mcc.c: 57:     DAC1_Initialize();
 10152  0847  3195  2598  3188   	fcall	_DAC1_Initialize
 10153                           
 10154                           ;mcc_generated_files/mcc.c: 58:     TMR1_Initialize();
 10155  084A  3197  27E9  3188   	fcall	_TMR1_Initialize
 10156                           
 10157                           ;mcc_generated_files/mcc.c: 59:     TMR0_Initialize();
 10158  084D  3188  206F  3188   	fcall	_TMR0_Initialize
 10159                           
 10160                           ;mcc_generated_files/mcc.c: 60:     EUSART1_Initialize();
 10161  0850  3187  27BD         	fcall	_EUSART1_Initialize
 10162  0852  0008               	return
 10163  0853                     __end_of_SYSTEM_Initialize:
 10164                           
 10165                           	psect	text3
 10166  17E9                     __ptext3:	
 10167 ;; *************** function _TMR1_Initialize *****************
 10168 ;; Defined at:
 10169 ;;		line 63 in file "mcc_generated_files/tmr1.c"
 10170 ;; Parameters:    Size  Location     Type
 10171 ;;		None
 10172 ;; Auto vars:     Size  Location     Type
 10173 ;;		None
 10174 ;; Return value:  Size  Location     Type
 10175 ;;                  1    wreg      void 
 10176 ;; Registers used:
 10177 ;;		wreg, status,2
 10178 ;; Tracked objects:
 10179 ;;		On entry : B3F/12
 10180 ;;		On exit  : B3F/4
 10181 ;;		Unchanged: B00/0
 10182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10187 ;;Total ram usage:        0 bytes
 10188 ;; Hardware stack levels used:    1
 10189 ;; Hardware stack levels required when called:    4
 10190 ;; This function calls:
 10191 ;;		Nothing
 10192 ;; This function is called by:
 10193 ;;		_SYSTEM_Initialize
 10194 ;; This function uses a non-reentrant model
 10195 ;;
 10196                           
 10197                           
 10198                           ;psect for function _TMR1_Initialize
 10199  17E9                     _TMR1_Initialize:
 10200                           
 10201                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
 10202                           
 10203                           ;incstack = 0
 10204                           ; Regs used in _TMR1_Initialize: [wreg+status,2]
 10205  17E9  0144               	movlb	4	; select bank4
 10206  17EA  018F               	clrf	15	;volatile
 10207                           
 10208                           ;mcc_generated_files/tmr1.c: 71:     T1GATE = 0x00;
 10209  17EB  0190               	clrf	16	;volatile
 10210                           
 10211                           ;mcc_generated_files/tmr1.c: 74:     T1CLK = 0x01;
 10212  17EC  3001               	movlw	1
 10213  17ED  0091               	movwf	17	;volatile
 10214                           
 10215                           ;mcc_generated_files/tmr1.c: 77:     TMR1H = 0x63;
 10216  17EE  3063               	movlw	99
 10217  17EF  008D               	movwf	13	;volatile
 10218                           
 10219                           ;mcc_generated_files/tmr1.c: 80:     TMR1L = 0xC0;
 10220  17F0  30C0               	movlw	192
 10221  17F1  008C               	movwf	12	;volatile
 10222                           
 10223                           ;mcc_generated_files/tmr1.c: 83:     PIR4bits.TMR1IF = 0;
 10224  17F2  014E               	movlb	14	; select bank14
 10225  17F3  1010               	bcf	16,0	;volatile
 10226                           
 10227                           ;mcc_generated_files/tmr1.c: 86:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 10228  17F4  0144               	movlb	4	; select bank4
 10229  17F5  080D               	movf	13,w	;volatile
 10230  17F6  0140               	movlb	0	; select bank0
 10231  17F7  00EA               	movwf	_timer1ReloadVal+1	;volatile
 10232  17F8  0144               	movlb	4	; select bank4
 10233  17F9  080C               	movf	12,w	;volatile
 10234  17FA  0140               	movlb	0	; select bank0
 10235  17FB  00E9               	movwf	_timer1ReloadVal	;volatile
 10236                           
 10237                           ;mcc_generated_files/tmr1.c: 89:     T1CON = 0x20;
 10238  17FC  3020               	movlw	32
 10239  17FD  0144               	movlb	4	; select bank4
 10240  17FE  008E               	movwf	14	;volatile
 10241  17FF  0008               	return
 10242  1800                     __end_of_TMR1_Initialize:
 10243                           
 10244                           	psect	text4
 10245  086F                     __ptext4:	
 10246 ;; *************** function _TMR0_Initialize *****************
 10247 ;; Defined at:
 10248 ;;		line 66 in file "mcc_generated_files/tmr0.c"
 10249 ;; Parameters:    Size  Location     Type
 10250 ;;		None
 10251 ;; Auto vars:     Size  Location     Type
 10252 ;;		None
 10253 ;; Return value:  Size  Location     Type
 10254 ;;                  1    wreg      void 
 10255 ;; Registers used:
 10256 ;;		wreg, status,2, status,0, pclath, cstack
 10257 ;; Tracked objects:
 10258 ;;		On entry : B3F/4
 10259 ;;		On exit  : 3F/B
 10260 ;;		Unchanged: 0/0
 10261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10266 ;;Total ram usage:        0 bytes
 10267 ;; Hardware stack levels used:    1
 10268 ;; Hardware stack levels required when called:    5
 10269 ;; This function calls:
 10270 ;;		_TMR0_SetInterruptHandler
 10271 ;; This function is called by:
 10272 ;;		_SYSTEM_Initialize
 10273 ;; This function uses a non-reentrant model
 10274 ;;
 10275                           
 10276                           
 10277                           ;psect for function _TMR0_Initialize
 10278  086F                     _TMR0_Initialize:
 10279                           
 10280                           ;mcc_generated_files/tmr0.c: 71:     T0CON1 = 0x40;
 10281                           
 10282                           ;incstack = 0
 10283                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10284  086F  3040               	movlw	64
 10285  0870  014B               	movlb	11	; select bank11
 10286  0871  009F               	movwf	31	;volatile
 10287                           
 10288                           ;mcc_generated_files/tmr0.c: 74:     TMR0H = 0xFE;
 10289  0872  30FE               	movlw	254
 10290  0873  009D               	movwf	29	;volatile
 10291                           
 10292                           ;mcc_generated_files/tmr0.c: 77:     TMR0L = 0x80;
 10293  0874  3080               	movlw	128
 10294  0875  009C               	movwf	28	;volatile
 10295                           
 10296                           ;mcc_generated_files/tmr0.c: 80:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
 10297  0876  081D               	movf	29,w	;volatile
 10298  0877  0140               	movlb	0	; select bank0
 10299  0878  00E8               	movwf	_timer0ReloadVal16bit+1	;volatile
 10300  0879  014B               	movlb	11	; select bank11
 10301  087A  081C               	movf	28,w	;volatile
 10302  087B  0140               	movlb	0	; select bank0
 10303  087C  00E7               	movwf	_timer0ReloadVal16bit	;volatile
 10304                           
 10305                           ;mcc_generated_files/tmr0.c: 83:     PIR0bits.TMR0IF = 0;
 10306  087D  014E               	movlb	14	; select bank14
 10307  087E  128C               	bcf	12,5	;volatile
 10308                           
 10309                           ;mcc_generated_files/tmr0.c: 86:     PIE0bits.TMR0IE = 1;
 10310  087F  1696               	bsf	22,5	;volatile
 10311                           
 10312                           ;mcc_generated_files/tmr0.c: 89:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 10313  0880  3075               	movlw	low _TMR0_DefaultInterruptHandler
 10314  0881  0140               	movlb	0	; select bank0
 10315  0882  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 10316  0883  3015               	movlw	high _TMR0_DefaultInterruptHandler
 10317  0884  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 10318  0885  3195  2593         	fcall	_TMR0_SetInterruptHandler
 10319                           
 10320                           ;mcc_generated_files/tmr0.c: 92:     T0CON0 = 0x90;
 10321  0887  3090               	movlw	144
 10322  0888  014B               	movlb	11	; select bank11
 10323  0889  009E               	movwf	30	;volatile
 10324  088A  0008               	return
 10325  088B                     __end_of_TMR0_Initialize:
 10326                           
 10327                           	psect	text5
 10328  15F5                     __ptext5:	
 10329 ;; *************** function _PMD_Initialize *****************
 10330 ;; Defined at:
 10331 ;;		line 79 in file "mcc_generated_files/mcc.c"
 10332 ;; Parameters:    Size  Location     Type
 10333 ;;		None
 10334 ;; Auto vars:     Size  Location     Type
 10335 ;;		None
 10336 ;; Return value:  Size  Location     Type
 10337 ;;                  1    wreg      void 
 10338 ;; Registers used:
 10339 ;;		status,2
 10340 ;; Tracked objects:
 10341 ;;		On entry : B3F/0
 10342 ;;		On exit  : B3F/F
 10343 ;;		Unchanged: B00/0
 10344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10349 ;;Total ram usage:        0 bytes
 10350 ;; Hardware stack levels used:    1
 10351 ;; Hardware stack levels required when called:    4
 10352 ;; This function calls:
 10353 ;;		Nothing
 10354 ;; This function is called by:
 10355 ;;		_SYSTEM_Initialize
 10356 ;; This function uses a non-reentrant model
 10357 ;;
 10358                           
 10359                           
 10360                           ;psect for function _PMD_Initialize
 10361  15F5                     _PMD_Initialize:
 10362                           
 10363                           ;mcc_generated_files/mcc.c: 82:     PMD0 = 0x00;
 10364                           
 10365                           ;incstack = 0
 10366                           ; Regs used in _PMD_Initialize: [status,2]
 10367  15F5  014F               	movlb	15	; select bank15
 10368  15F6  0196               	clrf	22	;volatile
 10369                           
 10370                           ;mcc_generated_files/mcc.c: 84:     PMD1 = 0x00;
 10371  15F7  0197               	clrf	23	;volatile
 10372                           
 10373                           ;mcc_generated_files/mcc.c: 86:     PMD2 = 0x00;
 10374  15F8  0198               	clrf	24	;volatile
 10375                           
 10376                           ;mcc_generated_files/mcc.c: 88:     PMD3 = 0x00;
 10377  15F9  0199               	clrf	25	;volatile
 10378                           
 10379                           ;mcc_generated_files/mcc.c: 90:     PMD4 = 0x00;
 10380  15FA  019A               	clrf	26	;volatile
 10381                           
 10382                           ;mcc_generated_files/mcc.c: 92:     PMD5 = 0x00;
 10383  15FB  019B               	clrf	27	;volatile
 10384                           
 10385                           ;mcc_generated_files/mcc.c: 94:     PMD6 = 0x00;
 10386  15FC  019C               	clrf	28	;volatile
 10387                           
 10388                           ;mcc_generated_files/mcc.c: 96:     PMD7 = 0x00;
 10389  15FD  019D               	clrf	29	;volatile
 10390  15FE  0008               	return
 10391  15FF                     __end_of_PMD_Initialize:
 10392                           
 10393                           	psect	text6
 10394  0988                     __ptext6:	
 10395 ;; *************** function _PIN_MANAGER_Initialize *****************
 10396 ;; Defined at:
 10397 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 10398 ;; Parameters:    Size  Location     Type
 10399 ;;		None
 10400 ;; Auto vars:     Size  Location     Type
 10401 ;;		None
 10402 ;; Return value:  Size  Location     Type
 10403 ;;                  1    wreg      void 
 10404 ;; Registers used:
 10405 ;;		wreg, status,2
 10406 ;; Tracked objects:
 10407 ;;		On entry : B3F/F
 10408 ;;		On exit  : B3F/3D
 10409 ;;		Unchanged: B00/0
 10410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10415 ;;Total ram usage:        0 bytes
 10416 ;; Hardware stack levels used:    1
 10417 ;; Hardware stack levels required when called:    4
 10418 ;; This function calls:
 10419 ;;		Nothing
 10420 ;; This function is called by:
 10421 ;;		_SYSTEM_Initialize
 10422 ;; This function uses a non-reentrant model
 10423 ;;
 10424                           
 10425                           
 10426                           ;psect for function _PIN_MANAGER_Initialize
 10427  0988                     _PIN_MANAGER_Initialize:
 10428                           
 10429                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 10430                           
 10431                           ;incstack = 0
 10432                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 10433  0988  0140               	movlb	0	; select bank0
 10434  0989  019C               	clrf	28	;volatile
 10435                           
 10436                           ;mcc_generated_files/pin_manager.c: 61:     LATA = 0x00;
 10437  098A  0198               	clrf	24	;volatile
 10438                           
 10439                           ;mcc_generated_files/pin_manager.c: 62:     LATB = 0x00;
 10440  098B  0199               	clrf	25	;volatile
 10441                           
 10442                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x00;
 10443  098C  019A               	clrf	26	;volatile
 10444                           
 10445                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0x08;
 10446  098D  3008               	movlw	8
 10447  098E  0096               	movwf	22	;volatile
 10448                           
 10449                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0xFE;
 10450  098F  30FE               	movlw	254
 10451  0990  0092               	movwf	18	;volatile
 10452                           
 10453                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xC0;
 10454  0991  30C0               	movlw	192
 10455  0992  0093               	movwf	19	;volatile
 10456                           
 10457                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0x80;
 10458  0993  3080               	movlw	128
 10459  0994  0094               	movwf	20	;volatile
 10460                           
 10461                           ;mcc_generated_files/pin_manager.c: 76:     ANSELC = 0x7F;
 10462  0995  307F               	movlw	127
 10463  0996  017E               	movlb	62	; select bank62
 10464  0997  00CE               	movwf	78	;volatile
 10465                           
 10466                           ;mcc_generated_files/pin_manager.c: 77:     ANSELB = 0xFF;
 10467  0998  30FF               	movlw	255
 10468  0999  00C3               	movwf	67	;volatile
 10469                           
 10470                           ;mcc_generated_files/pin_manager.c: 78:     ANSELA = 0xFF;
 10471  099A  30FF               	movlw	255
 10472  099B  00B8               	movwf	56	;volatile
 10473                           
 10474                           ;mcc_generated_files/pin_manager.c: 83:     WPUE = 0x00;
 10475  099C  01E5               	clrf	101	;volatile
 10476                           
 10477                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
 10478  099D  01C4               	clrf	68	;volatile
 10479                           
 10480                           ;mcc_generated_files/pin_manager.c: 85:     WPUA = 0x00;
 10481  099E  01B9               	clrf	57	;volatile
 10482                           
 10483                           ;mcc_generated_files/pin_manager.c: 86:     WPUC = 0x00;
 10484  099F  01CF               	clrf	79	;volatile
 10485                           
 10486                           ;mcc_generated_files/pin_manager.c: 91:     ODCONE = 0x00;
 10487  09A0  01E6               	clrf	102	;volatile
 10488                           
 10489                           ;mcc_generated_files/pin_manager.c: 92:     ODCONA = 0x00;
 10490  09A1  01BA               	clrf	58	;volatile
 10491                           
 10492                           ;mcc_generated_files/pin_manager.c: 93:     ODCONB = 0x00;
 10493  09A2  01C5               	clrf	69	;volatile
 10494                           
 10495                           ;mcc_generated_files/pin_manager.c: 94:     ODCONC = 0x00;
 10496  09A3  01D0               	clrf	80	;volatile
 10497                           
 10498                           ;mcc_generated_files/pin_manager.c: 99:     SLRCONA = 0xFF;
 10499  09A4  30FF               	movlw	255
 10500  09A5  00BB               	movwf	59	;volatile
 10501                           
 10502                           ;mcc_generated_files/pin_manager.c: 100:     SLRCONB = 0xFF;
 10503  09A6  30FF               	movlw	255
 10504  09A7  00C6               	movwf	70	;volatile
 10505                           
 10506                           ;mcc_generated_files/pin_manager.c: 101:     SLRCONC = 0xFF;
 10507  09A8  30FF               	movlw	255
 10508  09A9  00D1               	movwf	81	;volatile
 10509                           
 10510                           ;mcc_generated_files/pin_manager.c: 106:     INLVLA = 0x3F;
 10511  09AA  303F               	movlw	63
 10512  09AB  00BC               	movwf	60	;volatile
 10513                           
 10514                           ;mcc_generated_files/pin_manager.c: 107:     INLVLB = 0x3F;
 10515  09AC  303F               	movlw	63
 10516  09AD  00C7               	movwf	71	;volatile
 10517                           
 10518                           ;mcc_generated_files/pin_manager.c: 108:     INLVLC = 0x3F;
 10519  09AE  303F               	movlw	63
 10520  09AF  00D2               	movwf	82	;volatile
 10521                           
 10522                           ;mcc_generated_files/pin_manager.c: 117:     RC6PPS = 0x0F;
 10523  09B0  300F               	movlw	15
 10524  09B1  00A6               	movwf	38	;volatile
 10525                           
 10526                           ;mcc_generated_files/pin_manager.c: 118:     RX1DTPPS = 0x17;
 10527  09B2  3017               	movlw	23
 10528  09B3  017D               	movlb	61	; select bank61
 10529  09B4  00CB               	movwf	75	;volatile
 10530  09B5  0008               	return
 10531  09B6                     __end_of_PIN_MANAGER_Initialize:
 10532                           
 10533                           	psect	text7
 10534  15EB                     __ptext7:	
 10535 ;; *************** function _OSCILLATOR_Initialize *****************
 10536 ;; Defined at:
 10537 ;;		line 63 in file "mcc_generated_files/mcc.c"
 10538 ;; Parameters:    Size  Location     Type
 10539 ;;		None
 10540 ;; Auto vars:     Size  Location     Type
 10541 ;;		None
 10542 ;; Return value:  Size  Location     Type
 10543 ;;                  1    wreg      void 
 10544 ;; Registers used:
 10545 ;;		wreg, status,2
 10546 ;; Tracked objects:
 10547 ;;		On entry : B3F/3D
 10548 ;;		On exit  : B3F/11
 10549 ;;		Unchanged: B00/0
 10550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10555 ;;Total ram usage:        0 bytes
 10556 ;; Hardware stack levels used:    1
 10557 ;; Hardware stack levels required when called:    4
 10558 ;; This function calls:
 10559 ;;		Nothing
 10560 ;; This function is called by:
 10561 ;;		_SYSTEM_Initialize
 10562 ;; This function uses a non-reentrant model
 10563 ;;
 10564                           
 10565                           
 10566                           ;psect for function _OSCILLATOR_Initialize
 10567  15EB                     _OSCILLATOR_Initialize:
 10568                           
 10569                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x60;
 10570                           
 10571                           ;incstack = 0
 10572                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 10573  15EB  3060               	movlw	96
 10574  15EC  0151               	movlb	17	; select bank17
 10575  15ED  008D               	movwf	13	;volatile
 10576                           
 10577                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
 10578  15EE  018F               	clrf	15	;volatile
 10579                           
 10580                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
 10581  15EF  0191               	clrf	17	;volatile
 10582                           
 10583                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x06;
 10584  15F0  3006               	movlw	6
 10585  15F1  0093               	movwf	19	;volatile
 10586                           
 10587                           ;mcc_generated_files/mcc.c: 74:     OSCSTAT = 0x00;
 10588  15F2  0190               	clrf	16	;volatile
 10589                           
 10590                           ;mcc_generated_files/mcc.c: 76:     OSCTUNE = 0x00;
 10591  15F3  0192               	clrf	18	;volatile
 10592  15F4  0008               	return
 10593  15F5                     __end_of_OSCILLATOR_Initialize:
 10594                           
 10595                           	psect	text8
 10596  1586                     __ptext8:	
 10597 ;; *************** function _FVR_Initialize *****************
 10598 ;; Defined at:
 10599 ;;		line 58 in file "mcc_generated_files/fvr.c"
 10600 ;; Parameters:    Size  Location     Type
 10601 ;;		None
 10602 ;; Auto vars:     Size  Location     Type
 10603 ;;		None
 10604 ;; Return value:  Size  Location     Type
 10605 ;;                  1    wreg      void 
 10606 ;; Registers used:
 10607 ;;		wreg
 10608 ;; Tracked objects:
 10609 ;;		On entry : B3F/11
 10610 ;;		On exit  : B3F/12
 10611 ;;		Unchanged: B00/0
 10612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10617 ;;Total ram usage:        0 bytes
 10618 ;; Hardware stack levels used:    1
 10619 ;; Hardware stack levels required when called:    4
 10620 ;; This function calls:
 10621 ;;		Nothing
 10622 ;; This function is called by:
 10623 ;;		_SYSTEM_Initialize
 10624 ;; This function uses a non-reentrant model
 10625 ;;
 10626                           
 10627                           
 10628                           ;psect for function _FVR_Initialize
 10629  1586                     _FVR_Initialize:
 10630                           
 10631                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x84;
 10632                           
 10633                           ;incstack = 0
 10634                           ; Regs used in _FVR_Initialize: [wreg]
 10635  1586  3084               	movlw	132
 10636  1587  0152               	movlb	18	; select bank18
 10637  1588  008C               	movwf	12	;volatile
 10638  1589  0008               	return
 10639  158A                     __end_of_FVR_Initialize:
 10640                           
 10641                           	psect	text9
 10642  07BD                     __ptext9:	
 10643 ;; *************** function _EUSART1_Initialize *****************
 10644 ;; Defined at:
 10645 ;;		line 88 in file "mcc_generated_files/eusart1.c"
 10646 ;; Parameters:    Size  Location     Type
 10647 ;;		None
 10648 ;; Auto vars:     Size  Location     Type
 10649 ;;		None
 10650 ;; Return value:  Size  Location     Type
 10651 ;;                  1    wreg      void 
 10652 ;; Registers used:
 10653 ;;		wreg, status,2, status,0, pclath, cstack
 10654 ;; Tracked objects:
 10655 ;;		On entry : 3F/B
 10656 ;;		On exit  : 3F/E
 10657 ;;		Unchanged: 0/0
 10658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10661 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10662 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10663 ;;Total ram usage:        1 bytes
 10664 ;; Hardware stack levels used:    1
 10665 ;; Hardware stack levels required when called:    5
 10666 ;; This function calls:
 10667 ;;		_EUSART1_SetErrorHandler
 10668 ;;		_EUSART1_SetFramingErrorHandler
 10669 ;;		_EUSART1_SetOverrunErrorHandler
 10670 ;;		_EUSART1_SetRxInterruptHandler
 10671 ;;		_EUSART1_SetTxInterruptHandler
 10672 ;; This function is called by:
 10673 ;;		_SYSTEM_Initialize
 10674 ;; This function uses a non-reentrant model
 10675 ;;
 10676                           
 10677                           
 10678                           ;psect for function _EUSART1_Initialize
 10679  07BD                     _EUSART1_Initialize:
 10680                           
 10681                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
 10682                           
 10683                           ;incstack = 0
 10684                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10685  07BD  014E               	movlb	14	; select bank14
 10686  07BE  1299               	bcf	25,5	;volatile
 10687                           
 10688                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 10689  07BF  3019               	movlw	low _EUSART1_Receive_ISR
 10690  07C0  0140               	movlb	0	; select bank0
 10691  07C1  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 10692  07C2  300A               	movlw	high _EUSART1_Receive_ISR
 10693  07C3  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 10694  07C4  3195  259D  3187   	fcall	_EUSART1_SetRxInterruptHandler
 10695                           
 10696                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
 10697  07C7  014E               	movlb	14	; select bank14
 10698  07C8  1219               	bcf	25,4	;volatile
 10699                           
 10700                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
 10701  07C9  308B               	movlw	low _EUSART1_Transmit_ISR
 10702  07CA  0140               	movlb	0	; select bank0
 10703  07CB  00A0               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler
 10704  07CC  3008               	movlw	high _EUSART1_Transmit_ISR
 10705  07CD  00A1               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1
 10706  07CE  3195  25A2  3187   	fcall	_EUSART1_SetTxInterruptHandler
 10707                           
 10708                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
 10709  07D1  3008               	movlw	8
 10710  07D2  0142               	movlb	2	; select bank2
 10711  07D3  009F               	movwf	31	;volatile
 10712                           
 10713                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
 10714  07D4  3090               	movlw	144
 10715  07D5  009D               	movwf	29	;volatile
 10716                           
 10717                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
 10718  07D6  3024               	movlw	36
 10719  07D7  009E               	movwf	30	;volatile
 10720                           
 10721                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x44;
 10722  07D8  3044               	movlw	68
 10723  07D9  009B               	movwf	27	;volatile
 10724                           
 10725                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x00;
 10726  07DA  019C               	clrf	28	;volatile
 10727                           
 10728                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 10729  07DB  3074               	movlw	low _EUSART1_DefaultFramingErrorHandler
 10730  07DC  0140               	movlb	0	; select bank0
 10731  07DD  00A0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
 10732  07DE  3015               	movlw	high _EUSART1_DefaultFramingErrorHandler
 10733  07DF  00A1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
 10734  07E0  3195  25D1  3187   	fcall	_EUSART1_SetFramingErrorHandler
 10735                           
 10736                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 10737  07E3  3082               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 10738  07E4  0140               	movlb	0	; select bank0
 10739  07E5  00A0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
 10740  07E6  3015               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 10741  07E7  00A1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
 10742  07E8  3195  25D9  3187   	fcall	_EUSART1_SetOverrunErrorHandler
 10743                           
 10744                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 10745  07EB  3076               	movlw	low _EUSART1_DefaultErrorHandler
 10746  07EC  0140               	movlb	0	; select bank0
 10747  07ED  00A0               	movwf	EUSART1_SetErrorHandler@interruptHandler
 10748  07EE  3015               	movlw	high _EUSART1_DefaultErrorHandler
 10749  07EF  00A1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
 10750  07F0  3195  25C9         	fcall	_EUSART1_SetErrorHandler
 10751                           
 10752                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
 10753  07F2  0140               	movlb	0	; select bank0
 10754  07F3  01D6               	clrf	_eusart1RxLastError	;volatile
 10755                           
 10756                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
 10757  07F4  01F5               	clrf	_eusart1TxHead	;volatile
 10758                           
 10759                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
 10760  07F5  01F4               	clrf	_eusart1TxTail	;volatile
 10761                           
 10762                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
 10763  07F6  3040               	movlw	64
 10764  07F7  00A2               	movwf	??_EUSART1_Initialize
 10765  07F8  0822               	movf	??_EUSART1_Initialize,w
 10766  07F9  00EF               	movwf	_eusart1TxBufferRemaining	;volatile
 10767                           
 10768                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
 10769  07FA  01F3               	clrf	_eusart1RxHead	;volatile
 10770                           
 10771                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
 10772  07FB  01F2               	clrf	_eusart1RxTail	;volatile
 10773                           
 10774                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
 10775  07FC  01F1               	clrf	_eusart1RxCount	;volatile
 10776                           
 10777                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
 10778  07FD  014E               	movlb	14	; select bank14
 10779  07FE  1699               	bsf	25,5	;volatile
 10780  07FF  0008               	return
 10781  0800                     __end_of_EUSART1_Initialize:
 10782                           
 10783                           	psect	text10
 10784  15A2                     __ptext10:	
 10785 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
 10786 ;; Defined at:
 10787 ;;		line 276 in file "mcc_generated_files/eusart1.c"
 10788 ;; Parameters:    Size  Location     Type
 10789 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 10790 ;;		 -> EUSART1_Transmit_ISR(1), 
 10791 ;; Auto vars:     Size  Location     Type
 10792 ;;		None
 10793 ;; Return value:  Size  Location     Type
 10794 ;;                  1    wreg      void 
 10795 ;; Registers used:
 10796 ;;		wreg
 10797 ;; Tracked objects:
 10798 ;;		On entry : 3F/0
 10799 ;;		On exit  : 3F/0
 10800 ;;		Unchanged: 0/0
 10801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10802 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10805 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10806 ;;Total ram usage:        2 bytes
 10807 ;; Hardware stack levels used:    1
 10808 ;; Hardware stack levels required when called:    4
 10809 ;; This function calls:
 10810 ;;		Nothing
 10811 ;; This function is called by:
 10812 ;;		_EUSART1_Initialize
 10813 ;; This function uses a non-reentrant model
 10814 ;;
 10815                           
 10816                           
 10817                           ;psect for function _EUSART1_SetTxInterruptHandler
 10818  15A2                     _EUSART1_SetTxInterruptHandler:
 10819                           
 10820                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 10821                           
 10822                           ;incstack = 0
 10823                           ; Regs used in _EUSART1_SetTxInterruptHandler: [wreg]
 10824  15A2  0821               	movf	EUSART1_SetTxInterruptHandler@interruptHandler+1,w
 10825  15A3  00EE               	movwf	_EUSART1_TxDefaultInterruptHandler+1
 10826  15A4  0820               	movf	EUSART1_SetTxInterruptHandler@interruptHandler,w
 10827  15A5  00ED               	movwf	_EUSART1_TxDefaultInterruptHandler
 10828  15A6  0008               	return
 10829  15A7                     __end_of_EUSART1_SetTxInterruptHandler:
 10830                           
 10831                           	psect	text11
 10832  159D                     __ptext11:	
 10833 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 10834 ;; Defined at:
 10835 ;;		line 280 in file "mcc_generated_files/eusart1.c"
 10836 ;; Parameters:    Size  Location     Type
 10837 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 10838 ;;		 -> EUSART1_Receive_ISR(1), 
 10839 ;; Auto vars:     Size  Location     Type
 10840 ;;		None
 10841 ;; Return value:  Size  Location     Type
 10842 ;;                  1    wreg      void 
 10843 ;; Registers used:
 10844 ;;		wreg
 10845 ;; Tracked objects:
 10846 ;;		On entry : 3F/0
 10847 ;;		On exit  : 3F/0
 10848 ;;		Unchanged: 0/0
 10849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10850 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10853 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10854 ;;Total ram usage:        2 bytes
 10855 ;; Hardware stack levels used:    1
 10856 ;; Hardware stack levels required when called:    4
 10857 ;; This function calls:
 10858 ;;		Nothing
 10859 ;; This function is called by:
 10860 ;;		_EUSART1_Initialize
 10861 ;; This function uses a non-reentrant model
 10862 ;;
 10863                           
 10864                           
 10865                           ;psect for function _EUSART1_SetRxInterruptHandler
 10866  159D                     _EUSART1_SetRxInterruptHandler:
 10867                           
 10868                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 10869                           
 10870                           ;incstack = 0
 10871                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
 10872  159D  0821               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
 10873  159E  00EC               	movwf	_EUSART1_RxDefaultInterruptHandler+1
 10874  159F  0820               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
 10875  15A0  00EB               	movwf	_EUSART1_RxDefaultInterruptHandler
 10876  15A1  0008               	return
 10877  15A2                     __end_of_EUSART1_SetRxInterruptHandler:
 10878                           
 10879                           	psect	text12
 10880  15D9                     __ptext12:	
 10881 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 10882 ;; Defined at:
 10883 ;;		line 268 in file "mcc_generated_files/eusart1.c"
 10884 ;; Parameters:    Size  Location     Type
 10885 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 10886 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 10887 ;; Auto vars:     Size  Location     Type
 10888 ;;		None
 10889 ;; Return value:  Size  Location     Type
 10890 ;;                  1    wreg      void 
 10891 ;; Registers used:
 10892 ;;		wreg
 10893 ;; Tracked objects:
 10894 ;;		On entry : 3F/0
 10895 ;;		On exit  : 3F/1
 10896 ;;		Unchanged: 0/0
 10897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10898 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10901 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10902 ;;Total ram usage:        2 bytes
 10903 ;; Hardware stack levels used:    1
 10904 ;; Hardware stack levels required when called:    4
 10905 ;; This function calls:
 10906 ;;		Nothing
 10907 ;; This function is called by:
 10908 ;;		_EUSART1_Initialize
 10909 ;; This function uses a non-reentrant model
 10910 ;;
 10911                           
 10912                           
 10913                           ;psect for function _EUSART1_SetOverrunErrorHandler
 10914  15D9                     _EUSART1_SetOverrunErrorHandler:
 10915                           
 10916                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
 10917                           
 10918                           ;incstack = 0
 10919                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
 10920  15D9  0821               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
 10921  15DA  0141               	movlb	1	; select bank1
 10922  15DB  00C3               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+128)
 10923  15DC  0140               	movlb	0	; select bank0
 10924  15DD  0820               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
 10925  15DE  0141               	movlb	1	; select bank1
 10926  15DF  00C2               	movwf	_EUSART1_OverrunErrorHandler^(0+128)
 10927  15E0  0008               	return
 10928  15E1                     __end_of_EUSART1_SetOverrunErrorHandler:
 10929                           
 10930                           	psect	text13
 10931  15D1                     __ptext13:	
 10932 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 10933 ;; Defined at:
 10934 ;;		line 264 in file "mcc_generated_files/eusart1.c"
 10935 ;; Parameters:    Size  Location     Type
 10936 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 10937 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 10938 ;; Auto vars:     Size  Location     Type
 10939 ;;		None
 10940 ;; Return value:  Size  Location     Type
 10941 ;;                  1    wreg      void 
 10942 ;; Registers used:
 10943 ;;		wreg
 10944 ;; Tracked objects:
 10945 ;;		On entry : 3F/0
 10946 ;;		On exit  : 3F/1
 10947 ;;		Unchanged: 0/0
 10948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10949 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10952 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10953 ;;Total ram usage:        2 bytes
 10954 ;; Hardware stack levels used:    1
 10955 ;; Hardware stack levels required when called:    4
 10956 ;; This function calls:
 10957 ;;		Nothing
 10958 ;; This function is called by:
 10959 ;;		_EUSART1_Initialize
 10960 ;; This function uses a non-reentrant model
 10961 ;;
 10962                           
 10963                           
 10964                           ;psect for function _EUSART1_SetFramingErrorHandler
 10965  15D1                     _EUSART1_SetFramingErrorHandler:
 10966                           
 10967                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
 10968                           
 10969                           ;incstack = 0
 10970                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
 10971  15D1  0821               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
 10972  15D2  0141               	movlb	1	; select bank1
 10973  15D3  00C5               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+128)
 10974  15D4  0140               	movlb	0	; select bank0
 10975  15D5  0820               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
 10976  15D6  0141               	movlb	1	; select bank1
 10977  15D7  00C4               	movwf	_EUSART1_FramingErrorHandler^(0+128)
 10978  15D8  0008               	return
 10979  15D9                     __end_of_EUSART1_SetFramingErrorHandler:
 10980                           
 10981                           	psect	text14
 10982  15C9                     __ptext14:	
 10983 ;; *************** function _EUSART1_SetErrorHandler *****************
 10984 ;; Defined at:
 10985 ;;		line 272 in file "mcc_generated_files/eusart1.c"
 10986 ;; Parameters:    Size  Location     Type
 10987 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 10988 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 10989 ;; Auto vars:     Size  Location     Type
 10990 ;;		None
 10991 ;; Return value:  Size  Location     Type
 10992 ;;                  1    wreg      void 
 10993 ;; Registers used:
 10994 ;;		wreg
 10995 ;; Tracked objects:
 10996 ;;		On entry : 3F/0
 10997 ;;		On exit  : 3F/1
 10998 ;;		Unchanged: 0/0
 10999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11000 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11003 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11004 ;;Total ram usage:        2 bytes
 11005 ;; Hardware stack levels used:    1
 11006 ;; Hardware stack levels required when called:    4
 11007 ;; This function calls:
 11008 ;;		Nothing
 11009 ;; This function is called by:
 11010 ;;		_EUSART1_Initialize
 11011 ;; This function uses a non-reentrant model
 11012 ;;
 11013                           
 11014                           
 11015                           ;psect for function _EUSART1_SetErrorHandler
 11016  15C9                     _EUSART1_SetErrorHandler:
 11017                           
 11018                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
 11019                           
 11020                           ;incstack = 0
 11021                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
 11022  15C9  0821               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
 11023  15CA  0141               	movlb	1	; select bank1
 11024  15CB  00C1               	movwf	(_EUSART1_ErrorHandler+1)^(0+128)
 11025  15CC  0140               	movlb	0	; select bank0
 11026  15CD  0820               	movf	EUSART1_SetErrorHandler@interruptHandler,w
 11027  15CE  0141               	movlb	1	; select bank1
 11028  15CF  00C0               	movwf	_EUSART1_ErrorHandler^(0+128)
 11029  15D0  0008               	return
 11030  15D1                     __end_of_EUSART1_SetErrorHandler:
 11031                           
 11032                           	psect	text15
 11033  1598                     __ptext15:	
 11034 ;; *************** function _DAC1_Initialize *****************
 11035 ;; Defined at:
 11036 ;;		line 58 in file "mcc_generated_files/dac1.c"
 11037 ;; Parameters:    Size  Location     Type
 11038 ;;		None
 11039 ;; Auto vars:     Size  Location     Type
 11040 ;;		None
 11041 ;; Return value:  Size  Location     Type
 11042 ;;                  1    wreg      void 
 11043 ;; Registers used:
 11044 ;;		wreg, status,2
 11045 ;; Tracked objects:
 11046 ;;		On entry : B3F/2
 11047 ;;		On exit  : B3F/12
 11048 ;;		Unchanged: B00/0
 11049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11054 ;;Total ram usage:        0 bytes
 11055 ;; Hardware stack levels used:    1
 11056 ;; Hardware stack levels required when called:    4
 11057 ;; This function calls:
 11058 ;;		Nothing
 11059 ;; This function is called by:
 11060 ;;		_SYSTEM_Initialize
 11061 ;; This function uses a non-reentrant model
 11062 ;;
 11063                           
 11064                           
 11065                           ;psect for function _DAC1_Initialize
 11066  1598                     _DAC1_Initialize:
 11067                           
 11068                           ;mcc_generated_files/dac1.c: 61:     DAC1CON0 = 0xA8;
 11069                           
 11070                           ;incstack = 0
 11071                           ; Regs used in _DAC1_Initialize: [wreg+status,2]
 11072  1598  30A8               	movlw	168
 11073  1599  0152               	movlb	18	; select bank18
 11074  159A  008E               	movwf	14	;volatile
 11075                           
 11076                           ;mcc_generated_files/dac1.c: 63:     DAC1CON1 = 0x00;
 11077  159B  018F               	clrf	15	;volatile
 11078  159C  0008               	return
 11079  159D                     __end_of_DAC1_Initialize:
 11080                           
 11081                           	psect	text16
 11082  0803                     __ptext16:	
 11083 ;; *************** function _ADCC_Initialize *****************
 11084 ;; Defined at:
 11085 ;;		line 63 in file "mcc_generated_files/adcc.c"
 11086 ;; Parameters:    Size  Location     Type
 11087 ;;		None
 11088 ;; Auto vars:     Size  Location     Type
 11089 ;;		None
 11090 ;; Return value:  Size  Location     Type
 11091 ;;                  1    wreg      void 
 11092 ;; Registers used:
 11093 ;;		wreg, status,2
 11094 ;; Tracked objects:
 11095 ;;		On entry : B3F/12
 11096 ;;		On exit  : B3F/2
 11097 ;;		Unchanged: B00/0
 11098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11103 ;;Total ram usage:        0 bytes
 11104 ;; Hardware stack levels used:    1
 11105 ;; Hardware stack levels required when called:    4
 11106 ;; This function calls:
 11107 ;;		Nothing
 11108 ;; This function is called by:
 11109 ;;		_SYSTEM_Initialize
 11110 ;; This function uses a non-reentrant model
 11111 ;;
 11112                           
 11113                           
 11114                           ;psect for function _ADCC_Initialize
 11115  0803                     _ADCC_Initialize:
 11116                           
 11117                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
 11118                           
 11119                           ;incstack = 0
 11120                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 11121  0803  0141               	movlb	1	; select bank1
 11122  0804  018C               	clrf	12	;volatile
 11123                           
 11124                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
 11125  0805  018D               	clrf	13	;volatile
 11126                           
 11127                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
 11128  0806  018E               	clrf	14	;volatile
 11129                           
 11130                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
 11131  0807  018F               	clrf	15	;volatile
 11132                           
 11133                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
 11134  0808  0192               	clrf	18	;volatile
 11135                           
 11136                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
 11137  0809  0193               	clrf	19	;volatile
 11138                           
 11139                           ;mcc_generated_files/adcc.c: 79:     ADACCU = 0x00;
 11140  080A  0198               	clrf	24	;volatile
 11141                           
 11142                           ;mcc_generated_files/adcc.c: 81:     ADRPT = 0x00;
 11143  080B  019A               	clrf	26	;volatile
 11144                           
 11145                           ;mcc_generated_files/adcc.c: 83:     ADPCH = 0x00;
 11146  080C  019F               	clrf	31	;volatile
 11147                           
 11148                           ;mcc_generated_files/adcc.c: 85:     ADACQL = 0x00;
 11149  080D  0142               	movlb	2	; select bank2
 11150  080E  018C               	clrf	12	;volatile
 11151                           
 11152                           ;mcc_generated_files/adcc.c: 87:     ADACQH = 0x00;
 11153  080F  018D               	clrf	13	;volatile
 11154                           
 11155                           ;mcc_generated_files/adcc.c: 89:     ADCAP = 0x00;
 11156  0810  018E               	clrf	14	;volatile
 11157                           
 11158                           ;mcc_generated_files/adcc.c: 91:     ADPREL = 0x00;
 11159  0811  018F               	clrf	15	;volatile
 11160                           
 11161                           ;mcc_generated_files/adcc.c: 93:     ADPREH = 0x00;
 11162  0812  0190               	clrf	16	;volatile
 11163                           
 11164                           ;mcc_generated_files/adcc.c: 95:     ADCON1 = 0x00;
 11165  0813  0192               	clrf	18	;volatile
 11166                           
 11167                           ;mcc_generated_files/adcc.c: 97:     ADCON2 = 0x00;
 11168  0814  0193               	clrf	19	;volatile
 11169                           
 11170                           ;mcc_generated_files/adcc.c: 99:     ADCON3 = 0x00;
 11171  0815  0194               	clrf	20	;volatile
 11172                           
 11173                           ;mcc_generated_files/adcc.c: 101:     ADSTAT = 0x00;
 11174  0816  0195               	clrf	21	;volatile
 11175                           
 11176                           ;mcc_generated_files/adcc.c: 103:     ADREF = 0x00;
 11177  0817  0196               	clrf	22	;volatile
 11178                           
 11179                           ;mcc_generated_files/adcc.c: 105:     ADACT = 0x00;
 11180  0818  0197               	clrf	23	;volatile
 11181                           
 11182                           ;mcc_generated_files/adcc.c: 107:     ADCLK = 0x00;
 11183  0819  0198               	clrf	24	;volatile
 11184                           
 11185                           ;mcc_generated_files/adcc.c: 109:     ADCON0 = 0x94;
 11186  081A  3094               	movlw	148
 11187  081B  0091               	movwf	17	;volatile
 11188  081C  0008               	return
 11189  081D                     __end_of_ADCC_Initialize:
 11190                           
 11191                           	psect	text17
 11192  0ADB                     __ptext17:	
 11193 ;; *************** function _NEMS_read_sensors *****************
 11194 ;; Defined at:
 11195 ;;		line 1045 in file "NEMS.c"
 11196 ;; Parameters:    Size  Location     Type
 11197 ;;		None
 11198 ;; Auto vars:     Size  Location     Type
 11199 ;;  aux2            2    9[BANK0 ] unsigned short 
 11200 ;;  aux             2    7[BANK0 ] unsigned short 
 11201 ;;  i               1    0        unsigned char 
 11202 ;; Return value:  Size  Location     Type
 11203 ;;                  1    wreg      void 
 11204 ;; Registers used:
 11205 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11206 ;; Tracked objects:
 11207 ;;		On entry : 3F/4
 11208 ;;		On exit  : 3F/0
 11209 ;;		Unchanged: 0/0
 11210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11212 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11213 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11214 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11215 ;;Total ram usage:        5 bytes
 11216 ;; Hardware stack levels used:    1
 11217 ;; Hardware stack levels required when called:    6
 11218 ;; This function calls:
 11219 ;;		_ADCC_GetSingleConversion
 11220 ;;		_write
 11221 ;; This function is called by:
 11222 ;;		_main
 11223 ;; This function uses a non-reentrant model
 11224 ;;
 11225                           
 11226                           
 11227                           ;psect for function _NEMS_read_sensors
 11228  0ADB                     _NEMS_read_sensors:
 11229                           
 11230                           ;NEMS.c: 1047:     unsigned short aux,aux2;;NEMS.c: 1048:     unsigned char i;;NEMS.c: 1
      +                          050:     aux = ADCC_GetSingleConversion(SENSOR1);
 11231                           
 11232                           ;incstack = 0
 11233                           ; Regs used in _NEMS_read_sensors: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11234  0ADB  3004               	movlw	4
 11235  0ADC  3196  2665  318A   	fcall	_ADCC_GetSingleConversion
 11236  0ADF  0821               	movf	?_ADCC_GetSingleConversion+1,w
 11237  0AE0  00A8               	movwf	NEMS_read_sensors@aux+1
 11238  0AE1  0820               	movf	?_ADCC_GetSingleConversion,w
 11239  0AE2  00A7               	movwf	NEMS_read_sensors@aux
 11240                           
 11241                           ;NEMS.c: 1051:     aux2 = ADCC_GetSingleConversion(SENSOR2);
 11242  0AE3  3005               	movlw	5
 11243  0AE4  3196  2665  318A   	fcall	_ADCC_GetSingleConversion
 11244  0AE7  0821               	movf	?_ADCC_GetSingleConversion+1,w
 11245  0AE8  00AA               	movwf	NEMS_read_sensors@aux2+1
 11246  0AE9  0820               	movf	?_ADCC_GetSingleConversion,w
 11247  0AEA  00A9               	movwf	NEMS_read_sensors@aux2
 11248                           
 11249                           ;NEMS.c: 1053:     sens_buf[sensor_ind++] = (unsigned char)(aux & 0xff);
 11250  0AEB  0827               	movf	NEMS_read_sensors@aux,w
 11251  0AEC  00A6               	movwf	??_NEMS_read_sensors
 11252  0AED  084D               	movf	_sensor_ind,w
 11253  0AEE  3EA0               	addlw	(low (_sens_buf| 0))& (0+255)
 11254  0AEF  0086               	movwf	6
 11255  0AF0  0187               	clrf	7
 11256  0AF1  0826               	movf	??_NEMS_read_sensors,w
 11257  0AF2  0081               	movwf	1
 11258  0AF3  3001               	movlw	1
 11259  0AF4  00A6               	movwf	??_NEMS_read_sensors
 11260  0AF5  0826               	movf	??_NEMS_read_sensors,w
 11261  0AF6  07CD               	addwf	_sensor_ind,f	;volatile
 11262                           
 11263                           ;NEMS.c: 1054:     sens_buf[sensor_ind++] = (unsigned char)((aux >> 8) & 0xff);
 11264  0AF7  0828               	movf	NEMS_read_sensors@aux+1,w
 11265  0AF8  00A6               	movwf	??_NEMS_read_sensors
 11266  0AF9  084D               	movf	_sensor_ind,w
 11267  0AFA  3EA0               	addlw	(low (_sens_buf| 0))& (0+255)
 11268  0AFB  0086               	movwf	6
 11269  0AFC  0187               	clrf	7
 11270  0AFD  0826               	movf	??_NEMS_read_sensors,w
 11271  0AFE  0081               	movwf	1
 11272  0AFF  3001               	movlw	1
 11273  0B00  00A6               	movwf	??_NEMS_read_sensors
 11274  0B01  0826               	movf	??_NEMS_read_sensors,w
 11275  0B02  07CD               	addwf	_sensor_ind,f	;volatile
 11276                           
 11277                           ;NEMS.c: 1055:     sens_buf[sensor_ind++] = (unsigned char)(aux2 & 0xff);
 11278  0B03  0829               	movf	NEMS_read_sensors@aux2,w
 11279  0B04  00A6               	movwf	??_NEMS_read_sensors
 11280  0B05  084D               	movf	_sensor_ind,w
 11281  0B06  3EA0               	addlw	(low (_sens_buf| 0))& (0+255)
 11282  0B07  0086               	movwf	6
 11283  0B08  0187               	clrf	7
 11284  0B09  0826               	movf	??_NEMS_read_sensors,w
 11285  0B0A  0081               	movwf	1
 11286  0B0B  3001               	movlw	1
 11287  0B0C  00A6               	movwf	??_NEMS_read_sensors
 11288  0B0D  0826               	movf	??_NEMS_read_sensors,w
 11289  0B0E  07CD               	addwf	_sensor_ind,f	;volatile
 11290                           
 11291                           ;NEMS.c: 1056:     sens_buf[sensor_ind++] = (unsigned char)((aux2 >> 8) & 0xff);
 11292  0B0F  082A               	movf	NEMS_read_sensors@aux2+1,w
 11293  0B10  00A6               	movwf	??_NEMS_read_sensors
 11294  0B11  084D               	movf	_sensor_ind,w
 11295  0B12  3EA0               	addlw	(low (_sens_buf| 0))& (0+255)
 11296  0B13  0086               	movwf	6
 11297  0B14  0187               	clrf	7
 11298  0B15  0826               	movf	??_NEMS_read_sensors,w
 11299  0B16  0081               	movwf	1
 11300  0B17  3001               	movlw	1
 11301  0B18  00A6               	movwf	??_NEMS_read_sensors
 11302  0B19  0826               	movf	??_NEMS_read_sensors,w
 11303  0B1A  07CD               	addwf	_sensor_ind,f	;volatile
 11304                           
 11305                           ;NEMS.c: 1058:     if (sensor_ind >= 4*8) {
 11306  0B1B  3020               	movlw	32
 11307  0B1C  024D               	subwf	_sensor_ind,w	;volatile
 11308  0B1D  1C03               	skipc
 11309  0B1E  0008               	return
 11310                           
 11311                           ;NEMS.c: 1059:         write(sens_buf,4*8);
 11312  0B1F  3020               	movlw	32
 11313  0B20  00A6               	movwf	??_NEMS_read_sensors
 11314  0B21  0826               	movf	??_NEMS_read_sensors,w
 11315  0B22  00A2               	movwf	write@lenght
 11316  0B23  30A0               	movlw	(low (_sens_buf| 0))& (0+255)
 11317  0B24  3188  2053         	fcall	_write
 11318                           
 11319                           ;NEMS.c: 1060:         sensor_ind = 0;
 11320  0B26  01CD               	clrf	_sensor_ind	;volatile
 11321  0B27  0008               	return
 11322  0B28                     __end_of_NEMS_read_sensors:
 11323                           
 11324                           	psect	text18
 11325  0853                     __ptext18:	
 11326 ;; *************** function _write *****************
 11327 ;; Defined at:
 11328 ;;		line 15 in file "comm.c"
 11329 ;; Parameters:    Size  Location     Type
 11330 ;;  pt              1    wreg     PTR unsigned char 
 11331 ;;		 -> sens_buf(32), 
 11332 ;;  lenght          1    2[BANK0 ] unsigned char 
 11333 ;; Auto vars:     Size  Location     Type
 11334 ;;  pt              1    4[BANK0 ] PTR unsigned char 
 11335 ;;		 -> sens_buf(32), 
 11336 ;;  i               1    5[BANK0 ] unsigned char 
 11337 ;; Return value:  Size  Location     Type
 11338 ;;                  1    wreg      void 
 11339 ;; Registers used:
 11340 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11341 ;; Tracked objects:
 11342 ;;		On entry : 3F/0
 11343 ;;		On exit  : 3F/0
 11344 ;;		Unchanged: 0/0
 11345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11346 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11347 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11348 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11349 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11350 ;;Total ram usage:        4 bytes
 11351 ;; Hardware stack levels used:    1
 11352 ;; Hardware stack levels required when called:    5
 11353 ;; This function calls:
 11354 ;;		_EUSART1_Write
 11355 ;;		_EUSART1_is_tx_ready
 11356 ;; This function is called by:
 11357 ;;		_NEMS_read_sensors
 11358 ;; This function uses a non-reentrant model
 11359 ;;
 11360                           
 11361                           
 11362                           ;psect for function _write
 11363  0853                     _write:
 11364                           
 11365                           ;incstack = 0
 11366                           ; Regs used in _write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11367                           ;write@pt stored from wreg
 11368  0853  00A4               	movwf	write@pt
 11369                           
 11370                           ;comm.c: 15: void write(unsigned char *pt, unsigned char lenght);comm.c: 16: {;comm.c: 1
      +                          7:     unsigned char i;;comm.c: 19:     for (i=0; i<lenght; i++) {
 11371  0854  01A5               	clrf	write@i
 11372  0855                     l5133:
 11373  0855  0822               	movf	write@lenght,w
 11374  0856  0225               	subwf	write@i,w
 11375  0857  1803               	btfsc	3,0
 11376  0858  0008               	return
 11377  0859                     l5127:
 11378  0859  3195  25BA  3188   	fcall	_EUSART1_is_tx_ready
 11379  085C  3A00               	xorlw	0
 11380  085D  1903               	skipnz
 11381  085E  2859               	goto	l5127
 11382                           
 11383                           ;comm.c: 21:         EUSART1_Write(pt[i]);
 11384  085F  0825               	movf	write@i,w
 11385  0860  0724               	addwf	write@pt,w
 11386  0861  00A3               	movwf	??_write
 11387  0862  0823               	movf	??_write,w
 11388  0863  0086               	movwf	6
 11389  0864  0187               	clrf	7
 11390  0865  0801               	movf	1,w
 11391  0866  3188  20E8  3188   	fcall	_EUSART1_Write
 11392                           
 11393                           ;comm.c: 22:     }
 11394  0869  3001               	movlw	1
 11395  086A  0140               	movlb	0	; select bank0
 11396  086B  00A3               	movwf	??_write
 11397  086C  0823               	movf	??_write,w
 11398  086D  07A5               	addwf	write@i,f
 11399  086E  2855               	goto	l5133
 11400  086F                     __end_of_write:
 11401                           
 11402                           	psect	text19
 11403  1665                     __ptext19:	
 11404 ;; *************** function _ADCC_GetSingleConversion *****************
 11405 ;; Defined at:
 11406 ;;		line 138 in file "mcc_generated_files/adcc.c"
 11407 ;; Parameters:    Size  Location     Type
 11408 ;;  channel         1    wreg     enum E12512
 11409 ;; Auto vars:     Size  Location     Type
 11410 ;;  channel         1    3[BANK0 ] enum E12512
 11411 ;; Return value:  Size  Location     Type
 11412 ;;                  2    0[BANK0 ] unsigned short 
 11413 ;; Registers used:
 11414 ;;		wreg
 11415 ;; Tracked objects:
 11416 ;;		On entry : 3B/4
 11417 ;;		On exit  : 3F/0
 11418 ;;		Unchanged: 0/0
 11419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11420 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11421 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11423 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11424 ;;Total ram usage:        4 bytes
 11425 ;; Hardware stack levels used:    1
 11426 ;; Hardware stack levels required when called:    4
 11427 ;; This function calls:
 11428 ;;		Nothing
 11429 ;; This function is called by:
 11430 ;;		_NEMS_read_sensors
 11431 ;; This function uses a non-reentrant model
 11432 ;;
 11433                           
 11434                           
 11435                           ;psect for function _ADCC_GetSingleConversion
 11436  1665                     _ADCC_GetSingleConversion:
 11437                           
 11438                           ;incstack = 0
 11439                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 11440                           ;ADCC_GetSingleConversion@channel stored from wreg
 11441  1665  0140               	movlb	0	; select bank0
 11442  1666  00A3               	movwf	ADCC_GetSingleConversion@channel
 11443                           
 11444                           ;mcc_generated_files/adcc.c: 138: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 139: {;mcc_generated_files/adcc.c: 141:     ADPCH = 
      +                          channel;
 11445  1667  0823               	movf	ADCC_GetSingleConversion@channel,w
 11446  1668  0141               	movlb	1	; select bank1
 11447  1669  009F               	movwf	31	;volatile
 11448                           
 11449                           ;mcc_generated_files/adcc.c: 144:     ADCON0bits.ADON = 1;
 11450  166A  0142               	movlb	2	; select bank2
 11451  166B  1791               	bsf	17,7	;volatile
 11452                           
 11453                           ;mcc_generated_files/adcc.c: 147:     ADCON0bits.ADCONT = 0;
 11454  166C  1311               	bcf	17,6	;volatile
 11455                           
 11456                           ;mcc_generated_files/adcc.c: 150:     ADCON0bits.ADGO = 1;
 11457  166D  1411               	bsf	17,0	;volatile
 11458  166E                     l472:	
 11459                           ;mcc_generated_files/adcc.c: 155:     {;mcc_generated_files/adcc.c: 156:     }
 11460                           
 11461                           
 11462                           ;mcc_generated_files/adcc.c: 154:     while (ADCON0bits.ADGO)
 11463  166E  1811               	btfsc	17,0	;volatile
 11464  166F  2E6E               	goto	l472
 11465                           
 11466                           ;mcc_generated_files/adcc.c: 160:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 11467  1670  0141               	movlb	1	; select bank1
 11468  1671  081E               	movf	30,w	;volatile
 11469  1672  0140               	movlb	0	; select bank0
 11470  1673  00A1               	movwf	?_ADCC_GetSingleConversion+1
 11471  1674  0141               	movlb	1	; select bank1
 11472  1675  081D               	movf	29,w	;volatile
 11473  1676  0140               	movlb	0	; select bank0
 11474  1677  00A0               	movwf	?_ADCC_GetSingleConversion
 11475  1678  0008               	return
 11476  1679                     __end_of_ADCC_GetSingleConversion:
 11477                           
 11478                           	psect	text20
 11479  0C59                     __ptext20:	
 11480 ;; *************** function _NEMS_message_handler *****************
 11481 ;; Defined at:
 11482 ;;		line 129 in file "NEMS.c"
 11483 ;; Parameters:    Size  Location     Type
 11484 ;;		None
 11485 ;; Auto vars:     Size  Location     Type
 11486 ;;  header          1   44[BANK0 ] unsigned char 
 11487 ;; Return value:  Size  Location     Type
 11488 ;;                  1    wreg      void 
 11489 ;; Registers used:
 11490 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11491 ;; Tracked objects:
 11492 ;;		On entry : 31/0
 11493 ;;		On exit  : 0/0
 11494 ;;		Unchanged: 0/0
 11495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11497 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11498 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11499 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11500 ;;Total ram usage:        3 bytes
 11501 ;; Hardware stack levels used:    1
 11502 ;; Hardware stack levels required when called:    9
 11503 ;; This function calls:
 11504 ;;		_EUSART1_Read
 11505 ;;		_NEMS_binary_command
 11506 ;;		_NEMS_get_program
 11507 ;;		_NEMS_load_program
 11508 ;;		_NEMS_save_program
 11509 ;;		_NEMS_set_OFF_time
 11510 ;;		_NEMS_set_ON_time
 11511 ;;		_NEMS_set_amplitude
 11512 ;;		_NEMS_set_amplitude2
 11513 ;;		_NEMS_set_channel1
 11514 ;;		_NEMS_set_channel2
 11515 ;;		_NEMS_set_channel3
 11516 ;;		_NEMS_set_channel4
 11517 ;;		_NEMS_set_contractions
 11518 ;;		_NEMS_set_frequency
 11519 ;;		_NEMS_set_phase_duration
 11520 ;;		_NEMS_set_ramp_down
 11521 ;;		_NEMS_set_ramp_up
 11522 ;;		_NEMS_set_symmetry_factor
 11523 ;;		_NEMS_start_program
 11524 ;;		_NEMS_start_sensors
 11525 ;;		_NEMS_stop_program
 11526 ;;		_NEMS_stop_sensors
 11527 ;;		__puts
 11528 ;; This function is called by:
 11529 ;;		_main
 11530 ;; This function uses a non-reentrant model
 11531 ;;
 11532                           
 11533                           
 11534                           ;psect for function _NEMS_message_handler
 11535  0C59                     _NEMS_message_handler:
 11536                           
 11537                           ;NEMS.c: 131:     unsigned char header;;NEMS.c: 133:     header = EUSART1_Read();
 11538                           
 11539                           ;incstack = 0
 11540                           ; Regs used in _NEMS_message_handler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11541  0C59  3189  210C  318C   	fcall	_EUSART1_Read
 11542  0C5C  00CA               	movwf	??_NEMS_message_handler
 11543  0C5D  084A               	movf	??_NEMS_message_handler,w
 11544  0C5E  00CC               	movwf	NEMS_message_handler@header
 11545                           
 11546                           ;NEMS.c: 135:     switch (header) {
 11547  0C5F  2CA9               	goto	l5265
 11548  0C60                     l5217:
 11549                           
 11550                           ;NEMS.c: 137:             _puts("Ok ");
 11551  0C60  3088               	movlw	low (STR_1| (0+32768))
 11552  0C61  00A2               	movwf	__puts@pt
 11553  0C62  3099               	movlw	high (STR_1| (0+32768))
 11554  0C63  00A3               	movwf	__puts@pt+1
 11555  0C64  3189  2132         	fcall	__puts
 11556                           
 11557                           ;NEMS.c: 138:             break;
 11558  0C66  0008               	return
 11559  0C67                     l5219:
 11560                           
 11561                           ;NEMS.c: 141:             NEMS_binary_command();
 11562  0C67  318B  2379         	fcall	_NEMS_binary_command
 11563                           
 11564                           ;NEMS.c: 142:             break;
 11565  0C69  0008               	return
 11566  0C6A                     l5221:
 11567                           
 11568                           ;NEMS.c: 145:             NEMS_set_amplitude();
 11569  0C6A  3196  26BE         	fcall	_NEMS_set_amplitude
 11570                           
 11571                           ;NEMS.c: 146:             break;
 11572  0C6C  0008               	return
 11573  0C6D                     l5223:
 11574                           
 11575                           ;NEMS.c: 149:             NEMS_set_amplitude2();
 11576  0C6D  3196  26D5         	fcall	_NEMS_set_amplitude2
 11577                           
 11578                           ;NEMS.c: 150:             break;
 11579  0C6F  0008               	return
 11580  0C70                     l5225:
 11581                           
 11582                           ;NEMS.c: 153:             NEMS_set_frequency();
 11583  0C70  3197  275F         	fcall	_NEMS_set_frequency
 11584                           
 11585                           ;NEMS.c: 154:             break;
 11586  0C72  0008               	return
 11587  0C73                     l5227:
 11588                           
 11589                           ;NEMS.c: 157:             NEMS_set_phase_duration();
 11590  0C73  3197  2776         	fcall	_NEMS_set_phase_duration
 11591                           
 11592                           ;NEMS.c: 158:             break;
 11593  0C75  0008               	return
 11594  0C76                     l5229:
 11595                           
 11596                           ;NEMS.c: 161:             NEMS_set_symmetry_factor();
 11597  0C76  3197  27BB         	fcall	_NEMS_set_symmetry_factor
 11598                           
 11599                           ;NEMS.c: 162:             break;
 11600  0C78  0008               	return
 11601  0C79                     l5231:
 11602                           
 11603                           ;NEMS.c: 165:             NEMS_set_ON_time();
 11604  0C79  3196  26A7         	fcall	_NEMS_set_ON_time
 11605                           
 11606                           ;NEMS.c: 166:             break;
 11607  0C7B  0008               	return
 11608  0C7C                     l5233:
 11609                           
 11610                           ;NEMS.c: 169:             NEMS_set_OFF_time();
 11611  0C7C  3196  2690         	fcall	_NEMS_set_OFF_time
 11612                           
 11613                           ;NEMS.c: 170:             break;
 11614  0C7E  0008               	return
 11615  0C7F                     l5235:
 11616                           
 11617                           ;NEMS.c: 173:             NEMS_set_contractions();
 11618  0C7F  3197  2748         	fcall	_NEMS_set_contractions
 11619                           
 11620                           ;NEMS.c: 174:             break;
 11621  0C81  0008               	return
 11622  0C82                     l5237:
 11623                           
 11624                           ;NEMS.c: 177:             NEMS_set_ramp_up();
 11625  0C82  3197  27A4         	fcall	_NEMS_set_ramp_up
 11626                           
 11627                           ;NEMS.c: 178:             break;
 11628  0C84  0008               	return
 11629  0C85                     l5239:
 11630                           
 11631                           ;NEMS.c: 181:             NEMS_set_ramp_down();
 11632  0C85  3197  278D         	fcall	_NEMS_set_ramp_down
 11633                           
 11634                           ;NEMS.c: 182:             break;
 11635  0C87  0008               	return
 11636  0C88                     l5241:
 11637                           
 11638                           ;NEMS.c: 185:             NEMS_get_program();
 11639  0C88  318E  2662         	fcall	_NEMS_get_program
 11640                           
 11641                           ;NEMS.c: 186:             break;
 11642  0C8A  0008               	return
 11643  0C8B                     l5243:
 11644                           
 11645                           ;NEMS.c: 189:             NEMS_save_program();
 11646  0C8B  318D  25A7         	fcall	_NEMS_save_program
 11647                           
 11648                           ;NEMS.c: 190:             break;
 11649  0C8D  0008               	return
 11650  0C8E                     l5245:
 11651                           
 11652                           ;NEMS.c: 193:             NEMS_load_program();
 11653  0C8E  318C  24F9         	fcall	_NEMS_load_program
 11654                           
 11655                           ;NEMS.c: 194:             break;
 11656  0C90  0008               	return
 11657  0C91                     l5247:
 11658                           
 11659                           ;NEMS.c: 197:             NEMS_start_program();
 11660  0C91  3196  2651         	fcall	_NEMS_start_program
 11661                           
 11662                           ;NEMS.c: 198:             break;
 11663  0C93  0008               	return
 11664  0C94                     l5249:
 11665                           
 11666                           ;NEMS.c: 201:             NEMS_stop_program();
 11667  0C94  3195  25E1         	fcall	_NEMS_stop_program
 11668                           
 11669                           ;NEMS.c: 202:             break;
 11670  0C96  0008               	return
 11671  0C97                     l5251:
 11672                           
 11673                           ;NEMS.c: 205:             NEMS_set_channel1();
 11674  0C97  3196  26EC         	fcall	_NEMS_set_channel1
 11675                           
 11676                           ;NEMS.c: 206:             break;
 11677  0C99  0008               	return
 11678  0C9A                     l5253:
 11679                           
 11680                           ;NEMS.c: 209:             NEMS_set_channel2();
 11681  0C9A  3197  2703         	fcall	_NEMS_set_channel2
 11682                           
 11683                           ;NEMS.c: 210:             break;
 11684  0C9C  0008               	return
 11685  0C9D                     l5255:
 11686                           
 11687                           ;NEMS.c: 213:             NEMS_set_channel3();
 11688  0C9D  3197  271A         	fcall	_NEMS_set_channel3
 11689                           
 11690                           ;NEMS.c: 214:             break;
 11691  0C9F  0008               	return
 11692  0CA0                     l5257:
 11693                           
 11694                           ;NEMS.c: 217:             NEMS_set_channel4();
 11695  0CA0  3197  2731         	fcall	_NEMS_set_channel4
 11696                           
 11697                           ;NEMS.c: 218:             break;
 11698  0CA2  0008               	return
 11699  0CA3                     l5259:
 11700                           
 11701                           ;NEMS.c: 221:             NEMS_start_sensors();
 11702  0CA3  3195  25AD         	fcall	_NEMS_start_sensors
 11703                           
 11704                           ;NEMS.c: 222:             break;
 11705  0CA5  0008               	return
 11706  0CA6                     l5261:
 11707                           
 11708                           ;NEMS.c: 225:             NEMS_stop_sensors();
 11709  0CA6  3188  2000         	fcall	_NEMS_stop_sensors
 11710                           
 11711                           ;NEMS.c: 226:             break;
 11712  0CA8  0008               	return
 11713  0CA9                     l5265:
 11714  0CA9  084C               	movf	NEMS_message_handler@header,w
 11715  0CAA  00CA               	movwf	??_NEMS_message_handler
 11716  0CAB  01CB               	clrf	??_NEMS_message_handler+1
 11717                           
 11718                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11719                           ; Switch size 1, requested type "simple"
 11720                           ; Number of cases is 1, Range of values is 0 to 0
 11721                           ; switch strategies available:
 11722                           ; Name         Instructions Cycles
 11723                           ; simple_byte            4     3 (average)
 11724                           ; direct_byte            8     6 (fixed)
 11725                           ; jumptable            260     6 (fixed)
 11726                           ;	Chosen strategy is simple_byte
 11727  0CAC  084B               	movf	??_NEMS_message_handler+1,w
 11728  0CAD  3A00               	xorlw	0	; case 0
 11729  0CAE  1903               	skipnz
 11730  0CAF  2CB1               	goto	l5359
 11731  0CB0  2CF8               	goto	l758
 11732  0CB1                     l5359:
 11733                           
 11734                           ; Switch size 1, requested type "simple"
 11735                           ; Number of cases is 23, Range of values is 65 to 116
 11736                           ; switch strategies available:
 11737                           ; Name         Instructions Cycles
 11738                           ; simple_byte           70    36 (average)
 11739                           ; direct_byte          113     9 (fixed)
 11740                           ; jumptable            263     9 (fixed)
 11741                           ;	Chosen strategy is simple_byte
 11742  0CB1  084A               	movf	??_NEMS_message_handler,w
 11743  0CB2  3A41               	xorlw	65	; case 65
 11744  0CB3  1903               	skipnz
 11745  0CB4  2C6D               	goto	l5223
 11746  0CB5  3A03               	xorlw	3	; case 66
 11747  0CB6  1903               	skipnz
 11748  0CB7  2CA6               	goto	l5261
 11749  0CB8  3A0F               	xorlw	15	; case 77
 11750  0CB9  1903               	skipnz
 11751  0CBA  2C97               	goto	l5251
 11752  0CBB  3A03               	xorlw	3	; case 78
 11753  0CBC  1903               	skipnz
 11754  0CBD  2C94               	goto	l5249
 11755  0CBE  3A01               	xorlw	1	; case 79
 11756  0CBF  1903               	skipnz
 11757  0CC0  2C7C               	goto	l5233
 11758  0CC1  3A1E               	xorlw	30	; case 81
 11759  0CC2  1903               	skipnz
 11760  0CC3  2C9D               	goto	l5255
 11761  0CC4  3A03               	xorlw	3	; case 82
 11762  0CC5  1903               	skipnz
 11763  0CC6  2C85               	goto	l5239
 11764  0CC7  3A33               	xorlw	51	; case 97
 11765  0CC8  1903               	skipnz
 11766  0CC9  2C6A               	goto	l5221
 11767  0CCA  3A03               	xorlw	3	; case 98
 11768  0CCB  1903               	skipnz
 11769  0CCC  2CA3               	goto	l5259
 11770  0CCD  3A01               	xorlw	1	; case 99
 11771  0CCE  1903               	skipnz
 11772  0CCF  2C7F               	goto	l5235
 11773  0CD0  3A07               	xorlw	7	; case 100
 11774  0CD1  1903               	skipnz
 11775  0CD2  2C73               	goto	l5227
 11776  0CD3  3A01               	xorlw	1	; case 101
 11777  0CD4  1903               	skipnz
 11778  0CD5  2C67               	goto	l5219
 11779  0CD6  3A03               	xorlw	3	; case 102
 11780  0CD7  1903               	skipnz
 11781  0CD8  2C70               	goto	l5225
 11782  0CD9  3A0D               	xorlw	13	; case 107
 11783  0CDA  1903               	skipnz
 11784  0CDB  2C76               	goto	l5229
 11785  0CDC  3A07               	xorlw	7	; case 108
 11786  0CDD  1903               	skipnz
 11787  0CDE  2C8E               	goto	l5245
 11788  0CDF  3A01               	xorlw	1	; case 109
 11789  0CE0  1903               	skipnz
 11790  0CE1  2C9A               	goto	l5253
 11791  0CE2  3A03               	xorlw	3	; case 110
 11792  0CE3  1903               	skipnz
 11793  0CE4  2C91               	goto	l5247
 11794  0CE5  3A01               	xorlw	1	; case 111
 11795  0CE6  1903               	skipnz
 11796  0CE7  2C79               	goto	l5231
 11797  0CE8  3A1F               	xorlw	31	; case 112
 11798  0CE9  1903               	skipnz
 11799  0CEA  2C88               	goto	l5241
 11800  0CEB  3A01               	xorlw	1	; case 113
 11801  0CEC  1903               	skipnz
 11802  0CED  2CA0               	goto	l5257
 11803  0CEE  3A03               	xorlw	3	; case 114
 11804  0CEF  1903               	skipnz
 11805  0CF0  2C82               	goto	l5237
 11806  0CF1  3A01               	xorlw	1	; case 115
 11807  0CF2  1903               	skipnz
 11808  0CF3  2C8B               	goto	l5243
 11809  0CF4  3A07               	xorlw	7	; case 116
 11810  0CF5  1903               	skipnz
 11811  0CF6  2C60               	goto	l5217
 11812  0CF7  2CF8               	goto	l758
 11813  0CF8                     l758:
 11814  0CF8  0008               	return
 11815  0CF9                     __end_of_NEMS_message_handler:
 11816                           
 11817                           	psect	text21
 11818  0800                     __ptext21:	
 11819 ;; *************** function _NEMS_stop_sensors *****************
 11820 ;; Defined at:
 11821 ;;		line 1040 in file "NEMS.c"
 11822 ;; Parameters:    Size  Location     Type
 11823 ;;		None
 11824 ;; Auto vars:     Size  Location     Type
 11825 ;;		None
 11826 ;; Return value:  Size  Location     Type
 11827 ;;                  1    wreg      void 
 11828 ;; Registers used:
 11829 ;;		status,2, status,0, pclath, cstack
 11830 ;; Tracked objects:
 11831 ;;		On entry : 31/0
 11832 ;;		On exit  : 3F/4
 11833 ;;		Unchanged: 0/0
 11834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11839 ;;Total ram usage:        0 bytes
 11840 ;; Hardware stack levels used:    1
 11841 ;; Hardware stack levels required when called:    5
 11842 ;; This function calls:
 11843 ;;		_TMR1_StopTimer
 11844 ;; This function is called by:
 11845 ;;		_NEMS_message_handler
 11846 ;; This function uses a non-reentrant model
 11847 ;;
 11848                           
 11849                           
 11850                           ;psect for function _NEMS_stop_sensors
 11851  0800                     _NEMS_stop_sensors:
 11852                           
 11853                           ;NEMS.c: 1042:     TMR1_StopTimer();
 11854                           
 11855                           ;incstack = 0
 11856                           ; Regs used in _NEMS_stop_sensors: [status,2+status,0+pclath+cstack]
 11857  0800  3195  257F         	fcall	_TMR1_StopTimer
 11858  0802  0008               	return
 11859  0803                     __end_of_NEMS_stop_sensors:
 11860                           
 11861                           	psect	text22
 11862  157F                     __ptext22:	
 11863 ;; *************** function _TMR1_StopTimer *****************
 11864 ;; Defined at:
 11865 ;;		line 98 in file "mcc_generated_files/tmr1.c"
 11866 ;; Parameters:    Size  Location     Type
 11867 ;;		None
 11868 ;; Auto vars:     Size  Location     Type
 11869 ;;		None
 11870 ;; Return value:  Size  Location     Type
 11871 ;;                  1    wreg      void 
 11872 ;; Registers used:
 11873 ;;		None
 11874 ;; Tracked objects:
 11875 ;;		On entry : 31/0
 11876 ;;		On exit  : 3F/4
 11877 ;;		Unchanged: 0/0
 11878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11883 ;;Total ram usage:        0 bytes
 11884 ;; Hardware stack levels used:    1
 11885 ;; Hardware stack levels required when called:    4
 11886 ;; This function calls:
 11887 ;;		Nothing
 11888 ;; This function is called by:
 11889 ;;		_NEMS_stop_sensors
 11890 ;; This function uses a non-reentrant model
 11891 ;;
 11892                           
 11893                           
 11894                           ;psect for function _TMR1_StopTimer
 11895  157F                     _TMR1_StopTimer:
 11896                           
 11897                           ;mcc_generated_files/tmr1.c: 101:     T1CONbits.TMR1ON = 0;
 11898                           
 11899                           ;incstack = 0
 11900                           ; Regs used in _TMR1_StopTimer: []
 11901  157F  0144               	movlb	4	; select bank4
 11902  1580  100E               	bcf	14,0	;volatile
 11903  1581  0008               	return
 11904  1582                     __end_of_TMR1_StopTimer:
 11905                           
 11906                           	psect	text23
 11907  15E1                     __ptext23:	
 11908 ;; *************** function _NEMS_stop_program *****************
 11909 ;; Defined at:
 11910 ;;		line 1011 in file "NEMS.c"
 11911 ;; Parameters:    Size  Location     Type
 11912 ;;		None
 11913 ;; Auto vars:     Size  Location     Type
 11914 ;;		None
 11915 ;; Return value:  Size  Location     Type
 11916 ;;                  1    wreg      void 
 11917 ;; Registers used:
 11918 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11919 ;; Tracked objects:
 11920 ;;		On entry : 31/0
 11921 ;;		On exit  : 3F/0
 11922 ;;		Unchanged: 0/0
 11923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11928 ;;Total ram usage:        0 bytes
 11929 ;; Hardware stack levels used:    1
 11930 ;; Hardware stack levels required when called:    6
 11931 ;; This function calls:
 11932 ;;		_NEMS_stop_program_nack
 11933 ;;		__puts
 11934 ;; This function is called by:
 11935 ;;		_NEMS_message_handler
 11936 ;; This function uses a non-reentrant model
 11937 ;;
 11938                           
 11939                           
 11940                           ;psect for function _NEMS_stop_program
 11941  15E1                     _NEMS_stop_program:
 11942                           
 11943                           ;NEMS.c: 1013:     NEMS_stop_program_nack();
 11944                           
 11945                           ;incstack = 0
 11946                           ; Regs used in _NEMS_stop_program: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11947  15E1  3196  260B  3195   	fcall	_NEMS_stop_program_nack
 11948                           
 11949                           ;NEMS.c: 1014:     _puts("N-ok ");
 11950  15E4  3028               	movlw	low (STR_64| (0+32768))
 11951  15E5  00A2               	movwf	__puts@pt
 11952  15E6  3099               	movlw	high (STR_64| (0+32768))
 11953  15E7  00A3               	movwf	__puts@pt+1
 11954  15E8  3189  2132         	fcall	__puts
 11955  15EA  0008               	return
 11956  15EB                     __end_of_NEMS_stop_program:
 11957                           
 11958                           	psect	text24
 11959  15AD                     __ptext24:	
 11960 ;; *************** function _NEMS_start_sensors *****************
 11961 ;; Defined at:
 11962 ;;		line 1034 in file "NEMS.c"
 11963 ;; Parameters:    Size  Location     Type
 11964 ;;		None
 11965 ;; Auto vars:     Size  Location     Type
 11966 ;;		None
 11967 ;; Return value:  Size  Location     Type
 11968 ;;                  1    wreg      void 
 11969 ;; Registers used:
 11970 ;;		wreg, status,2, status,0, pclath, cstack
 11971 ;; Tracked objects:
 11972 ;;		On entry : 31/0
 11973 ;;		On exit  : 3F/4
 11974 ;;		Unchanged: 0/0
 11975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11980 ;;Total ram usage:        0 bytes
 11981 ;; Hardware stack levels used:    1
 11982 ;; Hardware stack levels required when called:    6
 11983 ;; This function calls:
 11984 ;;		_TMR1_Reload
 11985 ;;		_TMR1_StartTimer
 11986 ;; This function is called by:
 11987 ;;		_NEMS_message_handler
 11988 ;; This function uses a non-reentrant model
 11989 ;;
 11990                           
 11991                           
 11992                           ;psect for function _NEMS_start_sensors
 11993  15AD                     _NEMS_start_sensors:
 11994                           
 11995                           ;NEMS.c: 1036:     TMR1_Reload();
 11996                           
 11997                           ;incstack = 0
 11998                           ; Regs used in _NEMS_start_sensors: [wreg+status,2+status,0+pclath+cstack]
 11999  15AD  3195  25C1  3195   	fcall	_TMR1_Reload
 12000                           
 12001                           ;NEMS.c: 1037:     TMR1_StartTimer();
 12002  15B0  3180  2002         	fcall	_TMR1_StartTimer
 12003  15B2  0008               	return
 12004  15B3                     __end_of_NEMS_start_sensors:
 12005                           
 12006                           	psect	text25
 12007  0002                     __ptext25:	
 12008 ;; *************** function _TMR1_StartTimer *****************
 12009 ;; Defined at:
 12010 ;;		line 92 in file "mcc_generated_files/tmr1.c"
 12011 ;; Parameters:    Size  Location     Type
 12012 ;;		None
 12013 ;; Auto vars:     Size  Location     Type
 12014 ;;		None
 12015 ;; Return value:  Size  Location     Type
 12016 ;;                  1    wreg      void 
 12017 ;; Registers used:
 12018 ;;		None
 12019 ;; Tracked objects:
 12020 ;;		On entry : 3F/4
 12021 ;;		On exit  : 3F/4
 12022 ;;		Unchanged: 0/0
 12023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12028 ;;Total ram usage:        0 bytes
 12029 ;; Hardware stack levels used:    1
 12030 ;; Hardware stack levels required when called:    4
 12031 ;; This function calls:
 12032 ;;		Nothing
 12033 ;; This function is called by:
 12034 ;;		_NEMS_start_sensors
 12035 ;; This function uses a non-reentrant model
 12036 ;;
 12037                           
 12038                           
 12039                           ;psect for function _TMR1_StartTimer
 12040  0002                     _TMR1_StartTimer:
 12041                           
 12042                           ;mcc_generated_files/tmr1.c: 95:     T1CONbits.TMR1ON = 1;
 12043                           
 12044                           ;incstack = 0
 12045                           ; Regs used in _TMR1_StartTimer: []
 12046  0002  140E               	bsf	14,0	;volatile
 12047  0003  0008               	return
 12048  0004                     __end_of_TMR1_StartTimer:
 12049                           
 12050                           	psect	text26
 12051  15C1                     __ptext26:	
 12052 ;; *************** function _TMR1_Reload *****************
 12053 ;; Defined at:
 12054 ;;		line 142 in file "mcc_generated_files/tmr1.c"
 12055 ;; Parameters:    Size  Location     Type
 12056 ;;		None
 12057 ;; Auto vars:     Size  Location     Type
 12058 ;;		None
 12059 ;; Return value:  Size  Location     Type
 12060 ;;                  1    wreg      void 
 12061 ;; Registers used:
 12062 ;;		wreg, status,2, status,0, pclath, cstack
 12063 ;; Tracked objects:
 12064 ;;		On entry : 31/E
 12065 ;;		On exit  : 3F/4
 12066 ;;		Unchanged: 0/0
 12067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12072 ;;Total ram usage:        0 bytes
 12073 ;; Hardware stack levels used:    1
 12074 ;; Hardware stack levels required when called:    5
 12075 ;; This function calls:
 12076 ;;		_TMR1_WriteTimer
 12077 ;; This function is called by:
 12078 ;;		_main
 12079 ;;		_NEMS_start_sensors
 12080 ;; This function uses a non-reentrant model
 12081 ;;
 12082                           
 12083                           
 12084                           ;psect for function _TMR1_Reload
 12085  15C1                     _TMR1_Reload:
 12086                           
 12087                           ;mcc_generated_files/tmr1.c: 144:     TMR1_WriteTimer(timer1ReloadVal);
 12088                           
 12089                           ;incstack = 0
 12090                           ; Regs used in _TMR1_Reload: [wreg+status,2+status,0+pclath+cstack]
 12091  15C1  0140               	movlb	0	; select bank0
 12092  15C2  086A               	movf	_timer1ReloadVal+1,w	;volatile
 12093  15C3  00A1               	movwf	TMR1_WriteTimer@timerVal+1
 12094  15C4  0869               	movf	_timer1ReloadVal,w	;volatile
 12095  15C5  00A0               	movwf	TMR1_WriteTimer@timerVal
 12096  15C6  3197  27D2         	fcall	_TMR1_WriteTimer
 12097  15C8  0008               	return
 12098  15C9                     __end_of_TMR1_Reload:
 12099                           
 12100                           	psect	text27
 12101  17D2                     __ptext27:	
 12102 ;; *************** function _TMR1_WriteTimer *****************
 12103 ;; Defined at:
 12104 ;;		line 120 in file "mcc_generated_files/tmr1.c"
 12105 ;; Parameters:    Size  Location     Type
 12106 ;;  timerVal        2    0[BANK0 ] unsigned short 
 12107 ;; Auto vars:     Size  Location     Type
 12108 ;;		None
 12109 ;; Return value:  Size  Location     Type
 12110 ;;                  1    wreg      void 
 12111 ;; Registers used:
 12112 ;;		wreg
 12113 ;; Tracked objects:
 12114 ;;		On entry : 3F/0
 12115 ;;		On exit  : 3F/4
 12116 ;;		Unchanged: 0/0
 12117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12118 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12121 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12122 ;;Total ram usage:        2 bytes
 12123 ;; Hardware stack levels used:    1
 12124 ;; Hardware stack levels required when called:    4
 12125 ;; This function calls:
 12126 ;;		Nothing
 12127 ;; This function is called by:
 12128 ;;		_TMR1_Reload
 12129 ;; This function uses a non-reentrant model
 12130 ;;
 12131                           
 12132                           
 12133                           ;psect for function _TMR1_WriteTimer
 12134  17D2                     _TMR1_WriteTimer:
 12135                           
 12136                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.NOT_SYNC == 1)
 12137                           
 12138                           ;incstack = 0
 12139                           ; Regs used in _TMR1_WriteTimer: [wreg]
 12140  17D2  0144               	movlb	4	; select bank4
 12141  17D3  1D0E               	btfss	14,2	;volatile
 12142  17D4  2FE0               	goto	l4411
 12143                           
 12144                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
 12145  17D5  100E               	bcf	14,0	;volatile
 12146                           
 12147                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
 12148  17D6  0140               	movlb	0	; select bank0
 12149  17D7  0821               	movf	TMR1_WriteTimer@timerVal+1,w
 12150  17D8  0144               	movlb	4	; select bank4
 12151  17D9  008D               	movwf	13	;volatile
 12152                           
 12153                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
 12154  17DA  0140               	movlb	0	; select bank0
 12155  17DB  0820               	movf	TMR1_WriteTimer@timerVal,w
 12156  17DC  0144               	movlb	4	; select bank4
 12157  17DD  008C               	movwf	12	;volatile
 12158                           
 12159                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
 12160  17DE  140E               	bsf	14,0	;volatile
 12161                           
 12162                           ;mcc_generated_files/tmr1.c: 133:     }
 12163  17DF  0008               	return
 12164  17E0                     l4411:
 12165                           
 12166                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 12167  17E0  0140               	movlb	0	; select bank0
 12168  17E1  0821               	movf	TMR1_WriteTimer@timerVal+1,w
 12169  17E2  0144               	movlb	4	; select bank4
 12170  17E3  008D               	movwf	13	;volatile
 12171                           
 12172                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
 12173  17E4  0140               	movlb	0	; select bank0
 12174  17E5  0820               	movf	TMR1_WriteTimer@timerVal,w
 12175  17E6  0144               	movlb	4	; select bank4
 12176  17E7  008C               	movwf	12	;volatile
 12177  17E8  0008               	return
 12178  17E9                     __end_of_TMR1_WriteTimer:
 12179                           
 12180                           	psect	text28
 12181  1651                     __ptext28:	
 12182 ;; *************** function _NEMS_start_program *****************
 12183 ;; Defined at:
 12184 ;;		line 973 in file "NEMS.c"
 12185 ;; Parameters:    Size  Location     Type
 12186 ;;		None
 12187 ;; Auto vars:     Size  Location     Type
 12188 ;;		None
 12189 ;; Return value:  Size  Location     Type
 12190 ;;                  1    wreg      void 
 12191 ;; Registers used:
 12192 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12193 ;; Tracked objects:
 12194 ;;		On entry : 31/0
 12195 ;;		On exit  : 3F/0
 12196 ;;		Unchanged: 0/0
 12197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12202 ;;Total ram usage:        0 bytes
 12203 ;; Hardware stack levels used:    1
 12204 ;; Hardware stack levels required when called:    8
 12205 ;; This function calls:
 12206 ;;		_NEMS_start_program_nack
 12207 ;;		_TMR0_SetInterruptHandler
 12208 ;;		__puts
 12209 ;; This function is called by:
 12210 ;;		_NEMS_message_handler
 12211 ;; This function uses a non-reentrant model
 12212 ;;
 12213                           
 12214                           
 12215                           ;psect for function _NEMS_start_program
 12216  1651                     _NEMS_start_program:
 12217                           
 12218                           ;NEMS.c: 976:     NMES_se_control = 0;
 12219                           
 12220                           ;incstack = 0
 12221                           ; Regs used in _NEMS_start_program: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12222  1651  0140               	movlb	0	; select bank0
 12223  1652  01D0               	clrf	_NMES_se_control
 12224                           
 12225                           ;NEMS.c: 977:     TMR0_SetInterruptHandler(NEMS_timer);
 12226  1653  3072               	movlw	low _NEMS_timer
 12227  1654  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 12228  1655  3000               	movlw	high _NEMS_timer
 12229  1656  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 12230  1657  3195  2593  3196   	fcall	_TMR0_SetInterruptHandler
 12231                           
 12232                           ;NEMS.c: 979:     NEMS_start_program_nack();
 12233  165A  3189  215C  3196   	fcall	_NEMS_start_program_nack
 12234                           
 12235                           ;NEMS.c: 980:     _puts("n-ok ");
 12236  165D  306A               	movlw	low (STR_61| (0+32768))
 12237  165E  0140               	movlb	0	; select bank0
 12238  165F  00A2               	movwf	__puts@pt
 12239  1660  3099               	movlw	high (STR_61| (0+32768))
 12240  1661  00A3               	movwf	__puts@pt+1
 12241  1662  3189  2132         	fcall	__puts
 12242  1664  0008               	return
 12243  1665                     __end_of_NEMS_start_program:
 12244                           
 12245                           	psect	text29
 12246  17BB                     __ptext29:	
 12247 ;; *************** function _NEMS_set_symmetry_factor *****************
 12248 ;; Defined at:
 12249 ;;		line 332 in file "NEMS.c"
 12250 ;; Parameters:    Size  Location     Type
 12251 ;;		None
 12252 ;; Auto vars:     Size  Location     Type
 12253 ;;		None
 12254 ;; Return value:  Size  Location     Type
 12255 ;;                  1    wreg      void 
 12256 ;; Registers used:
 12257 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12258 ;; Tracked objects:
 12259 ;;		On entry : 31/0
 12260 ;;		On exit  : 3F/0
 12261 ;;		Unchanged: 0/0
 12262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12267 ;;Total ram usage:        0 bytes
 12268 ;; Hardware stack levels used:    1
 12269 ;; Hardware stack levels required when called:    6
 12270 ;; This function calls:
 12271 ;;		_NEMS_get_packet
 12272 ;;		__puts
 12273 ;; This function is called by:
 12274 ;;		_NEMS_message_handler
 12275 ;; This function uses a non-reentrant model
 12276 ;;
 12277                           
 12278                           
 12279                           ;psect for function _NEMS_set_symmetry_factor
 12280  17BB                     _NEMS_set_symmetry_factor:
 12281                           
 12282                           ;NEMS.c: 334:     if(NEMS_get_packet(&program.symmetry_factor)) {
 12283                           
 12284                           ;incstack = 0
 12285                           ; Regs used in _NEMS_set_symmetry_factor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12286  17BB  305B               	movlw	(low ((_program| 0+4)))& (0+255)
 12287  17BC  318A  224F  3197   	fcall	_NEMS_get_packet
 12288  17BF  3A00               	xorlw	0
 12289  17C0  1903               	skipnz
 12290  17C1  2FCA               	goto	l4855
 12291                           
 12292                           ;NEMS.c: 335:         _puts("k-ok ");
 12293  17C2  3058               	movlw	low (STR_10| (0+32768))
 12294  17C3  0140               	movlb	0	; select bank0
 12295  17C4  00A2               	movwf	__puts@pt
 12296  17C5  3099               	movlw	high (STR_10| (0+32768))
 12297  17C6  00A3               	movwf	__puts@pt+1
 12298  17C7  3189  2132         	fcall	__puts
 12299                           
 12300                           ;NEMS.c: 337:     } else {
 12301  17C9  0008               	return
 12302  17CA                     l4855:
 12303                           
 12304                           ;NEMS.c: 338:         _puts("k-err ");
 12305  17CA  30F9               	movlw	low (STR_11| (0+32768))
 12306  17CB  0140               	movlb	0	; select bank0
 12307  17CC  00A2               	movwf	__puts@pt
 12308  17CD  3098               	movlw	high (STR_11| (0+32768))
 12309  17CE  00A3               	movwf	__puts@pt+1
 12310  17CF  3189  2132         	fcall	__puts
 12311  17D1  0008               	return
 12312  17D2                     __end_of_NEMS_set_symmetry_factor:
 12313                           
 12314                           	psect	text30
 12315  17A4                     __ptext30:	
 12316 ;; *************** function _NEMS_set_ramp_up *****************
 12317 ;; Defined at:
 12318 ;;		line 373 in file "NEMS.c"
 12319 ;; Parameters:    Size  Location     Type
 12320 ;;		None
 12321 ;; Auto vars:     Size  Location     Type
 12322 ;;		None
 12323 ;; Return value:  Size  Location     Type
 12324 ;;                  1    wreg      void 
 12325 ;; Registers used:
 12326 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12327 ;; Tracked objects:
 12328 ;;		On entry : 31/0
 12329 ;;		On exit  : 3F/0
 12330 ;;		Unchanged: 0/0
 12331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12336 ;;Total ram usage:        0 bytes
 12337 ;; Hardware stack levels used:    1
 12338 ;; Hardware stack levels required when called:    6
 12339 ;; This function calls:
 12340 ;;		_NEMS_get_packet
 12341 ;;		__puts
 12342 ;; This function is called by:
 12343 ;;		_NEMS_message_handler
 12344 ;; This function uses a non-reentrant model
 12345 ;;
 12346                           
 12347                           
 12348                           ;psect for function _NEMS_set_ramp_up
 12349  17A4                     _NEMS_set_ramp_up:
 12350                           
 12351                           ;NEMS.c: 375:     if(NEMS_get_packet(&program.ramp_up)) {
 12352                           
 12353                           ;incstack = 0
 12354                           ; Regs used in _NEMS_set_ramp_up: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12355  17A4  305F               	movlw	(low ((_program| 0+8)))& (0+255)
 12356  17A5  318A  224F  3197   	fcall	_NEMS_get_packet
 12357  17A8  3A00               	xorlw	0
 12358  17A9  1903               	skipnz
 12359  17AA  2FB3               	goto	l4879
 12360                           
 12361                           ;NEMS.c: 376:         _puts("r-ok ");
 12362  17AB  307C               	movlw	low (STR_18| (0+32768))
 12363  17AC  0140               	movlb	0	; select bank0
 12364  17AD  00A2               	movwf	__puts@pt
 12365  17AE  3099               	movlw	high (STR_18| (0+32768))
 12366  17AF  00A3               	movwf	__puts@pt+1
 12367  17B0  3189  2132         	fcall	__puts
 12368                           
 12369                           ;NEMS.c: 378:     } else {
 12370  17B2  0008               	return
 12371  17B3                     l4879:
 12372                           
 12373                           ;NEMS.c: 379:         _puts("r-err ");
 12374  17B3  3015               	movlw	low (STR_19| (0+32768))
 12375  17B4  0140               	movlb	0	; select bank0
 12376  17B5  00A2               	movwf	__puts@pt
 12377  17B6  3099               	movlw	high (STR_19| (0+32768))
 12378  17B7  00A3               	movwf	__puts@pt+1
 12379  17B8  3189  2132         	fcall	__puts
 12380  17BA  0008               	return
 12381  17BB                     __end_of_NEMS_set_ramp_up:
 12382                           
 12383                           	psect	text31
 12384  178D                     __ptext31:	
 12385 ;; *************** function _NEMS_set_ramp_down *****************
 12386 ;; Defined at:
 12387 ;;		line 384 in file "NEMS.c"
 12388 ;; Parameters:    Size  Location     Type
 12389 ;;		None
 12390 ;; Auto vars:     Size  Location     Type
 12391 ;;		None
 12392 ;; Return value:  Size  Location     Type
 12393 ;;                  1    wreg      void 
 12394 ;; Registers used:
 12395 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12396 ;; Tracked objects:
 12397 ;;		On entry : 31/0
 12398 ;;		On exit  : 3F/0
 12399 ;;		Unchanged: 0/0
 12400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12405 ;;Total ram usage:        0 bytes
 12406 ;; Hardware stack levels used:    1
 12407 ;; Hardware stack levels required when called:    6
 12408 ;; This function calls:
 12409 ;;		_NEMS_get_packet
 12410 ;;		__puts
 12411 ;; This function is called by:
 12412 ;;		_NEMS_message_handler
 12413 ;; This function uses a non-reentrant model
 12414 ;;
 12415                           
 12416                           
 12417                           ;psect for function _NEMS_set_ramp_down
 12418  178D                     _NEMS_set_ramp_down:
 12419                           
 12420                           ;NEMS.c: 386:     if(NEMS_get_packet(&program.ramp_down)) {
 12421                           
 12422                           ;incstack = 0
 12423                           ; Regs used in _NEMS_set_ramp_down: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12424  178D  3060               	movlw	(low ((_program| 0+9)))& (0+255)
 12425  178E  318A  224F  3197   	fcall	_NEMS_get_packet
 12426  1791  3A00               	xorlw	0
 12427  1792  1903               	skipnz
 12428  1793  2F9C               	goto	l4885
 12429                           
 12430                           ;NEMS.c: 387:         _puts("R-ok ");
 12431  1794  303A               	movlw	low (STR_20| (0+32768))
 12432  1795  0140               	movlb	0	; select bank0
 12433  1796  00A2               	movwf	__puts@pt
 12434  1797  3099               	movlw	high (STR_20| (0+32768))
 12435  1798  00A3               	movwf	__puts@pt+1
 12436  1799  3189  2132         	fcall	__puts
 12437                           
 12438                           ;NEMS.c: 389:     } else {
 12439  179B  0008               	return
 12440  179C                     l4885:
 12441                           
 12442                           ;NEMS.c: 390:         _puts("R-err ");
 12443  179C  30D6               	movlw	low (STR_21| (0+32768))
 12444  179D  0140               	movlb	0	; select bank0
 12445  179E  00A2               	movwf	__puts@pt
 12446  179F  3098               	movlw	high (STR_21| (0+32768))
 12447  17A0  00A3               	movwf	__puts@pt+1
 12448  17A1  3189  2132         	fcall	__puts
 12449  17A3  0008               	return
 12450  17A4                     __end_of_NEMS_set_ramp_down:
 12451                           
 12452                           	psect	text32
 12453  1776                     __ptext32:	
 12454 ;; *************** function _NEMS_set_phase_duration *****************
 12455 ;; Defined at:
 12456 ;;		line 322 in file "NEMS.c"
 12457 ;; Parameters:    Size  Location     Type
 12458 ;;		None
 12459 ;; Auto vars:     Size  Location     Type
 12460 ;;		None
 12461 ;; Return value:  Size  Location     Type
 12462 ;;                  1    wreg      void 
 12463 ;; Registers used:
 12464 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12465 ;; Tracked objects:
 12466 ;;		On entry : 31/0
 12467 ;;		On exit  : 3F/0
 12468 ;;		Unchanged: 0/0
 12469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12474 ;;Total ram usage:        0 bytes
 12475 ;; Hardware stack levels used:    1
 12476 ;; Hardware stack levels required when called:    6
 12477 ;; This function calls:
 12478 ;;		_NEMS_get_packet
 12479 ;;		__puts
 12480 ;; This function is called by:
 12481 ;;		_NEMS_message_handler
 12482 ;; This function uses a non-reentrant model
 12483 ;;
 12484                           
 12485                           
 12486                           ;psect for function _NEMS_set_phase_duration
 12487  1776                     _NEMS_set_phase_duration:
 12488                           
 12489                           ;NEMS.c: 324:     if(NEMS_get_packet(&program.phase_duration)) {
 12490                           
 12491                           ;incstack = 0
 12492                           ; Regs used in _NEMS_set_phase_duration: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12493  1776  305A               	movlw	(low ((_program| 0+3)))& (0+255)
 12494  1777  318A  224F  3197   	fcall	_NEMS_get_packet
 12495  177A  3A00               	xorlw	0
 12496  177B  1903               	skipnz
 12497  177C  2F85               	goto	l4849
 12498                           
 12499                           ;NEMS.c: 325:         _puts("d-ok ");
 12500  177D  304C               	movlw	low (STR_8| (0+32768))
 12501  177E  0140               	movlb	0	; select bank0
 12502  177F  00A2               	movwf	__puts@pt
 12503  1780  3099               	movlw	high (STR_8| (0+32768))
 12504  1781  00A3               	movwf	__puts@pt+1
 12505  1782  3189  2132         	fcall	__puts
 12506                           
 12507                           ;NEMS.c: 327:     } else {
 12508  1784  0008               	return
 12509  1785                     l4849:
 12510                           
 12511                           ;NEMS.c: 328:         _puts("d-err ");
 12512  1785  30EB               	movlw	low (STR_9| (0+32768))
 12513  1786  0140               	movlb	0	; select bank0
 12514  1787  00A2               	movwf	__puts@pt
 12515  1788  3098               	movlw	high (STR_9| (0+32768))
 12516  1789  00A3               	movwf	__puts@pt+1
 12517  178A  3189  2132         	fcall	__puts
 12518  178C  0008               	return
 12519  178D                     __end_of_NEMS_set_phase_duration:
 12520                           
 12521                           	psect	text33
 12522  175F                     __ptext33:	
 12523 ;; *************** function _NEMS_set_frequency *****************
 12524 ;; Defined at:
 12525 ;;		line 312 in file "NEMS.c"
 12526 ;; Parameters:    Size  Location     Type
 12527 ;;		None
 12528 ;; Auto vars:     Size  Location     Type
 12529 ;;		None
 12530 ;; Return value:  Size  Location     Type
 12531 ;;                  1    wreg      void 
 12532 ;; Registers used:
 12533 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12534 ;; Tracked objects:
 12535 ;;		On entry : 31/0
 12536 ;;		On exit  : 3F/0
 12537 ;;		Unchanged: 0/0
 12538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12543 ;;Total ram usage:        0 bytes
 12544 ;; Hardware stack levels used:    1
 12545 ;; Hardware stack levels required when called:    6
 12546 ;; This function calls:
 12547 ;;		_NEMS_get_packet
 12548 ;;		__puts
 12549 ;; This function is called by:
 12550 ;;		_NEMS_message_handler
 12551 ;; This function uses a non-reentrant model
 12552 ;;
 12553                           
 12554                           
 12555                           ;psect for function _NEMS_set_frequency
 12556  175F                     _NEMS_set_frequency:
 12557                           
 12558                           ;NEMS.c: 314:     if(NEMS_get_packet(&program.frequency)) {
 12559                           
 12560                           ;incstack = 0
 12561                           ; Regs used in _NEMS_set_frequency: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12562  175F  3059               	movlw	(low ((_program| 0+2)))& (0+255)
 12563  1760  318A  224F  3197   	fcall	_NEMS_get_packet
 12564  1763  3A00               	xorlw	0
 12565  1764  1903               	skipnz
 12566  1765  2F6E               	goto	l4843
 12567                           
 12568                           ;NEMS.c: 315:         _puts("f-ok ");
 12569  1766  3052               	movlw	low (STR_6| (0+32768))
 12570  1767  0140               	movlb	0	; select bank0
 12571  1768  00A2               	movwf	__puts@pt
 12572  1769  3099               	movlw	high (STR_6| (0+32768))
 12573  176A  00A3               	movwf	__puts@pt+1
 12574  176B  3189  2132         	fcall	__puts
 12575                           
 12576                           ;NEMS.c: 317:     } else {
 12577  176D  0008               	return
 12578  176E                     l4843:
 12579                           
 12580                           ;NEMS.c: 318:         _puts("f-err ");
 12581  176E  30F2               	movlw	low (STR_7| (0+32768))
 12582  176F  0140               	movlb	0	; select bank0
 12583  1770  00A2               	movwf	__puts@pt
 12584  1771  3098               	movlw	high (STR_7| (0+32768))
 12585  1772  00A3               	movwf	__puts@pt+1
 12586  1773  3189  2132         	fcall	__puts
 12587  1775  0008               	return
 12588  1776                     __end_of_NEMS_set_frequency:
 12589                           
 12590                           	psect	text34
 12591  1748                     __ptext34:	
 12592 ;; *************** function _NEMS_set_contractions *****************
 12593 ;; Defined at:
 12594 ;;		line 363 in file "NEMS.c"
 12595 ;; Parameters:    Size  Location     Type
 12596 ;;		None
 12597 ;; Auto vars:     Size  Location     Type
 12598 ;;		None
 12599 ;; Return value:  Size  Location     Type
 12600 ;;                  1    wreg      void 
 12601 ;; Registers used:
 12602 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12603 ;; Tracked objects:
 12604 ;;		On entry : 31/0
 12605 ;;		On exit  : 3F/0
 12606 ;;		Unchanged: 0/0
 12607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12612 ;;Total ram usage:        0 bytes
 12613 ;; Hardware stack levels used:    1
 12614 ;; Hardware stack levels required when called:    6
 12615 ;; This function calls:
 12616 ;;		_NEMS_get_packet
 12617 ;;		__puts
 12618 ;; This function is called by:
 12619 ;;		_NEMS_message_handler
 12620 ;; This function uses a non-reentrant model
 12621 ;;
 12622                           
 12623                           
 12624                           ;psect for function _NEMS_set_contractions
 12625  1748                     _NEMS_set_contractions:
 12626                           
 12627                           ;NEMS.c: 365:     if(NEMS_get_packet(&program.contractions)) {
 12628                           
 12629                           ;incstack = 0
 12630                           ; Regs used in _NEMS_set_contractions: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12631  1748  305E               	movlw	(low ((_program| 0+7)))& (0+255)
 12632  1749  318A  224F  3197   	fcall	_NEMS_get_packet
 12633  174C  3A00               	xorlw	0
 12634  174D  1903               	skipnz
 12635  174E  2F57               	goto	l4873
 12636                           
 12637                           ;NEMS.c: 366:         _puts("c-ok ");
 12638  174F  3046               	movlw	low (STR_16| (0+32768))
 12639  1750  0140               	movlb	0	; select bank0
 12640  1751  00A2               	movwf	__puts@pt
 12641  1752  3099               	movlw	high (STR_16| (0+32768))
 12642  1753  00A3               	movwf	__puts@pt+1
 12643  1754  3189  2132         	fcall	__puts
 12644                           
 12645                           ;NEMS.c: 368:     } else {
 12646  1756  0008               	return
 12647  1757                     l4873:
 12648                           
 12649                           ;NEMS.c: 369:         _puts("c-err ");
 12650  1757  30E4               	movlw	low (STR_17| (0+32768))
 12651  1758  0140               	movlb	0	; select bank0
 12652  1759  00A2               	movwf	__puts@pt
 12653  175A  3098               	movlw	high (STR_17| (0+32768))
 12654  175B  00A3               	movwf	__puts@pt+1
 12655  175C  3189  2132         	fcall	__puts
 12656  175E  0008               	return
 12657  175F                     __end_of_NEMS_set_contractions:
 12658                           
 12659                           	psect	text35
 12660  1731                     __ptext35:	
 12661 ;; *************** function _NEMS_set_channel4 *****************
 12662 ;; Defined at:
 12663 ;;		line 502 in file "NEMS.c"
 12664 ;; Parameters:    Size  Location     Type
 12665 ;;		None
 12666 ;; Auto vars:     Size  Location     Type
 12667 ;;		None
 12668 ;; Return value:  Size  Location     Type
 12669 ;;                  1    wreg      void 
 12670 ;; Registers used:
 12671 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12672 ;; Tracked objects:
 12673 ;;		On entry : 31/0
 12674 ;;		On exit  : 3F/0
 12675 ;;		Unchanged: 0/0
 12676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12681 ;;Total ram usage:        0 bytes
 12682 ;; Hardware stack levels used:    1
 12683 ;; Hardware stack levels required when called:    6
 12684 ;; This function calls:
 12685 ;;		_NEMS_get_packet
 12686 ;;		__puts
 12687 ;; This function is called by:
 12688 ;;		_NEMS_message_handler
 12689 ;; This function uses a non-reentrant model
 12690 ;;
 12691                           
 12692                           
 12693                           ;psect for function _NEMS_set_channel4
 12694  1731                     _NEMS_set_channel4:
 12695                           
 12696                           ;NEMS.c: 504:     if(NEMS_get_packet(&program.channel4)) {
 12697                           
 12698                           ;incstack = 0
 12699                           ; Regs used in _NEMS_set_channel4: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12700  1731  3064               	movlw	(low ((_program| 0+13)))& (0+255)
 12701  1732  318A  224F  3197   	fcall	_NEMS_get_packet
 12702  1735  3A00               	xorlw	0
 12703  1736  1903               	skipnz
 12704  1737  2F40               	goto	l5117
 12705                           
 12706                           ;NEMS.c: 505:         _puts("q-ok ");
 12707  1738  3076               	movlw	low (STR_57| (0+32768))
 12708  1739  0140               	movlb	0	; select bank0
 12709  173A  00A2               	movwf	__puts@pt
 12710  173B  3099               	movlw	high (STR_57| (0+32768))
 12711  173C  00A3               	movwf	__puts@pt+1
 12712  173D  3189  2132         	fcall	__puts
 12713                           
 12714                           ;NEMS.c: 507:     } else {
 12715  173F  0008               	return
 12716  1740                     l5117:
 12717                           
 12718                           ;NEMS.c: 508:         _puts("q-err ");
 12719  1740  300E               	movlw	low (STR_58| (0+32768))
 12720  1741  0140               	movlb	0	; select bank0
 12721  1742  00A2               	movwf	__puts@pt
 12722  1743  3099               	movlw	high (STR_58| (0+32768))
 12723  1744  00A3               	movwf	__puts@pt+1
 12724  1745  3189  2132         	fcall	__puts
 12725  1747  0008               	return
 12726  1748                     __end_of_NEMS_set_channel4:
 12727                           
 12728                           	psect	text36
 12729  171A                     __ptext36:	
 12730 ;; *************** function _NEMS_set_channel3 *****************
 12731 ;; Defined at:
 12732 ;;		line 492 in file "NEMS.c"
 12733 ;; Parameters:    Size  Location     Type
 12734 ;;		None
 12735 ;; Auto vars:     Size  Location     Type
 12736 ;;		None
 12737 ;; Return value:  Size  Location     Type
 12738 ;;                  1    wreg      void 
 12739 ;; Registers used:
 12740 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12741 ;; Tracked objects:
 12742 ;;		On entry : 31/0
 12743 ;;		On exit  : 3F/0
 12744 ;;		Unchanged: 0/0
 12745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12750 ;;Total ram usage:        0 bytes
 12751 ;; Hardware stack levels used:    1
 12752 ;; Hardware stack levels required when called:    6
 12753 ;; This function calls:
 12754 ;;		_NEMS_get_packet
 12755 ;;		__puts
 12756 ;; This function is called by:
 12757 ;;		_NEMS_message_handler
 12758 ;; This function uses a non-reentrant model
 12759 ;;
 12760                           
 12761                           
 12762                           ;psect for function _NEMS_set_channel3
 12763  171A                     _NEMS_set_channel3:
 12764                           
 12765                           ;NEMS.c: 494:     if(NEMS_get_packet(&program.channel3)) {
 12766                           
 12767                           ;incstack = 0
 12768                           ; Regs used in _NEMS_set_channel3: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12769  171A  3063               	movlw	(low ((_program| 0+12)))& (0+255)
 12770  171B  318A  224F  3197   	fcall	_NEMS_get_packet
 12771  171E  3A00               	xorlw	0
 12772  171F  1903               	skipnz
 12773  1720  2F29               	goto	l5111
 12774                           
 12775                           ;NEMS.c: 495:         _puts("Q-ok ");
 12776  1721  3034               	movlw	low (STR_55| (0+32768))
 12777  1722  0140               	movlb	0	; select bank0
 12778  1723  00A2               	movwf	__puts@pt
 12779  1724  3099               	movlw	high (STR_55| (0+32768))
 12780  1725  00A3               	movwf	__puts@pt+1
 12781  1726  3189  2132         	fcall	__puts
 12782                           
 12783                           ;NEMS.c: 497:     } else {
 12784  1728  0008               	return
 12785  1729                     l5111:
 12786                           
 12787                           ;NEMS.c: 498:         _puts("Q-err ");
 12788  1729  30CF               	movlw	low (STR_56| (0+32768))
 12789  172A  0140               	movlb	0	; select bank0
 12790  172B  00A2               	movwf	__puts@pt
 12791  172C  3098               	movlw	high (STR_56| (0+32768))
 12792  172D  00A3               	movwf	__puts@pt+1
 12793  172E  3189  2132         	fcall	__puts
 12794  1730  0008               	return
 12795  1731                     __end_of_NEMS_set_channel3:
 12796                           
 12797                           	psect	text37
 12798  1703                     __ptext37:	
 12799 ;; *************** function _NEMS_set_channel2 *****************
 12800 ;; Defined at:
 12801 ;;		line 482 in file "NEMS.c"
 12802 ;; Parameters:    Size  Location     Type
 12803 ;;		None
 12804 ;; Auto vars:     Size  Location     Type
 12805 ;;		None
 12806 ;; Return value:  Size  Location     Type
 12807 ;;                  1    wreg      void 
 12808 ;; Registers used:
 12809 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12810 ;; Tracked objects:
 12811 ;;		On entry : 31/0
 12812 ;;		On exit  : 3F/0
 12813 ;;		Unchanged: 0/0
 12814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12819 ;;Total ram usage:        0 bytes
 12820 ;; Hardware stack levels used:    1
 12821 ;; Hardware stack levels required when called:    6
 12822 ;; This function calls:
 12823 ;;		_NEMS_get_packet
 12824 ;;		__puts
 12825 ;; This function is called by:
 12826 ;;		_NEMS_message_handler
 12827 ;; This function uses a non-reentrant model
 12828 ;;
 12829                           
 12830                           
 12831                           ;psect for function _NEMS_set_channel2
 12832  1703                     _NEMS_set_channel2:
 12833                           
 12834                           ;NEMS.c: 484:     if(NEMS_get_packet(&program.channel2)) {
 12835                           
 12836                           ;incstack = 0
 12837                           ; Regs used in _NEMS_set_channel2: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12838  1703  3062               	movlw	(low ((_program| 0+11)))& (0+255)
 12839  1704  318A  224F  3197   	fcall	_NEMS_get_packet
 12840  1707  3A00               	xorlw	0
 12841  1708  1903               	skipnz
 12842  1709  2F12               	goto	l5105
 12843                           
 12844                           ;NEMS.c: 485:         _puts("m-ok ");
 12845  170A  3064               	movlw	low (STR_53| (0+32768))
 12846  170B  0140               	movlb	0	; select bank0
 12847  170C  00A2               	movwf	__puts@pt
 12848  170D  3099               	movlw	high (STR_53| (0+32768))
 12849  170E  00A3               	movwf	__puts@pt+1
 12850  170F  3189  2132         	fcall	__puts
 12851                           
 12852                           ;NEMS.c: 487:     } else {
 12853  1711  0008               	return
 12854  1712                     l5105:
 12855                           
 12856                           ;NEMS.c: 488:         _puts("m-err ");
 12857  1712  3000               	movlw	low (STR_54| (0+32768))
 12858  1713  0140               	movlb	0	; select bank0
 12859  1714  00A2               	movwf	__puts@pt
 12860  1715  3099               	movlw	high (STR_54| (0+32768))
 12861  1716  00A3               	movwf	__puts@pt+1
 12862  1717  3189  2132         	fcall	__puts
 12863  1719  0008               	return
 12864  171A                     __end_of_NEMS_set_channel2:
 12865                           
 12866                           	psect	text38
 12867  16EC                     __ptext38:	
 12868 ;; *************** function _NEMS_set_channel1 *****************
 12869 ;; Defined at:
 12870 ;;		line 472 in file "NEMS.c"
 12871 ;; Parameters:    Size  Location     Type
 12872 ;;		None
 12873 ;; Auto vars:     Size  Location     Type
 12874 ;;		None
 12875 ;; Return value:  Size  Location     Type
 12876 ;;                  1    wreg      void 
 12877 ;; Registers used:
 12878 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12879 ;; Tracked objects:
 12880 ;;		On entry : 31/0
 12881 ;;		On exit  : 3F/0
 12882 ;;		Unchanged: 0/0
 12883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12888 ;;Total ram usage:        0 bytes
 12889 ;; Hardware stack levels used:    1
 12890 ;; Hardware stack levels required when called:    6
 12891 ;; This function calls:
 12892 ;;		_NEMS_get_packet
 12893 ;;		__puts
 12894 ;; This function is called by:
 12895 ;;		_NEMS_message_handler
 12896 ;; This function uses a non-reentrant model
 12897 ;;
 12898                           
 12899                           
 12900                           ;psect for function _NEMS_set_channel1
 12901  16EC                     _NEMS_set_channel1:
 12902                           
 12903                           ;NEMS.c: 474:     if(NEMS_get_packet(&program.channel1)) {
 12904                           
 12905                           ;incstack = 0
 12906                           ; Regs used in _NEMS_set_channel1: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12907  16EC  3061               	movlw	(low ((_program| 0+10)))& (0+255)
 12908  16ED  318A  224F  3196   	fcall	_NEMS_get_packet
 12909  16F0  3A00               	xorlw	0
 12910  16F1  1903               	skipnz
 12911  16F2  2EFB               	goto	l5099
 12912                           
 12913                           ;NEMS.c: 475:         _puts("M-ok ");
 12914  16F3  3022               	movlw	low (STR_51| (0+32768))
 12915  16F4  0140               	movlb	0	; select bank0
 12916  16F5  00A2               	movwf	__puts@pt
 12917  16F6  3099               	movlw	high (STR_51| (0+32768))
 12918  16F7  00A3               	movwf	__puts@pt+1
 12919  16F8  3189  2132         	fcall	__puts
 12920                           
 12921                           ;NEMS.c: 477:     } else {
 12922  16FA  0008               	return
 12923  16FB                     l5099:
 12924                           
 12925                           ;NEMS.c: 478:         _puts("M-err ");
 12926  16FB  30C1               	movlw	low (STR_52| (0+32768))
 12927  16FC  0140               	movlb	0	; select bank0
 12928  16FD  00A2               	movwf	__puts@pt
 12929  16FE  3098               	movlw	high (STR_52| (0+32768))
 12930  16FF  00A3               	movwf	__puts@pt+1
 12931  1700  3189  2132         	fcall	__puts
 12932  1702  0008               	return
 12933  1703                     __end_of_NEMS_set_channel1:
 12934                           
 12935                           	psect	text39
 12936  16D5                     __ptext39:	
 12937 ;; *************** function _NEMS_set_amplitude2 *****************
 12938 ;; Defined at:
 12939 ;;		line 302 in file "NEMS.c"
 12940 ;; Parameters:    Size  Location     Type
 12941 ;;		None
 12942 ;; Auto vars:     Size  Location     Type
 12943 ;;		None
 12944 ;; Return value:  Size  Location     Type
 12945 ;;                  1    wreg      void 
 12946 ;; Registers used:
 12947 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12948 ;; Tracked objects:
 12949 ;;		On entry : 31/0
 12950 ;;		On exit  : 3F/0
 12951 ;;		Unchanged: 0/0
 12952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12957 ;;Total ram usage:        0 bytes
 12958 ;; Hardware stack levels used:    1
 12959 ;; Hardware stack levels required when called:    6
 12960 ;; This function calls:
 12961 ;;		_NEMS_get_packet
 12962 ;;		__puts
 12963 ;; This function is called by:
 12964 ;;		_NEMS_message_handler
 12965 ;; This function uses a non-reentrant model
 12966 ;;
 12967                           
 12968                           
 12969                           ;psect for function _NEMS_set_amplitude2
 12970  16D5                     _NEMS_set_amplitude2:
 12971                           
 12972                           ;NEMS.c: 304:     if(NEMS_get_packet(&program.amplitude2)) {
 12973                           
 12974                           ;incstack = 0
 12975                           ; Regs used in _NEMS_set_amplitude2: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12976  16D5  3058               	movlw	(low ((_program| 0+1)))& (0+255)
 12977  16D6  318A  224F  3196   	fcall	_NEMS_get_packet
 12978  16D9  3A00               	xorlw	0
 12979  16DA  1903               	skipnz
 12980  16DB  2EE4               	goto	l4837
 12981                           
 12982                           ;NEMS.c: 305:         _puts("A-ok ");
 12983  16DC  301C               	movlw	low (STR_4| (0+32768))
 12984  16DD  0140               	movlb	0	; select bank0
 12985  16DE  00A2               	movwf	__puts@pt
 12986  16DF  3099               	movlw	high (STR_4| (0+32768))
 12987  16E0  00A3               	movwf	__puts@pt+1
 12988  16E1  3189  2132         	fcall	__puts
 12989                           
 12990                           ;NEMS.c: 307:     } else {
 12991  16E3  0008               	return
 12992  16E4                     l4837:
 12993                           
 12994                           ;NEMS.c: 308:         _puts("A-err ");
 12995  16E4  30BA               	movlw	low (STR_5| (0+32768))
 12996  16E5  0140               	movlb	0	; select bank0
 12997  16E6  00A2               	movwf	__puts@pt
 12998  16E7  3098               	movlw	high (STR_5| (0+32768))
 12999  16E8  00A3               	movwf	__puts@pt+1
 13000  16E9  3189  2132         	fcall	__puts
 13001  16EB  0008               	return
 13002  16EC                     __end_of_NEMS_set_amplitude2:
 13003                           
 13004                           	psect	text40
 13005  16BE                     __ptext40:	
 13006 ;; *************** function _NEMS_set_amplitude *****************
 13007 ;; Defined at:
 13008 ;;		line 292 in file "NEMS.c"
 13009 ;; Parameters:    Size  Location     Type
 13010 ;;		None
 13011 ;; Auto vars:     Size  Location     Type
 13012 ;;		None
 13013 ;; Return value:  Size  Location     Type
 13014 ;;                  1    wreg      void 
 13015 ;; Registers used:
 13016 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13017 ;; Tracked objects:
 13018 ;;		On entry : 31/0
 13019 ;;		On exit  : 3F/0
 13020 ;;		Unchanged: 0/0
 13021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13026 ;;Total ram usage:        0 bytes
 13027 ;; Hardware stack levels used:    1
 13028 ;; Hardware stack levels required when called:    6
 13029 ;; This function calls:
 13030 ;;		_NEMS_get_packet
 13031 ;;		__puts
 13032 ;; This function is called by:
 13033 ;;		_NEMS_message_handler
 13034 ;; This function uses a non-reentrant model
 13035 ;;
 13036                           
 13037                           
 13038                           ;psect for function _NEMS_set_amplitude
 13039  16BE                     _NEMS_set_amplitude:
 13040                           
 13041                           ;NEMS.c: 294:     if(NEMS_get_packet(&program.amplitude)) {
 13042                           
 13043                           ;incstack = 0
 13044                           ; Regs used in _NEMS_set_amplitude: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13045  16BE  3057               	movlw	(low (_program| 0))& (0+255)
 13046  16BF  318A  224F  3196   	fcall	_NEMS_get_packet
 13047  16C2  3A00               	xorlw	0
 13048  16C3  1903               	skipnz
 13049  16C4  2ECD               	goto	l4831
 13050                           
 13051                           ;NEMS.c: 295:         _puts("a-ok ");
 13052  16C5  3040               	movlw	low (STR_2| (0+32768))
 13053  16C6  0140               	movlb	0	; select bank0
 13054  16C7  00A2               	movwf	__puts@pt
 13055  16C8  3099               	movlw	high (STR_2| (0+32768))
 13056  16C9  00A3               	movwf	__puts@pt+1
 13057  16CA  3189  2132         	fcall	__puts
 13058                           
 13059                           ;NEMS.c: 297:     } else {
 13060  16CC  0008               	return
 13061  16CD                     l4831:
 13062                           
 13063                           ;NEMS.c: 298:         _puts("a-err ");
 13064  16CD  30DD               	movlw	low (STR_3| (0+32768))
 13065  16CE  0140               	movlb	0	; select bank0
 13066  16CF  00A2               	movwf	__puts@pt
 13067  16D0  3098               	movlw	high (STR_3| (0+32768))
 13068  16D1  00A3               	movwf	__puts@pt+1
 13069  16D2  3189  2132         	fcall	__puts
 13070  16D4  0008               	return
 13071  16D5                     __end_of_NEMS_set_amplitude:
 13072                           
 13073                           	psect	text41
 13074  16A7                     __ptext41:	
 13075 ;; *************** function _NEMS_set_ON_time *****************
 13076 ;; Defined at:
 13077 ;;		line 343 in file "NEMS.c"
 13078 ;; Parameters:    Size  Location     Type
 13079 ;;		None
 13080 ;; Auto vars:     Size  Location     Type
 13081 ;;		None
 13082 ;; Return value:  Size  Location     Type
 13083 ;;                  1    wreg      void 
 13084 ;; Registers used:
 13085 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13086 ;; Tracked objects:
 13087 ;;		On entry : 31/0
 13088 ;;		On exit  : 3F/0
 13089 ;;		Unchanged: 0/0
 13090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13095 ;;Total ram usage:        0 bytes
 13096 ;; Hardware stack levels used:    1
 13097 ;; Hardware stack levels required when called:    6
 13098 ;; This function calls:
 13099 ;;		_NEMS_get_packet
 13100 ;;		__puts
 13101 ;; This function is called by:
 13102 ;;		_NEMS_message_handler
 13103 ;; This function uses a non-reentrant model
 13104 ;;
 13105                           
 13106                           
 13107                           ;psect for function _NEMS_set_ON_time
 13108  16A7                     _NEMS_set_ON_time:
 13109                           
 13110                           ;NEMS.c: 345:     if(NEMS_get_packet(&program.ON_time)) {
 13111                           
 13112                           ;incstack = 0
 13113                           ; Regs used in _NEMS_set_ON_time: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13114  16A7  305C               	movlw	(low ((_program| 0+5)))& (0+255)
 13115  16A8  318A  224F  3196   	fcall	_NEMS_get_packet
 13116  16AB  3A00               	xorlw	0
 13117  16AC  1903               	skipnz
 13118  16AD  2EB6               	goto	l4861
 13119                           
 13120                           ;NEMS.c: 346:         _puts("o-ok ");
 13121  16AE  3070               	movlw	low (STR_12| (0+32768))
 13122  16AF  0140               	movlb	0	; select bank0
 13123  16B0  00A2               	movwf	__puts@pt
 13124  16B1  3099               	movlw	high (STR_12| (0+32768))
 13125  16B2  00A3               	movwf	__puts@pt+1
 13126  16B3  3189  2132         	fcall	__puts
 13127                           
 13128                           ;NEMS.c: 348:     } else {
 13129  16B5  0008               	return
 13130  16B6                     l4861:
 13131                           
 13132                           ;NEMS.c: 349:         _puts("o-err ");
 13133  16B6  3007               	movlw	low (STR_13| (0+32768))
 13134  16B7  0140               	movlb	0	; select bank0
 13135  16B8  00A2               	movwf	__puts@pt
 13136  16B9  3099               	movlw	high (STR_13| (0+32768))
 13137  16BA  00A3               	movwf	__puts@pt+1
 13138  16BB  3189  2132         	fcall	__puts
 13139  16BD  0008               	return
 13140  16BE                     __end_of_NEMS_set_ON_time:
 13141                           
 13142                           	psect	text42
 13143  1690                     __ptext42:	
 13144 ;; *************** function _NEMS_set_OFF_time *****************
 13145 ;; Defined at:
 13146 ;;		line 353 in file "NEMS.c"
 13147 ;; Parameters:    Size  Location     Type
 13148 ;;		None
 13149 ;; Auto vars:     Size  Location     Type
 13150 ;;		None
 13151 ;; Return value:  Size  Location     Type
 13152 ;;                  1    wreg      void 
 13153 ;; Registers used:
 13154 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13155 ;; Tracked objects:
 13156 ;;		On entry : 31/0
 13157 ;;		On exit  : 3F/0
 13158 ;;		Unchanged: 0/0
 13159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13164 ;;Total ram usage:        0 bytes
 13165 ;; Hardware stack levels used:    1
 13166 ;; Hardware stack levels required when called:    6
 13167 ;; This function calls:
 13168 ;;		_NEMS_get_packet
 13169 ;;		__puts
 13170 ;; This function is called by:
 13171 ;;		_NEMS_message_handler
 13172 ;; This function uses a non-reentrant model
 13173 ;;
 13174                           
 13175                           
 13176                           ;psect for function _NEMS_set_OFF_time
 13177  1690                     _NEMS_set_OFF_time:
 13178                           
 13179                           ;NEMS.c: 355:     if(NEMS_get_packet(&program.OFF_time)) {
 13180                           
 13181                           ;incstack = 0
 13182                           ; Regs used in _NEMS_set_OFF_time: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13183  1690  305D               	movlw	(low ((_program| 0+6)))& (0+255)
 13184  1691  318A  224F  3196   	fcall	_NEMS_get_packet
 13185  1694  3A00               	xorlw	0
 13186  1695  1903               	skipnz
 13187  1696  2E9F               	goto	l4867
 13188                           
 13189                           ;NEMS.c: 356:         _puts("O-ok ");
 13190  1697  302E               	movlw	low (STR_14| (0+32768))
 13191  1698  0140               	movlb	0	; select bank0
 13192  1699  00A2               	movwf	__puts@pt
 13193  169A  3099               	movlw	high (STR_14| (0+32768))
 13194  169B  00A3               	movwf	__puts@pt+1
 13195  169C  3189  2132         	fcall	__puts
 13196                           
 13197                           ;NEMS.c: 358:     } else {
 13198  169E  0008               	return
 13199  169F                     l4867:
 13200                           
 13201                           ;NEMS.c: 359:         _puts("O-err ");
 13202  169F  30C8               	movlw	low (STR_15| (0+32768))
 13203  16A0  0140               	movlb	0	; select bank0
 13204  16A1  00A2               	movwf	__puts@pt
 13205  16A2  3098               	movlw	high (STR_15| (0+32768))
 13206  16A3  00A3               	movwf	__puts@pt+1
 13207  16A4  3189  2132         	fcall	__puts
 13208  16A6  0008               	return
 13209  16A7                     __end_of_NEMS_set_OFF_time:
 13210                           
 13211                           	psect	text43
 13212  0A4F                     __ptext43:	
 13213 ;; *************** function _NEMS_get_packet *****************
 13214 ;; Defined at:
 13215 ;;		line 272 in file "NEMS.c"
 13216 ;; Parameters:    Size  Location     Type
 13217 ;;  pt              1    wreg     PTR unsigned char 
 13218 ;;		 -> program.channel4(1), program.channel3(1), program.channel2(1), program.channel1(1), 
 13219 ;;		 -> program.symmetry_factor(1), program.ramp_down(1), program.ramp_up(1), program.contractions(1), 
 13220 ;;		 -> program.OFF_time(1), program.ON_time(1), program.phase_duration(1), program.frequency(1), 
 13221 ;;		 -> program.amplitude2(1), program.amplitude(1), program(14), 
 13222 ;; Auto vars:     Size  Location     Type
 13223 ;;  pt              1    8[BANK0 ] PTR unsigned char 
 13224 ;;		 -> program.channel4(1), program.channel3(1), program.channel2(1), program.channel1(1), 
 13225 ;;		 -> program.symmetry_factor(1), program.ramp_down(1), program.ramp_up(1), program.contractions(1), 
 13226 ;;		 -> program.OFF_time(1), program.ON_time(1), program.phase_duration(1), program.frequency(1), 
 13227 ;;		 -> program.amplitude2(1), program.amplitude(1), program(14), 
 13228 ;;  message         2    6[BANK0 ] unsigned char [2]
 13229 ;; Return value:  Size  Location     Type
 13230 ;;                  1    wreg      unsigned char 
 13231 ;; Registers used:
 13232 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13233 ;; Tracked objects:
 13234 ;;		On entry : 31/0
 13235 ;;		On exit  : 0/0
 13236 ;;		Unchanged: 0/0
 13237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13239 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13240 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13241 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13242 ;;Total ram usage:        5 bytes
 13243 ;; Hardware stack levels used:    1
 13244 ;; Hardware stack levels required when called:    5
 13245 ;; This function calls:
 13246 ;;		_EUSART1_Read
 13247 ;;		___bmul
 13248 ;; This function is called by:
 13249 ;;		_NEMS_set_amplitude
 13250 ;;		_NEMS_set_amplitude2
 13251 ;;		_NEMS_set_frequency
 13252 ;;		_NEMS_set_phase_duration
 13253 ;;		_NEMS_set_symmetry_factor
 13254 ;;		_NEMS_set_ON_time
 13255 ;;		_NEMS_set_OFF_time
 13256 ;;		_NEMS_set_contractions
 13257 ;;		_NEMS_set_ramp_up
 13258 ;;		_NEMS_set_ramp_down
 13259 ;;		_NEMS_set_channel1
 13260 ;;		_NEMS_set_channel2
 13261 ;;		_NEMS_set_channel3
 13262 ;;		_NEMS_set_channel4
 13263 ;; This function uses a non-reentrant model
 13264 ;;
 13265                           
 13266                           
 13267                           ;psect for function _NEMS_get_packet
 13268  0A4F                     _NEMS_get_packet:
 13269                           
 13270                           ;incstack = 0
 13271                           ; Regs used in _NEMS_get_packet: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13272                           ;NEMS_get_packet@pt stored from wreg
 13273  0A4F  0140               	movlb	0	; select bank0
 13274  0A50  00A8               	movwf	NEMS_get_packet@pt
 13275                           
 13276                           ;NEMS.c: 272: unsigned char NEMS_get_packet(unsigned char* pt);NEMS.c: 273: {;NEMS.c: 27
      +                          4:     unsigned char message[2];;NEMS.c: 276:     _delay((unsigned long)((10)*(32000000/
      +                          4000.0)));
 13277  0A51  3068               	movlw	104
 13278  0A52  0140               	movlb	0	; select bank0
 13279  0A53  00A4               	movwf	??_NEMS_get_packet
 13280  0A54  30E4               	movlw	228
 13281  0A55                     u3017:
 13282  0A55  0B89               	decfsz	9,f
 13283  0A56  2A55               	goto	u3017
 13284  0A57  0BA4               	decfsz	??_NEMS_get_packet,f
 13285  0A58  2A55               	goto	u3017
 13286  0A59  0000               	nop
 13287                           
 13288                           ;NEMS.c: 278:     if (eusart1RxCount == 2) {
 13289  0A5A  3002               	movlw	2
 13290  0A5B  0671               	xorwf	_eusart1RxCount,w	;volatile
 13291  0A5C  1D03               	btfss	3,2
 13292  0A5D  2A8C               	goto	l4603
 13293                           
 13294                           ;NEMS.c: 279:         message[0] = EUSART1_Read();
 13295  0A5E  3189  210C  318A   	fcall	_EUSART1_Read
 13296  0A61  00A4               	movwf	??_NEMS_get_packet
 13297  0A62  0824               	movf	??_NEMS_get_packet,w
 13298  0A63  00A6               	movwf	NEMS_get_packet@message
 13299                           
 13300                           ;NEMS.c: 280:         message[1] = EUSART1_Read();
 13301  0A64  3189  210C  318A   	fcall	_EUSART1_Read
 13302  0A67  00A4               	movwf	??_NEMS_get_packet
 13303  0A68  0824               	movf	??_NEMS_get_packet,w
 13304  0A69  00A7               	movwf	NEMS_get_packet@message+1
 13305                           
 13306                           ;NEMS.c: 282:         *pt = message[0] - '0';
 13307  0A6A  0826               	movf	NEMS_get_packet@message,w
 13308  0A6B  3ED0               	addlw	208
 13309  0A6C  00A4               	movwf	??_NEMS_get_packet
 13310  0A6D  0828               	movf	NEMS_get_packet@pt,w
 13311  0A6E  0086               	movwf	6
 13312  0A6F  0187               	clrf	7
 13313  0A70  0824               	movf	??_NEMS_get_packet,w
 13314  0A71  0081               	movwf	1
 13315                           
 13316                           ;NEMS.c: 283:         *pt *= 10;
 13317  0A72  0828               	movf	NEMS_get_packet@pt,w
 13318  0A73  0086               	movwf	6
 13319  0A74  0187               	clrf	7
 13320  0A75  0801               	movf	1,w
 13321  0A76  00A4               	movwf	??_NEMS_get_packet
 13322  0A77  0824               	movf	??_NEMS_get_packet,w
 13323  0A78  00A0               	movwf	___bmul@multiplicand
 13324  0A79  300A               	movlw	10
 13325  0A7A  3196  261B         	fcall	___bmul
 13326  0A7C  00A5               	movwf	??_NEMS_get_packet+1
 13327  0A7D  0828               	movf	NEMS_get_packet@pt,w
 13328  0A7E  0086               	movwf	6
 13329  0A7F  0187               	clrf	7
 13330  0A80  0825               	movf	??_NEMS_get_packet+1,w
 13331  0A81  0081               	movwf	1
 13332                           
 13333                           ;NEMS.c: 284:         *pt += message[1] - '0';
 13334  0A82  0827               	movf	NEMS_get_packet@message+1,w
 13335  0A83  3ED0               	addlw	208
 13336  0A84  00A4               	movwf	??_NEMS_get_packet
 13337  0A85  0828               	movf	NEMS_get_packet@pt,w
 13338  0A86  0086               	movwf	6
 13339  0A87  0187               	clrf	7
 13340  0A88  0824               	movf	??_NEMS_get_packet,w
 13341  0A89  0781               	addwf	1,f
 13342                           
 13343                           ;NEMS.c: 286:         return 1;
 13344  0A8A  3001               	movlw	1
 13345  0A8B  0008               	return
 13346  0A8C                     l4603:
 13347                           
 13348                           ;NEMS.c: 288:         return 0;
 13349  0A8C  3000               	movlw	0
 13350  0A8D  0008               	return
 13351  0A8E                     __end_of_NEMS_get_packet:
 13352                           
 13353                           	psect	text44
 13354  0DA7                     __ptext44:	
 13355 ;; *************** function _NEMS_save_program *****************
 13356 ;; Defined at:
 13357 ;;		line 512 in file "NEMS.c"
 13358 ;; Parameters:    Size  Location     Type
 13359 ;;		None
 13360 ;; Auto vars:     Size  Location     Type
 13361 ;;  addr            1    9[BANK0 ] unsigned char 
 13362 ;; Return value:  Size  Location     Type
 13363 ;;                  1    wreg      void 
 13364 ;; Registers used:
 13365 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13366 ;; Tracked objects:
 13367 ;;		On entry : 31/0
 13368 ;;		On exit  : 3F/0
 13369 ;;		Unchanged: 0/0
 13370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13372 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13373 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13374 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13375 ;;Total ram usage:        2 bytes
 13376 ;; Hardware stack levels used:    1
 13377 ;; Hardware stack levels required when called:    6
 13378 ;; This function calls:
 13379 ;;		__puts
 13380 ;;		_eeprom_write
 13381 ;; This function is called by:
 13382 ;;		_NEMS_message_handler
 13383 ;; This function uses a non-reentrant model
 13384 ;;
 13385                           
 13386                           
 13387                           ;psect for function _NEMS_save_program
 13388  0DA7                     _NEMS_save_program:
 13389                           
 13390                           ;NEMS.c: 514:     unsigned char addr;;NEMS.c: 516:     addr = 0;
 13391                           
 13392                           ;incstack = 0
 13393                           ; Regs used in _NEMS_save_program: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13394  0DA7  0140               	movlb	0	; select bank0
 13395  0DA8  01A9               	clrf	NEMS_save_program@addr
 13396                           
 13397                           ;NEMS.c: 517:     eeprom_write(addr++,program.amplitude);
 13398  0DA9  0857               	movf	_program,w	;volatile
 13399  0DAA  00A8               	movwf	??_NEMS_save_program
 13400  0DAB  0828               	movf	??_NEMS_save_program,w
 13401  0DAC  00A0               	movwf	eeprom_write@value
 13402  0DAD  3000               	movlw	0
 13403  0DAE  3188  20C7  318D   	fcall	_eeprom_write
 13404  0DB1  3001               	movlw	1
 13405  0DB2  0140               	movlb	0	; select bank0
 13406  0DB3  00A8               	movwf	??_NEMS_save_program
 13407  0DB4  0828               	movf	??_NEMS_save_program,w
 13408  0DB5  07A9               	addwf	NEMS_save_program@addr,f
 13409                           
 13410                           ;NEMS.c: 518:     eeprom_write(addr++,program.amplitude2);
 13411  0DB6  0858               	movf	_program+1,w	;volatile
 13412  0DB7  00A8               	movwf	??_NEMS_save_program
 13413  0DB8  0828               	movf	??_NEMS_save_program,w
 13414  0DB9  00A0               	movwf	eeprom_write@value
 13415  0DBA  0829               	movf	NEMS_save_program@addr,w
 13416  0DBB  3188  20C7  318D   	fcall	_eeprom_write
 13417  0DBE  3001               	movlw	1
 13418  0DBF  0140               	movlb	0	; select bank0
 13419  0DC0  00A8               	movwf	??_NEMS_save_program
 13420  0DC1  0828               	movf	??_NEMS_save_program,w
 13421  0DC2  07A9               	addwf	NEMS_save_program@addr,f
 13422                           
 13423                           ;NEMS.c: 519:     eeprom_write(addr++,program.frequency);
 13424  0DC3  0859               	movf	_program+2,w	;volatile
 13425  0DC4  00A8               	movwf	??_NEMS_save_program
 13426  0DC5  0828               	movf	??_NEMS_save_program,w
 13427  0DC6  00A0               	movwf	eeprom_write@value
 13428  0DC7  0829               	movf	NEMS_save_program@addr,w
 13429  0DC8  3188  20C7  318D   	fcall	_eeprom_write
 13430  0DCB  3001               	movlw	1
 13431  0DCC  0140               	movlb	0	; select bank0
 13432  0DCD  00A8               	movwf	??_NEMS_save_program
 13433  0DCE  0828               	movf	??_NEMS_save_program,w
 13434  0DCF  07A9               	addwf	NEMS_save_program@addr,f
 13435                           
 13436                           ;NEMS.c: 520:     eeprom_write(addr++,program.phase_duration);
 13437  0DD0  085A               	movf	_program+3,w	;volatile
 13438  0DD1  00A8               	movwf	??_NEMS_save_program
 13439  0DD2  0828               	movf	??_NEMS_save_program,w
 13440  0DD3  00A0               	movwf	eeprom_write@value
 13441  0DD4  0829               	movf	NEMS_save_program@addr,w
 13442  0DD5  3188  20C7  318D   	fcall	_eeprom_write
 13443  0DD8  3001               	movlw	1
 13444  0DD9  0140               	movlb	0	; select bank0
 13445  0DDA  00A8               	movwf	??_NEMS_save_program
 13446  0DDB  0828               	movf	??_NEMS_save_program,w
 13447  0DDC  07A9               	addwf	NEMS_save_program@addr,f
 13448                           
 13449                           ;NEMS.c: 521:     eeprom_write(addr++,program.symmetry_factor);
 13450  0DDD  085B               	movf	_program+4,w	;volatile
 13451  0DDE  00A8               	movwf	??_NEMS_save_program
 13452  0DDF  0828               	movf	??_NEMS_save_program,w
 13453  0DE0  00A0               	movwf	eeprom_write@value
 13454  0DE1  0829               	movf	NEMS_save_program@addr,w
 13455  0DE2  3188  20C7  318D   	fcall	_eeprom_write
 13456  0DE5  3001               	movlw	1
 13457  0DE6  0140               	movlb	0	; select bank0
 13458  0DE7  00A8               	movwf	??_NEMS_save_program
 13459  0DE8  0828               	movf	??_NEMS_save_program,w
 13460  0DE9  07A9               	addwf	NEMS_save_program@addr,f
 13461                           
 13462                           ;NEMS.c: 522:     eeprom_write(addr++,program.ON_time);
 13463  0DEA  085C               	movf	_program+5,w	;volatile
 13464  0DEB  00A8               	movwf	??_NEMS_save_program
 13465  0DEC  0828               	movf	??_NEMS_save_program,w
 13466  0DED  00A0               	movwf	eeprom_write@value
 13467  0DEE  0829               	movf	NEMS_save_program@addr,w
 13468  0DEF  3188  20C7  318D   	fcall	_eeprom_write
 13469  0DF2  3001               	movlw	1
 13470  0DF3  0140               	movlb	0	; select bank0
 13471  0DF4  00A8               	movwf	??_NEMS_save_program
 13472  0DF5  0828               	movf	??_NEMS_save_program,w
 13473  0DF6  07A9               	addwf	NEMS_save_program@addr,f
 13474                           
 13475                           ;NEMS.c: 523:     eeprom_write(addr++,program.OFF_time);
 13476  0DF7  085D               	movf	_program+6,w	;volatile
 13477  0DF8  00A8               	movwf	??_NEMS_save_program
 13478  0DF9  0828               	movf	??_NEMS_save_program,w
 13479  0DFA  00A0               	movwf	eeprom_write@value
 13480  0DFB  0829               	movf	NEMS_save_program@addr,w
 13481  0DFC  3188  20C7  318D   	fcall	_eeprom_write
 13482  0DFF  3001               	movlw	1
 13483  0E00  0140               	movlb	0	; select bank0
 13484  0E01  00A8               	movwf	??_NEMS_save_program
 13485  0E02  0828               	movf	??_NEMS_save_program,w
 13486  0E03  07A9               	addwf	NEMS_save_program@addr,f
 13487                           
 13488                           ;NEMS.c: 524:     eeprom_write(addr++,program.ramp_up);
 13489  0E04  085F               	movf	_program+8,w	;volatile
 13490  0E05  00A8               	movwf	??_NEMS_save_program
 13491  0E06  0828               	movf	??_NEMS_save_program,w
 13492  0E07  00A0               	movwf	eeprom_write@value
 13493  0E08  0829               	movf	NEMS_save_program@addr,w
 13494  0E09  3188  20C7  318D   	fcall	_eeprom_write
 13495  0E0C  3001               	movlw	1
 13496  0E0D  0140               	movlb	0	; select bank0
 13497  0E0E  00A8               	movwf	??_NEMS_save_program
 13498  0E0F  0828               	movf	??_NEMS_save_program,w
 13499  0E10  07A9               	addwf	NEMS_save_program@addr,f
 13500                           
 13501                           ;NEMS.c: 525:     eeprom_write(addr++,program.ramp_down);
 13502  0E11  0860               	movf	_program+9,w	;volatile
 13503  0E12  00A8               	movwf	??_NEMS_save_program
 13504  0E13  0828               	movf	??_NEMS_save_program,w
 13505  0E14  00A0               	movwf	eeprom_write@value
 13506  0E15  0829               	movf	NEMS_save_program@addr,w
 13507  0E16  3188  20C7  318D   	fcall	_eeprom_write
 13508  0E19  3001               	movlw	1
 13509  0E1A  0140               	movlb	0	; select bank0
 13510  0E1B  00A8               	movwf	??_NEMS_save_program
 13511  0E1C  0828               	movf	??_NEMS_save_program,w
 13512  0E1D  07A9               	addwf	NEMS_save_program@addr,f
 13513                           
 13514                           ;NEMS.c: 526:     eeprom_write(addr++,program.contractions);
 13515  0E1E  085E               	movf	_program+7,w	;volatile
 13516  0E1F  00A8               	movwf	??_NEMS_save_program
 13517  0E20  0828               	movf	??_NEMS_save_program,w
 13518  0E21  00A0               	movwf	eeprom_write@value
 13519  0E22  0829               	movf	NEMS_save_program@addr,w
 13520  0E23  3188  20C7  318D   	fcall	_eeprom_write
 13521  0E26  3001               	movlw	1
 13522  0E27  0140               	movlb	0	; select bank0
 13523  0E28  00A8               	movwf	??_NEMS_save_program
 13524  0E29  0828               	movf	??_NEMS_save_program,w
 13525  0E2A  07A9               	addwf	NEMS_save_program@addr,f
 13526                           
 13527                           ;NEMS.c: 527:     eeprom_write(addr++,program.channel1);
 13528  0E2B  0861               	movf	_program+10,w	;volatile
 13529  0E2C  00A8               	movwf	??_NEMS_save_program
 13530  0E2D  0828               	movf	??_NEMS_save_program,w
 13531  0E2E  00A0               	movwf	eeprom_write@value
 13532  0E2F  0829               	movf	NEMS_save_program@addr,w
 13533  0E30  3188  20C7  318D   	fcall	_eeprom_write
 13534  0E33  3001               	movlw	1
 13535  0E34  0140               	movlb	0	; select bank0
 13536  0E35  00A8               	movwf	??_NEMS_save_program
 13537  0E36  0828               	movf	??_NEMS_save_program,w
 13538  0E37  07A9               	addwf	NEMS_save_program@addr,f
 13539                           
 13540                           ;NEMS.c: 528:     eeprom_write(addr++,program.channel2);
 13541  0E38  0862               	movf	_program+11,w	;volatile
 13542  0E39  00A8               	movwf	??_NEMS_save_program
 13543  0E3A  0828               	movf	??_NEMS_save_program,w
 13544  0E3B  00A0               	movwf	eeprom_write@value
 13545  0E3C  0829               	movf	NEMS_save_program@addr,w
 13546  0E3D  3188  20C7  318D   	fcall	_eeprom_write
 13547  0E40  3001               	movlw	1
 13548  0E41  0140               	movlb	0	; select bank0
 13549  0E42  00A8               	movwf	??_NEMS_save_program
 13550  0E43  0828               	movf	??_NEMS_save_program,w
 13551  0E44  07A9               	addwf	NEMS_save_program@addr,f
 13552                           
 13553                           ;NEMS.c: 529:     eeprom_write(addr++,program.channel3);
 13554  0E45  0863               	movf	_program+12,w	;volatile
 13555  0E46  00A8               	movwf	??_NEMS_save_program
 13556  0E47  0828               	movf	??_NEMS_save_program,w
 13557  0E48  00A0               	movwf	eeprom_write@value
 13558  0E49  0829               	movf	NEMS_save_program@addr,w
 13559  0E4A  3188  20C7  318D   	fcall	_eeprom_write
 13560  0E4D  3001               	movlw	1
 13561  0E4E  0140               	movlb	0	; select bank0
 13562  0E4F  00A8               	movwf	??_NEMS_save_program
 13563  0E50  0828               	movf	??_NEMS_save_program,w
 13564  0E51  07A9               	addwf	NEMS_save_program@addr,f
 13565                           
 13566                           ;NEMS.c: 530:     eeprom_write(addr,program.channel4);
 13567  0E52  0864               	movf	_program+13,w	;volatile
 13568  0E53  00A8               	movwf	??_NEMS_save_program
 13569  0E54  0828               	movf	??_NEMS_save_program,w
 13570  0E55  00A0               	movwf	eeprom_write@value
 13571  0E56  0829               	movf	NEMS_save_program@addr,w
 13572  0E57  3188  20C7  318D   	fcall	_eeprom_write
 13573                           
 13574                           ;NEMS.c: 532:     _puts("s-ok ");
 13575  0E5A  3082               	movlw	low (STR_59| (0+32768))
 13576  0E5B  0140               	movlb	0	; select bank0
 13577  0E5C  00A2               	movwf	__puts@pt
 13578  0E5D  3099               	movlw	high (STR_59| (0+32768))
 13579  0E5E  00A3               	movwf	__puts@pt+1
 13580  0E5F  3189  2132         	fcall	__puts
 13581  0E61  0008               	return
 13582  0E62                     __end_of_NEMS_save_program:
 13583                           
 13584                           	psect	text45
 13585  08C7                     __ptext45:	
 13586 ;; *************** function _eeprom_write *****************
 13587 ;; Defined at:
 13588 ;;		line 6 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/pic/__eewrite.c"
 13589 ;; Parameters:    Size  Location     Type
 13590 ;;  addr            1    wreg     unsigned char 
 13591 ;;  value           1    0[BANK0 ] unsigned char 
 13592 ;; Auto vars:     Size  Location     Type
 13593 ;;  addr            1    1[BANK0 ] unsigned char 
 13594 ;; Return value:  Size  Location     Type
 13595 ;;                  1    wreg      void 
 13596 ;; Registers used:
 13597 ;;		wreg, status,2
 13598 ;; Tracked objects:
 13599 ;;		On entry : 3F/0
 13600 ;;		On exit  : 3F/10
 13601 ;;		Unchanged: 0/0
 13602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13603 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13604 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13606 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13607 ;;Total ram usage:        2 bytes
 13608 ;; Hardware stack levels used:    1
 13609 ;; Hardware stack levels required when called:    4
 13610 ;; This function calls:
 13611 ;;		Nothing
 13612 ;; This function is called by:
 13613 ;;		_NEMS_save_program
 13614 ;; This function uses a non-reentrant model
 13615 ;;
 13616                           
 13617                           
 13618                           ;psect for function _eeprom_write
 13619  08C7                     _eeprom_write:
 13620                           
 13621                           ;incstack = 0
 13622                           ; Regs used in _eeprom_write: [wreg+status,2]
 13623                           ;eeprom_write@addr stored from wreg
 13624  08C7  00A1               	movwf	eeprom_write@addr
 13625  08C8                     l1172:	
 13626                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/pic/__eewrite.c: 6: eeprom_write(unsigned char
      +                           addr, unsigned char value);/opt/microchip/xc8/v2.31/pic/sources/c99/pic/__eewrite.c: 7:
      +                           {;/opt/microchip/xc8/v2.31/pic/sources/c99/pic/__eewrite.c: 8:  do { while (NVMCON1bits
      +                          .WR) { continue; } NVMCON1bits.NVMREGS = 1; NVMADRL = (addr) & 0xFFU; NVMADRH = 0x70; NV
      +                          MDATH = 0; NVMDATL = (value) & 0xFFU; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUS
      +                          bits.CARRY = 1; } INTCONbits.GIE = 0; NVMCON1bits.WREN = 1; NVMCON2 = 0x55; NVMCON2 = 0x
      +                          AA; NVMCON1bits.WR = 1; while (NVMCON1bits.WR) { continue; } NVMCON1bits.WREN = 0; if (S
      +                          TATUSbits.CARRY) { INTCONbits.GIE = 1; } } while (0);
 13627                           
 13628  08C8  0150               	movlb	16	; select bank16
 13629  08C9  189E               	btfsc	30,1	;volsfr
 13630  08CA  28C8               	goto	l1172
 13631  08CB  171E               	bsf	30,6	;volsfr
 13632  08CC  0140               	movlb	0	; select bank0
 13633  08CD  0821               	movf	eeprom_write@addr,w
 13634  08CE  0150               	movlb	16	; select bank16
 13635  08CF  009A               	movwf	26	;volatile
 13636  08D0  3070               	movlw	112
 13637  08D1  009B               	movwf	27	;volatile
 13638  08D2  019D               	clrf	29	;volatile
 13639  08D3  0140               	movlb	0	; select bank0
 13640  08D4  0820               	movf	eeprom_write@value,w
 13641  08D5  0150               	movlb	16	; select bank16
 13642  08D6  009C               	movwf	28	;volatile
 13643  08D7  1003               	bcf	3,0	;volatile
 13644  08D8  1B8B               	btfsc	11,7	;volatile
 13645  08D9  1403               	bsf	3,0	;volatile
 13646  08DA  138B               	bcf	11,7	;volatile
 13647  08DB  151E               	bsf	30,2	;volsfr
 13648  08DC  3055               	movlw	85
 13649  08DD  009F               	movwf	31	;volsfr
 13650  08DE  30AA               	movlw	170
 13651  08DF  009F               	movwf	31	;volsfr
 13652  08E0  149E               	bsf	30,1	;volsfr
 13653  08E1                     l1176:
 13654  08E1  189E               	btfsc	30,1	;volsfr
 13655  08E2  28E1               	goto	l1176
 13656  08E3  111E               	bcf	30,2	;volsfr
 13657  08E4  1C03               	btfss	3,0	;volatile
 13658  08E5  0008               	return
 13659  08E6  178B               	bsf	11,7	;volatile
 13660  08E7  0008               	return
 13661  08E8                     __end_of_eeprom_write:
 13662                           
 13663                           	psect	text46
 13664  0CF9                     __ptext46:	
 13665 ;; *************** function _NEMS_load_program *****************
 13666 ;; Defined at:
 13667 ;;		line 536 in file "NEMS.c"
 13668 ;; Parameters:    Size  Location     Type
 13669 ;;		None
 13670 ;; Auto vars:     Size  Location     Type
 13671 ;;  addr            2    9[BANK0 ] unsigned short 
 13672 ;; Return value:  Size  Location     Type
 13673 ;;                  1    wreg      void 
 13674 ;; Registers used:
 13675 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13676 ;; Tracked objects:
 13677 ;;		On entry : 31/0
 13678 ;;		On exit  : 3F/0
 13679 ;;		Unchanged: 0/0
 13680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13682 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13683 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13684 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13685 ;;Total ram usage:        3 bytes
 13686 ;; Hardware stack levels used:    1
 13687 ;; Hardware stack levels required when called:    6
 13688 ;; This function calls:
 13689 ;;		__puts
 13690 ;;		_eeprom_read
 13691 ;; This function is called by:
 13692 ;;		_NEMS_message_handler
 13693 ;; This function uses a non-reentrant model
 13694 ;;
 13695                           
 13696                           
 13697                           ;psect for function _NEMS_load_program
 13698  0CF9                     _NEMS_load_program:
 13699                           
 13700                           ;NEMS.c: 538:     unsigned short addr;;NEMS.c: 540:     addr = 0;
 13701                           
 13702                           ;incstack = 0
 13703                           ; Regs used in _NEMS_load_program: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13704  0CF9  0140               	movlb	0	; select bank0
 13705  0CFA  01A9               	clrf	NEMS_load_program@addr
 13706  0CFB  01AA               	clrf	NEMS_load_program@addr+1
 13707                           
 13708                           ;NEMS.c: 542:     program.amplitude = eeprom_read(addr++);
 13709  0CFC  3000               	movlw	0
 13710  0CFD  3196  262C  318C   	fcall	_eeprom_read
 13711  0D00  0140               	movlb	0	; select bank0
 13712  0D01  00A8               	movwf	??_NEMS_load_program
 13713  0D02  0828               	movf	??_NEMS_load_program,w
 13714  0D03  00D7               	movwf	_program	;volatile
 13715  0D04  3001               	movlw	1
 13716  0D05  07A9               	addwf	NEMS_load_program@addr,f
 13717  0D06  3000               	movlw	0
 13718  0D07  3DAA               	addwfc	NEMS_load_program@addr+1,f
 13719                           
 13720                           ;NEMS.c: 543:     program.amplitude2 = eeprom_read(addr++);
 13721  0D08  0829               	movf	NEMS_load_program@addr,w
 13722  0D09  3196  262C  318C   	fcall	_eeprom_read
 13723  0D0C  0140               	movlb	0	; select bank0
 13724  0D0D  00A8               	movwf	??_NEMS_load_program
 13725  0D0E  0828               	movf	??_NEMS_load_program,w
 13726  0D0F  00D8               	movwf	_program+1	;volatile
 13727  0D10  3001               	movlw	1
 13728  0D11  07A9               	addwf	NEMS_load_program@addr,f
 13729  0D12  3000               	movlw	0
 13730  0D13  3DAA               	addwfc	NEMS_load_program@addr+1,f
 13731                           
 13732                           ;NEMS.c: 544:     program.frequency = eeprom_read(addr++);
 13733  0D14  0829               	movf	NEMS_load_program@addr,w
 13734  0D15  3196  262C  318C   	fcall	_eeprom_read
 13735  0D18  0140               	movlb	0	; select bank0
 13736  0D19  00A8               	movwf	??_NEMS_load_program
 13737  0D1A  0828               	movf	??_NEMS_load_program,w
 13738  0D1B  00D9               	movwf	_program+2	;volatile
 13739  0D1C  3001               	movlw	1
 13740  0D1D  07A9               	addwf	NEMS_load_program@addr,f
 13741  0D1E  3000               	movlw	0
 13742  0D1F  3DAA               	addwfc	NEMS_load_program@addr+1,f
 13743                           
 13744                           ;NEMS.c: 545:     program.phase_duration = eeprom_read(addr++);
 13745  0D20  0829               	movf	NEMS_load_program@addr,w
 13746  0D21  3196  262C  318C   	fcall	_eeprom_read
 13747  0D24  0140               	movlb	0	; select bank0
 13748  0D25  00A8               	movwf	??_NEMS_load_program
 13749  0D26  0828               	movf	??_NEMS_load_program,w
 13750  0D27  00DA               	movwf	_program+3	;volatile
 13751  0D28  3001               	movlw	1
 13752  0D29  07A9               	addwf	NEMS_load_program@addr,f
 13753  0D2A  3000               	movlw	0
 13754  0D2B  3DAA               	addwfc	NEMS_load_program@addr+1,f
 13755                           
 13756                           ;NEMS.c: 546:     program.symmetry_factor = eeprom_read(addr++);
 13757  0D2C  0829               	movf	NEMS_load_program@addr,w
 13758  0D2D  3196  262C  318C   	fcall	_eeprom_read
 13759  0D30  0140               	movlb	0	; select bank0
 13760  0D31  00A8               	movwf	??_NEMS_load_program
 13761  0D32  0828               	movf	??_NEMS_load_program,w
 13762  0D33  00DB               	movwf	_program+4	;volatile
 13763  0D34  3001               	movlw	1
 13764  0D35  07A9               	addwf	NEMS_load_program@addr,f
 13765  0D36  3000               	movlw	0
 13766  0D37  3DAA               	addwfc	NEMS_load_program@addr+1,f
 13767                           
 13768                           ;NEMS.c: 547:     program.ON_time = eeprom_read(addr++);
 13769  0D38  0829               	movf	NEMS_load_program@addr,w
 13770  0D39  3196  262C  318C   	fcall	_eeprom_read
 13771  0D3C  0140               	movlb	0	; select bank0
 13772  0D3D  00A8               	movwf	??_NEMS_load_program
 13773  0D3E  0828               	movf	??_NEMS_load_program,w
 13774  0D3F  00DC               	movwf	_program+5	;volatile
 13775  0D40  3001               	movlw	1
 13776  0D41  07A9               	addwf	NEMS_load_program@addr,f
 13777  0D42  3000               	movlw	0
 13778  0D43  3DAA               	addwfc	NEMS_load_program@addr+1,f
 13779                           
 13780                           ;NEMS.c: 548:     program.OFF_time = eeprom_read(addr++);
 13781  0D44  0829               	movf	NEMS_load_program@addr,w
 13782  0D45  3196  262C  318C   	fcall	_eeprom_read
 13783  0D48  0140               	movlb	0	; select bank0
 13784  0D49  00A8               	movwf	??_NEMS_load_program
 13785  0D4A  0828               	movf	??_NEMS_load_program,w
 13786  0D4B  00DD               	movwf	_program+6	;volatile
 13787  0D4C  3001               	movlw	1
 13788  0D4D  07A9               	addwf	NEMS_load_program@addr,f
 13789  0D4E  3000               	movlw	0
 13790  0D4F  3DAA               	addwfc	NEMS_load_program@addr+1,f
 13791                           
 13792                           ;NEMS.c: 549:     program.ramp_up = eeprom_read(addr++);
 13793  0D50  0829               	movf	NEMS_load_program@addr,w
 13794  0D51  3196  262C  318C   	fcall	_eeprom_read
 13795  0D54  0140               	movlb	0	; select bank0
 13796  0D55  00A8               	movwf	??_NEMS_load_program
 13797  0D56  0828               	movf	??_NEMS_load_program,w
 13798  0D57  00DF               	movwf	_program+8	;volatile
 13799  0D58  3001               	movlw	1
 13800  0D59  07A9               	addwf	NEMS_load_program@addr,f
 13801  0D5A  3000               	movlw	0
 13802  0D5B  3DAA               	addwfc	NEMS_load_program@addr+1,f
 13803                           
 13804                           ;NEMS.c: 550:     program.ramp_down = eeprom_read(addr++);
 13805  0D5C  0829               	movf	NEMS_load_program@addr,w
 13806  0D5D  3196  262C  318C   	fcall	_eeprom_read
 13807  0D60  0140               	movlb	0	; select bank0
 13808  0D61  00A8               	movwf	??_NEMS_load_program
 13809  0D62  0828               	movf	??_NEMS_load_program,w
 13810  0D63  00E0               	movwf	_program+9	;volatile
 13811  0D64  3001               	movlw	1
 13812  0D65  07A9               	addwf	NEMS_load_program@addr,f
 13813  0D66  3000               	movlw	0
 13814  0D67  3DAA               	addwfc	NEMS_load_program@addr+1,f
 13815                           
 13816                           ;NEMS.c: 551:     program.contractions = eeprom_read(addr++);
 13817  0D68  0829               	movf	NEMS_load_program@addr,w
 13818  0D69  3196  262C  318C   	fcall	_eeprom_read
 13819  0D6C  0140               	movlb	0	; select bank0
 13820  0D6D  00A8               	movwf	??_NEMS_load_program
 13821  0D6E  0828               	movf	??_NEMS_load_program,w
 13822  0D6F  00DE               	movwf	_program+7	;volatile
 13823  0D70  3001               	movlw	1
 13824  0D71  07A9               	addwf	NEMS_load_program@addr,f
 13825  0D72  3000               	movlw	0
 13826  0D73  3DAA               	addwfc	NEMS_load_program@addr+1,f
 13827                           
 13828                           ;NEMS.c: 552:     program.channel1 = eeprom_read(addr++);
 13829  0D74  0829               	movf	NEMS_load_program@addr,w
 13830  0D75  3196  262C  318C   	fcall	_eeprom_read
 13831  0D78  0140               	movlb	0	; select bank0
 13832  0D79  00A8               	movwf	??_NEMS_load_program
 13833  0D7A  0828               	movf	??_NEMS_load_program,w
 13834  0D7B  00E1               	movwf	_program+10	;volatile
 13835  0D7C  3001               	movlw	1
 13836  0D7D  07A9               	addwf	NEMS_load_program@addr,f
 13837  0D7E  3000               	movlw	0
 13838  0D7F  3DAA               	addwfc	NEMS_load_program@addr+1,f
 13839                           
 13840                           ;NEMS.c: 553:     program.channel2 = eeprom_read(addr++);
 13841  0D80  0829               	movf	NEMS_load_program@addr,w
 13842  0D81  3196  262C  318C   	fcall	_eeprom_read
 13843  0D84  0140               	movlb	0	; select bank0
 13844  0D85  00A8               	movwf	??_NEMS_load_program
 13845  0D86  0828               	movf	??_NEMS_load_program,w
 13846  0D87  00E2               	movwf	_program+11	;volatile
 13847  0D88  3001               	movlw	1
 13848  0D89  07A9               	addwf	NEMS_load_program@addr,f
 13849  0D8A  3000               	movlw	0
 13850  0D8B  3DAA               	addwfc	NEMS_load_program@addr+1,f
 13851                           
 13852                           ;NEMS.c: 554:     program.channel3 = eeprom_read(addr++);
 13853  0D8C  0829               	movf	NEMS_load_program@addr,w
 13854  0D8D  3196  262C  318C   	fcall	_eeprom_read
 13855  0D90  0140               	movlb	0	; select bank0
 13856  0D91  00A8               	movwf	??_NEMS_load_program
 13857  0D92  0828               	movf	??_NEMS_load_program,w
 13858  0D93  00E3               	movwf	_program+12	;volatile
 13859  0D94  3001               	movlw	1
 13860  0D95  07A9               	addwf	NEMS_load_program@addr,f
 13861  0D96  3000               	movlw	0
 13862  0D97  3DAA               	addwfc	NEMS_load_program@addr+1,f
 13863                           
 13864                           ;NEMS.c: 555:     program.channel4 = eeprom_read(addr);
 13865  0D98  0829               	movf	NEMS_load_program@addr,w
 13866  0D99  3196  262C  318C   	fcall	_eeprom_read
 13867  0D9C  0140               	movlb	0	; select bank0
 13868  0D9D  00A8               	movwf	??_NEMS_load_program
 13869  0D9E  0828               	movf	??_NEMS_load_program,w
 13870  0D9F  00E4               	movwf	_program+13	;volatile
 13871                           
 13872                           ;NEMS.c: 557:     _puts("l-ok ");
 13873  0DA0  305E               	movlw	low (STR_60| (0+32768))
 13874  0DA1  00A2               	movwf	__puts@pt
 13875  0DA2  3099               	movlw	high (STR_60| (0+32768))
 13876  0DA3  00A3               	movwf	__puts@pt+1
 13877  0DA4  3189  2132         	fcall	__puts
 13878  0DA6  0008               	return
 13879  0DA7                     __end_of_NEMS_load_program:
 13880                           
 13881                           	psect	text47
 13882  162C                     __ptext47:	
 13883 ;; *************** function _eeprom_read *****************
 13884 ;; Defined at:
 13885 ;;		line 6 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/pic/__eeread.c"
 13886 ;; Parameters:    Size  Location     Type
 13887 ;;  addr            1    wreg     unsigned char 
 13888 ;; Auto vars:     Size  Location     Type
 13889 ;;  addr            1    0[BANK0 ] unsigned char 
 13890 ;; Return value:  Size  Location     Type
 13891 ;;                  1    wreg      unsigned char 
 13892 ;; Registers used:
 13893 ;;		wreg
 13894 ;; Tracked objects:
 13895 ;;		On entry : 3F/0
 13896 ;;		On exit  : 3F/10
 13897 ;;		Unchanged: 0/0
 13898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13900 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13902 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13903 ;;Total ram usage:        1 bytes
 13904 ;; Hardware stack levels used:    1
 13905 ;; Hardware stack levels required when called:    4
 13906 ;; This function calls:
 13907 ;;		Nothing
 13908 ;; This function is called by:
 13909 ;;		_NEMS_load_program
 13910 ;; This function uses a non-reentrant model
 13911 ;;
 13912                           
 13913                           
 13914                           ;psect for function _eeprom_read
 13915  162C                     _eeprom_read:
 13916                           
 13917                           ;incstack = 0
 13918                           ; Regs used in _eeprom_read: [wreg]
 13919                           ;eeprom_read@addr stored from wreg
 13920  162C  00A0               	movwf	eeprom_read@addr
 13921  162D  2E2F               	goto	l1150
 13922  162E                     u2741:
 13923  162E  0140               	movlb	0	; select bank0
 13924  162F                     l1150:	
 13925                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/pic/__eeread.c: 6: eeprom_read(unsigned char a
      +                          ddr);/opt/microchip/xc8/v2.31/pic/sources/c99/pic/__eeread.c: 7: {;/opt/microchip/xc8/v2
      +                          .31/pic/sources/c99/pic/__eeread.c: 8:  do
 13926                           
 13927  162F  0064               	clrwdt	;# 
 13928  1630  0150               	movlb	16	; select bank16
 13929  1631  189E               	btfsc	30,1	;volsfr
 13930  1632  2E2E               	goto	u2741
 13931                           
 13932                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/pic/__eeread.c: 18:  return ( NVMCON1bits.NVMR
      +                          EGS = 1, NVMADRL = (addr) & 0xFFU, NVMADRH = 0x70, NVMCON1bits.RD = 1, NVMDATL);
 13933  1633  171E               	bsf	30,6	;volsfr
 13934  1634  0140               	movlb	0	; select bank0
 13935  1635  0820               	movf	eeprom_read@addr,w
 13936  1636  0150               	movlb	16	; select bank16
 13937  1637  009A               	movwf	26	;volatile
 13938  1638  3070               	movlw	112
 13939  1639  009B               	movwf	27	;volatile
 13940  163A  141E               	bsf	30,0	;volsfr
 13941  163B  081C               	movf	28,w	;volatile
 13942  163C  0008               	return
 13943  163D                     __end_of_eeprom_read:
 13944                           
 13945                           	psect	text48
 13946  0E62                     __ptext48:	
 13947 ;; *************** function _NEMS_get_program *****************
 13948 ;; Defined at:
 13949 ;;		line 394 in file "NEMS.c"
 13950 ;; Parameters:    Size  Location     Type
 13951 ;;		None
 13952 ;; Auto vars:     Size  Location     Type
 13953 ;;  aux             4   25[BANK0 ] unsigned char [4]
 13954 ;; Return value:  Size  Location     Type
 13955 ;;                  1    wreg      void 
 13956 ;; Registers used:
 13957 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13958 ;; Tracked objects:
 13959 ;;		On entry : 31/0
 13960 ;;		On exit  : 3F/0
 13961 ;;		Unchanged: 0/0
 13962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13964 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13965 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13966 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13967 ;;Total ram usage:        5 bytes
 13968 ;; Hardware stack levels used:    1
 13969 ;; Hardware stack levels required when called:    6
 13970 ;; This function calls:
 13971 ;;		__puts
 13972 ;;		__sprintf_u8b
 13973 ;; This function is called by:
 13974 ;;		_NEMS_message_handler
 13975 ;; This function uses a non-reentrant model
 13976 ;;
 13977                           
 13978                           
 13979                           ;psect for function _NEMS_get_program
 13980  0E62                     _NEMS_get_program:
 13981                           
 13982                           ;NEMS.c: 396:     unsigned char aux[4];;NEMS.c: 398:     _puts("\nNEMS program\n");
 13983                           
 13984                           ;incstack = 0
 13985                           ; Regs used in _NEMS_get_program: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13986  0E62  306C               	movlw	low (STR_22| (0+32768))
 13987  0E63  0140               	movlb	0	; select bank0
 13988  0E64  00A2               	movwf	__puts@pt
 13989  0E65  3098               	movlw	high (STR_22| (0+32768))
 13990  0E66  00A3               	movwf	__puts@pt+1
 13991  0E67  3189  2132  318E   	fcall	__puts
 13992                           
 13993                           ;NEMS.c: 400:     _sprintf_u8b(aux,program.amplitude);
 13994  0E6A  0857               	movf	_program,w	;volatile
 13995  0E6B  00B8               	movwf	??_NEMS_get_program
 13996  0E6C  0838               	movf	??_NEMS_get_program,w
 13997  0E6D  00AF               	movwf	__sprintf_u8b@val
 13998  0E6E  3039               	movlw	(low (NEMS_get_program@aux| 0))& (0+255)
 13999  0E6F  318B  23CA  318E   	fcall	__sprintf_u8b
 14000                           
 14001                           ;NEMS.c: 401:     _puts("Amplitude1 (mA): ");
 14002  0E72  3015               	movlw	low (STR_23| (0+32768))
 14003  0E73  00A2               	movwf	__puts@pt
 14004  0E74  3098               	movlw	high (STR_23| (0+32768))
 14005  0E75  00A3               	movwf	__puts@pt+1
 14006  0E76  3189  2132  318E   	fcall	__puts
 14007                           
 14008                           ;NEMS.c: 402:     _puts(aux);
 14009  0E79  3039               	movlw	low NEMS_get_program@aux
 14010  0E7A  00A2               	movwf	__puts@pt
 14011  0E7B  3000               	movlw	high NEMS_get_program@aux
 14012  0E7C  00A3               	movwf	__puts@pt+1
 14013  0E7D  3189  2132  318E   	fcall	__puts
 14014                           
 14015                           ;NEMS.c: 403:     _puts("\n");
 14016  0E80  303B               	movlw	low ((STR_62+26)| (0+32768))
 14017  0E81  00A2               	movwf	__puts@pt
 14018  0E82  3090               	movlw	high ((STR_62+26)| (0+32768))
 14019  0E83  00A3               	movwf	__puts@pt+1
 14020  0E84  3189  2132  318E   	fcall	__puts
 14021                           
 14022                           ;NEMS.c: 405:     _sprintf_u8b(aux,program.amplitude2);
 14023  0E87  0858               	movf	_program+1,w	;volatile
 14024  0E88  00B8               	movwf	??_NEMS_get_program
 14025  0E89  0838               	movf	??_NEMS_get_program,w
 14026  0E8A  00AF               	movwf	__sprintf_u8b@val
 14027  0E8B  3039               	movlw	(low (NEMS_get_program@aux| 0))& (0+255)
 14028  0E8C  318B  23CA  318E   	fcall	__sprintf_u8b
 14029                           
 14030                           ;NEMS.c: 406:     _puts("Amplitude2 (mA): ");
 14031  0E8F  3027               	movlw	low (STR_25| (0+32768))
 14032  0E90  00A2               	movwf	__puts@pt
 14033  0E91  3098               	movlw	high (STR_25| (0+32768))
 14034  0E92  00A3               	movwf	__puts@pt+1
 14035  0E93  3189  2132  318E   	fcall	__puts
 14036                           
 14037                           ;NEMS.c: 407:     _puts(aux);
 14038  0E96  3039               	movlw	low NEMS_get_program@aux
 14039  0E97  00A2               	movwf	__puts@pt
 14040  0E98  3000               	movlw	high NEMS_get_program@aux
 14041  0E99  00A3               	movwf	__puts@pt+1
 14042  0E9A  3189  2132  318E   	fcall	__puts
 14043                           
 14044                           ;NEMS.c: 408:     _puts("\n");
 14045  0E9D  303B               	movlw	low ((STR_62+26)| (0+32768))
 14046  0E9E  00A2               	movwf	__puts@pt
 14047  0E9F  3090               	movlw	high ((STR_62+26)| (0+32768))
 14048  0EA0  00A3               	movwf	__puts@pt+1
 14049  0EA1  3189  2132  318E   	fcall	__puts
 14050                           
 14051                           ;NEMS.c: 410:     _sprintf_u8b(aux,program.frequency);
 14052  0EA4  0859               	movf	_program+2,w	;volatile
 14053  0EA5  00B8               	movwf	??_NEMS_get_program
 14054  0EA6  0838               	movf	??_NEMS_get_program,w
 14055  0EA7  00AF               	movwf	__sprintf_u8b@val
 14056  0EA8  3039               	movlw	(low (NEMS_get_program@aux| 0))& (0+255)
 14057  0EA9  318B  23CA  318E   	fcall	__sprintf_u8b
 14058                           
 14059                           ;NEMS.c: 411:     _puts("Frequency (Hz): ");
 14060  0EAC  304B               	movlw	low (STR_27| (0+32768))
 14061  0EAD  00A2               	movwf	__puts@pt
 14062  0EAE  3098               	movlw	high (STR_27| (0+32768))
 14063  0EAF  00A3               	movwf	__puts@pt+1
 14064  0EB0  3189  2132  318E   	fcall	__puts
 14065                           
 14066                           ;NEMS.c: 412:     _puts(aux);
 14067  0EB3  3039               	movlw	low NEMS_get_program@aux
 14068  0EB4  00A2               	movwf	__puts@pt
 14069  0EB5  3000               	movlw	high NEMS_get_program@aux
 14070  0EB6  00A3               	movwf	__puts@pt+1
 14071  0EB7  3189  2132  318E   	fcall	__puts
 14072                           
 14073                           ;NEMS.c: 413:     _puts("\n");
 14074  0EBA  303B               	movlw	low ((STR_62+26)| (0+32768))
 14075  0EBB  00A2               	movwf	__puts@pt
 14076  0EBC  3090               	movlw	high ((STR_62+26)| (0+32768))
 14077  0EBD  00A3               	movwf	__puts@pt+1
 14078  0EBE  3189  2132  318E   	fcall	__puts
 14079                           
 14080                           ;NEMS.c: 415:     _sprintf_u8b(aux,program.phase_duration);
 14081  0EC1  085A               	movf	_program+3,w	;volatile
 14082  0EC2  00B8               	movwf	??_NEMS_get_program
 14083  0EC3  0838               	movf	??_NEMS_get_program,w
 14084  0EC4  00AF               	movwf	__sprintf_u8b@val
 14085  0EC5  3039               	movlw	(low (NEMS_get_program@aux| 0))& (0+255)
 14086  0EC6  318B  23CA  318E   	fcall	__sprintf_u8b
 14087                           
 14088                           ;NEMS.c: 416:     _puts("Phase duration (us/50): ");
 14089  0EC9  3059               	movlw	low (STR_29| (0+32768))
 14090  0ECA  00A2               	movwf	__puts@pt
 14091  0ECB  3090               	movlw	high (STR_29| (0+32768))
 14092  0ECC  00A3               	movwf	__puts@pt+1
 14093  0ECD  3189  2132  318E   	fcall	__puts
 14094                           
 14095                           ;NEMS.c: 417:     _puts(aux);
 14096  0ED0  3039               	movlw	low NEMS_get_program@aux
 14097  0ED1  00A2               	movwf	__puts@pt
 14098  0ED2  3000               	movlw	high NEMS_get_program@aux
 14099  0ED3  00A3               	movwf	__puts@pt+1
 14100  0ED4  3189  2132  318E   	fcall	__puts
 14101                           
 14102                           ;NEMS.c: 418:     _puts("\n");
 14103  0ED7  303B               	movlw	low ((STR_62+26)| (0+32768))
 14104  0ED8  00A2               	movwf	__puts@pt
 14105  0ED9  3090               	movlw	high ((STR_62+26)| (0+32768))
 14106  0EDA  00A3               	movwf	__puts@pt+1
 14107  0EDB  3189  2132  318E   	fcall	__puts
 14108                           
 14109                           ;NEMS.c: 420:      _sprintf_u8b(aux,program.symmetry_factor);
 14110  0EDE  085B               	movf	_program+4,w	;volatile
 14111  0EDF  00B8               	movwf	??_NEMS_get_program
 14112  0EE0  0838               	movf	??_NEMS_get_program,w
 14113  0EE1  00AF               	movwf	__sprintf_u8b@val
 14114  0EE2  3039               	movlw	(low (NEMS_get_program@aux| 0))& (0+255)
 14115  0EE3  318B  23CA  318E   	fcall	__sprintf_u8b
 14116                           
 14117                           ;NEMS.c: 421:     _puts("Symmetry factor: ");
 14118  0EE6  3039               	movlw	low (STR_31| (0+32768))
 14119  0EE7  00A2               	movwf	__puts@pt
 14120  0EE8  3098               	movlw	high (STR_31| (0+32768))
 14121  0EE9  00A3               	movwf	__puts@pt+1
 14122  0EEA  3189  2132  318E   	fcall	__puts
 14123                           
 14124                           ;NEMS.c: 422:     _puts(aux);
 14125  0EED  3039               	movlw	low NEMS_get_program@aux
 14126  0EEE  00A2               	movwf	__puts@pt
 14127  0EEF  3000               	movlw	high NEMS_get_program@aux
 14128  0EF0  00A3               	movwf	__puts@pt+1
 14129  0EF1  3189  2132  318E   	fcall	__puts
 14130                           
 14131                           ;NEMS.c: 423:     _puts("\n");
 14132  0EF4  303B               	movlw	low ((STR_62+26)| (0+32768))
 14133  0EF5  00A2               	movwf	__puts@pt
 14134  0EF6  3090               	movlw	high ((STR_62+26)| (0+32768))
 14135  0EF7  00A3               	movwf	__puts@pt+1
 14136  0EF8  3189  2132  318E   	fcall	__puts
 14137                           
 14138                           ;NEMS.c: 425:     _sprintf_u8b(aux,program.ON_time);
 14139  0EFB  085C               	movf	_program+5,w	;volatile
 14140  0EFC  00B8               	movwf	??_NEMS_get_program
 14141  0EFD  0838               	movf	??_NEMS_get_program,w
 14142  0EFE  00AF               	movwf	__sprintf_u8b@val
 14143  0EFF  3039               	movlw	(low (NEMS_get_program@aux| 0))& (0+255)
 14144  0F00  318B  23CA  318E   	fcall	__sprintf_u8b
 14145                           
 14146                           ;NEMS.c: 426:     _puts("ON time (s) : ");
 14147  0F03  307B               	movlw	low (STR_33| (0+32768))
 14148  0F04  00A2               	movwf	__puts@pt
 14149  0F05  3098               	movlw	high (STR_33| (0+32768))
 14150  0F06  00A3               	movwf	__puts@pt+1
 14151  0F07  3189  2132  318E   	fcall	__puts
 14152                           
 14153                           ;NEMS.c: 427:     _puts(aux);
 14154  0F0A  3039               	movlw	low NEMS_get_program@aux
 14155  0F0B  00A2               	movwf	__puts@pt
 14156  0F0C  3000               	movlw	high NEMS_get_program@aux
 14157  0F0D  00A3               	movwf	__puts@pt+1
 14158  0F0E  3189  2132  318E   	fcall	__puts
 14159                           
 14160                           ;NEMS.c: 428:     _puts("\n");
 14161  0F11  303B               	movlw	low ((STR_62+26)| (0+32768))
 14162  0F12  00A2               	movwf	__puts@pt
 14163  0F13  3090               	movlw	high ((STR_62+26)| (0+32768))
 14164  0F14  00A3               	movwf	__puts@pt+1
 14165  0F15  3189  2132  318E   	fcall	__puts
 14166                           
 14167                           ;NEMS.c: 430:     _sprintf_u8b(aux,program.OFF_time);
 14168  0F18  085D               	movf	_program+6,w	;volatile
 14169  0F19  00B8               	movwf	??_NEMS_get_program
 14170  0F1A  0838               	movf	??_NEMS_get_program,w
 14171  0F1B  00AF               	movwf	__sprintf_u8b@val
 14172  0F1C  3039               	movlw	(low (NEMS_get_program@aux| 0))& (0+255)
 14173  0F1D  318B  23CA  318E   	fcall	__sprintf_u8b
 14174                           
 14175                           ;NEMS.c: 431:     _puts("OFF time (s) : ");
 14176  0F20  305C               	movlw	low (STR_35| (0+32768))
 14177  0F21  00A2               	movwf	__puts@pt
 14178  0F22  3098               	movlw	high (STR_35| (0+32768))
 14179  0F23  00A3               	movwf	__puts@pt+1
 14180  0F24  3189  2132  318E   	fcall	__puts
 14181                           
 14182                           ;NEMS.c: 432:     _puts(aux);
 14183  0F27  3039               	movlw	low NEMS_get_program@aux
 14184  0F28  00A2               	movwf	__puts@pt
 14185  0F29  3000               	movlw	high NEMS_get_program@aux
 14186  0F2A  00A3               	movwf	__puts@pt+1
 14187  0F2B  3189  2132  318E   	fcall	__puts
 14188                           
 14189                           ;NEMS.c: 433:     _puts("\n");
 14190  0F2E  303B               	movlw	low ((STR_62+26)| (0+32768))
 14191  0F2F  00A2               	movwf	__puts@pt
 14192  0F30  3090               	movlw	high ((STR_62+26)| (0+32768))
 14193  0F31  00A3               	movwf	__puts@pt+1
 14194  0F32  3189  2132  318E   	fcall	__puts
 14195                           
 14196                           ;NEMS.c: 435:     _sprintf_u8b(aux,program.ramp_up);
 14197  0F35  085F               	movf	_program+8,w	;volatile
 14198  0F36  00B8               	movwf	??_NEMS_get_program
 14199  0F37  0838               	movf	??_NEMS_get_program,w
 14200  0F38  00AF               	movwf	__sprintf_u8b@val
 14201  0F39  3039               	movlw	(low (NEMS_get_program@aux| 0))& (0+255)
 14202  0F3A  318B  23CA  318E   	fcall	__sprintf_u8b
 14203                           
 14204                           ;NEMS.c: 436:     _puts("Ramp up time (ds) : ");
 14205  0F3D  3000               	movlw	low (STR_37| (0+32768))
 14206  0F3E  00A2               	movwf	__puts@pt
 14207  0F3F  3098               	movlw	high (STR_37| (0+32768))
 14208  0F40  00A3               	movwf	__puts@pt+1
 14209  0F41  3189  2132  318E   	fcall	__puts
 14210                           
 14211                           ;NEMS.c: 437:     _puts(aux);
 14212  0F44  3039               	movlw	low NEMS_get_program@aux
 14213  0F45  00A2               	movwf	__puts@pt
 14214  0F46  3000               	movlw	high NEMS_get_program@aux
 14215  0F47  00A3               	movwf	__puts@pt+1
 14216  0F48  3189  2132  318E   	fcall	__puts
 14217                           
 14218                           ;NEMS.c: 438:     _puts("\n");
 14219  0F4B  303B               	movlw	low ((STR_62+26)| (0+32768))
 14220  0F4C  00A2               	movwf	__puts@pt
 14221  0F4D  3090               	movlw	high ((STR_62+26)| (0+32768))
 14222  0F4E  00A3               	movwf	__puts@pt+1
 14223  0F4F  3189  2132  318E   	fcall	__puts
 14224                           
 14225                           ;NEMS.c: 440:     _sprintf_u8b(aux,program.ramp_down);
 14226  0F52  0860               	movf	_program+9,w	;volatile
 14227  0F53  00B8               	movwf	??_NEMS_get_program
 14228  0F54  0838               	movf	??_NEMS_get_program,w
 14229  0F55  00AF               	movwf	__sprintf_u8b@val
 14230  0F56  3039               	movlw	(low (NEMS_get_program@aux| 0))& (0+255)
 14231  0F57  318B  23CA  318E   	fcall	__sprintf_u8b
 14232                           
 14233                           ;NEMS.c: 441:     _puts("Ramp down time (ds) : ");
 14234  0F5A  308B               	movlw	low (STR_39| (0+32768))
 14235  0F5B  00A2               	movwf	__puts@pt
 14236  0F5C  3090               	movlw	high (STR_39| (0+32768))
 14237  0F5D  00A3               	movwf	__puts@pt+1
 14238  0F5E  3189  2132  318E   	fcall	__puts
 14239                           
 14240                           ;NEMS.c: 442:     _puts(aux);
 14241  0F61  3039               	movlw	low NEMS_get_program@aux
 14242  0F62  00A2               	movwf	__puts@pt
 14243  0F63  3000               	movlw	high NEMS_get_program@aux
 14244  0F64  00A3               	movwf	__puts@pt+1
 14245  0F65  3189  2132  318E   	fcall	__puts
 14246                           
 14247                           ;NEMS.c: 443:     _puts("\n");
 14248  0F68  303B               	movlw	low ((STR_62+26)| (0+32768))
 14249  0F69  00A2               	movwf	__puts@pt
 14250  0F6A  3090               	movlw	high ((STR_62+26)| (0+32768))
 14251  0F6B  00A3               	movwf	__puts@pt+1
 14252  0F6C  3189  2132  318E   	fcall	__puts
 14253                           
 14254                           ;NEMS.c: 445:     _sprintf_u8b(aux,program.contractions);
 14255  0F6F  085E               	movf	_program+7,w	;volatile
 14256  0F70  00B8               	movwf	??_NEMS_get_program
 14257  0F71  0838               	movf	??_NEMS_get_program,w
 14258  0F72  00AF               	movwf	__sprintf_u8b@val
 14259  0F73  3039               	movlw	(low (NEMS_get_program@aux| 0))& (0+255)
 14260  0F74  318B  23CA  318E   	fcall	__sprintf_u8b
 14261                           
 14262                           ;NEMS.c: 446:     _puts("Number of contractions: ");
 14263  0F77  3072               	movlw	low (STR_41| (0+32768))
 14264  0F78  00A2               	movwf	__puts@pt
 14265  0F79  3090               	movlw	high (STR_41| (0+32768))
 14266  0F7A  00A3               	movwf	__puts@pt+1
 14267  0F7B  3189  2132  318E   	fcall	__puts
 14268                           
 14269                           ;NEMS.c: 447:     _puts(aux);
 14270  0F7E  3039               	movlw	low NEMS_get_program@aux
 14271  0F7F  00A2               	movwf	__puts@pt
 14272  0F80  3000               	movlw	high NEMS_get_program@aux
 14273  0F81  00A3               	movwf	__puts@pt+1
 14274  0F82  3189  2132  318E   	fcall	__puts
 14275                           
 14276                           ;NEMS.c: 448:     _puts("\n");
 14277  0F85  303B               	movlw	low ((STR_62+26)| (0+32768))
 14278  0F86  00A2               	movwf	__puts@pt
 14279  0F87  3090               	movlw	high ((STR_62+26)| (0+32768))
 14280  0F88  00A3               	movwf	__puts@pt+1
 14281  0F89  3189  2132  318E   	fcall	__puts
 14282                           
 14283                           ;NEMS.c: 450:     _sprintf_u8b(aux,program.channel1);
 14284  0F8C  0861               	movf	_program+10,w	;volatile
 14285  0F8D  00B8               	movwf	??_NEMS_get_program
 14286  0F8E  0838               	movf	??_NEMS_get_program,w
 14287  0F8F  00AF               	movwf	__sprintf_u8b@val
 14288  0F90  3039               	movlw	(low (NEMS_get_program@aux| 0))& (0+255)
 14289  0F91  318B  23CA  318E   	fcall	__sprintf_u8b
 14290                           
 14291                           ;NEMS.c: 451:     _puts("Channel 1: ");
 14292  0F94  308A               	movlw	low (STR_43| (0+32768))
 14293  0F95  00A2               	movwf	__puts@pt
 14294  0F96  3098               	movlw	high (STR_43| (0+32768))
 14295  0F97  00A3               	movwf	__puts@pt+1
 14296  0F98  3189  2132  318E   	fcall	__puts
 14297                           
 14298                           ;NEMS.c: 452:     _puts(aux);
 14299  0F9B  3039               	movlw	low NEMS_get_program@aux
 14300  0F9C  00A2               	movwf	__puts@pt
 14301  0F9D  3000               	movlw	high NEMS_get_program@aux
 14302  0F9E  00A3               	movwf	__puts@pt+1
 14303  0F9F  3189  2132  318E   	fcall	__puts
 14304                           
 14305                           ;NEMS.c: 453:     _puts("\n");
 14306  0FA2  303B               	movlw	low ((STR_62+26)| (0+32768))
 14307  0FA3  00A2               	movwf	__puts@pt
 14308  0FA4  3090               	movlw	high ((STR_62+26)| (0+32768))
 14309  0FA5  00A3               	movwf	__puts@pt+1
 14310  0FA6  3189  2132  318E   	fcall	__puts
 14311                           
 14312                           ;NEMS.c: 455:     _sprintf_u8b(aux,program.channel2);
 14313  0FA9  0862               	movf	_program+11,w	;volatile
 14314  0FAA  00B8               	movwf	??_NEMS_get_program
 14315  0FAB  0838               	movf	??_NEMS_get_program,w
 14316  0FAC  00AF               	movwf	__sprintf_u8b@val
 14317  0FAD  3039               	movlw	(low (NEMS_get_program@aux| 0))& (0+255)
 14318  0FAE  318B  23CA  318E   	fcall	__sprintf_u8b
 14319                           
 14320                           ;NEMS.c: 456:     _puts("Channel 2: ");
 14321  0FB1  3096               	movlw	low (STR_45| (0+32768))
 14322  0FB2  00A2               	movwf	__puts@pt
 14323  0FB3  3098               	movlw	high (STR_45| (0+32768))
 14324  0FB4  00A3               	movwf	__puts@pt+1
 14325  0FB5  3189  2132  318E   	fcall	__puts
 14326                           
 14327                           ;NEMS.c: 457:     _puts(aux);
 14328  0FB8  3039               	movlw	low NEMS_get_program@aux
 14329  0FB9  00A2               	movwf	__puts@pt
 14330  0FBA  3000               	movlw	high NEMS_get_program@aux
 14331  0FBB  00A3               	movwf	__puts@pt+1
 14332  0FBC  3189  2132  318E   	fcall	__puts
 14333                           
 14334                           ;NEMS.c: 458:     _puts("\n");
 14335  0FBF  303B               	movlw	low ((STR_62+26)| (0+32768))
 14336  0FC0  00A2               	movwf	__puts@pt
 14337  0FC1  3090               	movlw	high ((STR_62+26)| (0+32768))
 14338  0FC2  00A3               	movwf	__puts@pt+1
 14339  0FC3  3189  2132  318E   	fcall	__puts
 14340                           
 14341                           ;NEMS.c: 460:     _sprintf_u8b(aux,program.channel3);
 14342  0FC6  0863               	movf	_program+12,w	;volatile
 14343  0FC7  00B8               	movwf	??_NEMS_get_program
 14344  0FC8  0838               	movf	??_NEMS_get_program,w
 14345  0FC9  00AF               	movwf	__sprintf_u8b@val
 14346  0FCA  3039               	movlw	(low (NEMS_get_program@aux| 0))& (0+255)
 14347  0FCB  318B  23CA  318E   	fcall	__sprintf_u8b
 14348                           
 14349                           ;NEMS.c: 461:     _puts("Channel 3: ");
 14350  0FCE  30A2               	movlw	low (STR_47| (0+32768))
 14351  0FCF  00A2               	movwf	__puts@pt
 14352  0FD0  3098               	movlw	high (STR_47| (0+32768))
 14353  0FD1  00A3               	movwf	__puts@pt+1
 14354  0FD2  3189  2132  318E   	fcall	__puts
 14355                           
 14356                           ;NEMS.c: 462:     _puts(aux);
 14357  0FD5  3039               	movlw	low NEMS_get_program@aux
 14358  0FD6  00A2               	movwf	__puts@pt
 14359  0FD7  3000               	movlw	high NEMS_get_program@aux
 14360  0FD8  00A3               	movwf	__puts@pt+1
 14361  0FD9  3189  2132  318E   	fcall	__puts
 14362                           
 14363                           ;NEMS.c: 463:     _puts("\n");
 14364  0FDC  303B               	movlw	low ((STR_62+26)| (0+32768))
 14365  0FDD  00A2               	movwf	__puts@pt
 14366  0FDE  3090               	movlw	high ((STR_62+26)| (0+32768))
 14367  0FDF  00A3               	movwf	__puts@pt+1
 14368  0FE0  3189  2132  318E   	fcall	__puts
 14369                           
 14370                           ;NEMS.c: 465:     _sprintf_u8b(aux,program.channel4);
 14371  0FE3  0864               	movf	_program+13,w	;volatile
 14372  0FE4  00B8               	movwf	??_NEMS_get_program
 14373  0FE5  0838               	movf	??_NEMS_get_program,w
 14374  0FE6  00AF               	movwf	__sprintf_u8b@val
 14375  0FE7  3039               	movlw	(low (NEMS_get_program@aux| 0))& (0+255)
 14376  0FE8  318B  23CA  318E   	fcall	__sprintf_u8b
 14377                           
 14378                           ;NEMS.c: 466:     _puts("Channel 4: ");
 14379  0FEB  30AE               	movlw	low (STR_49| (0+32768))
 14380  0FEC  00A2               	movwf	__puts@pt
 14381  0FED  3098               	movlw	high (STR_49| (0+32768))
 14382  0FEE  00A3               	movwf	__puts@pt+1
 14383  0FEF  3189  2132  318E   	fcall	__puts
 14384                           
 14385                           ;NEMS.c: 467:     _puts(aux);
 14386  0FF2  3039               	movlw	low NEMS_get_program@aux
 14387  0FF3  00A2               	movwf	__puts@pt
 14388  0FF4  3000               	movlw	high NEMS_get_program@aux
 14389  0FF5  00A3               	movwf	__puts@pt+1
 14390  0FF6  3189  2132  318E   	fcall	__puts
 14391                           
 14392                           ;NEMS.c: 468:     _puts("\n");
 14393  0FF9  303B               	movlw	low ((STR_62+26)| (0+32768))
 14394  0FFA  00A2               	movwf	__puts@pt
 14395  0FFB  3090               	movlw	high ((STR_62+26)| (0+32768))
 14396  0FFC  00A3               	movwf	__puts@pt+1
 14397  0FFD  3189  2132         	fcall	__puts
 14398  0FFF  0008               	return
 14399  1000                     __end_of_NEMS_get_program:
 14400                           
 14401                           	psect	text49
 14402  0BCA                     __ptext49:	
 14403 ;; *************** function __sprintf_u8b *****************
 14404 ;; Defined at:
 14405 ;;		line 52 in file "comm.c"
 14406 ;; Parameters:    Size  Location     Type
 14407 ;;  mess            1    wreg     PTR unsigned char 
 14408 ;;		 -> NEMS_get_program@aux(4), 
 14409 ;;  val             1   15[BANK0 ] unsigned char 
 14410 ;; Auto vars:     Size  Location     Type
 14411 ;;  mess            1   23[BANK0 ] PTR unsigned char 
 14412 ;;		 -> NEMS_get_program@aux(4), 
 14413 ;;  buf             3   20[BANK0 ] unsigned char [3]
 14414 ;;  aux             1   19[BANK0 ] unsigned char 
 14415 ;; Return value:  Size  Location     Type
 14416 ;;                  1    wreg      void 
 14417 ;; Registers used:
 14418 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14419 ;; Tracked objects:
 14420 ;;		On entry : 3F/0
 14421 ;;		On exit  : 3F/0
 14422 ;;		Unchanged: 0/0
 14423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14424 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14425 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14426 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14427 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14428 ;;Total ram usage:        9 bytes
 14429 ;; Hardware stack levels used:    1
 14430 ;; Hardware stack levels required when called:    5
 14431 ;; This function calls:
 14432 ;;		___awdiv
 14433 ;;		___lbmod
 14434 ;; This function is called by:
 14435 ;;		_NEMS_get_program
 14436 ;; This function uses a non-reentrant model
 14437 ;;
 14438                           
 14439                           
 14440                           ;psect for function __sprintf_u8b
 14441  0BCA                     __sprintf_u8b:
 14442                           
 14443                           ;incstack = 0
 14444                           ; Regs used in __sprintf_u8b: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14445                           ;__sprintf_u8b@mess stored from wreg
 14446  0BCA  00B7               	movwf	__sprintf_u8b@mess
 14447                           
 14448                           ;comm.c: 52: void _sprintf_u8b(char* mess, unsigned char val);comm.c: 53: {;comm.c: 55: 
      +                              unsigned char aux;;comm.c: 56:     unsigned char buf[3];;comm.c: 58:     aux = val%1
      +                          0;
 14449  0BCB  300A               	movlw	10
 14450  0BCC  00B0               	movwf	??__sprintf_u8b
 14451  0BCD  0830               	movf	??__sprintf_u8b,w
 14452  0BCE  00A0               	movwf	___lbmod@divisor
 14453  0BCF  082F               	movf	__sprintf_u8b@val,w
 14454  0BD0  3188  20A8  318B   	fcall	___lbmod
 14455  0BD3  00B1               	movwf	??__sprintf_u8b+1
 14456  0BD4  0831               	movf	??__sprintf_u8b+1,w
 14457  0BD5  00B3               	movwf	__sprintf_u8b@aux
 14458                           
 14459                           ;comm.c: 59:     val /=10;
 14460  0BD6  300A               	movlw	10
 14461  0BD7  00A6               	movwf	___awdiv@divisor
 14462  0BD8  3000               	movlw	0
 14463  0BD9  00A7               	movwf	___awdiv@divisor+1
 14464  0BDA  082F               	movf	__sprintf_u8b@val,w
 14465  0BDB  00B0               	movwf	??__sprintf_u8b
 14466  0BDC  01B1               	clrf	??__sprintf_u8b+1
 14467  0BDD  0830               	movf	??__sprintf_u8b,w
 14468  0BDE  00A8               	movwf	___awdiv@dividend
 14469  0BDF  0831               	movf	??__sprintf_u8b+1,w
 14470  0BE0  00A9               	movwf	___awdiv@dividend+1
 14471  0BE1  318B  2328  318B   	fcall	___awdiv
 14472  0BE4  0826               	movf	?___awdiv,w
 14473  0BE5  00B2               	movwf	??__sprintf_u8b+2
 14474  0BE6  0832               	movf	??__sprintf_u8b+2,w
 14475  0BE7  00AF               	movwf	__sprintf_u8b@val
 14476                           
 14477                           ;comm.c: 61:     buf[2] = aux;
 14478  0BE8  0833               	movf	__sprintf_u8b@aux,w
 14479  0BE9  00B0               	movwf	??__sprintf_u8b
 14480  0BEA  0830               	movf	??__sprintf_u8b,w
 14481  0BEB  00B6               	movwf	__sprintf_u8b@buf+2
 14482                           
 14483                           ;comm.c: 63:     aux = val%10;
 14484  0BEC  300A               	movlw	10
 14485  0BED  00B0               	movwf	??__sprintf_u8b
 14486  0BEE  0830               	movf	??__sprintf_u8b,w
 14487  0BEF  00A0               	movwf	___lbmod@divisor
 14488  0BF0  082F               	movf	__sprintf_u8b@val,w
 14489  0BF1  3188  20A8  318B   	fcall	___lbmod
 14490  0BF4  00B1               	movwf	??__sprintf_u8b+1
 14491  0BF5  0831               	movf	??__sprintf_u8b+1,w
 14492  0BF6  00B3               	movwf	__sprintf_u8b@aux
 14493                           
 14494                           ;comm.c: 64:     val /=10;
 14495  0BF7  300A               	movlw	10
 14496  0BF8  00A6               	movwf	___awdiv@divisor
 14497  0BF9  3000               	movlw	0
 14498  0BFA  00A7               	movwf	___awdiv@divisor+1
 14499  0BFB  082F               	movf	__sprintf_u8b@val,w
 14500  0BFC  00B0               	movwf	??__sprintf_u8b
 14501  0BFD  01B1               	clrf	??__sprintf_u8b+1
 14502  0BFE  0830               	movf	??__sprintf_u8b,w
 14503  0BFF  00A8               	movwf	___awdiv@dividend
 14504  0C00  0831               	movf	??__sprintf_u8b+1,w
 14505  0C01  00A9               	movwf	___awdiv@dividend+1
 14506  0C02  318B  2328  318B   	fcall	___awdiv
 14507  0C05  0826               	movf	?___awdiv,w
 14508  0C06  00B2               	movwf	??__sprintf_u8b+2
 14509  0C07  0832               	movf	??__sprintf_u8b+2,w
 14510  0C08  00AF               	movwf	__sprintf_u8b@val
 14511                           
 14512                           ;comm.c: 66:     buf[1] = aux;
 14513  0C09  0833               	movf	__sprintf_u8b@aux,w
 14514  0C0A  00B0               	movwf	??__sprintf_u8b
 14515  0C0B  0830               	movf	??__sprintf_u8b,w
 14516  0C0C  00B5               	movwf	__sprintf_u8b@buf+1
 14517                           
 14518                           ;comm.c: 67:     buf[0] = val;
 14519  0C0D  082F               	movf	__sprintf_u8b@val,w
 14520  0C0E  00B0               	movwf	??__sprintf_u8b
 14521  0C0F  0830               	movf	??__sprintf_u8b,w
 14522  0C10  00B4               	movwf	__sprintf_u8b@buf
 14523                           
 14524                           ;comm.c: 69:     if (buf[0] != 0) {
 14525  0C11  0834               	movf	__sprintf_u8b@buf,w
 14526  0C12  1903               	btfsc	3,2
 14527  0C13  2C33               	goto	l4627
 14528                           
 14529                           ;comm.c: 70:         mess[0] = buf[0] + '0';
 14530  0C14  0834               	movf	__sprintf_u8b@buf,w
 14531  0C15  3E30               	addlw	48
 14532  0C16  00B0               	movwf	??__sprintf_u8b
 14533  0C17  0837               	movf	__sprintf_u8b@mess,w
 14534  0C18  0086               	movwf	6
 14535  0C19  0187               	clrf	7
 14536  0C1A  0830               	movf	??__sprintf_u8b,w
 14537  0C1B  0081               	movwf	1
 14538                           
 14539                           ;comm.c: 71:         mess[1] = buf[1] + '0';
 14540  0C1C  0835               	movf	__sprintf_u8b@buf+1,w
 14541  0C1D  3E30               	addlw	48
 14542  0C1E  00B0               	movwf	??__sprintf_u8b
 14543  0C1F  0A37               	incf	__sprintf_u8b@mess,w
 14544  0C20  0086               	movwf	6
 14545  0C21  0187               	clrf	7
 14546  0C22  0830               	movf	??__sprintf_u8b,w
 14547  0C23  0081               	movwf	1
 14548                           
 14549                           ;comm.c: 72:         mess[2] = buf[2] + '0';
 14550  0C24  0836               	movf	__sprintf_u8b@buf+2,w
 14551  0C25  3E30               	addlw	48
 14552  0C26  00B0               	movwf	??__sprintf_u8b
 14553  0C27  0837               	movf	__sprintf_u8b@mess,w
 14554  0C28  3E02               	addlw	2
 14555  0C29  0086               	movwf	6
 14556  0C2A  0187               	clrf	7
 14557  0C2B  0830               	movf	??__sprintf_u8b,w
 14558  0C2C  0081               	movwf	1
 14559                           
 14560                           ;comm.c: 73:         mess[3] = 0x00;
 14561  0C2D  0837               	movf	__sprintf_u8b@mess,w
 14562  0C2E  3E03               	addlw	3
 14563  0C2F  0086               	movwf	6
 14564  0C30  0187               	clrf	7
 14565  0C31  0181               	clrf	1
 14566  0C32  0008               	return
 14567  0C33                     l4627:
 14568  0C33  0835               	movf	__sprintf_u8b@buf+1,w
 14569  0C34  1903               	btfsc	3,2
 14570  0C35  2C4C               	goto	l4635
 14571                           
 14572                           ;comm.c: 77:         mess[0] = buf[1] + '0';
 14573  0C36  0835               	movf	__sprintf_u8b@buf+1,w
 14574  0C37  3E30               	addlw	48
 14575  0C38  00B0               	movwf	??__sprintf_u8b
 14576  0C39  0837               	movf	__sprintf_u8b@mess,w
 14577  0C3A  0086               	movwf	6
 14578  0C3B  0187               	clrf	7
 14579  0C3C  0830               	movf	??__sprintf_u8b,w
 14580  0C3D  0081               	movwf	1
 14581                           
 14582                           ;comm.c: 78:         mess[1] = buf[2] + '0';
 14583  0C3E  0836               	movf	__sprintf_u8b@buf+2,w
 14584  0C3F  3E30               	addlw	48
 14585  0C40  00B0               	movwf	??__sprintf_u8b
 14586  0C41  0A37               	incf	__sprintf_u8b@mess,w
 14587  0C42  0086               	movwf	6
 14588  0C43  0187               	clrf	7
 14589  0C44  0830               	movf	??__sprintf_u8b,w
 14590  0C45  0081               	movwf	1
 14591                           
 14592                           ;comm.c: 79:         mess[2] = 0x00;
 14593  0C46  0837               	movf	__sprintf_u8b@mess,w
 14594  0C47  3E02               	addlw	2
 14595  0C48  0086               	movwf	6
 14596  0C49  0187               	clrf	7
 14597  0C4A  0181               	clrf	1
 14598  0C4B  0008               	return
 14599  0C4C                     l4635:
 14600                           
 14601                           ;comm.c: 83:         mess[0] = buf[2] + '0';
 14602  0C4C  0836               	movf	__sprintf_u8b@buf+2,w
 14603  0C4D  3E30               	addlw	48
 14604  0C4E  00B0               	movwf	??__sprintf_u8b
 14605  0C4F  0837               	movf	__sprintf_u8b@mess,w
 14606  0C50  0086               	movwf	6
 14607  0C51  0187               	clrf	7
 14608  0C52  0830               	movf	??__sprintf_u8b,w
 14609  0C53  0081               	movwf	1
 14610                           
 14611                           ;comm.c: 84:         mess[1] = 0x00;
 14612  0C54  0A37               	incf	__sprintf_u8b@mess,w
 14613  0C55  0086               	movwf	6
 14614  0C56  0187               	clrf	7
 14615  0C57  0181               	clrf	1
 14616  0C58  0008               	return
 14617  0C59                     __end_of__sprintf_u8b:
 14618                           
 14619                           	psect	text50
 14620  08A8                     __ptext50:	
 14621 ;; *************** function ___lbmod *****************
 14622 ;; Defined at:
 14623 ;;		line 4 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/lbmod.c"
 14624 ;; Parameters:    Size  Location     Type
 14625 ;;  dividend        1    wreg     unsigned char 
 14626 ;;  divisor         1    0[BANK0 ] unsigned char 
 14627 ;; Auto vars:     Size  Location     Type
 14628 ;;  dividend        1    3[BANK0 ] unsigned char 
 14629 ;;  rem             1    5[BANK0 ] unsigned char 
 14630 ;;  counter         1    4[BANK0 ] unsigned char 
 14631 ;; Return value:  Size  Location     Type
 14632 ;;                  1    wreg      unsigned char 
 14633 ;; Registers used:
 14634 ;;		wreg, status,2, status,0
 14635 ;; Tracked objects:
 14636 ;;		On entry : 3F/0
 14637 ;;		On exit  : 3F/0
 14638 ;;		Unchanged: 0/0
 14639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14640 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14641 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14642 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14643 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14644 ;;Total ram usage:        6 bytes
 14645 ;; Hardware stack levels used:    1
 14646 ;; Hardware stack levels required when called:    4
 14647 ;; This function calls:
 14648 ;;		Nothing
 14649 ;; This function is called by:
 14650 ;;		__sprintf_u8b
 14651 ;; This function uses a non-reentrant model
 14652 ;;
 14653                           
 14654                           
 14655                           ;psect for function ___lbmod
 14656  08A8                     ___lbmod:
 14657                           
 14658                           ;incstack = 0
 14659                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
 14660                           ;___lbmod@dividend stored from wreg
 14661  08A8  00A3               	movwf	___lbmod@dividend
 14662  08A9  3008               	movlw	8
 14663  08AA  00A1               	movwf	??___lbmod
 14664  08AB  0821               	movf	??___lbmod,w
 14665  08AC  00A4               	movwf	___lbmod@counter
 14666  08AD  01A5               	clrf	___lbmod@rem
 14667  08AE                     l4517:
 14668  08AE  0823               	movf	___lbmod@dividend,w
 14669  08AF  00A1               	movwf	??___lbmod
 14670  08B0  3007               	movlw	7
 14671  08B1                     u2585:
 14672  08B1  36A1               	lsrf	??___lbmod,f
 14673  08B2  0B89               	decfsz	9,f
 14674  08B3  28B1               	goto	u2585
 14675  08B4  3525               	lslf	___lbmod@rem,w
 14676  08B5  0421               	iorwf	??___lbmod,w
 14677  08B6  00A2               	movwf	??___lbmod+1
 14678  08B7  0822               	movf	??___lbmod+1,w
 14679  08B8  00A5               	movwf	___lbmod@rem
 14680  08B9  1003               	clrc
 14681  08BA  0DA3               	rlf	___lbmod@dividend,f
 14682  08BB  0820               	movf	___lbmod@divisor,w
 14683  08BC  0225               	subwf	___lbmod@rem,w
 14684  08BD  1C03               	skipc
 14685  08BE  28C1               	goto	l1403
 14686  08BF  0820               	movf	___lbmod@divisor,w
 14687  08C0  02A5               	subwf	___lbmod@rem,f
 14688  08C1                     l1403:
 14689  08C1  3001               	movlw	1
 14690  08C2  02A4               	subwf	___lbmod@counter,f
 14691  08C3  1D03               	btfss	3,2
 14692  08C4  28AE               	goto	l4517
 14693  08C5  0825               	movf	___lbmod@rem,w
 14694  08C6  0008               	return
 14695  08C7                     __end_of___lbmod:
 14696                           
 14697                           	psect	text51
 14698  0B79                     __ptext51:	
 14699 ;; *************** function _NEMS_binary_command *****************
 14700 ;; Defined at:
 14701 ;;		line 234 in file "NEMS.c"
 14702 ;; Parameters:    Size  Location     Type
 14703 ;;		None
 14704 ;; Auto vars:     Size  Location     Type
 14705 ;;  super_electr    1   41[BANK0 ] unsigned char 
 14706 ;;  go_stop         1   40[BANK0 ] unsigned char 
 14707 ;;  chan2           1   39[BANK0 ] unsigned char 
 14708 ;;  chan1           1   38[BANK0 ] unsigned char 
 14709 ;;  amp             1   37[BANK0 ] unsigned char 
 14710 ;; Return value:  Size  Location     Type
 14711 ;;                  1    wreg      void 
 14712 ;; Registers used:
 14713 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14714 ;; Tracked objects:
 14715 ;;		On entry : 31/0
 14716 ;;		On exit  : 0/0
 14717 ;;		Unchanged: 0/0
 14718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14720 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14721 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14722 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14723 ;;Total ram usage:        6 bytes
 14724 ;; Hardware stack levels used:    1
 14725 ;; Hardware stack levels required when called:    8
 14726 ;; This function calls:
 14727 ;;		_EUSART1_Read
 14728 ;;		_NEMS_start_program_nack
 14729 ;;		_NEMS_stop_program_nack
 14730 ;;		_TMR0_SetInterruptHandler
 14731 ;; This function is called by:
 14732 ;;		_NEMS_message_handler
 14733 ;; This function uses a non-reentrant model
 14734 ;;
 14735                           
 14736                           
 14737                           ;psect for function _NEMS_binary_command
 14738  0B79                     _NEMS_binary_command:
 14739                           
 14740                           ;NEMS.c: 236:     unsigned char amp,chan1,chan2,go_stop,super_electrode;;NEMS.c: 238:   
      +                            NEMS_stop_program_nack();
 14741                           
 14742                           ;incstack = 0
 14743                           ; Regs used in _NEMS_binary_command: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14744  0B79  3196  260B  318B   	fcall	_NEMS_stop_program_nack
 14745                           
 14746                           ;NEMS.c: 240:     _delay((unsigned long)((10)*(32000000/4000.0)));
 14747  0B7C  3068               	movlw	104
 14748  0B7D  0140               	movlb	0	; select bank0
 14749  0B7E  00C4               	movwf	??_NEMS_binary_command
 14750  0B7F  30E4               	movlw	228
 14751  0B80                     u3027:
 14752  0B80  0B89               	decfsz	9,f
 14753  0B81  2B80               	goto	u3027
 14754  0B82  0BC4               	decfsz	??_NEMS_binary_command,f
 14755  0B83  2B80               	goto	u3027
 14756  0B84  0000               	nop
 14757                           
 14758                           ;NEMS.c: 242:     if (eusart1RxCount == 5) {
 14759  0B85  3005               	movlw	5
 14760  0B86  0671               	xorwf	_eusart1RxCount,w	;volatile
 14761  0B87  1D03               	btfss	3,2
 14762  0B88  0008               	return
 14763                           
 14764                           ;NEMS.c: 244:         amp = EUSART1_Read();
 14765  0B89  3189  210C  318B   	fcall	_EUSART1_Read
 14766  0B8C  00C4               	movwf	??_NEMS_binary_command
 14767  0B8D  0844               	movf	??_NEMS_binary_command,w
 14768  0B8E  00C5               	movwf	NEMS_binary_command@amp
 14769                           
 14770                           ;NEMS.c: 245:         chan1 = EUSART1_Read();
 14771  0B8F  3189  210C  318B   	fcall	_EUSART1_Read
 14772  0B92  00C4               	movwf	??_NEMS_binary_command
 14773  0B93  0844               	movf	??_NEMS_binary_command,w
 14774  0B94  00C6               	movwf	NEMS_binary_command@chan1
 14775                           
 14776                           ;NEMS.c: 246:         chan2 = EUSART1_Read();
 14777  0B95  3189  210C  318B   	fcall	_EUSART1_Read
 14778  0B98  00C4               	movwf	??_NEMS_binary_command
 14779  0B99  0844               	movf	??_NEMS_binary_command,w
 14780  0B9A  00C7               	movwf	NEMS_binary_command@chan2
 14781                           
 14782                           ;NEMS.c: 247:         go_stop = EUSART1_Read();
 14783  0B9B  3189  210C  318B   	fcall	_EUSART1_Read
 14784  0B9E  00C4               	movwf	??_NEMS_binary_command
 14785  0B9F  0844               	movf	??_NEMS_binary_command,w
 14786  0BA0  00C8               	movwf	NEMS_binary_command@go_stop
 14787                           
 14788                           ;NEMS.c: 248:         super_electrode = EUSART1_Read();
 14789  0BA1  3189  210C  318B   	fcall	_EUSART1_Read
 14790  0BA4  00C4               	movwf	??_NEMS_binary_command
 14791  0BA5  0844               	movf	??_NEMS_binary_command,w
 14792  0BA6  00C9               	movwf	NEMS_binary_command@super_electrode
 14793                           
 14794                           ;NEMS.c: 251:         program.amplitude = amp;
 14795  0BA7  0845               	movf	NEMS_binary_command@amp,w
 14796  0BA8  00C4               	movwf	??_NEMS_binary_command
 14797  0BA9  0844               	movf	??_NEMS_binary_command,w
 14798  0BAA  00D7               	movwf	_program	;volatile
 14799                           
 14800                           ;NEMS.c: 252:         program.channel1 = chan1;
 14801  0BAB  0846               	movf	NEMS_binary_command@chan1,w
 14802  0BAC  00C4               	movwf	??_NEMS_binary_command
 14803  0BAD  0844               	movf	??_NEMS_binary_command,w
 14804  0BAE  00E1               	movwf	_program+10	;volatile
 14805                           
 14806                           ;NEMS.c: 253:         program.channel2 = chan2;
 14807  0BAF  0847               	movf	NEMS_binary_command@chan2,w
 14808  0BB0  00C4               	movwf	??_NEMS_binary_command
 14809  0BB1  0844               	movf	??_NEMS_binary_command,w
 14810  0BB2  00E2               	movwf	_program+11	;volatile
 14811                           
 14812                           ;NEMS.c: 255:         if (super_electrode) {
 14813  0BB3  0849               	movf	NEMS_binary_command@super_electrode,w
 14814  0BB4  1903               	btfsc	3,2
 14815  0BB5  2BBC               	goto	l4819
 14816                           
 14817                           ;NEMS.c: 256:             NMES_se_control = 1;
 14818  0BB6  01D0               	clrf	_NMES_se_control
 14819  0BB7  0AD0               	incf	_NMES_se_control,f
 14820                           
 14821                           ;NEMS.c: 257:             TMR0_SetInterruptHandler(NEMS_timer_SE);
 14822  0BB8  30CE               	movlw	low _NEMS_timer_SE
 14823  0BB9  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 14824  0BBA  3004               	movlw	high _NEMS_timer_SE
 14825  0BBB  2BC0               	goto	L1
 14826  0BBC                     l4819:	
 14827                           ;NEMS.c: 259:         } else {
 14828                           
 14829                           
 14830                           ;NEMS.c: 260:             NMES_se_control = 0;
 14831  0BBC  01D0               	clrf	_NMES_se_control
 14832                           
 14833                           ;NEMS.c: 261:             TMR0_SetInterruptHandler(NEMS_timer);
 14834  0BBD  3072               	movlw	low _NEMS_timer
 14835  0BBE  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 14836  0BBF  3000               	movlw	high _NEMS_timer
 14837  0BC0                     L1:
 14838  0BC0  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 14839  0BC1  3195  2593  318B   	fcall	_TMR0_SetInterruptHandler
 14840                           
 14841                           ;NEMS.c: 264:         if (go_stop) {
 14842  0BC4  0848               	movf	NEMS_binary_command@go_stop,w
 14843  0BC5  1903               	btfsc	3,2
 14844  0BC6  0008               	return
 14845                           
 14846                           ;NEMS.c: 265:             NEMS_start_program_nack();
 14847  0BC7  3189  215C         	fcall	_NEMS_start_program_nack
 14848  0BC9  0008               	return
 14849  0BCA                     __end_of_NEMS_binary_command:
 14850                           
 14851                           	psect	text52
 14852  160B                     __ptext52:	
 14853 ;; *************** function _NEMS_stop_program_nack *****************
 14854 ;; Defined at:
 14855 ;;		line 1018 in file "NEMS.c"
 14856 ;; Parameters:    Size  Location     Type
 14857 ;;		None
 14858 ;; Auto vars:     Size  Location     Type
 14859 ;;		None
 14860 ;; Return value:  Size  Location     Type
 14861 ;;                  1    wreg      void 
 14862 ;; Registers used:
 14863 ;;		wreg, status,2, status,0, pclath, cstack
 14864 ;; Tracked objects:
 14865 ;;		On entry : 31/0
 14866 ;;		On exit  : 3F/0
 14867 ;;		Unchanged: 0/0
 14868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14873 ;;Total ram usage:        0 bytes
 14874 ;; Hardware stack levels used:    1
 14875 ;; Hardware stack levels required when called:    5
 14876 ;; This function calls:
 14877 ;;		_DAC1_SetOutput
 14878 ;;		_TMR0_StopTimer
 14879 ;; This function is called by:
 14880 ;;		_NEMS_binary_command
 14881 ;;		_NEMS_stop_program
 14882 ;; This function uses a non-reentrant model
 14883 ;;
 14884                           
 14885                           
 14886                           ;psect for function _NEMS_stop_program_nack
 14887  160B                     _NEMS_stop_program_nack:
 14888                           
 14889                           ;NEMS.c: 1020:     NEMS_states = NEMS_DISABLED;
 14890                           
 14891                           ;incstack = 0
 14892                           ; Regs used in _NEMS_stop_program_nack: [wreg+status,2+status,0+pclath+cstack]
 14893  160B  0140               	movlb	0	; select bank0
 14894  160C  01D5               	clrf	_NEMS_states	;volatile
 14895                           
 14896                           ;NEMS.c: 1021:     TMR0_StopTimer();
 14897  160D  3195  2579  3196   	fcall	_TMR0_StopTimer
 14898                           
 14899                           ;NEMS.c: 1023:     DAC1_SetOutput(0);
 14900  1610  3000               	movlw	0
 14901  1611  3195  25A7         	fcall	_DAC1_SetOutput
 14902                           
 14903                           ;NEMS.c: 1024:     NEMS_nmux1 = 0;
 14904  1613  01F0               	clrf	_NEMS_nmux1
 14905                           
 14906                           ;NEMS.c: 1025:     NEMS_pmux1 = 0;
 14907  1614  0140               	movlb	0	; select bank0
 14908  1615  01D2               	clrf	_NEMS_pmux1
 14909                           
 14910                           ;NEMS.c: 1026:     LATC = NEMS_nmux1;
 14911  1616  0870               	movf	_NEMS_nmux1,w
 14912  1617  009A               	movwf	26	;volatile
 14913                           
 14914                           ;NEMS.c: 1027:     LATB = NEMS_pmux1;
 14915  1618  0852               	movf	_NEMS_pmux1,w
 14916  1619  0099               	movwf	25	;volatile
 14917  161A  0008               	return
 14918  161B                     __end_of_NEMS_stop_program_nack:
 14919                           
 14920                           	psect	text53
 14921  095C                     __ptext53:	
 14922 ;; *************** function _NEMS_start_program_nack *****************
 14923 ;; Defined at:
 14924 ;;		line 983 in file "NEMS.c"
 14925 ;; Parameters:    Size  Location     Type
 14926 ;;		None
 14927 ;; Auto vars:     Size  Location     Type
 14928 ;;		None
 14929 ;; Return value:  Size  Location     Type
 14930 ;;                  1    wreg      void 
 14931 ;; Registers used:
 14932 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14933 ;; Tracked objects:
 14934 ;;		On entry : 3F/0
 14935 ;;		On exit  : 34/0
 14936 ;;		Unchanged: 0/0
 14937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14940 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14941 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14942 ;;Total ram usage:        1 bytes
 14943 ;; Hardware stack levels used:    1
 14944 ;; Hardware stack levels required when called:    7
 14945 ;; This function calls:
 14946 ;;		_NEMS_recalculate_program
 14947 ;;		_TMR0_StartTimer
 14948 ;;		__puts
 14949 ;; This function is called by:
 14950 ;;		_NEMS_binary_command
 14951 ;;		_NEMS_start_program
 14952 ;; This function uses a non-reentrant model
 14953 ;;
 14954                           
 14955                           
 14956                           ;psect for function _NEMS_start_program_nack
 14957  095C                     _NEMS_start_program_nack:
 14958                           
 14959                           ;NEMS.c: 986:     if (program.channel1 != 0 && program.channel2 != 0 ) {
 14960                           
 14961                           ;incstack = 0
 14962                           ; Regs used in _NEMS_start_program_nack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14963  095C  0861               	movf	_program+10,w	;volatile
 14964  095D  1903               	btfsc	3,2
 14965  095E  296D               	goto	l4571
 14966  095F  0862               	movf	_program+11,w	;volatile
 14967  0960  1903               	btfsc	3,2
 14968  0961  296D               	goto	l4571
 14969                           
 14970                           ;NEMS.c: 987:         if (program.channel1 == program.channel2) {
 14971  0962  0861               	movf	_program+10,w	;volatile
 14972  0963  0662               	xorwf	_program+11,w	;volatile
 14973  0964  1D03               	skipz
 14974  0965  296D               	goto	l4571
 14975                           
 14976                           ;NEMS.c: 988:             _puts("Error: channel1 = channel2\n");
 14977  0966  3021               	movlw	low (STR_62| (0+32768))
 14978  0967  00A2               	movwf	__puts@pt
 14979  0968  3090               	movlw	high (STR_62| (0+32768))
 14980  0969  00A3               	movwf	__puts@pt+1
 14981  096A  3189  2132         	fcall	__puts
 14982  096C  0008               	return
 14983  096D                     l4571:
 14984                           
 14985                           ;NEMS.c: 994:     if (program.channel3 != 0 && program.channel4 != 0 ) {
 14986  096D  0863               	movf	_program+12,w	;volatile
 14987  096E  1903               	btfsc	3,2
 14988  096F  297E               	goto	l4581
 14989  0970  0864               	movf	_program+13,w	;volatile
 14990  0971  1903               	btfsc	3,2
 14991  0972  297E               	goto	l4581
 14992                           
 14993                           ;NEMS.c: 995:         if (program.channel3 == program.channel4) {
 14994  0973  0863               	movf	_program+12,w	;volatile
 14995  0974  0664               	xorwf	_program+13,w	;volatile
 14996  0975  1D03               	skipz
 14997  0976  297E               	goto	l4581
 14998                           
 14999                           ;NEMS.c: 996:             _puts("Error: channel3 = channel4\n");
 15000  0977  303D               	movlw	low (STR_63| (0+32768))
 15001  0978  00A2               	movwf	__puts@pt
 15002  0979  3090               	movlw	high (STR_63| (0+32768))
 15003  097A  00A3               	movwf	__puts@pt+1
 15004  097B  3189  2132         	fcall	__puts
 15005  097D  0008               	return
 15006  097E                     l4581:
 15007                           
 15008                           ;NEMS.c: 1003:     NEMS_recalculate_program();
 15009  097E  3182  22FA  3189   	fcall	_NEMS_recalculate_program
 15010                           
 15011                           ;NEMS.c: 1005:     NEMS_states = NEMS_ENABLED;
 15012  0981  3001               	movlw	1
 15013  0982  00C3               	movwf	??_NEMS_start_program_nack
 15014  0983  0843               	movf	??_NEMS_start_program_nack,w
 15015  0984  00D5               	movwf	_NEMS_states	;volatile
 15016                           
 15017                           ;NEMS.c: 1006:     TMR0_StartTimer();
 15018  0985  3195  257C         	fcall	_TMR0_StartTimer
 15019  0987  0008               	return
 15020  0988                     __end_of_NEMS_start_program_nack:
 15021                           
 15022                           	psect	text54
 15023  0932                     __ptext54:	
 15024 ;; *************** function __puts *****************
 15025 ;; Defined at:
 15026 ;;		line 5 in file "comm.c"
 15027 ;; Parameters:    Size  Location     Type
 15028 ;;  pt              2    2[BANK0 ] PTR unsigned char 
 15029 ;;		 -> STR_64(6), STR_63(28), STR_62(28), STR_61(6), 
 15030 ;;		 -> STR_60(6), STR_59(6), STR_58(7), STR_57(6), 
 15031 ;;		 -> STR_56(7), STR_55(6), STR_54(7), STR_53(6), 
 15032 ;;		 -> STR_52(7), STR_51(6), STR_50(2), STR_49(12), 
 15033 ;;		 -> STR_48(2), STR_47(12), STR_46(2), STR_45(12), 
 15034 ;;		 -> STR_44(2), STR_43(12), STR_42(2), STR_41(25), 
 15035 ;;		 -> STR_40(2), STR_39(23), STR_38(2), STR_37(21), 
 15036 ;;		 -> STR_36(2), STR_35(16), STR_34(2), STR_33(15), 
 15037 ;;		 -> STR_32(2), STR_31(18), STR_30(2), STR_29(25), 
 15038 ;;		 -> STR_28(2), STR_27(17), STR_26(2), STR_25(18), 
 15039 ;;		 -> STR_24(2), STR_23(18), NEMS_get_program@aux(4), STR_22(15), 
 15040 ;;		 -> STR_21(7), STR_20(6), STR_19(7), STR_18(6), 
 15041 ;;		 -> STR_17(7), STR_16(6), STR_15(7), STR_14(6), 
 15042 ;;		 -> STR_13(7), STR_12(6), STR_11(7), STR_10(6), 
 15043 ;;		 -> STR_9(7), STR_8(6), STR_7(7), STR_6(6), 
 15044 ;;		 -> STR_5(7), STR_4(6), STR_3(7), STR_2(6), 
 15045 ;;		 -> STR_1(4), 
 15046 ;; Auto vars:     Size  Location     Type
 15047 ;;  index           1    7[BANK0 ] unsigned char 
 15048 ;; Return value:  Size  Location     Type
 15049 ;;                  1    wreg      void 
 15050 ;; Registers used:
 15051 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15052 ;; Tracked objects:
 15053 ;;		On entry : 3F/0
 15054 ;;		On exit  : 3F/0
 15055 ;;		Unchanged: 0/0
 15056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15057 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15058 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15059 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15060 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15061 ;;Total ram usage:        6 bytes
 15062 ;; Hardware stack levels used:    1
 15063 ;; Hardware stack levels required when called:    5
 15064 ;; This function calls:
 15065 ;;		_EUSART1_Write
 15066 ;;		_EUSART1_is_tx_ready
 15067 ;; This function is called by:
 15068 ;;		_NEMS_message_handler
 15069 ;;		_NEMS_set_amplitude
 15070 ;;		_NEMS_set_amplitude2
 15071 ;;		_NEMS_set_frequency
 15072 ;;		_NEMS_set_phase_duration
 15073 ;;		_NEMS_set_symmetry_factor
 15074 ;;		_NEMS_set_ON_time
 15075 ;;		_NEMS_set_OFF_time
 15076 ;;		_NEMS_set_contractions
 15077 ;;		_NEMS_set_ramp_up
 15078 ;;		_NEMS_set_ramp_down
 15079 ;;		_NEMS_get_program
 15080 ;;		_NEMS_set_channel1
 15081 ;;		_NEMS_set_channel2
 15082 ;;		_NEMS_set_channel3
 15083 ;;		_NEMS_set_channel4
 15084 ;;		_NEMS_save_program
 15085 ;;		_NEMS_load_program
 15086 ;;		_NEMS_start_program
 15087 ;;		_NEMS_start_program_nack
 15088 ;;		_NEMS_stop_program
 15089 ;; This function uses a non-reentrant model
 15090 ;;
 15091                           
 15092                           
 15093                           ;psect for function __puts
 15094  0932                     __puts:
 15095                           
 15096                           ;comm.c: 5: void _puts(char *pt);comm.c: 6: {;comm.c: 7:     unsigned char index;;comm.c
      +                          : 8:     index = 0;
 15097                           
 15098                           ;incstack = 0
 15099                           ; Regs used in __puts: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15100  0932  01A7               	clrf	__puts@index
 15101  0933                     l4427:	
 15102                           ;comm.c: 9:     while(pt[index]) {
 15103                           
 15104                           
 15105                           ;comm.c: 9:     while(pt[index]) {
 15106  0933  0823               	movf	__puts@pt+1,w
 15107  0934  00A5               	movwf	??__puts+1
 15108  0935  0822               	movf	__puts@pt,w
 15109  0936  00A4               	movwf	??__puts
 15110  0937  0827               	movf	__puts@index,w
 15111  0938  0724               	addwf	??__puts,w
 15112  0939  0084               	movwf	4
 15113  093A  0825               	movf	??__puts+1,w
 15114  093B  1803               	skipnc
 15115  093C  0A25               	incf	??__puts+1,w
 15116  093D  0085               	movwf	5
 15117  093E  0012               	moviw fsr0++
 15118  093F  1903               	btfsc	3,2
 15119  0940  0008               	return
 15120  0941                     l4421:
 15121  0941  3195  25BA  3189   	fcall	_EUSART1_is_tx_ready
 15122  0944  3A00               	xorlw	0
 15123  0945  1903               	skipnz
 15124  0946  2941               	goto	l4421
 15125                           
 15126                           ;comm.c: 11:         EUSART1_Write(pt[index++]);
 15127  0947  0823               	movf	__puts@pt+1,w
 15128  0948  00A5               	movwf	??__puts+1
 15129  0949  0822               	movf	__puts@pt,w
 15130  094A  00A4               	movwf	??__puts
 15131  094B  0827               	movf	__puts@index,w
 15132  094C  0724               	addwf	??__puts,w
 15133  094D  0084               	movwf	4
 15134  094E  0825               	movf	??__puts+1,w
 15135  094F  1803               	skipnc
 15136  0950  0A25               	incf	??__puts+1,w
 15137  0951  0085               	movwf	5
 15138  0952  0800               	movf	0,w	;code access
 15139  0953  3188  20E8  3189   	fcall	_EUSART1_Write
 15140  0956  3001               	movlw	1
 15141  0957  0140               	movlb	0	; select bank0
 15142  0958  00A4               	movwf	??__puts
 15143  0959  0824               	movf	??__puts,w
 15144  095A  07A7               	addwf	__puts@index,f
 15145  095B  2933               	goto	l4427
 15146  095C                     __end_of__puts:
 15147                           
 15148                           	psect	text55
 15149  15BA                     __ptext55:	
 15150 ;; *************** function _EUSART1_is_tx_ready *****************
 15151 ;; Defined at:
 15152 ;;		line 132 in file "mcc_generated_files/eusart1.c"
 15153 ;; Parameters:    Size  Location     Type
 15154 ;;		None
 15155 ;; Auto vars:     Size  Location     Type
 15156 ;;		None
 15157 ;; Return value:  Size  Location     Type
 15158 ;;                  1    wreg      _Bool 
 15159 ;; Registers used:
 15160 ;;		wreg, status,2, status,0
 15161 ;; Tracked objects:
 15162 ;;		On entry : 3F/0
 15163 ;;		On exit  : 3F/0
 15164 ;;		Unchanged: 0/0
 15165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15170 ;;Total ram usage:        0 bytes
 15171 ;; Hardware stack levels used:    1
 15172 ;; Hardware stack levels required when called:    4
 15173 ;; This function calls:
 15174 ;;		Nothing
 15175 ;; This function is called by:
 15176 ;;		__puts
 15177 ;;		_write
 15178 ;; This function uses a non-reentrant model
 15179 ;;
 15180                           
 15181                           
 15182                           ;psect for function _EUSART1_is_tx_ready
 15183  15BA                     _EUSART1_is_tx_ready:
 15184                           
 15185                           ;mcc_generated_files/eusart1.c: 134:     return (eusart1TxBufferRemaining ? 1 : 0);
 15186                           
 15187                           ;incstack = 0
 15188                           ; Regs used in _EUSART1_is_tx_ready: [wreg+status,2+status,0]
 15189  15BA  086F               	movf	_eusart1TxBufferRemaining,w	;volatile
 15190  15BB  1903               	btfsc	3,2
 15191  15BC  2DBF               	goto	u2430
 15192  15BD  3001               	movlw	1
 15193  15BE  0008               	return
 15194  15BF                     u2430:
 15195  15BF  3000               	movlw	0
 15196  15C0  0008               	return
 15197  15C1                     __end_of_EUSART1_is_tx_ready:
 15198                           
 15199                           	psect	text56
 15200  08E8                     __ptext56:	
 15201 ;; *************** function _EUSART1_Write *****************
 15202 ;; Defined at:
 15203 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 15204 ;; Parameters:    Size  Location     Type
 15205 ;;  txData          1    wreg     unsigned char 
 15206 ;; Auto vars:     Size  Location     Type
 15207 ;;  txData          1    1[BANK0 ] unsigned char 
 15208 ;; Return value:  Size  Location     Type
 15209 ;;                  1    wreg      void 
 15210 ;; Registers used:
 15211 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15212 ;; Tracked objects:
 15213 ;;		On entry : 3F/0
 15214 ;;		On exit  : 3F/E
 15215 ;;		Unchanged: 0/0
 15216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15218 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15219 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15220 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15221 ;;Total ram usage:        2 bytes
 15222 ;; Hardware stack levels used:    1
 15223 ;; Hardware stack levels required when called:    4
 15224 ;; This function calls:
 15225 ;;		Nothing
 15226 ;; This function is called by:
 15227 ;;		__puts
 15228 ;;		_write
 15229 ;; This function uses a non-reentrant model
 15230 ;;
 15231                           
 15232                           
 15233                           ;psect for function _EUSART1_Write
 15234  08E8                     _EUSART1_Write:
 15235                           
 15236                           ;incstack = 0
 15237                           ; Regs used in _EUSART1_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 15238                           ;EUSART1_Write@txData stored from wreg
 15239  08E8  00A1               	movwf	EUSART1_Write@txData
 15240  08E9                     l4335:	
 15241                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 15242                           
 15243                           
 15244                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 15245  08E9  086F               	movf	_eusart1TxBufferRemaining,w	;volatile
 15246  08EA  1903               	btfsc	3,2
 15247  08EB  28E9               	goto	l4335
 15248                           
 15249                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 15250  08EC  014E               	movlb	14	; select bank14
 15251  08ED  1A19               	btfsc	25,4	;volatile
 15252  08EE  28F4               	goto	l215
 15253                           
 15254                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 15255  08EF  0140               	movlb	0	; select bank0
 15256  08F0  0821               	movf	EUSART1_Write@txData,w
 15257  08F1  0142               	movlb	2	; select bank2
 15258  08F2  009A               	movwf	26	;volatile
 15259                           
 15260                           ;mcc_generated_files/eusart1.c: 182:     }
 15261  08F3  2909               	goto	l4349
 15262  08F4                     l215:	
 15263                           ;mcc_generated_files/eusart1.c: 183:     else
 15264                           
 15265                           
 15266                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 15267  08F4  1219               	bcf	25,4	;volatile
 15268                           
 15269                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 15270  08F5  0140               	movlb	0	; select bank0
 15271  08F6  0821               	movf	EUSART1_Write@txData,w
 15272  08F7  00A0               	movwf	??_EUSART1_Write
 15273  08F8  0875               	movf	_eusart1TxHead,w
 15274  08F9  3EA0               	addlw	(low (_eusart1TxBuffer| (0+256)))& (0+255)
 15275  08FA  0086               	movwf	6
 15276  08FB  3001               	movlw	1	; select bank3/4
 15277  08FC  0087               	movwf	7
 15278  08FD  0820               	movf	??_EUSART1_Write,w
 15279  08FE  0081               	movwf	1
 15280  08FF  3001               	movlw	1
 15281  0900  00A0               	movwf	??_EUSART1_Write
 15282  0901  0820               	movf	??_EUSART1_Write,w
 15283  0902  07F5               	addwf	_eusart1TxHead,f	;volatile
 15284                           
 15285                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 15286  0903  3040               	movlw	64
 15287  0904  0275               	subwf	_eusart1TxHead,w
 15288  0905  1803               	btfsc	3,0
 15289                           
 15290                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 15291  0906  01F5               	clrf	_eusart1TxHead	;volatile
 15292                           
 15293                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 15294  0907  3001               	movlw	1
 15295  0908  02EF               	subwf	_eusart1TxBufferRemaining,f	;volatile
 15296  0909                     l4349:
 15297                           
 15298                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 15299  0909  014E               	movlb	14	; select bank14
 15300  090A  1619               	bsf	25,4	;volatile
 15301  090B  0008               	return
 15302  090C                     __end_of_EUSART1_Write:
 15303                           
 15304                           	psect	text57
 15305  157C                     __ptext57:	
 15306 ;; *************** function _TMR0_StartTimer *****************
 15307 ;; Defined at:
 15308 ;;		line 95 in file "mcc_generated_files/tmr0.c"
 15309 ;; Parameters:    Size  Location     Type
 15310 ;;		None
 15311 ;; Auto vars:     Size  Location     Type
 15312 ;;		None
 15313 ;; Return value:  Size  Location     Type
 15314 ;;                  1    wreg      void 
 15315 ;; Registers used:
 15316 ;;		None
 15317 ;; Tracked objects:
 15318 ;;		On entry : 3F/0
 15319 ;;		On exit  : 3F/B
 15320 ;;		Unchanged: 0/0
 15321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15326 ;;Total ram usage:        0 bytes
 15327 ;; Hardware stack levels used:    1
 15328 ;; Hardware stack levels required when called:    4
 15329 ;; This function calls:
 15330 ;;		Nothing
 15331 ;; This function is called by:
 15332 ;;		_NEMS_start_program_nack
 15333 ;; This function uses a non-reentrant model
 15334 ;;
 15335                           
 15336                           
 15337                           ;psect for function _TMR0_StartTimer
 15338  157C                     _TMR0_StartTimer:
 15339                           
 15340                           ;mcc_generated_files/tmr0.c: 98:     T0CON0bits.T0EN = 1;
 15341                           
 15342                           ;incstack = 0
 15343                           ; Regs used in _TMR0_StartTimer: []
 15344  157C  014B               	movlb	11	; select bank11
 15345  157D  179E               	bsf	30,7	;volatile
 15346  157E  0008               	return
 15347  157F                     __end_of_TMR0_StartTimer:
 15348                           
 15349                           	psect	text58
 15350  02FA                     __ptext58:	
 15351 ;; *************** function _NEMS_recalculate_program *****************
 15352 ;; Defined at:
 15353 ;;		line 560 in file "NEMS.c"
 15354 ;; Parameters:    Size  Location     Type
 15355 ;;		None
 15356 ;; Auto vars:     Size  Location     Type
 15357 ;;  se_frequency    1   34[BANK0 ] unsigned char 
 15358 ;; Return value:  Size  Location     Type
 15359 ;;                  1    wreg      void 
 15360 ;; Registers used:
 15361 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15362 ;; Tracked objects:
 15363 ;;		On entry : 3F/0
 15364 ;;		On exit  : 3F/0
 15365 ;;		Unchanged: 0/0
 15366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15368 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15369 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15370 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15371 ;;Total ram usage:        7 bytes
 15372 ;; Hardware stack levels used:    1
 15373 ;; Hardware stack levels required when called:    6
 15374 ;; This function calls:
 15375 ;;		_NEMS_calculate_ramp
 15376 ;;		___awdiv
 15377 ;;		___bmul
 15378 ;;		___lwdiv
 15379 ;;		___wmul
 15380 ;; This function is called by:
 15381 ;;		_NEMS_start_program_nack
 15382 ;; This function uses a non-reentrant model
 15383 ;;
 15384                           
 15385                           
 15386                           ;psect for function _NEMS_recalculate_program
 15387  02FA                     _NEMS_recalculate_program:
 15388                           
 15389                           ;NEMS.c: 562:     unsigned char se_frequency;;NEMS.c: 565:     if (NMES_se_control) {
 15390                           
 15391                           ;incstack = 0
 15392                           ; Regs used in _NEMS_recalculate_program: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15393  02FA  0850               	movf	_NMES_se_control,w
 15394  02FB  1903               	btfsc	3,2
 15395  02FC  2B21               	goto	l4435
 15396                           
 15397                           ;NEMS.c: 566:         se_frequency = program.frequency*NMES_freq_multiplier;
 15398  02FD  0141               	movlb	1	; select bank1
 15399  02FE  0846               	movf	_NMES_freq_multiplier^(0+128),w
 15400  02FF  0140               	movlb	0	; select bank0
 15401  0300  00BC               	movwf	??_NEMS_recalculate_program
 15402  0301  083C               	movf	??_NEMS_recalculate_program,w
 15403  0302  00A0               	movwf	___bmul@multiplicand
 15404  0303  0859               	movf	_program+2,w	;volatile
 15405  0304  3196  261B  3182   	fcall	___bmul
 15406  0307  00BD               	movwf	??_NEMS_recalculate_program+1
 15407  0308  083D               	movf	??_NEMS_recalculate_program+1,w
 15408  0309  00C2               	movwf	NEMS_recalculate_program@se_frequency
 15409                           
 15410                           ;NEMS.c: 567:         waveform.num_clocks_per_pulse = (unsigned short)20000/se_frequency
      +                          ;
 15411  030A  0842               	movf	NEMS_recalculate_program@se_frequency,w
 15412  030B  00BC               	movwf	??_NEMS_recalculate_program
 15413  030C  01BD               	clrf	??_NEMS_recalculate_program+1
 15414  030D  083C               	movf	??_NEMS_recalculate_program,w
 15415  030E  00A6               	movwf	___lwdiv@divisor
 15416  030F  083D               	movf	??_NEMS_recalculate_program+1,w
 15417  0310  00A7               	movwf	___lwdiv@divisor+1
 15418  0311  3020               	movlw	32
 15419  0312  00A8               	movwf	___lwdiv@dividend
 15420  0313  304E               	movlw	78
 15421  0314  00A9               	movwf	___lwdiv@dividend+1
 15422  0315  3189  21E5  3182   	fcall	___lwdiv
 15423  0318  303C               	movlw	60
 15424  0319  0086               	movwf	6
 15425  031A  3026               	movlw	38
 15426  031B  0087               	movwf	7
 15427  031C  0826               	movf	?___lwdiv,w
 15428  031D  3FC0               	movwi [0]fsr1
 15429  031E  0827               	movf	?___lwdiv+1,w
 15430  031F  3FC1               	movwi [1]fsr1
 15431                           
 15432                           ;NEMS.c: 568:     } else {
 15433  0320  2B43               	goto	l4441
 15434  0321                     l4435:
 15435                           
 15436                           ;NEMS.c: 569:         se_frequency = program.frequency;
 15437  0321  0859               	movf	_program+2,w	;volatile
 15438  0322  00BC               	movwf	??_NEMS_recalculate_program
 15439  0323  083C               	movf	??_NEMS_recalculate_program,w
 15440  0324  00C2               	movwf	NEMS_recalculate_program@se_frequency
 15441                           
 15442                           ;NEMS.c: 570:         waveform.num_clocks_per_pulse = (unsigned short)20000/se_frequency
      +                          ;
 15443  0325  0842               	movf	NEMS_recalculate_program@se_frequency,w
 15444  0326  00BC               	movwf	??_NEMS_recalculate_program
 15445  0327  01BD               	clrf	??_NEMS_recalculate_program+1
 15446  0328  083C               	movf	??_NEMS_recalculate_program,w
 15447  0329  00A6               	movwf	___lwdiv@divisor
 15448  032A  083D               	movf	??_NEMS_recalculate_program+1,w
 15449  032B  00A7               	movwf	___lwdiv@divisor+1
 15450  032C  3020               	movlw	32
 15451  032D  00A8               	movwf	___lwdiv@dividend
 15452  032E  304E               	movlw	78
 15453  032F  00A9               	movwf	___lwdiv@dividend+1
 15454  0330  3189  21E5  3182   	fcall	___lwdiv
 15455  0333  303C               	movlw	60
 15456  0334  0086               	movwf	6
 15457  0335  3026               	movlw	38
 15458  0336  0087               	movwf	7
 15459  0337  0826               	movf	?___lwdiv,w
 15460  0338  3FC0               	movwi [0]fsr1
 15461  0339  0827               	movf	?___lwdiv+1,w
 15462  033A  3FC1               	movwi [1]fsr1
 15463                           
 15464                           ;NEMS.c: 571:         waveform.num_clocks_per_pulse /= 2;
 15465  033B  303C               	movlw	60
 15466  033C  0086               	movwf	6
 15467  033D  3026               	movlw	38
 15468  033E  0087               	movwf	7
 15469  033F  3141               	addfsr 1,1
 15470  0340  3681               	lsrf	1,f
 15471  0341  317F               	addfsr 1,-1
 15472  0342  0C81               	rrf	1,f
 15473  0343                     l4441:
 15474                           
 15475                           ;NEMS.c: 581:     waveform.clock_index = 0;
 15476  0343  303C               	movlw	60
 15477  0344  0086               	movwf	6
 15478  0345  3026               	movlw	38
 15479  0346  0087               	movwf	7
 15480  0347  3142               	addfsr 1,2
 15481  0348  3000               	movlw	0
 15482  0349  3FC0               	movwi [0]fsr1
 15483  034A  3FC1               	movwi [1]fsr1
 15484                           
 15485                           ;NEMS.c: 582:     waveform.pulse_index = 0;
 15486  034B  303C               	movlw	60
 15487  034C  0086               	movwf	6
 15488  034D  3026               	movlw	38
 15489  034E  0087               	movwf	7
 15490  034F  3144               	addfsr 1,4
 15491  0350  3000               	movlw	0
 15492  0351  3FC0               	movwi [0]fsr1
 15493  0352  3FC1               	movwi [1]fsr1
 15494                           
 15495                           ;NEMS.c: 584:     waveform.pulse_index2 = 0;
 15496  0353  303C               	movlw	60
 15497  0354  0086               	movwf	6
 15498  0355  3026               	movlw	38
 15499  0356  0087               	movwf	7
 15500  0357  3146               	addfsr 1,6
 15501  0358  3000               	movlw	0
 15502  0359  3FC0               	movwi [0]fsr1
 15503  035A  3FC1               	movwi [1]fsr1
 15504                           
 15505                           ;NEMS.c: 586:     waveform.ramp_up_pulses = (program.ramp_up*se_frequency)/10;
 15506  035B  300A               	movlw	10
 15507  035C  00A6               	movwf	___awdiv@divisor
 15508  035D  3000               	movlw	0
 15509  035E  00A7               	movwf	___awdiv@divisor+1
 15510  035F  085F               	movf	_program+8,w	;volatile
 15511  0360  00BC               	movwf	??_NEMS_recalculate_program
 15512  0361  01BD               	clrf	??_NEMS_recalculate_program+1
 15513  0362  083C               	movf	??_NEMS_recalculate_program,w
 15514  0363  00A0               	movwf	___wmul@multiplier
 15515  0364  083D               	movf	??_NEMS_recalculate_program+1,w
 15516  0365  00A1               	movwf	___wmul@multiplier+1
 15517  0366  0842               	movf	NEMS_recalculate_program@se_frequency,w
 15518  0367  00BE               	movwf	??_NEMS_recalculate_program+2
 15519  0368  01BF               	clrf	??_NEMS_recalculate_program+3
 15520  0369  083E               	movf	??_NEMS_recalculate_program+2,w
 15521  036A  00A2               	movwf	___wmul@multiplicand
 15522  036B  083F               	movf	??_NEMS_recalculate_program+3,w
 15523  036C  00A3               	movwf	___wmul@multiplicand+1
 15524  036D  3188  201D  3182   	fcall	___wmul
 15525  0370  0821               	movf	?___wmul+1,w
 15526  0371  00A9               	movwf	___awdiv@dividend+1
 15527  0372  0820               	movf	?___wmul,w
 15528  0373  00A8               	movwf	___awdiv@dividend
 15529  0374  318B  2328  3182   	fcall	___awdiv
 15530  0377  301A               	movlw	26
 15531  0378  0086               	movwf	6
 15532  0379  3027               	movlw	39
 15533  037A  0087               	movwf	7
 15534  037B  0826               	movf	?___awdiv,w
 15535  037C  3FC0               	movwi [0]fsr1
 15536  037D  0827               	movf	?___awdiv+1,w
 15537  037E  3FC1               	movwi [1]fsr1
 15538                           
 15539                           ;NEMS.c: 587:     waveform.ramp_down_pulses = (program.ramp_down*se_frequency)/10;
 15540  037F  300A               	movlw	10
 15541  0380  00A6               	movwf	___awdiv@divisor
 15542  0381  3000               	movlw	0
 15543  0382  00A7               	movwf	___awdiv@divisor+1
 15544  0383  0860               	movf	_program+9,w	;volatile
 15545  0384  00BC               	movwf	??_NEMS_recalculate_program
 15546  0385  01BD               	clrf	??_NEMS_recalculate_program+1
 15547  0386  083C               	movf	??_NEMS_recalculate_program,w
 15548  0387  00A0               	movwf	___wmul@multiplier
 15549  0388  083D               	movf	??_NEMS_recalculate_program+1,w
 15550  0389  00A1               	movwf	___wmul@multiplier+1
 15551  038A  0842               	movf	NEMS_recalculate_program@se_frequency,w
 15552  038B  00BE               	movwf	??_NEMS_recalculate_program+2
 15553  038C  01BF               	clrf	??_NEMS_recalculate_program+3
 15554  038D  083E               	movf	??_NEMS_recalculate_program+2,w
 15555  038E  00A2               	movwf	___wmul@multiplicand
 15556  038F  083F               	movf	??_NEMS_recalculate_program+3,w
 15557  0390  00A3               	movwf	___wmul@multiplicand+1
 15558  0391  3188  201D  3182   	fcall	___wmul
 15559  0394  0821               	movf	?___wmul+1,w
 15560  0395  00A9               	movwf	___awdiv@dividend+1
 15561  0396  0820               	movf	?___wmul,w
 15562  0397  00A8               	movwf	___awdiv@dividend
 15563  0398  318B  2328  3182   	fcall	___awdiv
 15564  039B  30E6               	movlw	230
 15565  039C  0086               	movwf	6
 15566  039D  3027               	movlw	39
 15567  039E  0087               	movwf	7
 15568  039F  0826               	movf	?___awdiv,w
 15569  03A0  3FC0               	movwi [0]fsr1
 15570  03A1  0827               	movf	?___awdiv+1,w
 15571  03A2  3FC1               	movwi [1]fsr1
 15572                           
 15573                           ;NEMS.c: 589:     waveform.ramp_up_time = waveform.ramp_up_pulses;
 15574  03A3  301A               	movlw	26
 15575  03A4  0086               	movwf	6
 15576  03A5  3027               	movlw	39
 15577  03A6  0087               	movwf	7
 15578  03A7  301C               	movlw	28
 15579  03A8  0084               	movwf	4
 15580  03A9  3027               	movlw	39
 15581  03AA  0085               	movwf	5
 15582  03AB  3F40               	moviw [0]fsr1
 15583  03AC  3F80               	movwi [0]fsr0
 15584  03AD  3F41               	moviw [1]fsr1
 15585  03AE  3F81               	movwi [1]fsr0
 15586                           
 15587                           ;NEMS.c: 591:     waveform.ON_time = program.ON_time*se_frequency + waveform.ramp_up_tim
      +                          e;
 15588  03AF  301C               	movlw	28
 15589  03B0  0086               	movwf	6
 15590  03B1  3027               	movlw	39
 15591  03B2  0087               	movwf	7
 15592  03B3  085C               	movf	_program+5,w	;volatile
 15593  03B4  00BC               	movwf	??_NEMS_recalculate_program
 15594  03B5  01BD               	clrf	??_NEMS_recalculate_program+1
 15595  03B6  083C               	movf	??_NEMS_recalculate_program,w
 15596  03B7  00A0               	movwf	___wmul@multiplier
 15597  03B8  083D               	movf	??_NEMS_recalculate_program+1,w
 15598  03B9  00A1               	movwf	___wmul@multiplier+1
 15599  03BA  0842               	movf	NEMS_recalculate_program@se_frequency,w
 15600  03BB  00BE               	movwf	??_NEMS_recalculate_program+2
 15601  03BC  01BF               	clrf	??_NEMS_recalculate_program+3
 15602  03BD  083E               	movf	??_NEMS_recalculate_program+2,w
 15603  03BE  00A2               	movwf	___wmul@multiplicand
 15604  03BF  083F               	movf	??_NEMS_recalculate_program+3,w
 15605  03C0  00A3               	movwf	___wmul@multiplicand+1
 15606  03C1  3188  201D  3182   	fcall	___wmul
 15607  03C4  3F40               	moviw [0]fsr1
 15608  03C5  0720               	addwf	?___wmul,w
 15609  03C6  00C0               	movwf	??_NEMS_recalculate_program+4
 15610  03C7  3F41               	moviw [1]fsr1
 15611  03C8  3D21               	addwfc	?___wmul+1,w
 15612  03C9  00C1               	movwf	??_NEMS_recalculate_program+5
 15613  03CA  303C               	movlw	60
 15614  03CB  0086               	movwf	6
 15615  03CC  3026               	movlw	38
 15616  03CD  0087               	movwf	7
 15617  03CE  314C               	addfsr 1,12
 15618  03CF  0840               	movf	??_NEMS_recalculate_program+4,w
 15619  03D0  3FC0               	movwi [0]fsr1
 15620  03D1  0841               	movf	??_NEMS_recalculate_program+5,w
 15621  03D2  3FC1               	movwi [1]fsr1
 15622                           
 15623                           ;NEMS.c: 592:     waveform.ramp_down_time = waveform.ramp_down_pulses + waveform.ON_time
      +                          ;
 15624  03D3  303C               	movlw	60
 15625  03D4  0086               	movwf	6
 15626  03D5  3026               	movlw	38
 15627  03D6  0087               	movwf	7
 15628  03D7  314C               	addfsr 1,12
 15629  03D8  30E6               	movlw	230
 15630  03D9  0084               	movwf	4
 15631  03DA  3027               	movlw	39
 15632  03DB  0085               	movwf	5
 15633  03DC  3F40               	moviw [0]fsr1
 15634  03DD  0700               	addwf	0,w
 15635  03DE  00BC               	movwf	??_NEMS_recalculate_program
 15636  03DF  3101               	addfsr 0,1
 15637  03E0  3F41               	moviw [1]fsr1
 15638  03E1  3D00               	addwfc	0,w
 15639  03E2  00BD               	movwf	??_NEMS_recalculate_program+1
 15640  03E3  30E8               	movlw	232
 15641  03E4  0086               	movwf	6
 15642  03E5  3027               	movlw	39
 15643  03E6  0087               	movwf	7
 15644  03E7  083C               	movf	??_NEMS_recalculate_program,w
 15645  03E8  3FC0               	movwi [0]fsr1
 15646  03E9  083D               	movf	??_NEMS_recalculate_program+1,w
 15647  03EA  3FC1               	movwi [1]fsr1
 15648                           
 15649                           ;NEMS.c: 593:     waveform.OFF_time = program.OFF_time*se_frequency + waveform.ON_time;
 15650  03EB  303C               	movlw	60
 15651  03EC  0086               	movwf	6
 15652  03ED  3026               	movlw	38
 15653  03EE  0087               	movwf	7
 15654  03EF  314C               	addfsr 1,12
 15655  03F0  085D               	movf	_program+6,w	;volatile
 15656  03F1  00BC               	movwf	??_NEMS_recalculate_program
 15657  03F2  01BD               	clrf	??_NEMS_recalculate_program+1
 15658  03F3  083C               	movf	??_NEMS_recalculate_program,w
 15659  03F4  00A0               	movwf	___wmul@multiplier
 15660  03F5  083D               	movf	??_NEMS_recalculate_program+1,w
 15661  03F6  00A1               	movwf	___wmul@multiplier+1
 15662  03F7  0842               	movf	NEMS_recalculate_program@se_frequency,w
 15663  03F8  00BE               	movwf	??_NEMS_recalculate_program+2
 15664  03F9  01BF               	clrf	??_NEMS_recalculate_program+3
 15665  03FA  083E               	movf	??_NEMS_recalculate_program+2,w
 15666  03FB  00A2               	movwf	___wmul@multiplicand
 15667  03FC  083F               	movf	??_NEMS_recalculate_program+3,w
 15668  03FD  00A3               	movwf	___wmul@multiplicand+1
 15669  03FE  3188  201D  3182   	fcall	___wmul
 15670  0401  3F40               	moviw [0]fsr1
 15671  0402  0720               	addwf	?___wmul,w
 15672  0403  00C0               	movwf	??_NEMS_recalculate_program+4
 15673  0404  3F41               	moviw [1]fsr1
 15674  0405  3D21               	addwfc	?___wmul+1,w
 15675  0406  00C1               	movwf	??_NEMS_recalculate_program+5
 15676  0407  303C               	movlw	60
 15677  0408  0086               	movwf	6
 15678  0409  3026               	movlw	38
 15679  040A  0087               	movwf	7
 15680  040B  314E               	addfsr 1,14
 15681  040C  0840               	movf	??_NEMS_recalculate_program+4,w
 15682  040D  3FC0               	movwi [0]fsr1
 15683  040E  0841               	movf	??_NEMS_recalculate_program+5,w
 15684  040F  3FC1               	movwi [1]fsr1
 15685                           
 15686                           ;NEMS.c: 619:     waveform.pulse_amplitude = 0;
 15687  0410  303C               	movlw	60
 15688  0411  0086               	movwf	6
 15689  0412  3026               	movlw	38
 15690  0413  0087               	movwf	7
 15691  0414  3151               	addfsr 1,17
 15692  0415  0181               	clrf	1
 15693                           
 15694                           ;NEMS.c: 620:     waveform.current_amplitude = 0;
 15695  0416  303C               	movlw	60
 15696  0417  0086               	movwf	6
 15697  0418  3026               	movlw	38
 15698  0419  0087               	movwf	7
 15699  041A  3153               	addfsr 1,19
 15700  041B  0181               	clrf	1
 15701                           
 15702                           ;NEMS.c: 621:     waveform.program_amplitude = program.amplitude;
 15703  041C  304C               	movlw	76
 15704  041D  0086               	movwf	6
 15705  041E  3026               	movlw	38
 15706  041F  0087               	movwf	7
 15707  0420  0857               	movf	_program,w	;volatile
 15708  0421  0081               	movwf	1
 15709                           
 15710                           ;NEMS.c: 623:     waveform.program_amplitude2 = program.amplitude2;
 15711  0422  0858               	movf	_program+1,w	;volatile
 15712  0423  00BC               	movwf	??_NEMS_recalculate_program
 15713  0424  3050               	movlw	80
 15714  0425  0086               	movwf	6
 15715  0426  3026               	movlw	38
 15716  0427  0087               	movwf	7
 15717  0428  083C               	movf	??_NEMS_recalculate_program,w
 15718  0429  0081               	movwf	1
 15719                           
 15720                           ;NEMS.c: 625:     switch (program.symmetry_factor) {
 15721  042A  2C45               	goto	l4477
 15722  042B                     l4467:
 15723  042B  303C               	movlw	60
 15724  042C  0086               	movwf	6
 15725  042D  3026               	movlw	38
 15726  042E  0087               	movwf	7
 15727  042F  3152               	addfsr 1,18
 15728  0430  0181               	clrf	1
 15729  0431  2C5B               	goto	l4479
 15730  0432                     l4469:
 15731  0432  304E               	movlw	78
 15732  0433  0086               	movwf	6
 15733  0434  3026               	movlw	38
 15734  0435  0087               	movwf	7
 15735  0436  3001               	movlw	1
 15736  0437  2C43               	goto	L3
 15737  0438                     l4471:
 15738  0438  304E               	movlw	78
 15739  0439  0086               	movwf	6
 15740  043A  3026               	movlw	38
 15741  043B  0087               	movwf	7
 15742  043C  3002               	movlw	2
 15743  043D  2C43               	goto	L3
 15744  043E                     l4473:
 15745  043E  304E               	movlw	78
 15746  043F  0086               	movwf	6
 15747  0440  3026               	movlw	38
 15748  0441  0087               	movwf	7
 15749  0442  3003               	movlw	3
 15750  0443                     L3:
 15751  0443  0081               	movwf	1
 15752  0444  2C5B               	goto	l4479
 15753  0445                     l4477:
 15754  0445  085B               	movf	_program+4,w	;volatile
 15755  0446  00BC               	movwf	??_NEMS_recalculate_program
 15756  0447  01BD               	clrf	??_NEMS_recalculate_program+1
 15757                           
 15758                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15759                           ; Switch size 1, requested type "simple"
 15760                           ; Number of cases is 1, Range of values is 0 to 0
 15761                           ; switch strategies available:
 15762                           ; Name         Instructions Cycles
 15763                           ; simple_byte            4     3 (average)
 15764                           ; direct_byte            8     6 (fixed)
 15765                           ; jumptable            260     6 (fixed)
 15766                           ;	Chosen strategy is simple_byte
 15767  0448  083D               	movf	??_NEMS_recalculate_program+1,w
 15768  0449  3A00               	xorlw	0	; case 0
 15769  044A  1903               	skipnz
 15770  044B  2C4D               	goto	l5361
 15771  044C  2C2B               	goto	l4467
 15772  044D                     l5361:
 15773                           
 15774                           ; Switch size 1, requested type "simple"
 15775                           ; Number of cases is 4, Range of values is 1 to 8
 15776                           ; switch strategies available:
 15777                           ; Name         Instructions Cycles
 15778                           ; simple_byte           13     7 (average)
 15779                           ; direct_byte           25     9 (fixed)
 15780                           ; jumptable            263     9 (fixed)
 15781                           ;	Chosen strategy is simple_byte
 15782  044D  083C               	movf	??_NEMS_recalculate_program,w
 15783  044E  3A01               	xorlw	1	; case 1
 15784  044F  1903               	skipnz
 15785  0450  2C2B               	goto	l4467
 15786  0451  3A03               	xorlw	3	; case 2
 15787  0452  1903               	skipnz
 15788  0453  2C32               	goto	l4469
 15789  0454  3A06               	xorlw	6	; case 4
 15790  0455  1903               	skipnz
 15791  0456  2C38               	goto	l4471
 15792  0457  3A0C               	xorlw	12	; case 8
 15793  0458  1903               	skipnz
 15794  0459  2C3E               	goto	l4473
 15795  045A  2C2B               	goto	l4467
 15796  045B                     l4479:
 15797                           
 15798                           ;NEMS.c: 634:     waveform.silence_phase_duration = program.phase_duration + 1;
 15799  045B  085A               	movf	_program+3,w	;volatile
 15800  045C  3E01               	addlw	1
 15801  045D  00BC               	movwf	??_NEMS_recalculate_program
 15802  045E  3046               	movlw	70
 15803  045F  0086               	movwf	6
 15804  0460  3026               	movlw	38
 15805  0461  0087               	movwf	7
 15806  0462  083C               	movf	??_NEMS_recalculate_program,w
 15807  0463  0081               	movwf	1
 15808                           
 15809                           ;NEMS.c: 635:     waveform.minus_phase_duration = program.phase_duration*program.symmetr
      +                          y_factor + program.phase_duration + 1;
 15810  0464  085B               	movf	_program+4,w	;volatile
 15811  0465  00BC               	movwf	??_NEMS_recalculate_program
 15812  0466  083C               	movf	??_NEMS_recalculate_program,w
 15813  0467  00A0               	movwf	___bmul@multiplicand
 15814  0468  085A               	movf	_program+3,w	;volatile
 15815  0469  3196  261B  3182   	fcall	___bmul
 15816  046C  075A               	addwf	_program+3,w	;volatile
 15817  046D  3E01               	addlw	1
 15818  046E  00BD               	movwf	??_NEMS_recalculate_program+1
 15819  046F  3047               	movlw	71
 15820  0470  0086               	movwf	6
 15821  0471  3026               	movlw	38
 15822  0472  0087               	movwf	7
 15823  0473  083D               	movf	??_NEMS_recalculate_program+1,w
 15824  0474  0081               	movwf	1
 15825                           
 15826                           ;NEMS.c: 638:     waveform.ramp_index = 0;
 15827  0475  30EA               	movlw	234
 15828  0476  0086               	movwf	6
 15829  0477  3027               	movlw	39
 15830  0478  0087               	movwf	7
 15831  0479  0181               	clrf	1
 15832                           
 15833                           ;NEMS.c: 639:     waveform.contractions_index = 0;
 15834  047A  30EB               	movlw	235
 15835  047B  0086               	movwf	6
 15836  047C  3027               	movlw	39
 15837  047D  0087               	movwf	7
 15838  047E  0181               	clrf	1
 15839                           
 15840                           ;NEMS.c: 641:     waveform.channel1 = mux[program.channel1];
 15841  047F  0861               	movf	_program+10,w	;volatile
 15842  0480  3E00               	addlw	low (_mux| (0+32768))
 15843  0481  0084               	movwf	4
 15844  0482  3090               	movlw	high (_mux| (0+32768))
 15845  0483  1803               	skipnc
 15846  0484  3E01               	addlw	1
 15847  0485  0085               	movwf	5
 15848  0486  0800               	movf	0,w	;code access
 15849  0487  00BC               	movwf	??_NEMS_recalculate_program
 15850  0488  30EC               	movlw	236
 15851  0489  0086               	movwf	6
 15852  048A  3027               	movlw	39
 15853  048B  0087               	movwf	7
 15854  048C  083C               	movf	??_NEMS_recalculate_program,w
 15855  048D  0081               	movwf	1
 15856                           
 15857                           ;NEMS.c: 642:     waveform.channel2 = mux[program.channel2];
 15858  048E  0862               	movf	_program+11,w	;volatile
 15859  048F  3E00               	addlw	low (_mux| (0+32768))
 15860  0490  0084               	movwf	4
 15861  0491  3090               	movlw	high (_mux| (0+32768))
 15862  0492  1803               	skipnc
 15863  0493  3E01               	addlw	1
 15864  0494  0085               	movwf	5
 15865  0495  0800               	movf	0,w	;code access
 15866  0496  00BC               	movwf	??_NEMS_recalculate_program
 15867  0497  30ED               	movlw	237
 15868  0498  0086               	movwf	6
 15869  0499  3027               	movlw	39
 15870  049A  0087               	movwf	7
 15871  049B  083C               	movf	??_NEMS_recalculate_program,w
 15872  049C  0081               	movwf	1
 15873                           
 15874                           ;NEMS.c: 643:     waveform.channel3 = mux[program.channel3];
 15875  049D  0863               	movf	_program+12,w	;volatile
 15876  049E  3E00               	addlw	low (_mux| (0+32768))
 15877  049F  0084               	movwf	4
 15878  04A0  3090               	movlw	high (_mux| (0+32768))
 15879  04A1  1803               	skipnc
 15880  04A2  3E01               	addlw	1
 15881  04A3  0085               	movwf	5
 15882  04A4  0800               	movf	0,w	;code access
 15883  04A5  00BC               	movwf	??_NEMS_recalculate_program
 15884  04A6  30EE               	movlw	238
 15885  04A7  0086               	movwf	6
 15886  04A8  3027               	movlw	39
 15887  04A9  0087               	movwf	7
 15888  04AA  083C               	movf	??_NEMS_recalculate_program,w
 15889  04AB  0081               	movwf	1
 15890                           
 15891                           ;NEMS.c: 644:     waveform.channel4 = mux[program.channel4];
 15892  04AC  0864               	movf	_program+13,w	;volatile
 15893  04AD  3E00               	addlw	low (_mux| (0+32768))
 15894  04AE  0084               	movwf	4
 15895  04AF  3090               	movlw	high (_mux| (0+32768))
 15896  04B0  1803               	skipnc
 15897  04B1  3E01               	addlw	1
 15898  04B2  0085               	movwf	5
 15899  04B3  0800               	movf	0,w	;code access
 15900  04B4  00BC               	movwf	??_NEMS_recalculate_program
 15901  04B5  30EF               	movlw	239
 15902  04B6  0086               	movwf	6
 15903  04B7  3027               	movlw	39
 15904  04B8  0087               	movwf	7
 15905  04B9  083C               	movf	??_NEMS_recalculate_program,w
 15906  04BA  0081               	movwf	1
 15907                           
 15908                           ;NEMS.c: 646:     NEMS_calculate_ramp();
 15909  04BB  3186  2687         	fcall	_NEMS_calculate_ramp
 15910                           
 15911                           ;NEMS.c: 648:     NEMS_states = NEMS_DISABLED;
 15912  04BD  01D5               	clrf	_NEMS_states	;volatile
 15913                           
 15914                           ;NEMS.c: 649:     NEMS_wave_states = NEMS_OFF_TIME;
 15915  04BE  3001               	movlw	1
 15916  04BF  00BC               	movwf	??_NEMS_recalculate_program
 15917  04C0  083C               	movf	??_NEMS_recalculate_program,w
 15918  04C1  00D4               	movwf	_NEMS_wave_states	;volatile
 15919                           
 15920                           ;NEMS.c: 650:     NEMS_pulse_states = NEMS_PULSE_OFF;
 15921  04C2  01D3               	clrf	_NEMS_pulse_states	;volatile
 15922                           
 15923                           ;NEMS.c: 652:     channel_control = 0;
 15924  04C3  01D1               	clrf	_channel_control
 15925                           
 15926                           ;NEMS.c: 654:     se_index = 0;
 15927  04C4  01CF               	clrf	_se_index
 15928                           
 15929                           ;NEMS.c: 655:     se_channel = waveform.channel1;
 15930  04C5  30EC               	movlw	236
 15931  04C6  0086               	movwf	6
 15932  04C7  3027               	movlw	39
 15933  04C8  0087               	movwf	7
 15934  04C9  0801               	movf	1,w
 15935  04CA  00BC               	movwf	??_NEMS_recalculate_program
 15936  04CB  083C               	movf	??_NEMS_recalculate_program,w
 15937  04CC  00CE               	movwf	_se_channel
 15938  04CD  0008               	return
 15939  04CE                     __end_of_NEMS_recalculate_program:
 15940                           
 15941                           	psect	text59
 15942  161B                     __ptext59:	
 15943 ;; *************** function ___bmul *****************
 15944 ;; Defined at:
 15945 ;;		line 4 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/Umul8.c"
 15946 ;; Parameters:    Size  Location     Type
 15947 ;;  multiplier      1    wreg     unsigned char 
 15948 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 15949 ;; Auto vars:     Size  Location     Type
 15950 ;;  multiplier      1    3[BANK0 ] unsigned char 
 15951 ;;  product         1    2[BANK0 ] unsigned char 
 15952 ;; Return value:  Size  Location     Type
 15953 ;;                  1    wreg      unsigned char 
 15954 ;; Registers used:
 15955 ;;		wreg, status,2, status,0
 15956 ;; Tracked objects:
 15957 ;;		On entry : 3F/0
 15958 ;;		On exit  : 3F/0
 15959 ;;		Unchanged: 0/0
 15960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15961 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15962 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15963 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15964 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15965 ;;Total ram usage:        4 bytes
 15966 ;; Hardware stack levels used:    1
 15967 ;; Hardware stack levels required when called:    4
 15968 ;; This function calls:
 15969 ;;		Nothing
 15970 ;; This function is called by:
 15971 ;;		_NEMS_get_packet
 15972 ;;		_NEMS_recalculate_program
 15973 ;; This function uses a non-reentrant model
 15974 ;;
 15975                           
 15976                           
 15977                           ;psect for function ___bmul
 15978  161B                     ___bmul:
 15979                           
 15980                           ;incstack = 0
 15981                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 15982                           ;___bmul@multiplier stored from wreg
 15983  161B  00A3               	movwf	___bmul@multiplier
 15984  161C  01A2               	clrf	___bmul@product
 15985  161D                     l4369:
 15986  161D  1C23               	btfss	___bmul@multiplier,0
 15987  161E  2E23               	goto	l4373
 15988  161F  0820               	movf	___bmul@multiplicand,w
 15989  1620  00A1               	movwf	??___bmul
 15990  1621  0821               	movf	??___bmul,w
 15991  1622  07A2               	addwf	___bmul@product,f
 15992  1623                     l4373:
 15993  1623  1003               	clrc
 15994  1624  0DA0               	rlf	___bmul@multiplicand,f
 15995  1625  1003               	clrc
 15996  1626  0CA3               	rrf	___bmul@multiplier,f
 15997  1627  0823               	movf	___bmul@multiplier,w
 15998  1628  1D03               	btfss	3,2
 15999  1629  2E1D               	goto	l4369
 16000  162A  0822               	movf	___bmul@product,w
 16001  162B  0008               	return
 16002  162C                     __end_of___bmul:
 16003                           
 16004                           	psect	text60
 16005  0B28                     __ptext60:	
 16006 ;; *************** function ___awdiv *****************
 16007 ;; Defined at:
 16008 ;;		line 5 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/awdiv.c"
 16009 ;; Parameters:    Size  Location     Type
 16010 ;;  divisor         2    6[BANK0 ] int 
 16011 ;;  dividend        2    8[BANK0 ] int 
 16012 ;; Auto vars:     Size  Location     Type
 16013 ;;  quotient        2   13[BANK0 ] int 
 16014 ;;  sign            1   12[BANK0 ] unsigned char 
 16015 ;;  counter         1   11[BANK0 ] unsigned char 
 16016 ;; Return value:  Size  Location     Type
 16017 ;;                  2    6[BANK0 ] int 
 16018 ;; Registers used:
 16019 ;;		wreg, status,2, status,0
 16020 ;; Tracked objects:
 16021 ;;		On entry : 3F/0
 16022 ;;		On exit  : 3F/0
 16023 ;;		Unchanged: 0/0
 16024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16025 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16026 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16027 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16028 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16029 ;;Total ram usage:        9 bytes
 16030 ;; Hardware stack levels used:    1
 16031 ;; Hardware stack levels required when called:    4
 16032 ;; This function calls:
 16033 ;;		Nothing
 16034 ;; This function is called by:
 16035 ;;		_NEMS_recalculate_program
 16036 ;;		__sprintf_u8b
 16037 ;; This function uses a non-reentrant model
 16038 ;;
 16039                           
 16040                           
 16041                           ;psect for function ___awdiv
 16042  0B28                     ___awdiv:
 16043                           
 16044                           ;incstack = 0
 16045                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 16046  0B28  01AC               	clrf	___awdiv@sign
 16047  0B29  1FA7               	btfss	___awdiv@divisor+1,7
 16048  0B2A  2B32               	goto	l3117
 16049  0B2B  09A6               	comf	___awdiv@divisor,f
 16050  0B2C  09A7               	comf	___awdiv@divisor+1,f
 16051  0B2D  0AA6               	incf	___awdiv@divisor,f
 16052  0B2E  1903               	skipnz
 16053  0B2F  0AA7               	incf	___awdiv@divisor+1,f
 16054  0B30  01AC               	clrf	___awdiv@sign
 16055  0B31  0AAC               	incf	___awdiv@sign,f
 16056  0B32                     l3117:
 16057  0B32  1FA9               	btfss	___awdiv@dividend+1,7
 16058  0B33  2B3D               	goto	l3123
 16059  0B34  09A8               	comf	___awdiv@dividend,f
 16060  0B35  09A9               	comf	___awdiv@dividend+1,f
 16061  0B36  0AA8               	incf	___awdiv@dividend,f
 16062  0B37  1903               	skipnz
 16063  0B38  0AA9               	incf	___awdiv@dividend+1,f
 16064  0B39  3001               	movlw	1
 16065  0B3A  00AA               	movwf	??___awdiv
 16066  0B3B  082A               	movf	??___awdiv,w
 16067  0B3C  06AC               	xorwf	___awdiv@sign,f
 16068  0B3D                     l3123:
 16069  0B3D  01AD               	clrf	___awdiv@quotient
 16070  0B3E  01AE               	clrf	___awdiv@quotient+1
 16071  0B3F  0826               	movf	___awdiv@divisor,w
 16072  0B40  0427               	iorwf	___awdiv@divisor+1,w
 16073  0B41  1903               	btfsc	3,2
 16074  0B42  2B6C               	goto	l3145
 16075  0B43  01AB               	clrf	___awdiv@counter
 16076  0B44  0AAB               	incf	___awdiv@counter,f
 16077  0B45                     l3133:
 16078  0B45  1BA7               	btfsc	___awdiv@divisor+1,7
 16079  0B46  2B51               	goto	l3135
 16080  0B47  3001               	movlw	1
 16081  0B48                     u1445:
 16082  0B48  35A6               	lslf	___awdiv@divisor,f
 16083  0B49  0DA7               	rlf	___awdiv@divisor+1,f
 16084  0B4A  0B89               	decfsz	9,f
 16085  0B4B  2B48               	goto	u1445
 16086  0B4C  3001               	movlw	1
 16087  0B4D  00AA               	movwf	??___awdiv
 16088  0B4E  082A               	movf	??___awdiv,w
 16089  0B4F  07AB               	addwf	___awdiv@counter,f
 16090  0B50  2B45               	goto	l3133
 16091  0B51                     l3135:
 16092  0B51  3001               	movlw	1
 16093  0B52                     u1465:
 16094  0B52  35AD               	lslf	___awdiv@quotient,f
 16095  0B53  0DAE               	rlf	___awdiv@quotient+1,f
 16096  0B54  0B89               	decfsz	9,f
 16097  0B55  2B52               	goto	u1465
 16098  0B56  0827               	movf	___awdiv@divisor+1,w
 16099  0B57  0229               	subwf	___awdiv@dividend+1,w
 16100  0B58  1D03               	skipz
 16101  0B59  2B5C               	goto	u1475
 16102  0B5A  0826               	movf	___awdiv@divisor,w
 16103  0B5B  0228               	subwf	___awdiv@dividend,w
 16104  0B5C                     u1475:
 16105  0B5C  1C03               	skipc
 16106  0B5D  2B63               	goto	l3141
 16107  0B5E  0826               	movf	___awdiv@divisor,w
 16108  0B5F  02A8               	subwf	___awdiv@dividend,f
 16109  0B60  0827               	movf	___awdiv@divisor+1,w
 16110  0B61  3BA9               	subwfb	___awdiv@dividend+1,f
 16111  0B62  142D               	bsf	___awdiv@quotient,0
 16112  0B63                     l3141:
 16113  0B63  3001               	movlw	1
 16114  0B64                     u1485:
 16115  0B64  36A7               	lsrf	___awdiv@divisor+1,f
 16116  0B65  0CA6               	rrf	___awdiv@divisor,f
 16117  0B66  0B89               	decfsz	9,f
 16118  0B67  2B64               	goto	u1485
 16119  0B68  3001               	movlw	1
 16120  0B69  02AB               	subwf	___awdiv@counter,f
 16121  0B6A  1D03               	btfss	3,2
 16122  0B6B  2B51               	goto	l3135
 16123  0B6C                     l3145:
 16124  0B6C  082C               	movf	___awdiv@sign,w
 16125  0B6D  1903               	btfsc	3,2
 16126  0B6E  2B74               	goto	l3149
 16127  0B6F  09AD               	comf	___awdiv@quotient,f
 16128  0B70  09AE               	comf	___awdiv@quotient+1,f
 16129  0B71  0AAD               	incf	___awdiv@quotient,f
 16130  0B72  1903               	skipnz
 16131  0B73  0AAE               	incf	___awdiv@quotient+1,f
 16132  0B74                     l3149:
 16133  0B74  082E               	movf	___awdiv@quotient+1,w
 16134  0B75  00A7               	movwf	?___awdiv+1
 16135  0B76  082D               	movf	___awdiv@quotient,w
 16136  0B77  00A6               	movwf	?___awdiv
 16137  0B78  0008               	return
 16138  0B79                     __end_of___awdiv:
 16139                           
 16140                           	psect	text61
 16141  0687                     __ptext61:	
 16142 ;; *************** function _NEMS_calculate_ramp *****************
 16143 ;; Defined at:
 16144 ;;		line 658 in file "NEMS.c"
 16145 ;; Parameters:    Size  Location     Type
 16146 ;;		None
 16147 ;; Auto vars:     Size  Location     Type
 16148 ;;  i               1   27[BANK0 ] unsigned char 
 16149 ;; Return value:  Size  Location     Type
 16150 ;;                  1    wreg      void 
 16151 ;; Registers used:
 16152 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16153 ;; Tracked objects:
 16154 ;;		On entry : 3F/0
 16155 ;;		On exit  : 3F/0
 16156 ;;		Unchanged: 0/0
 16157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16159 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16160 ;;      Temps:          0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16161 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16162 ;;Total ram usage:       14 bytes
 16163 ;; Hardware stack levels used:    1
 16164 ;; Hardware stack levels required when called:    5
 16165 ;; This function calls:
 16166 ;;		___lwdiv
 16167 ;;		___wmul
 16168 ;; This function is called by:
 16169 ;;		_NEMS_recalculate_program
 16170 ;; This function uses a non-reentrant model
 16171 ;;
 16172                           
 16173                           
 16174                           ;psect for function _NEMS_calculate_ramp
 16175  0687                     _NEMS_calculate_ramp:
 16176                           
 16177                           ;NEMS.c: 660:     unsigned char i;;NEMS.c: 662:     for (i = 0; i < waveform.ramp_up_pul
      +                          ses; i++) {
 16178                           
 16179                           ;incstack = 0
 16180                           ; Regs used in _NEMS_calculate_ramp: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16181  0687  01BB               	clrf	NEMS_calculate_ramp@i
 16182  0688                     l4357:
 16183  0688  301A               	movlw	26
 16184  0689  0086               	movwf	6
 16185  068A  3027               	movlw	39
 16186  068B  0087               	movwf	7
 16187  068C  3F40               	moviw [0]fsr1
 16188  068D  00AE               	movwf	??_NEMS_calculate_ramp
 16189  068E  3F41               	moviw [1]fsr1
 16190  068F  00AF               	movwf	??_NEMS_calculate_ramp+1
 16191  0690  083B               	movf	NEMS_calculate_ramp@i,w
 16192  0691  00B0               	movwf	??_NEMS_calculate_ramp+2
 16193  0692  01B1               	clrf	??_NEMS_calculate_ramp+3
 16194  0693  082F               	movf	??_NEMS_calculate_ramp+1,w
 16195  0694  0231               	subwf	??_NEMS_calculate_ramp+3,w
 16196  0695  1D03               	skipz
 16197  0696  2E99               	goto	u2485
 16198  0697  082E               	movf	??_NEMS_calculate_ramp,w
 16199  0698  0230               	subwf	??_NEMS_calculate_ramp+2,w
 16200  0699                     u2485:
 16201  0699  1803               	btfsc	3,0
 16202  069A  2F14               	goto	l4359
 16203                           
 16204                           ;NEMS.c: 663:         waveform.ramp_up_amplitude[i] = (unsigned short)(i*waveform.progra
      +                          m_amplitude)/waveform.ramp_up_pulses;
 16205  069B  301A               	movlw	26
 16206  069C  0086               	movwf	6
 16207  069D  3027               	movlw	39
 16208  069E  0087               	movwf	7
 16209  069F  3F40               	moviw [0]fsr1
 16210  06A0  00A6               	movwf	___lwdiv@divisor
 16211  06A1  3F41               	moviw [1]fsr1
 16212  06A2  00A7               	movwf	___lwdiv@divisor+1
 16213  06A3  083B               	movf	NEMS_calculate_ramp@i,w
 16214  06A4  00AE               	movwf	??_NEMS_calculate_ramp
 16215  06A5  01AF               	clrf	??_NEMS_calculate_ramp+1
 16216  06A6  082E               	movf	??_NEMS_calculate_ramp,w
 16217  06A7  00A0               	movwf	___wmul@multiplier
 16218  06A8  082F               	movf	??_NEMS_calculate_ramp+1,w
 16219  06A9  00A1               	movwf	___wmul@multiplier+1
 16220  06AA  303C               	movlw	60
 16221  06AB  0086               	movwf	6
 16222  06AC  3026               	movlw	38
 16223  06AD  0087               	movwf	7
 16224  06AE  3150               	addfsr 1,16
 16225  06AF  0801               	movf	1,w
 16226  06B0  00B0               	movwf	??_NEMS_calculate_ramp+2
 16227  06B1  01B1               	clrf	??_NEMS_calculate_ramp+3
 16228  06B2  0830               	movf	??_NEMS_calculate_ramp+2,w
 16229  06B3  00A2               	movwf	___wmul@multiplicand
 16230  06B4  0831               	movf	??_NEMS_calculate_ramp+3,w
 16231  06B5  00A3               	movwf	___wmul@multiplicand+1
 16232  06B6  3188  201D  3186   	fcall	___wmul
 16233  06B9  0821               	movf	?___wmul+1,w
 16234  06BA  00A9               	movwf	___lwdiv@dividend+1
 16235  06BB  0820               	movf	?___wmul,w
 16236  06BC  00A8               	movwf	___lwdiv@dividend
 16237  06BD  3189  21E5  3186   	fcall	___lwdiv
 16238  06C0  0826               	movf	?___lwdiv,w
 16239  06C1  00B2               	movwf	??_NEMS_calculate_ramp+4
 16240  06C2  083B               	movf	NEMS_calculate_ramp@i,w
 16241  06C3  00B3               	movwf	??_NEMS_calculate_ramp+5
 16242  06C4  01B4               	clrf	??_NEMS_calculate_ramp+6
 16243  06C5  3052               	movlw	82
 16244  06C6  00B5               	movwf	??_NEMS_calculate_ramp+7
 16245  06C7  3026               	movlw	38
 16246  06C8  00B6               	movwf	??_NEMS_calculate_ramp+8
 16247  06C9  0833               	movf	??_NEMS_calculate_ramp+5,w
 16248  06CA  0735               	addwf	??_NEMS_calculate_ramp+7,w
 16249  06CB  00B7               	movwf	??_NEMS_calculate_ramp+9
 16250  06CC  0834               	movf	??_NEMS_calculate_ramp+6,w
 16251  06CD  3D36               	addwfc	??_NEMS_calculate_ramp+8,w
 16252  06CE  00B8               	movwf	??_NEMS_calculate_ramp+10
 16253  06CF  0837               	movf	??_NEMS_calculate_ramp+9,w
 16254  06D0  0086               	movwf	6
 16255  06D1  0838               	movf	??_NEMS_calculate_ramp+10,w
 16256  06D2  0087               	movwf	7
 16257  06D3  0832               	movf	??_NEMS_calculate_ramp+4,w
 16258  06D4  0081               	movwf	1
 16259                           
 16260                           ;NEMS.c: 664:         waveform.ramp_up_amplitude2[i] = (unsigned short)(i*waveform.progr
      +                          am_amplitude2)/waveform.ramp_up_pulses;
 16261  06D5  301A               	movlw	26
 16262  06D6  0086               	movwf	6
 16263  06D7  3027               	movlw	39
 16264  06D8  0087               	movwf	7
 16265  06D9  3F40               	moviw [0]fsr1
 16266  06DA  00A6               	movwf	___lwdiv@divisor
 16267  06DB  3F41               	moviw [1]fsr1
 16268  06DC  00A7               	movwf	___lwdiv@divisor+1
 16269  06DD  083B               	movf	NEMS_calculate_ramp@i,w
 16270  06DE  00AE               	movwf	??_NEMS_calculate_ramp
 16271  06DF  01AF               	clrf	??_NEMS_calculate_ramp+1
 16272  06E0  082E               	movf	??_NEMS_calculate_ramp,w
 16273  06E1  00A0               	movwf	___wmul@multiplier
 16274  06E2  082F               	movf	??_NEMS_calculate_ramp+1,w
 16275  06E3  00A1               	movwf	___wmul@multiplier+1
 16276  06E4  303C               	movlw	60
 16277  06E5  0086               	movwf	6
 16278  06E6  3026               	movlw	38
 16279  06E7  0087               	movwf	7
 16280  06E8  3154               	addfsr 1,20
 16281  06E9  0801               	movf	1,w
 16282  06EA  00B0               	movwf	??_NEMS_calculate_ramp+2
 16283  06EB  01B1               	clrf	??_NEMS_calculate_ramp+3
 16284  06EC  0830               	movf	??_NEMS_calculate_ramp+2,w
 16285  06ED  00A2               	movwf	___wmul@multiplicand
 16286  06EE  0831               	movf	??_NEMS_calculate_ramp+3,w
 16287  06EF  00A3               	movwf	___wmul@multiplicand+1
 16288  06F0  3188  201D  3186   	fcall	___wmul
 16289  06F3  0821               	movf	?___wmul+1,w
 16290  06F4  00A9               	movwf	___lwdiv@dividend+1
 16291  06F5  0820               	movf	?___wmul,w
 16292  06F6  00A8               	movwf	___lwdiv@dividend
 16293  06F7  3189  21E5  3186   	fcall	___lwdiv
 16294  06FA  0826               	movf	?___lwdiv,w
 16295  06FB  00B2               	movwf	??_NEMS_calculate_ramp+4
 16296  06FC  083B               	movf	NEMS_calculate_ramp@i,w
 16297  06FD  00B3               	movwf	??_NEMS_calculate_ramp+5
 16298  06FE  01B4               	clrf	??_NEMS_calculate_ramp+6
 16299  06FF  30B6               	movlw	182
 16300  0700  00B5               	movwf	??_NEMS_calculate_ramp+7
 16301  0701  3026               	movlw	38
 16302  0702  00B6               	movwf	??_NEMS_calculate_ramp+8
 16303  0703  0833               	movf	??_NEMS_calculate_ramp+5,w
 16304  0704  0735               	addwf	??_NEMS_calculate_ramp+7,w
 16305  0705  00B7               	movwf	??_NEMS_calculate_ramp+9
 16306  0706  0834               	movf	??_NEMS_calculate_ramp+6,w
 16307  0707  3D36               	addwfc	??_NEMS_calculate_ramp+8,w
 16308  0708  00B8               	movwf	??_NEMS_calculate_ramp+10
 16309  0709  0837               	movf	??_NEMS_calculate_ramp+9,w
 16310  070A  0086               	movwf	6
 16311  070B  0838               	movf	??_NEMS_calculate_ramp+10,w
 16312  070C  0087               	movwf	7
 16313  070D  0832               	movf	??_NEMS_calculate_ramp+4,w
 16314  070E  0081               	movwf	1
 16315                           
 16316                           ;NEMS.c: 665:     }
 16317  070F  3001               	movlw	1
 16318  0710  00AE               	movwf	??_NEMS_calculate_ramp
 16319  0711  082E               	movf	??_NEMS_calculate_ramp,w
 16320  0712  07BB               	addwf	NEMS_calculate_ramp@i,f
 16321  0713  2E88               	goto	l4357
 16322  0714                     l4359:
 16323                           
 16324                           ;NEMS.c: 667:     for (i = 0; i < waveform.ramp_down_pulses; i++) {
 16325  0714  01BB               	clrf	NEMS_calculate_ramp@i
 16326  0715                     l4365:
 16327  0715  30E6               	movlw	230
 16328  0716  0086               	movwf	6
 16329  0717  3027               	movlw	39
 16330  0718  0087               	movwf	7
 16331  0719  3F40               	moviw [0]fsr1
 16332  071A  00AE               	movwf	??_NEMS_calculate_ramp
 16333  071B  3F41               	moviw [1]fsr1
 16334  071C  00AF               	movwf	??_NEMS_calculate_ramp+1
 16335  071D  083B               	movf	NEMS_calculate_ramp@i,w
 16336  071E  00B0               	movwf	??_NEMS_calculate_ramp+2
 16337  071F  01B1               	clrf	??_NEMS_calculate_ramp+3
 16338  0720  082F               	movf	??_NEMS_calculate_ramp+1,w
 16339  0721  0231               	subwf	??_NEMS_calculate_ramp+3,w
 16340  0722  1D03               	skipz
 16341  0723  2F26               	goto	u2495
 16342  0724  082E               	movf	??_NEMS_calculate_ramp,w
 16343  0725  0230               	subwf	??_NEMS_calculate_ramp+2,w
 16344  0726                     u2495:
 16345  0726  1803               	btfsc	3,0
 16346  0727  0008               	return
 16347                           
 16348                           ;NEMS.c: 668:         waveform.ramp_down_amplitude[i] = (unsigned short)((waveform.ramp_
      +                          down_pulses-i-1)*waveform.program_amplitude)/waveform.ramp_down_pulses;
 16349  0728  30E6               	movlw	230
 16350  0729  0086               	movwf	6
 16351  072A  3027               	movlw	39
 16352  072B  0087               	movwf	7
 16353  072C  3F40               	moviw [0]fsr1
 16354  072D  00A6               	movwf	___lwdiv@divisor
 16355  072E  3F41               	moviw [1]fsr1
 16356  072F  00A7               	movwf	___lwdiv@divisor+1
 16357  0730  30E6               	movlw	230
 16358  0731  0086               	movwf	6
 16359  0732  3027               	movlw	39
 16360  0733  0087               	movwf	7
 16361  0734  3F40               	moviw [0]fsr1
 16362  0735  00AE               	movwf	??_NEMS_calculate_ramp
 16363  0736  3F41               	moviw [1]fsr1
 16364  0737  00AF               	movwf	??_NEMS_calculate_ramp+1
 16365  0738  082F               	movf	??_NEMS_calculate_ramp+1,w
 16366  0739  00B1               	movwf	??_NEMS_calculate_ramp+3
 16367  073A  083B               	movf	NEMS_calculate_ramp@i,w
 16368  073B  022E               	subwf	??_NEMS_calculate_ramp,w
 16369  073C  00B0               	movwf	??_NEMS_calculate_ramp+2
 16370  073D  1C03               	skipc
 16371  073E  03B1               	decf	??_NEMS_calculate_ramp+3,f
 16372  073F  0830               	movf	??_NEMS_calculate_ramp+2,w
 16373  0740  3EFF               	addlw	255
 16374  0741  00A0               	movwf	___wmul@multiplier
 16375  0742  30FF               	movlw	255
 16376  0743  3D31               	addwfc	??_NEMS_calculate_ramp+3,w
 16377  0744  00A1               	movwf	___wmul@multiplier+1
 16378  0745  303C               	movlw	60
 16379  0746  0086               	movwf	6
 16380  0747  3026               	movlw	38
 16381  0748  0087               	movwf	7
 16382  0749  3150               	addfsr 1,16
 16383  074A  0801               	movf	1,w
 16384  074B  00B2               	movwf	??_NEMS_calculate_ramp+4
 16385  074C  01B3               	clrf	??_NEMS_calculate_ramp+5
 16386  074D  0832               	movf	??_NEMS_calculate_ramp+4,w
 16387  074E  00A2               	movwf	___wmul@multiplicand
 16388  074F  0833               	movf	??_NEMS_calculate_ramp+5,w
 16389  0750  00A3               	movwf	___wmul@multiplicand+1
 16390  0751  3188  201D  3186   	fcall	___wmul
 16391  0754  0821               	movf	?___wmul+1,w
 16392  0755  00A9               	movwf	___lwdiv@dividend+1
 16393  0756  0820               	movf	?___wmul,w
 16394  0757  00A8               	movwf	___lwdiv@dividend
 16395  0758  3189  21E5  3186   	fcall	___lwdiv
 16396  075B  0826               	movf	?___lwdiv,w
 16397  075C  00B4               	movwf	??_NEMS_calculate_ramp+6
 16398  075D  083B               	movf	NEMS_calculate_ramp@i,w
 16399  075E  00B5               	movwf	??_NEMS_calculate_ramp+7
 16400  075F  01B6               	clrf	??_NEMS_calculate_ramp+8
 16401  0760  301E               	movlw	30
 16402  0761  00B7               	movwf	??_NEMS_calculate_ramp+9
 16403  0762  3027               	movlw	39
 16404  0763  00B8               	movwf	??_NEMS_calculate_ramp+10
 16405  0764  0835               	movf	??_NEMS_calculate_ramp+7,w
 16406  0765  0737               	addwf	??_NEMS_calculate_ramp+9,w
 16407  0766  00B9               	movwf	??_NEMS_calculate_ramp+11
 16408  0767  0836               	movf	??_NEMS_calculate_ramp+8,w
 16409  0768  3D38               	addwfc	??_NEMS_calculate_ramp+10,w
 16410  0769  00BA               	movwf	??_NEMS_calculate_ramp+12
 16411  076A  0839               	movf	??_NEMS_calculate_ramp+11,w
 16412  076B  0086               	movwf	6
 16413  076C  083A               	movf	??_NEMS_calculate_ramp+12,w
 16414  076D  0087               	movwf	7
 16415  076E  0834               	movf	??_NEMS_calculate_ramp+6,w
 16416  076F  0081               	movwf	1
 16417                           
 16418                           ;NEMS.c: 669:         waveform.ramp_down_amplitude2[i] = (unsigned short)((waveform.ramp
      +                          _down_pulses-i-1)*waveform.program_amplitude2)/waveform.ramp_down_pulses;
 16419  0770  30E6               	movlw	230
 16420  0771  0086               	movwf	6
 16421  0772  3027               	movlw	39
 16422  0773  0087               	movwf	7
 16423  0774  3F40               	moviw [0]fsr1
 16424  0775  00A6               	movwf	___lwdiv@divisor
 16425  0776  3F41               	moviw [1]fsr1
 16426  0777  00A7               	movwf	___lwdiv@divisor+1
 16427  0778  30E6               	movlw	230
 16428  0779  0086               	movwf	6
 16429  077A  3027               	movlw	39
 16430  077B  0087               	movwf	7
 16431  077C  3F40               	moviw [0]fsr1
 16432  077D  00AE               	movwf	??_NEMS_calculate_ramp
 16433  077E  3F41               	moviw [1]fsr1
 16434  077F  00AF               	movwf	??_NEMS_calculate_ramp+1
 16435  0780  082F               	movf	??_NEMS_calculate_ramp+1,w
 16436  0781  00B1               	movwf	??_NEMS_calculate_ramp+3
 16437  0782  083B               	movf	NEMS_calculate_ramp@i,w
 16438  0783  022E               	subwf	??_NEMS_calculate_ramp,w
 16439  0784  00B0               	movwf	??_NEMS_calculate_ramp+2
 16440  0785  1C03               	skipc
 16441  0786  03B1               	decf	??_NEMS_calculate_ramp+3,f
 16442  0787  0830               	movf	??_NEMS_calculate_ramp+2,w
 16443  0788  3EFF               	addlw	255
 16444  0789  00A0               	movwf	___wmul@multiplier
 16445  078A  30FF               	movlw	255
 16446  078B  3D31               	addwfc	??_NEMS_calculate_ramp+3,w
 16447  078C  00A1               	movwf	___wmul@multiplier+1
 16448  078D  303C               	movlw	60
 16449  078E  0086               	movwf	6
 16450  078F  3026               	movlw	38
 16451  0790  0087               	movwf	7
 16452  0791  3154               	addfsr 1,20
 16453  0792  0801               	movf	1,w
 16454  0793  00B2               	movwf	??_NEMS_calculate_ramp+4
 16455  0794  01B3               	clrf	??_NEMS_calculate_ramp+5
 16456  0795  0832               	movf	??_NEMS_calculate_ramp+4,w
 16457  0796  00A2               	movwf	___wmul@multiplicand
 16458  0797  0833               	movf	??_NEMS_calculate_ramp+5,w
 16459  0798  00A3               	movwf	___wmul@multiplicand+1
 16460  0799  3188  201D  3186   	fcall	___wmul
 16461  079C  0821               	movf	?___wmul+1,w
 16462  079D  00A9               	movwf	___lwdiv@dividend+1
 16463  079E  0820               	movf	?___wmul,w
 16464  079F  00A8               	movwf	___lwdiv@dividend
 16465  07A0  3189  21E5  3186   	fcall	___lwdiv
 16466  07A3  0826               	movf	?___lwdiv,w
 16467  07A4  00B4               	movwf	??_NEMS_calculate_ramp+6
 16468  07A5  083B               	movf	NEMS_calculate_ramp@i,w
 16469  07A6  00B5               	movwf	??_NEMS_calculate_ramp+7
 16470  07A7  01B6               	clrf	??_NEMS_calculate_ramp+8
 16471  07A8  3082               	movlw	130
 16472  07A9  00B7               	movwf	??_NEMS_calculate_ramp+9
 16473  07AA  3027               	movlw	39
 16474  07AB  00B8               	movwf	??_NEMS_calculate_ramp+10
 16475  07AC  0835               	movf	??_NEMS_calculate_ramp+7,w
 16476  07AD  0737               	addwf	??_NEMS_calculate_ramp+9,w
 16477  07AE  00B9               	movwf	??_NEMS_calculate_ramp+11
 16478  07AF  0836               	movf	??_NEMS_calculate_ramp+8,w
 16479  07B0  3D38               	addwfc	??_NEMS_calculate_ramp+10,w
 16480  07B1  00BA               	movwf	??_NEMS_calculate_ramp+12
 16481  07B2  0839               	movf	??_NEMS_calculate_ramp+11,w
 16482  07B3  0086               	movwf	6
 16483  07B4  083A               	movf	??_NEMS_calculate_ramp+12,w
 16484  07B5  0087               	movwf	7
 16485  07B6  0834               	movf	??_NEMS_calculate_ramp+6,w
 16486  07B7  0081               	movwf	1
 16487                           
 16488                           ;NEMS.c: 670:     }
 16489  07B8  3001               	movlw	1
 16490  07B9  00AE               	movwf	??_NEMS_calculate_ramp
 16491  07BA  082E               	movf	??_NEMS_calculate_ramp,w
 16492  07BB  07BB               	addwf	NEMS_calculate_ramp@i,f
 16493  07BC  2F15               	goto	l4365
 16494  07BD                     __end_of_NEMS_calculate_ramp:
 16495                           
 16496                           	psect	text62
 16497  081D                     __ptext62:	
 16498 ;; *************** function ___wmul *****************
 16499 ;; Defined at:
 16500 ;;		line 15 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/Umul16.c"
 16501 ;; Parameters:    Size  Location     Type
 16502 ;;  multiplier      2    0[BANK0 ] unsigned int 
 16503 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 16504 ;; Auto vars:     Size  Location     Type
 16505 ;;  product         2    4[BANK0 ] unsigned int 
 16506 ;; Return value:  Size  Location     Type
 16507 ;;                  2    0[BANK0 ] unsigned int 
 16508 ;; Registers used:
 16509 ;;		wreg, status,2, status,0
 16510 ;; Tracked objects:
 16511 ;;		On entry : 3F/0
 16512 ;;		On exit  : 3F/0
 16513 ;;		Unchanged: 0/0
 16514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16515 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16516 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16518 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16519 ;;Total ram usage:        6 bytes
 16520 ;; Hardware stack levels used:    1
 16521 ;; Hardware stack levels required when called:    4
 16522 ;; This function calls:
 16523 ;;		Nothing
 16524 ;; This function is called by:
 16525 ;;		_NEMS_recalculate_program
 16526 ;;		_NEMS_calculate_ramp
 16527 ;; This function uses a non-reentrant model
 16528 ;;
 16529                           
 16530                           
 16531                           ;psect for function ___wmul
 16532  081D                     ___wmul:
 16533                           
 16534                           ;incstack = 0
 16535                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 16536  081D  01A4               	clrf	___wmul@product
 16537  081E  01A5               	clrf	___wmul@product+1
 16538  081F                     l4317:
 16539  081F  1C20               	btfss	___wmul@multiplier,0
 16540  0820  2825               	goto	l1185
 16541  0821  0822               	movf	___wmul@multiplicand,w
 16542  0822  07A4               	addwf	___wmul@product,f
 16543  0823  0823               	movf	___wmul@multiplicand+1,w
 16544  0824  3DA5               	addwfc	___wmul@product+1,f
 16545  0825                     l1185:
 16546  0825  3001               	movlw	1
 16547  0826                     u2405:
 16548  0826  35A2               	lslf	___wmul@multiplicand,f
 16549  0827  0DA3               	rlf	___wmul@multiplicand+1,f
 16550  0828  0B89               	decfsz	9,f
 16551  0829  2826               	goto	u2405
 16552  082A  3001               	movlw	1
 16553  082B                     u2415:
 16554  082B  36A1               	lsrf	___wmul@multiplier+1,f
 16555  082C  0CA0               	rrf	___wmul@multiplier,f
 16556  082D  0B89               	decfsz	9,f
 16557  082E  282B               	goto	u2415
 16558  082F  0820               	movf	___wmul@multiplier,w
 16559  0830  0421               	iorwf	___wmul@multiplier+1,w
 16560  0831  1D03               	btfss	3,2
 16561  0832  281F               	goto	l4317
 16562  0833  0825               	movf	___wmul@product+1,w
 16563  0834  00A1               	movwf	?___wmul+1
 16564  0835  0824               	movf	___wmul@product,w
 16565  0836  00A0               	movwf	?___wmul
 16566  0837  0008               	return
 16567  0838                     __end_of___wmul:
 16568                           
 16569                           	psect	text63
 16570  09E5                     __ptext63:	
 16571 ;; *************** function ___lwdiv *****************
 16572 ;; Defined at:
 16573 ;;		line 5 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/lwdiv.c"
 16574 ;; Parameters:    Size  Location     Type
 16575 ;;  divisor         2    6[BANK0 ] unsigned int 
 16576 ;;  dividend        2    8[BANK0 ] unsigned int 
 16577 ;; Auto vars:     Size  Location     Type
 16578 ;;  quotient        2   11[BANK0 ] unsigned int 
 16579 ;;  counter         1   13[BANK0 ] unsigned char 
 16580 ;; Return value:  Size  Location     Type
 16581 ;;                  2    6[BANK0 ] unsigned int 
 16582 ;; Registers used:
 16583 ;;		wreg, status,2, status,0
 16584 ;; Tracked objects:
 16585 ;;		On entry : 3F/0
 16586 ;;		On exit  : 3F/0
 16587 ;;		Unchanged: 0/0
 16588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16589 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16590 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16591 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16592 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16593 ;;Total ram usage:        8 bytes
 16594 ;; Hardware stack levels used:    1
 16595 ;; Hardware stack levels required when called:    4
 16596 ;; This function calls:
 16597 ;;		Nothing
 16598 ;; This function is called by:
 16599 ;;		_NEMS_recalculate_program
 16600 ;;		_NEMS_calculate_ramp
 16601 ;; This function uses a non-reentrant model
 16602 ;;
 16603                           
 16604                           
 16605                           ;psect for function ___lwdiv
 16606  09E5                     ___lwdiv:
 16607                           
 16608                           ;incstack = 0
 16609                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 16610  09E5  01AB               	clrf	___lwdiv@quotient
 16611  09E6  01AC               	clrf	___lwdiv@quotient+1
 16612  09E7  0826               	movf	___lwdiv@divisor,w
 16613  09E8  0427               	iorwf	___lwdiv@divisor+1,w
 16614  09E9  1903               	btfsc	3,2
 16615  09EA  2A14               	goto	l3053
 16616  09EB  01AD               	clrf	___lwdiv@counter
 16617  09EC  0AAD               	incf	___lwdiv@counter,f
 16618  09ED                     l3041:
 16619  09ED  1BA7               	btfsc	___lwdiv@divisor+1,7
 16620  09EE  29F9               	goto	l3043
 16621  09EF  3001               	movlw	1
 16622  09F0                     u1265:
 16623  09F0  35A6               	lslf	___lwdiv@divisor,f
 16624  09F1  0DA7               	rlf	___lwdiv@divisor+1,f
 16625  09F2  0B89               	decfsz	9,f
 16626  09F3  29F0               	goto	u1265
 16627  09F4  3001               	movlw	1
 16628  09F5  00AA               	movwf	??___lwdiv
 16629  09F6  082A               	movf	??___lwdiv,w
 16630  09F7  07AD               	addwf	___lwdiv@counter,f
 16631  09F8  29ED               	goto	l3041
 16632  09F9                     l3043:
 16633  09F9  3001               	movlw	1
 16634  09FA                     u1285:
 16635  09FA  35AB               	lslf	___lwdiv@quotient,f
 16636  09FB  0DAC               	rlf	___lwdiv@quotient+1,f
 16637  09FC  0B89               	decfsz	9,f
 16638  09FD  29FA               	goto	u1285
 16639  09FE  0827               	movf	___lwdiv@divisor+1,w
 16640  09FF  0229               	subwf	___lwdiv@dividend+1,w
 16641  0A00  1D03               	skipz
 16642  0A01  2A04               	goto	u1295
 16643  0A02  0826               	movf	___lwdiv@divisor,w
 16644  0A03  0228               	subwf	___lwdiv@dividend,w
 16645  0A04                     u1295:
 16646  0A04  1C03               	skipc
 16647  0A05  2A0B               	goto	l3049
 16648  0A06  0826               	movf	___lwdiv@divisor,w
 16649  0A07  02A8               	subwf	___lwdiv@dividend,f
 16650  0A08  0827               	movf	___lwdiv@divisor+1,w
 16651  0A09  3BA9               	subwfb	___lwdiv@dividend+1,f
 16652  0A0A  142B               	bsf	___lwdiv@quotient,0
 16653  0A0B                     l3049:
 16654  0A0B  3001               	movlw	1
 16655  0A0C                     u1305:
 16656  0A0C  36A7               	lsrf	___lwdiv@divisor+1,f
 16657  0A0D  0CA6               	rrf	___lwdiv@divisor,f
 16658  0A0E  0B89               	decfsz	9,f
 16659  0A0F  2A0C               	goto	u1305
 16660  0A10  3001               	movlw	1
 16661  0A11  02AD               	subwf	___lwdiv@counter,f
 16662  0A12  1D03               	btfss	3,2
 16663  0A13  29F9               	goto	l3043
 16664  0A14                     l3053:
 16665  0A14  082C               	movf	___lwdiv@quotient+1,w
 16666  0A15  00A7               	movwf	?___lwdiv+1
 16667  0A16  082B               	movf	___lwdiv@quotient,w
 16668  0A17  00A6               	movwf	?___lwdiv
 16669  0A18  0008               	return
 16670  0A19                     __end_of___lwdiv:
 16671                           
 16672                           	psect	text64
 16673  090C                     __ptext64:	
 16674 ;; *************** function _EUSART1_Read *****************
 16675 ;; Defined at:
 16676 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 16677 ;; Parameters:    Size  Location     Type
 16678 ;;		None
 16679 ;; Auto vars:     Size  Location     Type
 16680 ;;  readValue       1    1[BANK0 ] unsigned char 
 16681 ;; Return value:  Size  Location     Type
 16682 ;;                  1    wreg      unsigned char 
 16683 ;; Registers used:
 16684 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16685 ;; Tracked objects:
 16686 ;;		On entry : 0/0
 16687 ;;		On exit  : 3F/0
 16688 ;;		Unchanged: 0/0
 16689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16691 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16692 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16693 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16694 ;;Total ram usage:        2 bytes
 16695 ;; Hardware stack levels used:    1
 16696 ;; Hardware stack levels required when called:    4
 16697 ;; This function calls:
 16698 ;;		Nothing
 16699 ;; This function is called by:
 16700 ;;		_NEMS_message_handler
 16701 ;;		_NEMS_binary_command
 16702 ;;		_NEMS_get_packet
 16703 ;; This function uses a non-reentrant model
 16704 ;;
 16705                           
 16706                           
 16707                           ;psect for function _EUSART1_Read
 16708  090C                     _EUSART1_Read:
 16709  090C                     l4383:	
 16710                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 16711                           
 16712                           ;incstack = 0
 16713                           ; Regs used in _EUSART1_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 16714                           
 16715                           
 16716                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 16717  090C  0871               	movf	_eusart1RxCount,w	;volatile
 16718  090D  1903               	btfsc	3,2
 16719  090E  290C               	goto	l4383
 16720                           
 16721                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 16722  090F  0872               	movf	_eusart1RxTail,w	;volatile
 16723  0910  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 16724  0911  0086               	movwf	6
 16725  0912  3001               	movlw	1	; select bank2/3
 16726  0913  0087               	movwf	7
 16727  0914  0801               	movf	1,w
 16728  0915  0140               	movlb	0	; select bank0
 16729  0916  00A0               	movwf	??_EUSART1_Read
 16730  0917  0820               	movf	??_EUSART1_Read,w
 16731  0918  00D6               	movwf	_eusart1RxLastError	;volatile
 16732                           
 16733                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 16734  0919  0872               	movf	_eusart1RxTail,w
 16735  091A  3E20               	addlw	(low (_eusart1RxBuffer| (0+512)))& (0+255)
 16736  091B  0086               	movwf	6
 16737  091C  3002               	movlw	2	; select bank4/5
 16738  091D  0087               	movwf	7
 16739  091E  0801               	movf	1,w
 16740  091F  00A0               	movwf	??_EUSART1_Read
 16741  0920  0820               	movf	??_EUSART1_Read,w
 16742  0921  00A1               	movwf	EUSART1_Read@readValue
 16743  0922  3001               	movlw	1
 16744  0923  00A0               	movwf	??_EUSART1_Read
 16745  0924  0820               	movf	??_EUSART1_Read,w
 16746  0925  07F2               	addwf	_eusart1RxTail,f	;volatile
 16747                           
 16748                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 16749  0926  3040               	movlw	64
 16750  0927  0272               	subwf	_eusart1RxTail,w
 16751  0928  1803               	btfsc	3,0
 16752                           
 16753                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 16754  0929  01F2               	clrf	_eusart1RxTail	;volatile
 16755                           
 16756                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
 16757  092A  014E               	movlb	14	; select bank14
 16758  092B  1299               	bcf	25,5	;volatile
 16759                           
 16760                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 16761  092C  3001               	movlw	1
 16762  092D  02F1               	subwf	_eusart1RxCount,f	;volatile
 16763                           
 16764                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
 16765  092E  1699               	bsf	25,5	;volatile
 16766                           
 16767                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 16768  092F  0140               	movlb	0	; select bank0
 16769  0930  0821               	movf	EUSART1_Read@readValue,w
 16770  0931  0008               	return
 16771  0932                     __end_of_EUSART1_Read:
 16772                           
 16773                           	psect	text65
 16774  0A8E                     __ptext65:	
 16775 ;; *************** function _NEMS_initialize *****************
 16776 ;; Defined at:
 16777 ;;		line 71 in file "NEMS.c"
 16778 ;; Parameters:    Size  Location     Type
 16779 ;;		None
 16780 ;; Auto vars:     Size  Location     Type
 16781 ;;		None
 16782 ;; Return value:  Size  Location     Type
 16783 ;;                  1    wreg      void 
 16784 ;; Registers used:
 16785 ;;		wreg, status,2, status,0, pclath, cstack
 16786 ;; Tracked objects:
 16787 ;;		On entry : 3F/E
 16788 ;;		On exit  : 3F/0
 16789 ;;		Unchanged: 0/0
 16790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16793 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16794 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16795 ;;Total ram usage:        1 bytes
 16796 ;; Hardware stack levels used:    1
 16797 ;; Hardware stack levels required when called:    5
 16798 ;; This function calls:
 16799 ;;		_DAC1_SetOutput
 16800 ;;		_TMR0_SetInterruptHandler
 16801 ;;		_TMR0_StopTimer
 16802 ;; This function is called by:
 16803 ;;		_main
 16804 ;; This function uses a non-reentrant model
 16805 ;;
 16806                           
 16807                           
 16808                           ;psect for function _NEMS_initialize
 16809  0A8E                     _NEMS_initialize:
 16810                           
 16811                           ;NEMS.c: 74:     TMR0_StopTimer();
 16812                           
 16813                           ;incstack = 0
 16814                           ; Regs used in _NEMS_initialize: [wreg+status,2+status,0+pclath+cstack]
 16815  0A8E  3195  2579  318A   	fcall	_TMR0_StopTimer
 16816                           
 16817                           ;NEMS.c: 78:     program.amplitude = 1;
 16818  0A91  3001               	movlw	1
 16819  0A92  0140               	movlb	0	; select bank0
 16820  0A93  00A2               	movwf	??_NEMS_initialize
 16821  0A94  0822               	movf	??_NEMS_initialize,w
 16822  0A95  00D7               	movwf	_program	;volatile
 16823                           
 16824                           ;NEMS.c: 79:     program.amplitude2 = 1;
 16825  0A96  3001               	movlw	1
 16826  0A97  00A2               	movwf	??_NEMS_initialize
 16827  0A98  0822               	movf	??_NEMS_initialize,w
 16828  0A99  00D8               	movwf	_program+1	;volatile
 16829                           
 16830                           ;NEMS.c: 80:     program.frequency = 35;
 16831  0A9A  3023               	movlw	35
 16832  0A9B  00A2               	movwf	??_NEMS_initialize
 16833  0A9C  0822               	movf	??_NEMS_initialize,w
 16834  0A9D  00D9               	movwf	_program+2	;volatile
 16835                           
 16836                           ;NEMS.c: 81:     program.phase_duration = 1;
 16837  0A9E  3001               	movlw	1
 16838  0A9F  00A2               	movwf	??_NEMS_initialize
 16839  0AA0  0822               	movf	??_NEMS_initialize,w
 16840  0AA1  00DA               	movwf	_program+3	;volatile
 16841                           
 16842                           ;NEMS.c: 82:     program.ON_time = 2;
 16843  0AA2  3002               	movlw	2
 16844  0AA3  00A2               	movwf	??_NEMS_initialize
 16845  0AA4  0822               	movf	??_NEMS_initialize,w
 16846  0AA5  00DC               	movwf	_program+5	;volatile
 16847                           
 16848                           ;NEMS.c: 83:     program.OFF_time = 6;
 16849  0AA6  3006               	movlw	6
 16850  0AA7  00A2               	movwf	??_NEMS_initialize
 16851  0AA8  0822               	movf	??_NEMS_initialize,w
 16852  0AA9  00DD               	movwf	_program+6	;volatile
 16853                           
 16854                           ;NEMS.c: 84:     program.contractions = 5;
 16855  0AAA  3005               	movlw	5
 16856  0AAB  00A2               	movwf	??_NEMS_initialize
 16857  0AAC  0822               	movf	??_NEMS_initialize,w
 16858  0AAD  00DE               	movwf	_program+7	;volatile
 16859                           
 16860                           ;NEMS.c: 85:     program.ramp_up = 10;
 16861  0AAE  300A               	movlw	10
 16862  0AAF  00A2               	movwf	??_NEMS_initialize
 16863  0AB0  0822               	movf	??_NEMS_initialize,w
 16864  0AB1  00DF               	movwf	_program+8	;volatile
 16865                           
 16866                           ;NEMS.c: 86:     program.ramp_down = 10;
 16867  0AB2  300A               	movlw	10
 16868  0AB3  00A2               	movwf	??_NEMS_initialize
 16869  0AB4  0822               	movf	??_NEMS_initialize,w
 16870  0AB5  00E0               	movwf	_program+9	;volatile
 16871                           
 16872                           ;NEMS.c: 87:     program.symmetry_factor = 1;
 16873  0AB6  3001               	movlw	1
 16874  0AB7  00A2               	movwf	??_NEMS_initialize
 16875  0AB8  0822               	movf	??_NEMS_initialize,w
 16876  0AB9  00DB               	movwf	_program+4	;volatile
 16877                           
 16878                           ;NEMS.c: 88:     program.channel1 = 0;
 16879  0ABA  01E1               	clrf	_program+10	;volatile
 16880                           
 16881                           ;NEMS.c: 89:     program.channel2 = 0;
 16882  0ABB  01E2               	clrf	_program+11	;volatile
 16883                           
 16884                           ;NEMS.c: 90:     program.channel3 = 0;
 16885  0ABC  01E3               	clrf	_program+12	;volatile
 16886                           
 16887                           ;NEMS.c: 91:     program.channel4 = 0;
 16888  0ABD  01E4               	clrf	_program+13	;volatile
 16889                           
 16890                           ;NEMS.c: 106:     TMR0_SetInterruptHandler(NEMS_timer);
 16891  0ABE  3072               	movlw	low _NEMS_timer
 16892  0ABF  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 16893  0AC0  3000               	movlw	high _NEMS_timer
 16894  0AC1  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 16895  0AC2  3195  2593  318A   	fcall	_TMR0_SetInterruptHandler
 16896                           
 16897                           ;NEMS.c: 111:     DAC1_SetOutput(0);
 16898  0AC5  3000               	movlw	0
 16899  0AC6  3195  25A7         	fcall	_DAC1_SetOutput
 16900                           
 16901                           ;NEMS.c: 113:     NEMS_nmux1 = 0;
 16902  0AC8  01F0               	clrf	_NEMS_nmux1
 16903                           
 16904                           ;NEMS.c: 114:     NEMS_pmux1 = 0;
 16905  0AC9  0140               	movlb	0	; select bank0
 16906  0ACA  01D2               	clrf	_NEMS_pmux1
 16907                           
 16908                           ;NEMS.c: 115:     LATC = NEMS_nmux1;
 16909  0ACB  0870               	movf	_NEMS_nmux1,w
 16910  0ACC  009A               	movwf	26	;volatile
 16911                           
 16912                           ;NEMS.c: 116:     LATB = NEMS_pmux1;
 16913  0ACD  0852               	movf	_NEMS_pmux1,w
 16914  0ACE  0099               	movwf	25	;volatile
 16915                           
 16916                           ;NEMS.c: 118:     NMES_freq_multiplier = 4;
 16917  0ACF  3004               	movlw	4
 16918  0AD0  00A2               	movwf	??_NEMS_initialize
 16919  0AD1  0822               	movf	??_NEMS_initialize,w
 16920  0AD2  0141               	movlb	1	; select bank1
 16921  0AD3  00C6               	movwf	_NMES_freq_multiplier^(0+128)
 16922                           
 16923                           ;NEMS.c: 120:     NMES_se_control = 0;
 16924  0AD4  0140               	movlb	0	; select bank0
 16925  0AD5  01D0               	clrf	_NMES_se_control
 16926                           
 16927                           ;NEMS.c: 121:     channel_control = 0;
 16928  0AD6  01D1               	clrf	_channel_control
 16929                           
 16930                           ;NEMS.c: 123:     sensor_ind = 0;
 16931  0AD7  01CD               	clrf	_sensor_ind	;volatile
 16932                           
 16933                           ;NEMS.c: 124:     se_index = 0;
 16934  0AD8  01CF               	clrf	_se_index
 16935                           
 16936                           ;NEMS.c: 125:     se_channel = 0;
 16937  0AD9  01CE               	clrf	_se_channel
 16938  0ADA  0008               	return
 16939  0ADB                     __end_of_NEMS_initialize:
 16940                           
 16941                           	psect	text66
 16942  1579                     __ptext66:	
 16943 ;; *************** function _TMR0_StopTimer *****************
 16944 ;; Defined at:
 16945 ;;		line 101 in file "mcc_generated_files/tmr0.c"
 16946 ;; Parameters:    Size  Location     Type
 16947 ;;		None
 16948 ;; Auto vars:     Size  Location     Type
 16949 ;;		None
 16950 ;; Return value:  Size  Location     Type
 16951 ;;                  1    wreg      void 
 16952 ;; Registers used:
 16953 ;;		None
 16954 ;; Tracked objects:
 16955 ;;		On entry : 31/0
 16956 ;;		On exit  : 3F/B
 16957 ;;		Unchanged: 0/0
 16958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16963 ;;Total ram usage:        0 bytes
 16964 ;; Hardware stack levels used:    1
 16965 ;; Hardware stack levels required when called:    4
 16966 ;; This function calls:
 16967 ;;		Nothing
 16968 ;; This function is called by:
 16969 ;;		_NEMS_initialize
 16970 ;;		_NEMS_stop_program_nack
 16971 ;; This function uses a non-reentrant model
 16972 ;;
 16973                           
 16974                           
 16975                           ;psect for function _TMR0_StopTimer
 16976  1579                     _TMR0_StopTimer:
 16977                           
 16978                           ;mcc_generated_files/tmr0.c: 104:     T0CON0bits.T0EN = 0;
 16979                           
 16980                           ;incstack = 0
 16981                           ; Regs used in _TMR0_StopTimer: []
 16982  1579  014B               	movlb	11	; select bank11
 16983  157A  139E               	bcf	30,7	;volatile
 16984  157B  0008               	return
 16985  157C                     __end_of_TMR0_StopTimer:
 16986                           
 16987                           	psect	text67
 16988  1593                     __ptext67:	
 16989 ;; *************** function _TMR0_SetInterruptHandler *****************
 16990 ;; Defined at:
 16991 ;;		line 151 in file "mcc_generated_files/tmr0.c"
 16992 ;; Parameters:    Size  Location     Type
 16993 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 16994 ;;		 -> NEMS_timer_SE(1), NEMS_timer(1), TMR0_DefaultInterruptHandler(1), 
 16995 ;; Auto vars:     Size  Location     Type
 16996 ;;		None
 16997 ;; Return value:  Size  Location     Type
 16998 ;;                  1    wreg      void 
 16999 ;; Registers used:
 17000 ;;		wreg
 17001 ;; Tracked objects:
 17002 ;;		On entry : 3F/0
 17003 ;;		On exit  : 3F/0
 17004 ;;		Unchanged: 0/0
 17005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17006 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17009 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17010 ;;Total ram usage:        2 bytes
 17011 ;; Hardware stack levels used:    1
 17012 ;; Hardware stack levels required when called:    4
 17013 ;; This function calls:
 17014 ;;		Nothing
 17015 ;; This function is called by:
 17016 ;;		_TMR0_Initialize
 17017 ;;		_NEMS_initialize
 17018 ;;		_NEMS_binary_command
 17019 ;;		_NEMS_start_program
 17020 ;; This function uses a non-reentrant model
 17021 ;;
 17022                           
 17023                           
 17024                           ;psect for function _TMR0_SetInterruptHandler
 17025  1593                     _TMR0_SetInterruptHandler:
 17026                           
 17027                           ;mcc_generated_files/tmr0.c: 152:     TMR0_InterruptHandler = InterruptHandler;
 17028                           
 17029                           ;incstack = 0
 17030                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 17031  1593  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 17032  1594  00E6               	movwf	_TMR0_InterruptHandler+1
 17033  1595  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 17034  1596  00E5               	movwf	_TMR0_InterruptHandler
 17035  1597  0008               	return
 17036  1598                     __end_of_TMR0_SetInterruptHandler:
 17037                           
 17038                           	psect	text68
 17039  15A7                     __ptext68:	
 17040 ;; *************** function _DAC1_SetOutput *****************
 17041 ;; Defined at:
 17042 ;;		line 66 in file "mcc_generated_files/dac1.c"
 17043 ;; Parameters:    Size  Location     Type
 17044 ;;  inputData       1    wreg     unsigned char 
 17045 ;; Auto vars:     Size  Location     Type
 17046 ;;  inputData       1    0[BANK0 ] unsigned char 
 17047 ;; Return value:  Size  Location     Type
 17048 ;;                  1    wreg      void 
 17049 ;; Registers used:
 17050 ;;		wreg
 17051 ;; Tracked objects:
 17052 ;;		On entry : 34/B
 17053 ;;		On exit  : 3F/12
 17054 ;;		Unchanged: 0/0
 17055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17057 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17059 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17060 ;;Total ram usage:        1 bytes
 17061 ;; Hardware stack levels used:    1
 17062 ;; Hardware stack levels required when called:    4
 17063 ;; This function calls:
 17064 ;;		Nothing
 17065 ;; This function is called by:
 17066 ;;		_NEMS_initialize
 17067 ;;		_NEMS_stop_program_nack
 17068 ;; This function uses a non-reentrant model
 17069 ;;
 17070                           
 17071                           
 17072                           ;psect for function _DAC1_SetOutput
 17073  15A7                     _DAC1_SetOutput:
 17074                           
 17075                           ;incstack = 0
 17076                           ; Regs used in _DAC1_SetOutput: [wreg]
 17077                           ;DAC1_SetOutput@inputData stored from wreg
 17078  15A7  0140               	movlb	0	; select bank0
 17079  15A8  00A0               	movwf	DAC1_SetOutput@inputData
 17080                           
 17081                           ;mcc_generated_files/dac1.c: 66: void DAC1_SetOutput(uint8_t inputData);mcc_generated_fi
      +                          les/dac1.c: 67: {;mcc_generated_files/dac1.c: 68:     DAC1CON1 = inputData;
 17082  15A9  0820               	movf	DAC1_SetOutput@inputData,w
 17083  15AA  0152               	movlb	18	; select bank18
 17084  15AB  008F               	movwf	15	;volatile
 17085  15AC  0008               	return
 17086  15AD                     __end_of_DAC1_SetOutput:
 17087                           
 17088                           	psect	text69
 17089  15B3                     __ptext69:	
 17090 ;; *************** function _EUSART1_is_rx_ready *****************
 17091 ;; Defined at:
 17092 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 17093 ;; Parameters:    Size  Location     Type
 17094 ;;		None
 17095 ;; Auto vars:     Size  Location     Type
 17096 ;;		None
 17097 ;; Return value:  Size  Location     Type
 17098 ;;                  1    wreg      _Bool 
 17099 ;; Registers used:
 17100 ;;		wreg, status,2, status,0
 17101 ;; Tracked objects:
 17102 ;;		On entry : 31/0
 17103 ;;		On exit  : 31/0
 17104 ;;		Unchanged: 31/0
 17105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17110 ;;Total ram usage:        0 bytes
 17111 ;; Hardware stack levels used:    1
 17112 ;; Hardware stack levels required when called:    4
 17113 ;; This function calls:
 17114 ;;		Nothing
 17115 ;; This function is called by:
 17116 ;;		_main
 17117 ;; This function uses a non-reentrant model
 17118 ;;
 17119                           
 17120                           
 17121                           ;psect for function _EUSART1_is_rx_ready
 17122  15B3                     _EUSART1_is_rx_ready:
 17123                           
 17124                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 17125                           
 17126                           ;incstack = 0
 17127                           ; Regs used in _EUSART1_is_rx_ready: [wreg+status,2+status,0]
 17128  15B3  0871               	movf	_eusart1RxCount,w	;volatile
 17129  15B4  1903               	btfsc	3,2
 17130  15B5  2DB8               	goto	u2950
 17131  15B6  3001               	movlw	1
 17132  15B7  0008               	return
 17133  15B8                     u2950:
 17134  15B8  3000               	movlw	0
 17135  15B9  0008               	return
 17136  15BA                     __end_of_EUSART1_is_rx_ready:
 17137                           
 17138                           	psect	intentry
 17139  0004                     __pintentry:	
 17140 ;; *************** function _INTERRUPT_InterruptManager *****************
 17141 ;; Defined at:
 17142 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 17143 ;; Parameters:    Size  Location     Type
 17144 ;;		None
 17145 ;; Auto vars:     Size  Location     Type
 17146 ;;		None
 17147 ;; Return value:  Size  Location     Type
 17148 ;;                  1    wreg      void 
 17149 ;; Registers used:
 17150 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17151 ;; Tracked objects:
 17152 ;;		On entry : 0/0
 17153 ;;		On exit  : 0/0
 17154 ;;		Unchanged: 0/0
 17155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17160 ;;Total ram usage:        0 bytes
 17161 ;; Hardware stack levels used:    1
 17162 ;; Hardware stack levels required when called:    3
 17163 ;; This function calls:
 17164 ;;		Absolute function
 17165 ;;		_EUSART1_Receive_ISR
 17166 ;;		_EUSART1_Transmit_ISR
 17167 ;;		_TMR0_ISR
 17168 ;; This function is called by:
 17169 ;;		Interrupt level 1
 17170 ;; This function uses a non-reentrant model
 17171 ;;
 17172                           
 17173  0004                     _INTERRUPT_InterruptManager:
 17174                           
 17175                           ;incstack = 0
 17176  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 17177                           
 17178                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17179  0005  3180               	pagesel	$
 17180                           
 17181                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 17182  0006  014E               	movlb	14	; select bank14
 17183  0007  1A96               	btfsc	22,5	;volatile
 17184  0008  1E8C               	btfss	12,5	;volatile
 17185  0009  280E               	goto	i1l562
 17186                           
 17187                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 17188  000A  3196  263D  3180   	fcall	_TMR0_ISR
 17189                           
 17190                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 17191  000D  2823               	goto	i1l570
 17192  000E                     i1l562:	
 17193                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 17194                           
 17195  000E  1F0B               	btfss	11,6	;volatile
 17196  000F  2823               	goto	i1l570
 17197                           
 17198                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.TX1IE == 1 && PIR3bits.TX1IF == 1)
 17199  0010  1A19               	btfsc	25,4	;volatile
 17200  0011  1E0F               	btfss	15,4	;volatile
 17201  0012  281A               	goto	i1l565
 17202                           
 17203                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART1_TxDefaultInterruptHandler();
 17204  0013  0140               	movlb	0	; select bank0
 17205  0014  086E               	movf	_EUSART1_TxDefaultInterruptHandler+1,w
 17206  0015  008A               	movwf	10
 17207  0016  086D               	movf	_EUSART1_TxDefaultInterruptHandler,w
 17208  0017  000A               	callw
 17209  0018  3180               	pagesel	$
 17210                           
 17211                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 17212  0019  2823               	goto	i1l570
 17213  001A                     i1l565:	
 17214                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 17215                           
 17216  001A  1A99               	btfsc	25,5	;volatile
 17217  001B  1E8F               	btfss	15,5	;volatile
 17218  001C  2823               	goto	i1l570
 17219                           
 17220                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             EUSART1_RxDefaultInterruptHandler();
 17221  001D  0140               	movlb	0	; select bank0
 17222  001E  086C               	movf	_EUSART1_RxDefaultInterruptHandler+1,w
 17223  001F  008A               	movwf	10
 17224  0020  086B               	movf	_EUSART1_RxDefaultInterruptHandler,w
 17225  0021  000A               	callw
 17226  0022  3180               	pagesel	$
 17227  0023                     i1l570:	
 17228                           ;mcc_generated_files/interrupt_manager.c: 75:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 77:     }
 17229                           
 17230                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 17231                           
 17232  0023  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 17233  0024  0009               	retfie
 17234  0025                     __end_of_INTERRUPT_InterruptManager:
 17235                           
 17236                           	psect	text71
 17237  163D                     __ptext71:	
 17238 ;; *************** function _TMR0_ISR *****************
 17239 ;; Defined at:
 17240 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 17241 ;; Parameters:    Size  Location     Type
 17242 ;;		None
 17243 ;; Auto vars:     Size  Location     Type
 17244 ;;		None
 17245 ;; Return value:  Size  Location     Type
 17246 ;;                  1    wreg      void 
 17247 ;; Registers used:
 17248 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17249 ;; Tracked objects:
 17250 ;;		On entry : 3F/E
 17251 ;;		On exit  : 0/0
 17252 ;;		Unchanged: 0/0
 17253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17258 ;;Total ram usage:        0 bytes
 17259 ;; Hardware stack levels used:    1
 17260 ;; Hardware stack levels required when called:    2
 17261 ;; This function calls:
 17262 ;;		Absolute function
 17263 ;;		_NEMS_timer
 17264 ;;		_NEMS_timer_SE
 17265 ;;		_TMR0_DefaultInterruptHandler
 17266 ;; This function is called by:
 17267 ;;		_INTERRUPT_InterruptManager
 17268 ;; This function uses a non-reentrant model
 17269 ;;
 17270                           
 17271                           
 17272                           ;psect for function _TMR0_ISR
 17273  163D                     _TMR0_ISR:
 17274                           
 17275                           ;mcc_generated_files/tmr0.c: 137:     PIR0bits.TMR0IF = 0;
 17276                           
 17277                           ;incstack = 0
 17278                           ; Regs used in _TMR0_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17279  163D  128C               	bcf	12,5	;volatile
 17280                           
 17281                           ;mcc_generated_files/tmr0.c: 139:     TMR0H = timer0ReloadVal16bit >> 8;
 17282  163E  0140               	movlb	0	; select bank0
 17283  163F  0868               	movf	_timer0ReloadVal16bit+1,w	;volatile
 17284  1640  014B               	movlb	11	; select bank11
 17285  1641  009D               	movwf	29	;volatile
 17286                           
 17287                           ;mcc_generated_files/tmr0.c: 140:     TMR0L = (uint8_t) timer0ReloadVal16bit;
 17288  1642  0140               	movlb	0	; select bank0
 17289  1643  0867               	movf	_timer0ReloadVal16bit,w	;volatile
 17290  1644  014B               	movlb	11	; select bank11
 17291  1645  009C               	movwf	28	;volatile
 17292                           
 17293                           ;mcc_generated_files/tmr0.c: 142:     if(TMR0_InterruptHandler)
 17294  1646  0140               	movlb	0	; select bank0
 17295  1647  0865               	movf	_TMR0_InterruptHandler,w
 17296  1648  0466               	iorwf	_TMR0_InterruptHandler+1,w
 17297  1649  1903               	btfsc	3,2
 17298  164A  0008               	return
 17299                           
 17300                           ;mcc_generated_files/tmr0.c: 143:     {;mcc_generated_files/tmr0.c: 144:         TMR0_In
      +                          terruptHandler();
 17301  164B  0866               	movf	_TMR0_InterruptHandler+1,w
 17302  164C  008A               	movwf	10
 17303  164D  0865               	movf	_TMR0_InterruptHandler,w
 17304  164E  000A               	callw
 17305  164F  3196               	pagesel	$
 17306  1650  0008               	return
 17307  1651                     __end_of_TMR0_ISR:
 17308                           
 17309                           	psect	text72
 17310  04CE                     __ptext72:	
 17311 ;; *************** function _NEMS_timer_SE *****************
 17312 ;; Defined at:
 17313 ;;		line 885 in file "NEMS.c"
 17314 ;; Parameters:    Size  Location     Type
 17315 ;;		None
 17316 ;; Auto vars:     Size  Location     Type
 17317 ;;		None
 17318 ;; Return value:  Size  Location     Type
 17319 ;;                  1    wreg      void 
 17320 ;; Registers used:
 17321 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17322 ;; Tracked objects:
 17323 ;;		On entry : 3F/0
 17324 ;;		On exit  : 3F/0
 17325 ;;		Unchanged: 0/0
 17326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17329 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17330 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17331 ;;Total ram usage:        5 bytes
 17332 ;; Hardware stack levels used:    1
 17333 ;; Hardware stack levels required when called:    1
 17334 ;; This function calls:
 17335 ;;		i1_DAC1_SetOutput
 17336 ;; This function is called by:
 17337 ;;		_NEMS_binary_command
 17338 ;;		_TMR0_ISR
 17339 ;; This function uses a non-reentrant model
 17340 ;;
 17341                           
 17342                           
 17343                           ;psect for function _NEMS_timer_SE
 17344  04CE                     _NEMS_timer_SE:
 17345                           
 17346                           ;NEMS.c: 888:     DAC1_SetOutput(waveform.current_amplitude);
 17347                           
 17348                           ;incstack = 0
 17349                           ; Regs used in _NEMS_timer_SE: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17350  04CE  303C               	movlw	60
 17351  04CF  0086               	movwf	6
 17352  04D0  3026               	movlw	38
 17353  04D1  0087               	movwf	7
 17354  04D2  3153               	addfsr 1,19
 17355  04D3  0801               	movf	1,w
 17356  04D4  3195  258E  3184   	fcall	i1_DAC1_SetOutput
 17357                           
 17358                           ;NEMS.c: 892:     LATC = NEMS_nmux1;
 17359  04D7  0870               	movf	_NEMS_nmux1,w
 17360  04D8  0140               	movlb	0	; select bank0
 17361  04D9  009A               	movwf	26	;volatile
 17362                           
 17363                           ;NEMS.c: 893:     LATB = NEMS_pmux1;
 17364  04DA  0852               	movf	_NEMS_pmux1,w
 17365  04DB  0099               	movwf	25	;volatile
 17366                           
 17367                           ;NEMS.c: 896:     waveform.clock_index++;
 17368  04DC  303C               	movlw	60
 17369  04DD  0086               	movwf	6
 17370  04DE  3026               	movlw	38
 17371  04DF  0087               	movwf	7
 17372  04E0  3142               	addfsr 1,2
 17373  04E1  3001               	movlw	1
 17374  04E2  0781               	addwf	1,f
 17375  04E3  3141               	addfsr 1,1
 17376  04E4  1803               	skipnc
 17377  04E5  0A81               	incf	1,f
 17378                           
 17379                           ;NEMS.c: 899:     if (waveform.clock_index >= waveform.num_clocks_per_pulse) {
 17380  04E6  303C               	movlw	60
 17381  04E7  0086               	movwf	6
 17382  04E8  3026               	movlw	38
 17383  04E9  0087               	movwf	7
 17384  04EA  3F40               	moviw [0]fsr1
 17385  04EB  00F7               	movwf	??_NEMS_timer_SE
 17386  04EC  3F41               	moviw [1]fsr1
 17387  04ED  00F8               	movwf	??_NEMS_timer_SE+1
 17388  04EE  303C               	movlw	60
 17389  04EF  0086               	movwf	6
 17390  04F0  3026               	movlw	38
 17391  04F1  0087               	movwf	7
 17392  04F2  3142               	addfsr 1,2
 17393  04F3  3F40               	moviw [0]fsr1
 17394  04F4  00F9               	movwf	??_NEMS_timer_SE+2
 17395  04F5  3F41               	moviw [1]fsr1
 17396  04F6  00FA               	movwf	??_NEMS_timer_SE+3
 17397  04F7  0878               	movf	??_NEMS_timer_SE+1,w
 17398  04F8  027A               	subwf	??_NEMS_timer_SE+3,w
 17399  04F9  1D03               	skipz
 17400  04FA  2CFD               	goto	u210_25
 17401  04FB  0877               	movf	??_NEMS_timer_SE,w
 17402  04FC  0279               	subwf	??_NEMS_timer_SE+2,w
 17403  04FD                     u210_25:
 17404  04FD  1C03               	skipc
 17405  04FE  2DE7               	goto	i1l4001
 17406                           
 17407                           ;NEMS.c: 900:         waveform.clock_index = 0;
 17408  04FF  303C               	movlw	60
 17409  0500  0086               	movwf	6
 17410  0501  3026               	movlw	38
 17411  0502  0087               	movwf	7
 17412  0503  3142               	addfsr 1,2
 17413  0504  3000               	movlw	0
 17414  0505  3FC0               	movwi [0]fsr1
 17415  0506  3FC1               	movwi [1]fsr1
 17416                           
 17417                           ;NEMS.c: 902:         NEMS_pulse_states = NEMS_PLUS_UP;
 17418  0507  3002               	movlw	2
 17419  0508  00F7               	movwf	??_NEMS_timer_SE
 17420  0509  0877               	movf	??_NEMS_timer_SE,w
 17421  050A  00D3               	movwf	_NEMS_pulse_states	;volatile
 17422                           
 17423                           ;NEMS.c: 904:         waveform.pulse_index++;
 17424  050B  303C               	movlw	60
 17425  050C  0086               	movwf	6
 17426  050D  3026               	movlw	38
 17427  050E  0087               	movwf	7
 17428  050F  3144               	addfsr 1,4
 17429  0510  3001               	movlw	1
 17430  0511  0781               	addwf	1,f
 17431  0512  3141               	addfsr 1,1
 17432  0513  1803               	skipnc
 17433  0514  0A81               	incf	1,f
 17434                           
 17435                           ;NEMS.c: 907:         if (waveform.pulse_index < waveform.ramp_up_time) {
 17436  0515  301C               	movlw	28
 17437  0516  0086               	movwf	6
 17438  0517  3027               	movlw	39
 17439  0518  0087               	movwf	7
 17440  0519  3F40               	moviw [0]fsr1
 17441  051A  00F7               	movwf	??_NEMS_timer_SE
 17442  051B  3F41               	moviw [1]fsr1
 17443  051C  00F8               	movwf	??_NEMS_timer_SE+1
 17444  051D  303C               	movlw	60
 17445  051E  0086               	movwf	6
 17446  051F  3026               	movlw	38
 17447  0520  0087               	movwf	7
 17448  0521  3144               	addfsr 1,4
 17449  0522  3F40               	moviw [0]fsr1
 17450  0523  00F9               	movwf	??_NEMS_timer_SE+2
 17451  0524  3F41               	moviw [1]fsr1
 17452  0525  00FA               	movwf	??_NEMS_timer_SE+3
 17453  0526  0878               	movf	??_NEMS_timer_SE+1,w
 17454  0527  027A               	subwf	??_NEMS_timer_SE+3,w
 17455  0528  1D03               	skipz
 17456  0529  2D2C               	goto	u211_25
 17457  052A  0877               	movf	??_NEMS_timer_SE,w
 17458  052B  0279               	subwf	??_NEMS_timer_SE+2,w
 17459  052C                     u211_25:
 17460  052C  1803               	skipnc
 17461  052D  2D45               	goto	i1l3973
 17462                           
 17463                           ;NEMS.c: 908:             waveform.pulse_amplitude = waveform.ramp_up_amplitude[waveform
      +                          .pulse_index];
 17464  052E  303C               	movlw	60
 17465  052F  0086               	movwf	6
 17466  0530  3026               	movlw	38
 17467  0531  0087               	movwf	7
 17468  0532  3144               	addfsr 1,4
 17469  0533  3052               	movlw	82
 17470  0534  00F7               	movwf	??_NEMS_timer_SE
 17471  0535  3026               	movlw	38
 17472  0536  00F8               	movwf	??_NEMS_timer_SE+1
 17473  0537  3F40               	moviw [0]fsr1
 17474  0538  0777               	addwf	??_NEMS_timer_SE,w
 17475  0539  0084               	movwf	4
 17476  053A  3F41               	moviw [1]fsr1
 17477  053B  3D78               	addwfc	??_NEMS_timer_SE+1,w
 17478  053C  0085               	movwf	5
 17479  053D  0800               	movf	0,w
 17480  053E  00F9               	movwf	??_NEMS_timer_SE+2
 17481  053F  304D               	movlw	77
 17482  0540  0086               	movwf	6
 17483  0541  3026               	movlw	38
 17484  0542  0087               	movwf	7
 17485  0543  0879               	movf	??_NEMS_timer_SE+2,w
 17486  0544  2DA6               	goto	L5
 17487  0545                     i1l3973:	
 17488                           ;NEMS.c: 910:         } else if (waveform.pulse_index < waveform.ON_time) {
 17489                           
 17490  0545  303C               	movlw	60
 17491  0546  0086               	movwf	6
 17492  0547  3026               	movlw	38
 17493  0548  0087               	movwf	7
 17494  0549  314C               	addfsr 1,12
 17495  054A  3F40               	moviw [0]fsr1
 17496  054B  00F7               	movwf	??_NEMS_timer_SE
 17497  054C  3F41               	moviw [1]fsr1
 17498  054D  00F8               	movwf	??_NEMS_timer_SE+1
 17499  054E  303C               	movlw	60
 17500  054F  0086               	movwf	6
 17501  0550  3026               	movlw	38
 17502  0551  0087               	movwf	7
 17503  0552  3144               	addfsr 1,4
 17504  0553  3F40               	moviw [0]fsr1
 17505  0554  00F9               	movwf	??_NEMS_timer_SE+2
 17506  0555  3F41               	moviw [1]fsr1
 17507  0556  00FA               	movwf	??_NEMS_timer_SE+3
 17508  0557  0878               	movf	??_NEMS_timer_SE+1,w
 17509  0558  027A               	subwf	??_NEMS_timer_SE+3,w
 17510  0559  1D03               	skipz
 17511  055A  2D5D               	goto	u212_25
 17512  055B  0877               	movf	??_NEMS_timer_SE,w
 17513  055C  0279               	subwf	??_NEMS_timer_SE+2,w
 17514  055D                     u212_25:
 17515  055D  1803               	skipnc
 17516  055E  2D6C               	goto	i1l3977
 17517                           
 17518                           ;NEMS.c: 911:             waveform.pulse_amplitude = waveform.program_amplitude;
 17519  055F  303C               	movlw	60
 17520  0560  0086               	movwf	6
 17521  0561  3026               	movlw	38
 17522  0562  0087               	movwf	7
 17523  0563  3150               	addfsr 1,16
 17524  0564  0801               	movf	1,w
 17525  0565  00F7               	movwf	??_NEMS_timer_SE
 17526  0566  304D               	movlw	77
 17527  0567  0086               	movwf	6
 17528  0568  3026               	movlw	38
 17529  0569  0087               	movwf	7
 17530  056A  0877               	movf	??_NEMS_timer_SE,w
 17531  056B  2DA6               	goto	L5
 17532  056C                     i1l3977:	
 17533                           ;NEMS.c: 913:         } else if (waveform.pulse_index < waveform.ramp_down_time) {
 17534                           
 17535  056C  30E8               	movlw	232
 17536  056D  0086               	movwf	6
 17537  056E  3027               	movlw	39
 17538  056F  0087               	movwf	7
 17539  0570  3F40               	moviw [0]fsr1
 17540  0571  00F7               	movwf	??_NEMS_timer_SE
 17541  0572  3F41               	moviw [1]fsr1
 17542  0573  00F8               	movwf	??_NEMS_timer_SE+1
 17543  0574  303C               	movlw	60
 17544  0575  0086               	movwf	6
 17545  0576  3026               	movlw	38
 17546  0577  0087               	movwf	7
 17547  0578  3144               	addfsr 1,4
 17548  0579  3F40               	moviw [0]fsr1
 17549  057A  00F9               	movwf	??_NEMS_timer_SE+2
 17550  057B  3F41               	moviw [1]fsr1
 17551  057C  00FA               	movwf	??_NEMS_timer_SE+3
 17552  057D  0878               	movf	??_NEMS_timer_SE+1,w
 17553  057E  027A               	subwf	??_NEMS_timer_SE+3,w
 17554  057F  1D03               	skipz
 17555  0580  2D83               	goto	u213_25
 17556  0581  0877               	movf	??_NEMS_timer_SE,w
 17557  0582  0279               	subwf	??_NEMS_timer_SE+2,w
 17558  0583                     u213_25:
 17559  0583  1803               	skipnc
 17560  0584  2DA8               	goto	i1l3981
 17561                           
 17562                           ;NEMS.c: 914:             waveform.pulse_amplitude = waveform.ramp_down_amplitude[wavefo
      +                          rm.pulse_index - waveform.ON_time];
 17563  0585  303C               	movlw	60
 17564  0586  0086               	movwf	6
 17565  0587  3026               	movlw	38
 17566  0588  0087               	movwf	7
 17567  0589  3144               	addfsr 1,4
 17568  058A  303C               	movlw	60
 17569  058B  0084               	movwf	4
 17570  058C  3026               	movlw	38
 17571  058D  0085               	movwf	5
 17572  058E  310C               	addfsr 0,12
 17573  058F  301E               	movlw	30
 17574  0590  00F7               	movwf	??_NEMS_timer_SE
 17575  0591  3027               	movlw	39
 17576  0592  00F8               	movwf	??_NEMS_timer_SE+1
 17577  0593  3F00               	moviw [0]fsr0
 17578  0594  0277               	subwf	??_NEMS_timer_SE,w
 17579  0595  00F9               	movwf	??_NEMS_timer_SE+2
 17580  0596  3F01               	moviw [1]fsr0
 17581  0597  3B78               	subwfb	??_NEMS_timer_SE+1,w
 17582  0598  00FA               	movwf	??_NEMS_timer_SE+3
 17583  0599  3F40               	moviw [0]fsr1
 17584  059A  0779               	addwf	??_NEMS_timer_SE+2,w
 17585  059B  0084               	movwf	4
 17586  059C  3F41               	moviw [1]fsr1
 17587  059D  3D7A               	addwfc	??_NEMS_timer_SE+3,w
 17588  059E  0085               	movwf	5
 17589  059F  0800               	movf	0,w
 17590  05A0  00FB               	movwf	??_NEMS_timer_SE+4
 17591  05A1  304D               	movlw	77
 17592  05A2  0086               	movwf	6
 17593  05A3  3026               	movlw	38
 17594  05A4  0087               	movwf	7
 17595  05A5  087B               	movf	??_NEMS_timer_SE+4,w
 17596  05A6                     L5:
 17597  05A6  0081               	movwf	1
 17598                           
 17599                           ;NEMS.c: 916:         } else if (waveform.pulse_index < waveform.OFF_time) {
 17600  05A7  2DD4               	goto	i1l3993
 17601  05A8                     i1l3981:
 17602  05A8  303C               	movlw	60
 17603  05A9  0086               	movwf	6
 17604  05AA  3026               	movlw	38
 17605  05AB  0087               	movwf	7
 17606  05AC  314E               	addfsr 1,14
 17607  05AD  3F40               	moviw [0]fsr1
 17608  05AE  00F7               	movwf	??_NEMS_timer_SE
 17609  05AF  3F41               	moviw [1]fsr1
 17610  05B0  00F8               	movwf	??_NEMS_timer_SE+1
 17611  05B1  303C               	movlw	60
 17612  05B2  0086               	movwf	6
 17613  05B3  3026               	movlw	38
 17614  05B4  0087               	movwf	7
 17615  05B5  3144               	addfsr 1,4
 17616  05B6  3F40               	moviw [0]fsr1
 17617  05B7  00F9               	movwf	??_NEMS_timer_SE+2
 17618  05B8  3F41               	moviw [1]fsr1
 17619  05B9  00FA               	movwf	??_NEMS_timer_SE+3
 17620  05BA  0878               	movf	??_NEMS_timer_SE+1,w
 17621  05BB  027A               	subwf	??_NEMS_timer_SE+3,w
 17622  05BC  1D03               	skipz
 17623  05BD  2DC0               	goto	u214_25
 17624  05BE  0877               	movf	??_NEMS_timer_SE,w
 17625  05BF  0279               	subwf	??_NEMS_timer_SE+2,w
 17626  05C0                     u214_25:
 17627  05C0  1803               	skipnc
 17628  05C1  2DCC               	goto	i1l3991
 17629                           
 17630                           ;NEMS.c: 917:             waveform.pulse_amplitude = 0;
 17631  05C2  303C               	movlw	60
 17632  05C3  0086               	movwf	6
 17633  05C4  3026               	movlw	38
 17634  05C5  0087               	movwf	7
 17635  05C6  3151               	addfsr 1,17
 17636  05C7  0181               	clrf	1
 17637                           
 17638                           ;NEMS.c: 918:             NEMS_pulse_states = NEMS_PULSE_OFF;
 17639  05C8  01D3               	clrf	_NEMS_pulse_states	;volatile
 17640                           
 17641                           ;NEMS.c: 919:             NEMS_nmux1 = 0;
 17642  05C9  01F0               	clrf	_NEMS_nmux1
 17643                           
 17644                           ;NEMS.c: 920:             NEMS_pmux1 = 0;
 17645  05CA  01D2               	clrf	_NEMS_pmux1
 17646                           
 17647                           ;NEMS.c: 921:         } else {
 17648  05CB  2DD4               	goto	i1l3993
 17649  05CC                     i1l3991:
 17650                           
 17651                           ;NEMS.c: 922:             waveform.pulse_index = 0;
 17652  05CC  303C               	movlw	60
 17653  05CD  0086               	movwf	6
 17654  05CE  3026               	movlw	38
 17655  05CF  0087               	movwf	7
 17656  05D0  3144               	addfsr 1,4
 17657  05D1  3000               	movlw	0
 17658  05D2  3FC0               	movwi [0]fsr1
 17659  05D3  3FC1               	movwi [1]fsr1
 17660  05D4                     i1l3993:
 17661                           
 17662                           ;NEMS.c: 926:         se_channel = waveform.channel2 + se_index;
 17663  05D4  30ED               	movlw	237
 17664  05D5  0086               	movwf	6
 17665  05D6  3027               	movlw	39
 17666  05D7  0087               	movwf	7
 17667  05D8  0801               	movf	1,w
 17668  05D9  074F               	addwf	_se_index,w
 17669  05DA  00F7               	movwf	??_NEMS_timer_SE
 17670  05DB  0877               	movf	??_NEMS_timer_SE,w
 17671  05DC  00CE               	movwf	_se_channel
 17672                           
 17673                           ;NEMS.c: 927:         if (se_index < 3) {
 17674  05DD  3003               	movlw	3
 17675  05DE  024F               	subwf	_se_index,w
 17676  05DF  1803               	skipnc
 17677  05E0  2DE6               	goto	i1l3999
 17678                           
 17679                           ;NEMS.c: 928:             se_index++;
 17680  05E1  3001               	movlw	1
 17681  05E2  00F7               	movwf	??_NEMS_timer_SE
 17682  05E3  0877               	movf	??_NEMS_timer_SE,w
 17683  05E4  07CF               	addwf	_se_index,f
 17684                           
 17685                           ;NEMS.c: 929:         } else {
 17686  05E5  2DE7               	goto	i1l4001
 17687  05E6                     i1l3999:
 17688                           
 17689                           ;NEMS.c: 930:             se_index = 0;
 17690  05E6  01CF               	clrf	_se_index
 17691  05E7                     i1l4001:
 17692                           
 17693                           ;NEMS.c: 936:     if (NEMS_pulse_states != NEMS_PULSE_OFF) {
 17694  05E7  0853               	movf	_NEMS_pulse_states,w
 17695  05E8  1903               	btfsc	3,2
 17696  05E9  0008               	return
 17697                           
 17698                           ;NEMS.c: 937:         if (waveform.clock_index < program.phase_duration) {
 17699  05EA  085A               	movf	_program+3,w	;volatile
 17700  05EB  00F7               	movwf	??_NEMS_timer_SE
 17701  05EC  01F8               	clrf	??_NEMS_timer_SE+1
 17702  05ED  303C               	movlw	60
 17703  05EE  0086               	movwf	6
 17704  05EF  3026               	movlw	38
 17705  05F0  0087               	movwf	7
 17706  05F1  3142               	addfsr 1,2
 17707  05F2  3F40               	moviw [0]fsr1
 17708  05F3  00F9               	movwf	??_NEMS_timer_SE+2
 17709  05F4  3F41               	moviw [1]fsr1
 17710  05F5  00FA               	movwf	??_NEMS_timer_SE+3
 17711  05F6  0878               	movf	??_NEMS_timer_SE+1,w
 17712  05F7  027A               	subwf	??_NEMS_timer_SE+3,w
 17713  05F8  1D03               	skipz
 17714  05F9  2DFC               	goto	u217_25
 17715  05FA  0877               	movf	??_NEMS_timer_SE,w
 17716  05FB  0279               	subwf	??_NEMS_timer_SE+2,w
 17717  05FC                     u217_25:
 17718  05FC  1803               	skipnc
 17719  05FD  2E1C               	goto	i1l4011
 17720                           
 17721                           ;NEMS.c: 938:             NEMS_pulse_states = NEMS_PLUS_UP;
 17722  05FE  3002               	movlw	2
 17723  05FF  00F7               	movwf	??_NEMS_timer_SE
 17724  0600  0877               	movf	??_NEMS_timer_SE,w
 17725  0601  00D3               	movwf	_NEMS_pulse_states	;volatile
 17726                           
 17727                           ;NEMS.c: 940:             NEMS_nmux1 = waveform.channel1;
 17728  0602  30EC               	movlw	236
 17729  0603  0086               	movwf	6
 17730  0604  3027               	movlw	39
 17731  0605  0087               	movwf	7
 17732  0606  0801               	movf	1,w
 17733  0607  00F7               	movwf	??_NEMS_timer_SE
 17734  0608  0877               	movf	??_NEMS_timer_SE,w
 17735  0609  00F0               	movwf	_NEMS_nmux1
 17736                           
 17737                           ;NEMS.c: 941:             NEMS_pmux1 = se_channel;
 17738  060A  084E               	movf	_se_channel,w
 17739  060B  00F7               	movwf	??_NEMS_timer_SE
 17740  060C  0877               	movf	??_NEMS_timer_SE,w
 17741  060D  00D2               	movwf	_NEMS_pmux1
 17742                           
 17743                           ;NEMS.c: 944:             waveform.current_amplitude = waveform.pulse_amplitude;
 17744  060E  303C               	movlw	60
 17745  060F  0086               	movwf	6
 17746  0610  3026               	movlw	38
 17747  0611  0087               	movwf	7
 17748  0612  3151               	addfsr 1,17
 17749  0613  0801               	movf	1,w
 17750  0614  00F7               	movwf	??_NEMS_timer_SE
 17751  0615  304F               	movlw	79
 17752  0616  0086               	movwf	6
 17753  0617  3026               	movlw	38
 17754  0618  0087               	movwf	7
 17755  0619  0877               	movf	??_NEMS_timer_SE,w
 17756  061A  0081               	movwf	1
 17757                           
 17758                           ;NEMS.c: 946:         } else if (waveform.clock_index < waveform.silence_phase_duration)
      +                           {
 17759  061B  0008               	return
 17760  061C                     i1l4011:
 17761  061C  303C               	movlw	60
 17762  061D  0086               	movwf	6
 17763  061E  3026               	movlw	38
 17764  061F  0087               	movwf	7
 17765  0620  314A               	addfsr 1,10
 17766  0621  0801               	movf	1,w
 17767  0622  00F7               	movwf	??_NEMS_timer_SE
 17768  0623  01F8               	clrf	??_NEMS_timer_SE+1
 17769  0624  303C               	movlw	60
 17770  0625  0086               	movwf	6
 17771  0626  3026               	movlw	38
 17772  0627  0087               	movwf	7
 17773  0628  3142               	addfsr 1,2
 17774  0629  3F40               	moviw [0]fsr1
 17775  062A  00F9               	movwf	??_NEMS_timer_SE+2
 17776  062B  3F41               	moviw [1]fsr1
 17777  062C  00FA               	movwf	??_NEMS_timer_SE+3
 17778  062D  0878               	movf	??_NEMS_timer_SE+1,w
 17779  062E  027A               	subwf	??_NEMS_timer_SE+3,w
 17780  062F  1D03               	skipz
 17781  0630  2E33               	goto	u218_25
 17782  0631  0877               	movf	??_NEMS_timer_SE,w
 17783  0632  0279               	subwf	??_NEMS_timer_SE+2,w
 17784  0633                     u218_25:
 17785  0633  1803               	skipnc
 17786  0634  2E42               	goto	i1l4021
 17787                           
 17788                           ;NEMS.c: 947:             NEMS_pulse_states = NEMS_REST;
 17789  0635  3001               	movlw	1
 17790  0636  00F7               	movwf	??_NEMS_timer_SE
 17791  0637  0877               	movf	??_NEMS_timer_SE,w
 17792  0638  00D3               	movwf	_NEMS_pulse_states	;volatile
 17793  0639                     L6:
 17794                           
 17795                           ;NEMS.c: 948:             NEMS_nmux1 = 0;
 17796  0639  01F0               	clrf	_NEMS_nmux1
 17797                           
 17798                           ;NEMS.c: 949:             NEMS_pmux1 = 0;
 17799  063A  01D2               	clrf	_NEMS_pmux1
 17800                           
 17801                           ;NEMS.c: 951:             waveform.current_amplitude = 0;
 17802  063B  303C               	movlw	60
 17803  063C  0086               	movwf	6
 17804  063D  3026               	movlw	38
 17805  063E  0087               	movwf	7
 17806  063F  3153               	addfsr 1,19
 17807  0640  0181               	clrf	1
 17808                           
 17809                           ;NEMS.c: 953:         } else if (waveform.clock_index < waveform.minus_phase_duration) {
 17810  0641  0008               	return
 17811  0642                     i1l4021:
 17812  0642  303C               	movlw	60
 17813  0643  0086               	movwf	6
 17814  0644  3026               	movlw	38
 17815  0645  0087               	movwf	7
 17816  0646  314B               	addfsr 1,11
 17817  0647  0801               	movf	1,w
 17818  0648  00F7               	movwf	??_NEMS_timer_SE
 17819  0649  01F8               	clrf	??_NEMS_timer_SE+1
 17820  064A  303C               	movlw	60
 17821  064B  0086               	movwf	6
 17822  064C  3026               	movlw	38
 17823  064D  0087               	movwf	7
 17824  064E  3142               	addfsr 1,2
 17825  064F  3F40               	moviw [0]fsr1
 17826  0650  00F9               	movwf	??_NEMS_timer_SE+2
 17827  0651  3F41               	moviw [1]fsr1
 17828  0652  00FA               	movwf	??_NEMS_timer_SE+3
 17829  0653  0878               	movf	??_NEMS_timer_SE+1,w
 17830  0654  027A               	subwf	??_NEMS_timer_SE+3,w
 17831  0655  1D03               	skipz
 17832  0656  2E59               	goto	u219_25
 17833  0657  0877               	movf	??_NEMS_timer_SE,w
 17834  0658  0279               	subwf	??_NEMS_timer_SE+2,w
 17835  0659                     u219_25:
 17836  0659  1803               	skipnc
 17837  065A  2E85               	goto	i1l4029
 17838                           
 17839                           ;NEMS.c: 954:             NEMS_pulse_states = NEMS_MINUS_UP;
 17840  065B  3004               	movlw	4
 17841  065C  00F7               	movwf	??_NEMS_timer_SE
 17842  065D  0877               	movf	??_NEMS_timer_SE,w
 17843  065E  00D3               	movwf	_NEMS_pulse_states	;volatile
 17844                           
 17845                           ;NEMS.c: 956:             NEMS_nmux1 = se_channel;
 17846  065F  084E               	movf	_se_channel,w
 17847  0660  00F7               	movwf	??_NEMS_timer_SE
 17848  0661  0877               	movf	??_NEMS_timer_SE,w
 17849  0662  00F0               	movwf	_NEMS_nmux1
 17850                           
 17851                           ;NEMS.c: 958:             NEMS_pmux1 = waveform.channel1;
 17852  0663  30EC               	movlw	236
 17853  0664  0086               	movwf	6
 17854  0665  3027               	movlw	39
 17855  0666  0087               	movwf	7
 17856  0667  0801               	movf	1,w
 17857  0668  00F7               	movwf	??_NEMS_timer_SE
 17858  0669  0877               	movf	??_NEMS_timer_SE,w
 17859  066A  00D2               	movwf	_NEMS_pmux1
 17860                           
 17861                           ;NEMS.c: 959:             waveform.current_amplitude = waveform.pulse_amplitude >> wavef
      +                          orm.symmetry_divider;
 17862  066B  303C               	movlw	60
 17863  066C  0086               	movwf	6
 17864  066D  3026               	movlw	38
 17865  066E  0087               	movwf	7
 17866  066F  3151               	addfsr 1,17
 17867  0670  0801               	movf	1,w
 17868  0671  00F7               	movwf	??_NEMS_timer_SE
 17869  0672  303C               	movlw	60
 17870  0673  0086               	movwf	6
 17871  0674  3026               	movlw	38
 17872  0675  0087               	movwf	7
 17873  0676  3152               	addfsr 1,18
 17874  0677  0A01               	incf	1,w
 17875  0678  2E7A               	goto	u220_24
 17876  0679                     u220_25:
 17877  0679  36F7               	lsrf	??_NEMS_timer_SE,f
 17878  067A                     u220_24:
 17879  067A  0B89               	decfsz	9,f
 17880  067B  2E79               	goto	u220_25
 17881  067C  0877               	movf	??_NEMS_timer_SE,w
 17882  067D  00F8               	movwf	??_NEMS_timer_SE+1
 17883  067E  304F               	movlw	79
 17884  067F  0086               	movwf	6
 17885  0680  3026               	movlw	38
 17886  0681  0087               	movwf	7
 17887  0682  0878               	movf	??_NEMS_timer_SE+1,w
 17888  0683  0081               	movwf	1
 17889                           
 17890                           ;NEMS.c: 961:         } else {
 17891  0684  0008               	return
 17892  0685                     i1l4029:
 17893                           
 17894                           ;NEMS.c: 962:             NEMS_pulse_states = NEMS_PULSE_OFF;
 17895  0685  01D3               	clrf	_NEMS_pulse_states	;volatile
 17896  0686  2E39               	goto	L6
 17897  0687                     __end_of_NEMS_timer_SE:	
 17898                           ;NEMS.c: 964:             NEMS_pmux1 = 0;
 17899                           
 17900                           ;NEMS.c: 963:             NEMS_nmux1 = 0;
 17901                           
 17902                           
 17903                           	psect	text73
 17904  0072                     __ptext73:	
 17905 ;; *************** function _NEMS_timer *****************
 17906 ;; Defined at:
 17907 ;;		line 760 in file "NEMS.c"
 17908 ;; Parameters:    Size  Location     Type
 17909 ;;		None
 17910 ;; Auto vars:     Size  Location     Type
 17911 ;;		None
 17912 ;; Return value:  Size  Location     Type
 17913 ;;                  1    wreg      void 
 17914 ;; Registers used:
 17915 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17916 ;; Tracked objects:
 17917 ;;		On entry : 3F/0
 17918 ;;		On exit  : 3F/0
 17919 ;;		Unchanged: 0/0
 17920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17923 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17924 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17925 ;;Total ram usage:        5 bytes
 17926 ;; Hardware stack levels used:    1
 17927 ;; Hardware stack levels required when called:    1
 17928 ;; This function calls:
 17929 ;;		i1_DAC1_SetOutput
 17930 ;; This function is called by:
 17931 ;;		_NEMS_initialize
 17932 ;;		_NEMS_binary_command
 17933 ;;		_NEMS_start_program
 17934 ;;		_TMR0_ISR
 17935 ;; This function uses a non-reentrant model
 17936 ;;
 17937                           
 17938                           
 17939                           ;psect for function _NEMS_timer
 17940  0072                     _NEMS_timer:
 17941                           
 17942                           ;NEMS.c: 765:     DAC1_SetOutput(waveform.current_amplitude);
 17943                           
 17944                           ;incstack = 0
 17945                           ; Regs used in _NEMS_timer: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17946  0072  303C               	movlw	60
 17947  0073  0086               	movwf	6
 17948  0074  3026               	movlw	38
 17949  0075  0087               	movwf	7
 17950  0076  3153               	addfsr 1,19
 17951  0077  0801               	movf	1,w
 17952  0078  3195  258E  3180   	fcall	i1_DAC1_SetOutput
 17953                           
 17954                           ;NEMS.c: 769:     LATC = NEMS_nmux1;
 17955  007B  0870               	movf	_NEMS_nmux1,w
 17956  007C  0140               	movlb	0	; select bank0
 17957  007D  009A               	movwf	26	;volatile
 17958                           
 17959                           ;NEMS.c: 770:     LATB = NEMS_pmux1;
 17960  007E  0852               	movf	_NEMS_pmux1,w
 17961  007F  0099               	movwf	25	;volatile
 17962                           
 17963                           ;NEMS.c: 773:     waveform.clock_index++;
 17964  0080  303C               	movlw	60
 17965  0081  0086               	movwf	6
 17966  0082  3026               	movlw	38
 17967  0083  0087               	movwf	7
 17968  0084  3142               	addfsr 1,2
 17969  0085  3001               	movlw	1
 17970  0086  0781               	addwf	1,f
 17971  0087  3141               	addfsr 1,1
 17972  0088  1803               	skipnc
 17973  0089  0A81               	incf	1,f
 17974                           
 17975                           ;NEMS.c: 776:     if (waveform.clock_index >= waveform.num_clocks_per_pulse) {
 17976  008A  303C               	movlw	60
 17977  008B  0086               	movwf	6
 17978  008C  3026               	movlw	38
 17979  008D  0087               	movwf	7
 17980  008E  3F40               	moviw [0]fsr1
 17981  008F  00F7               	movwf	??_NEMS_timer
 17982  0090  3F41               	moviw [1]fsr1
 17983  0091  00F8               	movwf	??_NEMS_timer+1
 17984  0092  303C               	movlw	60
 17985  0093  0086               	movwf	6
 17986  0094  3026               	movlw	38
 17987  0095  0087               	movwf	7
 17988  0096  3142               	addfsr 1,2
 17989  0097  3F40               	moviw [0]fsr1
 17990  0098  00F9               	movwf	??_NEMS_timer+2
 17991  0099  3F41               	moviw [1]fsr1
 17992  009A  00FA               	movwf	??_NEMS_timer+3
 17993  009B  0878               	movf	??_NEMS_timer+1,w
 17994  009C  027A               	subwf	??_NEMS_timer+3,w
 17995  009D  1D03               	skipz
 17996  009E  28A1               	goto	u193_25
 17997  009F  0877               	movf	??_NEMS_timer,w
 17998  00A0  0279               	subwf	??_NEMS_timer+2,w
 17999  00A1                     u193_25:
 18000  00A1  1C03               	skipc
 18001  00A2  2A24               	goto	i1l3913
 18002                           
 18003                           ;NEMS.c: 777:         waveform.clock_index = 0;
 18004  00A3  303C               	movlw	60
 18005  00A4  0086               	movwf	6
 18006  00A5  3026               	movlw	38
 18007  00A6  0087               	movwf	7
 18008  00A7  3142               	addfsr 1,2
 18009  00A8  3000               	movlw	0
 18010  00A9  3FC0               	movwi [0]fsr1
 18011  00AA  3FC1               	movwi [1]fsr1
 18012                           
 18013                           ;NEMS.c: 780:          NEMS_pulse_states = NEMS_PLUS_UP;
 18014  00AB  3002               	movlw	2
 18015  00AC  00F7               	movwf	??_NEMS_timer
 18016  00AD  0877               	movf	??_NEMS_timer,w
 18017  00AE  00D3               	movwf	_NEMS_pulse_states	;volatile
 18018                           
 18019                           ;NEMS.c: 782:         if (channel_control) {
 18020  00AF  0851               	movf	_channel_control,w
 18021  00B0  1903               	btfsc	3,2
 18022  00B1  2963               	goto	i1l874
 18023                           
 18024                           ;NEMS.c: 783:             channel_control = 0;
 18025  00B2  01D1               	clrf	_channel_control
 18026                           
 18027                           ;NEMS.c: 785:             waveform.pulse_index++;
 18028  00B3  303C               	movlw	60
 18029  00B4  0086               	movwf	6
 18030  00B5  3026               	movlw	38
 18031  00B6  0087               	movwf	7
 18032  00B7  3144               	addfsr 1,4
 18033  00B8  3001               	movlw	1
 18034  00B9  0781               	addwf	1,f
 18035  00BA  3141               	addfsr 1,1
 18036  00BB  1803               	skipnc
 18037  00BC  0A81               	incf	1,f
 18038                           
 18039                           ;NEMS.c: 788:             if (waveform.pulse_index < waveform.ramp_up_time) {
 18040  00BD  301C               	movlw	28
 18041  00BE  0086               	movwf	6
 18042  00BF  3027               	movlw	39
 18043  00C0  0087               	movwf	7
 18044  00C1  3F40               	moviw [0]fsr1
 18045  00C2  00F7               	movwf	??_NEMS_timer
 18046  00C3  3F41               	moviw [1]fsr1
 18047  00C4  00F8               	movwf	??_NEMS_timer+1
 18048  00C5  303C               	movlw	60
 18049  00C6  0086               	movwf	6
 18050  00C7  3026               	movlw	38
 18051  00C8  0087               	movwf	7
 18052  00C9  3144               	addfsr 1,4
 18053  00CA  3F40               	moviw [0]fsr1
 18054  00CB  00F9               	movwf	??_NEMS_timer+2
 18055  00CC  3F41               	moviw [1]fsr1
 18056  00CD  00FA               	movwf	??_NEMS_timer+3
 18057  00CE  0878               	movf	??_NEMS_timer+1,w
 18058  00CF  027A               	subwf	??_NEMS_timer+3,w
 18059  00D0  1D03               	skipz
 18060  00D1  28D4               	goto	u195_25
 18061  00D2  0877               	movf	??_NEMS_timer,w
 18062  00D3  0279               	subwf	??_NEMS_timer+2,w
 18063  00D4                     u195_25:
 18064  00D4  1803               	skipnc
 18065  00D5  28E4               	goto	i1l3869
 18066                           
 18067                           ;NEMS.c: 789:                 waveform.pulse_amplitude = waveform.ramp_up_amplitude[wave
      +                          form.pulse_index];
 18068  00D6  303C               	movlw	60
 18069  00D7  0086               	movwf	6
 18070  00D8  3026               	movlw	38
 18071  00D9  0087               	movwf	7
 18072  00DA  3144               	addfsr 1,4
 18073  00DB  3052               	movlw	82
 18074  00DC  00F7               	movwf	??_NEMS_timer
 18075  00DD  3026               	movlw	38
 18076  00DE  00F8               	movwf	??_NEMS_timer+1
 18077  00DF  3F40               	moviw [0]fsr1
 18078  00E0  0777               	addwf	??_NEMS_timer,w
 18079  00E1  0084               	movwf	4
 18080  00E2  3F41               	moviw [1]fsr1
 18081  00E3  2995               	goto	L15
 18082  00E4                     i1l3869:	
 18083                           ;NEMS.c: 791:             } else if (waveform.pulse_index < waveform.ON_time) {
 18084                           
 18085  00E4  303C               	movlw	60
 18086  00E5  0086               	movwf	6
 18087  00E6  3026               	movlw	38
 18088  00E7  0087               	movwf	7
 18089  00E8  314C               	addfsr 1,12
 18090  00E9  3F40               	moviw [0]fsr1
 18091  00EA  00F7               	movwf	??_NEMS_timer
 18092  00EB  3F41               	moviw [1]fsr1
 18093  00EC  00F8               	movwf	??_NEMS_timer+1
 18094  00ED  303C               	movlw	60
 18095  00EE  0086               	movwf	6
 18096  00EF  3026               	movlw	38
 18097  00F0  0087               	movwf	7
 18098  00F1  3144               	addfsr 1,4
 18099  00F2  3F40               	moviw [0]fsr1
 18100  00F3  00F9               	movwf	??_NEMS_timer+2
 18101  00F4  3F41               	moviw [1]fsr1
 18102  00F5  00FA               	movwf	??_NEMS_timer+3
 18103  00F6  0878               	movf	??_NEMS_timer+1,w
 18104  00F7  027A               	subwf	??_NEMS_timer+3,w
 18105  00F8  1D03               	skipz
 18106  00F9  28FC               	goto	u196_25
 18107  00FA  0877               	movf	??_NEMS_timer,w
 18108  00FB  0279               	subwf	??_NEMS_timer+2,w
 18109  00FC                     u196_25:
 18110  00FC  1803               	skipnc
 18111  00FD  2904               	goto	i1l3873
 18112                           
 18113                           ;NEMS.c: 792:                 waveform.pulse_amplitude = waveform.program_amplitude;
 18114  00FE  303C               	movlw	60
 18115  00FF  0086               	movwf	6
 18116  0100  3026               	movlw	38
 18117  0101  0087               	movwf	7
 18118  0102  3150               	addfsr 1,16
 18119  0103  29BE               	goto	L16
 18120  0104                     i1l3873:	
 18121                           ;NEMS.c: 794:             } else if (waveform.pulse_index < waveform.ramp_down_time) {
 18122                           
 18123  0104  30E8               	movlw	232
 18124  0105  0086               	movwf	6
 18125  0106  3027               	movlw	39
 18126  0107  0087               	movwf	7
 18127  0108  3F40               	moviw [0]fsr1
 18128  0109  00F7               	movwf	??_NEMS_timer
 18129  010A  3F41               	moviw [1]fsr1
 18130  010B  00F8               	movwf	??_NEMS_timer+1
 18131  010C  303C               	movlw	60
 18132  010D  0086               	movwf	6
 18133  010E  3026               	movlw	38
 18134  010F  0087               	movwf	7
 18135  0110  3144               	addfsr 1,4
 18136  0111  3F40               	moviw [0]fsr1
 18137  0112  00F9               	movwf	??_NEMS_timer+2
 18138  0113  3F41               	moviw [1]fsr1
 18139  0114  00FA               	movwf	??_NEMS_timer+3
 18140  0115  0878               	movf	??_NEMS_timer+1,w
 18141  0116  027A               	subwf	??_NEMS_timer+3,w
 18142  0117  1D03               	skipz
 18143  0118  291B               	goto	u197_25
 18144  0119  0877               	movf	??_NEMS_timer,w
 18145  011A  0279               	subwf	??_NEMS_timer+2,w
 18146  011B                     u197_25:
 18147  011B  1803               	skipnc
 18148  011C  2936               	goto	i1l3877
 18149                           
 18150                           ;NEMS.c: 795:                 waveform.pulse_amplitude = waveform.ramp_down_amplitude[wa
      +                          veform.pulse_index - waveform.ON_time];
 18151  011D  303C               	movlw	60
 18152  011E  0086               	movwf	6
 18153  011F  3026               	movlw	38
 18154  0120  0087               	movwf	7
 18155  0121  3144               	addfsr 1,4
 18156  0122  303C               	movlw	60
 18157  0123  0084               	movwf	4
 18158  0124  3026               	movlw	38
 18159  0125  0085               	movwf	5
 18160  0126  310C               	addfsr 0,12
 18161  0127  301E               	movlw	30
 18162  0128  00F7               	movwf	??_NEMS_timer
 18163  0129  3027               	movlw	39
 18164  012A  00F8               	movwf	??_NEMS_timer+1
 18165  012B  3F00               	moviw [0]fsr0
 18166  012C  0277               	subwf	??_NEMS_timer,w
 18167  012D  00F9               	movwf	??_NEMS_timer+2
 18168  012E  3F01               	moviw [1]fsr0
 18169  012F  3B78               	subwfb	??_NEMS_timer+1,w
 18170  0130  00FA               	movwf	??_NEMS_timer+3
 18171  0131  3F40               	moviw [0]fsr1
 18172  0132  0779               	addwf	??_NEMS_timer+2,w
 18173  0133  0084               	movwf	4
 18174  0134  3F41               	moviw [1]fsr1
 18175  0135  29F7               	goto	L14
 18176  0136                     i1l3877:	
 18177                           ;NEMS.c: 797:             } else if (waveform.pulse_index < waveform.OFF_time) {
 18178                           
 18179  0136  303C               	movlw	60
 18180  0137  0086               	movwf	6
 18181  0138  3026               	movlw	38
 18182  0139  0087               	movwf	7
 18183  013A  314E               	addfsr 1,14
 18184  013B  3F40               	moviw [0]fsr1
 18185  013C  00F7               	movwf	??_NEMS_timer
 18186  013D  3F41               	moviw [1]fsr1
 18187  013E  00F8               	movwf	??_NEMS_timer+1
 18188  013F  303C               	movlw	60
 18189  0140  0086               	movwf	6
 18190  0141  3026               	movlw	38
 18191  0142  0087               	movwf	7
 18192  0143  3144               	addfsr 1,4
 18193  0144  3F40               	moviw [0]fsr1
 18194  0145  00F9               	movwf	??_NEMS_timer+2
 18195  0146  3F41               	moviw [1]fsr1
 18196  0147  00FA               	movwf	??_NEMS_timer+3
 18197  0148  0878               	movf	??_NEMS_timer+1,w
 18198  0149  027A               	subwf	??_NEMS_timer+3,w
 18199  014A  1D03               	skipz
 18200  014B  294E               	goto	u198_25
 18201  014C  0877               	movf	??_NEMS_timer,w
 18202  014D  0279               	subwf	??_NEMS_timer+2,w
 18203  014E                     u198_25:
 18204  014E  1803               	skipnc
 18205  014F  295A               	goto	i1l3887
 18206  0150                     i1l3879:
 18207                           
 18208                           ;NEMS.c: 798:                 waveform.pulse_amplitude = 0;
 18209  0150  303C               	movlw	60
 18210  0151  0086               	movwf	6
 18211  0152  3026               	movlw	38
 18212  0153  0087               	movwf	7
 18213  0154  3151               	addfsr 1,17
 18214  0155  0181               	clrf	1
 18215                           
 18216                           ;NEMS.c: 799:                 NEMS_pulse_states = NEMS_PULSE_OFF;
 18217  0156  01D3               	clrf	_NEMS_pulse_states	;volatile
 18218                           
 18219                           ;NEMS.c: 800:                 NEMS_nmux1 = 0;
 18220  0157  01F0               	clrf	_NEMS_nmux1
 18221                           
 18222                           ;NEMS.c: 801:                 NEMS_pmux1 = 0;
 18223  0158  01D2               	clrf	_NEMS_pmux1
 18224                           
 18225                           ;NEMS.c: 802:             } else {
 18226  0159  2A24               	goto	i1l3913
 18227  015A                     i1l3887:
 18228                           
 18229                           ;NEMS.c: 803:                 waveform.pulse_index = 0;
 18230  015A  303C               	movlw	60
 18231  015B  0086               	movwf	6
 18232  015C  3026               	movlw	38
 18233  015D  0087               	movwf	7
 18234  015E  3144               	addfsr 1,4
 18235  015F  3000               	movlw	0
 18236  0160  3FC0               	movwi [0]fsr1
 18237  0161  3FC1               	movwi [1]fsr1
 18238  0162  2A24               	goto	i1l3913
 18239  0163                     i1l874:
 18240                           
 18241                           ;NEMS.c: 806:             channel_control = 1;
 18242  0163  01D1               	clrf	_channel_control
 18243  0164  0AD1               	incf	_channel_control,f
 18244                           
 18245                           ;NEMS.c: 808:             waveform.pulse_index2++;
 18246  0165  303C               	movlw	60
 18247  0166  0086               	movwf	6
 18248  0167  3026               	movlw	38
 18249  0168  0087               	movwf	7
 18250  0169  3146               	addfsr 1,6
 18251  016A  3001               	movlw	1
 18252  016B  0781               	addwf	1,f
 18253  016C  3141               	addfsr 1,1
 18254  016D  1803               	skipnc
 18255  016E  0A81               	incf	1,f
 18256                           
 18257                           ;NEMS.c: 811:             if (waveform.pulse_index2 < waveform.ramp_up_time) {
 18258  016F  301C               	movlw	28
 18259  0170  0086               	movwf	6
 18260  0171  3027               	movlw	39
 18261  0172  0087               	movwf	7
 18262  0173  3F40               	moviw [0]fsr1
 18263  0174  00F7               	movwf	??_NEMS_timer
 18264  0175  3F41               	moviw [1]fsr1
 18265  0176  00F8               	movwf	??_NEMS_timer+1
 18266  0177  303C               	movlw	60
 18267  0178  0086               	movwf	6
 18268  0179  3026               	movlw	38
 18269  017A  0087               	movwf	7
 18270  017B  3146               	addfsr 1,6
 18271  017C  3F40               	moviw [0]fsr1
 18272  017D  00F9               	movwf	??_NEMS_timer+2
 18273  017E  3F41               	moviw [1]fsr1
 18274  017F  00FA               	movwf	??_NEMS_timer+3
 18275  0180  0878               	movf	??_NEMS_timer+1,w
 18276  0181  027A               	subwf	??_NEMS_timer+3,w
 18277  0182  1D03               	skipz
 18278  0183  2986               	goto	u199_25
 18279  0184  0877               	movf	??_NEMS_timer,w
 18280  0185  0279               	subwf	??_NEMS_timer+2,w
 18281  0186                     u199_25:
 18282  0186  1803               	skipnc
 18283  0187  299F               	goto	i1l3893
 18284                           
 18285                           ;NEMS.c: 812:                 waveform.pulse_amplitude = waveform.ramp_up_amplitude2[wav
      +                          eform.pulse_index2];
 18286  0188  303C               	movlw	60
 18287  0189  0086               	movwf	6
 18288  018A  3026               	movlw	38
 18289  018B  0087               	movwf	7
 18290  018C  3146               	addfsr 1,6
 18291  018D  30B6               	movlw	182
 18292  018E  00F7               	movwf	??_NEMS_timer
 18293  018F  3026               	movlw	38
 18294  0190  00F8               	movwf	??_NEMS_timer+1
 18295  0191  3F40               	moviw [0]fsr1
 18296  0192  0777               	addwf	??_NEMS_timer,w
 18297  0193  0084               	movwf	4
 18298  0194  3F41               	moviw [1]fsr1
 18299  0195                     L15:
 18300  0195  3D78               	addwfc	??_NEMS_timer+1,w
 18301  0196  0085               	movwf	5
 18302  0197  0800               	movf	0,w
 18303  0198  00F9               	movwf	??_NEMS_timer+2
 18304  0199  304D               	movlw	77
 18305  019A  0086               	movwf	6
 18306  019B  3026               	movlw	38
 18307  019C  0087               	movwf	7
 18308  019D  0879               	movf	??_NEMS_timer+2,w
 18309  019E  2A00               	goto	L11
 18310  019F                     i1l3893:	
 18311                           ;NEMS.c: 814:             } else if (waveform.pulse_index2 < waveform.ON_time) {
 18312                           
 18313  019F  303C               	movlw	60
 18314  01A0  0086               	movwf	6
 18315  01A1  3026               	movlw	38
 18316  01A2  0087               	movwf	7
 18317  01A3  314C               	addfsr 1,12
 18318  01A4  3F40               	moviw [0]fsr1
 18319  01A5  00F7               	movwf	??_NEMS_timer
 18320  01A6  3F41               	moviw [1]fsr1
 18321  01A7  00F8               	movwf	??_NEMS_timer+1
 18322  01A8  303C               	movlw	60
 18323  01A9  0086               	movwf	6
 18324  01AA  3026               	movlw	38
 18325  01AB  0087               	movwf	7
 18326  01AC  3146               	addfsr 1,6
 18327  01AD  3F40               	moviw [0]fsr1
 18328  01AE  00F9               	movwf	??_NEMS_timer+2
 18329  01AF  3F41               	moviw [1]fsr1
 18330  01B0  00FA               	movwf	??_NEMS_timer+3
 18331  01B1  0878               	movf	??_NEMS_timer+1,w
 18332  01B2  027A               	subwf	??_NEMS_timer+3,w
 18333  01B3  1D03               	skipz
 18334  01B4  29B7               	goto	u200_25
 18335  01B5  0877               	movf	??_NEMS_timer,w
 18336  01B6  0279               	subwf	??_NEMS_timer+2,w
 18337  01B7                     u200_25:
 18338  01B7  1803               	skipnc
 18339  01B8  29C6               	goto	i1l3897
 18340                           
 18341                           ;NEMS.c: 815:                 waveform.pulse_amplitude = waveform.program_amplitude2;
 18342  01B9  303C               	movlw	60
 18343  01BA  0086               	movwf	6
 18344  01BB  3026               	movlw	38
 18345  01BC  0087               	movwf	7
 18346  01BD  3154               	addfsr 1,20
 18347  01BE                     L16:
 18348  01BE  0801               	movf	1,w
 18349  01BF  00F7               	movwf	??_NEMS_timer
 18350  01C0  304D               	movlw	77
 18351  01C1  0086               	movwf	6
 18352  01C2  3026               	movlw	38
 18353  01C3  0087               	movwf	7
 18354  01C4  0877               	movf	??_NEMS_timer,w
 18355  01C5  2A00               	goto	L11
 18356  01C6                     i1l3897:	
 18357                           ;NEMS.c: 817:             } else if (waveform.pulse_index2 < waveform.ramp_down_time) {
 18358                           
 18359  01C6  30E8               	movlw	232
 18360  01C7  0086               	movwf	6
 18361  01C8  3027               	movlw	39
 18362  01C9  0087               	movwf	7
 18363  01CA  3F40               	moviw [0]fsr1
 18364  01CB  00F7               	movwf	??_NEMS_timer
 18365  01CC  3F41               	moviw [1]fsr1
 18366  01CD  00F8               	movwf	??_NEMS_timer+1
 18367  01CE  303C               	movlw	60
 18368  01CF  0086               	movwf	6
 18369  01D0  3026               	movlw	38
 18370  01D1  0087               	movwf	7
 18371  01D2  3146               	addfsr 1,6
 18372  01D3  3F40               	moviw [0]fsr1
 18373  01D4  00F9               	movwf	??_NEMS_timer+2
 18374  01D5  3F41               	moviw [1]fsr1
 18375  01D6  00FA               	movwf	??_NEMS_timer+3
 18376  01D7  0878               	movf	??_NEMS_timer+1,w
 18377  01D8  027A               	subwf	??_NEMS_timer+3,w
 18378  01D9  1D03               	skipz
 18379  01DA  29DD               	goto	u201_25
 18380  01DB  0877               	movf	??_NEMS_timer,w
 18381  01DC  0279               	subwf	??_NEMS_timer+2,w
 18382  01DD                     u201_25:
 18383  01DD  1803               	skipnc
 18384  01DE  2A02               	goto	i1l3901
 18385                           
 18386                           ;NEMS.c: 818:                 waveform.pulse_amplitude = waveform.ramp_down_amplitude2[w
      +                          aveform.pulse_index2 - waveform.ON_time];
 18387  01DF  303C               	movlw	60
 18388  01E0  0086               	movwf	6
 18389  01E1  3026               	movlw	38
 18390  01E2  0087               	movwf	7
 18391  01E3  3146               	addfsr 1,6
 18392  01E4  303C               	movlw	60
 18393  01E5  0084               	movwf	4
 18394  01E6  3026               	movlw	38
 18395  01E7  0085               	movwf	5
 18396  01E8  310C               	addfsr 0,12
 18397  01E9  3082               	movlw	130
 18398  01EA  00F7               	movwf	??_NEMS_timer
 18399  01EB  3027               	movlw	39
 18400  01EC  00F8               	movwf	??_NEMS_timer+1
 18401  01ED  3F00               	moviw [0]fsr0
 18402  01EE  0277               	subwf	??_NEMS_timer,w
 18403  01EF  00F9               	movwf	??_NEMS_timer+2
 18404  01F0  3F01               	moviw [1]fsr0
 18405  01F1  3B78               	subwfb	??_NEMS_timer+1,w
 18406  01F2  00FA               	movwf	??_NEMS_timer+3
 18407  01F3  3F40               	moviw [0]fsr1
 18408  01F4  0779               	addwf	??_NEMS_timer+2,w
 18409  01F5  0084               	movwf	4
 18410  01F6  3F41               	moviw [1]fsr1
 18411  01F7                     L14:
 18412  01F7  3D7A               	addwfc	??_NEMS_timer+3,w
 18413  01F8  0085               	movwf	5
 18414  01F9  0800               	movf	0,w
 18415  01FA  00FB               	movwf	??_NEMS_timer+4
 18416  01FB  304D               	movlw	77
 18417  01FC  0086               	movwf	6
 18418  01FD  3026               	movlw	38
 18419  01FE  0087               	movwf	7
 18420  01FF  087B               	movf	??_NEMS_timer+4,w
 18421  0200                     L11:
 18422  0200  0081               	movwf	1
 18423                           
 18424                           ;NEMS.c: 820:             } else if (waveform.pulse_index2 < waveform.OFF_time) {
 18425  0201  2A24               	goto	i1l3913
 18426  0202                     i1l3901:
 18427  0202  303C               	movlw	60
 18428  0203  0086               	movwf	6
 18429  0204  3026               	movlw	38
 18430  0205  0087               	movwf	7
 18431  0206  314E               	addfsr 1,14
 18432  0207  3F40               	moviw [0]fsr1
 18433  0208  00F7               	movwf	??_NEMS_timer
 18434  0209  3F41               	moviw [1]fsr1
 18435  020A  00F8               	movwf	??_NEMS_timer+1
 18436  020B  303C               	movlw	60
 18437  020C  0086               	movwf	6
 18438  020D  3026               	movlw	38
 18439  020E  0087               	movwf	7
 18440  020F  3146               	addfsr 1,6
 18441  0210  3F40               	moviw [0]fsr1
 18442  0211  00F9               	movwf	??_NEMS_timer+2
 18443  0212  3F41               	moviw [1]fsr1
 18444  0213  00FA               	movwf	??_NEMS_timer+3
 18445  0214  0878               	movf	??_NEMS_timer+1,w
 18446  0215  027A               	subwf	??_NEMS_timer+3,w
 18447  0216  1D03               	skipz
 18448  0217  2A1A               	goto	u202_25
 18449  0218  0877               	movf	??_NEMS_timer,w
 18450  0219  0279               	subwf	??_NEMS_timer+2,w
 18451  021A                     u202_25:
 18452  021A  1C03               	btfss	3,0
 18453  021B  2950               	goto	i1l3879
 18454                           
 18455                           ;NEMS.c: 826:                 waveform.pulse_index2 = 0;
 18456  021C  303C               	movlw	60
 18457  021D  0086               	movwf	6
 18458  021E  3026               	movlw	38
 18459  021F  0087               	movwf	7
 18460  0220  3146               	addfsr 1,6
 18461  0221  3000               	movlw	0
 18462  0222  3FC0               	movwi [0]fsr1
 18463  0223  3FC1               	movwi [1]fsr1
 18464  0224                     i1l3913:
 18465                           
 18466                           ;NEMS.c: 834:     if (NEMS_pulse_states != NEMS_PULSE_OFF) {
 18467  0224  0853               	movf	_NEMS_pulse_states,w
 18468  0225  1903               	btfsc	3,2
 18469  0226  0008               	return
 18470                           
 18471                           ;NEMS.c: 835:         if (waveform.clock_index < program.phase_duration) {
 18472  0227  085A               	movf	_program+3,w	;volatile
 18473  0228  00F7               	movwf	??_NEMS_timer
 18474  0229  01F8               	clrf	??_NEMS_timer+1
 18475  022A  303C               	movlw	60
 18476  022B  0086               	movwf	6
 18477  022C  3026               	movlw	38
 18478  022D  0087               	movwf	7
 18479  022E  3142               	addfsr 1,2
 18480  022F  3F40               	moviw [0]fsr1
 18481  0230  00F9               	movwf	??_NEMS_timer+2
 18482  0231  3F41               	moviw [1]fsr1
 18483  0232  00FA               	movwf	??_NEMS_timer+3
 18484  0233  0878               	movf	??_NEMS_timer+1,w
 18485  0234  027A               	subwf	??_NEMS_timer+3,w
 18486  0235  1D03               	skipz
 18487  0236  2A39               	goto	u204_25
 18488  0237  0877               	movf	??_NEMS_timer,w
 18489  0238  0279               	subwf	??_NEMS_timer+2,w
 18490  0239                     u204_25:
 18491  0239  1803               	skipnc
 18492  023A  2A7E               	goto	i1l3925
 18493                           
 18494                           ;NEMS.c: 836:             NEMS_pulse_states = NEMS_PLUS_UP;
 18495  023B  3002               	movlw	2
 18496  023C  00F7               	movwf	??_NEMS_timer
 18497  023D  0877               	movf	??_NEMS_timer,w
 18498  023E  00D3               	movwf	_NEMS_pulse_states	;volatile
 18499                           
 18500                           ;NEMS.c: 838:             if (channel_control) {
 18501  023F  0851               	movf	_channel_control,w
 18502  0240  1903               	btfsc	3,2
 18503  0241  2A60               	goto	i1l3923
 18504                           
 18505                           ;NEMS.c: 839:                 NEMS_nmux1 = waveform.channel3;
 18506  0242  30EE               	movlw	238
 18507  0243  0086               	movwf	6
 18508  0244  3027               	movlw	39
 18509  0245  0087               	movwf	7
 18510  0246  0801               	movf	1,w
 18511  0247  00F7               	movwf	??_NEMS_timer
 18512  0248  0877               	movf	??_NEMS_timer,w
 18513  0249  00F0               	movwf	_NEMS_nmux1
 18514                           
 18515                           ;NEMS.c: 840:                 NEMS_pmux1 = waveform.channel4;
 18516  024A  30EF               	movlw	239
 18517  024B  0086               	movwf	6
 18518  024C  3027               	movlw	39
 18519  024D  0087               	movwf	7
 18520  024E  0801               	movf	1,w
 18521  024F  00F7               	movwf	??_NEMS_timer
 18522  0250  0877               	movf	??_NEMS_timer,w
 18523  0251  00D2               	movwf	_NEMS_pmux1
 18524                           
 18525                           ;NEMS.c: 841:                 waveform.current_amplitude = waveform.pulse_amplitude;
 18526  0252  303C               	movlw	60
 18527  0253  0086               	movwf	6
 18528  0254  3026               	movlw	38
 18529  0255  0087               	movwf	7
 18530  0256  3151               	addfsr 1,17
 18531  0257  0801               	movf	1,w
 18532  0258  00F7               	movwf	??_NEMS_timer
 18533  0259  304F               	movlw	79
 18534  025A  0086               	movwf	6
 18535  025B  3026               	movlw	38
 18536  025C  0087               	movwf	7
 18537  025D  0877               	movf	??_NEMS_timer,w
 18538  025E  0081               	movwf	1
 18539                           
 18540                           ;NEMS.c: 842:             } else {
 18541  025F  0008               	return
 18542  0260                     i1l3923:
 18543                           
 18544                           ;NEMS.c: 843:                 NEMS_nmux1 = waveform.channel1;
 18545  0260  30EC               	movlw	236
 18546  0261  0086               	movwf	6
 18547  0262  3027               	movlw	39
 18548  0263  0087               	movwf	7
 18549  0264  0801               	movf	1,w
 18550  0265  00F7               	movwf	??_NEMS_timer
 18551  0266  0877               	movf	??_NEMS_timer,w
 18552  0267  00F0               	movwf	_NEMS_nmux1
 18553                           
 18554                           ;NEMS.c: 844:                 NEMS_pmux1 = waveform.channel2;
 18555  0268  30ED               	movlw	237
 18556  0269  0086               	movwf	6
 18557  026A  3027               	movlw	39
 18558  026B  0087               	movwf	7
 18559  026C  0801               	movf	1,w
 18560  026D  00F7               	movwf	??_NEMS_timer
 18561  026E  0877               	movf	??_NEMS_timer,w
 18562  026F  00D2               	movwf	_NEMS_pmux1
 18563                           
 18564                           ;NEMS.c: 845:                 waveform.current_amplitude = waveform.pulse_amplitude;
 18565  0270  303C               	movlw	60
 18566  0271  0086               	movwf	6
 18567  0272  3026               	movlw	38
 18568  0273  0087               	movwf	7
 18569  0274  3151               	addfsr 1,17
 18570  0275  0801               	movf	1,w
 18571  0276  00F7               	movwf	??_NEMS_timer
 18572  0277  304F               	movlw	79
 18573  0278  0086               	movwf	6
 18574  0279  3026               	movlw	38
 18575  027A  0087               	movwf	7
 18576  027B  0877               	movf	??_NEMS_timer,w
 18577  027C  0081               	movwf	1
 18578  027D  0008               	return
 18579  027E                     i1l3925:
 18580  027E  303C               	movlw	60
 18581  027F  0086               	movwf	6
 18582  0280  3026               	movlw	38
 18583  0281  0087               	movwf	7
 18584  0282  314A               	addfsr 1,10
 18585  0283  0801               	movf	1,w
 18586  0284  00F7               	movwf	??_NEMS_timer
 18587  0285  01F8               	clrf	??_NEMS_timer+1
 18588  0286  303C               	movlw	60
 18589  0287  0086               	movwf	6
 18590  0288  3026               	movlw	38
 18591  0289  0087               	movwf	7
 18592  028A  3142               	addfsr 1,2
 18593  028B  3F40               	moviw [0]fsr1
 18594  028C  00F9               	movwf	??_NEMS_timer+2
 18595  028D  3F41               	moviw [1]fsr1
 18596  028E  00FA               	movwf	??_NEMS_timer+3
 18597  028F  0878               	movf	??_NEMS_timer+1,w
 18598  0290  027A               	subwf	??_NEMS_timer+3,w
 18599  0291  1D03               	skipz
 18600  0292  2A95               	goto	u206_25
 18601  0293  0877               	movf	??_NEMS_timer,w
 18602  0294  0279               	subwf	??_NEMS_timer+2,w
 18603  0295                     u206_25:
 18604  0295  1803               	skipnc
 18605  0296  2AA4               	goto	i1l3935
 18606                           
 18607                           ;NEMS.c: 851:             NEMS_pulse_states = NEMS_REST;
 18608  0297  3001               	movlw	1
 18609  0298  00F7               	movwf	??_NEMS_timer
 18610  0299  0877               	movf	??_NEMS_timer,w
 18611  029A  00D3               	movwf	_NEMS_pulse_states	;volatile
 18612  029B                     L13:
 18613                           
 18614                           ;NEMS.c: 852:             NEMS_nmux1 = 0;
 18615  029B  01F0               	clrf	_NEMS_nmux1
 18616                           
 18617                           ;NEMS.c: 853:             NEMS_pmux1 = 0;
 18618  029C  01D2               	clrf	_NEMS_pmux1
 18619                           
 18620                           ;NEMS.c: 855:             waveform.current_amplitude = 0;
 18621  029D  303C               	movlw	60
 18622  029E  0086               	movwf	6
 18623  029F  3026               	movlw	38
 18624  02A0  0087               	movwf	7
 18625  02A1  3153               	addfsr 1,19
 18626  02A2  0181               	clrf	1
 18627                           
 18628                           ;NEMS.c: 857:         } else if (waveform.clock_index < waveform.minus_phase_duration) {
 18629  02A3  0008               	return
 18630  02A4                     i1l3935:
 18631  02A4  303C               	movlw	60
 18632  02A5  0086               	movwf	6
 18633  02A6  3026               	movlw	38
 18634  02A7  0087               	movwf	7
 18635  02A8  314B               	addfsr 1,11
 18636  02A9  0801               	movf	1,w
 18637  02AA  00F7               	movwf	??_NEMS_timer
 18638  02AB  01F8               	clrf	??_NEMS_timer+1
 18639  02AC  303C               	movlw	60
 18640  02AD  0086               	movwf	6
 18641  02AE  3026               	movlw	38
 18642  02AF  0087               	movwf	7
 18643  02B0  3142               	addfsr 1,2
 18644  02B1  3F40               	moviw [0]fsr1
 18645  02B2  00F9               	movwf	??_NEMS_timer+2
 18646  02B3  3F41               	moviw [1]fsr1
 18647  02B4  00FA               	movwf	??_NEMS_timer+3
 18648  02B5  0878               	movf	??_NEMS_timer+1,w
 18649  02B6  027A               	subwf	??_NEMS_timer+3,w
 18650  02B7  1D03               	skipz
 18651  02B8  2ABB               	goto	u207_25
 18652  02B9  0877               	movf	??_NEMS_timer,w
 18653  02BA  0279               	subwf	??_NEMS_timer+2,w
 18654  02BB                     u207_25:
 18655  02BB  1803               	skipnc
 18656  02BC  2AF8               	goto	i1l3949
 18657                           
 18658                           ;NEMS.c: 858:             NEMS_pulse_states = NEMS_MINUS_UP;
 18659  02BD  3004               	movlw	4
 18660  02BE  00F7               	movwf	??_NEMS_timer
 18661  02BF  0877               	movf	??_NEMS_timer,w
 18662  02C0  00D3               	movwf	_NEMS_pulse_states	;volatile
 18663                           
 18664                           ;NEMS.c: 860:             if (channel_control) {
 18665  02C1  0851               	movf	_channel_control,w
 18666  02C2  1903               	btfsc	3,2
 18667  02C3  2AEE               	goto	i1l3945
 18668                           
 18669                           ;NEMS.c: 861:                 NEMS_nmux1 = waveform.channel4;
 18670  02C4  30EF               	movlw	239
 18671  02C5  0086               	movwf	6
 18672  02C6  3027               	movlw	39
 18673  02C7  0087               	movwf	7
 18674  02C8  0801               	movf	1,w
 18675  02C9  00F7               	movwf	??_NEMS_timer
 18676  02CA  0877               	movf	??_NEMS_timer,w
 18677  02CB  00F0               	movwf	_NEMS_nmux1
 18678                           
 18679                           ;NEMS.c: 862:                 NEMS_pmux1 = waveform.channel3;
 18680  02CC  30EE               	movlw	238
 18681  02CD                     L12:
 18682  02CD  0086               	movwf	6
 18683  02CE  3027               	movlw	39
 18684  02CF  0087               	movwf	7
 18685  02D0  0801               	movf	1,w
 18686  02D1  00F7               	movwf	??_NEMS_timer
 18687  02D2  0877               	movf	??_NEMS_timer,w
 18688  02D3  00D2               	movwf	_NEMS_pmux1
 18689                           
 18690                           ;NEMS.c: 863:                 waveform.current_amplitude = waveform.pulse_amplitude >> w
      +                          aveform.symmetry_divider;
 18691  02D4  303C               	movlw	60
 18692  02D5  0086               	movwf	6
 18693  02D6  3026               	movlw	38
 18694  02D7  0087               	movwf	7
 18695  02D8  3151               	addfsr 1,17
 18696  02D9  0801               	movf	1,w
 18697  02DA  00F7               	movwf	??_NEMS_timer
 18698  02DB  303C               	movlw	60
 18699  02DC  0086               	movwf	6
 18700  02DD  3026               	movlw	38
 18701  02DE  0087               	movwf	7
 18702  02DF  3152               	addfsr 1,18
 18703  02E0  0A01               	incf	1,w
 18704  02E1  2AE3               	goto	u209_24
 18705  02E2                     u209_25:
 18706  02E2  36F7               	lsrf	??_NEMS_timer,f
 18707  02E3                     u209_24:
 18708  02E3  0B89               	decfsz	9,f
 18709  02E4  2AE2               	goto	u209_25
 18710  02E5  0877               	movf	??_NEMS_timer,w
 18711  02E6  00F8               	movwf	??_NEMS_timer+1
 18712  02E7  304F               	movlw	79
 18713  02E8  0086               	movwf	6
 18714  02E9  3026               	movlw	38
 18715  02EA  0087               	movwf	7
 18716  02EB  0878               	movf	??_NEMS_timer+1,w
 18717  02EC  0081               	movwf	1
 18718                           
 18719                           ;NEMS.c: 864:             } else {
 18720  02ED  0008               	return
 18721  02EE                     i1l3945:
 18722                           
 18723                           ;NEMS.c: 865:                 NEMS_nmux1 = waveform.channel2;
 18724  02EE  30ED               	movlw	237
 18725  02EF  0086               	movwf	6
 18726  02F0  3027               	movlw	39
 18727  02F1  0087               	movwf	7
 18728  02F2  0801               	movf	1,w
 18729  02F3  00F7               	movwf	??_NEMS_timer
 18730  02F4  0877               	movf	??_NEMS_timer,w
 18731  02F5  00F0               	movwf	_NEMS_nmux1
 18732                           
 18733                           ;NEMS.c: 866:                 NEMS_pmux1 = waveform.channel1;
 18734  02F6  30EC               	movlw	236
 18735  02F7  2ACD               	goto	L12
 18736  02F8                     i1l3949:
 18737                           
 18738                           ;NEMS.c: 872:             NEMS_pulse_states = NEMS_PULSE_OFF;
 18739  02F8  01D3               	clrf	_NEMS_pulse_states	;volatile
 18740  02F9  2A9B               	goto	L13
 18741  02FA                     __end_of_NEMS_timer:	
 18742                           ;NEMS.c: 874:             NEMS_pmux1 = 0;
 18743                           
 18744                           ;NEMS.c: 873:             NEMS_nmux1 = 0;
 18745                           
 18746                           
 18747                           	psect	text74
 18748  1575                     __ptext74:	
 18749 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 18750 ;; Defined at:
 18751 ;;		line 155 in file "mcc_generated_files/tmr0.c"
 18752 ;; Parameters:    Size  Location     Type
 18753 ;;		None
 18754 ;; Auto vars:     Size  Location     Type
 18755 ;;		None
 18756 ;; Return value:  Size  Location     Type
 18757 ;;                  1    wreg      void 
 18758 ;; Registers used:
 18759 ;;		None
 18760 ;; Tracked objects:
 18761 ;;		On entry : 3F/0
 18762 ;;		On exit  : 3F/0
 18763 ;;		Unchanged: 3F/0
 18764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18769 ;;Total ram usage:        0 bytes
 18770 ;; Hardware stack levels used:    1
 18771 ;; This function calls:
 18772 ;;		Nothing
 18773 ;; This function is called by:
 18774 ;;		_TMR0_Initialize
 18775 ;;		_TMR0_ISR
 18776 ;; This function uses a non-reentrant model
 18777 ;;
 18778                           
 18779                           
 18780                           ;psect for function _TMR0_DefaultInterruptHandler
 18781  1575                     _TMR0_DefaultInterruptHandler:
 18782                           
 18783                           ;incstack = 0
 18784                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 18785  1575  0008               	return
 18786  1576                     __end_of_TMR0_DefaultInterruptHandler:
 18787                           
 18788                           	psect	text75
 18789  158E                     __ptext75:	
 18790 ;; *************** function i1_DAC1_SetOutput *****************
 18791 ;; Defined at:
 18792 ;;		line 66 in file "mcc_generated_files/dac1.c"
 18793 ;; Parameters:    Size  Location     Type
 18794 ;;  inputData       1    wreg     unsigned char 
 18795 ;; Auto vars:     Size  Location     Type
 18796 ;;  inputData       1    0[COMMON] unsigned char 
 18797 ;; Return value:  Size  Location     Type
 18798 ;;                  1    wreg      void 
 18799 ;; Registers used:
 18800 ;;		wreg
 18801 ;; Tracked objects:
 18802 ;;		On entry : 3F/0
 18803 ;;		On exit  : 3F/12
 18804 ;;		Unchanged: 0/0
 18805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18807 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18809 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18810 ;;Total ram usage:        1 bytes
 18811 ;; Hardware stack levels used:    1
 18812 ;; This function calls:
 18813 ;;		Nothing
 18814 ;; This function is called by:
 18815 ;;		_NEMS_timer
 18816 ;;		_NEMS_timer_SE
 18817 ;; This function uses a non-reentrant model
 18818 ;;
 18819                           
 18820                           
 18821                           ;psect for function i1_DAC1_SetOutput
 18822  158E                     i1_DAC1_SetOutput:
 18823                           
 18824                           ;incstack = 0
 18825                           ; Regs used in i1_DAC1_SetOutput: [wreg]
 18826                           ;i1DAC1_SetOutput@inputData stored from wreg
 18827  158E  00F6               	movwf	i1DAC1_SetOutput@inputData
 18828                           
 18829                           ;mcc_generated_files/dac1.c: 66: void DAC1_SetOutput(uint8_t inputData);mcc_generated_fi
      +                          les/dac1.c: 67: {;mcc_generated_files/dac1.c: 68:     DAC1CON1 = inputData;
 18830  158F  0876               	movf	i1DAC1_SetOutput@inputData,w
 18831  1590  0152               	movlb	18	; select bank18
 18832  1591  008F               	movwf	15	;volatile
 18833  1592  0008               	return
 18834  1593                     __end_ofi1_DAC1_SetOutput:
 18835                           
 18836                           	psect	text76
 18837  088B                     __ptext76:	
 18838 ;; *************** function _EUSART1_Transmit_ISR *****************
 18839 ;; Defined at:
 18840 ;;		line 197 in file "mcc_generated_files/eusart1.c"
 18841 ;; Parameters:    Size  Location     Type
 18842 ;;		None
 18843 ;; Auto vars:     Size  Location     Type
 18844 ;;		None
 18845 ;; Return value:  Size  Location     Type
 18846 ;;                  1    wreg      void 
 18847 ;; Registers used:
 18848 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18849 ;; Tracked objects:
 18850 ;;		On entry : 3F/0
 18851 ;;		On exit  : 31/0
 18852 ;;		Unchanged: 0/0
 18853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18856 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18857 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18858 ;;Total ram usage:        1 bytes
 18859 ;; Hardware stack levels used:    1
 18860 ;; This function calls:
 18861 ;;		Nothing
 18862 ;; This function is called by:
 18863 ;;		_EUSART1_Initialize
 18864 ;;		_INTERRUPT_InterruptManager
 18865 ;; This function uses a non-reentrant model
 18866 ;;
 18867                           
 18868                           
 18869                           ;psect for function _EUSART1_Transmit_ISR
 18870  088B                     _EUSART1_Transmit_ISR:
 18871                           
 18872                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 18873                           
 18874                           ;incstack = 0
 18875                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 18876  088B  3040               	movlw	64
 18877  088C  026F               	subwf	_eusart1TxBufferRemaining,w
 18878  088D  1803               	skipnc
 18879  088E  28A5               	goto	i1l221
 18880                           
 18881                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 18882  088F  0874               	movf	_eusart1TxTail,w
 18883  0890  3EA0               	addlw	(low (_eusart1TxBuffer| (0+256)))& (0+255)
 18884  0891  0086               	movwf	6
 18885  0892  3001               	movlw	1	; select bank3/4
 18886  0893  0087               	movwf	7
 18887  0894  0801               	movf	1,w
 18888  0895  0142               	movlb	2	; select bank2
 18889  0896  009A               	movwf	26	;volatile
 18890  0897  3001               	movlw	1
 18891  0898  00F6               	movwf	??_EUSART1_Transmit_ISR
 18892  0899  0876               	movf	??_EUSART1_Transmit_ISR,w
 18893  089A  07F4               	addwf	_eusart1TxTail,f	;volatile
 18894                           
 18895                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 18896  089B  3040               	movlw	64
 18897  089C  0274               	subwf	_eusart1TxTail,w
 18898  089D  1803               	btfsc	3,0
 18899                           
 18900                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
 18901  089E  01F4               	clrf	_eusart1TxTail	;volatile
 18902                           
 18903                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
 18904  089F  3001               	movlw	1
 18905  08A0  00F6               	movwf	??_EUSART1_Transmit_ISR
 18906  08A1  0876               	movf	??_EUSART1_Transmit_ISR,w
 18907  08A2  0140               	movlb	0	; select bank0
 18908  08A3  07EF               	addwf	_eusart1TxBufferRemaining,f	;volatile
 18909                           
 18910                           ;mcc_generated_files/eusart1.c: 209:     }
 18911  08A4  0008               	return
 18912  08A5                     i1l221:	
 18913                           ;mcc_generated_files/eusart1.c: 210:     else
 18914                           
 18915                           
 18916                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
 18917  08A5  014E               	movlb	14	; select bank14
 18918  08A6  1219               	bcf	25,4	;volatile
 18919  08A7  0008               	return
 18920  08A8                     __end_of_EUSART1_Transmit_ISR:
 18921                           
 18922                           	psect	text77
 18923  0A19                     __ptext77:	
 18924 ;; *************** function _EUSART1_Receive_ISR *****************
 18925 ;; Defined at:
 18926 ;;		line 216 in file "mcc_generated_files/eusart1.c"
 18927 ;; Parameters:    Size  Location     Type
 18928 ;;		None
 18929 ;; Auto vars:     Size  Location     Type
 18930 ;;		None
 18931 ;; Return value:  Size  Location     Type
 18932 ;;                  1    wreg      void 
 18933 ;; Registers used:
 18934 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18935 ;; Tracked objects:
 18936 ;;		On entry : 3F/0
 18937 ;;		On exit  : 0/0
 18938 ;;		Unchanged: 0/0
 18939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18944 ;;Total ram usage:        0 bytes
 18945 ;; Hardware stack levels used:    1
 18946 ;; Hardware stack levels required when called:    2
 18947 ;; This function calls:
 18948 ;;		Absolute function
 18949 ;;		_EUSART1_DefaultErrorHandler
 18950 ;;		_EUSART1_DefaultFramingErrorHandler
 18951 ;;		_EUSART1_DefaultOverrunErrorHandler
 18952 ;;		_EUSART1_RxDataHandler
 18953 ;; This function is called by:
 18954 ;;		_EUSART1_Initialize
 18955 ;;		_INTERRUPT_InterruptManager
 18956 ;; This function uses a non-reentrant model
 18957 ;;
 18958                           
 18959                           
 18960                           ;psect for function _EUSART1_Receive_ISR
 18961  0A19                     _EUSART1_Receive_ISR:
 18962                           
 18963                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 18964                           
 18965                           ;incstack = 0
 18966                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18967  0A19  0873               	movf	_eusart1RxHead,w	;volatile
 18968  0A1A  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 18969  0A1B  0086               	movwf	6
 18970  0A1C  3001               	movlw	1	; select bank2/3
 18971  0A1D  0087               	movwf	7
 18972  0A1E  0181               	clrf	1
 18973                           
 18974                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
 18975  0A1F  0142               	movlb	2	; select bank2
 18976  0A20  1D1D               	btfss	29,2	;volatile
 18977  0A21  2A2E               	goto	i1l4081
 18978                           
 18979                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 18980  0A22  0873               	movf	_eusart1RxHead,w	;volatile
 18981  0A23  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 18982  0A24  0086               	movwf	6
 18983  0A25  3001               	movlw	1	; select bank2/3
 18984  0A26  0087               	movwf	7
 18985  0A27  1481               	bsf	1,1
 18986                           
 18987                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
 18988  0A28  0141               	movlb	1	; select bank1
 18989  0A29  0845               	movf	(_EUSART1_FramingErrorHandler+1)^(0+128),w
 18990  0A2A  008A               	movwf	10
 18991  0A2B  0844               	movf	_EUSART1_FramingErrorHandler^(0+128),w
 18992  0A2C  000A               	callw
 18993  0A2D  318A               	pagesel	$
 18994  0A2E                     i1l4081:
 18995                           
 18996                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
 18997  0A2E  0142               	movlb	2	; select bank2
 18998  0A2F  1C9D               	btfss	29,1	;volatile
 18999  0A30  2A3D               	goto	i1l4087
 19000                           
 19001                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 19002  0A31  0873               	movf	_eusart1RxHead,w	;volatile
 19003  0A32  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 19004  0A33  0086               	movwf	6
 19005  0A34  3001               	movlw	1	; select bank2/3
 19006  0A35  0087               	movwf	7
 19007  0A36  1501               	bsf	1,2
 19008                           
 19009                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
 19010  0A37  0141               	movlb	1	; select bank1
 19011  0A38  0843               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+128),w
 19012  0A39  008A               	movwf	10
 19013  0A3A  0842               	movf	_EUSART1_OverrunErrorHandler^(0+128),w
 19014  0A3B  000A               	callw
 19015  0A3C  318A               	pagesel	$
 19016  0A3D                     i1l4087:
 19017                           
 19018                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 19019  0A3D  0873               	movf	_eusart1RxHead,w	;volatile
 19020  0A3E  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 19021  0A3F  0086               	movwf	6
 19022  0A40  3001               	movlw	1	; select bank2/3
 19023  0A41  0087               	movwf	7
 19024  0A42  0801               	movf	1,w
 19025  0A43  1903               	btfsc	3,2
 19026  0A44  2A4C               	goto	i1l4091
 19027                           
 19028                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
 19029  0A45  0141               	movlb	1	; select bank1
 19030  0A46  0841               	movf	(_EUSART1_ErrorHandler+1)^(0+128),w
 19031  0A47  008A               	movwf	10
 19032  0A48  0840               	movf	_EUSART1_ErrorHandler^(0+128),w
 19033  0A49  000A               	callw
 19034  0A4A  318A               	pagesel	$
 19035                           
 19036                           ;mcc_generated_files/eusart1.c: 233:     } else {
 19037  0A4B  0008               	return
 19038  0A4C                     i1l4091:
 19039                           
 19040                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
 19041  0A4C  3196  2679         	fcall	_EUSART1_RxDataHandler
 19042  0A4E  0008               	return
 19043  0A4F                     __end_of_EUSART1_Receive_ISR:
 19044                           
 19045                           	psect	text78
 19046  1582                     __ptext78:	
 19047 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 19048 ;; Defined at:
 19049 ;;		line 252 in file "mcc_generated_files/eusart1.c"
 19050 ;; Parameters:    Size  Location     Type
 19051 ;;		None
 19052 ;; Auto vars:     Size  Location     Type
 19053 ;;		None
 19054 ;; Return value:  Size  Location     Type
 19055 ;;                  1    wreg      void 
 19056 ;; Registers used:
 19057 ;;		None
 19058 ;; Tracked objects:
 19059 ;;		On entry : 3F/1
 19060 ;;		On exit  : 3F/2
 19061 ;;		Unchanged: 0/0
 19062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19067 ;;Total ram usage:        0 bytes
 19068 ;; Hardware stack levels used:    1
 19069 ;; This function calls:
 19070 ;;		Nothing
 19071 ;; This function is called by:
 19072 ;;		_EUSART1_Initialize
 19073 ;;		_EUSART1_Receive_ISR
 19074 ;; This function uses a non-reentrant model
 19075 ;;
 19076                           
 19077                           
 19078                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 19079  1582                     _EUSART1_DefaultOverrunErrorHandler:
 19080                           
 19081                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
 19082                           
 19083                           ;incstack = 0
 19084                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 19085  1582  0142               	movlb	2	; select bank2
 19086  1583  121D               	bcf	29,4	;volatile
 19087                           
 19088                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
 19089  1584  161D               	bsf	29,4	;volatile
 19090  1585  0008               	return
 19091  1586                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 19092                           
 19093                           	psect	text79
 19094  1574                     __ptext79:	
 19095 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 19096 ;; Defined at:
 19097 ;;		line 250 in file "mcc_generated_files/eusart1.c"
 19098 ;; Parameters:    Size  Location     Type
 19099 ;;		None
 19100 ;; Auto vars:     Size  Location     Type
 19101 ;;		None
 19102 ;; Return value:  Size  Location     Type
 19103 ;;                  1    wreg      void 
 19104 ;; Registers used:
 19105 ;;		None
 19106 ;; Tracked objects:
 19107 ;;		On entry : 3F/1
 19108 ;;		On exit  : 3F/1
 19109 ;;		Unchanged: 3F/0
 19110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19115 ;;Total ram usage:        0 bytes
 19116 ;; Hardware stack levels used:    1
 19117 ;; This function calls:
 19118 ;;		Nothing
 19119 ;; This function is called by:
 19120 ;;		_EUSART1_Initialize
 19121 ;;		_EUSART1_Receive_ISR
 19122 ;; This function uses a non-reentrant model
 19123 ;;
 19124                           
 19125                           
 19126                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 19127  1574                     _EUSART1_DefaultFramingErrorHandler:
 19128                           
 19129                           ;incstack = 0
 19130                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 19131  1574  0008               	return
 19132  1575                     __end_of_EUSART1_DefaultFramingErrorHandler:
 19133                           
 19134                           	psect	text80
 19135  1576                     __ptext80:	
 19136 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 19137 ;; Defined at:
 19138 ;;		line 260 in file "mcc_generated_files/eusart1.c"
 19139 ;; Parameters:    Size  Location     Type
 19140 ;;		None
 19141 ;; Auto vars:     Size  Location     Type
 19142 ;;		None
 19143 ;; Return value:  Size  Location     Type
 19144 ;;                  1    wreg      void 
 19145 ;; Registers used:
 19146 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19147 ;; Tracked objects:
 19148 ;;		On entry : 3F/1
 19149 ;;		On exit  : 3F/2
 19150 ;;		Unchanged: 0/0
 19151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19156 ;;Total ram usage:        0 bytes
 19157 ;; Hardware stack levels used:    1
 19158 ;; Hardware stack levels required when called:    1
 19159 ;; This function calls:
 19160 ;;		_EUSART1_RxDataHandler
 19161 ;; This function is called by:
 19162 ;;		_EUSART1_Initialize
 19163 ;;		_EUSART1_Receive_ISR
 19164 ;; This function uses a non-reentrant model
 19165 ;;
 19166                           
 19167                           
 19168                           ;psect for function _EUSART1_DefaultErrorHandler
 19169  1576                     _EUSART1_DefaultErrorHandler:
 19170                           
 19171                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
 19172                           
 19173                           ;incstack = 0
 19174                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 19175  1576  3196  2679         	fcall	_EUSART1_RxDataHandler
 19176  1578  0008               	return
 19177  1579                     __end_of_EUSART1_DefaultErrorHandler:
 19178                           
 19179                           	psect	text81
 19180  1679                     __ptext81:	
 19181 ;; *************** function _EUSART1_RxDataHandler *****************
 19182 ;; Defined at:
 19183 ;;		line 240 in file "mcc_generated_files/eusart1.c"
 19184 ;; Parameters:    Size  Location     Type
 19185 ;;		None
 19186 ;; Auto vars:     Size  Location     Type
 19187 ;;		None
 19188 ;; Return value:  Size  Location     Type
 19189 ;;                  1    wreg      void 
 19190 ;; Registers used:
 19191 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19192 ;; Tracked objects:
 19193 ;;		On entry : 0/2
 19194 ;;		On exit  : 3F/2
 19195 ;;		Unchanged: 0/0
 19196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19199 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19200 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19201 ;;Total ram usage:        1 bytes
 19202 ;; Hardware stack levels used:    1
 19203 ;; This function calls:
 19204 ;;		Nothing
 19205 ;; This function is called by:
 19206 ;;		_EUSART1_Receive_ISR
 19207 ;;		_EUSART1_DefaultErrorHandler
 19208 ;; This function uses a non-reentrant model
 19209 ;;
 19210                           
 19211                           
 19212                           ;psect for function _EUSART1_RxDataHandler
 19213  1679                     _EUSART1_RxDataHandler:
 19214                           
 19215                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 19216                           
 19217                           ;incstack = 0
 19218                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 19219  1679  0142               	movlb	2	; select bank2
 19220  167A  0819               	movf	25,w	;volatile
 19221  167B  00F6               	movwf	??_EUSART1_RxDataHandler
 19222  167C  0873               	movf	_eusart1RxHead,w
 19223  167D  3E20               	addlw	(low (_eusart1RxBuffer| (0+512)))& (0+255)
 19224  167E  0086               	movwf	6
 19225  167F  3002               	movlw	2	; select bank4/5
 19226  1680  0087               	movwf	7
 19227  1681  0876               	movf	??_EUSART1_RxDataHandler,w
 19228  1682  0081               	movwf	1
 19229  1683  3001               	movlw	1
 19230  1684  00F6               	movwf	??_EUSART1_RxDataHandler
 19231  1685  0876               	movf	??_EUSART1_RxDataHandler,w
 19232  1686  07F3               	addwf	_eusart1RxHead,f	;volatile
 19233                           
 19234                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 19235  1687  3040               	movlw	64
 19236  1688  0273               	subwf	_eusart1RxHead,w
 19237  1689  1803               	btfsc	3,0
 19238                           
 19239                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
 19240  168A  01F3               	clrf	_eusart1RxHead	;volatile
 19241                           
 19242                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
 19243  168B  3001               	movlw	1
 19244  168C  00F6               	movwf	??_EUSART1_RxDataHandler
 19245  168D  0876               	movf	??_EUSART1_RxDataHandler,w
 19246  168E  07F1               	addwf	_eusart1RxCount,f	;volatile
 19247  168F  0008               	return
 19248  1690                     __end_of_EUSART1_RxDataHandler:
 19249  007E                     btemp	set	126	;btemp
 19250  007E                     int$flags	set	126
 19251  007E                     wtemp0	set	126
 19252  263C                     
 19253                           	psect	config
 19254                           
 19255                           ;Config register CONFIG1 @ 0x8007
 19256                           ;	External Oscillator mode selection bits
 19257                           ;	FEXTOSC = OFF, Oscillator not enabled
 19258                           ;	Power-up default value for COSC bits
 19259                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 19260                           ;	Clock Out Enable bit
 19261                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 19262                           ;	Clock Switch Enable bit
 19263                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 19264                           ;	Fail-Safe Clock Monitor Enable bit
 19265                           ;	FCMEN = ON, FSCM timer enabled
 19266  8007                     	org	32775
 19267  8007  3FEC               	dw	16364
 19268                           
 19269                           ;Config register CONFIG2 @ 0x8008
 19270                           ;	Master Clear Enable bit
 19271                           ;	MCLRE = ON, MCLR pin is Master Clear function
 19272                           ;	Power-up Timer Enable bit
 19273                           ;	PWRTS = OFF, PWRT disabled
 19274                           ;	Low-Power BOR enable bit
 19275                           ;	LPBOREN = OFF, ULPBOR disabled
 19276                           ;	Brown-out reset enable bits
 19277                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 19278                           ;	Brown-out Reset Voltage Selection
 19279                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 2.45V
 19280                           ;	Zero-cross detect disable
 19281                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 19282                           ;	Peripheral Pin Select one-way control
 19283                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 19284                           ;	Stack Overflow/Underflow Reset Enable bit
 19285                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 19286  8008                     	org	32776
 19287  8008  3FFF               	dw	16383
 19288                           
 19289                           ;Config register CONFIG3 @ 0x8009
 19290                           ;	WDT Period Select bits
 19291                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 19292                           ;	WDT operating mode
 19293                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 19294                           ;	WDT Window Select bits
 19295                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 19296                           ;	WDT input clock selector
 19297                           ;	WDTCCS = SC, Software Control
 19298  8009                     	org	32777
 19299  8009  3F9F               	dw	16287
 19300                           
 19301                           ;Config register CONFIG4 @ 0x800A
 19302                           ;	Boot Block Size Selection bits
 19303                           ;	BBSIZE = BB512, 512 words boot block size
 19304                           ;	Boot Block Enable bit
 19305                           ;	BBEN = OFF, Boot Block disabled
 19306                           ;	SAF Enable bit
 19307                           ;	SAFEN = OFF, SAF disabled
 19308                           ;	Application Block Write Protection bit
 19309                           ;	WRTAPP = OFF, Application Block not write protected
 19310                           ;	Boot Block Write Protection bit
 19311                           ;	WRTB = OFF, Boot Block not write protected
 19312                           ;	Configuration Register Write Protection bit
 19313                           ;	WRTC = OFF, Configuration Register not write protected
 19314                           ;	Data EEPROM write protection bit
 19315                           ;	WRTD = OFF, Data EEPROM NOT write protected
 19316                           ;	Storage Area Flash Write Protection bit
 19317                           ;	WRTSAF = OFF, SAF not write protected
 19318                           ;	Low Voltage Programming Enable bit
 19319                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 19320  800A                     	org	32778
 19321  800A  3FFF               	dw	16383
 19322                           
 19323                           ;Config register CONFIG5 @ 0x800B
 19324                           ;	UserNVM Program memory code protection bit
 19325                           ;	CP = OFF, UserNVM code protection disabled
 19326  800B                     	org	32779
 19327  800B  3FFF               	dw	16383

Data Sizes:
    Strings     525
    Constant    33
    Data        0
    BSS         254
    Persistent  50
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     45      80
    BANK1            80      2      41
    BANK2            80      0      64
    BANK3            80      0      64
    BANK4            80      0      64
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           76      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    _sprintf_u8b@mess	PTR unsigned char  size(1) Largest target is 4
		 -> NEMS_get_program@aux(BANK0[4]), 

    write@pt	PTR unsigned char  size(1) Largest target is 32
		 -> sens_buf(BANK1[32]), 

    _puts@pt	PTR unsigned char  size(2) Largest target is 28
		 -> STR_64(CODE[6]), STR_63(CODE[28]), STR_62(CODE[28]), STR_61(CODE[6]), 
		 -> STR_60(CODE[6]), STR_59(CODE[6]), STR_58(CODE[7]), STR_57(CODE[6]), 
		 -> STR_56(CODE[7]), STR_55(CODE[6]), STR_54(CODE[7]), STR_53(CODE[6]), 
		 -> STR_52(CODE[7]), STR_51(CODE[6]), STR_50(CODE[2]), STR_49(CODE[12]), 
		 -> STR_48(CODE[2]), STR_47(CODE[12]), STR_46(CODE[2]), STR_45(CODE[12]), 
		 -> STR_44(CODE[2]), STR_43(CODE[12]), STR_42(CODE[2]), STR_41(CODE[25]), 
		 -> STR_40(CODE[2]), STR_39(CODE[23]), STR_38(CODE[2]), STR_37(CODE[21]), 
		 -> STR_36(CODE[2]), STR_35(CODE[16]), STR_34(CODE[2]), STR_33(CODE[15]), 
		 -> STR_32(CODE[2]), STR_31(CODE[18]), STR_30(CODE[2]), STR_29(CODE[25]), 
		 -> STR_28(CODE[2]), STR_27(CODE[17]), STR_26(CODE[2]), STR_25(CODE[18]), 
		 -> STR_24(CODE[2]), STR_23(CODE[18]), NEMS_get_program@aux(BANK0[4]), STR_22(CODE[15]), 
		 -> STR_21(CODE[7]), STR_20(CODE[6]), STR_19(CODE[7]), STR_18(CODE[6]), 
		 -> STR_17(CODE[7]), STR_16(CODE[6]), STR_15(CODE[7]), STR_14(CODE[6]), 
		 -> STR_13(CODE[7]), STR_12(CODE[6]), STR_11(CODE[7]), STR_10(CODE[6]), 
		 -> STR_9(CODE[7]), STR_8(CODE[6]), STR_7(CODE[7]), STR_6(CODE[6]), 
		 -> STR_5(CODE[7]), STR_4(CODE[6]), STR_3(CODE[7]), STR_2(CODE[6]), 
		 -> STR_1(CODE[4]), 

    NEMS_get_packet@pt	PTR unsigned char  size(1) Largest target is 14
		 -> program.channel4(BANK0[1]), program.channel3(BANK0[1]), program.channel2(BANK0[1]), program.channel1(BANK0[1]), 
		 -> program.symmetry_factor(BANK0[1]), program.ramp_down(BANK0[1]), program.ramp_up(BANK0[1]), program.contractions(BANK0[1]), 
		 -> program.OFF_time(BANK0[1]), program.ON_time(BANK0[1]), program.phase_duration(BANK0[1]), program.frequency(BANK0[1]), 
		 -> program.amplitude2(BANK0[1]), program.amplitude(BANK0[1]), program(BANK0[14]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NEMS_timer_SE(), NEMS_timer(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NEMS_timer_SE(), NEMS_timer(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR0_ISR->_NEMS_timer
    _TMR0_ISR->_NEMS_timer_SE
    _NEMS_timer_SE->i1_DAC1_SetOutput
    _NEMS_timer->i1_DAC1_SetOutput
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _main->_NEMS_message_handler
    _SYSTEM_Initialize->_EUSART1_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _NEMS_read_sensors->_write
    _write->_EUSART1_Write
    _NEMS_message_handler->_NEMS_binary_command
    _NEMS_stop_program->__puts
    _TMR1_Reload->_TMR1_WriteTimer
    _NEMS_start_program->_NEMS_start_program_nack
    _NEMS_set_symmetry_factor->_NEMS_get_packet
    _NEMS_set_ramp_up->_NEMS_get_packet
    _NEMS_set_ramp_down->_NEMS_get_packet
    _NEMS_set_phase_duration->_NEMS_get_packet
    _NEMS_set_frequency->_NEMS_get_packet
    _NEMS_set_contractions->_NEMS_get_packet
    _NEMS_set_channel4->_NEMS_get_packet
    _NEMS_set_channel3->_NEMS_get_packet
    _NEMS_set_channel2->_NEMS_get_packet
    _NEMS_set_channel1->_NEMS_get_packet
    _NEMS_set_amplitude2->_NEMS_get_packet
    _NEMS_set_amplitude->_NEMS_get_packet
    _NEMS_set_ON_time->_NEMS_get_packet
    _NEMS_set_OFF_time->_NEMS_get_packet
    _NEMS_get_packet->___bmul
    _NEMS_save_program->__puts
    _NEMS_load_program->__puts
    _NEMS_get_program->__sprintf_u8b
    __sprintf_u8b->___awdiv
    _NEMS_binary_command->_NEMS_start_program_nack
    _NEMS_stop_program_nack->_DAC1_SetOutput
    _NEMS_start_program_nack->_NEMS_recalculate_program
    __puts->_EUSART1_Write
    _NEMS_recalculate_program->_NEMS_calculate_ramp
    ___awdiv->___wmul
    _NEMS_calculate_ramp->___lwdiv
    ___lwdiv->___wmul
    _NEMS_initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  201889
                                              0 BANK1      2     2      0
                _EUSART1_is_rx_ready
                    _NEMS_initialize
               _NEMS_message_handler
                  _NEMS_read_sensors
                  _SYSTEM_Initialize
            _TMR1_HasOverflowOccured
                        _TMR1_Reload
 ---------------------------------------------------------------------------------
 (1) _TMR1_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1086
                    _ADCC_Initialize
                    _DAC1_Initialize
                 _EUSART1_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     481
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   1     1      0     605
                                              2 BANK0      1     1      0
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _DAC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _NEMS_read_sensors                                    6     6      0     485
                                              6 BANK0      5     5      0
           _ADCC_GetSingleConversion
                              _write
 ---------------------------------------------------------------------------------
 (2) _write                                                4     3      1     318
                                              2 BANK0      4     3      1
                      _EUSART1_Write
                _EUSART1_is_tx_ready
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetSingleConversion                             4     1      3      31
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _NEMS_message_handler                                 3     3      0  199586
                                             42 BANK0      3     3      0
                       _EUSART1_Read
                _NEMS_binary_command
                   _NEMS_get_program
                  _NEMS_load_program
                  _NEMS_save_program
                  _NEMS_set_OFF_time
                   _NEMS_set_ON_time
                 _NEMS_set_amplitude
                _NEMS_set_amplitude2
                  _NEMS_set_channel1
                  _NEMS_set_channel2
                  _NEMS_set_channel3
                  _NEMS_set_channel4
              _NEMS_set_contractions
                 _NEMS_set_frequency
            _NEMS_set_phase_duration
                 _NEMS_set_ramp_down
                   _NEMS_set_ramp_up
           _NEMS_set_symmetry_factor
                 _NEMS_start_program
                 _NEMS_start_sensors
                  _NEMS_stop_program
                  _NEMS_stop_sensors
                              __puts
 ---------------------------------------------------------------------------------
 (2) _NEMS_stop_sensors                                    0     0      0       0
                     _TMR1_StopTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NEMS_stop_program                                    0     0      0    7243
             _NEMS_stop_program_nack
                              __puts
 ---------------------------------------------------------------------------------
 (2) _NEMS_start_sensors                                   0     0      0     220
                        _TMR1_Reload
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_Reload                                          0     0      0     220
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (2) _TMR1_WriteTimer                                      2     0      2     220
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _NEMS_start_program                                   0     0      0   22789
            _NEMS_start_program_nack
           _TMR0_SetInterruptHandler
                              __puts
 ---------------------------------------------------------------------------------
 (2) _NEMS_set_symmetry_factor                             0     0      0    8388
                    _NEMS_get_packet
                              __puts
 ---------------------------------------------------------------------------------
 (2) _NEMS_set_ramp_up                                     0     0      0    8388
                    _NEMS_get_packet
                              __puts
 ---------------------------------------------------------------------------------
 (2) _NEMS_set_ramp_down                                   0     0      0    8388
                    _NEMS_get_packet
                              __puts
 ---------------------------------------------------------------------------------
 (2) _NEMS_set_phase_duration                              0     0      0    8388
                    _NEMS_get_packet
                              __puts
 ---------------------------------------------------------------------------------
 (2) _NEMS_set_frequency                                   0     0      0    8388
                    _NEMS_get_packet
                              __puts
 ---------------------------------------------------------------------------------
 (2) _NEMS_set_contractions                                0     0      0    8388
                    _NEMS_get_packet
                              __puts
 ---------------------------------------------------------------------------------
 (2) _NEMS_set_channel4                                    0     0      0    8388
                    _NEMS_get_packet
                              __puts
 ---------------------------------------------------------------------------------
 (2) _NEMS_set_channel3                                    0     0      0    8388
                    _NEMS_get_packet
                              __puts
 ---------------------------------------------------------------------------------
 (2) _NEMS_set_channel2                                    0     0      0    8388
                    _NEMS_get_packet
                              __puts
 ---------------------------------------------------------------------------------
 (2) _NEMS_set_channel1                                    0     0      0    8388
                    _NEMS_get_packet
                              __puts
 ---------------------------------------------------------------------------------
 (2) _NEMS_set_amplitude2                                  0     0      0    8388
                    _NEMS_get_packet
                              __puts
 ---------------------------------------------------------------------------------
 (2) _NEMS_set_amplitude                                   0     0      0    8388
                    _NEMS_get_packet
                              __puts
 ---------------------------------------------------------------------------------
 (2) _NEMS_set_ON_time                                     0     0      0    8388
                    _NEMS_get_packet
                              __puts
 ---------------------------------------------------------------------------------
 (2) _NEMS_set_OFF_time                                    0     0      0    8388
                    _NEMS_get_packet
                              __puts
 ---------------------------------------------------------------------------------
 (3) _NEMS_get_packet                                      5     5      0    1176
                                              4 BANK0      5     5      0
                       _EUSART1_Read
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _NEMS_save_program                                    2     2      0    9010
                                              8 BANK0      2     2      0
                              __puts
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (3) _eeprom_write                                         2     1      1    1322
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _NEMS_load_program                                    3     3      0    7719
                                              8 BANK0      3     3      0
                              __puts
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (3) _eeprom_read                                          1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _NEMS_get_program                                     5     5      0   12075
                                             24 BANK0      5     5      0
                              __puts
                       __sprintf_u8b
 ---------------------------------------------------------------------------------
 (3) __sprintf_u8b                                         9     8      1    3935
                                             15 BANK0      9     8      1
                            ___awdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              6     5      1     412
                                              0 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (2) _NEMS_binary_command                                  6     6      0   15815
                                             36 BANK0      6     6      0
                       _EUSART1_Read
            _NEMS_start_program_nack
             _NEMS_stop_program_nack
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _NEMS_stop_program_nack                               0     0      0      31
                     _DAC1_SetOutput
                     _TMR0_StopTimer
 ---------------------------------------------------------------------------------
 (3) _NEMS_start_program_nack                              1     1      0   15096
                                             35 BANK0      1     1      0
           _NEMS_recalculate_program
                    _TMR0_StartTimer
                              __puts
 ---------------------------------------------------------------------------------
 (2) __puts                                                6     4      2    7212
                                              2 BANK0      6     4      2
                      _EUSART1_Write
                _EUSART1_is_tx_ready
 ---------------------------------------------------------------------------------
 (3) _EUSART1_is_tx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _NEMS_recalculate_program                             7     7      0    7884
                                             28 BANK0      7     7      0
                _NEMS_calculate_ramp
                            ___awdiv
                             ___bmul
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___bmul                                               4     3      1     406
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     908
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _NEMS_calculate_ramp                                 14    14      0    3350
                                             14 BANK0     14    14      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1576
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              8     4      4    1452
                                              6 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Read                                         2     2      0      37
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _NEMS_initialize                                      1     1      0     512
                                              2 BANK0      1     1      0
                     _DAC1_SetOutput
           _TMR0_SetInterruptHandler
                     _TMR0_StopTimer
 ---------------------------------------------------------------------------------
 (4) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     481
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _DAC1_SetOutput                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           0     0      0      44
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             0     0      0      44
                   Absolute function *
                         _NEMS_timer *
                      _NEMS_timer_SE *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _NEMS_timer_SE                                        5     5      0      22
                                              1 COMMON     5     5      0
                   i1_DAC1_SetOutput
 ---------------------------------------------------------------------------------
 (9) _NEMS_timer                                           5     5      0      22
                                              1 COMMON     5     5      0
                   i1_DAC1_SetOutput
 ---------------------------------------------------------------------------------
 (10) i1_DAC1_SetOutput                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Receive_ISR                                  0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (9) _EUSART1_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART1_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART1_DefaultErrorHandler                          0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (9) _EUSART1_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_is_rx_ready
   _NEMS_initialize
     _DAC1_SetOutput
     _TMR0_SetInterruptHandler
     _TMR0_StopTimer
   _NEMS_message_handler
     _EUSART1_Read
     _NEMS_binary_command
       _EUSART1_Read
       _NEMS_start_program_nack
         _NEMS_recalculate_program
           _NEMS_calculate_ramp
             ___lwdiv
               ___wmul (ARG)
             ___wmul
           ___awdiv
             ___wmul (ARG)
           ___bmul
           ___lwdiv
             ___wmul (ARG)
           ___wmul
         _TMR0_StartTimer
         __puts
           _EUSART1_Write
           _EUSART1_is_tx_ready
       _NEMS_stop_program_nack
         _DAC1_SetOutput
         _TMR0_StopTimer
       _TMR0_SetInterruptHandler
     _NEMS_get_program
       __puts
         _EUSART1_Write
         _EUSART1_is_tx_ready
       __sprintf_u8b
         ___awdiv
           ___wmul (ARG)
         ___lbmod
     _NEMS_load_program
       __puts
         _EUSART1_Write
         _EUSART1_is_tx_ready
       _eeprom_read
     _NEMS_save_program
       __puts
         _EUSART1_Write
         _EUSART1_is_tx_ready
       _eeprom_write
     _NEMS_set_OFF_time
       _NEMS_get_packet
         _EUSART1_Read
         ___bmul
       __puts
         _EUSART1_Write
         _EUSART1_is_tx_ready
     _NEMS_set_ON_time
       _NEMS_get_packet
         _EUSART1_Read
         ___bmul
       __puts
         _EUSART1_Write
         _EUSART1_is_tx_ready
     _NEMS_set_amplitude
       _NEMS_get_packet
         _EUSART1_Read
         ___bmul
       __puts
         _EUSART1_Write
         _EUSART1_is_tx_ready
     _NEMS_set_amplitude2
       _NEMS_get_packet
         _EUSART1_Read
         ___bmul
       __puts
         _EUSART1_Write
         _EUSART1_is_tx_ready
     _NEMS_set_channel1
       _NEMS_get_packet
         _EUSART1_Read
         ___bmul
       __puts
         _EUSART1_Write
         _EUSART1_is_tx_ready
     _NEMS_set_channel2
       _NEMS_get_packet
         _EUSART1_Read
         ___bmul
       __puts
         _EUSART1_Write
         _EUSART1_is_tx_ready
     _NEMS_set_channel3
       _NEMS_get_packet
         _EUSART1_Read
         ___bmul
       __puts
         _EUSART1_Write
         _EUSART1_is_tx_ready
     _NEMS_set_channel4
       _NEMS_get_packet
         _EUSART1_Read
         ___bmul
       __puts
         _EUSART1_Write
         _EUSART1_is_tx_ready
     _NEMS_set_contractions
       _NEMS_get_packet
         _EUSART1_Read
         ___bmul
       __puts
         _EUSART1_Write
         _EUSART1_is_tx_ready
     _NEMS_set_frequency
       _NEMS_get_packet
         _EUSART1_Read
         ___bmul
       __puts
         _EUSART1_Write
         _EUSART1_is_tx_ready
     _NEMS_set_phase_duration
       _NEMS_get_packet
         _EUSART1_Read
         ___bmul
       __puts
         _EUSART1_Write
         _EUSART1_is_tx_ready
     _NEMS_set_ramp_down
       _NEMS_get_packet
         _EUSART1_Read
         ___bmul
       __puts
         _EUSART1_Write
         _EUSART1_is_tx_ready
     _NEMS_set_ramp_up
       _NEMS_get_packet
         _EUSART1_Read
         ___bmul
       __puts
         _EUSART1_Write
         _EUSART1_is_tx_ready
     _NEMS_set_symmetry_factor
       _NEMS_get_packet
         _EUSART1_Read
         ___bmul
       __puts
         _EUSART1_Write
         _EUSART1_is_tx_ready
     _NEMS_start_program
       _NEMS_start_program_nack
         _NEMS_recalculate_program
           _NEMS_calculate_ramp
             ___lwdiv
               ___wmul (ARG)
             ___wmul
           ___awdiv
             ___wmul (ARG)
           ___bmul
           ___lwdiv
             ___wmul (ARG)
           ___wmul
         _TMR0_StartTimer
         __puts
           _EUSART1_Write
           _EUSART1_is_tx_ready
       _TMR0_SetInterruptHandler
       __puts
         _EUSART1_Write
         _EUSART1_is_tx_ready
     _NEMS_start_sensors
       _TMR1_Reload
         _TMR1_WriteTimer
       _TMR1_StartTimer
     _NEMS_stop_program
       _NEMS_stop_program_nack
         _DAC1_SetOutput
         _TMR0_StopTimer
       __puts
         _EUSART1_Write
         _EUSART1_is_tx_ready
     _NEMS_stop_sensors
       _TMR1_StopTimer
     __puts
       _EUSART1_Write
       _EUSART1_is_tx_ready
   _NEMS_read_sensors
     _ADCC_GetSingleConversion
     _write
       _EUSART1_Write
       _EUSART1_is_tx_ready
   _SYSTEM_Initialize
     _ADCC_Initialize
     _DAC1_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
   _TMR1_HasOverflowOccured
   _TMR1_Reload
     _TMR1_WriteTimer

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _TMR0_ISR *
     Absolute function(Fake) *
     _NEMS_timer *
       i1_DAC1_SetOutput
     _NEMS_timer_SE *
       i1_DAC1_SetOutput
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2D      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     145       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      2      29       8       51.2%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      40      10       80.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      40      12       80.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      40      14       80.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              4C      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BANK20               0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BANK21               0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BANK22               0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BANK23               0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BANK24               0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BANK25               0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     145      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Jan 31 16:16:30 2022

                      _eusart1TxBufferRemaining 006F                                  ___bmul@product 0022  
                     __end_of_NEMS_stop_sensors 0803                                   ?__sprintf_u8b 002F  
                     __end_of_NEMS_stop_program 15EB                                    ___awdiv@sign 002C  
                        __end_of_FVR_Initialize 158A                             ___wmul@multiplicand 0022  
                               _DAC1_Initialize 1598                                             l215 08F4  
                                           l472 166E                                             l758 0CF8  
                               _timer1ReloadVal 0069                                             _mux 1000  
                       __size_of_PMD_Initialize 000A                    __end_of_NEMS_message_handler 0CF9  
                      __end_of_NEMS_set_ON_time 16BE                                             wreg 0009  
                                _DAC1_SetOutput 15A7                     __end_of_NEMS_binary_command 0BCA  
                                          l1150 162F                                            l1403 08C1  
                                          l1172 08C8                                            l1176 08E1  
                                          l3041 09ED                                            l1185 0825  
                                          l3043 09F9                                            l3123 0B3D  
                                          l3053 0A14                                            l3141 0B63  
                                          l3133 0B45                                            l3117 0B32  
                                          l3135 0B51                                            l3049 0A0B  
                                          l3145 0B6C                                            l3149 0B74  
                                          l5111 1729                                            l5105 1712  
                                          l4411 17E0                                            l4317 081F  
                                          l4421 0941                                            l5117 1740  
                                          l5221 0C6A                                            l5133 0855  
                                          l4335 08E9                                            l5231 0C79  
                                          l5223 0C6D                                            l5127 0859  
                                          l5311 09D7                                            l4441 0343  
                                          l5241 0C88                                            l5233 0C7C  
                                          l5225 0C70                                            l5217 0C60  
                                          l4435 0321                                            l4427 0933  
                                          l4603 0A8C                                            l5251 0C97  
                                          l5243 0C8B                                            l5235 0C7F  
                                          l5227 0C73                                            l5219 0C67  
                                          l5307 09CE                                            l4365 0715  
                                          l4357 0688                                            l4373 1623  
                                          l4349 0909                                            l4517 08AE  
                                          l5261 0CA6                                            l5253 0C9A  
                                          l5245 0C8E                                            l5237 0C82  
                                          l5229 0C76                                            l4383 090C  
                                          l4359 0714                                            l4471 0438  
                                          l5255 0C9D                                            l5247 0C91  
                                          l5239 0C85                                            l4369 161D  
                                          l5361 044D                                            l4473 043E  
                                          l5257 0CA0                                            l5249 0C94  
                                          l5265 0CA9                                            l4467 042B  
                                          l4571 096D                                            l4635 0C4C  
                                          l4627 0C33                                            l5099 16FB  
                                          l5259 0CA3                                            l4469 0432  
                                          l4477 0445                                            l4581 097E  
                                          l4479 045B                                            l4831 16CD  
                                          l5359 0CB1                                            l4819 0BBC  
                                          l4843 176E                                            l4861 16B6  
                                          l4837 16E4                                            l4855 17CA  
                                          l4873 1757                                            l4849 1785  
                                          l4867 169F                                            l4885 179C  
                                          l4879 17B3                                            STR_1 1988  
                                          STR_2 1940                                            STR_3 18DD  
                                          STR_4 191C                                            STR_5 18BA  
                                          STR_6 1952                                            STR_7 18F2  
                                          STR_8 194C                                            STR_9 18EB  
                                          u1305 0A0C                                            _LATA 0018  
                                          _LATB 0019                                            u3007 09C5  
                                          _LATC 001A                                            u1265 09F0  
                                          u3017 0A55                                            _LATE 001C  
                                          u3027 0B80                                            u1285 09FA  
                                          u2405 0826                                            u1445 0B48  
                                          u2430 15BF                                            u1295 0A04  
                                          u2415 082B                                            u1465 0B52  
                                          u1475 0B5C                                            u1485 0B64  
                    __end_of_NEMS_set_amplitude 16D5                                            u2485 0699  
                                          u2741 162E                                            u2495 0726  
                                          u2585 08B1                                            _PMD0 0796  
                                          _PMD1 0797                                            u2950 15B8  
                                          _PMD2 0798                                            _PMD3 0799  
                                          _PMD4 079A                                            _PMD5 079B  
                                          _PMD6 079C                                            _PMD7 079D  
                       _TMR1_HasOverflowOccured 158A                                            _WPUA 1F39  
                                          _WPUB 1F44                                            _WPUC 1F4F  
                                ??_eeprom_write 0021                                            _WPUE 1F65  
                                 _EUSART1_Write 08E8                                     ?_NEMS_timer 0076  
                                          _main 09B6                                   ?_EUSART1_Read 0076  
                               _TMR0_StartTimer 157C                                            fsr0h 0005  
                                          fsr1h 0007                                            indf0 0000  
                                          fsr0l 0004                                            indf1 0001  
                                          fsr1l 0006                                            btemp 007E  
                                          start 0025                               ___bmul@multiplier 0023  
                    __end_of_NEMS_set_frequency 1776                                  ??__sprintf_u8b 0030  
                             ??_NEMS_get_packet 0024                         __end_of_TMR0_Initialize 088B  
                      __end_of_NEMS_set_ramp_up 17BB                  ??_TMR0_DefaultInterruptHandler 0076  
                               ?_FVR_Initialize 0076                  __size_of_OSCILLATOR_Initialize 000A  
                 __end_of_OSCILLATOR_Initialize 15F5                           _eusart1RxStatusBuffer 0120  
                                         _ADCAP 010E                                           _ADACT 0117  
                                         ?_main 0076                                           _ADCLK 0118  
                    __end_of_NEMS_set_ramp_down 17A4                                           _ADPCH 009F  
                                         _ADREF 0116                                 __end_of___awdiv 0B79  
                                         STR_10 1958                                           STR_11 18F9  
                                         STR_12 1970                                           STR_20 193A  
                                         STR_13 1907                                           STR_21 18D6  
                                         STR_30 103B                                           STR_14 192E  
                                         STR_22 186C                                           STR_15 18C8  
                                         STR_31 1839                                           STR_23 1815  
                                         STR_40 103B                                           STR_32 103B  
                                         STR_24 103B                                           STR_16 1946  
                                         STR_17 18E4                                           STR_33 187B  
                                         STR_25 1827                                           STR_41 1072  
                                         STR_50 103B                                           STR_42 103B  
                                         STR_34 103B                                           STR_26 103B  
                                         STR_18 197C                                           STR_51 1922  
                                         STR_19 1915                                           STR_43 188A  
                                         STR_35 185C                                           STR_27 184B  
                                         STR_44 103B                                           STR_36 103B  
                                         STR_28 103B                                           STR_60 195E  
                                         STR_52 18C1                                           STR_61 196A  
                                         STR_53 1964                                           STR_45 1896  
                                         STR_37 1800                                           STR_29 1059  
                                         STR_46 103B                                           STR_38 103B  
                                         STR_54 1900                                           STR_62 1021  
                                         STR_55 1934                                           STR_47 18A2  
                                         STR_39 108B                                           STR_63 103D  
                                         STR_48 103B                                           STR_64 1928  
                                         STR_56 18CF                                           _ADRPT 009A  
                                         STR_57 1976                                           STR_49 18AE  
                                         STR_58 190E                                           STR_59 1982  
                               __end_of___lbmod 08C7                                 _TMR1_StartTimer 0002  
                                         _T1CLK 0211                                 ___awdiv@divisor 0026  
                                         _T1CON 020E                     __end_of_NEMS_set_amplitude2 16EC  
                               __end_of___lwdiv 0A19                                           i1l221 08A5  
                                         i1l570 0023                                           i1l562 000E  
                                         i1l565 001A                          __end_of_DAC1_SetOutput 15AD  
                                         i1l874 0163                                 ___awdiv@counter 002B  
                                         _OSCEN 0891                                           _TMR0H 059D  
                                         _TMR1H 020D                                           _TMR0L 059C  
                                         _TMR1L 020C                                           _TRISA 0012  
                                         _TRISB 0013                                           _TRISC 0014  
                                         _TRISE 0016               __size_of_TMR0_SetInterruptHandler 0005  
                     ?_TMR0_SetInterruptHandler 0020                            _EUSART1_Transmit_ISR 088B  
                              __end_of_TMR0_ISR 1651                                           __puts 0932  
                                         _write 0853                                  ?_EUSART1_Write 0076  
                       __end_of_TMR1_Initialize 1800                                           pclath 000A  
                     ??_NEMS_set_phase_duration 0029                                  ??_EUSART1_Read 0020  
                      NEMS_binary_command@chan1 0046                        NEMS_binary_command@chan2 0047  
                                         status 0003                     __size_of_NEMS_start_sensors 0006  
                                         wtemp0 007E                     __size_of_NEMS_start_program 0014  
    __end_of_EUSART1_DefaultFramingErrorHandler 1575     __size_of_EUSART1_DefaultFramingErrorHandler 0001  
          ??_EUSART1_DefaultFramingErrorHandler 0076             ?_EUSART1_DefaultFramingErrorHandler 0076  
            _EUSART1_DefaultFramingErrorHandler 1574                                 _TMR1_WriteTimer 17D2  
                             ??_NEMS_initialize 0022                       __size_ofi1_DAC1_SetOutput 0005  
                               __initialization 0027                      __end_of_EUSART1_Initialize 0800  
                                  __end_of_main 09E5                         __end_of_DAC1_Initialize 159D  
                    __size_of_NEMS_stop_sensors 0003                      __size_of_NEMS_stop_program 000A  
                   ?_INTERRUPT_InterruptManager 0076                        ?_NEMS_start_program_nack 0076  
                             ?_NEMS_get_program 0076                                          ??_main 00C7  
                           __size_of_NEMS_timer 0288                                 ?_DAC1_SetOutput 0076  
                            ??_NEMS_get_program 0038                           ?_EUSART1_Transmit_ISR 0076  
                     ??_TMR1_HasOverflowOccured 0020                             _NEMS_calculate_ramp 0687  
                       __end_of_TMR0_StartTimer 157F                                          _ADACCU 0098  
                                        _ADACQH 010D                                          _ADACQL 010C  
                                        ?__puts 0022                                          _ADCON0 0111  
                                        _ADCON1 0112                                          _ADCON2 0113  
                                        _ADCON3 0114                                          _ADLTHH 008D  
                                        _ADLTHL 008C                                          _ADRESH 009E  
                                        _ADRESL 009D                                          _ADPREH 0110  
                                        _ADPREL 010F                                          _ADSTAT 0115  
                                        _ADUTHH 008F                                ___awdiv@dividend 0028  
                                        _ADUTHL 008E                                          _ANSELA 1F38  
                                        _ANSELB 1F43                                          _ANSELC 1F4E  
                    ??_NEMS_set_symmetry_factor 0029                                          _T0CON0 059E  
                                        _T0CON1 059F                                          _T1GATE 0210  
                                        _T1GCON 020F                                          ?_write 0022  
                                        _RC1REG 0119                                          _RC1STA 011D  
                       TMR1_WriteTimer@timerVal 0020                                          i1l4001 05E7  
                                        _ODCONA 1F3A                                          _ODCONB 1F45  
                                        i1l4011 061C                                          _ODCONC 1F50  
                                        _RC6PPS 1F26                                          u200_25 01B7  
                                        i1l4021 0642                                          _ODCONE 1F66  
                  __size_of_EUSART1_is_rx_ready 0007                                          u201_25 01DD  
                                        i1l4029 0685                                          i1l4081 0A2E  
                                        i1l4091 0A4C                                          u202_25 021A  
                                        u210_25 04FD                                          i1l4087 0A3D  
                                        i1l3901 0202                                          u211_25 052C  
                                        i1l3913 0224                                          i1l3923 0260  
                                        u220_24 067A                                          i1l3925 027E  
                                        u204_25 0239                                          u220_25 0679  
                                        u212_25 055D                                          i1l3935 02A4  
                                        i1l3945 02EE                                          i1l3873 0104  
                                        i1l3949 02F8                                          i1l3893 019F  
                                        i1l3877 0136                                          i1l3869 00E4  
                                        i1l3981 05A8                                          u213_25 0583  
                                        i1l3973 0545                                          i1l3879 0150  
                                        i1l3887 015A                                          i1l3991 05CC  
                                        i1l3897 01C6                                          i1l3977 056C  
                                        i1l3993 05D4                                          u206_25 0295  
                                        u214_25 05C0                                          i1l3999 05E6  
                                        u207_25 02BB                                          _INLVLA 1F3C  
                                        _INLVLB 1F47                                          _INLVLC 1F52  
                                        u209_24 02E3                                          u209_25 02E2  
                                        u217_25 05FC                                          u218_25 0633  
                                        _FVRCON 090C                                          u219_25 0659  
                                        u193_25 00A1                                          u195_25 00D4  
                                        u196_25 00FC                                          u197_25 011B  
                                        u198_25 014E                                          u199_25 0186  
                                        _OSCFRQ 0893                    __size_of_EUSART1_is_tx_ready 0007  
                                        _TMR1IF 3880                                          _TX1REG 011A  
                                        _TX1STA 011E                         DAC1_SetOutput@inputData 0020  
                          _NEMS_message_handler 0C59                            __size_of_eeprom_read 0011  
                          ?_NEMS_calculate_ramp 0076                         ??_NEMS_set_contractions 0029  
                                        ___bmul 161B                         __end_of_TMR1_StartTimer 0004  
                                  ?_TMR1_Reload 0076                                          ___wmul 081D  
                                     ??___awdiv 002A                                       ??___lbmod 0021  
                                     ??___lwdiv 002A                        ?_EUSART1_SetErrorHandler 0020  
                              ?_TMR0_Initialize 0076                                ___awdiv@quotient 002D  
                    NEMS_message_handler@header 004C                            __end_of_eeprom_write 08E8  
              ??_EUSART1_SetOverrunErrorHandler 0022                 ?_EUSART1_SetOverrunErrorHandler 0020  
                     i1DAC1_SetOutput@inputData 0076                                 _ADCC_Initialize 0803  
                                _PMD_Initialize 15F5               __size_of_ADCC_GetSingleConversion 0014  
                     ?_ADCC_GetSingleConversion 0020                                 ??_EUSART1_Write 0020  
      TMR0_SetInterruptHandler@InterruptHandler 0020                                          write@i 0025  
                       __end_of_TMR1_WriteTimer 17E9                                 _eusart1RxBuffer 0220  
                          __end_of__sprintf_u8b 0C59                        ??_NEMS_stop_program_nack 0021  
                               _eusart1TxBuffer 01A0                                 _channel_control 0051  
                              ?_TMR1_Initialize 0076                            NEMS_calculate_ramp@i 003B  
                             _SYSTEM_Initialize 0838                                 ___lbmod@divisor 0020  
                       __end_of__initialization 006E                                 ___lbmod@counter 0024  
                               eeprom_read@addr 0020                              ?_SYSTEM_Initialize 0076  
                        __size_of_NEMS_timer_SE 01B9                           ?_NEMS_message_handler 0076  
                           ___bmul@multiplicand 0020                  __size_of_EUSART1_RxDataHandler 0017  
                         ??_NEMS_calculate_ramp 002E                   __end_of_EUSART1_RxDataHandler 1690  
                                __pcstackCOMMON 0076                 __end_of_NEMS_start_program_nack 0988  
                           ??_SYSTEM_Initialize 0023                                ?_DAC1_Initialize 0076  
                                     ?_TMR0_ISR 0076                                   __end_of__puts 095C  
                        NEMS_binary_command@amp 0045                                   __end_of_write 086F  
                        __end_of_PMD_Initialize 15FF                            __end_of_EUSART1_Read 0932  
                        ??_EUSART1_Transmit_ISR 0076                               __sprintf_u8b@mess 0037  
                   __end_of_EUSART1_Receive_ISR 0A4F                               ?_NEMS_set_ON_time 0076  
                             eeprom_write@value 0020                                         ??__puts 0024  
                              ?_TMR0_StartTimer 0076                       __end_of_SYSTEM_Initialize 0853  
                            ??_NEMS_set_ON_time 0029                                   _eusart1RxHead 0073  
                                       ??_write 0023                                   _eusart1TxHead 0075  
                                 _eusart1RxTail 0072                                      __pbssBANK0 004D  
                                    __pbssBANK1 00A0                                      __pbssBANK2 0120  
                                    __pbssBANK3 01A0                                      __pbssBANK4 0220  
                                 _eusart1TxTail 0074               _EUSART1_TxDefaultInterruptHandler 006D  
               ??_EUSART1_SetRxInterruptHandler 0022                                 _NEMS_get_packet 0A4F  
                                  ??_NEMS_timer 0077                                i1_DAC1_SetOutput 158E  
               __end_of_EUSART1_SetErrorHandler 15D1                                ??_FVR_Initialize 0020  
                                    __pmaintext 09B6                                         ?___bmul 0020  
              __end_of_TMR0_SetInterruptHandler 1598                         __size_of_TMR0_StopTimer 0003  
                            _NEMS_set_amplitude 16BE                                         ?___wmul 0020  
                              ?_TMR1_StartTimer 0076                                      ??_TMR0_ISR 007C  
                       __end_of_ADCC_Initialize 081D                                      __pintentry 0004  
                             ?_NEMS_set_ramp_up 0076                                         _ADSTPTH 0093  
                                       _ADSTPTL 0092                                 ?_PMD_Initialize 0076  
                           ?_NEMS_set_amplitude 0076          __end_of_EUSART1_SetFramingErrorHandler 15D9  
       __size_of_EUSART1_SetFramingErrorHandler 0008                  _EUSART1_SetFramingErrorHandler 15D1  
                       __size_of_TMR1_StopTimer 0003               __size_of_NEMS_recalculate_program 01D4  
                            ??_NEMS_set_ramp_up 0029                       ?_NEMS_recalculate_program 0076  
                                 _NEMS_timer_SE 04CE                              __end_of_NEMS_timer 02FA  
                            _NEMS_set_frequency 175F                    ?_EUSART1_DefaultErrorHandler 0076  
                                       _SP1BRGH 011C                                         _SP1BRGL 011B  
                                       _OSCCON1 088D                                         _OSCCON3 088F  
                                       _OSCSTAT 0890                                         _NVMADRH 081B  
                                       _NVMADRL 081A                                         _NVMDATH 081D  
                                       _OSCTUNE 0892                                         _NVMDATL 081C  
                                       _NVMCON2 081F                                         _SLRCONA 1F3B  
                                       _SLRCONB 1F46                                         _SLRCONC 1F51  
                               _NEMS_initialize 0A8E                                ?_TMR1_WriteTimer 0020  
                           ?_NEMS_set_frequency 0076                              _NEMS_set_ramp_down 178D  
               __size_of_NEMS_stop_program_nack 0010                            ??_NEMS_set_amplitude 0029  
                        ??_NEMS_message_handler 004A                    __size_of_NEMS_binary_command 0051  
                           ?_NEMS_set_ramp_down 0076                           __size_of_eeprom_write 0021  
                               __size_of___bmul 0011                                         ___awdiv 0B28  
                                       ___lbmod 08A8                                 __size_of___wmul 001B  
                                       ___lwdiv 09E5                            ??_NEMS_set_frequency 0029  
                              ??_DAC1_SetOutput 0020                             _EUSART1_is_rx_ready 15B3  
                          __size_of_TMR1_Reload 0008                             _EUSART1_is_tx_ready 15BA  
                                       __ptext1 158A                                         __ptext2 0838  
                                       __ptext3 17E9                                         __ptext4 086F  
                                       __ptext5 15F5                                         __ptext6 0988  
                                       __ptext7 15EB                                         __ptext8 1586  
                                       __ptext9 07BD                                  ?_NEMS_timer_SE 0076  
                                     _T1CONbits 020E                                      _se_channel 004E  
                         _OSCILLATOR_Initialize 15EB                            ??_NEMS_set_ramp_down 0029  
                         __size_of__sprintf_u8b 008F                              _EUSART1_Initialize 07BD  
                      ??_PIN_MANAGER_Initialize 0020                         __end_of_NEMS_get_packet 0A8E  
                 ??_EUSART1_DefaultErrorHandler 0077                                         _program 0057  
                    __size_of_SYSTEM_Initialize 001B                                         clrloop0 1600  
                  __size_of_NEMS_set_amplitude2 0017                            end_of_initialization 006E  
                    __end_of_NEMS_start_sensors 15B3                            ?_EUSART1_is_rx_ready 0076  
                    __end_of_NEMS_start_program 1665                             ?_EUSART1_Initialize 0076  
              __size_of_NEMS_start_program_nack 002C                            ?_EUSART1_is_tx_ready 0076  
                     __size_of_NEMS_get_program 019E                                    _eeprom_write 08C7  
                   _EUSART1_OverrunErrorHandler 00C2                               _NEMS_load_program 0CF9  
         __end_of_EUSART1_SetRxInterruptHandler 15A2          __size_of_EUSART1_SetRxInterruptHandler 0005  
                 _EUSART1_SetRxInterruptHandler 159D                            NEMS_read_sensors@aux 0027  
                            ?_NEMS_load_program 0076                           __size_of_EUSART1_Read 0026  
                __size_of_NEMS_set_contractions 0017                                ?_ADCC_Initialize 0076  
                 __end_of_NEMS_set_contractions 175F                __end_of_ADCC_GetSingleConversion 1679  
                                  __sprintf_u8b 0BCA                            ??_EUSART1_Initialize 0022  
                                    _sensor_ind 004D                          _NEMS_stop_program_nack 160B  
                                       write@pt 0024                        _TMR0_SetInterruptHandler 1593  
                           ??_NEMS_load_program 0028                         __end_of_NEMS_initialize 0ADB  
                             _NEMS_read_sensors 0ADB                                ___lbmod@dividend 0023  
                            ?_NEMS_read_sensors 0076                        ?_NEMS_set_phase_duration 0076  
              __size_of_EUSART1_SetErrorHandler 0008                             EUSART1_Write@txData 0021  
                         ??_EUSART1_is_rx_ready 0020                            _NMES_freq_multiplier 00C6  
                         ??_EUSART1_is_tx_ready 0020                                     ___lbmod@rem 0025  
                           ??_NEMS_read_sensors 0026                       __end_of_NEMS_load_program 0DA7  
                                 ??_eeprom_read 0020                                    _EUSART1_Read 090C  
            NEMS_binary_command@super_electrode 0049            __size_of_EUSART1_DefaultErrorHandler 0003  
                          _timer0ReloadVal16bit 0067                                  _TMR0_StopTimer 1579  
             __size_of_NEMS_set_symmetry_factor 0017                       ?_NEMS_set_symmetry_factor 0076  
                                __end_of___bmul 162C                                  __end_of___wmul 0838  
                               ??_NEMS_timer_SE 0077                               __size_of_TMR0_ISR 0014  
                     __end_of_NEMS_read_sensors 0B28                                  _TMR1_StopTimer 157F  
                        ?_OSCILLATOR_Initialize 0076                        ?_TMR1_HasOverflowOccured 0076  
          NEMS_recalculate_program@se_frequency 0042                        __end_ofi1_DAC1_SetOutput 1593  
                           start_initialization 0027                               _NEMS_set_OFF_time 1690  
                      __size_of_TMR0_Initialize 001C                 __size_of_PIN_MANAGER_Initialize 002E  
                                   __end_of_mux 1021                                ?_NEMS_get_packet 0076  
                            ?_NEMS_set_OFF_time 0076   EUSART1_SetRxInterruptHandler@interruptHandler 0020  
 EUSART1_SetTxInterruptHandler@interruptHandler 0020                           __end_of_EUSART1_Write 090C  
                   __end_of_NEMS_calculate_ramp 07BD                             ??_NEMS_set_OFF_time 0029  
                        __end_of_TMR0_StopTimer 157C                       __size_of_NEMS_set_ON_time 0017  
              __end_of_NEMS_recalculate_program 04CE                        __size_of_TMR1_Initialize 0017  
                                      ??___bmul 0021                                ??_PMD_Initialize 0020  
                                      ??___wmul 0024                             __end_of_eeprom_read 163D  
                         _EUSART1_RxDataHandler 1679                  ?_EUSART1_SetRxInterruptHandler 0020  
                        __end_of_TMR1_StopTimer 1582                                  _eusart1RxCount 0071  
                              ?_NEMS_initialize 0076                 __end_of_NEMS_set_phase_duration 178D  
                     __end_of_NEMS_set_OFF_time 16A7                             _NEMS_binary_command 0B79  
                      _ADCC_GetSingleConversion 1665                                     __pbssBIGRAM 263C  
                      __size_of_DAC1_Initialize 0005                                     __pbssCOMMON 0070  
             _EUSART1_RxDefaultInterruptHandler 006B                                       ___latbits 0003  
                 __size_of_EUSART1_Transmit_ISR 001D                                   __pcstackBANK0 0020  
                                 __pcstackBANK1 00C7                         _NEMS_start_program_nack 095C  
                             _NEMS_save_program 0DA7                                __sprintf_u8b@buf 0034  
                              __sprintf_u8b@aux 0033                                __sprintf_u8b@val 002F  
                     __size_of_NEMS_set_ramp_up 0017                                eeprom_write@addr 0021  
               ??_EUSART1_SetTxInterruptHandler 0022                                _NEMS_get_program 0E62  
              ??_EUSART1_SetFramingErrorHandler 0022                 ?_EUSART1_SetFramingErrorHandler 0020  
                  __size_of_EUSART1_Receive_ISR 0036                              ?_NEMS_save_program 0076  
                    __size_of_NEMS_load_program 00AE                            ?_NEMS_binary_command 0076  
                         _TMR0_InterruptHandler 0065                                       __pnvBANK0 0065  
                                     __pnvBANK1 00C0                               _NEMS_set_channel1 16EC  
                             _NEMS_set_channel2 1703                               _NEMS_set_channel3 171A  
                             _NEMS_set_channel4 1731                        __size_of_TMR0_StartTimer 0003  
                               ?_TMR0_StopTimer 0076                             NEMS_get_program@aux 0039  
                              ___lwdiv@dividend 0028                          _PIN_MANAGER_Initialize 0988  
                            ?_NEMS_set_channel1 0076                              ?_NEMS_set_channel2 0076  
                            ?_NEMS_set_channel3 0076                              ?_NEMS_set_channel4 0076  
                           ??_NEMS_save_program 0028                      NEMS_binary_command@go_stop 0048  
               ADCC_GetSingleConversion@channel 0023                                        ?___awdiv 0026  
                                      ?___lbmod 0020                             _NEMS_set_amplitude2 16D5  
                                      ?___lwdiv 0026                 __end_of_TMR1_HasOverflowOccured 158E  
                               ?_TMR1_StopTimer 0076                                        _DAC1CON0 090E  
                                      _DAC1CON1 090F                             ??_NEMS_set_channel1 0029  
                           ??_NEMS_set_channel2 0029                             ??_NEMS_set_channel3 0029  
                           ??_NEMS_set_channel4 0029                    ??_INTERRUPT_InterruptManager 007C  
                    __size_of_NEMS_read_sensors 004D                                        _BAUD1CON 011F  
                      __size_of_TMR1_StartTimer 0002      __end_of_EUSART1_DefaultOverrunErrorHandler 1586  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0004            ??_EUSART1_DefaultOverrunErrorHandler 0076  
           ?_EUSART1_DefaultOverrunErrorHandler 0076              _EUSART1_DefaultOverrunErrorHandler 1582  
                          _EUSART1_ErrorHandler 00C0                         _EUSART1_SetErrorHandler 15C9  
                     __end_of_NEMS_save_program 0E62                                ___lwdiv@quotient 002B  
                                __size_of__puts 002A                            ?_NEMS_set_amplitude2 0076  
                                __size_of_write 001C                               ??_TMR0_Initialize 0022  
                     __end_of_NEMS_set_channel1 1703                       __end_of_NEMS_set_channel2 171A  
                     __end_of_NEMS_set_channel3 1731                       __end_of_NEMS_set_channel4 1748  
                                ___wmul@product 0024                                        _LATAbits 0018  
       EUSART1_SetErrorHandler@interruptHandler 0020                           ??_NEMS_binary_command 0044  
                   __size_of_NEMS_set_amplitude 0017                                       clear_ram0 15FF  
                                   __puts@index 0027                                     _eeprom_read 162C  
                         NEMS_save_program@addr 0029                                        _PIE0bits 0716  
                                      _PIE3bits 0719                        __size_of_TMR1_WriteTimer 0017  
           __size_of_INTERRUPT_InterruptManager 0021                      ??_TMR0_SetInterruptHandler 0022  
                        NEMS_get_packet@message 0026                                     write@lenght 0022  
                                      _PIR0bits 070C                                        _PIR3bits 070F  
                 __size_of_NEMS_message_handler 00A0                                        _PIR4bits 0710  
                       ?_NEMS_stop_program_nack 0076                                        _RX1DTPPS 1ECB  
                        ?_EUSART1_RxDataHandler 0076                                   ??_TMR1_Reload 0022  
                            _NEMS_start_sensors 15AD                              _NEMS_start_program 1651  
                                      _TMR0_ISR 163D                     __size_of_NEMS_set_frequency 0017  
                      _NEMS_recalculate_program 02FA                               ??_TMR1_Initialize 0020  
                                    _ADCON0bits 0111                             ?_NEMS_start_sensors 0076  
                             ___wmul@multiplier 0020                             ?_NEMS_start_program 0076  
                    __size_of_NEMS_set_OFF_time 0017                         __size_of_FVR_Initialize 0004  
                   __size_of_NEMS_set_ramp_down 0017                       ??_NEMS_start_program_nack 0043  
                         ??_NEMS_set_amplitude2 0029                               ??_DAC1_Initialize 0020  
              __end_of_NEMS_set_symmetry_factor 17D2                            ??_NEMS_start_sensors 0022  
                         EUSART1_Read@readValue 0021                            ??_NEMS_start_program 0044  
                __end_of_NEMS_stop_program_nack 161B                                _NEMS_set_ON_time 16A7  
         __end_of_EUSART1_SetTxInterruptHandler 15A7          __size_of_EUSART1_SetTxInterruptHandler 0005  
                 _EUSART1_SetTxInterruptHandler 15A2                __size_of_NEMS_set_phase_duration 0017  
                       ??_OSCILLATOR_Initialize 0020                               ??_TMR0_StartTimer 0020  
                              __size_of___awdiv 0051                                __size_of___lbmod 001F  
                   __size_of_EUSART1_Initialize 0043                                __size_of___lwdiv 0034  
                         _NEMS_set_contractions 1748                             __end_of_TMR1_Reload 15C9  
                     ??_EUSART1_SetErrorHandler 0022             __end_of_EUSART1_DefaultErrorHandler 1579  
                   _EUSART1_DefaultErrorHandler 1576                     __end_of_EUSART1_is_rx_ready 15BA  
                                    _T0CON0bits 059E                        __size_of_ADCC_Initialize 001A  
                             ?i1_DAC1_SetOutput 0076                     __end_of_EUSART1_is_tx_ready 15C1  
                               ___lwdiv@divisor 0026                         __size_of_DAC1_SetOutput 0006  
                    __size_of_NEMS_save_program 00BB                                 ___lwdiv@counter 002D  
                                      __ptext10 15A2                                        __ptext11 159D  
                                      __ptext20 0C59                                        __ptext12 15D9  
                                      __ptext21 0800                                        __ptext13 15D1  
                                      __ptext30 17A4                                        __ptext22 157F  
                                      __ptext14 15C9                                        __ptext31 178D  
                                      __ptext23 15E1                                        __ptext15 1598  
                                      __ptext40 16BE                                        __ptext32 1776  
                                      __ptext24 15AD                                        __ptext16 0803  
                                      __ptext41 16A7                                        __ptext33 175F  
                                      __ptext25 0002                                        __ptext17 0ADB  
                                      __ptext50 08A8                                        __ptext42 1690  
                                      __ptext34 1748                                        __ptext26 15C1  
                                      __ptext18 0853                                        __ptext51 0B79  
                                      __ptext43 0A4F                                        __ptext35 1731  
                                      __ptext27 17D2                                        __ptext19 1665  
                                      __ptext60 0B28                                        __ptext52 160B  
                                      __ptext44 0DA7                                        __ptext36 171A  
                                      __ptext28 1651                                        __ptext61 0687  
                                      __ptext53 095C                                        __ptext45 08C7  
                                      __ptext37 1703                                        __ptext29 17BB  
                                      __ptext62 081D                                        __ptext54 0932  
                                      __ptext46 0CF9                                        __ptext38 16EC  
                                      __ptext71 163D                                        __ptext63 09E5  
                                      __ptext55 15BA                                        __ptext47 162C  
                                      __ptext39 16D5                                        __ptext80 1576  
                                      __ptext72 04CE                                        __ptext64 090C  
                                      __ptext56 08E8                                        __ptext48 0E62  
                                      __ptext81 1679                                        __ptext73 0072  
                                      __ptext65 0A8E                                        __ptext57 157C  
                                      __ptext49 0BCA                                        __ptext74 1575  
                                      __ptext66 1579                                        __ptext58 02FA  
                                      __ptext75 158E                                        __ptext67 1593  
                                      __ptext59 161B                                        __ptext76 088B  
                                      __ptext68 15A7                                        __ptext77 0A19  
                                      __ptext69 15B3                                        __ptext78 1582  
                                      __ptext79 1574                              ??i1_DAC1_SetOutput 0076  
                                      __puts@pt 0022                                     _NEMS_states 0055  
                             ??_TMR1_StartTimer 0020                                _NEMS_set_ramp_up 17A4  
                    __size_of_NEMS_set_channel1 0017                      __size_of_NEMS_set_channel2 0017  
                    __size_of_NEMS_set_channel3 0017                      __size_of_NEMS_set_channel4 0017  
              __size_of_TMR1_HasOverflowOccured 0004                               _NEMS_pulse_states 0053  
                                 __size_of_main 002F                                        _se_index 004F  
          __end_of_TMR0_DefaultInterruptHandler 1576           __size_of_TMR0_DefaultInterruptHandler 0001  
                  _TMR0_DefaultInterruptHandler 1575                                      _RC1STAbits 011D  
                             NEMS_get_packet@pt 0028                                        _sens_buf 00A0  
EUSART1_SetOverrunErrorHandler@interruptHandler 0020                      ??_ADCC_GetSingleConversion 0023  
                                      int$flags 007E                                        _waveform 263C  
            __end_of_INTERRUPT_InterruptManager 0025                      _INTERRUPT_InterruptManager 0004  
                             ??_TMR1_WriteTimer 0022                        __end_of_NEMS_get_program 1000  
                   _EUSART1_FramingErrorHandler 00C4                             _EUSART1_Receive_ISR 0A19  
                         __end_of_NEMS_timer_SE 0687                                _NEMS_wave_states 0054  
                                    _INTCONbits 000B                                     _NVMCON1bits 081E  
                         NEMS_load_program@addr 0029                                  __pstringtext10 1839  
                                __pstringtext11 184B                                  __pstringtext20 18C1  
                                __pstringtext12 185C                                  __pstringtext21 18C8  
                                __pstringtext13 186C                                  __pstringtext30 1907  
                                __pstringtext22 18CF                                  __pstringtext14 187B  
                                __pstringtext31 190E                                  __pstringtext23 18D6  
                                __pstringtext15 188A                                  __pstringtext40 1946  
                                __pstringtext32 1915                                  __pstringtext24 18DD  
                                __pstringtext16 1896                                  __pstringtext41 194C  
                                __pstringtext33 191C                                  __pstringtext25 18E4  
                                __pstringtext17 18A2                                  __pstringtext50 1982  
                                __pstringtext42 1952                                  __pstringtext34 1922  
                                __pstringtext26 18EB                                  __pstringtext18 18AE  
                                __pstringtext51 1988                                  __pstringtext43 1958  
                                __pstringtext35 1928                                  __pstringtext27 18F2  
                                __pstringtext19 18BA                                  __pstringtext52 0000  
                                __pstringtext44 195E                                  __pstringtext36 192E  
                                __pstringtext28 18F9                                  __pstringtext45 1964  
                                __pstringtext37 1934                                  __pstringtext29 1900  
                                __pstringtext46 196A                                  __pstringtext38 193A  
                                __pstringtext47 1970                                  __pstringtext39 1940  
                                __pstringtext48 1976                                  __pstringtext49 197C  
                                      intlevel1 0000                                ??_TMR0_StopTimer 0020  
                          ?_EUSART1_Receive_ISR 0076                                      _NEMS_nmux1 0070  
                                    _NEMS_pmux1 0052                                      _NEMS_timer 0072  
                       ?_PIN_MANAGER_Initialize 0076                        __size_of_NEMS_get_packet 003F  
        __end_of_EUSART1_SetOverrunErrorHandler 15E1         __size_of_EUSART1_SetOverrunErrorHandler 0008  
                _EUSART1_SetOverrunErrorHandler 15D9                           NEMS_read_sensors@aux2 0029  
                               _NMES_se_control 0050                    __end_of_EUSART1_Transmit_ISR 08A8  
                              ??_TMR1_StopTimer 0020                        _NEMS_set_symmetry_factor 17BB  
                 ?_TMR0_DefaultInterruptHandler 0076                    __size_of_NEMS_calculate_ramp 0136  
                                   _TMR1_Reload 15C1  EUSART1_SetFramingErrorHandler@interruptHandler 0020  
                ?_EUSART1_SetTxInterruptHandler 0020                          ?_NEMS_set_contractions 0076  
                        __size_of_EUSART1_Write 0024                              _eusart1RxLastError 0056  
                             _NEMS_stop_sensors 0800                                   __pstringtext1 1000  
                                 __pstringtext2 1021                                   __pstringtext3 103D  
                                 __pstringtext4 1059                                   __pstringtext5 1072  
                                 __pstringtext6 108B                                   __pstringtext7 1800  
                                 __pstringtext8 1815                                   __pstringtext9 1827  
                             _NEMS_stop_program 15E1                                  _FVR_Initialize 1586  
                            ?_NEMS_stop_sensors 0076                              ?_NEMS_stop_program 0076  
                               _TMR0_Initialize 086F                             ??_NEMS_stop_sensors 0020  
                      __size_of_NEMS_initialize 004D                             ??_NEMS_stop_program 0028  
                         ??_EUSART1_Receive_ISR 0077                  __end_of_PIN_MANAGER_Initialize 09B6  
                             ??_ADCC_Initialize 0020                                   ?_eeprom_write 0020  
                                    _STATUSbits 0003                                    ?_eeprom_read 0076  
                       ??_EUSART1_RxDataHandler 0076                         _NEMS_set_phase_duration 1776  
                    ??_NEMS_recalculate_program 003C                                 _TMR1_Initialize 17E9  
