

Microchip Technology PIC LITE Macro Assembler V1.40 build -251452761 
                                                                                               Tue Jan 31 15:41:08 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	16LF1823
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	dabs	1,0x7E,2
    33  0000                     
    34                           ; Version 1.40
    35                           ; Generated 01/12/2016 GMT
    36                           ; 
    37                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16LF1823 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     	;# 
    69  0001                     	;# 
    70  0002                     	;# 
    71  0003                     	;# 
    72  0004                     	;# 
    73  0005                     	;# 
    74  0006                     	;# 
    75  0007                     	;# 
    76  0008                     	;# 
    77  0009                     	;# 
    78  000A                     	;# 
    79  000B                     	;# 
    80  000C                     	;# 
    81  000E                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  008C                     	;# 
    96  008E                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  010C                     	;# 
   111  010E                     	;# 
   112  0111                     	;# 
   113  0112                     	;# 
   114  0113                     	;# 
   115  0114                     	;# 
   116  0115                     	;# 
   117  0116                     	;# 
   118  0117                     	;# 
   119  0118                     	;# 
   120  0119                     	;# 
   121  011A                     	;# 
   122  011B                     	;# 
   123  011D                     	;# 
   124  011D                     	;# 
   125  018C                     	;# 
   126  018E                     	;# 
   127  0191                     	;# 
   128  0191                     	;# 
   129  0192                     	;# 
   130  0193                     	;# 
   131  0193                     	;# 
   132  0193                     	;# 
   133  0194                     	;# 
   134  0195                     	;# 
   135  0196                     	;# 
   136  0199                     	;# 
   137  019A                     	;# 
   138  019B                     	;# 
   139  019B                     	;# 
   140  019B                     	;# 
   141  019B                     	;# 
   142  019C                     	;# 
   143  019C                     	;# 
   144  019D                     	;# 
   145  019E                     	;# 
   146  019F                     	;# 
   147  020C                     	;# 
   148  020E                     	;# 
   149  0211                     	;# 
   150  0211                     	;# 
   151  0212                     	;# 
   152  0212                     	;# 
   153  0213                     	;# 
   154  0213                     	;# 
   155  0214                     	;# 
   156  0214                     	;# 
   157  0215                     	;# 
   158  0215                     	;# 
   159  0215                     	;# 
   160  0216                     	;# 
   161  0216                     	;# 
   162  0217                     	;# 
   163  0217                     	;# 
   164  0291                     	;# 
   165  0291                     	;# 
   166  0292                     	;# 
   167  0293                     	;# 
   168  0294                     	;# 
   169  0295                     	;# 
   170  0295                     	;# 
   171  0296                     	;# 
   172  0391                     	;# 
   173  0392                     	;# 
   174  0393                     	;# 
   175  039A                     	;# 
   176  039C                     	;# 
   177  039D                     	;# 
   178  039E                     	;# 
   179  039F                     	;# 
   180  0FE4                     	;# 
   181  0FE5                     	;# 
   182  0FE6                     	;# 
   183  0FE7                     	;# 
   184  0FE8                     	;# 
   185  0FE9                     	;# 
   186  0FEA                     	;# 
   187  0FEB                     	;# 
   188  0FED                     	;# 
   189  0FEE                     	;# 
   190  0FEF                     	;# 
   191  0000                     	;# 
   192  0001                     	;# 
   193  0002                     	;# 
   194  0003                     	;# 
   195  0004                     	;# 
   196  0005                     	;# 
   197  0006                     	;# 
   198  0007                     	;# 
   199  0008                     	;# 
   200  0009                     	;# 
   201  000A                     	;# 
   202  000B                     	;# 
   203  000C                     	;# 
   204  000E                     	;# 
   205  0011                     	;# 
   206  0012                     	;# 
   207  0015                     	;# 
   208  0016                     	;# 
   209  0016                     	;# 
   210  0017                     	;# 
   211  0018                     	;# 
   212  0019                     	;# 
   213  001A                     	;# 
   214  001B                     	;# 
   215  001C                     	;# 
   216  001E                     	;# 
   217  001F                     	;# 
   218  008C                     	;# 
   219  008E                     	;# 
   220  0091                     	;# 
   221  0092                     	;# 
   222  0095                     	;# 
   223  0096                     	;# 
   224  0097                     	;# 
   225  0098                     	;# 
   226  0099                     	;# 
   227  009A                     	;# 
   228  009B                     	;# 
   229  009B                     	;# 
   230  009C                     	;# 
   231  009D                     	;# 
   232  009E                     	;# 
   233  010C                     	;# 
   234  010E                     	;# 
   235  0111                     	;# 
   236  0112                     	;# 
   237  0113                     	;# 
   238  0114                     	;# 
   239  0115                     	;# 
   240  0116                     	;# 
   241  0117                     	;# 
   242  0118                     	;# 
   243  0119                     	;# 
   244  011A                     	;# 
   245  011B                     	;# 
   246  011D                     	;# 
   247  011D                     	;# 
   248  018C                     	;# 
   249  018E                     	;# 
   250  0191                     	;# 
   251  0191                     	;# 
   252  0192                     	;# 
   253  0193                     	;# 
   254  0193                     	;# 
   255  0193                     	;# 
   256  0194                     	;# 
   257  0195                     	;# 
   258  0196                     	;# 
   259  0199                     	;# 
   260  019A                     	;# 
   261  019B                     	;# 
   262  019B                     	;# 
   263  019B                     	;# 
   264  019B                     	;# 
   265  019C                     	;# 
   266  019C                     	;# 
   267  019D                     	;# 
   268  019E                     	;# 
   269  019F                     	;# 
   270  020C                     	;# 
   271  020E                     	;# 
   272  0211                     	;# 
   273  0211                     	;# 
   274  0212                     	;# 
   275  0212                     	;# 
   276  0213                     	;# 
   277  0213                     	;# 
   278  0214                     	;# 
   279  0214                     	;# 
   280  0215                     	;# 
   281  0215                     	;# 
   282  0215                     	;# 
   283  0216                     	;# 
   284  0216                     	;# 
   285  0217                     	;# 
   286  0217                     	;# 
   287  0291                     	;# 
   288  0291                     	;# 
   289  0292                     	;# 
   290  0293                     	;# 
   291  0294                     	;# 
   292  0295                     	;# 
   293  0295                     	;# 
   294  0296                     	;# 
   295  0391                     	;# 
   296  0392                     	;# 
   297  0393                     	;# 
   298  039A                     	;# 
   299  039C                     	;# 
   300  039D                     	;# 
   301  039E                     	;# 
   302  039F                     	;# 
   303  0FE4                     	;# 
   304  0FE5                     	;# 
   305  0FE6                     	;# 
   306  0FE7                     	;# 
   307  0FE8                     	;# 
   308  0FE9                     	;# 
   309  0FEA                     	;# 
   310  0FEB                     	;# 
   311  0FED                     	;# 
   312  0FEE                     	;# 
   313  0FEF                     	;# 
   314  0000                     	;# 
   315  0001                     	;# 
   316  0002                     	;# 
   317  0003                     	;# 
   318  0004                     	;# 
   319  0005                     	;# 
   320  0006                     	;# 
   321  0007                     	;# 
   322  0008                     	;# 
   323  0009                     	;# 
   324  000A                     	;# 
   325  000B                     	;# 
   326  000C                     	;# 
   327  000E                     	;# 
   328  0011                     	;# 
   329  0012                     	;# 
   330  0015                     	;# 
   331  0016                     	;# 
   332  0016                     	;# 
   333  0017                     	;# 
   334  0018                     	;# 
   335  0019                     	;# 
   336  001A                     	;# 
   337  001B                     	;# 
   338  001C                     	;# 
   339  001E                     	;# 
   340  001F                     	;# 
   341  008C                     	;# 
   342  008E                     	;# 
   343  0091                     	;# 
   344  0092                     	;# 
   345  0095                     	;# 
   346  0096                     	;# 
   347  0097                     	;# 
   348  0098                     	;# 
   349  0099                     	;# 
   350  009A                     	;# 
   351  009B                     	;# 
   352  009B                     	;# 
   353  009C                     	;# 
   354  009D                     	;# 
   355  009E                     	;# 
   356  010C                     	;# 
   357  010E                     	;# 
   358  0111                     	;# 
   359  0112                     	;# 
   360  0113                     	;# 
   361  0114                     	;# 
   362  0115                     	;# 
   363  0116                     	;# 
   364  0117                     	;# 
   365  0118                     	;# 
   366  0119                     	;# 
   367  011A                     	;# 
   368  011B                     	;# 
   369  011D                     	;# 
   370  011D                     	;# 
   371  018C                     	;# 
   372  018E                     	;# 
   373  0191                     	;# 
   374  0191                     	;# 
   375  0192                     	;# 
   376  0193                     	;# 
   377  0193                     	;# 
   378  0193                     	;# 
   379  0194                     	;# 
   380  0195                     	;# 
   381  0196                     	;# 
   382  0199                     	;# 
   383  019A                     	;# 
   384  019B                     	;# 
   385  019B                     	;# 
   386  019B                     	;# 
   387  019B                     	;# 
   388  019C                     	;# 
   389  019C                     	;# 
   390  019D                     	;# 
   391  019E                     	;# 
   392  019F                     	;# 
   393  020C                     	;# 
   394  020E                     	;# 
   395  0211                     	;# 
   396  0211                     	;# 
   397  0212                     	;# 
   398  0212                     	;# 
   399  0213                     	;# 
   400  0213                     	;# 
   401  0214                     	;# 
   402  0214                     	;# 
   403  0215                     	;# 
   404  0215                     	;# 
   405  0215                     	;# 
   406  0216                     	;# 
   407  0216                     	;# 
   408  0217                     	;# 
   409  0217                     	;# 
   410  0291                     	;# 
   411  0291                     	;# 
   412  0292                     	;# 
   413  0293                     	;# 
   414  0294                     	;# 
   415  0295                     	;# 
   416  0295                     	;# 
   417  0296                     	;# 
   418  0391                     	;# 
   419  0392                     	;# 
   420  0393                     	;# 
   421  039A                     	;# 
   422  039C                     	;# 
   423  039D                     	;# 
   424  039E                     	;# 
   425  039F                     	;# 
   426  0FE4                     	;# 
   427  0FE5                     	;# 
   428  0FE6                     	;# 
   429  0FE7                     	;# 
   430  0FE8                     	;# 
   431  0FE9                     	;# 
   432  0FEA                     	;# 
   433  0FEB                     	;# 
   434  0FED                     	;# 
   435  0FEE                     	;# 
   436  0FEF                     	;# 
   437  0000                     	;# 
   438  0001                     	;# 
   439  0002                     	;# 
   440  0003                     	;# 
   441  0004                     	;# 
   442  0005                     	;# 
   443  0006                     	;# 
   444  0007                     	;# 
   445  0008                     	;# 
   446  0009                     	;# 
   447  000A                     	;# 
   448  000B                     	;# 
   449  000C                     	;# 
   450  000E                     	;# 
   451  0011                     	;# 
   452  0012                     	;# 
   453  0015                     	;# 
   454  0016                     	;# 
   455  0016                     	;# 
   456  0017                     	;# 
   457  0018                     	;# 
   458  0019                     	;# 
   459  001A                     	;# 
   460  001B                     	;# 
   461  001C                     	;# 
   462  001E                     	;# 
   463  001F                     	;# 
   464  008C                     	;# 
   465  008E                     	;# 
   466  0091                     	;# 
   467  0092                     	;# 
   468  0095                     	;# 
   469  0096                     	;# 
   470  0097                     	;# 
   471  0098                     	;# 
   472  0099                     	;# 
   473  009A                     	;# 
   474  009B                     	;# 
   475  009B                     	;# 
   476  009C                     	;# 
   477  009D                     	;# 
   478  009E                     	;# 
   479  010C                     	;# 
   480  010E                     	;# 
   481  0111                     	;# 
   482  0112                     	;# 
   483  0113                     	;# 
   484  0114                     	;# 
   485  0115                     	;# 
   486  0116                     	;# 
   487  0117                     	;# 
   488  0118                     	;# 
   489  0119                     	;# 
   490  011A                     	;# 
   491  011B                     	;# 
   492  011D                     	;# 
   493  011D                     	;# 
   494  018C                     	;# 
   495  018E                     	;# 
   496  0191                     	;# 
   497  0191                     	;# 
   498  0192                     	;# 
   499  0193                     	;# 
   500  0193                     	;# 
   501  0193                     	;# 
   502  0194                     	;# 
   503  0195                     	;# 
   504  0196                     	;# 
   505  0199                     	;# 
   506  019A                     	;# 
   507  019B                     	;# 
   508  019B                     	;# 
   509  019B                     	;# 
   510  019B                     	;# 
   511  019C                     	;# 
   512  019C                     	;# 
   513  019D                     	;# 
   514  019E                     	;# 
   515  019F                     	;# 
   516  020C                     	;# 
   517  020E                     	;# 
   518  0211                     	;# 
   519  0211                     	;# 
   520  0212                     	;# 
   521  0212                     	;# 
   522  0213                     	;# 
   523  0213                     	;# 
   524  0214                     	;# 
   525  0214                     	;# 
   526  0215                     	;# 
   527  0215                     	;# 
   528  0215                     	;# 
   529  0216                     	;# 
   530  0216                     	;# 
   531  0217                     	;# 
   532  0217                     	;# 
   533  0291                     	;# 
   534  0291                     	;# 
   535  0292                     	;# 
   536  0293                     	;# 
   537  0294                     	;# 
   538  0295                     	;# 
   539  0295                     	;# 
   540  0296                     	;# 
   541  0391                     	;# 
   542  0392                     	;# 
   543  0393                     	;# 
   544  039A                     	;# 
   545  039C                     	;# 
   546  039D                     	;# 
   547  039E                     	;# 
   548  039F                     	;# 
   549  0FE4                     	;# 
   550  0FE5                     	;# 
   551  0FE6                     	;# 
   552  0FE7                     	;# 
   553  0FE8                     	;# 
   554  0FE9                     	;# 
   555  0FEA                     	;# 
   556  0FEB                     	;# 
   557  0FED                     	;# 
   558  0FEE                     	;# 
   559  0FEF                     	;# 
   560  0000                     	;# 
   561  0001                     	;# 
   562  0002                     	;# 
   563  0003                     	;# 
   564  0004                     	;# 
   565  0005                     	;# 
   566  0006                     	;# 
   567  0007                     	;# 
   568  0008                     	;# 
   569  0009                     	;# 
   570  000A                     	;# 
   571  000B                     	;# 
   572  000C                     	;# 
   573  000E                     	;# 
   574  0011                     	;# 
   575  0012                     	;# 
   576  0015                     	;# 
   577  0016                     	;# 
   578  0016                     	;# 
   579  0017                     	;# 
   580  0018                     	;# 
   581  0019                     	;# 
   582  001A                     	;# 
   583  001B                     	;# 
   584  001C                     	;# 
   585  001E                     	;# 
   586  001F                     	;# 
   587  008C                     	;# 
   588  008E                     	;# 
   589  0091                     	;# 
   590  0092                     	;# 
   591  0095                     	;# 
   592  0096                     	;# 
   593  0097                     	;# 
   594  0098                     	;# 
   595  0099                     	;# 
   596  009A                     	;# 
   597  009B                     	;# 
   598  009B                     	;# 
   599  009C                     	;# 
   600  009D                     	;# 
   601  009E                     	;# 
   602  010C                     	;# 
   603  010E                     	;# 
   604  0111                     	;# 
   605  0112                     	;# 
   606  0113                     	;# 
   607  0114                     	;# 
   608  0115                     	;# 
   609  0116                     	;# 
   610  0117                     	;# 
   611  0118                     	;# 
   612  0119                     	;# 
   613  011A                     	;# 
   614  011B                     	;# 
   615  011D                     	;# 
   616  011D                     	;# 
   617  018C                     	;# 
   618  018E                     	;# 
   619  0191                     	;# 
   620  0191                     	;# 
   621  0192                     	;# 
   622  0193                     	;# 
   623  0193                     	;# 
   624  0193                     	;# 
   625  0194                     	;# 
   626  0195                     	;# 
   627  0196                     	;# 
   628  0199                     	;# 
   629  019A                     	;# 
   630  019B                     	;# 
   631  019B                     	;# 
   632  019B                     	;# 
   633  019B                     	;# 
   634  019C                     	;# 
   635  019C                     	;# 
   636  019D                     	;# 
   637  019E                     	;# 
   638  019F                     	;# 
   639  020C                     	;# 
   640  020E                     	;# 
   641  0211                     	;# 
   642  0211                     	;# 
   643  0212                     	;# 
   644  0212                     	;# 
   645  0213                     	;# 
   646  0213                     	;# 
   647  0214                     	;# 
   648  0214                     	;# 
   649  0215                     	;# 
   650  0215                     	;# 
   651  0215                     	;# 
   652  0216                     	;# 
   653  0216                     	;# 
   654  0217                     	;# 
   655  0217                     	;# 
   656  0291                     	;# 
   657  0291                     	;# 
   658  0292                     	;# 
   659  0293                     	;# 
   660  0294                     	;# 
   661  0295                     	;# 
   662  0295                     	;# 
   663  0296                     	;# 
   664  0391                     	;# 
   665  0392                     	;# 
   666  0393                     	;# 
   667  039A                     	;# 
   668  039C                     	;# 
   669  039D                     	;# 
   670  039E                     	;# 
   671  039F                     	;# 
   672  0FE4                     	;# 
   673  0FE5                     	;# 
   674  0FE6                     	;# 
   675  0FE7                     	;# 
   676  0FE8                     	;# 
   677  0FE9                     	;# 
   678  0FEA                     	;# 
   679  0FEB                     	;# 
   680  0FED                     	;# 
   681  0FEE                     	;# 
   682  0FEF                     	;# 
   683  0000                     	;# 
   684  0001                     	;# 
   685  0002                     	;# 
   686  0003                     	;# 
   687  0004                     	;# 
   688  0005                     	;# 
   689  0006                     	;# 
   690  0007                     	;# 
   691  0008                     	;# 
   692  0009                     	;# 
   693  000A                     	;# 
   694  000B                     	;# 
   695  000C                     	;# 
   696  000E                     	;# 
   697  0011                     	;# 
   698  0012                     	;# 
   699  0015                     	;# 
   700  0016                     	;# 
   701  0016                     	;# 
   702  0017                     	;# 
   703  0018                     	;# 
   704  0019                     	;# 
   705  001A                     	;# 
   706  001B                     	;# 
   707  001C                     	;# 
   708  001E                     	;# 
   709  001F                     	;# 
   710  008C                     	;# 
   711  008E                     	;# 
   712  0091                     	;# 
   713  0092                     	;# 
   714  0095                     	;# 
   715  0096                     	;# 
   716  0097                     	;# 
   717  0098                     	;# 
   718  0099                     	;# 
   719  009A                     	;# 
   720  009B                     	;# 
   721  009B                     	;# 
   722  009C                     	;# 
   723  009D                     	;# 
   724  009E                     	;# 
   725  010C                     	;# 
   726  010E                     	;# 
   727  0111                     	;# 
   728  0112                     	;# 
   729  0113                     	;# 
   730  0114                     	;# 
   731  0115                     	;# 
   732  0116                     	;# 
   733  0117                     	;# 
   734  0118                     	;# 
   735  0119                     	;# 
   736  011A                     	;# 
   737  011B                     	;# 
   738  011D                     	;# 
   739  011D                     	;# 
   740  018C                     	;# 
   741  018E                     	;# 
   742  0191                     	;# 
   743  0191                     	;# 
   744  0192                     	;# 
   745  0193                     	;# 
   746  0193                     	;# 
   747  0193                     	;# 
   748  0194                     	;# 
   749  0195                     	;# 
   750  0196                     	;# 
   751  0199                     	;# 
   752  019A                     	;# 
   753  019B                     	;# 
   754  019B                     	;# 
   755  019B                     	;# 
   756  019B                     	;# 
   757  019C                     	;# 
   758  019C                     	;# 
   759  019D                     	;# 
   760  019E                     	;# 
   761  019F                     	;# 
   762  020C                     	;# 
   763  020E                     	;# 
   764  0211                     	;# 
   765  0211                     	;# 
   766  0212                     	;# 
   767  0212                     	;# 
   768  0213                     	;# 
   769  0213                     	;# 
   770  0214                     	;# 
   771  0214                     	;# 
   772  0215                     	;# 
   773  0215                     	;# 
   774  0215                     	;# 
   775  0216                     	;# 
   776  0216                     	;# 
   777  0217                     	;# 
   778  0217                     	;# 
   779  0291                     	;# 
   780  0291                     	;# 
   781  0292                     	;# 
   782  0293                     	;# 
   783  0294                     	;# 
   784  0295                     	;# 
   785  0295                     	;# 
   786  0296                     	;# 
   787  0391                     	;# 
   788  0392                     	;# 
   789  0393                     	;# 
   790  039A                     	;# 
   791  039C                     	;# 
   792  039D                     	;# 
   793  039E                     	;# 
   794  039F                     	;# 
   795  0FE4                     	;# 
   796  0FE5                     	;# 
   797  0FE6                     	;# 
   798  0FE7                     	;# 
   799  0FE8                     	;# 
   800  0FE9                     	;# 
   801  0FEA                     	;# 
   802  0FEB                     	;# 
   803  0FED                     	;# 
   804  0FEE                     	;# 
   805  0FEF                     	;# 
   806  0000                     	;# 
   807  0001                     	;# 
   808  0002                     	;# 
   809  0003                     	;# 
   810  0004                     	;# 
   811  0005                     	;# 
   812  0006                     	;# 
   813  0007                     	;# 
   814  0008                     	;# 
   815  0009                     	;# 
   816  000A                     	;# 
   817  000B                     	;# 
   818  000C                     	;# 
   819  000E                     	;# 
   820  0011                     	;# 
   821  0012                     	;# 
   822  0015                     	;# 
   823  0016                     	;# 
   824  0016                     	;# 
   825  0017                     	;# 
   826  0018                     	;# 
   827  0019                     	;# 
   828  001A                     	;# 
   829  001B                     	;# 
   830  001C                     	;# 
   831  001E                     	;# 
   832  001F                     	;# 
   833  008C                     	;# 
   834  008E                     	;# 
   835  0091                     	;# 
   836  0092                     	;# 
   837  0095                     	;# 
   838  0096                     	;# 
   839  0097                     	;# 
   840  0098                     	;# 
   841  0099                     	;# 
   842  009A                     	;# 
   843  009B                     	;# 
   844  009B                     	;# 
   845  009C                     	;# 
   846  009D                     	;# 
   847  009E                     	;# 
   848  010C                     	;# 
   849  010E                     	;# 
   850  0111                     	;# 
   851  0112                     	;# 
   852  0113                     	;# 
   853  0114                     	;# 
   854  0115                     	;# 
   855  0116                     	;# 
   856  0117                     	;# 
   857  0118                     	;# 
   858  0119                     	;# 
   859  011A                     	;# 
   860  011B                     	;# 
   861  011D                     	;# 
   862  011D                     	;# 
   863  018C                     	;# 
   864  018E                     	;# 
   865  0191                     	;# 
   866  0191                     	;# 
   867  0192                     	;# 
   868  0193                     	;# 
   869  0193                     	;# 
   870  0193                     	;# 
   871  0194                     	;# 
   872  0195                     	;# 
   873  0196                     	;# 
   874  0199                     	;# 
   875  019A                     	;# 
   876  019B                     	;# 
   877  019B                     	;# 
   878  019B                     	;# 
   879  019B                     	;# 
   880  019C                     	;# 
   881  019C                     	;# 
   882  019D                     	;# 
   883  019E                     	;# 
   884  019F                     	;# 
   885  020C                     	;# 
   886  020E                     	;# 
   887  0211                     	;# 
   888  0211                     	;# 
   889  0212                     	;# 
   890  0212                     	;# 
   891  0213                     	;# 
   892  0213                     	;# 
   893  0214                     	;# 
   894  0214                     	;# 
   895  0215                     	;# 
   896  0215                     	;# 
   897  0215                     	;# 
   898  0216                     	;# 
   899  0216                     	;# 
   900  0217                     	;# 
   901  0217                     	;# 
   902  0291                     	;# 
   903  0291                     	;# 
   904  0292                     	;# 
   905  0293                     	;# 
   906  0294                     	;# 
   907  0295                     	;# 
   908  0295                     	;# 
   909  0296                     	;# 
   910  0391                     	;# 
   911  0392                     	;# 
   912  0393                     	;# 
   913  039A                     	;# 
   914  039C                     	;# 
   915  039D                     	;# 
   916  039E                     	;# 
   917  039F                     	;# 
   918  0FE4                     	;# 
   919  0FE5                     	;# 
   920  0FE6                     	;# 
   921  0FE7                     	;# 
   922  0FE8                     	;# 
   923  0FE9                     	;# 
   924  0FEA                     	;# 
   925  0FEB                     	;# 
   926  0FED                     	;# 
   927  0FEE                     	;# 
   928  0FEF                     	;# 
   929  0000                     	;# 
   930  0001                     	;# 
   931  0002                     	;# 
   932  0003                     	;# 
   933  0004                     	;# 
   934  0005                     	;# 
   935  0006                     	;# 
   936  0007                     	;# 
   937  0008                     	;# 
   938  0009                     	;# 
   939  000A                     	;# 
   940  000B                     	;# 
   941  000C                     	;# 
   942  000E                     	;# 
   943  0011                     	;# 
   944  0012                     	;# 
   945  0015                     	;# 
   946  0016                     	;# 
   947  0016                     	;# 
   948  0017                     	;# 
   949  0018                     	;# 
   950  0019                     	;# 
   951  001A                     	;# 
   952  001B                     	;# 
   953  001C                     	;# 
   954  001E                     	;# 
   955  001F                     	;# 
   956  008C                     	;# 
   957  008E                     	;# 
   958  0091                     	;# 
   959  0092                     	;# 
   960  0095                     	;# 
   961  0096                     	;# 
   962  0097                     	;# 
   963  0098                     	;# 
   964  0099                     	;# 
   965  009A                     	;# 
   966  009B                     	;# 
   967  009B                     	;# 
   968  009C                     	;# 
   969  009D                     	;# 
   970  009E                     	;# 
   971  010C                     	;# 
   972  010E                     	;# 
   973  0111                     	;# 
   974  0112                     	;# 
   975  0113                     	;# 
   976  0114                     	;# 
   977  0115                     	;# 
   978  0116                     	;# 
   979  0117                     	;# 
   980  0118                     	;# 
   981  0119                     	;# 
   982  011A                     	;# 
   983  011B                     	;# 
   984  011D                     	;# 
   985  011D                     	;# 
   986  018C                     	;# 
   987  018E                     	;# 
   988  0191                     	;# 
   989  0191                     	;# 
   990  0192                     	;# 
   991  0193                     	;# 
   992  0193                     	;# 
   993  0193                     	;# 
   994  0194                     	;# 
   995  0195                     	;# 
   996  0196                     	;# 
   997  0199                     	;# 
   998  019A                     	;# 
   999  019B                     	;# 
  1000  019B                     	;# 
  1001  019B                     	;# 
  1002  019B                     	;# 
  1003  019C                     	;# 
  1004  019C                     	;# 
  1005  019D                     	;# 
  1006  019E                     	;# 
  1007  019F                     	;# 
  1008  020C                     	;# 
  1009  020E                     	;# 
  1010  0211                     	;# 
  1011  0211                     	;# 
  1012  0212                     	;# 
  1013  0212                     	;# 
  1014  0213                     	;# 
  1015  0213                     	;# 
  1016  0214                     	;# 
  1017  0214                     	;# 
  1018  0215                     	;# 
  1019  0215                     	;# 
  1020  0215                     	;# 
  1021  0216                     	;# 
  1022  0216                     	;# 
  1023  0217                     	;# 
  1024  0217                     	;# 
  1025  0291                     	;# 
  1026  0291                     	;# 
  1027  0292                     	;# 
  1028  0293                     	;# 
  1029  0294                     	;# 
  1030  0295                     	;# 
  1031  0295                     	;# 
  1032  0296                     	;# 
  1033  0391                     	;# 
  1034  0392                     	;# 
  1035  0393                     	;# 
  1036  039A                     	;# 
  1037  039C                     	;# 
  1038  039D                     	;# 
  1039  039E                     	;# 
  1040  039F                     	;# 
  1041  0FE4                     	;# 
  1042  0FE5                     	;# 
  1043  0FE6                     	;# 
  1044  0FE7                     	;# 
  1045  0FE8                     	;# 
  1046  0FE9                     	;# 
  1047  0FEA                     	;# 
  1048  0FEB                     	;# 
  1049  0FED                     	;# 
  1050  0FEE                     	;# 
  1051  0FEF                     	;# 
  1052  0000                     	;# 
  1053  0001                     	;# 
  1054  0002                     	;# 
  1055  0003                     	;# 
  1056  0004                     	;# 
  1057  0005                     	;# 
  1058  0006                     	;# 
  1059  0007                     	;# 
  1060  0008                     	;# 
  1061  0009                     	;# 
  1062  000A                     	;# 
  1063  000B                     	;# 
  1064  000C                     	;# 
  1065  000E                     	;# 
  1066  0011                     	;# 
  1067  0012                     	;# 
  1068  0015                     	;# 
  1069  0016                     	;# 
  1070  0016                     	;# 
  1071  0017                     	;# 
  1072  0018                     	;# 
  1073  0019                     	;# 
  1074  001A                     	;# 
  1075  001B                     	;# 
  1076  001C                     	;# 
  1077  001E                     	;# 
  1078  001F                     	;# 
  1079  008C                     	;# 
  1080  008E                     	;# 
  1081  0091                     	;# 
  1082  0092                     	;# 
  1083  0095                     	;# 
  1084  0096                     	;# 
  1085  0097                     	;# 
  1086  0098                     	;# 
  1087  0099                     	;# 
  1088  009A                     	;# 
  1089  009B                     	;# 
  1090  009B                     	;# 
  1091  009C                     	;# 
  1092  009D                     	;# 
  1093  009E                     	;# 
  1094  010C                     	;# 
  1095  010E                     	;# 
  1096  0111                     	;# 
  1097  0112                     	;# 
  1098  0113                     	;# 
  1099  0114                     	;# 
  1100  0115                     	;# 
  1101  0116                     	;# 
  1102  0117                     	;# 
  1103  0118                     	;# 
  1104  0119                     	;# 
  1105  011A                     	;# 
  1106  011B                     	;# 
  1107  011D                     	;# 
  1108  011D                     	;# 
  1109  018C                     	;# 
  1110  018E                     	;# 
  1111  0191                     	;# 
  1112  0191                     	;# 
  1113  0192                     	;# 
  1114  0193                     	;# 
  1115  0193                     	;# 
  1116  0193                     	;# 
  1117  0194                     	;# 
  1118  0195                     	;# 
  1119  0196                     	;# 
  1120  0199                     	;# 
  1121  019A                     	;# 
  1122  019B                     	;# 
  1123  019B                     	;# 
  1124  019B                     	;# 
  1125  019B                     	;# 
  1126  019C                     	;# 
  1127  019C                     	;# 
  1128  019D                     	;# 
  1129  019E                     	;# 
  1130  019F                     	;# 
  1131  020C                     	;# 
  1132  020E                     	;# 
  1133  0211                     	;# 
  1134  0211                     	;# 
  1135  0212                     	;# 
  1136  0212                     	;# 
  1137  0213                     	;# 
  1138  0213                     	;# 
  1139  0214                     	;# 
  1140  0214                     	;# 
  1141  0215                     	;# 
  1142  0215                     	;# 
  1143  0215                     	;# 
  1144  0216                     	;# 
  1145  0216                     	;# 
  1146  0217                     	;# 
  1147  0217                     	;# 
  1148  0291                     	;# 
  1149  0291                     	;# 
  1150  0292                     	;# 
  1151  0293                     	;# 
  1152  0294                     	;# 
  1153  0295                     	;# 
  1154  0295                     	;# 
  1155  0296                     	;# 
  1156  0391                     	;# 
  1157  0392                     	;# 
  1158  0393                     	;# 
  1159  039A                     	;# 
  1160  039C                     	;# 
  1161  039D                     	;# 
  1162  039E                     	;# 
  1163  039F                     	;# 
  1164  0FE4                     	;# 
  1165  0FE5                     	;# 
  1166  0FE6                     	;# 
  1167  0FE7                     	;# 
  1168  0FE8                     	;# 
  1169  0FE9                     	;# 
  1170  0FEA                     	;# 
  1171  0FEB                     	;# 
  1172  0FED                     	;# 
  1173  0FEE                     	;# 
  1174  0FEF                     	;# 
  1175  000E                     _PORTC	set	14
  1176  0015                     _TMR0	set	21
  1177  005F                     _GIE	set	95
  1178  005E                     _PEIE	set	94
  1179  0065                     _RA5	set	101
  1180  008D                     _RCIF	set	141
  1181  005D                     _TMR0IE	set	93
  1182  005A                     _TMR0IF	set	90
  1183  008C                     _TXIF	set	140
  1184  009D                     _ADCON0	set	157
  1185  009E                     _ADCON1	set	158
  1186  009C                     _ADRESH	set	156
  1187  009B                     _ADRESL	set	155
  1188  0095                     _OPTION_REGbits	set	149
  1189  0099                     _OSCCON	set	153
  1190  009A                     _OSCSTAT	set	154
  1191  0098                     _OSCTUNE	set	152
  1192  008C                     _TRISA	set	140
  1193  008E                     _TRISC	set	142
  1194  04E9                     _ADGO	set	1257
  1195  04A8                     _PS0	set	1192
  1196  04A9                     _PS1	set	1193
  1197  04AA                     _PS2	set	1194
  1198  04AB                     _PSA	set	1195
  1199  048D                     _RCIE	set	1165
  1200  04AD                     _TMR0CS	set	1197
  1201  048C                     _TXIE	set	1164
  1202  011D                     _APFCON	set	285
  1203  010C                     _LATA	set	268
  1204  010E                     _LATC	set	270
  1205  08EF                     _RXDTSEL	set	2287
  1206  08EA                     _TXCKSEL	set	2282
  1207  018C                     _ANSELA	set	396
  1208  018E                     _ANSELC	set	398
  1209  0199                     _RCREG	set	409
  1210  019C                     _SPBRGH	set	412
  1211  019B                     _SPBRGL	set	411
  1212  019A                     _TXREG	set	410
  1213  0CFB                     _BRG16	set	3323
  1214  0CF2                     _BRGH	set	3314
  1215  0CEC                     _CREN	set	3308
  1216  0CEF                     _SPEN	set	3311
  1217  0CF4                     _SYNC	set	3316
  1218  0CF5                     _TXEN	set	3317
  1219  020C                     _WPUA	set	524
  1220  020E                     _WPUC	set	526
  1221  039A                     _CLKRCON	set	922
  1222                           
  1223                           ; #config settings
  1224  0000                     
  1225                           	psect	cinit
  1226  0054                     start_initialization:	
  1227  0054                     __initialization:	
  1228                           
  1229                           ; Clear objects allocated to COMMON
  1230  0054  01F0               	clrf	__pbssCOMMON& (0+127)
  1231  0055  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1232  0056  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1233  0057  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1234  0058  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1235                           
  1236                           ; Clear objects allocated to BANK0
  1237  0059  3020               	movlw	low __pbssBANK0
  1238  005A  0084               	movwf	4
  1239  005B  3000               	movlw	high __pbssBANK0
  1240  005C  0085               	movwf	5
  1241  005D  3025               	movlw	37
  1242  005E  22F4               	fcall	clear_ram0
  1243  005F                     end_of_initialization:	
  1244                           ;End of C runtime variable initialization code
  1245                           
  1246  005F                     __end_of__initialization:	
  1247  005F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1248  0060  0020               	movlb	0
  1249  0061  2903               	ljmp	_main	;jump to C main() function
  1250                           
  1251                           	psect	bssCOMMON
  1252  0070                     __pbssCOMMON:	
  1253  0070                     _TIMER0_timeout:	
  1254  0070                     	ds	2
  1255  0072                     _USART_tx_flag:	
  1256  0072                     	ds	1
  1257  0073                     _USART_tx_index:	
  1258  0073                     	ds	1
  1259  0074                     _USART_tx_length:	
  1260  0074                     	ds	1
  1261                           
  1262                           	psect	bssBANK0
  1263  0020                     __pbssBANK0:	
  1264  0020                     _USART_rx_data:	
  1265  0020                     	ds	15
  1266  002F                     _USART_tx_data:	
  1267  002F                     	ds	15
  1268  003E                     _TIMER0_flag:	
  1269  003E                     	ds	1
  1270  003F                     _USART_rx_flag:	
  1271  003F                     	ds	1
  1272  0040                     _USART_rx_index:	
  1273  0040                     	ds	1
  1274  0041                     _mess_rec_size:	
  1275  0041                     	ds	1
  1276  0042                     _mess_rec:	
  1277  0042                     	ds	3
  1278                           
  1279                           	psect	clrtext
  1280  02F4                     clear_ram0:	
  1281                           ;	Called with FSR0 containing the base address, and
  1282                           ;	WREG with the size to clear
  1283                           
  1284  02F4  0064               	clrwdt	;clear the watchdog before getting into this loop
  1285  02F5                     clrloop0:	
  1286  02F5  0180               	clrf	0	;clear RAM location pointed to by FSR
  1287  02F6  3101               	addfsr 0,1
  1288  02F7  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1289  02F8  2AF5               	goto	clrloop0	;have we reached the end yet?
  1290  02F9  3400               	retlw	0	;all done for this memory range, return
  1291                           
  1292                           	psect	cstackCOMMON
  1293  0075                     __pcstackCOMMON:	
  1294  0075                     ?_OSCILLATOR_Initialize:	
  1295  0075                     ?_setup_TMR0:	
  1296                           ; 1 bytes @ 0x0
  1297                           
  1298  0075                     ?_start_TX_USART_ISR:	
  1299                           ; 1 bytes @ 0x0
  1300                           
  1301  0075                     ?_start_RX_USART_ISR:	
  1302                           ; 1 bytes @ 0x0
  1303                           
  1304  0075                     ?_start_RCM:	
  1305                           ; 1 bytes @ 0x0
  1306                           
  1307  0075                     ?_setup_ADC:	
  1308                           ; 1 bytes @ 0x0
  1309                           
  1310  0075                     ?_mess_handler:	
  1311                           ; 1 bytes @ 0x0
  1312                           
  1313  0075                     ?_stop_TMR0_ISR:	
  1314                           ; 1 bytes @ 0x0
  1315                           
  1316  0075                     ??_stop_TMR0_ISR:	
  1317                           ; 1 bytes @ 0x0
  1318                           
  1319  0075                     ?_start_TMR0_ISR:	
  1320                           ; 1 bytes @ 0x0
  1321                           
  1322  0075                     ??_start_TMR0_ISR:	
  1323                           ; 1 bytes @ 0x0
  1324                           
  1325  0075                     ?_config_ASIC:	
  1326                           ; 1 bytes @ 0x0
  1327                           
  1328  0075                     ?_read_ADC_channels:	
  1329                           ; 1 bytes @ 0x0
  1330                           
  1331  0075                     ?_measure_Impedance:	
  1332                           ; 1 bytes @ 0x0
  1333                           
  1334  0075                     ?_PIN_MANAGER_Initialize:	
  1335                           ; 1 bytes @ 0x0
  1336                           
  1337  0075                     ?_SYSTEM_Initialize:	
  1338                           ; 1 bytes @ 0x0
  1339                           
  1340  0075                     ?_main:	
  1341                           ; 1 bytes @ 0x0
  1342                           
  1343  0075                     ?_isr:	
  1344                           ; 1 bytes @ 0x0
  1345                           
  1346  0075                     ?i1_start_RX_USART_ISR:	
  1347                           ; 1 bytes @ 0x0
  1348                           
  1349  0075                     ??i1_start_RX_USART_ISR:	
  1350                           ; 1 bytes @ 0x0
  1351                           
  1352                           
  1353                           ; 1 bytes @ 0x0
  1354  0075                     	ds	2
  1355  0077                     start_TMR0_ISR@val:	
  1356                           
  1357                           ; 1 bytes @ 0x2
  1358  0077                     	ds	1
  1359  0078                     ??_isr:	
  1360                           
  1361                           ; 1 bytes @ 0x3
  1362  0078                     	ds	2
  1363                           
  1364                           	psect	cstackBANK0
  1365  0045                     __pcstackBANK0:	
  1366  0045                     ??_OSCILLATOR_Initialize:	
  1367  0045                     ??_setup_TMR0:	
  1368                           ; 1 bytes @ 0x0
  1369                           
  1370  0045                     ??_start_TX_USART_ISR:	
  1371                           ; 1 bytes @ 0x0
  1372                           
  1373  0045                     ??_start_RX_USART_ISR:	
  1374                           ; 1 bytes @ 0x0
  1375                           
  1376  0045                     ??_start_RCM:	
  1377                           ; 1 bytes @ 0x0
  1378                           
  1379  0045                     ??_setup_ADC:	
  1380                           ; 1 bytes @ 0x0
  1381                           
  1382  0045                     ??_PIN_MANAGER_Initialize:	
  1383                           ; 1 bytes @ 0x0
  1384                           
  1385  0045                     ??_SYSTEM_Initialize:	
  1386                           ; 1 bytes @ 0x0
  1387                           
  1388  0045                     ?_BIO_config:	
  1389                           ; 1 bytes @ 0x0
  1390                           
  1391  0045                     ?_lputs_ISR:	
  1392                           ; 1 bytes @ 0x0
  1393                           
  1394  0045                     ?_ADC_2:	
  1395                           ; 1 bytes @ 0x0
  1396                           
  1397  0045                     ?_ADC_4:	
  1398                           ; 2 bytes @ 0x0
  1399                           
  1400  0045                     ?_ADC_5:	
  1401                           ; 2 bytes @ 0x0
  1402                           
  1403  0045                     lputs_ISR@length:	
  1404                           ; 2 bytes @ 0x0
  1405                           
  1406  0045                     BIO_config@conf:	
  1407                           ; 1 bytes @ 0x0
  1408                           
  1409                           
  1410                           ; 2 bytes @ 0x0
  1411  0045                     	ds	1
  1412  0046                     ??_lputs_ISR:	
  1413                           
  1414                           ; 1 bytes @ 0x1
  1415  0046                     	ds	1
  1416  0047                     ??_ADC_2:	
  1417  0047                     ??_ADC_4:	
  1418                           ; 1 bytes @ 0x2
  1419                           
  1420  0047                     ??_ADC_5:	
  1421                           ; 1 bytes @ 0x2
  1422                           
  1423  0047                     ??_BIO_config:	
  1424                           ; 1 bytes @ 0x2
  1425                           
  1426                           
  1427                           ; 1 bytes @ 0x2
  1428  0047                     	ds	1
  1429  0048                     BIO_config@i:	
  1430  0048                     lputs_ISR@data:	
  1431                           ; 1 bytes @ 0x3
  1432                           
  1433                           
  1434                           ; 1 bytes @ 0x3
  1435  0048                     	ds	1
  1436  0049                     BIO_config@out:	
  1437  0049                     lputs_ISR@i:	
  1438                           ; 1 bytes @ 0x4
  1439                           
  1440  0049                     ADC_2@ADC_value:	
  1441                           ; 1 bytes @ 0x4
  1442                           
  1443  0049                     ADC_4@ADC_value:	
  1444                           ; 2 bytes @ 0x4
  1445                           
  1446  0049                     ADC_5@ADC_value:	
  1447                           ; 2 bytes @ 0x4
  1448                           
  1449                           
  1450                           ; 2 bytes @ 0x4
  1451  0049                     	ds	1
  1452  004A                     ??_config_ASIC:	
  1453                           
  1454                           ; 1 bytes @ 0x5
  1455  004A                     	ds	1
  1456  004B                     ??_read_ADC_channels:	
  1457  004B                     ??_measure_Impedance:	
  1458                           ; 1 bytes @ 0x6
  1459                           
  1460                           
  1461                           ; 1 bytes @ 0x6
  1462  004B                     	ds	1
  1463  004C                     read_ADC_channels@aux:	
  1464                           
  1465                           ; 7 bytes @ 0x7
  1466  004C                     	ds	1
  1467  004D                     config_ASIC@asic:	
  1468                           
  1469                           ; 2 bytes @ 0x8
  1470  004D                     	ds	1
  1471  004E                     measure_Impedance@aux:	
  1472                           
  1473                           ; 13 bytes @ 0x9
  1474  004E                     	ds	5
  1475  0053                     read_ADC_channels@value1:	
  1476                           
  1477                           ; 2 bytes @ 0xE
  1478  0053                     	ds	2
  1479  0055                     read_ADC_channels@value2:	
  1480                           
  1481                           ; 2 bytes @ 0x10
  1482  0055                     	ds	2
  1483  0057                     read_ADC_channels@value3:	
  1484                           
  1485                           ; 2 bytes @ 0x12
  1486  0057                     	ds	4
  1487  005B                     measure_Impedance@value1:	
  1488                           
  1489                           ; 2 bytes @ 0x16
  1490  005B                     	ds	2
  1491  005D                     measure_Impedance@value2:	
  1492                           
  1493                           ; 2 bytes @ 0x18
  1494  005D                     	ds	2
  1495  005F                     measure_Impedance@asic:	
  1496                           
  1497                           ; 2 bytes @ 0x1A
  1498  005F                     	ds	2
  1499  0061                     ??_mess_handler:	
  1500                           
  1501                           ; 1 bytes @ 0x1C
  1502  0061                     	ds	1
  1503  0062                     ??_main:	
  1504                           
  1505                           ; 1 bytes @ 0x1D
  1506  0062                     	ds	1
  1507  0063                     main@i:	
  1508                           
  1509                           ; 1 bytes @ 0x1E
  1510  0063                     	ds	1
  1511                           
  1512                           	psect	maintext
  1513  0103                     __pmaintext:	
  1514 ;;
  1515 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1516 ;;
  1517 ;; *************** function _main *****************
  1518 ;; Defined at:
  1519 ;;		line 17 in file "main.c"
  1520 ;; Parameters:    Size  Location     Type
  1521 ;;		None
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;  myVin           6    0        struct .
  1524 ;;  mybits          2    0        struct .
  1525 ;;  i               1   30[BANK0 ] unsigned char 
  1526 ;; Return value:  Size  Location     Type
  1527 ;;                  1    wreg      void 
  1528 ;; Registers used:
  1529 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1530 ;; Tracked objects:
  1531 ;;		On entry : B1F/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMMON   BANK0   BANK1
  1535 ;;      Params:         0       0       0
  1536 ;;      Locals:         0       1       0
  1537 ;;      Temps:          0       1       0
  1538 ;;      Totals:         0       2       0
  1539 ;;Total ram usage:        2 bytes
  1540 ;; Hardware stack levels required when called:    5
  1541 ;; This function calls:
  1542 ;;		_SYSTEM_Initialize
  1543 ;;		_mess_handler
  1544 ;;		_setup_ADC
  1545 ;;		_setup_TMR0
  1546 ;;		_start_RCM
  1547 ;;		_start_RX_USART_ISR
  1548 ;;		_start_TX_USART_ISR
  1549 ;; This function is called by:
  1550 ;;		Startup code after reset
  1551 ;; This function uses a non-reentrant model
  1552 ;;
  1553                           
  1554                           
  1555                           ;psect for function _main
  1556  0103                     _main:	
  1557                           
  1558                           ;main.c: 19: unsigned char i;
  1559                           ;main.c: 21: BIO3 mybits;
  1560                           ;main.c: 22: VIN myVin;
  1561                           ;main.c: 24: SYSTEM_Initialize();
  1562                           
  1563                           ;incstack = 0
  1564                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1565  0103  230A               	fcall	_SYSTEM_Initialize
  1566                           
  1567                           ;main.c: 25: setup_TMR0();
  1568  0104  22ED               	fcall	_setup_TMR0
  1569                           
  1570                           ;main.c: 26: start_TX_USART_ISR();
  1571  0105  22DE               	fcall	_start_TX_USART_ISR
  1572                           
  1573                           ;main.c: 27: start_RX_USART_ISR();
  1574  0106  22AC               	fcall	_start_RX_USART_ISR
  1575                           
  1576                           ;main.c: 28: start_RCM();
  1577  0107  2306               	fcall	_start_RCM
  1578                           
  1579                           ;main.c: 29: setup_ADC();
  1580  0108  22FA               	fcall	_setup_ADC
  1581                           
  1582                           ;main.c: 31: RA5 = 0;
  1583  0109  0020               	movlb	0	; select bank0
  1584  010A  128C               	bcf	12,5	;volatile
  1585                           
  1586                           ;main.c: 32: _delay((unsigned long)((250)*(500000/4000.0)));
  1587  010B  3029               	movlw	41
  1588  010C  0020               	movlb	0	; select bank0
  1589  010D  00E2               	movwf	??_main
  1590  010E  3094               	movlw	148
  1591  010F                     u817:	
  1592  010F  0B89               	decfsz	9,f
  1593  0110  290F               	goto	u817
  1594  0111  0BE2               	decfsz	??_main,f
  1595  0112  290F               	goto	u817
  1596  0113  0000               	nop
  1597                           
  1598                           ;main.c: 33: RA5 = 1;
  1599  0114  0020               	movlb	0	; select bank0
  1600  0115  168C               	bsf	12,5	;volatile
  1601                           
  1602                           ;main.c: 34: _delay((unsigned long)((250)*(500000/4000.0)));
  1603  0116  3029               	movlw	41
  1604  0117  0020               	movlb	0	; select bank0
  1605  0118  00E2               	movwf	??_main
  1606  0119  3094               	movlw	148
  1607  011A                     u827:	
  1608  011A  0B89               	decfsz	9,f
  1609  011B  291A               	goto	u827
  1610  011C  0BE2               	decfsz	??_main,f
  1611  011D  291A               	goto	u827
  1612  011E  0000               	nop
  1613  011F                     l2052:	
  1614                           ;main.c: 38: while(1) {
  1615                           
  1616                           
  1617                           ;main.c: 42: if (TIMER0_flag) {
  1618  011F  0020               	movlb	0	; select bank0
  1619  0120  083E               	movf	_TIMER0_flag,w	;volatile
  1620  0121  1903               	btfsc	3,2
  1621  0122  291F               	goto	l2052
  1622                           
  1623                           ;main.c: 43: TIMER0_flag = 0;
  1624  0123  01BE               	clrf	_TIMER0_flag	;volatile
  1625                           
  1626                           ;main.c: 45: if (USART_rx_index > 3) {
  1627  0124  3004               	movlw	4
  1628  0125  0240               	subwf	_USART_rx_index,w	;volatile
  1629  0126  1C03               	skipc
  1630  0127  292A               	goto	l2060
  1631                           
  1632                           ;main.c: 46: USART_rx_index = 0;
  1633  0128  01C0               	clrf	_USART_rx_index	;volatile
  1634                           
  1635                           ;main.c: 47: continue;
  1636  0129  291F               	goto	l2052
  1637  012A                     l2060:	
  1638                           
  1639                           ;main.c: 48: }
  1640                           ;main.c: 50: if(USART_rx_index == 0)
  1641  012A  0840               	movf	_USART_rx_index,w	;volatile
  1642  012B  1903               	btfsc	3,2
  1643                           
  1644                           ;main.c: 51: continue;
  1645  012C  291F               	goto	l2052
  1646                           
  1647                           ;main.c: 54: mess_rec_size = USART_rx_index;
  1648  012D  0840               	movf	_USART_rx_index,w	;volatile
  1649  012E  00E2               	movwf	??_main
  1650  012F  0862               	movf	??_main,w
  1651  0130  00C1               	movwf	_mess_rec_size	;volatile
  1652                           
  1653                           ;main.c: 56: for (i = 0; i < mess_rec_size; i++)
  1654  0131  01E3               	clrf	main@i
  1655  0132                     l2072:	
  1656  0132  0841               	movf	_mess_rec_size,w	;volatile
  1657  0133  0263               	subwf	main@i,w
  1658  0134  1803               	btfsc	3,0
  1659  0135  2947               	goto	l2074
  1660                           
  1661                           ;main.c: 57: mess_rec[i] = USART_rx_data[i];
  1662  0136  0863               	movf	main@i,w
  1663  0137  3E20               	addlw	(low (_USART_rx_data| 0))& (0+255)
  1664  0138  0086               	movwf	6
  1665  0139  0187               	clrf	7
  1666  013A  0801               	movf	1,w
  1667  013B  00E2               	movwf	??_main
  1668  013C  0863               	movf	main@i,w
  1669  013D  3E42               	addlw	(low (_mess_rec| 0))& (0+255)
  1670  013E  0086               	movwf	6
  1671  013F  0187               	clrf	7
  1672  0140  0862               	movf	??_main,w
  1673  0141  0081               	movwf	1
  1674  0142  3001               	movlw	1
  1675  0143  00E2               	movwf	??_main
  1676  0144  0862               	movf	??_main,w
  1677  0145  07E3               	addwf	main@i,f
  1678  0146  2932               	goto	l2072
  1679  0147                     l2074:	
  1680                           
  1681                           ;main.c: 60: mess_handler();
  1682  0147  2274               	fcall	_mess_handler
  1683  0148  291F               	goto	l2052
  1684  0149                     __end_of_main:	
  1685                           
  1686                           	psect	text1
  1687  02DE                     __ptext1:	
  1688 ;; *************** function _start_TX_USART_ISR *****************
  1689 ;; Defined at:
  1690 ;;		line 100 in file "USART1823.c"
  1691 ;; Parameters:    Size  Location     Type
  1692 ;;		None
  1693 ;; Auto vars:     Size  Location     Type
  1694 ;;		None
  1695 ;; Return value:  Size  Location     Type
  1696 ;;                  1    wreg      void 
  1697 ;; Registers used:
  1698 ;;		wreg, status,2
  1699 ;; Tracked objects:
  1700 ;;		On entry : 0/0
  1701 ;;		On exit  : 0/0
  1702 ;;		Unchanged: 0/0
  1703 ;; Data sizes:     COMMON   BANK0   BANK1
  1704 ;;      Params:         0       0       0
  1705 ;;      Locals:         0       0       0
  1706 ;;      Temps:          0       0       0
  1707 ;;      Totals:         0       0       0
  1708 ;;Total ram usage:        0 bytes
  1709 ;; Hardware stack levels used:    1
  1710 ;; Hardware stack levels required when called:    2
  1711 ;; This function calls:
  1712 ;;		Nothing
  1713 ;; This function is called by:
  1714 ;;		_main
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718                           
  1719                           ;psect for function _start_TX_USART_ISR
  1720  02DE                     _start_TX_USART_ISR:	
  1721                           
  1722                           ;USART1823.c: 102: { BRGH = 1; BRG16 = 1; SPBRGH = 0; SPBRGL = 12; };
  1723                           
  1724                           ;incstack = 0
  1725                           ; Regs used in _start_TX_USART_ISR: [wreg+status,2]
  1726  02DE  0023               	movlb	3	; select bank3
  1727  02DF  151E               	bsf	30,2	;volatile
  1728  02E0  159F               	bsf	31,3	;volatile
  1729  02E1  019C               	clrf	28	;volatile
  1730  02E2  300C               	movlw	12
  1731  02E3  009B               	movwf	27	;volatile
  1732                           
  1733                           ;USART1823.c: 103: SYNC = 0;
  1734  02E4  121E               	bcf	30,4	;volatile
  1735                           
  1736                           ;USART1823.c: 104: SPEN = 1;
  1737  02E5  179D               	bsf	29,7	;volatile
  1738                           
  1739                           ;USART1823.c: 105: TXEN = 1;
  1740  02E6  169E               	bsf	30,5	;volatile
  1741                           
  1742                           ;USART1823.c: 107: USART_tx_flag = 0;
  1743  02E7  01F2               	clrf	_USART_tx_flag	;volatile
  1744                           
  1745                           ;USART1823.c: 108: USART_tx_index = 0;
  1746  02E8  01F3               	clrf	_USART_tx_index	;volatile
  1747                           
  1748                           ;USART1823.c: 109: USART_tx_length = 0;
  1749  02E9  01F4               	clrf	_USART_tx_length	;volatile
  1750                           
  1751                           ;USART1823.c: 112: PEIE = 1;
  1752  02EA  170B               	bsf	11,6	;volatile
  1753                           
  1754                           ;USART1823.c: 113: GIE = 1;
  1755  02EB  178B               	bsf	11,7	;volatile
  1756  02EC  0008               	return
  1757  02ED                     __end_of_start_TX_USART_ISR:	
  1758                           
  1759                           	psect	text2
  1760  02AC                     __ptext2:	
  1761 ;; *************** function _start_RX_USART_ISR *****************
  1762 ;; Defined at:
  1763 ;;		line 82 in file "USART1823.c"
  1764 ;; Parameters:    Size  Location     Type
  1765 ;;		None
  1766 ;; Auto vars:     Size  Location     Type
  1767 ;;		None
  1768 ;; Return value:  Size  Location     Type
  1769 ;;                  1    wreg      void 
  1770 ;; Registers used:
  1771 ;;		wreg, status,2
  1772 ;; Tracked objects:
  1773 ;;		On entry : 0/0
  1774 ;;		On exit  : 0/0
  1775 ;;		Unchanged: 0/0
  1776 ;; Data sizes:     COMMON   BANK0   BANK1
  1777 ;;      Params:         0       0       0
  1778 ;;      Locals:         0       0       0
  1779 ;;      Temps:          0       0       0
  1780 ;;      Totals:         0       0       0
  1781 ;;Total ram usage:        0 bytes
  1782 ;; Hardware stack levels used:    1
  1783 ;; Hardware stack levels required when called:    2
  1784 ;; This function calls:
  1785 ;;		Nothing
  1786 ;; This function is called by:
  1787 ;;		_main
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790                           
  1791                           
  1792                           ;psect for function _start_RX_USART_ISR
  1793  02AC                     _start_RX_USART_ISR:	
  1794                           
  1795                           ;USART1823.c: 85: { BRGH = 1; BRG16 = 1; SPBRGH = 0; SPBRGL = 12; };
  1796                           
  1797                           ;incstack = 0
  1798                           ; Regs used in _start_RX_USART_ISR: [wreg+status,2]
  1799  02AC  0023               	movlb	3	; select bank3
  1800  02AD  151E               	bsf	30,2	;volatile
  1801  02AE  159F               	bsf	31,3	;volatile
  1802  02AF  019C               	clrf	28	;volatile
  1803  02B0  300C               	movlw	12
  1804  02B1  009B               	movwf	27	;volatile
  1805                           
  1806                           ;USART1823.c: 87: SYNC = 0;
  1807  02B2  121E               	bcf	30,4	;volatile
  1808                           
  1809                           ;USART1823.c: 88: SPEN = 1;
  1810  02B3  179D               	bsf	29,7	;volatile
  1811                           
  1812                           ;USART1823.c: 89: CREN = 1;
  1813  02B4  161D               	bsf	29,4	;volatile
  1814                           
  1815                           ;USART1823.c: 91: USART_rx_flag = 0;
  1816  02B5  0020               	movlb	0	; select bank0
  1817  02B6  01BF               	clrf	_USART_rx_flag	;volatile
  1818                           
  1819                           ;USART1823.c: 92: USART_rx_index = 0;
  1820  02B7  01C0               	clrf	_USART_rx_index	;volatile
  1821                           
  1822                           ;USART1823.c: 94: RCIE = 1;
  1823  02B8  0021               	movlb	1	; select bank1
  1824  02B9  1691               	bsf	17,5	;volatile
  1825                           
  1826                           ;USART1823.c: 95: PEIE = 1;
  1827  02BA  170B               	bsf	11,6	;volatile
  1828                           
  1829                           ;USART1823.c: 96: GIE = 1;
  1830  02BB  178B               	bsf	11,7	;volatile
  1831  02BC  0008               	return
  1832  02BD                     __end_of_start_RX_USART_ISR:	
  1833                           
  1834                           	psect	text3
  1835  0306                     __ptext3:	
  1836 ;; *************** function _start_RCM *****************
  1837 ;; Defined at:
  1838 ;;		line 4 in file "RCM1823.c"
  1839 ;; Parameters:    Size  Location     Type
  1840 ;;		None
  1841 ;; Auto vars:     Size  Location     Type
  1842 ;;		None
  1843 ;; Return value:  Size  Location     Type
  1844 ;;                  1    wreg      void 
  1845 ;; Registers used:
  1846 ;;		wreg
  1847 ;; Tracked objects:
  1848 ;;		On entry : 0/0
  1849 ;;		On exit  : 0/0
  1850 ;;		Unchanged: 0/0
  1851 ;; Data sizes:     COMMON   BANK0   BANK1
  1852 ;;      Params:         0       0       0
  1853 ;;      Locals:         0       0       0
  1854 ;;      Temps:          0       0       0
  1855 ;;      Totals:         0       0       0
  1856 ;;Total ram usage:        0 bytes
  1857 ;; Hardware stack levels used:    1
  1858 ;; Hardware stack levels required when called:    2
  1859 ;; This function calls:
  1860 ;;		Nothing
  1861 ;; This function is called by:
  1862 ;;		_main
  1863 ;; This function uses a non-reentrant model
  1864 ;;
  1865                           
  1866                           
  1867                           ;psect for function _start_RCM
  1868  0306                     _start_RCM:	
  1869                           
  1870                           ;RCM1823.c: 6: CLKRCON = 0b11010000;
  1871                           
  1872                           ;incstack = 0
  1873                           ; Regs used in _start_RCM: [wreg]
  1874  0306  30D0               	movlw	208
  1875  0307  0027               	movlb	7	; select bank7
  1876  0308  009A               	movwf	26	;volatile
  1877  0309  0008               	return
  1878  030A                     __end_of_start_RCM:	
  1879                           
  1880                           	psect	text4
  1881  02ED                     __ptext4:	
  1882 ;; *************** function _setup_TMR0 *****************
  1883 ;; Defined at:
  1884 ;;		line 10 in file "TMR0.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;		None
  1887 ;; Auto vars:     Size  Location     Type
  1888 ;;		None
  1889 ;; Return value:  Size  Location     Type
  1890 ;;                  1    wreg      void 
  1891 ;; Registers used:
  1892 ;;		None
  1893 ;; Tracked objects:
  1894 ;;		On entry : 0/0
  1895 ;;		On exit  : 0/0
  1896 ;;		Unchanged: 0/0
  1897 ;; Data sizes:     COMMON   BANK0   BANK1
  1898 ;;      Params:         0       0       0
  1899 ;;      Locals:         0       0       0
  1900 ;;      Temps:          0       0       0
  1901 ;;      Totals:         0       0       0
  1902 ;;Total ram usage:        0 bytes
  1903 ;; Hardware stack levels used:    1
  1904 ;; Hardware stack levels required when called:    2
  1905 ;; This function calls:
  1906 ;;		Nothing
  1907 ;; This function is called by:
  1908 ;;		_main
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912                           
  1913                           ;psect for function _setup_TMR0
  1914  02ED                     _setup_TMR0:	
  1915                           
  1916                           ;TMR0.c: 13: PS2 = 0; PS1 = 1; PS0 = 0;
  1917                           
  1918                           ;incstack = 0
  1919                           ; Regs used in _setup_TMR0: []
  1920  02ED  0021               	movlb	1	; select bank1
  1921  02EE  1115               	bcf	21,2	;volatile
  1922  02EF  1495               	bsf	21,1	;volatile
  1923  02F0  1015               	bcf	21,0	;volatile
  1924                           
  1925                           ;TMR0.c: 16: PSA = 0;
  1926  02F1  1195               	bcf	21,3	;volatile
  1927                           
  1928                           ;TMR0.c: 18: TMR0CS = 0;
  1929  02F2  1295               	bcf	21,5	;volatile
  1930  02F3  0008               	return
  1931  02F4                     __end_of_setup_TMR0:	
  1932                           
  1933                           	psect	text5
  1934  02FA                     __ptext5:	
  1935 ;; *************** function _setup_ADC *****************
  1936 ;; Defined at:
  1937 ;;		line 3 in file "ADC1823.c"
  1938 ;; Parameters:    Size  Location     Type
  1939 ;;		None
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;		None
  1942 ;; Return value:  Size  Location     Type
  1943 ;;                  1    wreg      void 
  1944 ;; Registers used:
  1945 ;;		wreg
  1946 ;; Tracked objects:
  1947 ;;		On entry : 0/0
  1948 ;;		On exit  : 0/0
  1949 ;;		Unchanged: 0/0
  1950 ;; Data sizes:     COMMON   BANK0   BANK1
  1951 ;;      Params:         0       0       0
  1952 ;;      Locals:         0       0       0
  1953 ;;      Temps:          0       0       0
  1954 ;;      Totals:         0       0       0
  1955 ;;Total ram usage:        0 bytes
  1956 ;; Hardware stack levels used:    1
  1957 ;; Hardware stack levels required when called:    2
  1958 ;; This function calls:
  1959 ;;		Nothing
  1960 ;; This function is called by:
  1961 ;;		_main
  1962 ;; This function uses a non-reentrant model
  1963 ;;
  1964                           
  1965                           
  1966                           ;psect for function _setup_ADC
  1967  02FA                     _setup_ADC:	
  1968                           
  1969                           ;ADC1823.c: 20: ADCON1 = 0b11110000;
  1970                           
  1971                           ;incstack = 0
  1972                           ; Regs used in _setup_ADC: [wreg]
  1973  02FA  30F0               	movlw	240
  1974  02FB  0021               	movlb	1	; select bank1
  1975  02FC  009E               	movwf	30	;volatile
  1976                           
  1977                           ;ADC1823.c: 21: { ADCON0 = 0b00100100;};
  1978  02FD  3024               	movlw	36
  1979  02FE  009D               	movwf	29	;volatile
  1980  02FF  0008               	return
  1981  0300                     __end_of_setup_ADC:	
  1982                           
  1983                           	psect	text6
  1984  0274                     __ptext6:	
  1985 ;; *************** function _mess_handler *****************
  1986 ;; Defined at:
  1987 ;;		line 11 in file "comm.c"
  1988 ;; Parameters:    Size  Location     Type
  1989 ;;		None
  1990 ;; Auto vars:     Size  Location     Type
  1991 ;;		None
  1992 ;; Return value:  Size  Location     Type
  1993 ;;                  1    wreg      void 
  1994 ;; Registers used:
  1995 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1996 ;; Tracked objects:
  1997 ;;		On entry : 0/0
  1998 ;;		On exit  : 0/0
  1999 ;;		Unchanged: 0/0
  2000 ;; Data sizes:     COMMON   BANK0   BANK1
  2001 ;;      Params:         0       0       0
  2002 ;;      Locals:         0       0       0
  2003 ;;      Temps:          0       1       0
  2004 ;;      Totals:         0       1       0
  2005 ;;Total ram usage:        1 bytes
  2006 ;; Hardware stack levels used:    1
  2007 ;; Hardware stack levels required when called:    4
  2008 ;; This function calls:
  2009 ;;		_config_ASIC
  2010 ;;		_lputs_ISR
  2011 ;;		_measure_Impedance
  2012 ;;		_read_ADC_channels
  2013 ;; This function is called by:
  2014 ;;		_main
  2015 ;; This function uses a non-reentrant model
  2016 ;;
  2017                           
  2018                           
  2019                           ;psect for function _mess_handler
  2020  0274                     _mess_handler:	
  2021                           
  2022                           ;comm.c: 16: switch (mess_rec[0]) {
  2023                           
  2024                           ;incstack = 0
  2025                           ; Regs used in _mess_handler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2026  0274  2A83               	goto	l2034
  2027  0275                     l2024:	
  2028                           ;comm.c: 17: case 't':
  2029                           
  2030                           
  2031                           ;comm.c: 18: lputs_ISR(mess_rec,mess_rec_size);
  2032  0275  0020               	movlb	0	; select bank0
  2033  0276  0841               	movf	_mess_rec_size,w	;volatile
  2034  0277  00E1               	movwf	??_mess_handler
  2035  0278  0861               	movf	??_mess_handler,w
  2036  0279  00C5               	movwf	lputs_ISR@length
  2037  027A  3042               	movlw	(low (_mess_rec| 0))& (0+255)
  2038  027B  21C1               	fcall	_lputs_ISR
  2039                           
  2040                           ;comm.c: 19: break;
  2041  027C  0008               	return
  2042  027D                     l2026:	
  2043                           ;comm.c: 21: case 'c':
  2044                           
  2045                           
  2046                           ;comm.c: 22: config_ASIC();
  2047  027D  2253               	fcall	_config_ASIC
  2048                           
  2049                           ;comm.c: 23: break;
  2050  027E  0008               	return
  2051  027F                     l2028:	
  2052                           ;comm.c: 25: case 'm':
  2053                           
  2054                           
  2055                           ;comm.c: 26: read_ADC_channels();
  2056  027F  2188               	fcall	_read_ADC_channels
  2057                           
  2058                           ;comm.c: 27: break;
  2059  0280  0008               	return
  2060  0281                     l2030:	
  2061                           ;comm.c: 29: case 'z':
  2062                           
  2063                           
  2064                           ;comm.c: 30: measure_Impedance();
  2065  0281  2062               	fcall	_measure_Impedance
  2066                           
  2067                           ;comm.c: 35: }
  2068                           
  2069                           ;comm.c: 34: break;
  2070                           
  2071                           ;comm.c: 33: default:
  2072                           
  2073                           ;comm.c: 31: break;
  2074  0282  0008               	return
  2075  0283                     l2034:	
  2076  0283  0020               	movlb	0	; select bank0
  2077  0284  0842               	movf	_mess_rec,w	;volatile
  2078                           
  2079                           ; Switch size 1, requested type "space"
  2080                           ; Number of cases is 4, Range of values is 99 to 122
  2081                           ; switch strategies available:
  2082                           ; Name         Instructions Cycles
  2083                           ; simple_byte           13     7 (average)
  2084                           ; direct_byte           57     9 (fixed)
  2085                           ; jumptable            263     9 (fixed)
  2086                           ;	Chosen strategy is simple_byte
  2087  0285  3A63               	xorlw	99	; case 99
  2088  0286  1903               	skipnz
  2089  0287  2A7D               	goto	l2026
  2090  0288  3A0E               	xorlw	14	; case 109
  2091  0289  1903               	skipnz
  2092  028A  2A7F               	goto	l2028
  2093  028B  3A19               	xorlw	25	; case 116
  2094  028C  1903               	skipnz
  2095  028D  2A75               	goto	l2024
  2096  028E  3A0E               	xorlw	14	; case 122
  2097  028F  1903               	skipnz
  2098  0290  2A81               	goto	l2030
  2099  0291  2A92               	goto	l320
  2100  0292                     l320:	
  2101  0292  0008               	return
  2102  0293                     __end_of_mess_handler:	
  2103                           
  2104                           	psect	text7
  2105  0188                     __ptext7:	
  2106 ;; *************** function _read_ADC_channels *****************
  2107 ;; Defined at:
  2108 ;;		line 51 in file "comm.c"
  2109 ;; Parameters:    Size  Location     Type
  2110 ;;		None
  2111 ;; Auto vars:     Size  Location     Type
  2112 ;;  aux             7    7[BANK0 ] unsigned char [7]
  2113 ;;  value3          2   18[BANK0 ] unsigned short 
  2114 ;;  value2          2   16[BANK0 ] unsigned short 
  2115 ;;  value1          2   14[BANK0 ] unsigned short 
  2116 ;; Return value:  Size  Location     Type
  2117 ;;                  1    wreg      void 
  2118 ;; Registers used:
  2119 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2120 ;; Tracked objects:
  2121 ;;		On entry : 0/0
  2122 ;;		On exit  : 0/0
  2123 ;;		Unchanged: 0/0
  2124 ;; Data sizes:     COMMON   BANK0   BANK1
  2125 ;;      Params:         0       0       0
  2126 ;;      Locals:         0      13       0
  2127 ;;      Temps:          0       1       0
  2128 ;;      Totals:         0      14       0
  2129 ;;Total ram usage:       14 bytes
  2130 ;; Hardware stack levels used:    1
  2131 ;; Hardware stack levels required when called:    3
  2132 ;; This function calls:
  2133 ;;		_ADC_2
  2134 ;;		_ADC_4
  2135 ;;		_ADC_5
  2136 ;;		_lputs_ISR
  2137 ;; This function is called by:
  2138 ;;		_mess_handler
  2139 ;; This function uses a non-reentrant model
  2140 ;;
  2141                           
  2142                           
  2143                           ;psect for function _read_ADC_channels
  2144  0188                     _read_ADC_channels:	
  2145                           
  2146                           ;comm.c: 53: unsigned char aux[7];
  2147                           ;comm.c: 54: unsigned short value1,value2,value3;
  2148                           ;comm.c: 57: value1 = ADC_2();
  2149                           
  2150                           ;incstack = 0
  2151                           ; Regs used in _read_ADC_channels: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2152  0188  2230               	fcall	_ADC_2
  2153  0189  0020               	movlb	0	; select bank0
  2154  018A  0846               	movf	?_ADC_2+1,w
  2155  018B  00D4               	movwf	read_ADC_channels@value1+1
  2156  018C  0845               	movf	?_ADC_2,w
  2157  018D  00D3               	movwf	read_ADC_channels@value1
  2158                           
  2159                           ;comm.c: 59: value2 = ADC_4();
  2160  018E  220D               	fcall	_ADC_4
  2161  018F  0020               	movlb	0	; select bank0
  2162  0190  0846               	movf	?_ADC_4+1,w
  2163  0191  00D6               	movwf	read_ADC_channels@value2+1
  2164  0192  0845               	movf	?_ADC_4,w
  2165  0193  00D5               	movwf	read_ADC_channels@value2
  2166                           
  2167                           ;comm.c: 61: value3 = ADC_5();
  2168  0194  21EA               	fcall	_ADC_5
  2169  0195  0020               	movlb	0	; select bank0
  2170  0196  0846               	movf	?_ADC_5+1,w
  2171  0197  00D8               	movwf	read_ADC_channels@value3+1
  2172  0198  0845               	movf	?_ADC_5,w
  2173  0199  00D7               	movwf	read_ADC_channels@value3
  2174                           
  2175                           ;comm.c: 62: { ADCON0 = 0b00100100;};
  2176  019A  3024               	movlw	36
  2177  019B  0021               	movlb	1	; select bank1
  2178  019C  009D               	movwf	29	;volatile
  2179                           
  2180                           ;comm.c: 64: aux[0] = 'm';
  2181  019D  306D               	movlw	109
  2182  019E  0020               	movlb	0	; select bank0
  2183  019F  00CB               	movwf	??_read_ADC_channels
  2184  01A0  084B               	movf	??_read_ADC_channels,w
  2185  01A1  00CC               	movwf	read_ADC_channels@aux
  2186                           
  2187                           ;comm.c: 65: aux[1] = (unsigned char)(value1 & 0xff);
  2188  01A2  0853               	movf	read_ADC_channels@value1,w
  2189  01A3  00CB               	movwf	??_read_ADC_channels
  2190  01A4  084B               	movf	??_read_ADC_channels,w
  2191  01A5  00CD               	movwf	read_ADC_channels@aux+1
  2192                           
  2193                           ;comm.c: 66: aux[2] = (unsigned char)((value1 >> 8) & 0xff);
  2194  01A6  0854               	movf	read_ADC_channels@value1+1,w
  2195  01A7  00CB               	movwf	??_read_ADC_channels
  2196  01A8  084B               	movf	??_read_ADC_channels,w
  2197  01A9  00CE               	movwf	read_ADC_channels@aux+2
  2198                           
  2199                           ;comm.c: 67: aux[3] = (unsigned char)(value2 & 0xff);
  2200  01AA  0855               	movf	read_ADC_channels@value2,w
  2201  01AB  00CB               	movwf	??_read_ADC_channels
  2202  01AC  084B               	movf	??_read_ADC_channels,w
  2203  01AD  00CF               	movwf	read_ADC_channels@aux+3
  2204                           
  2205                           ;comm.c: 68: aux[4] = (unsigned char)((value2 >> 8) & 0xff);
  2206  01AE  0856               	movf	read_ADC_channels@value2+1,w
  2207  01AF  00CB               	movwf	??_read_ADC_channels
  2208  01B0  084B               	movf	??_read_ADC_channels,w
  2209  01B1  00D0               	movwf	read_ADC_channels@aux+4
  2210                           
  2211                           ;comm.c: 69: aux[5] = (unsigned char)(value3 & 0xff);
  2212  01B2  0857               	movf	read_ADC_channels@value3,w
  2213  01B3  00CB               	movwf	??_read_ADC_channels
  2214  01B4  084B               	movf	??_read_ADC_channels,w
  2215  01B5  00D1               	movwf	read_ADC_channels@aux+5
  2216                           
  2217                           ;comm.c: 70: aux[6] = (unsigned char)((value3 >> 8) & 0xff);
  2218  01B6  0858               	movf	read_ADC_channels@value3+1,w
  2219  01B7  00CB               	movwf	??_read_ADC_channels
  2220  01B8  084B               	movf	??_read_ADC_channels,w
  2221  01B9  00D2               	movwf	read_ADC_channels@aux+6
  2222                           
  2223                           ;comm.c: 72: lputs_ISR(aux,7);
  2224  01BA  3007               	movlw	7
  2225  01BB  00CB               	movwf	??_read_ADC_channels
  2226  01BC  084B               	movf	??_read_ADC_channels,w
  2227  01BD  00C5               	movwf	lputs_ISR@length
  2228  01BE  304C               	movlw	(low (read_ADC_channels@aux| 0))& (0+255)
  2229  01BF  21C1               	fcall	_lputs_ISR
  2230  01C0  0008               	return
  2231  01C1                     __end_of_read_ADC_channels:	
  2232                           
  2233                           	psect	text8
  2234  01EA                     __ptext8:	
  2235 ;; *************** function _ADC_5 *****************
  2236 ;; Defined at:
  2237 ;;		line 48 in file "ADC1823.c"
  2238 ;; Parameters:    Size  Location     Type
  2239 ;;		None
  2240 ;; Auto vars:     Size  Location     Type
  2241 ;;  ADC_value       2    4[BANK0 ] unsigned short 
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  2    0[BANK0 ] unsigned short 
  2244 ;; Registers used:
  2245 ;;		wreg
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMMON   BANK0   BANK1
  2251 ;;      Params:         0       2       0
  2252 ;;      Locals:         0       2       0
  2253 ;;      Temps:          0       2       0
  2254 ;;      Totals:         0       6       0
  2255 ;;Total ram usage:        6 bytes
  2256 ;; Hardware stack levels used:    1
  2257 ;; Hardware stack levels required when called:    2
  2258 ;; This function calls:
  2259 ;;		Nothing
  2260 ;; This function is called by:
  2261 ;;		_read_ADC_channels
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265                           
  2266                           ;psect for function _ADC_5
  2267  01EA                     _ADC_5:	
  2268                           
  2269                           ;ADC1823.c: 50: unsigned short ADC_value;
  2270                           ;ADC1823.c: 52: { ADCON0 = 0b00010101;};
  2271                           
  2272                           ;incstack = 0
  2273                           ; Regs used in _ADC_5: [wreg]
  2274  01EA  3015               	movlw	21
  2275  01EB  0021               	movlb	1	; select bank1
  2276  01EC  009D               	movwf	29	;volatile
  2277                           
  2278                           ;ADC1823.c: 53: __nop();
  2279  01ED  0000               	nop
  2280                           
  2281                           ;ADC1823.c: 54: { ADGO = 1; while (ADGO); ADC_value = ADRESH; ADC_value <<= 8; ADC_value
      +                           |= ADRESL;};
  2282  01EE  0021               	movlb	1	; select bank1
  2283  01EF  149D               	bsf	29,1	;volatile
  2284  01F0                     l359:	
  2285  01F0  189D               	btfsc	29,1	;volatile
  2286  01F1  29F0               	goto	l359
  2287  01F2  081C               	movf	28,w	;volatile
  2288  01F3  0020               	movlb	0	; select bank0
  2289  01F4  00C7               	movwf	??_ADC_5
  2290  01F5  01C8               	clrf	??_ADC_5+1
  2291  01F6  0847               	movf	??_ADC_5,w
  2292  01F7  00C9               	movwf	ADC_5@ADC_value
  2293  01F8  0848               	movf	??_ADC_5+1,w
  2294  01F9  00CA               	movwf	ADC_5@ADC_value+1
  2295  01FA  3008               	movlw	8
  2296  01FB                     u765:	
  2297  01FB  35C9               	lslf	ADC_5@ADC_value,f
  2298  01FC  0DCA               	rlf	ADC_5@ADC_value+1,f
  2299  01FD  0B89               	decfsz	9,f
  2300  01FE  29FB               	goto	u765
  2301  01FF  0021               	movlb	1	; select bank1
  2302  0200  081B               	movf	27,w	;volatile
  2303  0201  0020               	movlb	0	; select bank0
  2304  0202  00C7               	movwf	??_ADC_5
  2305  0203  01C8               	clrf	??_ADC_5+1
  2306  0204  0847               	movf	??_ADC_5,w
  2307  0205  04C9               	iorwf	ADC_5@ADC_value,f
  2308  0206  0848               	movf	??_ADC_5+1,w
  2309  0207  04CA               	iorwf	ADC_5@ADC_value+1,f
  2310                           
  2311                           ;ADC1823.c: 55: return ADC_value;
  2312  0208  084A               	movf	ADC_5@ADC_value+1,w
  2313  0209  00C6               	movwf	?_ADC_5+1
  2314  020A  0849               	movf	ADC_5@ADC_value,w
  2315  020B  00C5               	movwf	?_ADC_5
  2316  020C  0008               	return
  2317  020D                     __end_of_ADC_5:	
  2318                           
  2319                           	psect	text9
  2320  0062                     __ptext9:	
  2321 ;; *************** function _measure_Impedance *****************
  2322 ;; Defined at:
  2323 ;;		line 75 in file "comm.c"
  2324 ;; Parameters:    Size  Location     Type
  2325 ;;		None
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;  aux            13    9[BANK0 ] unsigned char [13]
  2328 ;;  asic            2   26[BANK0 ] struct .
  2329 ;;  value2          2   24[BANK0 ] unsigned short 
  2330 ;;  value1          2   22[BANK0 ] unsigned short 
  2331 ;;  value3          2    0        unsigned short 
  2332 ;; Return value:  Size  Location     Type
  2333 ;;                  1    wreg      void 
  2334 ;; Registers used:
  2335 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2336 ;; Tracked objects:
  2337 ;;		On entry : 0/0
  2338 ;;		On exit  : 0/0
  2339 ;;		Unchanged: 0/0
  2340 ;; Data sizes:     COMMON   BANK0   BANK1
  2341 ;;      Params:         0       0       0
  2342 ;;      Locals:         0      19       0
  2343 ;;      Temps:          0       3       0
  2344 ;;      Totals:         0      22       0
  2345 ;;Total ram usage:       22 bytes
  2346 ;; Hardware stack levels used:    1
  2347 ;; Hardware stack levels required when called:    3
  2348 ;; This function calls:
  2349 ;;		_ADC_2
  2350 ;;		_ADC_4
  2351 ;;		_BIO_config
  2352 ;;		_lputs_ISR
  2353 ;; This function is called by:
  2354 ;;		_mess_handler
  2355 ;; This function uses a non-reentrant model
  2356 ;;
  2357                           
  2358                           
  2359                           ;psect for function _measure_Impedance
  2360  0062                     _measure_Impedance:	
  2361                           
  2362                           ;comm.c: 77: unsigned char aux[13];
  2363                           ;comm.c: 78: unsigned short value1,value2,value3;
  2364                           ;comm.c: 79: BIO3 asic;
  2365                           ;comm.c: 81: aux[0] = 'z';
  2366                           
  2367                           ;incstack = 0
  2368                           ; Regs used in _measure_Impedance: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2369  0062  307A               	movlw	122
  2370  0063  0020               	movlb	0	; select bank0
  2371  0064  00CB               	movwf	??_measure_Impedance
  2372  0065  084B               	movf	??_measure_Impedance,w
  2373  0066  00CE               	movwf	measure_Impedance@aux
  2374                           
  2375                           ;comm.c: 83: asic.data = 0x0000;
  2376  0067  01DF               	clrf	measure_Impedance@asic
  2377  0068  01E0               	clrf	measure_Impedance@asic+1
  2378                           
  2379                           ;comm.c: 84: asic.data |= (unsigned short)(mess_rec[2]<<8);
  2380  0069  0844               	movf	_mess_rec+2,w	;volatile
  2381  006A  00CB               	movwf	??_measure_Impedance
  2382  006B  01CC               	clrf	??_measure_Impedance+1
  2383  006C  084B               	movf	??_measure_Impedance,w
  2384  006D  00CC               	movwf	??_measure_Impedance+1
  2385  006E  01CB               	clrf	??_measure_Impedance
  2386  006F  084B               	movf	??_measure_Impedance,w
  2387  0070  04DF               	iorwf	measure_Impedance@asic,f
  2388  0071  084C               	movf	??_measure_Impedance+1,w
  2389  0072  04E0               	iorwf	measure_Impedance@asic+1,f
  2390                           
  2391                           ;comm.c: 85: asic.data |= (unsigned short)(mess_rec[1]);
  2392  0073  0843               	movf	_mess_rec+1,w	;volatile
  2393  0074  00CB               	movwf	??_measure_Impedance
  2394  0075  01CC               	clrf	??_measure_Impedance+1
  2395  0076  084B               	movf	??_measure_Impedance,w
  2396  0077  04DF               	iorwf	measure_Impedance@asic,f
  2397  0078  084C               	movf	??_measure_Impedance+1,w
  2398  0079  04E0               	iorwf	measure_Impedance@asic+1,f
  2399                           
  2400                           ;comm.c: 88: asic.data_bits.CE = 0;
  2401  007A  135F               	bcf	measure_Impedance@asic,6
  2402                           
  2403                           ;comm.c: 89: BIO_config(asic);
  2404  007B  0860               	movf	measure_Impedance@asic+1,w
  2405  007C  00C6               	movwf	BIO_config@conf+1
  2406  007D  085F               	movf	measure_Impedance@asic,w
  2407  007E  00C5               	movwf	BIO_config@conf
  2408  007F  2149               	fcall	_BIO_config
  2409                           
  2410                           ;comm.c: 90: _delay((unsigned long)((60)*(500000/4000.0)));
  2411  0080  300A               	movlw	10
  2412  0081  0020               	movlb	0	; select bank0
  2413  0082  00CB               	movwf	??_measure_Impedance
  2414  0083  30BC               	movlw	188
  2415  0084                     u837:	
  2416  0084  0B89               	decfsz	9,f
  2417  0085  2884               	goto	u837
  2418  0086  0BCB               	decfsz	??_measure_Impedance,f
  2419  0087  2884               	goto	u837
  2420  0088  0000               	nop
  2421                           
  2422                           ;comm.c: 92: value1 = ADC_2();
  2423  0089  2230               	fcall	_ADC_2
  2424  008A  0020               	movlb	0	; select bank0
  2425  008B  0846               	movf	?_ADC_2+1,w
  2426  008C  00DC               	movwf	measure_Impedance@value1+1
  2427  008D  0845               	movf	?_ADC_2,w
  2428  008E  00DB               	movwf	measure_Impedance@value1
  2429                           
  2430                           ;comm.c: 93: value2 = ADC_4();
  2431  008F  220D               	fcall	_ADC_4
  2432  0090  0020               	movlb	0	; select bank0
  2433  0091  0846               	movf	?_ADC_4+1,w
  2434  0092  00DE               	movwf	measure_Impedance@value2+1
  2435  0093  0845               	movf	?_ADC_4,w
  2436  0094  00DD               	movwf	measure_Impedance@value2
  2437                           
  2438                           ;comm.c: 95: aux[1] = (unsigned char)(value1 & 0xff);
  2439  0095  085B               	movf	measure_Impedance@value1,w
  2440  0096  00CB               	movwf	??_measure_Impedance
  2441  0097  084B               	movf	??_measure_Impedance,w
  2442  0098  00CF               	movwf	measure_Impedance@aux+1
  2443                           
  2444                           ;comm.c: 96: aux[2] = (unsigned char)((value1 >> 8) & 0xff);
  2445  0099  085C               	movf	measure_Impedance@value1+1,w
  2446  009A  00CB               	movwf	??_measure_Impedance
  2447  009B  084B               	movf	??_measure_Impedance,w
  2448  009C  00D0               	movwf	measure_Impedance@aux+2
  2449                           
  2450                           ;comm.c: 97: aux[3] = (unsigned char)(value2 & 0xff);
  2451  009D  085D               	movf	measure_Impedance@value2,w
  2452  009E  00CB               	movwf	??_measure_Impedance
  2453  009F  084B               	movf	??_measure_Impedance,w
  2454  00A0  00D1               	movwf	measure_Impedance@aux+3
  2455                           
  2456                           ;comm.c: 98: aux[4] = (unsigned char)((value2 >> 8) & 0xff);
  2457  00A1  085E               	movf	measure_Impedance@value2+1,w
  2458  00A2  00CB               	movwf	??_measure_Impedance
  2459  00A3  084B               	movf	??_measure_Impedance,w
  2460  00A4  00D2               	movwf	measure_Impedance@aux+4
  2461                           
  2462                           ;comm.c: 101: asic.data_bits.CE = 1;
  2463  00A5  175F               	bsf	measure_Impedance@asic,6
  2464                           
  2465                           ;comm.c: 102: asic.data_bits.IQ = 0;
  2466  00A6  11E0               	bcf	measure_Impedance@asic+1,3
  2467                           
  2468                           ;comm.c: 104: BIO_config(asic);
  2469  00A7  0860               	movf	measure_Impedance@asic+1,w
  2470  00A8  00C6               	movwf	BIO_config@conf+1
  2471  00A9  085F               	movf	measure_Impedance@asic,w
  2472  00AA  00C5               	movwf	BIO_config@conf
  2473  00AB  2149               	fcall	_BIO_config
  2474                           
  2475                           ;comm.c: 105: _delay((unsigned long)((60)*(500000/4000.0)));
  2476  00AC  300A               	movlw	10
  2477  00AD  0020               	movlb	0	; select bank0
  2478  00AE  00CB               	movwf	??_measure_Impedance
  2479  00AF  30BC               	movlw	188
  2480  00B0                     u847:	
  2481  00B0  0B89               	decfsz	9,f
  2482  00B1  28B0               	goto	u847
  2483  00B2  0BCB               	decfsz	??_measure_Impedance,f
  2484  00B3  28B0               	goto	u847
  2485  00B4  0000               	nop
  2486                           
  2487                           ;comm.c: 107: value1 = ADC_2();
  2488  00B5  2230               	fcall	_ADC_2
  2489  00B6  0020               	movlb	0	; select bank0
  2490  00B7  0846               	movf	?_ADC_2+1,w
  2491  00B8  00DC               	movwf	measure_Impedance@value1+1
  2492  00B9  0845               	movf	?_ADC_2,w
  2493  00BA  00DB               	movwf	measure_Impedance@value1
  2494                           
  2495                           ;comm.c: 108: value2 = ADC_4();
  2496  00BB  220D               	fcall	_ADC_4
  2497  00BC  0020               	movlb	0	; select bank0
  2498  00BD  0846               	movf	?_ADC_4+1,w
  2499  00BE  00DE               	movwf	measure_Impedance@value2+1
  2500  00BF  0845               	movf	?_ADC_4,w
  2501  00C0  00DD               	movwf	measure_Impedance@value2
  2502                           
  2503                           ;comm.c: 110: aux[5] = (unsigned char)(value1 & 0xff);
  2504  00C1  085B               	movf	measure_Impedance@value1,w
  2505  00C2  00CB               	movwf	??_measure_Impedance
  2506  00C3  084B               	movf	??_measure_Impedance,w
  2507  00C4  00D3               	movwf	measure_Impedance@aux+5
  2508                           
  2509                           ;comm.c: 111: aux[6] = (unsigned char)((value1 >> 8) & 0xff);
  2510  00C5  085C               	movf	measure_Impedance@value1+1,w
  2511  00C6  00CB               	movwf	??_measure_Impedance
  2512  00C7  084B               	movf	??_measure_Impedance,w
  2513  00C8  00D4               	movwf	measure_Impedance@aux+6
  2514                           
  2515                           ;comm.c: 112: aux[7] = (unsigned char)(value2 & 0xff);
  2516  00C9  085D               	movf	measure_Impedance@value2,w
  2517  00CA  00CB               	movwf	??_measure_Impedance
  2518  00CB  084B               	movf	??_measure_Impedance,w
  2519  00CC  00D5               	movwf	measure_Impedance@aux+7
  2520                           
  2521                           ;comm.c: 113: aux[8] = (unsigned char)((value2 >> 8) & 0xff);
  2522  00CD  085E               	movf	measure_Impedance@value2+1,w
  2523  00CE  00CB               	movwf	??_measure_Impedance
  2524  00CF  084B               	movf	??_measure_Impedance,w
  2525  00D0  00D6               	movwf	measure_Impedance@aux+8
  2526                           
  2527                           ;comm.c: 116: asic.data_bits.IQ = 1;
  2528  00D1  15E0               	bsf	measure_Impedance@asic+1,3
  2529                           
  2530                           ;comm.c: 118: BIO_config(asic);
  2531  00D2  0860               	movf	measure_Impedance@asic+1,w
  2532  00D3  00C6               	movwf	BIO_config@conf+1
  2533  00D4  085F               	movf	measure_Impedance@asic,w
  2534  00D5  00C5               	movwf	BIO_config@conf
  2535  00D6  2149               	fcall	_BIO_config
  2536                           
  2537                           ;comm.c: 119: _delay((unsigned long)((60)*(500000/4000.0)));
  2538  00D7  300A               	movlw	10
  2539  00D8  0020               	movlb	0	; select bank0
  2540  00D9  00CB               	movwf	??_measure_Impedance
  2541  00DA  30BC               	movlw	188
  2542  00DB                     u857:	
  2543  00DB  0B89               	decfsz	9,f
  2544  00DC  28DB               	goto	u857
  2545  00DD  0BCB               	decfsz	??_measure_Impedance,f
  2546  00DE  28DB               	goto	u857
  2547  00DF  0000               	nop
  2548                           
  2549                           ;comm.c: 121: value1 = ADC_2();
  2550  00E0  2230               	fcall	_ADC_2
  2551  00E1  0020               	movlb	0	; select bank0
  2552  00E2  0846               	movf	?_ADC_2+1,w
  2553  00E3  00DC               	movwf	measure_Impedance@value1+1
  2554  00E4  0845               	movf	?_ADC_2,w
  2555  00E5  00DB               	movwf	measure_Impedance@value1
  2556                           
  2557                           ;comm.c: 122: value2 = ADC_4();
  2558  00E6  220D               	fcall	_ADC_4
  2559  00E7  0020               	movlb	0	; select bank0
  2560  00E8  0846               	movf	?_ADC_4+1,w
  2561  00E9  00DE               	movwf	measure_Impedance@value2+1
  2562  00EA  0845               	movf	?_ADC_4,w
  2563  00EB  00DD               	movwf	measure_Impedance@value2
  2564                           
  2565                           ;comm.c: 124: aux[9] = (unsigned char)(value1 & 0xff);
  2566  00EC  085B               	movf	measure_Impedance@value1,w
  2567  00ED  00CB               	movwf	??_measure_Impedance
  2568  00EE  084B               	movf	??_measure_Impedance,w
  2569  00EF  00D7               	movwf	measure_Impedance@aux+9
  2570                           
  2571                           ;comm.c: 125: aux[10] = (unsigned char)((value1 >> 8) & 0xff);
  2572  00F0  085C               	movf	measure_Impedance@value1+1,w
  2573  00F1  00CB               	movwf	??_measure_Impedance
  2574  00F2  084B               	movf	??_measure_Impedance,w
  2575  00F3  00D8               	movwf	measure_Impedance@aux+10
  2576                           
  2577                           ;comm.c: 126: aux[11] = (unsigned char)(value2 & 0xff);
  2578  00F4  085D               	movf	measure_Impedance@value2,w
  2579  00F5  00CB               	movwf	??_measure_Impedance
  2580  00F6  084B               	movf	??_measure_Impedance,w
  2581  00F7  00D9               	movwf	measure_Impedance@aux+11
  2582                           
  2583                           ;comm.c: 127: aux[12] = (unsigned char)((value2 >> 8) & 0xff);
  2584  00F8  085E               	movf	measure_Impedance@value2+1,w
  2585  00F9  00CB               	movwf	??_measure_Impedance
  2586  00FA  084B               	movf	??_measure_Impedance,w
  2587  00FB  00DA               	movwf	measure_Impedance@aux+12
  2588                           
  2589                           ;comm.c: 130: lputs_ISR(aux,13);
  2590  00FC  300D               	movlw	13
  2591  00FD  00CB               	movwf	??_measure_Impedance
  2592  00FE  084B               	movf	??_measure_Impedance,w
  2593  00FF  00C5               	movwf	lputs_ISR@length
  2594  0100  304E               	movlw	(low (measure_Impedance@aux| 0))& (0+255)
  2595  0101  21C1               	fcall	_lputs_ISR
  2596  0102  0008               	return
  2597  0103                     __end_of_measure_Impedance:	
  2598                           
  2599                           	psect	text10
  2600  020D                     __ptext10:	
  2601 ;; *************** function _ADC_4 *****************
  2602 ;; Defined at:
  2603 ;;		line 38 in file "ADC1823.c"
  2604 ;; Parameters:    Size  Location     Type
  2605 ;;		None
  2606 ;; Auto vars:     Size  Location     Type
  2607 ;;  ADC_value       2    4[BANK0 ] unsigned short 
  2608 ;; Return value:  Size  Location     Type
  2609 ;;                  2    0[BANK0 ] unsigned short 
  2610 ;; Registers used:
  2611 ;;		wreg
  2612 ;; Tracked objects:
  2613 ;;		On entry : 0/0
  2614 ;;		On exit  : 0/0
  2615 ;;		Unchanged: 0/0
  2616 ;; Data sizes:     COMMON   BANK0   BANK1
  2617 ;;      Params:         0       2       0
  2618 ;;      Locals:         0       2       0
  2619 ;;      Temps:          0       2       0
  2620 ;;      Totals:         0       6       0
  2621 ;;Total ram usage:        6 bytes
  2622 ;; Hardware stack levels used:    1
  2623 ;; Hardware stack levels required when called:    2
  2624 ;; This function calls:
  2625 ;;		Nothing
  2626 ;; This function is called by:
  2627 ;;		_read_ADC_channels
  2628 ;;		_measure_Impedance
  2629 ;; This function uses a non-reentrant model
  2630 ;;
  2631                           
  2632                           
  2633                           ;psect for function _ADC_4
  2634  020D                     _ADC_4:	
  2635                           
  2636                           ;ADC1823.c: 40: unsigned short ADC_value;
  2637                           ;ADC1823.c: 42: { ADCON0 = 0b00010001;};
  2638                           
  2639                           ;incstack = 0
  2640                           ; Regs used in _ADC_4: [wreg]
  2641  020D  3011               	movlw	17
  2642  020E  0021               	movlb	1	; select bank1
  2643  020F  009D               	movwf	29	;volatile
  2644                           
  2645                           ;ADC1823.c: 43: __nop();
  2646  0210  0000               	nop
  2647                           
  2648                           ;ADC1823.c: 44: { ADGO = 1; while (ADGO); ADC_value = ADRESH; ADC_value <<= 8; ADC_value
      +                           |= ADRESL;};
  2649  0211  0021               	movlb	1	; select bank1
  2650  0212  149D               	bsf	29,1	;volatile
  2651  0213                     l353:	
  2652  0213  189D               	btfsc	29,1	;volatile
  2653  0214  2A13               	goto	l353
  2654  0215  081C               	movf	28,w	;volatile
  2655  0216  0020               	movlb	0	; select bank0
  2656  0217  00C7               	movwf	??_ADC_4
  2657  0218  01C8               	clrf	??_ADC_4+1
  2658  0219  0847               	movf	??_ADC_4,w
  2659  021A  00C9               	movwf	ADC_4@ADC_value
  2660  021B  0848               	movf	??_ADC_4+1,w
  2661  021C  00CA               	movwf	ADC_4@ADC_value+1
  2662  021D  3008               	movlw	8
  2663  021E                     u745:	
  2664  021E  35C9               	lslf	ADC_4@ADC_value,f
  2665  021F  0DCA               	rlf	ADC_4@ADC_value+1,f
  2666  0220  0B89               	decfsz	9,f
  2667  0221  2A1E               	goto	u745
  2668  0222  0021               	movlb	1	; select bank1
  2669  0223  081B               	movf	27,w	;volatile
  2670  0224  0020               	movlb	0	; select bank0
  2671  0225  00C7               	movwf	??_ADC_4
  2672  0226  01C8               	clrf	??_ADC_4+1
  2673  0227  0847               	movf	??_ADC_4,w
  2674  0228  04C9               	iorwf	ADC_4@ADC_value,f
  2675  0229  0848               	movf	??_ADC_4+1,w
  2676  022A  04CA               	iorwf	ADC_4@ADC_value+1,f
  2677                           
  2678                           ;ADC1823.c: 45: return ADC_value;
  2679  022B  084A               	movf	ADC_4@ADC_value+1,w
  2680  022C  00C6               	movwf	?_ADC_4+1
  2681  022D  0849               	movf	ADC_4@ADC_value,w
  2682  022E  00C5               	movwf	?_ADC_4
  2683  022F  0008               	return
  2684  0230                     __end_of_ADC_4:	
  2685                           
  2686                           	psect	text11
  2687  0230                     __ptext11:	
  2688 ;; *************** function _ADC_2 *****************
  2689 ;; Defined at:
  2690 ;;		line 25 in file "ADC1823.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;		None
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;  ADC_value       2    4[BANK0 ] unsigned short 
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  2    0[BANK0 ] unsigned short 
  2697 ;; Registers used:
  2698 ;;		wreg
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMMON   BANK0   BANK1
  2704 ;;      Params:         0       2       0
  2705 ;;      Locals:         0       2       0
  2706 ;;      Temps:          0       2       0
  2707 ;;      Totals:         0       6       0
  2708 ;;Total ram usage:        6 bytes
  2709 ;; Hardware stack levels used:    1
  2710 ;; Hardware stack levels required when called:    2
  2711 ;; This function calls:
  2712 ;;		Nothing
  2713 ;; This function is called by:
  2714 ;;		_read_ADC_channels
  2715 ;;		_measure_Impedance
  2716 ;; This function uses a non-reentrant model
  2717 ;;
  2718                           
  2719                           
  2720                           ;psect for function _ADC_2
  2721  0230                     _ADC_2:	
  2722                           
  2723                           ;ADC1823.c: 27: unsigned short ADC_value;
  2724                           ;ADC1823.c: 29: { ADCON0 = 0b00001001;};
  2725                           
  2726                           ;incstack = 0
  2727                           ; Regs used in _ADC_2: [wreg]
  2728  0230  3009               	movlw	9
  2729  0231  0021               	movlb	1	; select bank1
  2730  0232  009D               	movwf	29	;volatile
  2731                           
  2732                           ;ADC1823.c: 30: __nop();
  2733  0233  0000               	nop
  2734                           
  2735                           ;ADC1823.c: 34: { ADGO = 1; while (ADGO); ADC_value = ADRESH; ADC_value <<= 8; ADC_value
      +                           |= ADRESL;};
  2736  0234  0021               	movlb	1	; select bank1
  2737  0235  149D               	bsf	29,1	;volatile
  2738  0236                     l347:	
  2739  0236  189D               	btfsc	29,1	;volatile
  2740  0237  2A36               	goto	l347
  2741  0238  081C               	movf	28,w	;volatile
  2742  0239  0020               	movlb	0	; select bank0
  2743  023A  00C7               	movwf	??_ADC_2
  2744  023B  01C8               	clrf	??_ADC_2+1
  2745  023C  0847               	movf	??_ADC_2,w
  2746  023D  00C9               	movwf	ADC_2@ADC_value
  2747  023E  0848               	movf	??_ADC_2+1,w
  2748  023F  00CA               	movwf	ADC_2@ADC_value+1
  2749  0240  3008               	movlw	8
  2750  0241                     u725:	
  2751  0241  35C9               	lslf	ADC_2@ADC_value,f
  2752  0242  0DCA               	rlf	ADC_2@ADC_value+1,f
  2753  0243  0B89               	decfsz	9,f
  2754  0244  2A41               	goto	u725
  2755  0245  0021               	movlb	1	; select bank1
  2756  0246  081B               	movf	27,w	;volatile
  2757  0247  0020               	movlb	0	; select bank0
  2758  0248  00C7               	movwf	??_ADC_2
  2759  0249  01C8               	clrf	??_ADC_2+1
  2760  024A  0847               	movf	??_ADC_2,w
  2761  024B  04C9               	iorwf	ADC_2@ADC_value,f
  2762  024C  0848               	movf	??_ADC_2+1,w
  2763  024D  04CA               	iorwf	ADC_2@ADC_value+1,f
  2764                           
  2765                           ;ADC1823.c: 35: return ADC_value;
  2766  024E  084A               	movf	ADC_2@ADC_value+1,w
  2767  024F  00C6               	movwf	?_ADC_2+1
  2768  0250  0849               	movf	ADC_2@ADC_value,w
  2769  0251  00C5               	movwf	?_ADC_2
  2770  0252  0008               	return
  2771  0253                     __end_of_ADC_2:	
  2772                           
  2773                           	psect	text12
  2774  0253                     __ptext12:	
  2775 ;; *************** function _config_ASIC *****************
  2776 ;; Defined at:
  2777 ;;		line 38 in file "comm.c"
  2778 ;; Parameters:    Size  Location     Type
  2779 ;;		None
  2780 ;; Auto vars:     Size  Location     Type
  2781 ;;  asic            2    8[BANK0 ] struct .
  2782 ;; Return value:  Size  Location     Type
  2783 ;;                  1    wreg      void 
  2784 ;; Registers used:
  2785 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2786 ;; Tracked objects:
  2787 ;;		On entry : 0/0
  2788 ;;		On exit  : 0/0
  2789 ;;		Unchanged: 0/0
  2790 ;; Data sizes:     COMMON   BANK0   BANK1
  2791 ;;      Params:         0       0       0
  2792 ;;      Locals:         0       2       0
  2793 ;;      Temps:          0       3       0
  2794 ;;      Totals:         0       5       0
  2795 ;;Total ram usage:        5 bytes
  2796 ;; Hardware stack levels used:    1
  2797 ;; Hardware stack levels required when called:    3
  2798 ;; This function calls:
  2799 ;;		_BIO_config
  2800 ;;		_lputs_ISR
  2801 ;; This function is called by:
  2802 ;;		_mess_handler
  2803 ;; This function uses a non-reentrant model
  2804 ;;
  2805                           
  2806                           
  2807                           ;psect for function _config_ASIC
  2808  0253                     _config_ASIC:	
  2809                           
  2810                           ;comm.c: 40: BIO3 asic;
  2811                           ;comm.c: 42: asic.data = 0x0000;
  2812                           
  2813                           ;incstack = 0
  2814                           ; Regs used in _config_ASIC: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2815  0253  0020               	movlb	0	; select bank0
  2816  0254  01CD               	clrf	config_ASIC@asic
  2817  0255  01CE               	clrf	config_ASIC@asic+1
  2818                           
  2819                           ;comm.c: 43: asic.data |= (unsigned short)(mess_rec[2]<<8);
  2820  0256  0844               	movf	_mess_rec+2,w	;volatile
  2821  0257  00CA               	movwf	??_config_ASIC
  2822  0258  01CB               	clrf	??_config_ASIC+1
  2823  0259  084A               	movf	??_config_ASIC,w
  2824  025A  00CB               	movwf	??_config_ASIC+1
  2825  025B  01CA               	clrf	??_config_ASIC
  2826  025C  084A               	movf	??_config_ASIC,w
  2827  025D  04CD               	iorwf	config_ASIC@asic,f
  2828  025E  084B               	movf	??_config_ASIC+1,w
  2829  025F  04CE               	iorwf	config_ASIC@asic+1,f
  2830                           
  2831                           ;comm.c: 44: asic.data |= (unsigned short)(mess_rec[1]);
  2832  0260  0843               	movf	_mess_rec+1,w	;volatile
  2833  0261  00CA               	movwf	??_config_ASIC
  2834  0262  01CB               	clrf	??_config_ASIC+1
  2835  0263  084A               	movf	??_config_ASIC,w
  2836  0264  04CD               	iorwf	config_ASIC@asic,f
  2837  0265  084B               	movf	??_config_ASIC+1,w
  2838  0266  04CE               	iorwf	config_ASIC@asic+1,f
  2839                           
  2840                           ;comm.c: 46: lputs_ISR(mess_rec,mess_rec_size);
  2841  0267  0841               	movf	_mess_rec_size,w	;volatile
  2842  0268  00CA               	movwf	??_config_ASIC
  2843  0269  084A               	movf	??_config_ASIC,w
  2844  026A  00C5               	movwf	lputs_ISR@length
  2845  026B  3042               	movlw	(low (_mess_rec| 0))& (0+255)
  2846  026C  21C1               	fcall	_lputs_ISR
  2847                           
  2848                           ;comm.c: 48: BIO_config(asic);
  2849  026D  0020               	movlb	0	; select bank0
  2850  026E  084E               	movf	config_ASIC@asic+1,w
  2851  026F  00C6               	movwf	BIO_config@conf+1
  2852  0270  084D               	movf	config_ASIC@asic,w
  2853  0271  00C5               	movwf	BIO_config@conf
  2854  0272  2149               	fcall	_BIO_config
  2855  0273  0008               	return
  2856  0274                     __end_of_config_ASIC:	
  2857                           
  2858                           	psect	text13
  2859  01C1                     __ptext13:	
  2860 ;; *************** function _lputs_ISR *****************
  2861 ;; Defined at:
  2862 ;;		line 131 in file "USART1823.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;  data            1    wreg     PTR unsigned char 
  2865 ;;		 -> measure_Impedance@aux(13), read_ADC_channels@aux(7), mess_rec(3), 
  2866 ;;  length          1    0[BANK0 ] unsigned char 
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;  data            1    3[BANK0 ] PTR unsigned char 
  2869 ;;		 -> measure_Impedance@aux(13), read_ADC_channels@aux(7), mess_rec(3), 
  2870 ;;  i               1    4[BANK0 ] unsigned char 
  2871 ;; Return value:  Size  Location     Type
  2872 ;;                  1    wreg      void 
  2873 ;; Registers used:
  2874 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2875 ;; Tracked objects:
  2876 ;;		On entry : 0/0
  2877 ;;		On exit  : 0/0
  2878 ;;		Unchanged: 0/0
  2879 ;; Data sizes:     COMMON   BANK0   BANK1
  2880 ;;      Params:         0       1       0
  2881 ;;      Locals:         0       2       0
  2882 ;;      Temps:          0       2       0
  2883 ;;      Totals:         0       5       0
  2884 ;;Total ram usage:        5 bytes
  2885 ;; Hardware stack levels used:    1
  2886 ;; Hardware stack levels required when called:    2
  2887 ;; This function calls:
  2888 ;;		Nothing
  2889 ;; This function is called by:
  2890 ;;		_mess_handler
  2891 ;;		_config_ASIC
  2892 ;;		_read_ADC_channels
  2893 ;;		_measure_Impedance
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           
  2898                           ;psect for function _lputs_ISR
  2899  01C1                     _lputs_ISR:	
  2900                           
  2901                           ;incstack = 0
  2902                           ; Regs used in _lputs_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  2903                           ;lputs_ISR@data stored from wreg
  2904  01C1  0020               	movlb	0	; select bank0
  2905  01C2  00C8               	movwf	lputs_ISR@data
  2906                           
  2907                           ;USART1823.c: 133: unsigned char i;
  2908                           ;USART1823.c: 135: if (USART_tx_flag == 1)
  2909  01C3  0372               	decf	_USART_tx_flag,w	;volatile
  2910  01C4  1903               	btfsc	3,2
  2911  01C5  0008               	return
  2912                           
  2913                           ;USART1823.c: 138: for (i = 0; i < length; i++)
  2914                           
  2915                           ;USART1823.c: 136: return;
  2916  01C6  01C9               	clrf	lputs_ISR@i
  2917  01C7                     l1810:	
  2918  01C7  0845               	movf	lputs_ISR@length,w
  2919  01C8  0249               	subwf	lputs_ISR@i,w
  2920  01C9  1803               	btfsc	3,0
  2921  01CA  29DE               	goto	l1812
  2922                           
  2923                           ;USART1823.c: 139: USART_tx_data[i] = data[i];
  2924  01CB  0849               	movf	lputs_ISR@i,w
  2925  01CC  0748               	addwf	lputs_ISR@data,w
  2926  01CD  00C6               	movwf	??_lputs_ISR
  2927  01CE  0846               	movf	??_lputs_ISR,w
  2928  01CF  0086               	movwf	6
  2929  01D0  0187               	clrf	7
  2930  01D1  0801               	movf	1,w
  2931  01D2  00C7               	movwf	??_lputs_ISR+1
  2932  01D3  0849               	movf	lputs_ISR@i,w
  2933  01D4  3E2F               	addlw	(low (_USART_tx_data| 0))& (0+255)
  2934  01D5  0086               	movwf	6
  2935  01D6  0187               	clrf	7
  2936  01D7  0847               	movf	??_lputs_ISR+1,w
  2937  01D8  0081               	movwf	1
  2938  01D9  3001               	movlw	1
  2939  01DA  00C6               	movwf	??_lputs_ISR
  2940  01DB  0846               	movf	??_lputs_ISR,w
  2941  01DC  07C9               	addwf	lputs_ISR@i,f
  2942  01DD  29C7               	goto	l1810
  2943  01DE                     l1812:	
  2944                           
  2945                           ;USART1823.c: 141: USART_tx_index = 0;
  2946  01DE  01F3               	clrf	_USART_tx_index	;volatile
  2947                           
  2948                           ;USART1823.c: 142: USART_tx_length = length;
  2949  01DF  0845               	movf	lputs_ISR@length,w
  2950  01E0  00C6               	movwf	??_lputs_ISR
  2951  01E1  0846               	movf	??_lputs_ISR,w
  2952  01E2  00F4               	movwf	_USART_tx_length	;volatile
  2953                           
  2954                           ;USART1823.c: 144: USART_tx_flag = 1;
  2955  01E3  3001               	movlw	1
  2956  01E4  00C6               	movwf	??_lputs_ISR
  2957  01E5  0846               	movf	??_lputs_ISR,w
  2958  01E6  00F2               	movwf	_USART_tx_flag	;volatile
  2959                           
  2960                           ;USART1823.c: 145: TXIE = 1;
  2961  01E7  0021               	movlb	1	; select bank1
  2962  01E8  1611               	bsf	17,4	;volatile
  2963  01E9  0008               	return
  2964  01EA                     __end_of_lputs_ISR:	
  2965                           
  2966                           	psect	text14
  2967  0149                     __ptext14:	
  2968 ;; *************** function _BIO_config *****************
  2969 ;; Defined at:
  2970 ;;		line 35 in file "bio3.c"
  2971 ;; Parameters:    Size  Location     Type
  2972 ;;  conf            2    0[BANK0 ] struct .
  2973 ;; Auto vars:     Size  Location     Type
  2974 ;;  out             1    4[BANK0 ] unsigned char 
  2975 ;;  i               1    3[BANK0 ] unsigned char 
  2976 ;; Return value:  Size  Location     Type
  2977 ;;                  1    wreg      void 
  2978 ;; Registers used:
  2979 ;;		wreg, status,2, status,0
  2980 ;; Tracked objects:
  2981 ;;		On entry : 0/0
  2982 ;;		On exit  : 0/0
  2983 ;;		Unchanged: 0/0
  2984 ;; Data sizes:     COMMON   BANK0   BANK1
  2985 ;;      Params:         0       2       0
  2986 ;;      Locals:         0       2       0
  2987 ;;      Temps:          0       1       0
  2988 ;;      Totals:         0       5       0
  2989 ;;Total ram usage:        5 bytes
  2990 ;; Hardware stack levels used:    1
  2991 ;; Hardware stack levels required when called:    2
  2992 ;; This function calls:
  2993 ;;		Nothing
  2994 ;; This function is called by:
  2995 ;;		_config_ASIC
  2996 ;;		_measure_Impedance
  2997 ;; This function uses a non-reentrant model
  2998 ;;
  2999                           
  3000                           
  3001                           ;psect for function _BIO_config
  3002  0149                     _BIO_config:	
  3003                           
  3004                           ;bio3.c: 37: unsigned char i, out;
  3005                           ;bio3.c: 39: out &= 0b11110111; PORTC = out;;
  3006                           
  3007                           ;incstack = 0
  3008                           ; Regs used in _BIO_config: [wreg+status,2+status,0]
  3009  0149  30F7               	movlw	247
  3010  014A  0020               	movlb	0	; select bank0
  3011  014B  00C7               	movwf	??_BIO_config
  3012  014C  0847               	movf	??_BIO_config,w
  3013  014D  05C9               	andwf	BIO_config@out,f
  3014  014E  0849               	movf	BIO_config@out,w
  3015  014F  008E               	movwf	14	;volatile
  3016                           
  3017                           ;bio3.c: 40: _delay((unsigned long)((1)*(500000/4000.0)));
  3018  0150  3029               	movlw	41
  3019  0151                     u867:	
  3020  0151  0B89               	decfsz	9,f
  3021  0152  2951               	goto	u867
  3022  0153  3200               	nop2
  3023                           
  3024                           ;bio3.c: 42: RA5 = 0;;
  3025  0154  0020               	movlb	0	; select bank0
  3026  0155  128C               	bcf	12,5	;volatile
  3027                           
  3028                           ;bio3.c: 43: _delay((unsigned long)((1)*(500000/4000.0)));
  3029  0156  3029               	movlw	41
  3030  0157                     u877:	
  3031  0157  0B89               	decfsz	9,f
  3032  0158  2957               	goto	u877
  3033  0159  3200               	nop2
  3034                           
  3035                           ;bio3.c: 45: RA5 = 1;;
  3036  015A  0020               	movlb	0	; select bank0
  3037  015B  168C               	bsf	12,5	;volatile
  3038                           
  3039                           ;bio3.c: 47: for(i = 0; i < 16; i++) {
  3040  015C  01C8               	clrf	BIO_config@i
  3041  015D                     L1:	
  3042  015D  3010               	movlw	16
  3043  015E  0248               	subwf	BIO_config@i,w
  3044  015F  1803               	btfsc	3,0
  3045  0160  0008               	return
  3046                           
  3047                           ;bio3.c: 48: if (conf.data & 0x0001) {
  3048  0161  1C45               	btfss	BIO_config@conf,0
  3049  0162  2965               	goto	l1786
  3050                           
  3051                           ;bio3.c: 49: out |= 0b00000100; PORTC = out;;
  3052  0163  1549               	bsf	BIO_config@out,2
  3053  0164  2969               	goto	l1788
  3054  0165                     l1786:	
  3055                           ;bio3.c: 50: } else {
  3056                           
  3057                           
  3058                           ;bio3.c: 51: out &= 0b11111011; PORTC = out;;
  3059  0165  30FB               	movlw	251
  3060  0166  00C7               	movwf	??_BIO_config
  3061  0167  0847               	movf	??_BIO_config,w
  3062  0168  05C9               	andwf	BIO_config@out,f
  3063  0169                     l1788:	
  3064  0169  0849               	movf	BIO_config@out,w
  3065  016A  008E               	movwf	14	;volatile
  3066                           
  3067                           ;bio3.c: 52: }
  3068                           ;bio3.c: 53: conf.data >>= 1;
  3069  016B  3001               	movlw	1
  3070  016C                     u675:	
  3071  016C  36C6               	lsrf	BIO_config@conf+1,f
  3072  016D  0CC5               	rrf	BIO_config@conf,f
  3073  016E  0B89               	decfsz	9,f
  3074  016F  296C               	goto	u675
  3075                           
  3076                           ;bio3.c: 55: _delay((unsigned long)((1)*(500000/4000.0)));
  3077  0170  3029               	movlw	41
  3078  0171                     u887:	
  3079  0171  0B89               	decfsz	9,f
  3080  0172  2971               	goto	u887
  3081  0173  3200               	nop2
  3082                           
  3083                           ;bio3.c: 57: out |= 0b00001000; PORTC = out;;
  3084  0174  0020               	movlb	0	; select bank0
  3085  0175  15C9               	bsf	BIO_config@out,3
  3086  0176  0849               	movf	BIO_config@out,w
  3087  0177  008E               	movwf	14	;volatile
  3088                           
  3089                           ;bio3.c: 58: _delay((unsigned long)((1)*(500000/4000.0)));
  3090  0178  3029               	movlw	41
  3091  0179                     u897:	
  3092  0179  0B89               	decfsz	9,f
  3093  017A  2979               	goto	u897
  3094  017B  3200               	nop2
  3095                           
  3096                           ;bio3.c: 59: out &= 0b11110111; PORTC = out;;
  3097  017C  30F7               	movlw	247
  3098  017D  0020               	movlb	0	; select bank0
  3099  017E  00C7               	movwf	??_BIO_config
  3100  017F  0847               	movf	??_BIO_config,w
  3101  0180  05C9               	andwf	BIO_config@out,f
  3102  0181  0849               	movf	BIO_config@out,w
  3103  0182  008E               	movwf	14	;volatile
  3104  0183  3001               	movlw	1
  3105  0184  00C7               	movwf	??_BIO_config
  3106  0185  0847               	movf	??_BIO_config,w
  3107  0186  07C8               	addwf	BIO_config@i,f
  3108  0187  295D               	goto	L1
  3109  0188                     __end_of_BIO_config:	
  3110                           
  3111                           	psect	text15
  3112  030A                     __ptext15:	
  3113 ;; *************** function _SYSTEM_Initialize *****************
  3114 ;; Defined at:
  3115 ;;		line 70 in file "mcc_generated_files/mcc.c"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;		None
  3118 ;; Auto vars:     Size  Location     Type
  3119 ;;		None
  3120 ;; Return value:  Size  Location     Type
  3121 ;;                  1    wreg      void 
  3122 ;; Registers used:
  3123 ;;		wreg, status,2, status,0, pclath, cstack
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMMON   BANK0   BANK1
  3129 ;;      Params:         0       0       0
  3130 ;;      Locals:         0       0       0
  3131 ;;      Temps:          0       0       0
  3132 ;;      Totals:         0       0       0
  3133 ;;Total ram usage:        0 bytes
  3134 ;; Hardware stack levels used:    1
  3135 ;; Hardware stack levels required when called:    3
  3136 ;; This function calls:
  3137 ;;		_OSCILLATOR_Initialize
  3138 ;;		_PIN_MANAGER_Initialize
  3139 ;; This function is called by:
  3140 ;;		_main
  3141 ;; This function uses a non-reentrant model
  3142 ;;
  3143                           
  3144                           
  3145                           ;psect for function _SYSTEM_Initialize
  3146  030A                     _SYSTEM_Initialize:	
  3147                           
  3148                           ;mcc.c: 73: PIN_MANAGER_Initialize();
  3149                           
  3150                           ;incstack = 0
  3151                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3152  030A  2293               	fcall	_PIN_MANAGER_Initialize
  3153                           
  3154                           ;mcc.c: 74: OSCILLATOR_Initialize();
  3155  030B  2300               	fcall	_OSCILLATOR_Initialize
  3156  030C  0008               	return
  3157  030D                     __end_of_SYSTEM_Initialize:	
  3158                           
  3159                           	psect	text16
  3160  0293                     __ptext16:	
  3161 ;; *************** function _PIN_MANAGER_Initialize *****************
  3162 ;; Defined at:
  3163 ;;		line 49 in file "mcc_generated_files/pin_manager.c"
  3164 ;; Parameters:    Size  Location     Type
  3165 ;;		None
  3166 ;; Auto vars:     Size  Location     Type
  3167 ;;		None
  3168 ;; Return value:  Size  Location     Type
  3169 ;;                  1    wreg      void 
  3170 ;; Registers used:
  3171 ;;		wreg, status,2
  3172 ;; Tracked objects:
  3173 ;;		On entry : 0/0
  3174 ;;		On exit  : 0/0
  3175 ;;		Unchanged: 0/0
  3176 ;; Data sizes:     COMMON   BANK0   BANK1
  3177 ;;      Params:         0       0       0
  3178 ;;      Locals:         0       0       0
  3179 ;;      Temps:          0       0       0
  3180 ;;      Totals:         0       0       0
  3181 ;;Total ram usage:        0 bytes
  3182 ;; Hardware stack levels used:    1
  3183 ;; Hardware stack levels required when called:    2
  3184 ;; This function calls:
  3185 ;;		Nothing
  3186 ;; This function is called by:
  3187 ;;		_SYSTEM_Initialize
  3188 ;; This function uses a non-reentrant model
  3189 ;;
  3190                           
  3191                           
  3192                           ;psect for function _PIN_MANAGER_Initialize
  3193  0293                     _PIN_MANAGER_Initialize:	
  3194                           
  3195                           ;pin_manager.c: 51: LATA = 0x0;
  3196                           
  3197                           ;incstack = 0
  3198                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3199  0293  0022               	movlb	2	; select bank2
  3200  0294  018C               	clrf	12	;volatile
  3201                           
  3202                           ;pin_manager.c: 52: LATC = 0x0;
  3203  0295  018E               	clrf	14	;volatile
  3204                           
  3205                           ;pin_manager.c: 55: ANSELA = 0b00000100;
  3206  0296  3004               	movlw	4
  3207  0297  0023               	movlb	3	; select bank3
  3208  0298  008C               	movwf	12	;volatile
  3209                           
  3210                           ;pin_manager.c: 56: ANSELC = 0b00000011;
  3211  0299  3003               	movlw	3
  3212  029A  008E               	movwf	14	;volatile
  3213                           
  3214                           ;pin_manager.c: 59: WPUA = 0x3B;
  3215  029B  303B               	movlw	59
  3216  029C  0024               	movlb	4	; select bank4
  3217  029D  008C               	movwf	12	;volatile
  3218                           
  3219                           ;pin_manager.c: 60: WPUC = 0x3C;
  3220  029E  303C               	movlw	60
  3221  029F  008E               	movwf	14	;volatile
  3222                           
  3223                           ;pin_manager.c: 62: RXDTSEL = 0;
  3224  02A0  0022               	movlb	2	; select bank2
  3225  02A1  139D               	bcf	29,7	;volatile
  3226                           
  3227                           ;pin_manager.c: 63: TXCKSEL = 0;
  3228  02A2  111D               	bcf	29,2	;volatile
  3229                           
  3230                           ;pin_manager.c: 66: TRISC = 0b01100011;
  3231  02A3  3063               	movlw	99
  3232  02A4  0021               	movlb	1	; select bank1
  3233  02A5  008E               	movwf	14	;volatile
  3234                           
  3235                           ;pin_manager.c: 67: TRISA = 0b01011111;
  3236  02A6  305F               	movlw	95
  3237  02A7  008C               	movwf	12	;volatile
  3238                           
  3239                           ;pin_manager.c: 69: OPTION_REGbits.nWPUEN = 0x0;
  3240  02A8  1395               	bcf	21,7	;volatile
  3241                           
  3242                           ;pin_manager.c: 70: APFCON = 0x00;
  3243  02A9  0022               	movlb	2	; select bank2
  3244  02AA  019D               	clrf	29	;volatile
  3245  02AB  0008               	return
  3246  02AC                     __end_of_PIN_MANAGER_Initialize:	
  3247                           
  3248                           	psect	text17
  3249  0300                     __ptext17:	
  3250 ;; *************** function _OSCILLATOR_Initialize *****************
  3251 ;; Defined at:
  3252 ;;		line 78 in file "mcc_generated_files/mcc.c"
  3253 ;; Parameters:    Size  Location     Type
  3254 ;;		None
  3255 ;; Auto vars:     Size  Location     Type
  3256 ;;		None
  3257 ;; Return value:  Size  Location     Type
  3258 ;;                  1    wreg      void 
  3259 ;; Registers used:
  3260 ;;		wreg, status,2
  3261 ;; Tracked objects:
  3262 ;;		On entry : 0/0
  3263 ;;		On exit  : 0/0
  3264 ;;		Unchanged: 0/0
  3265 ;; Data sizes:     COMMON   BANK0   BANK1
  3266 ;;      Params:         0       0       0
  3267 ;;      Locals:         0       0       0
  3268 ;;      Temps:          0       0       0
  3269 ;;      Totals:         0       0       0
  3270 ;;Total ram usage:        0 bytes
  3271 ;; Hardware stack levels used:    1
  3272 ;; Hardware stack levels required when called:    2
  3273 ;; This function calls:
  3274 ;;		Nothing
  3275 ;; This function is called by:
  3276 ;;		_SYSTEM_Initialize
  3277 ;; This function uses a non-reentrant model
  3278 ;;
  3279                           
  3280                           
  3281                           ;psect for function _OSCILLATOR_Initialize
  3282  0300                     _OSCILLATOR_Initialize:	
  3283                           
  3284                           ;mcc.c: 81: OSCCON = 0x3A;
  3285                           
  3286                           ;incstack = 0
  3287                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3288  0300  303A               	movlw	58
  3289  0301  0021               	movlb	1	; select bank1
  3290  0302  0099               	movwf	25	;volatile
  3291                           
  3292                           ;mcc.c: 83: OSCSTAT = 0x00;
  3293  0303  019A               	clrf	26	;volatile
  3294                           
  3295                           ;mcc.c: 85: OSCTUNE = 0x00;
  3296  0304  0198               	clrf	24	;volatile
  3297  0305  0008               	return
  3298  0306                     __end_of_OSCILLATOR_Initialize:	
  3299                           
  3300                           	psect	intentry
  3301  0004                     __pintentry:	
  3302 ;; *************** function _isr *****************
  3303 ;; Defined at:
  3304 ;;		line 69 in file "main.c"
  3305 ;; Parameters:    Size  Location     Type
  3306 ;;		None
  3307 ;; Auto vars:     Size  Location     Type
  3308 ;;		None
  3309 ;; Return value:  Size  Location     Type
  3310 ;;                  1    wreg      void 
  3311 ;; Registers used:
  3312 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3313 ;; Tracked objects:
  3314 ;;		On entry : 0/0
  3315 ;;		On exit  : 0/0
  3316 ;;		Unchanged: 0/0
  3317 ;; Data sizes:     COMMON   BANK0   BANK1
  3318 ;;      Params:         0       0       0
  3319 ;;      Locals:         0       0       0
  3320 ;;      Temps:          2       0       0
  3321 ;;      Totals:         2       0       0
  3322 ;;Total ram usage:        2 bytes
  3323 ;; Hardware stack levels used:    1
  3324 ;; Hardware stack levels required when called:    1
  3325 ;; This function calls:
  3326 ;;		_start_TMR0_ISR
  3327 ;;		_stop_TMR0_ISR
  3328 ;;		i1_start_RX_USART_ISR
  3329 ;; This function is called by:
  3330 ;;		Interrupt level 1
  3331 ;; This function uses a non-reentrant model
  3332 ;;
  3333                           
  3334  0004                     _isr:	
  3335                           
  3336                           ;incstack = 0
  3337  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3338                           
  3339                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3340  0005  3180               	pagesel	$
  3341  0006  0020               	movlb	0	; select bank0
  3342  0007  087F               	movf	127,w
  3343  0008  00F9               	movwf	??_isr+1
  3344                           
  3345                           ;main.c: 73: if (TMR0IF && TMR0IE) {
  3346  0009  190B               	btfsc	11,2	;volatile
  3347  000A  1E8B               	btfss	11,5	;volatile
  3348  000B  2815               	goto	i1l116
  3349                           
  3350                           ;main.c: 75: TMR0IF = 0;
  3351  000C  110B               	bcf	11,2	;volatile
  3352                           
  3353                           ;main.c: 76: TMR0 = TIMER0_timeout;
  3354  000D  0870               	movf	_TIMER0_timeout,w	;volatile
  3355  000E  0095               	movwf	21	;volatile
  3356                           
  3357                           ;main.c: 79: TIMER0_flag = 1;
  3358  000F  3001               	movlw	1
  3359  0010  00F8               	movwf	??_isr
  3360  0011  0878               	movf	??_isr,w
  3361  0012  00BE               	movwf	_TIMER0_flag	;volatile
  3362                           
  3363                           ;main.c: 84: stop_TMR0_ISR();
  3364  0013  230D               	fcall	_stop_TMR0_ISR
  3365                           
  3366                           ;main.c: 86: return;
  3367  0014  284E               	goto	i1l117
  3368  0015                     i1l116:	
  3369                           
  3370                           ;main.c: 87: }
  3371                           ;main.c: 91: if (RCIF) {
  3372  0015  1E91               	btfss	17,5	;volatile
  3373  0016  282E               	goto	i1l118
  3374                           
  3375                           ;main.c: 92: stop_TMR0_ISR();
  3376  0017  230D               	fcall	_stop_TMR0_ISR
  3377                           
  3378                           ;main.c: 95: if (USART_rx_index >= 15) {
  3379  0018  300F               	movlw	15
  3380  0019  0020               	movlb	0	; select bank0
  3381  001A  0240               	subwf	_USART_rx_index,w	;volatile
  3382  001B  1803               	btfsc	3,0
  3383                           
  3384                           ;main.c: 96: USART_rx_index = 0;
  3385  001C  01C0               	clrf	_USART_rx_index	;volatile
  3386                           
  3387                           ;main.c: 97: }
  3388                           ;main.c: 99: USART_rx_data[USART_rx_index++] = RCREG;
  3389  001D  0023               	movlb	3	; select bank3
  3390  001E  0819               	movf	25,w	;volatile
  3391  001F  00F8               	movwf	??_isr
  3392  0020  0020               	movlb	0	; select bank0
  3393  0021  0840               	movf	_USART_rx_index,w
  3394  0022  3E20               	addlw	(low (_USART_rx_data| 0))& (0+255)
  3395  0023  0086               	movwf	6
  3396  0024  0187               	clrf	7
  3397  0025  0878               	movf	??_isr,w
  3398  0026  0081               	movwf	1
  3399  0027  3001               	movlw	1
  3400  0028  00F8               	movwf	??_isr
  3401  0029  0878               	movf	??_isr,w
  3402  002A  07C0               	addwf	_USART_rx_index,f	;volatile
  3403                           
  3404                           ;main.c: 101: start_TMR0_ISR(98);
  3405  002B  3062               	movlw	98
  3406  002C  22CE               	fcall	_start_TMR0_ISR
  3407                           
  3408                           ;main.c: 103: return;
  3409  002D  284E               	goto	i1l117
  3410  002E                     i1l118:	
  3411                           
  3412                           ;main.c: 104: }
  3413                           ;main.c: 108: if (TXIF && TXIE) {
  3414  002E  1E11               	btfss	17,4	;volatile
  3415  002F  284E               	goto	i1l117
  3416  0030  0021               	movlb	1	; select bank1
  3417  0031  1E11               	btfss	17,4	;volatile
  3418  0032  284E               	goto	i1l117
  3419                           
  3420                           ;main.c: 110: TXREG = USART_tx_data[USART_tx_index++];
  3421  0033  0873               	movf	_USART_tx_index,w
  3422  0034  3E2F               	addlw	(low (_USART_tx_data| 0))& (0+255)
  3423  0035  0086               	movwf	6
  3424  0036  0187               	clrf	7
  3425  0037  0801               	movf	1,w
  3426  0038  0023               	movlb	3	; select bank3
  3427  0039  009A               	movwf	26	;volatile
  3428  003A  3001               	movlw	1
  3429  003B  00F8               	movwf	??_isr
  3430  003C  0878               	movf	??_isr,w
  3431  003D  07F3               	addwf	_USART_tx_index,f	;volatile
  3432                           
  3433                           ;main.c: 112: if (USART_tx_index >= USART_tx_length) {
  3434  003E  0874               	movf	_USART_tx_length,w	;volatile
  3435  003F  0273               	subwf	_USART_tx_index,w	;volatile
  3436  0040  1C03               	skipc
  3437  0041  284E               	goto	i1l117
  3438                           
  3439                           ;main.c: 113: TXIE = 0;
  3440  0042  0021               	movlb	1	; select bank1
  3441  0043  1211               	bcf	17,4	;volatile
  3442                           
  3443                           ;main.c: 114: USART_tx_flag = 0;
  3444  0044  01F2               	clrf	_USART_tx_flag	;volatile
  3445                           
  3446                           ;main.c: 117: _delay((unsigned long)((25)*(500000/4000.0)));
  3447  0045  3005               	movlw	5
  3448  0046  00F8               	movwf	??_isr
  3449  0047  300D               	movlw	13
  3450  0048                     u90_27:	
  3451  0048  0B89               	decfsz	9,f
  3452  0049  2848               	goto	u90_27
  3453  004A  0BF8               	decfsz	??_isr,f
  3454  004B  2848               	goto	u90_27
  3455  004C  3200               	nop2
  3456                           
  3457                           ;main.c: 118: start_RX_USART_ISR();
  3458  004D  22BD               	fcall	i1_start_RX_USART_ISR
  3459  004E                     i1l117:	
  3460                           ;main.c: 119: }
  3461                           ;main.c: 120: return;
  3462                           
  3463  004E  0879               	movf	??_isr+1,w
  3464  004F  0020               	movlb	0	; select bank0
  3465  0050  00FF               	movwf	127
  3466  0051  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3467  0052  0009               	retfie
  3468  0053                     __end_of_isr:	
  3469                           
  3470                           	psect	text19
  3471  02BD                     __ptext19:	
  3472 ;; *************** function i1_start_RX_USART_ISR *****************
  3473 ;; Defined at:
  3474 ;;		line 82 in file "USART1823.c"
  3475 ;; Parameters:    Size  Location     Type
  3476 ;;		None
  3477 ;; Auto vars:     Size  Location     Type
  3478 ;;		None
  3479 ;; Return value:  Size  Location     Type
  3480 ;;                  1    wreg      void 
  3481 ;; Registers used:
  3482 ;;		wreg, status,2
  3483 ;; Tracked objects:
  3484 ;;		On entry : 0/0
  3485 ;;		On exit  : 0/0
  3486 ;;		Unchanged: 0/0
  3487 ;; Data sizes:     COMMON   BANK0   BANK1
  3488 ;;      Params:         0       0       0
  3489 ;;      Locals:         0       0       0
  3490 ;;      Temps:          0       0       0
  3491 ;;      Totals:         0       0       0
  3492 ;;Total ram usage:        0 bytes
  3493 ;; Hardware stack levels used:    1
  3494 ;; This function calls:
  3495 ;;		Nothing
  3496 ;; This function is called by:
  3497 ;;		_isr
  3498 ;; This function uses a non-reentrant model
  3499 ;;
  3500                           
  3501                           
  3502                           ;psect for function i1_start_RX_USART_ISR
  3503  02BD                     i1_start_RX_USART_ISR:	
  3504                           
  3505                           ;USART1823.c: 85: { BRGH = 1; BRG16 = 1; SPBRGH = 0; SPBRGL = 12; };
  3506                           
  3507                           ;incstack = 0
  3508                           ; Regs used in i1_start_RX_USART_ISR: [wreg+status,2]
  3509  02BD  0023               	movlb	3	; select bank3
  3510  02BE  151E               	bsf	30,2	;volatile
  3511  02BF  159F               	bsf	31,3	;volatile
  3512  02C0  019C               	clrf	28	;volatile
  3513  02C1  300C               	movlw	12
  3514  02C2  009B               	movwf	27	;volatile
  3515                           
  3516                           ;USART1823.c: 87: SYNC = 0;
  3517  02C3  121E               	bcf	30,4	;volatile
  3518                           
  3519                           ;USART1823.c: 88: SPEN = 1;
  3520  02C4  179D               	bsf	29,7	;volatile
  3521                           
  3522                           ;USART1823.c: 89: CREN = 1;
  3523  02C5  161D               	bsf	29,4	;volatile
  3524                           
  3525                           ;USART1823.c: 91: USART_rx_flag = 0;
  3526  02C6  0020               	movlb	0	; select bank0
  3527  02C7  01BF               	clrf	_USART_rx_flag	;volatile
  3528                           
  3529                           ;USART1823.c: 92: USART_rx_index = 0;
  3530  02C8  01C0               	clrf	_USART_rx_index	;volatile
  3531                           
  3532                           ;USART1823.c: 94: RCIE = 1;
  3533  02C9  0021               	movlb	1	; select bank1
  3534  02CA  1691               	bsf	17,5	;volatile
  3535                           
  3536                           ;USART1823.c: 95: PEIE = 1;
  3537  02CB  170B               	bsf	11,6	;volatile
  3538                           
  3539                           ;USART1823.c: 96: GIE = 1;
  3540  02CC  178B               	bsf	11,7	;volatile
  3541  02CD  0008               	return
  3542  02CE                     __end_ofi1_start_RX_USART_ISR:	
  3543                           
  3544                           	psect	text20
  3545  030D                     __ptext20:	
  3546 ;; *************** function _stop_TMR0_ISR *****************
  3547 ;; Defined at:
  3548 ;;		line 44 in file "TMR0.c"
  3549 ;; Parameters:    Size  Location     Type
  3550 ;;		None
  3551 ;; Auto vars:     Size  Location     Type
  3552 ;;		None
  3553 ;; Return value:  Size  Location     Type
  3554 ;;                  1    wreg      void 
  3555 ;; Registers used:
  3556 ;;		None
  3557 ;; Tracked objects:
  3558 ;;		On entry : 0/0
  3559 ;;		On exit  : 0/0
  3560 ;;		Unchanged: 0/0
  3561 ;; Data sizes:     COMMON   BANK0   BANK1
  3562 ;;      Params:         0       0       0
  3563 ;;      Locals:         0       0       0
  3564 ;;      Temps:          0       0       0
  3565 ;;      Totals:         0       0       0
  3566 ;;Total ram usage:        0 bytes
  3567 ;; Hardware stack levels used:    1
  3568 ;; This function calls:
  3569 ;;		Nothing
  3570 ;; This function is called by:
  3571 ;;		_isr
  3572 ;; This function uses a non-reentrant model
  3573 ;;
  3574                           
  3575                           
  3576                           ;psect for function _stop_TMR0_ISR
  3577  030D                     _stop_TMR0_ISR:	
  3578                           
  3579                           ;TMR0.c: 47: TMR0IE = 0;
  3580                           
  3581                           ;incstack = 0
  3582                           ; Regs used in _stop_TMR0_ISR: []
  3583  030D  128B               	bcf	11,5	;volatile
  3584                           
  3585                           ;TMR0.c: 48: TMR0IF = 0;
  3586  030E  110B               	bcf	11,2	;volatile
  3587  030F  0008               	return
  3588  0310                     __end_of_stop_TMR0_ISR:	
  3589                           
  3590                           	psect	text21
  3591  02CE                     __ptext21:	
  3592 ;; *************** function _start_TMR0_ISR *****************
  3593 ;; Defined at:
  3594 ;;		line 30 in file "TMR0.c"
  3595 ;; Parameters:    Size  Location     Type
  3596 ;;  val             1    wreg     unsigned char 
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;  val             1    2[COMMON] unsigned char 
  3599 ;; Return value:  Size  Location     Type
  3600 ;;                  1    wreg      void 
  3601 ;; Registers used:
  3602 ;;		wreg, status,2
  3603 ;; Tracked objects:
  3604 ;;		On entry : 0/0
  3605 ;;		On exit  : 0/0
  3606 ;;		Unchanged: 0/0
  3607 ;; Data sizes:     COMMON   BANK0   BANK1
  3608 ;;      Params:         0       0       0
  3609 ;;      Locals:         1       0       0
  3610 ;;      Temps:          2       0       0
  3611 ;;      Totals:         3       0       0
  3612 ;;Total ram usage:        3 bytes
  3613 ;; Hardware stack levels used:    1
  3614 ;; This function calls:
  3615 ;;		Nothing
  3616 ;; This function is called by:
  3617 ;;		_isr
  3618 ;; This function uses a non-reentrant model
  3619 ;;
  3620                           
  3621                           
  3622                           ;psect for function _start_TMR0_ISR
  3623  02CE                     _start_TMR0_ISR:	
  3624                           
  3625                           ;incstack = 0
  3626                           ; Regs used in _start_TMR0_ISR: [wreg+status,2]
  3627                           ;start_TMR0_ISR@val stored from wreg
  3628  02CE  00F7               	movwf	start_TMR0_ISR@val
  3629                           
  3630                           ;TMR0.c: 32: TIMER0_timeout = val;
  3631  02CF  0877               	movf	start_TMR0_ISR@val,w
  3632  02D0  00F5               	movwf	??_start_TMR0_ISR
  3633  02D1  01F6               	clrf	??_start_TMR0_ISR+1
  3634  02D2  0875               	movf	??_start_TMR0_ISR,w
  3635  02D3  00F0               	movwf	_TIMER0_timeout	;volatile
  3636  02D4  0876               	movf	??_start_TMR0_ISR+1,w
  3637  02D5  00F1               	movwf	_TIMER0_timeout+1	;volatile
  3638                           
  3639                           ;TMR0.c: 33: TIMER0_flag = 0;
  3640  02D6  0020               	movlb	0	; select bank0
  3641  02D7  01BE               	clrf	_TIMER0_flag	;volatile
  3642                           
  3643                           ;TMR0.c: 36: TMR0 = TIMER0_timeout;
  3644  02D8  0870               	movf	_TIMER0_timeout,w	;volatile
  3645  02D9  0095               	movwf	21	;volatile
  3646                           
  3647                           ;TMR0.c: 39: TMR0IF = 0;
  3648  02DA  110B               	bcf	11,2	;volatile
  3649                           
  3650                           ;TMR0.c: 40: TMR0IE = 1;
  3651  02DB  168B               	bsf	11,5	;volatile
  3652                           
  3653                           ;TMR0.c: 41: GIE = 1;
  3654  02DC  178B               	bsf	11,7	;volatile
  3655  02DD  0008               	return
  3656  02DE                     __end_of_start_TMR0_ISR:	
  3657  007E                     btemp	set	126	;btemp
  3658  007E                     int$flags	set	126
  3659  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         42
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     31      68
    BANK1            32      0       0

Pointer List with Targets:

    lputs_ISR@data	PTR unsigned char  size(1) Largest target is 13
		 -> measure_Impedance@aux(BANK0[13]), read_ADC_channels@aux(BANK0[7]), mess_rec(BANK0[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_start_TMR0_ISR

Critical Paths under _main in BANK0

    _main->_mess_handler
    _mess_handler->_measure_Impedance
    _read_ADC_channels->_ADC_2
    _read_ADC_channels->_ADC_4
    _read_ADC_channels->_ADC_5
    _measure_Impedance->_ADC_2
    _measure_Impedance->_ADC_4
    _config_ASIC->_BIO_config
    _config_ASIC->_lputs_ISR

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    5528
                                             29 BANK0      2     2      0
                  _SYSTEM_Initialize
                       _mess_handler
                          _setup_ADC
                         _setup_TMR0
                          _start_RCM
                 _start_RX_USART_ISR
                 _start_TX_USART_ISR
 ---------------------------------------------------------------------------------
 (1) _start_TX_USART_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_RX_USART_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_RCM                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup_TMR0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup_ADC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mess_handler                                         1     1      0    5429
                                             28 BANK0      1     1      0
                        _config_ASIC
                          _lputs_ISR
                  _measure_Impedance
                  _read_ADC_channels
 ---------------------------------------------------------------------------------
 (2) _read_ADC_channels                                   14    14      0    1206
                                              6 BANK0     14    14      0
                              _ADC_2
                              _ADC_4
                              _ADC_5
                          _lputs_ISR
 ---------------------------------------------------------------------------------
 (3) _ADC_5                                                6     4      2      40
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _measure_Impedance                                   24    24      0    2339
                                              6 BANK0     22    22      0
                              _ADC_2
                              _ADC_4
                         _BIO_config
                          _lputs_ISR
 ---------------------------------------------------------------------------------
 (3) _ADC_4                                                6     4      2      40
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _ADC_2                                                6     4      2      40
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _config_ASIC                                          5     5      0    1252
                                              5 BANK0      5     5      0
                         _BIO_config
                          _lputs_ISR
 ---------------------------------------------------------------------------------
 (3) _lputs_ISR                                            5     4      1     632
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (3) _BIO_config                                           5     3      2     580
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0      22
                                              3 COMMON     2     2      0
                     _start_TMR0_ISR
                      _stop_TMR0_ISR
               i1_start_RX_USART_ISR
 ---------------------------------------------------------------------------------
 (5) i1_start_RX_USART_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _stop_TMR0_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _start_TMR0_ISR                                       3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _mess_handler
     _config_ASIC
       _BIO_config
       _lputs_ISR
     _lputs_ISR
     _measure_Impedance
       _ADC_2
       _ADC_4
       _BIO_config
       _lputs_ISR
     _read_ADC_channels
       _ADC_2
       _ADC_4
       _ADC_5
       _lputs_ISR
   _setup_ADC
   _setup_TMR0
   _start_RCM
   _start_RX_USART_ISR
   _start_TX_USART_ISR

 _isr (ROOT)
   _start_TMR0_ISR
   _stop_TMR0_ISR
   i1_start_RX_USART_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      4E       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1F      44       6       85.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      4E       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Tue Jan 31 15:41:08 2017

                    __CFG_CP$OFF 0000                    _USART_rx_data 0020                    _USART_rx_flag 003F  
                  _USART_tx_data 002F                    _USART_tx_flag 0072                              l320 0292  
                            l353 0213                              l347 0236                              l359 01F0  
                            _GIE 005F                              _RA5 0065                              _PS0 04A8  
                            _PS1 04A9                              _PS2 04AA                     __CFG_CPD$OFF 0000  
                            u725 0241                              _PSA 04AB                              u745 021E  
                            u817 010F                              u675 016C                              u827 011A  
                            u837 0084                              u765 01FB                              u847 00B0  
                            u857 00DB                              u867 0151                              u877 0157  
                            u887 0171                              u897 0179                              _isr 0004  
                   __CFG_BORV$HI 0000                              wreg 0009                     __CFG_IESO$ON 0000  
                 _USART_rx_index 0040                     __CFG_LVP$OFF 0000                   _USART_tx_index 0073  
                           l2030 0281                             l2024 0275                             l2026 027D  
                           l2034 0283                             l2028 027F                             l2060 012A  
                           l2052 011F                             l2072 0132                             l2074 0147  
                           l1810 01C7                             l1812 01DE                             l1786 0165  
                           l1788 0169                             ?_isr 0075                             _ADGO 04E9  
                           _BRGH 0CF2                             _CREN 0CEC                             _LATA 010C  
                           _LATC 010E                             _PEIE 005E                             _RCIE 048D  
                           _RCIF 008D                             _TMR0 0015                             _SPEN 0CEF  
                           _TXIE 048C                             _TXEN 0CF5                             _TXIF 008C  
                           _SYNC 0CF4                             _WPUA 020C                             _WPUC 020E  
         __size_of_stop_TMR0_ISR 0003                _read_ADC_channels 0188                     __CFG_WRT$OFF 0000  
                           _main 0103                             fsr0h 0005                             fsr1h 0007  
                           indf0 0000                             fsr0l 0004                             indf1 0001  
                           fsr1l 0006                             btemp 007E               ?_read_ADC_channels 0075  
                           start 0053                    __CFG_MCLRE$ON 0000              ??_read_ADC_channels 004B  
                          ??_isr 0078   __size_of_OSCILLATOR_Initialize 0006                  _USART_tx_length 0074  
  __end_of_OSCILLATOR_Initialize 0306                            ?_main 0075                            _ADC_2 0230  
                          _ADC_4 020D                            _ADC_5 01EA                            _BRG16 0CFB  
                  __CFG_WDTE$OFF 0000                            i1l116 0015                            i1l117 004E  
                          i1l118 002E              __size_of_BIO_config 003F                            _RCREG 0199  
                          _PORTC 000E                            _TRISA 008C                   _start_TMR0_ISR 02CE  
                          _TRISC 008E                            u90_27 0048                            _TXREG 019A  
                 __CFG_FCMEN$OFF 0000        __end_of_read_ADC_channels 01C1                            main@i 0063  
  __size_ofi1_start_RX_USART_ISR 0011                   __CFG_BOREN$OFF 0000                            status 0003  
                          wtemp0 007E                  __initialization 0054                     __end_of_main 0149  
                  _stop_TMR0_ISR 030D           __end_of_start_TMR0_ISR 02DE                           ??_main 0062  
                         ?_ADC_2 0045                           ?_ADC_4 0045                           ?_ADC_5 0045  
                 _TIMER0_timeout 0070                   __CFG_PLLEN$OFF 0000                           _ADCON0 009D  
                         _ADCON1 009E                           _ADRESH 009C                           _ADRESL 009B  
                         _APFCON 011D                           _ANSELA 018C                           _ANSELC 018E  
                         _OSCCON 0099                           _TMR0IE 005D                           _TMR0IF 005A  
                         _TMR0CS 04AD                           _SPBRGH 019C                           _SPBRGL 019B  
                 __CFG_PWRTE$OFF 0000             __size_of_config_ASIC 0021                  config_ASIC@asic 004D  
                 __CFG_STVREN$ON 0000                   ?_stop_TMR0_ISR 0075                  ?_start_TMR0_ISR 0075  
           measure_Impedance@aux 004E      __size_of_start_RX_USART_ISR 0011       __size_of_read_ADC_channels 0039  
                  ?_mess_handler 0075                _SYSTEM_Initialize 030A          __end_of__initialization 005F  
                   ??_BIO_config 0047                    __end_of_ADC_2 0253                    __end_of_ADC_4 0230  
             ?_SYSTEM_Initialize 0075                    __end_of_ADC_5 020D                   __pcstackCOMMON 0075  
            ??_SYSTEM_Initialize 0045                          ??_ADC_2 0047                          ??_ADC_4 0047  
                        ??_ADC_5 0047                   _OPTION_REGbits 0095               __end_of_BIO_config 0188  
    __size_of_start_TX_USART_ISR 000F                   ??_mess_handler 0061        __end_of_SYSTEM_Initialize 030D  
                     __pbssBANK0 0020                       __pmaintext 0103                  ??_stop_TMR0_ISR 0075  
           read_ADC_channels@aux 004C                       __pintentry 0004                          _CLKRCON 039A  
             __size_of_lputs_ISR 0029                  lputs_ISR@length 0045               __size_of_setup_ADC 0006  
                        _OSCSTAT 009A                          _OSCTUNE 0098               __size_of_start_RCM 0004  
                        _RXDTSEL 08EF                          _TXCKSEL 08EA     __end_ofi1_start_RX_USART_ISR 02CE  
                        __ptext1 02DE                          __ptext2 02AC                          __ptext3 0306  
                        __ptext4 02ED                          __ptext5 02FA                          __ptext6 0274  
                        __ptext7 0188                          __ptext8 01EA                          __ptext9 0062  
          _OSCILLATOR_Initialize 0300                     __size_of_isr 004F         ??_PIN_MANAGER_Initialize 0045  
     __size_of_SYSTEM_Initialize 0003                          clrloop0 02F5                    _mess_rec_size 0041  
           end_of_initialization 005F            measure_Impedance@asic 005F                __end_of_lputs_ISR 01EA  
              __end_of_setup_ADC 0300                 ??_start_TMR0_ISR 0075                __end_of_start_RCM 030A  
           __end_of_mess_handler 0293                       _setup_TMR0 02ED                 __CFG_FOSC$INTOSC 0000  
                  ??_config_ASIC 004A                _measure_Impedance 0062               ?_measure_Impedance 0075  
                 ADC_2@ADC_value 0049       __end_of_start_RX_USART_ISR 02BD           ?_OSCILLATOR_Initialize 0075  
            start_initialization 0054              ??_measure_Impedance 004B  __size_of_PIN_MANAGER_Initialize 0019  
                    __end_of_isr 0053             i1_start_RX_USART_ISR 02BD                   ADC_4@ADC_value 0049  
      __end_of_measure_Impedance 0103                   ADC_5@ADC_value 0049              __end_of_config_ASIC 0274  
                    ?_setup_TMR0 0075       __end_of_start_TX_USART_ISR 02ED                      __pbssCOMMON 0070  
                      ___latbits 0000                    __pcstackBANK0 0045            ?i1_start_RX_USART_ISR 0075  
          __size_of_mess_handler 001F           _PIN_MANAGER_Initialize 0293            __end_of_stop_TMR0_ISR 0310  
                 __size_of_ADC_2 0023                   __size_of_ADC_4 0023                   __size_of_ADC_5 0023  
        read_ADC_channels@value1 0053          read_ADC_channels@value2 0055          read_ADC_channels@value3 0057  
                   _mess_handler 0274              __size_of_setup_TMR0 0007                      _config_ASIC 0253  
                      clear_ram0 02F4                       lputs_ISR@i 0049       __size_of_measure_Impedance 00A1  
                      _lputs_ISR 01C1                        _setup_ADC 02FA                        _start_RCM 0306  
         ??i1_start_RX_USART_ISR 0075          measure_Impedance@value1 005B          measure_Impedance@value2 005D  
                     ?_lputs_ISR 0045                       ?_setup_ADC 0075          ??_OSCILLATOR_Initialize 0045  
              start_TMR0_ISR@val 0077                       ?_start_RCM 0075                   BIO_config@conf 0045  
                       __ptext10 020D                         __ptext11 0230                         __ptext20 030D  
                       __ptext12 0253                         __ptext21 02CE                         __ptext13 01C1  
                       __ptext14 0149                         __ptext15 030A                         __ptext16 0293  
                       __ptext17 0300                         __ptext19 02BD                    lputs_ISR@data 0048  
             _start_RX_USART_ISR 02AC                       _BIO_config 0149                    __size_of_main 0046  
                       _mess_rec 0042              ?_start_RX_USART_ISR 0075                         int$flags 007E  
                   ??_setup_TMR0 0045                      _TIMER0_flag 003E             ??_start_RX_USART_ISR 0045  
        __size_of_start_TMR0_ISR 0010                         intlevel1 0000               _start_TX_USART_ISR 02DE  
                  BIO_config@out 0049          ?_PIN_MANAGER_Initialize 0075                __CFG_CLKOUTEN$OFF 0000  
             __end_of_setup_TMR0 02F4              ?_start_TX_USART_ISR 0075                      ??_lputs_ISR 0046  
                    ??_setup_ADC 0045                      ??_start_RCM 0045             ??_start_TX_USART_ISR 0045  
                    BIO_config@i 0048   __end_of_PIN_MANAGER_Initialize 02AC                      ?_BIO_config 0045  
                   ?_config_ASIC 0075  
