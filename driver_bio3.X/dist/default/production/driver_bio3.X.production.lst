

Microchip Technology PIC LITE Macro Assembler V1.40 build -251452761 
                                                                                               Tue Feb 28 09:03:59 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	16LF1823
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	dabs	1,0x7E,2
    33  0000                     
    34                           ; Version 1.40
    35                           ; Generated 01/12/2016 GMT
    36                           ; 
    37                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16LF1823 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     	;# 
    69  0001                     	;# 
    70  0002                     	;# 
    71  0003                     	;# 
    72  0004                     	;# 
    73  0005                     	;# 
    74  0006                     	;# 
    75  0007                     	;# 
    76  0008                     	;# 
    77  0009                     	;# 
    78  000A                     	;# 
    79  000B                     	;# 
    80  000C                     	;# 
    81  000E                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  008C                     	;# 
    96  008E                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  010C                     	;# 
   111  010E                     	;# 
   112  0111                     	;# 
   113  0112                     	;# 
   114  0113                     	;# 
   115  0114                     	;# 
   116  0115                     	;# 
   117  0116                     	;# 
   118  0117                     	;# 
   119  0118                     	;# 
   120  0119                     	;# 
   121  011A                     	;# 
   122  011B                     	;# 
   123  011D                     	;# 
   124  011D                     	;# 
   125  018C                     	;# 
   126  018E                     	;# 
   127  0191                     	;# 
   128  0191                     	;# 
   129  0192                     	;# 
   130  0193                     	;# 
   131  0193                     	;# 
   132  0193                     	;# 
   133  0194                     	;# 
   134  0195                     	;# 
   135  0196                     	;# 
   136  0199                     	;# 
   137  019A                     	;# 
   138  019B                     	;# 
   139  019B                     	;# 
   140  019B                     	;# 
   141  019B                     	;# 
   142  019C                     	;# 
   143  019C                     	;# 
   144  019D                     	;# 
   145  019E                     	;# 
   146  019F                     	;# 
   147  020C                     	;# 
   148  020E                     	;# 
   149  0211                     	;# 
   150  0211                     	;# 
   151  0212                     	;# 
   152  0212                     	;# 
   153  0213                     	;# 
   154  0213                     	;# 
   155  0214                     	;# 
   156  0214                     	;# 
   157  0215                     	;# 
   158  0215                     	;# 
   159  0215                     	;# 
   160  0216                     	;# 
   161  0216                     	;# 
   162  0217                     	;# 
   163  0217                     	;# 
   164  0291                     	;# 
   165  0291                     	;# 
   166  0292                     	;# 
   167  0293                     	;# 
   168  0294                     	;# 
   169  0295                     	;# 
   170  0295                     	;# 
   171  0296                     	;# 
   172  0391                     	;# 
   173  0392                     	;# 
   174  0393                     	;# 
   175  039A                     	;# 
   176  039C                     	;# 
   177  039D                     	;# 
   178  039E                     	;# 
   179  039F                     	;# 
   180  0FE4                     	;# 
   181  0FE5                     	;# 
   182  0FE6                     	;# 
   183  0FE7                     	;# 
   184  0FE8                     	;# 
   185  0FE9                     	;# 
   186  0FEA                     	;# 
   187  0FEB                     	;# 
   188  0FED                     	;# 
   189  0FEE                     	;# 
   190  0FEF                     	;# 
   191  0000                     	;# 
   192  0001                     	;# 
   193  0002                     	;# 
   194  0003                     	;# 
   195  0004                     	;# 
   196  0005                     	;# 
   197  0006                     	;# 
   198  0007                     	;# 
   199  0008                     	;# 
   200  0009                     	;# 
   201  000A                     	;# 
   202  000B                     	;# 
   203  000C                     	;# 
   204  000E                     	;# 
   205  0011                     	;# 
   206  0012                     	;# 
   207  0015                     	;# 
   208  0016                     	;# 
   209  0016                     	;# 
   210  0017                     	;# 
   211  0018                     	;# 
   212  0019                     	;# 
   213  001A                     	;# 
   214  001B                     	;# 
   215  001C                     	;# 
   216  001E                     	;# 
   217  001F                     	;# 
   218  008C                     	;# 
   219  008E                     	;# 
   220  0091                     	;# 
   221  0092                     	;# 
   222  0095                     	;# 
   223  0096                     	;# 
   224  0097                     	;# 
   225  0098                     	;# 
   226  0099                     	;# 
   227  009A                     	;# 
   228  009B                     	;# 
   229  009B                     	;# 
   230  009C                     	;# 
   231  009D                     	;# 
   232  009E                     	;# 
   233  010C                     	;# 
   234  010E                     	;# 
   235  0111                     	;# 
   236  0112                     	;# 
   237  0113                     	;# 
   238  0114                     	;# 
   239  0115                     	;# 
   240  0116                     	;# 
   241  0117                     	;# 
   242  0118                     	;# 
   243  0119                     	;# 
   244  011A                     	;# 
   245  011B                     	;# 
   246  011D                     	;# 
   247  011D                     	;# 
   248  018C                     	;# 
   249  018E                     	;# 
   250  0191                     	;# 
   251  0191                     	;# 
   252  0192                     	;# 
   253  0193                     	;# 
   254  0193                     	;# 
   255  0193                     	;# 
   256  0194                     	;# 
   257  0195                     	;# 
   258  0196                     	;# 
   259  0199                     	;# 
   260  019A                     	;# 
   261  019B                     	;# 
   262  019B                     	;# 
   263  019B                     	;# 
   264  019B                     	;# 
   265  019C                     	;# 
   266  019C                     	;# 
   267  019D                     	;# 
   268  019E                     	;# 
   269  019F                     	;# 
   270  020C                     	;# 
   271  020E                     	;# 
   272  0211                     	;# 
   273  0211                     	;# 
   274  0212                     	;# 
   275  0212                     	;# 
   276  0213                     	;# 
   277  0213                     	;# 
   278  0214                     	;# 
   279  0214                     	;# 
   280  0215                     	;# 
   281  0215                     	;# 
   282  0215                     	;# 
   283  0216                     	;# 
   284  0216                     	;# 
   285  0217                     	;# 
   286  0217                     	;# 
   287  0291                     	;# 
   288  0291                     	;# 
   289  0292                     	;# 
   290  0293                     	;# 
   291  0294                     	;# 
   292  0295                     	;# 
   293  0295                     	;# 
   294  0296                     	;# 
   295  0391                     	;# 
   296  0392                     	;# 
   297  0393                     	;# 
   298  039A                     	;# 
   299  039C                     	;# 
   300  039D                     	;# 
   301  039E                     	;# 
   302  039F                     	;# 
   303  0FE4                     	;# 
   304  0FE5                     	;# 
   305  0FE6                     	;# 
   306  0FE7                     	;# 
   307  0FE8                     	;# 
   308  0FE9                     	;# 
   309  0FEA                     	;# 
   310  0FEB                     	;# 
   311  0FED                     	;# 
   312  0FEE                     	;# 
   313  0FEF                     	;# 
   314  0000                     	;# 
   315  0001                     	;# 
   316  0002                     	;# 
   317  0003                     	;# 
   318  0004                     	;# 
   319  0005                     	;# 
   320  0006                     	;# 
   321  0007                     	;# 
   322  0008                     	;# 
   323  0009                     	;# 
   324  000A                     	;# 
   325  000B                     	;# 
   326  000C                     	;# 
   327  000E                     	;# 
   328  0011                     	;# 
   329  0012                     	;# 
   330  0015                     	;# 
   331  0016                     	;# 
   332  0016                     	;# 
   333  0017                     	;# 
   334  0018                     	;# 
   335  0019                     	;# 
   336  001A                     	;# 
   337  001B                     	;# 
   338  001C                     	;# 
   339  001E                     	;# 
   340  001F                     	;# 
   341  008C                     	;# 
   342  008E                     	;# 
   343  0091                     	;# 
   344  0092                     	;# 
   345  0095                     	;# 
   346  0096                     	;# 
   347  0097                     	;# 
   348  0098                     	;# 
   349  0099                     	;# 
   350  009A                     	;# 
   351  009B                     	;# 
   352  009B                     	;# 
   353  009C                     	;# 
   354  009D                     	;# 
   355  009E                     	;# 
   356  010C                     	;# 
   357  010E                     	;# 
   358  0111                     	;# 
   359  0112                     	;# 
   360  0113                     	;# 
   361  0114                     	;# 
   362  0115                     	;# 
   363  0116                     	;# 
   364  0117                     	;# 
   365  0118                     	;# 
   366  0119                     	;# 
   367  011A                     	;# 
   368  011B                     	;# 
   369  011D                     	;# 
   370  011D                     	;# 
   371  018C                     	;# 
   372  018E                     	;# 
   373  0191                     	;# 
   374  0191                     	;# 
   375  0192                     	;# 
   376  0193                     	;# 
   377  0193                     	;# 
   378  0193                     	;# 
   379  0194                     	;# 
   380  0195                     	;# 
   381  0196                     	;# 
   382  0199                     	;# 
   383  019A                     	;# 
   384  019B                     	;# 
   385  019B                     	;# 
   386  019B                     	;# 
   387  019B                     	;# 
   388  019C                     	;# 
   389  019C                     	;# 
   390  019D                     	;# 
   391  019E                     	;# 
   392  019F                     	;# 
   393  020C                     	;# 
   394  020E                     	;# 
   395  0211                     	;# 
   396  0211                     	;# 
   397  0212                     	;# 
   398  0212                     	;# 
   399  0213                     	;# 
   400  0213                     	;# 
   401  0214                     	;# 
   402  0214                     	;# 
   403  0215                     	;# 
   404  0215                     	;# 
   405  0215                     	;# 
   406  0216                     	;# 
   407  0216                     	;# 
   408  0217                     	;# 
   409  0217                     	;# 
   410  0291                     	;# 
   411  0291                     	;# 
   412  0292                     	;# 
   413  0293                     	;# 
   414  0294                     	;# 
   415  0295                     	;# 
   416  0295                     	;# 
   417  0296                     	;# 
   418  0391                     	;# 
   419  0392                     	;# 
   420  0393                     	;# 
   421  039A                     	;# 
   422  039C                     	;# 
   423  039D                     	;# 
   424  039E                     	;# 
   425  039F                     	;# 
   426  0FE4                     	;# 
   427  0FE5                     	;# 
   428  0FE6                     	;# 
   429  0FE7                     	;# 
   430  0FE8                     	;# 
   431  0FE9                     	;# 
   432  0FEA                     	;# 
   433  0FEB                     	;# 
   434  0FED                     	;# 
   435  0FEE                     	;# 
   436  0FEF                     	;# 
   437  0000                     	;# 
   438  0001                     	;# 
   439  0002                     	;# 
   440  0003                     	;# 
   441  0004                     	;# 
   442  0005                     	;# 
   443  0006                     	;# 
   444  0007                     	;# 
   445  0008                     	;# 
   446  0009                     	;# 
   447  000A                     	;# 
   448  000B                     	;# 
   449  000C                     	;# 
   450  000E                     	;# 
   451  0011                     	;# 
   452  0012                     	;# 
   453  0015                     	;# 
   454  0016                     	;# 
   455  0016                     	;# 
   456  0017                     	;# 
   457  0018                     	;# 
   458  0019                     	;# 
   459  001A                     	;# 
   460  001B                     	;# 
   461  001C                     	;# 
   462  001E                     	;# 
   463  001F                     	;# 
   464  008C                     	;# 
   465  008E                     	;# 
   466  0091                     	;# 
   467  0092                     	;# 
   468  0095                     	;# 
   469  0096                     	;# 
   470  0097                     	;# 
   471  0098                     	;# 
   472  0099                     	;# 
   473  009A                     	;# 
   474  009B                     	;# 
   475  009B                     	;# 
   476  009C                     	;# 
   477  009D                     	;# 
   478  009E                     	;# 
   479  010C                     	;# 
   480  010E                     	;# 
   481  0111                     	;# 
   482  0112                     	;# 
   483  0113                     	;# 
   484  0114                     	;# 
   485  0115                     	;# 
   486  0116                     	;# 
   487  0117                     	;# 
   488  0118                     	;# 
   489  0119                     	;# 
   490  011A                     	;# 
   491  011B                     	;# 
   492  011D                     	;# 
   493  011D                     	;# 
   494  018C                     	;# 
   495  018E                     	;# 
   496  0191                     	;# 
   497  0191                     	;# 
   498  0192                     	;# 
   499  0193                     	;# 
   500  0193                     	;# 
   501  0193                     	;# 
   502  0194                     	;# 
   503  0195                     	;# 
   504  0196                     	;# 
   505  0199                     	;# 
   506  019A                     	;# 
   507  019B                     	;# 
   508  019B                     	;# 
   509  019B                     	;# 
   510  019B                     	;# 
   511  019C                     	;# 
   512  019C                     	;# 
   513  019D                     	;# 
   514  019E                     	;# 
   515  019F                     	;# 
   516  020C                     	;# 
   517  020E                     	;# 
   518  0211                     	;# 
   519  0211                     	;# 
   520  0212                     	;# 
   521  0212                     	;# 
   522  0213                     	;# 
   523  0213                     	;# 
   524  0214                     	;# 
   525  0214                     	;# 
   526  0215                     	;# 
   527  0215                     	;# 
   528  0215                     	;# 
   529  0216                     	;# 
   530  0216                     	;# 
   531  0217                     	;# 
   532  0217                     	;# 
   533  0291                     	;# 
   534  0291                     	;# 
   535  0292                     	;# 
   536  0293                     	;# 
   537  0294                     	;# 
   538  0295                     	;# 
   539  0295                     	;# 
   540  0296                     	;# 
   541  0391                     	;# 
   542  0392                     	;# 
   543  0393                     	;# 
   544  039A                     	;# 
   545  039C                     	;# 
   546  039D                     	;# 
   547  039E                     	;# 
   548  039F                     	;# 
   549  0FE4                     	;# 
   550  0FE5                     	;# 
   551  0FE6                     	;# 
   552  0FE7                     	;# 
   553  0FE8                     	;# 
   554  0FE9                     	;# 
   555  0FEA                     	;# 
   556  0FEB                     	;# 
   557  0FED                     	;# 
   558  0FEE                     	;# 
   559  0FEF                     	;# 
   560  0000                     	;# 
   561  0001                     	;# 
   562  0002                     	;# 
   563  0003                     	;# 
   564  0004                     	;# 
   565  0005                     	;# 
   566  0006                     	;# 
   567  0007                     	;# 
   568  0008                     	;# 
   569  0009                     	;# 
   570  000A                     	;# 
   571  000B                     	;# 
   572  000C                     	;# 
   573  000E                     	;# 
   574  0011                     	;# 
   575  0012                     	;# 
   576  0015                     	;# 
   577  0016                     	;# 
   578  0016                     	;# 
   579  0017                     	;# 
   580  0018                     	;# 
   581  0019                     	;# 
   582  001A                     	;# 
   583  001B                     	;# 
   584  001C                     	;# 
   585  001E                     	;# 
   586  001F                     	;# 
   587  008C                     	;# 
   588  008E                     	;# 
   589  0091                     	;# 
   590  0092                     	;# 
   591  0095                     	;# 
   592  0096                     	;# 
   593  0097                     	;# 
   594  0098                     	;# 
   595  0099                     	;# 
   596  009A                     	;# 
   597  009B                     	;# 
   598  009B                     	;# 
   599  009C                     	;# 
   600  009D                     	;# 
   601  009E                     	;# 
   602  010C                     	;# 
   603  010E                     	;# 
   604  0111                     	;# 
   605  0112                     	;# 
   606  0113                     	;# 
   607  0114                     	;# 
   608  0115                     	;# 
   609  0116                     	;# 
   610  0117                     	;# 
   611  0118                     	;# 
   612  0119                     	;# 
   613  011A                     	;# 
   614  011B                     	;# 
   615  011D                     	;# 
   616  011D                     	;# 
   617  018C                     	;# 
   618  018E                     	;# 
   619  0191                     	;# 
   620  0191                     	;# 
   621  0192                     	;# 
   622  0193                     	;# 
   623  0193                     	;# 
   624  0193                     	;# 
   625  0194                     	;# 
   626  0195                     	;# 
   627  0196                     	;# 
   628  0199                     	;# 
   629  019A                     	;# 
   630  019B                     	;# 
   631  019B                     	;# 
   632  019B                     	;# 
   633  019B                     	;# 
   634  019C                     	;# 
   635  019C                     	;# 
   636  019D                     	;# 
   637  019E                     	;# 
   638  019F                     	;# 
   639  020C                     	;# 
   640  020E                     	;# 
   641  0211                     	;# 
   642  0211                     	;# 
   643  0212                     	;# 
   644  0212                     	;# 
   645  0213                     	;# 
   646  0213                     	;# 
   647  0214                     	;# 
   648  0214                     	;# 
   649  0215                     	;# 
   650  0215                     	;# 
   651  0215                     	;# 
   652  0216                     	;# 
   653  0216                     	;# 
   654  0217                     	;# 
   655  0217                     	;# 
   656  0291                     	;# 
   657  0291                     	;# 
   658  0292                     	;# 
   659  0293                     	;# 
   660  0294                     	;# 
   661  0295                     	;# 
   662  0295                     	;# 
   663  0296                     	;# 
   664  0391                     	;# 
   665  0392                     	;# 
   666  0393                     	;# 
   667  039A                     	;# 
   668  039C                     	;# 
   669  039D                     	;# 
   670  039E                     	;# 
   671  039F                     	;# 
   672  0FE4                     	;# 
   673  0FE5                     	;# 
   674  0FE6                     	;# 
   675  0FE7                     	;# 
   676  0FE8                     	;# 
   677  0FE9                     	;# 
   678  0FEA                     	;# 
   679  0FEB                     	;# 
   680  0FED                     	;# 
   681  0FEE                     	;# 
   682  0FEF                     	;# 
   683  0000                     	;# 
   684  0001                     	;# 
   685  0002                     	;# 
   686  0003                     	;# 
   687  0004                     	;# 
   688  0005                     	;# 
   689  0006                     	;# 
   690  0007                     	;# 
   691  0008                     	;# 
   692  0009                     	;# 
   693  000A                     	;# 
   694  000B                     	;# 
   695  000C                     	;# 
   696  000E                     	;# 
   697  0011                     	;# 
   698  0012                     	;# 
   699  0015                     	;# 
   700  0016                     	;# 
   701  0016                     	;# 
   702  0017                     	;# 
   703  0018                     	;# 
   704  0019                     	;# 
   705  001A                     	;# 
   706  001B                     	;# 
   707  001C                     	;# 
   708  001E                     	;# 
   709  001F                     	;# 
   710  008C                     	;# 
   711  008E                     	;# 
   712  0091                     	;# 
   713  0092                     	;# 
   714  0095                     	;# 
   715  0096                     	;# 
   716  0097                     	;# 
   717  0098                     	;# 
   718  0099                     	;# 
   719  009A                     	;# 
   720  009B                     	;# 
   721  009B                     	;# 
   722  009C                     	;# 
   723  009D                     	;# 
   724  009E                     	;# 
   725  010C                     	;# 
   726  010E                     	;# 
   727  0111                     	;# 
   728  0112                     	;# 
   729  0113                     	;# 
   730  0114                     	;# 
   731  0115                     	;# 
   732  0116                     	;# 
   733  0117                     	;# 
   734  0118                     	;# 
   735  0119                     	;# 
   736  011A                     	;# 
   737  011B                     	;# 
   738  011D                     	;# 
   739  011D                     	;# 
   740  018C                     	;# 
   741  018E                     	;# 
   742  0191                     	;# 
   743  0191                     	;# 
   744  0192                     	;# 
   745  0193                     	;# 
   746  0193                     	;# 
   747  0193                     	;# 
   748  0194                     	;# 
   749  0195                     	;# 
   750  0196                     	;# 
   751  0199                     	;# 
   752  019A                     	;# 
   753  019B                     	;# 
   754  019B                     	;# 
   755  019B                     	;# 
   756  019B                     	;# 
   757  019C                     	;# 
   758  019C                     	;# 
   759  019D                     	;# 
   760  019E                     	;# 
   761  019F                     	;# 
   762  020C                     	;# 
   763  020E                     	;# 
   764  0211                     	;# 
   765  0211                     	;# 
   766  0212                     	;# 
   767  0212                     	;# 
   768  0213                     	;# 
   769  0213                     	;# 
   770  0214                     	;# 
   771  0214                     	;# 
   772  0215                     	;# 
   773  0215                     	;# 
   774  0215                     	;# 
   775  0216                     	;# 
   776  0216                     	;# 
   777  0217                     	;# 
   778  0217                     	;# 
   779  0291                     	;# 
   780  0291                     	;# 
   781  0292                     	;# 
   782  0293                     	;# 
   783  0294                     	;# 
   784  0295                     	;# 
   785  0295                     	;# 
   786  0296                     	;# 
   787  0391                     	;# 
   788  0392                     	;# 
   789  0393                     	;# 
   790  039A                     	;# 
   791  039C                     	;# 
   792  039D                     	;# 
   793  039E                     	;# 
   794  039F                     	;# 
   795  0FE4                     	;# 
   796  0FE5                     	;# 
   797  0FE6                     	;# 
   798  0FE7                     	;# 
   799  0FE8                     	;# 
   800  0FE9                     	;# 
   801  0FEA                     	;# 
   802  0FEB                     	;# 
   803  0FED                     	;# 
   804  0FEE                     	;# 
   805  0FEF                     	;# 
   806  0000                     	;# 
   807  0001                     	;# 
   808  0002                     	;# 
   809  0003                     	;# 
   810  0004                     	;# 
   811  0005                     	;# 
   812  0006                     	;# 
   813  0007                     	;# 
   814  0008                     	;# 
   815  0009                     	;# 
   816  000A                     	;# 
   817  000B                     	;# 
   818  000C                     	;# 
   819  000E                     	;# 
   820  0011                     	;# 
   821  0012                     	;# 
   822  0015                     	;# 
   823  0016                     	;# 
   824  0016                     	;# 
   825  0017                     	;# 
   826  0018                     	;# 
   827  0019                     	;# 
   828  001A                     	;# 
   829  001B                     	;# 
   830  001C                     	;# 
   831  001E                     	;# 
   832  001F                     	;# 
   833  008C                     	;# 
   834  008E                     	;# 
   835  0091                     	;# 
   836  0092                     	;# 
   837  0095                     	;# 
   838  0096                     	;# 
   839  0097                     	;# 
   840  0098                     	;# 
   841  0099                     	;# 
   842  009A                     	;# 
   843  009B                     	;# 
   844  009B                     	;# 
   845  009C                     	;# 
   846  009D                     	;# 
   847  009E                     	;# 
   848  010C                     	;# 
   849  010E                     	;# 
   850  0111                     	;# 
   851  0112                     	;# 
   852  0113                     	;# 
   853  0114                     	;# 
   854  0115                     	;# 
   855  0116                     	;# 
   856  0117                     	;# 
   857  0118                     	;# 
   858  0119                     	;# 
   859  011A                     	;# 
   860  011B                     	;# 
   861  011D                     	;# 
   862  011D                     	;# 
   863  018C                     	;# 
   864  018E                     	;# 
   865  0191                     	;# 
   866  0191                     	;# 
   867  0192                     	;# 
   868  0193                     	;# 
   869  0193                     	;# 
   870  0193                     	;# 
   871  0194                     	;# 
   872  0195                     	;# 
   873  0196                     	;# 
   874  0199                     	;# 
   875  019A                     	;# 
   876  019B                     	;# 
   877  019B                     	;# 
   878  019B                     	;# 
   879  019B                     	;# 
   880  019C                     	;# 
   881  019C                     	;# 
   882  019D                     	;# 
   883  019E                     	;# 
   884  019F                     	;# 
   885  020C                     	;# 
   886  020E                     	;# 
   887  0211                     	;# 
   888  0211                     	;# 
   889  0212                     	;# 
   890  0212                     	;# 
   891  0213                     	;# 
   892  0213                     	;# 
   893  0214                     	;# 
   894  0214                     	;# 
   895  0215                     	;# 
   896  0215                     	;# 
   897  0215                     	;# 
   898  0216                     	;# 
   899  0216                     	;# 
   900  0217                     	;# 
   901  0217                     	;# 
   902  0291                     	;# 
   903  0291                     	;# 
   904  0292                     	;# 
   905  0293                     	;# 
   906  0294                     	;# 
   907  0295                     	;# 
   908  0295                     	;# 
   909  0296                     	;# 
   910  0391                     	;# 
   911  0392                     	;# 
   912  0393                     	;# 
   913  039A                     	;# 
   914  039C                     	;# 
   915  039D                     	;# 
   916  039E                     	;# 
   917  039F                     	;# 
   918  0FE4                     	;# 
   919  0FE5                     	;# 
   920  0FE6                     	;# 
   921  0FE7                     	;# 
   922  0FE8                     	;# 
   923  0FE9                     	;# 
   924  0FEA                     	;# 
   925  0FEB                     	;# 
   926  0FED                     	;# 
   927  0FEE                     	;# 
   928  0FEF                     	;# 
   929  0000                     	;# 
   930  0001                     	;# 
   931  0002                     	;# 
   932  0003                     	;# 
   933  0004                     	;# 
   934  0005                     	;# 
   935  0006                     	;# 
   936  0007                     	;# 
   937  0008                     	;# 
   938  0009                     	;# 
   939  000A                     	;# 
   940  000B                     	;# 
   941  000C                     	;# 
   942  000E                     	;# 
   943  0011                     	;# 
   944  0012                     	;# 
   945  0015                     	;# 
   946  0016                     	;# 
   947  0016                     	;# 
   948  0017                     	;# 
   949  0018                     	;# 
   950  0019                     	;# 
   951  001A                     	;# 
   952  001B                     	;# 
   953  001C                     	;# 
   954  001E                     	;# 
   955  001F                     	;# 
   956  008C                     	;# 
   957  008E                     	;# 
   958  0091                     	;# 
   959  0092                     	;# 
   960  0095                     	;# 
   961  0096                     	;# 
   962  0097                     	;# 
   963  0098                     	;# 
   964  0099                     	;# 
   965  009A                     	;# 
   966  009B                     	;# 
   967  009B                     	;# 
   968  009C                     	;# 
   969  009D                     	;# 
   970  009E                     	;# 
   971  010C                     	;# 
   972  010E                     	;# 
   973  0111                     	;# 
   974  0112                     	;# 
   975  0113                     	;# 
   976  0114                     	;# 
   977  0115                     	;# 
   978  0116                     	;# 
   979  0117                     	;# 
   980  0118                     	;# 
   981  0119                     	;# 
   982  011A                     	;# 
   983  011B                     	;# 
   984  011D                     	;# 
   985  011D                     	;# 
   986  018C                     	;# 
   987  018E                     	;# 
   988  0191                     	;# 
   989  0191                     	;# 
   990  0192                     	;# 
   991  0193                     	;# 
   992  0193                     	;# 
   993  0193                     	;# 
   994  0194                     	;# 
   995  0195                     	;# 
   996  0196                     	;# 
   997  0199                     	;# 
   998  019A                     	;# 
   999  019B                     	;# 
  1000  019B                     	;# 
  1001  019B                     	;# 
  1002  019B                     	;# 
  1003  019C                     	;# 
  1004  019C                     	;# 
  1005  019D                     	;# 
  1006  019E                     	;# 
  1007  019F                     	;# 
  1008  020C                     	;# 
  1009  020E                     	;# 
  1010  0211                     	;# 
  1011  0211                     	;# 
  1012  0212                     	;# 
  1013  0212                     	;# 
  1014  0213                     	;# 
  1015  0213                     	;# 
  1016  0214                     	;# 
  1017  0214                     	;# 
  1018  0215                     	;# 
  1019  0215                     	;# 
  1020  0215                     	;# 
  1021  0216                     	;# 
  1022  0216                     	;# 
  1023  0217                     	;# 
  1024  0217                     	;# 
  1025  0291                     	;# 
  1026  0291                     	;# 
  1027  0292                     	;# 
  1028  0293                     	;# 
  1029  0294                     	;# 
  1030  0295                     	;# 
  1031  0295                     	;# 
  1032  0296                     	;# 
  1033  0391                     	;# 
  1034  0392                     	;# 
  1035  0393                     	;# 
  1036  039A                     	;# 
  1037  039C                     	;# 
  1038  039D                     	;# 
  1039  039E                     	;# 
  1040  039F                     	;# 
  1041  0FE4                     	;# 
  1042  0FE5                     	;# 
  1043  0FE6                     	;# 
  1044  0FE7                     	;# 
  1045  0FE8                     	;# 
  1046  0FE9                     	;# 
  1047  0FEA                     	;# 
  1048  0FEB                     	;# 
  1049  0FED                     	;# 
  1050  0FEE                     	;# 
  1051  0FEF                     	;# 
  1052  0000                     	;# 
  1053  0001                     	;# 
  1054  0002                     	;# 
  1055  0003                     	;# 
  1056  0004                     	;# 
  1057  0005                     	;# 
  1058  0006                     	;# 
  1059  0007                     	;# 
  1060  0008                     	;# 
  1061  0009                     	;# 
  1062  000A                     	;# 
  1063  000B                     	;# 
  1064  000C                     	;# 
  1065  000E                     	;# 
  1066  0011                     	;# 
  1067  0012                     	;# 
  1068  0015                     	;# 
  1069  0016                     	;# 
  1070  0016                     	;# 
  1071  0017                     	;# 
  1072  0018                     	;# 
  1073  0019                     	;# 
  1074  001A                     	;# 
  1075  001B                     	;# 
  1076  001C                     	;# 
  1077  001E                     	;# 
  1078  001F                     	;# 
  1079  008C                     	;# 
  1080  008E                     	;# 
  1081  0091                     	;# 
  1082  0092                     	;# 
  1083  0095                     	;# 
  1084  0096                     	;# 
  1085  0097                     	;# 
  1086  0098                     	;# 
  1087  0099                     	;# 
  1088  009A                     	;# 
  1089  009B                     	;# 
  1090  009B                     	;# 
  1091  009C                     	;# 
  1092  009D                     	;# 
  1093  009E                     	;# 
  1094  010C                     	;# 
  1095  010E                     	;# 
  1096  0111                     	;# 
  1097  0112                     	;# 
  1098  0113                     	;# 
  1099  0114                     	;# 
  1100  0115                     	;# 
  1101  0116                     	;# 
  1102  0117                     	;# 
  1103  0118                     	;# 
  1104  0119                     	;# 
  1105  011A                     	;# 
  1106  011B                     	;# 
  1107  011D                     	;# 
  1108  011D                     	;# 
  1109  018C                     	;# 
  1110  018E                     	;# 
  1111  0191                     	;# 
  1112  0191                     	;# 
  1113  0192                     	;# 
  1114  0193                     	;# 
  1115  0193                     	;# 
  1116  0193                     	;# 
  1117  0194                     	;# 
  1118  0195                     	;# 
  1119  0196                     	;# 
  1120  0199                     	;# 
  1121  019A                     	;# 
  1122  019B                     	;# 
  1123  019B                     	;# 
  1124  019B                     	;# 
  1125  019B                     	;# 
  1126  019C                     	;# 
  1127  019C                     	;# 
  1128  019D                     	;# 
  1129  019E                     	;# 
  1130  019F                     	;# 
  1131  020C                     	;# 
  1132  020E                     	;# 
  1133  0211                     	;# 
  1134  0211                     	;# 
  1135  0212                     	;# 
  1136  0212                     	;# 
  1137  0213                     	;# 
  1138  0213                     	;# 
  1139  0214                     	;# 
  1140  0214                     	;# 
  1141  0215                     	;# 
  1142  0215                     	;# 
  1143  0215                     	;# 
  1144  0216                     	;# 
  1145  0216                     	;# 
  1146  0217                     	;# 
  1147  0217                     	;# 
  1148  0291                     	;# 
  1149  0291                     	;# 
  1150  0292                     	;# 
  1151  0293                     	;# 
  1152  0294                     	;# 
  1153  0295                     	;# 
  1154  0295                     	;# 
  1155  0296                     	;# 
  1156  0391                     	;# 
  1157  0392                     	;# 
  1158  0393                     	;# 
  1159  039A                     	;# 
  1160  039C                     	;# 
  1161  039D                     	;# 
  1162  039E                     	;# 
  1163  039F                     	;# 
  1164  0FE4                     	;# 
  1165  0FE5                     	;# 
  1166  0FE6                     	;# 
  1167  0FE7                     	;# 
  1168  0FE8                     	;# 
  1169  0FE9                     	;# 
  1170  0FEA                     	;# 
  1171  0FEB                     	;# 
  1172  0FED                     	;# 
  1173  0FEE                     	;# 
  1174  0FEF                     	;# 
  1175  000E                     _PORTC	set	14
  1176  0015                     _TMR0	set	21
  1177  005F                     _GIE	set	95
  1178  005E                     _PEIE	set	94
  1179  0065                     _RA5	set	101
  1180  008D                     _RCIF	set	141
  1181  005D                     _TMR0IE	set	93
  1182  005A                     _TMR0IF	set	90
  1183  008C                     _TXIF	set	140
  1184  009D                     _ADCON0	set	157
  1185  009E                     _ADCON1	set	158
  1186  009C                     _ADRESH	set	156
  1187  009B                     _ADRESL	set	155
  1188  0095                     _OPTION_REGbits	set	149
  1189  0099                     _OSCCON	set	153
  1190  009A                     _OSCSTAT	set	154
  1191  0098                     _OSCTUNE	set	152
  1192  008C                     _TRISA	set	140
  1193  008E                     _TRISC	set	142
  1194  04E9                     _ADGO	set	1257
  1195  04A8                     _PS0	set	1192
  1196  04A9                     _PS1	set	1193
  1197  04AA                     _PS2	set	1194
  1198  04AB                     _PSA	set	1195
  1199  048D                     _RCIE	set	1165
  1200  04AD                     _TMR0CS	set	1197
  1201  048C                     _TXIE	set	1164
  1202  011D                     _APFCON	set	285
  1203  010C                     _LATA	set	268
  1204  010E                     _LATC	set	270
  1205  08EF                     _RXDTSEL	set	2287
  1206  08EA                     _TXCKSEL	set	2282
  1207  018C                     _ANSELA	set	396
  1208  018E                     _ANSELC	set	398
  1209  0199                     _RCREG	set	409
  1210  019C                     _SPBRGH	set	412
  1211  019B                     _SPBRGL	set	411
  1212  019A                     _TXREG	set	410
  1213  0CFB                     _BRG16	set	3323
  1214  0CF2                     _BRGH	set	3314
  1215  0CEC                     _CREN	set	3308
  1216  0CE9                     _OERR	set	3305
  1217  0CEF                     _SPEN	set	3311
  1218  0CF4                     _SYNC	set	3316
  1219  0CF5                     _TXEN	set	3317
  1220  020C                     _WPUA	set	524
  1221  020E                     _WPUC	set	526
  1222  039A                     _CLKRCON	set	922
  1223                           
  1224                           ; #config settings
  1225  0000                     
  1226                           	psect	cinit
  1227  005A                     start_initialization:	
  1228  005A                     __initialization:	
  1229                           
  1230                           ; Clear objects allocated to COMMON
  1231  005A  01F0               	clrf	__pbssCOMMON& (0+127)
  1232  005B  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1233  005C  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1234  005D  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1235  005E  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1236                           
  1237                           ; Clear objects allocated to BANK0
  1238  005F  3020               	movlw	low __pbssBANK0
  1239  0060  0084               	movwf	4
  1240  0061  3000               	movlw	high __pbssBANK0
  1241  0062  0085               	movwf	5
  1242  0063  302C               	movlw	44
  1243  0064  2388               	fcall	clear_ram0
  1244  0065                     end_of_initialization:	
  1245                           ;End of C runtime variable initialization code
  1246                           
  1247  0065                     __end_of__initialization:	
  1248  0065  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1249  0066  0020               	movlb	0
  1250  0067  29CE               	ljmp	_main	;jump to C main() function
  1251                           
  1252                           	psect	bssCOMMON
  1253  0070                     __pbssCOMMON:	
  1254  0070                     _TIMER0_timeout:	
  1255  0070                     	ds	2
  1256  0072                     _USART_tx_flag:	
  1257  0072                     	ds	1
  1258  0073                     _USART_tx_index:	
  1259  0073                     	ds	1
  1260  0074                     _USART_tx_length:	
  1261  0074                     	ds	1
  1262                           
  1263                           	psect	bssBANK0
  1264  0020                     __pbssBANK0:	
  1265  0020                     _USART_rx_data:	
  1266  0020                     	ds	15
  1267  002F                     _USART_tx_data:	
  1268  002F                     	ds	15
  1269  003E                     _TIMER0_flag:	
  1270  003E                     	ds	1
  1271  003F                     _USART_rx_flag:	
  1272  003F                     	ds	1
  1273  0040                     _USART_rx_index:	
  1274  0040                     	ds	1
  1275  0041                     _mess_rec_size:	
  1276  0041                     	ds	1
  1277  0042                     _mess_rec:	
  1278  0042                     	ds	10
  1279                           
  1280                           	psect	clrtext
  1281  0388                     clear_ram0:	
  1282                           ;	Called with FSR0 containing the base address, and
  1283                           ;	WREG with the size to clear
  1284                           
  1285  0388  0064               	clrwdt	;clear the watchdog before getting into this loop
  1286  0389                     clrloop0:	
  1287  0389  0180               	clrf	0	;clear RAM location pointed to by FSR
  1288  038A  3101               	addfsr 0,1
  1289  038B  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1290  038C  2B89               	goto	clrloop0	;have we reached the end yet?
  1291  038D  3400               	retlw	0	;all done for this memory range, return
  1292                           
  1293                           	psect	cstackCOMMON
  1294  0075                     __pcstackCOMMON:	
  1295  0075                     ?_OSCILLATOR_Initialize:	
  1296  0075                     ?_setup_TMR0:	
  1297                           ; 1 bytes @ 0x0
  1298                           
  1299  0075                     ?_start_TX_USART_ISR:	
  1300                           ; 1 bytes @ 0x0
  1301                           
  1302  0075                     ?_start_RX_USART_ISR:	
  1303                           ; 1 bytes @ 0x0
  1304                           
  1305  0075                     ?_start_RCM:	
  1306                           ; 1 bytes @ 0x0
  1307                           
  1308  0075                     ?_setup_ADC:	
  1309                           ; 1 bytes @ 0x0
  1310                           
  1311  0075                     ?_mess_handler:	
  1312                           ; 1 bytes @ 0x0
  1313                           
  1314  0075                     ?_stop_TMR0_ISR:	
  1315                           ; 1 bytes @ 0x0
  1316                           
  1317  0075                     ??_stop_TMR0_ISR:	
  1318                           ; 1 bytes @ 0x0
  1319                           
  1320  0075                     ?_start_TMR0_ISR:	
  1321                           ; 1 bytes @ 0x0
  1322                           
  1323  0075                     ??_start_TMR0_ISR:	
  1324                           ; 1 bytes @ 0x0
  1325                           
  1326  0075                     ?_config_ASIC:	
  1327                           ; 1 bytes @ 0x0
  1328                           
  1329  0075                     ?_read_ADC_channels:	
  1330                           ; 1 bytes @ 0x0
  1331                           
  1332  0075                     ?_measure_Impedance:	
  1333                           ; 1 bytes @ 0x0
  1334                           
  1335  0075                     ?_PIN_MANAGER_Initialize:	
  1336                           ; 1 bytes @ 0x0
  1337                           
  1338  0075                     ?_SYSTEM_Initialize:	
  1339                           ; 1 bytes @ 0x0
  1340                           
  1341  0075                     ?_main:	
  1342                           ; 1 bytes @ 0x0
  1343                           
  1344  0075                     ?_isr:	
  1345                           ; 1 bytes @ 0x0
  1346                           
  1347  0075                     ?i1_start_RX_USART_ISR:	
  1348                           ; 1 bytes @ 0x0
  1349                           
  1350  0075                     ??i1_start_RX_USART_ISR:	
  1351                           ; 1 bytes @ 0x0
  1352                           
  1353                           
  1354                           ; 1 bytes @ 0x0
  1355  0075                     	ds	2
  1356  0077                     start_TMR0_ISR@val:	
  1357                           
  1358                           ; 1 bytes @ 0x2
  1359  0077                     	ds	1
  1360  0078                     ??_isr:	
  1361                           
  1362                           ; 1 bytes @ 0x3
  1363  0078                     	ds	2
  1364                           
  1365                           	psect	cstackBANK0
  1366  004C                     __pcstackBANK0:	
  1367  004C                     ??_OSCILLATOR_Initialize:	
  1368  004C                     ??_setup_TMR0:	
  1369                           ; 1 bytes @ 0x0
  1370                           
  1371  004C                     ??_start_TX_USART_ISR:	
  1372                           ; 1 bytes @ 0x0
  1373                           
  1374  004C                     ??_start_RX_USART_ISR:	
  1375                           ; 1 bytes @ 0x0
  1376                           
  1377  004C                     ??_start_RCM:	
  1378                           ; 1 bytes @ 0x0
  1379                           
  1380  004C                     ??_setup_ADC:	
  1381                           ; 1 bytes @ 0x0
  1382                           
  1383  004C                     ??_PIN_MANAGER_Initialize:	
  1384                           ; 1 bytes @ 0x0
  1385                           
  1386  004C                     ??_SYSTEM_Initialize:	
  1387                           ; 1 bytes @ 0x0
  1388                           
  1389  004C                     ?_VIN_config:	
  1390                           ; 1 bytes @ 0x0
  1391                           
  1392  004C                     ?_lputs_ISR:	
  1393                           ; 1 bytes @ 0x0
  1394                           
  1395  004C                     ?_ADC_2:	
  1396                           ; 1 bytes @ 0x0
  1397                           
  1398  004C                     ?_ADC_4:	
  1399                           ; 2 bytes @ 0x0
  1400                           
  1401  004C                     ?_ADC_5:	
  1402                           ; 2 bytes @ 0x0
  1403                           
  1404  004C                     lputs_ISR@length:	
  1405                           ; 2 bytes @ 0x0
  1406                           
  1407  004C                     VIN_config@conf:	
  1408                           ; 1 bytes @ 0x0
  1409                           
  1410                           
  1411                           ; 6 bytes @ 0x0
  1412  004C                     	ds	1
  1413  004D                     ??_lputs_ISR:	
  1414                           
  1415                           ; 1 bytes @ 0x1
  1416  004D                     	ds	1
  1417  004E                     ??_ADC_2:	
  1418  004E                     ??_ADC_4:	
  1419                           ; 1 bytes @ 0x2
  1420                           
  1421  004E                     ??_ADC_5:	
  1422                           ; 1 bytes @ 0x2
  1423                           
  1424                           
  1425                           ; 1 bytes @ 0x2
  1426  004E                     	ds	1
  1427  004F                     lputs_ISR@data:	
  1428                           
  1429                           ; 1 bytes @ 0x3
  1430  004F                     	ds	1
  1431  0050                     lputs_ISR@i:	
  1432  0050                     ADC_2@ADC_value:	
  1433                           ; 1 bytes @ 0x4
  1434                           
  1435  0050                     ADC_4@ADC_value:	
  1436                           ; 2 bytes @ 0x4
  1437                           
  1438  0050                     ADC_5@ADC_value:	
  1439                           ; 2 bytes @ 0x4
  1440                           
  1441                           
  1442                           ; 2 bytes @ 0x4
  1443  0050                     	ds	2
  1444  0052                     ??_read_ADC_channels:	
  1445  0052                     ??_VIN_config:	
  1446                           ; 1 bytes @ 0x6
  1447                           
  1448                           
  1449                           ; 1 bytes @ 0x6
  1450  0052                     	ds	1
  1451  0053                     VIN_config@i:	
  1452  0053                     read_ADC_channels@aux:	
  1453                           ; 1 bytes @ 0x7
  1454                           
  1455                           
  1456                           ; 7 bytes @ 0x7
  1457  0053                     	ds	1
  1458  0054                     VIN_config@out:	
  1459                           
  1460                           ; 1 bytes @ 0x8
  1461  0054                     	ds	1
  1462  0055                     ??_config_ASIC:	
  1463  0055                     ??_measure_Impedance:	
  1464                           ; 1 bytes @ 0x9
  1465                           
  1466                           
  1467                           ; 1 bytes @ 0x9
  1468  0055                     	ds	1
  1469  0056                     config_ASIC@asic:	
  1470  0056                     measure_Impedance@aux:	
  1471                           ; 6 bytes @ 0xA
  1472                           
  1473                           
  1474                           ; 13 bytes @ 0xA
  1475  0056                     	ds	4
  1476  005A                     read_ADC_channels@value1:	
  1477                           
  1478                           ; 2 bytes @ 0xE
  1479  005A                     	ds	2
  1480  005C                     read_ADC_channels@value2:	
  1481                           
  1482                           ; 2 bytes @ 0x10
  1483  005C                     	ds	2
  1484  005E                     read_ADC_channels@value3:	
  1485                           
  1486                           ; 2 bytes @ 0x12
  1487  005E                     	ds	5
  1488  0063                     measure_Impedance@value1:	
  1489                           
  1490                           ; 2 bytes @ 0x17
  1491  0063                     	ds	2
  1492  0065                     measure_Impedance@value2:	
  1493                           
  1494                           ; 2 bytes @ 0x19
  1495  0065                     	ds	2
  1496  0067                     measure_Impedance@asic:	
  1497                           
  1498                           ; 6 bytes @ 0x1B
  1499  0067                     	ds	6
  1500  006D                     ??_mess_handler:	
  1501                           
  1502                           ; 1 bytes @ 0x21
  1503  006D                     	ds	1
  1504  006E                     ??_main:	
  1505                           
  1506                           ; 1 bytes @ 0x22
  1507  006E                     	ds	1
  1508  006F                     main@i:	
  1509                           
  1510                           ; 1 bytes @ 0x23
  1511  006F                     	ds	1
  1512                           
  1513                           	psect	maintext
  1514  01CE                     __pmaintext:	
  1515 ;;
  1516 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1517 ;;
  1518 ;; *************** function _main *****************
  1519 ;; Defined at:
  1520 ;;		line 17 in file "main.c"
  1521 ;; Parameters:    Size  Location     Type
  1522 ;;		None
  1523 ;; Auto vars:     Size  Location     Type
  1524 ;;  i               1   35[BANK0 ] unsigned char 
  1525 ;; Return value:  Size  Location     Type
  1526 ;;                  1    wreg      void 
  1527 ;; Registers used:
  1528 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1529 ;; Tracked objects:
  1530 ;;		On entry : B1F/0
  1531 ;;		On exit  : 0/0
  1532 ;;		Unchanged: 0/0
  1533 ;; Data sizes:     COMMON   BANK0   BANK1
  1534 ;;      Params:         0       0       0
  1535 ;;      Locals:         0       1       0
  1536 ;;      Temps:          0       1       0
  1537 ;;      Totals:         0       2       0
  1538 ;;Total ram usage:        2 bytes
  1539 ;; Hardware stack levels required when called:    5
  1540 ;; This function calls:
  1541 ;;		_SYSTEM_Initialize
  1542 ;;		_mess_handler
  1543 ;;		_setup_ADC
  1544 ;;		_setup_TMR0
  1545 ;;		_start_RCM
  1546 ;;		_start_RX_USART_ISR
  1547 ;;		_start_TX_USART_ISR
  1548 ;; This function is called by:
  1549 ;;		Startup code after reset
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552                           
  1553                           
  1554                           ;psect for function _main
  1555  01CE                     _main:	
  1556                           
  1557                           ;main.c: 19: unsigned char i;
  1558                           ;main.c: 21: SYSTEM_Initialize();
  1559                           
  1560                           ;incstack = 0
  1561                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1562  01CE  239E               	fcall	_SYSTEM_Initialize
  1563                           
  1564                           ;main.c: 22: setup_TMR0();
  1565  01CF  2381               	fcall	_setup_TMR0
  1566                           
  1567                           ;main.c: 23: start_TX_USART_ISR();
  1568  01D0  2372               	fcall	_start_TX_USART_ISR
  1569                           
  1570                           ;main.c: 24: start_RX_USART_ISR();
  1571  01D1  2340               	fcall	_start_RX_USART_ISR
  1572                           
  1573                           ;main.c: 25: start_RCM();
  1574  01D2  239A               	fcall	_start_RCM
  1575                           
  1576                           ;main.c: 26: setup_ADC();
  1577  01D3  238E               	fcall	_setup_ADC
  1578                           
  1579                           ;main.c: 28: RA5 = 0;
  1580  01D4  0020               	movlb	0	; select bank0
  1581  01D5  128C               	bcf	12,5	;volatile
  1582                           
  1583                           ;main.c: 29: _delay((unsigned long)((150)*(500000/4000.0)));
  1584  01D6  3019               	movlw	25
  1585  01D7  0020               	movlb	0	; select bank0
  1586  01D8  00EE               	movwf	??_main
  1587  01D9  3058               	movlw	88
  1588  01DA                     u997:	
  1589  01DA  0B89               	decfsz	9,f
  1590  01DB  29DA               	goto	u997
  1591  01DC  0BEE               	decfsz	??_main,f
  1592  01DD  29DA               	goto	u997
  1593  01DE  0000               	nop
  1594                           
  1595                           ;main.c: 30: RA5 = 1;
  1596  01DF  0020               	movlb	0	; select bank0
  1597  01E0  168C               	bsf	12,5	;volatile
  1598  01E1                     l108:	
  1599                           ;main.c: 35: while(1) {
  1600                           
  1601  01E1  0064               	clrwdt	;# 
  1602                           
  1603                           ;main.c: 39: if (TIMER0_flag) {
  1604  01E2  0020               	movlb	0	; select bank0
  1605  01E3  083E               	movf	_TIMER0_flag,w	;volatile
  1606  01E4  1903               	btfsc	3,2
  1607  01E5  29E1               	goto	l108
  1608                           
  1609                           ;main.c: 40: TIMER0_flag = 0;
  1610  01E6  01BE               	clrf	_TIMER0_flag	;volatile
  1611                           
  1612                           ;main.c: 42: if (USART_rx_index > 10) {
  1613  01E7  300B               	movlw	11
  1614  01E8  0240               	subwf	_USART_rx_index,w	;volatile
  1615  01E9  1C03               	skipc
  1616  01EA  29ED               	goto	l2117
  1617                           
  1618                           ;main.c: 43: USART_rx_index = 0;
  1619  01EB  01C0               	clrf	_USART_rx_index	;volatile
  1620                           
  1621                           ;main.c: 44: continue;
  1622  01EC  29E1               	goto	l108
  1623  01ED                     l2117:	
  1624                           
  1625                           ;main.c: 45: }
  1626                           ;main.c: 47: if(USART_rx_index == 0)
  1627  01ED  0840               	movf	_USART_rx_index,w	;volatile
  1628  01EE  1903               	btfsc	3,2
  1629                           
  1630                           ;main.c: 48: continue;
  1631  01EF  29E1               	goto	l108
  1632                           
  1633                           ;main.c: 51: mess_rec_size = USART_rx_index;
  1634  01F0  0840               	movf	_USART_rx_index,w	;volatile
  1635  01F1  00EE               	movwf	??_main
  1636  01F2  086E               	movf	??_main,w
  1637  01F3  00C1               	movwf	_mess_rec_size	;volatile
  1638                           
  1639                           ;main.c: 53: for (i = 0; i < mess_rec_size; i++)
  1640  01F4  01EF               	clrf	main@i
  1641  01F5                     l2129:	
  1642  01F5  0841               	movf	_mess_rec_size,w	;volatile
  1643  01F6  026F               	subwf	main@i,w
  1644  01F7  1803               	btfsc	3,0
  1645  01F8  2A0A               	goto	l2131
  1646                           
  1647                           ;main.c: 54: mess_rec[i] = USART_rx_data[i];
  1648  01F9  086F               	movf	main@i,w
  1649  01FA  3E20               	addlw	(low (_USART_rx_data| 0))& (0+255)
  1650  01FB  0086               	movwf	6
  1651  01FC  0187               	clrf	7
  1652  01FD  0801               	movf	1,w
  1653  01FE  00EE               	movwf	??_main
  1654  01FF  086F               	movf	main@i,w
  1655  0200  3E42               	addlw	(low (_mess_rec| 0))& (0+255)
  1656  0201  0086               	movwf	6
  1657  0202  0187               	clrf	7
  1658  0203  086E               	movf	??_main,w
  1659  0204  0081               	movwf	1
  1660  0205  3001               	movlw	1
  1661  0206  00EE               	movwf	??_main
  1662  0207  086E               	movf	??_main,w
  1663  0208  07EF               	addwf	main@i,f
  1664  0209  29F5               	goto	l2129
  1665  020A                     l2131:	
  1666                           
  1667                           ;main.c: 57: mess_handler();
  1668  020A  2308               	fcall	_mess_handler
  1669  020B  29E1               	goto	l108
  1670  020C                     __end_of_main:	
  1671                           
  1672                           	psect	text1
  1673  0372                     __ptext1:	
  1674 ;; *************** function _start_TX_USART_ISR *****************
  1675 ;; Defined at:
  1676 ;;		line 100 in file "USART1823.c"
  1677 ;; Parameters:    Size  Location     Type
  1678 ;;		None
  1679 ;; Auto vars:     Size  Location     Type
  1680 ;;		None
  1681 ;; Return value:  Size  Location     Type
  1682 ;;                  1    wreg      void 
  1683 ;; Registers used:
  1684 ;;		wreg, status,2
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMMON   BANK0   BANK1
  1690 ;;      Params:         0       0       0
  1691 ;;      Locals:         0       0       0
  1692 ;;      Temps:          0       0       0
  1693 ;;      Totals:         0       0       0
  1694 ;;Total ram usage:        0 bytes
  1695 ;; Hardware stack levels used:    1
  1696 ;; Hardware stack levels required when called:    2
  1697 ;; This function calls:
  1698 ;;		Nothing
  1699 ;; This function is called by:
  1700 ;;		_main
  1701 ;; This function uses a non-reentrant model
  1702 ;;
  1703                           
  1704                           
  1705                           ;psect for function _start_TX_USART_ISR
  1706  0372                     _start_TX_USART_ISR:	
  1707                           
  1708                           ;USART1823.c: 102: { BRGH = 1; BRG16 = 1; SPBRGH = 0; SPBRGL = 12; };
  1709                           
  1710                           ;incstack = 0
  1711                           ; Regs used in _start_TX_USART_ISR: [wreg+status,2]
  1712  0372  0023               	movlb	3	; select bank3
  1713  0373  151E               	bsf	30,2	;volatile
  1714  0374  159F               	bsf	31,3	;volatile
  1715  0375  019C               	clrf	28	;volatile
  1716  0376  300C               	movlw	12
  1717  0377  009B               	movwf	27	;volatile
  1718                           
  1719                           ;USART1823.c: 103: SYNC = 0;
  1720  0378  121E               	bcf	30,4	;volatile
  1721                           
  1722                           ;USART1823.c: 104: SPEN = 1;
  1723  0379  179D               	bsf	29,7	;volatile
  1724                           
  1725                           ;USART1823.c: 105: TXEN = 1;
  1726  037A  169E               	bsf	30,5	;volatile
  1727                           
  1728                           ;USART1823.c: 107: USART_tx_flag = 0;
  1729  037B  01F2               	clrf	_USART_tx_flag	;volatile
  1730                           
  1731                           ;USART1823.c: 108: USART_tx_index = 0;
  1732  037C  01F3               	clrf	_USART_tx_index	;volatile
  1733                           
  1734                           ;USART1823.c: 109: USART_tx_length = 0;
  1735  037D  01F4               	clrf	_USART_tx_length	;volatile
  1736                           
  1737                           ;USART1823.c: 112: PEIE = 1;
  1738  037E  170B               	bsf	11,6	;volatile
  1739                           
  1740                           ;USART1823.c: 113: GIE = 1;
  1741  037F  178B               	bsf	11,7	;volatile
  1742  0380  0008               	return
  1743  0381                     __end_of_start_TX_USART_ISR:	
  1744                           
  1745                           	psect	text2
  1746  0340                     __ptext2:	
  1747 ;; *************** function _start_RX_USART_ISR *****************
  1748 ;; Defined at:
  1749 ;;		line 82 in file "USART1823.c"
  1750 ;; Parameters:    Size  Location     Type
  1751 ;;		None
  1752 ;; Auto vars:     Size  Location     Type
  1753 ;;		None
  1754 ;; Return value:  Size  Location     Type
  1755 ;;                  1    wreg      void 
  1756 ;; Registers used:
  1757 ;;		wreg, status,2
  1758 ;; Tracked objects:
  1759 ;;		On entry : 0/0
  1760 ;;		On exit  : 0/0
  1761 ;;		Unchanged: 0/0
  1762 ;; Data sizes:     COMMON   BANK0   BANK1
  1763 ;;      Params:         0       0       0
  1764 ;;      Locals:         0       0       0
  1765 ;;      Temps:          0       0       0
  1766 ;;      Totals:         0       0       0
  1767 ;;Total ram usage:        0 bytes
  1768 ;; Hardware stack levels used:    1
  1769 ;; Hardware stack levels required when called:    2
  1770 ;; This function calls:
  1771 ;;		Nothing
  1772 ;; This function is called by:
  1773 ;;		_main
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776                           
  1777                           
  1778                           ;psect for function _start_RX_USART_ISR
  1779  0340                     _start_RX_USART_ISR:	
  1780                           
  1781                           ;USART1823.c: 85: { BRGH = 1; BRG16 = 1; SPBRGH = 0; SPBRGL = 12; };
  1782                           
  1783                           ;incstack = 0
  1784                           ; Regs used in _start_RX_USART_ISR: [wreg+status,2]
  1785  0340  0023               	movlb	3	; select bank3
  1786  0341  151E               	bsf	30,2	;volatile
  1787  0342  159F               	bsf	31,3	;volatile
  1788  0343  019C               	clrf	28	;volatile
  1789  0344  300C               	movlw	12
  1790  0345  009B               	movwf	27	;volatile
  1791                           
  1792                           ;USART1823.c: 87: SYNC = 0;
  1793  0346  121E               	bcf	30,4	;volatile
  1794                           
  1795                           ;USART1823.c: 88: SPEN = 1;
  1796  0347  179D               	bsf	29,7	;volatile
  1797                           
  1798                           ;USART1823.c: 89: CREN = 1;
  1799  0348  161D               	bsf	29,4	;volatile
  1800                           
  1801                           ;USART1823.c: 91: USART_rx_flag = 0;
  1802  0349  0020               	movlb	0	; select bank0
  1803  034A  01BF               	clrf	_USART_rx_flag	;volatile
  1804                           
  1805                           ;USART1823.c: 92: USART_rx_index = 0;
  1806  034B  01C0               	clrf	_USART_rx_index	;volatile
  1807                           
  1808                           ;USART1823.c: 94: RCIE = 1;
  1809  034C  0021               	movlb	1	; select bank1
  1810  034D  1691               	bsf	17,5	;volatile
  1811                           
  1812                           ;USART1823.c: 95: PEIE = 1;
  1813  034E  170B               	bsf	11,6	;volatile
  1814                           
  1815                           ;USART1823.c: 96: GIE = 1;
  1816  034F  178B               	bsf	11,7	;volatile
  1817  0350  0008               	return
  1818  0351                     __end_of_start_RX_USART_ISR:	
  1819                           
  1820                           	psect	text3
  1821  039A                     __ptext3:	
  1822 ;; *************** function _start_RCM *****************
  1823 ;; Defined at:
  1824 ;;		line 4 in file "RCM1823.c"
  1825 ;; Parameters:    Size  Location     Type
  1826 ;;		None
  1827 ;; Auto vars:     Size  Location     Type
  1828 ;;		None
  1829 ;; Return value:  Size  Location     Type
  1830 ;;                  1    wreg      void 
  1831 ;; Registers used:
  1832 ;;		wreg
  1833 ;; Tracked objects:
  1834 ;;		On entry : 0/0
  1835 ;;		On exit  : 0/0
  1836 ;;		Unchanged: 0/0
  1837 ;; Data sizes:     COMMON   BANK0   BANK1
  1838 ;;      Params:         0       0       0
  1839 ;;      Locals:         0       0       0
  1840 ;;      Temps:          0       0       0
  1841 ;;      Totals:         0       0       0
  1842 ;;Total ram usage:        0 bytes
  1843 ;; Hardware stack levels used:    1
  1844 ;; Hardware stack levels required when called:    2
  1845 ;; This function calls:
  1846 ;;		Nothing
  1847 ;; This function is called by:
  1848 ;;		_main
  1849 ;; This function uses a non-reentrant model
  1850 ;;
  1851                           
  1852                           
  1853                           ;psect for function _start_RCM
  1854  039A                     _start_RCM:	
  1855                           
  1856                           ;RCM1823.c: 6: CLKRCON = 0b11010000;
  1857                           
  1858                           ;incstack = 0
  1859                           ; Regs used in _start_RCM: [wreg]
  1860  039A  30D0               	movlw	208
  1861  039B  0027               	movlb	7	; select bank7
  1862  039C  009A               	movwf	26	;volatile
  1863  039D  0008               	return
  1864  039E                     __end_of_start_RCM:	
  1865                           
  1866                           	psect	text4
  1867  0381                     __ptext4:	
  1868 ;; *************** function _setup_TMR0 *****************
  1869 ;; Defined at:
  1870 ;;		line 10 in file "TMR0.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;		None
  1873 ;; Auto vars:     Size  Location     Type
  1874 ;;		None
  1875 ;; Return value:  Size  Location     Type
  1876 ;;                  1    wreg      void 
  1877 ;; Registers used:
  1878 ;;		None
  1879 ;; Tracked objects:
  1880 ;;		On entry : 0/0
  1881 ;;		On exit  : 0/0
  1882 ;;		Unchanged: 0/0
  1883 ;; Data sizes:     COMMON   BANK0   BANK1
  1884 ;;      Params:         0       0       0
  1885 ;;      Locals:         0       0       0
  1886 ;;      Temps:          0       0       0
  1887 ;;      Totals:         0       0       0
  1888 ;;Total ram usage:        0 bytes
  1889 ;; Hardware stack levels used:    1
  1890 ;; Hardware stack levels required when called:    2
  1891 ;; This function calls:
  1892 ;;		Nothing
  1893 ;; This function is called by:
  1894 ;;		_main
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897                           
  1898                           
  1899                           ;psect for function _setup_TMR0
  1900  0381                     _setup_TMR0:	
  1901                           
  1902                           ;TMR0.c: 13: PS2 = 0; PS1 = 1; PS0 = 0;
  1903                           
  1904                           ;incstack = 0
  1905                           ; Regs used in _setup_TMR0: []
  1906  0381  0021               	movlb	1	; select bank1
  1907  0382  1115               	bcf	21,2	;volatile
  1908  0383  1495               	bsf	21,1	;volatile
  1909  0384  1015               	bcf	21,0	;volatile
  1910                           
  1911                           ;TMR0.c: 16: PSA = 0;
  1912  0385  1195               	bcf	21,3	;volatile
  1913                           
  1914                           ;TMR0.c: 18: TMR0CS = 0;
  1915  0386  1295               	bcf	21,5	;volatile
  1916  0387  0008               	return
  1917  0388                     __end_of_setup_TMR0:	
  1918                           
  1919                           	psect	text5
  1920  038E                     __ptext5:	
  1921 ;; *************** function _setup_ADC *****************
  1922 ;; Defined at:
  1923 ;;		line 3 in file "ADC1823.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;		None
  1926 ;; Auto vars:     Size  Location     Type
  1927 ;;		None
  1928 ;; Return value:  Size  Location     Type
  1929 ;;                  1    wreg      void 
  1930 ;; Registers used:
  1931 ;;		wreg
  1932 ;; Tracked objects:
  1933 ;;		On entry : 0/0
  1934 ;;		On exit  : 0/0
  1935 ;;		Unchanged: 0/0
  1936 ;; Data sizes:     COMMON   BANK0   BANK1
  1937 ;;      Params:         0       0       0
  1938 ;;      Locals:         0       0       0
  1939 ;;      Temps:          0       0       0
  1940 ;;      Totals:         0       0       0
  1941 ;;Total ram usage:        0 bytes
  1942 ;; Hardware stack levels used:    1
  1943 ;; Hardware stack levels required when called:    2
  1944 ;; This function calls:
  1945 ;;		Nothing
  1946 ;; This function is called by:
  1947 ;;		_main
  1948 ;; This function uses a non-reentrant model
  1949 ;;
  1950                           
  1951                           
  1952                           ;psect for function _setup_ADC
  1953  038E                     _setup_ADC:	
  1954                           
  1955                           ;ADC1823.c: 20: ADCON1 = 0b11110000;
  1956                           
  1957                           ;incstack = 0
  1958                           ; Regs used in _setup_ADC: [wreg]
  1959  038E  30F0               	movlw	240
  1960  038F  0021               	movlb	1	; select bank1
  1961  0390  009E               	movwf	30	;volatile
  1962                           
  1963                           ;ADC1823.c: 21: { ADCON0 = 0b00100100;};
  1964  0391  3024               	movlw	36
  1965  0392  009D               	movwf	29	;volatile
  1966  0393  0008               	return
  1967  0394                     __end_of_setup_ADC:	
  1968                           
  1969                           	psect	text6
  1970  0308                     __ptext6:	
  1971 ;; *************** function _mess_handler *****************
  1972 ;; Defined at:
  1973 ;;		line 11 in file "comm.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;		None
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;		None
  1978 ;; Return value:  Size  Location     Type
  1979 ;;                  1    wreg      void 
  1980 ;; Registers used:
  1981 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMMON   BANK0   BANK1
  1987 ;;      Params:         0       0       0
  1988 ;;      Locals:         0       0       0
  1989 ;;      Temps:          0       1       0
  1990 ;;      Totals:         0       1       0
  1991 ;;Total ram usage:        1 bytes
  1992 ;; Hardware stack levels used:    1
  1993 ;; Hardware stack levels required when called:    4
  1994 ;; This function calls:
  1995 ;;		_config_ASIC
  1996 ;;		_lputs_ISR
  1997 ;;		_measure_Impedance
  1998 ;;		_read_ADC_channels
  1999 ;; This function is called by:
  2000 ;;		_main
  2001 ;; This function uses a non-reentrant model
  2002 ;;
  2003                           
  2004                           
  2005                           ;psect for function _mess_handler
  2006  0308                     _mess_handler:	
  2007                           
  2008                           ;comm.c: 16: switch (mess_rec[0]) {
  2009                           
  2010                           ;incstack = 0
  2011                           ; Regs used in _mess_handler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2012  0308  2B17               	goto	l2091
  2013  0309                     l2081:	
  2014                           ;comm.c: 17: case 't':
  2015                           
  2016                           
  2017                           ;comm.c: 18: lputs_ISR(mess_rec,mess_rec_size);
  2018  0309  0020               	movlb	0	; select bank0
  2019  030A  0841               	movf	_mess_rec_size,w	;volatile
  2020  030B  00ED               	movwf	??_mess_handler
  2021  030C  086D               	movf	??_mess_handler,w
  2022  030D  00CC               	movwf	lputs_ISR@length
  2023  030E  3042               	movlw	(low (_mess_rec| 0))& (0+255)
  2024  030F  2276               	fcall	_lputs_ISR
  2025                           
  2026                           ;comm.c: 19: break;
  2027  0310  0008               	return
  2028  0311                     l2083:	
  2029                           ;comm.c: 21: case 'c':
  2030                           
  2031                           
  2032                           ;comm.c: 22: config_ASIC();
  2033  0311  2245               	fcall	_config_ASIC
  2034                           
  2035                           ;comm.c: 23: break;
  2036  0312  0008               	return
  2037  0313                     l2085:	
  2038                           ;comm.c: 25: case 'm':
  2039                           
  2040                           
  2041                           ;comm.c: 26: read_ADC_channels();
  2042  0313  220C               	fcall	_read_ADC_channels
  2043                           
  2044                           ;comm.c: 27: break;
  2045  0314  0008               	return
  2046  0315                     l2087:	
  2047                           ;comm.c: 29: case 'z':
  2048                           
  2049                           
  2050                           ;comm.c: 30: measure_Impedance();
  2051  0315  2068               	fcall	_measure_Impedance
  2052                           
  2053                           ;comm.c: 35: }
  2054                           
  2055                           ;comm.c: 34: break;
  2056                           
  2057                           ;comm.c: 33: default:
  2058                           
  2059                           ;comm.c: 31: break;
  2060  0316  0008               	return
  2061  0317                     l2091:	
  2062  0317  0020               	movlb	0	; select bank0
  2063  0318  0842               	movf	_mess_rec,w	;volatile
  2064                           
  2065                           ; Switch size 1, requested type "space"
  2066                           ; Number of cases is 4, Range of values is 99 to 122
  2067                           ; switch strategies available:
  2068                           ; Name         Instructions Cycles
  2069                           ; simple_byte           13     7 (average)
  2070                           ; direct_byte           57     9 (fixed)
  2071                           ; jumptable            263     9 (fixed)
  2072                           ;	Chosen strategy is simple_byte
  2073  0319  3A63               	xorlw	99	; case 99
  2074  031A  1903               	skipnz
  2075  031B  2B11               	goto	l2083
  2076  031C  3A0E               	xorlw	14	; case 109
  2077  031D  1903               	skipnz
  2078  031E  2B13               	goto	l2085
  2079  031F  3A19               	xorlw	25	; case 116
  2080  0320  1903               	skipnz
  2081  0321  2B09               	goto	l2081
  2082  0322  3A0E               	xorlw	14	; case 122
  2083  0323  1903               	skipnz
  2084  0324  2B15               	goto	l2087
  2085  0325  2B26               	goto	l325
  2086  0326                     l325:	
  2087  0326  0008               	return
  2088  0327                     __end_of_mess_handler:	
  2089                           
  2090                           	psect	text7
  2091  020C                     __ptext7:	
  2092 ;; *************** function _read_ADC_channels *****************
  2093 ;; Defined at:
  2094 ;;		line 68 in file "comm.c"
  2095 ;; Parameters:    Size  Location     Type
  2096 ;;		None
  2097 ;; Auto vars:     Size  Location     Type
  2098 ;;  aux             7    7[BANK0 ] unsigned char [7]
  2099 ;;  value3          2   18[BANK0 ] unsigned short 
  2100 ;;  value2          2   16[BANK0 ] unsigned short 
  2101 ;;  value1          2   14[BANK0 ] unsigned short 
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  1    wreg      void 
  2104 ;; Registers used:
  2105 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMMON   BANK0   BANK1
  2111 ;;      Params:         0       0       0
  2112 ;;      Locals:         0      13       0
  2113 ;;      Temps:          0       1       0
  2114 ;;      Totals:         0      14       0
  2115 ;;Total ram usage:       14 bytes
  2116 ;; Hardware stack levels used:    1
  2117 ;; Hardware stack levels required when called:    3
  2118 ;; This function calls:
  2119 ;;		_ADC_2
  2120 ;;		_ADC_4
  2121 ;;		_ADC_5
  2122 ;;		_lputs_ISR
  2123 ;; This function is called by:
  2124 ;;		_mess_handler
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           
  2129                           ;psect for function _read_ADC_channels
  2130  020C                     _read_ADC_channels:	
  2131                           
  2132                           ;comm.c: 70: unsigned char aux[7];
  2133                           ;comm.c: 71: unsigned short value1,value2,value3;
  2134                           ;comm.c: 74: value1 = ADC_2();
  2135                           
  2136                           ;incstack = 0
  2137                           ; Regs used in _read_ADC_channels: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2138  020C  22E5               	fcall	_ADC_2
  2139  020D  0020               	movlb	0	; select bank0
  2140  020E  084D               	movf	?_ADC_2+1,w
  2141  020F  00DB               	movwf	read_ADC_channels@value1+1
  2142  0210  084C               	movf	?_ADC_2,w
  2143  0211  00DA               	movwf	read_ADC_channels@value1
  2144                           
  2145                           ;comm.c: 76: value2 = ADC_4();
  2146  0212  22C2               	fcall	_ADC_4
  2147  0213  0020               	movlb	0	; select bank0
  2148  0214  084D               	movf	?_ADC_4+1,w
  2149  0215  00DD               	movwf	read_ADC_channels@value2+1
  2150  0216  084C               	movf	?_ADC_4,w
  2151  0217  00DC               	movwf	read_ADC_channels@value2
  2152                           
  2153                           ;comm.c: 78: value3 = ADC_5();
  2154  0218  229F               	fcall	_ADC_5
  2155  0219  0020               	movlb	0	; select bank0
  2156  021A  084D               	movf	?_ADC_5+1,w
  2157  021B  00DF               	movwf	read_ADC_channels@value3+1
  2158  021C  084C               	movf	?_ADC_5,w
  2159  021D  00DE               	movwf	read_ADC_channels@value3
  2160                           
  2161                           ;comm.c: 79: { ADCON0 = 0b00100100;};
  2162  021E  3024               	movlw	36
  2163  021F  0021               	movlb	1	; select bank1
  2164  0220  009D               	movwf	29	;volatile
  2165                           
  2166                           ;comm.c: 81: aux[0] = 'm';
  2167  0221  306D               	movlw	109
  2168  0222  0020               	movlb	0	; select bank0
  2169  0223  00D2               	movwf	??_read_ADC_channels
  2170  0224  0852               	movf	??_read_ADC_channels,w
  2171  0225  00D3               	movwf	read_ADC_channels@aux
  2172                           
  2173                           ;comm.c: 82: aux[1] = (unsigned char)(value1 & 0xff);
  2174  0226  085A               	movf	read_ADC_channels@value1,w
  2175  0227  00D2               	movwf	??_read_ADC_channels
  2176  0228  0852               	movf	??_read_ADC_channels,w
  2177  0229  00D4               	movwf	read_ADC_channels@aux+1
  2178                           
  2179                           ;comm.c: 83: aux[2] = (unsigned char)((value1 >> 8) & 0xff);
  2180  022A  085B               	movf	read_ADC_channels@value1+1,w
  2181  022B  00D2               	movwf	??_read_ADC_channels
  2182  022C  0852               	movf	??_read_ADC_channels,w
  2183  022D  00D5               	movwf	read_ADC_channels@aux+2
  2184                           
  2185                           ;comm.c: 84: aux[3] = (unsigned char)(value2 & 0xff);
  2186  022E  085C               	movf	read_ADC_channels@value2,w
  2187  022F  00D2               	movwf	??_read_ADC_channels
  2188  0230  0852               	movf	??_read_ADC_channels,w
  2189  0231  00D6               	movwf	read_ADC_channels@aux+3
  2190                           
  2191                           ;comm.c: 85: aux[4] = (unsigned char)((value2 >> 8) & 0xff);
  2192  0232  085D               	movf	read_ADC_channels@value2+1,w
  2193  0233  00D2               	movwf	??_read_ADC_channels
  2194  0234  0852               	movf	??_read_ADC_channels,w
  2195  0235  00D7               	movwf	read_ADC_channels@aux+4
  2196                           
  2197                           ;comm.c: 86: aux[5] = (unsigned char)(value3 & 0xff);
  2198  0236  085E               	movf	read_ADC_channels@value3,w
  2199  0237  00D2               	movwf	??_read_ADC_channels
  2200  0238  0852               	movf	??_read_ADC_channels,w
  2201  0239  00D8               	movwf	read_ADC_channels@aux+5
  2202                           
  2203                           ;comm.c: 87: aux[6] = (unsigned char)((value3 >> 8) & 0xff);
  2204  023A  085F               	movf	read_ADC_channels@value3+1,w
  2205  023B  00D2               	movwf	??_read_ADC_channels
  2206  023C  0852               	movf	??_read_ADC_channels,w
  2207  023D  00D9               	movwf	read_ADC_channels@aux+6
  2208                           
  2209                           ;comm.c: 89: lputs_ISR(aux,7);
  2210  023E  3007               	movlw	7
  2211  023F  00D2               	movwf	??_read_ADC_channels
  2212  0240  0852               	movf	??_read_ADC_channels,w
  2213  0241  00CC               	movwf	lputs_ISR@length
  2214  0242  3053               	movlw	(low (read_ADC_channels@aux| 0))& (0+255)
  2215  0243  2276               	fcall	_lputs_ISR
  2216  0244  0008               	return
  2217  0245                     __end_of_read_ADC_channels:	
  2218                           
  2219                           	psect	text8
  2220  029F                     __ptext8:	
  2221 ;; *************** function _ADC_5 *****************
  2222 ;; Defined at:
  2223 ;;		line 48 in file "ADC1823.c"
  2224 ;; Parameters:    Size  Location     Type
  2225 ;;		None
  2226 ;; Auto vars:     Size  Location     Type
  2227 ;;  ADC_value       2    4[BANK0 ] unsigned short 
  2228 ;; Return value:  Size  Location     Type
  2229 ;;                  2    0[BANK0 ] unsigned short 
  2230 ;; Registers used:
  2231 ;;		wreg
  2232 ;; Tracked objects:
  2233 ;;		On entry : 0/0
  2234 ;;		On exit  : 0/0
  2235 ;;		Unchanged: 0/0
  2236 ;; Data sizes:     COMMON   BANK0   BANK1
  2237 ;;      Params:         0       2       0
  2238 ;;      Locals:         0       2       0
  2239 ;;      Temps:          0       2       0
  2240 ;;      Totals:         0       6       0
  2241 ;;Total ram usage:        6 bytes
  2242 ;; Hardware stack levels used:    1
  2243 ;; Hardware stack levels required when called:    2
  2244 ;; This function calls:
  2245 ;;		Nothing
  2246 ;; This function is called by:
  2247 ;;		_read_ADC_channels
  2248 ;; This function uses a non-reentrant model
  2249 ;;
  2250                           
  2251                           
  2252                           ;psect for function _ADC_5
  2253  029F                     _ADC_5:	
  2254                           
  2255                           ;ADC1823.c: 50: unsigned short ADC_value;
  2256                           ;ADC1823.c: 52: { ADCON0 = 0b00010101;};
  2257                           
  2258                           ;incstack = 0
  2259                           ; Regs used in _ADC_5: [wreg]
  2260  029F  3015               	movlw	21
  2261  02A0  0021               	movlb	1	; select bank1
  2262  02A1  009D               	movwf	29	;volatile
  2263                           
  2264                           ;ADC1823.c: 53: __nop();
  2265  02A2  0000               	nop
  2266                           
  2267                           ;ADC1823.c: 54: { ADGO = 1; while (ADGO); ADC_value = ADRESH; ADC_value <<= 8; ADC_value
      +                           |= ADRESL;};
  2268  02A3  0021               	movlb	1	; select bank1
  2269  02A4  149D               	bsf	29,1	;volatile
  2270  02A5                     l364:	
  2271  02A5  189D               	btfsc	29,1	;volatile
  2272  02A6  2AA5               	goto	l364
  2273  02A7  081C               	movf	28,w	;volatile
  2274  02A8  0020               	movlb	0	; select bank0
  2275  02A9  00CE               	movwf	??_ADC_5
  2276  02AA  01CF               	clrf	??_ADC_5+1
  2277  02AB  084E               	movf	??_ADC_5,w
  2278  02AC  00D0               	movwf	ADC_5@ADC_value
  2279  02AD  084F               	movf	??_ADC_5+1,w
  2280  02AE  00D1               	movwf	ADC_5@ADC_value+1
  2281  02AF  3008               	movlw	8
  2282  02B0                     u945:	
  2283  02B0  35D0               	lslf	ADC_5@ADC_value,f
  2284  02B1  0DD1               	rlf	ADC_5@ADC_value+1,f
  2285  02B2  0B89               	decfsz	9,f
  2286  02B3  2AB0               	goto	u945
  2287  02B4  0021               	movlb	1	; select bank1
  2288  02B5  081B               	movf	27,w	;volatile
  2289  02B6  0020               	movlb	0	; select bank0
  2290  02B7  00CE               	movwf	??_ADC_5
  2291  02B8  01CF               	clrf	??_ADC_5+1
  2292  02B9  084E               	movf	??_ADC_5,w
  2293  02BA  04D0               	iorwf	ADC_5@ADC_value,f
  2294  02BB  084F               	movf	??_ADC_5+1,w
  2295  02BC  04D1               	iorwf	ADC_5@ADC_value+1,f
  2296                           
  2297                           ;ADC1823.c: 55: return ADC_value;
  2298  02BD  0851               	movf	ADC_5@ADC_value+1,w
  2299  02BE  00CD               	movwf	?_ADC_5+1
  2300  02BF  0850               	movf	ADC_5@ADC_value,w
  2301  02C0  00CC               	movwf	?_ADC_5
  2302  02C1  0008               	return
  2303  02C2                     __end_of_ADC_5:	
  2304                           
  2305                           	psect	text9
  2306  0068                     __ptext9:	
  2307 ;; *************** function _measure_Impedance *****************
  2308 ;; Defined at:
  2309 ;;		line 92 in file "comm.c"
  2310 ;; Parameters:    Size  Location     Type
  2311 ;;		None
  2312 ;; Auto vars:     Size  Location     Type
  2313 ;;  aux            13   10[BANK0 ] unsigned char [13]
  2314 ;;  asic            6   27[BANK0 ] struct .
  2315 ;;  value2          2   25[BANK0 ] unsigned short 
  2316 ;;  value1          2   23[BANK0 ] unsigned short 
  2317 ;;  value3          2    0        unsigned short 
  2318 ;; Return value:  Size  Location     Type
  2319 ;;                  1    wreg      void 
  2320 ;; Registers used:
  2321 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2322 ;; Tracked objects:
  2323 ;;		On entry : 0/0
  2324 ;;		On exit  : 0/0
  2325 ;;		Unchanged: 0/0
  2326 ;; Data sizes:     COMMON   BANK0   BANK1
  2327 ;;      Params:         0       0       0
  2328 ;;      Locals:         0      23       0
  2329 ;;      Temps:          0       1       0
  2330 ;;      Totals:         0      24       0
  2331 ;;Total ram usage:       24 bytes
  2332 ;; Hardware stack levels used:    1
  2333 ;; Hardware stack levels required when called:    3
  2334 ;; This function calls:
  2335 ;;		_ADC_2
  2336 ;;		_ADC_4
  2337 ;;		_VIN_config
  2338 ;;		_lputs_ISR
  2339 ;; This function is called by:
  2340 ;;		_mess_handler
  2341 ;; This function uses a non-reentrant model
  2342 ;;
  2343                           
  2344                           
  2345                           ;psect for function _measure_Impedance
  2346  0068                     _measure_Impedance:	
  2347                           
  2348                           ;comm.c: 94: unsigned char aux[13];
  2349                           ;comm.c: 95: unsigned short value1,value2,value3;
  2350                           ;comm.c: 100: VIN asic;
  2351                           ;comm.c: 104: aux[0] = 'z';
  2352                           
  2353                           ;incstack = 0
  2354                           ; Regs used in _measure_Impedance: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2355  0068  307A               	movlw	122
  2356  0069  0020               	movlb	0	; select bank0
  2357  006A  00D5               	movwf	??_measure_Impedance
  2358  006B  0855               	movf	??_measure_Impedance,w
  2359  006C  00D6               	movwf	measure_Impedance@aux
  2360                           
  2361                           ;comm.c: 116: asic.data[0] = mess_rec[1];
  2362  006D  0843               	movf	_mess_rec+1,w	;volatile
  2363  006E  00D5               	movwf	??_measure_Impedance
  2364  006F  0855               	movf	??_measure_Impedance,w
  2365  0070  00E7               	movwf	measure_Impedance@asic
  2366                           
  2367                           ;comm.c: 117: asic.data[1] = mess_rec[2];
  2368  0071  0844               	movf	_mess_rec+2,w	;volatile
  2369  0072  00D5               	movwf	??_measure_Impedance
  2370  0073  0855               	movf	??_measure_Impedance,w
  2371  0074  00E8               	movwf	measure_Impedance@asic+1
  2372                           
  2373                           ;comm.c: 118: asic.data[2] = mess_rec[3];
  2374  0075  0845               	movf	_mess_rec+3,w	;volatile
  2375  0076  00D5               	movwf	??_measure_Impedance
  2376  0077  0855               	movf	??_measure_Impedance,w
  2377  0078  00E9               	movwf	measure_Impedance@asic+2
  2378                           
  2379                           ;comm.c: 119: asic.data[3] = mess_rec[4];
  2380  0079  0846               	movf	_mess_rec+4,w	;volatile
  2381  007A  00D5               	movwf	??_measure_Impedance
  2382  007B  0855               	movf	??_measure_Impedance,w
  2383  007C  00EA               	movwf	measure_Impedance@asic+3
  2384                           
  2385                           ;comm.c: 120: asic.data[4] = mess_rec[5];
  2386  007D  0847               	movf	_mess_rec+5,w	;volatile
  2387  007E  00D5               	movwf	??_measure_Impedance
  2388  007F  0855               	movf	??_measure_Impedance,w
  2389  0080  00EB               	movwf	measure_Impedance@asic+4
  2390                           
  2391                           ;comm.c: 122: asic.data_bits.CE = 0;
  2392  0081  1367               	bcf	measure_Impedance@asic,6
  2393                           
  2394                           ;comm.c: 123: VIN_config(asic);
  2395  0082  3067               	movlw	low measure_Impedance@asic
  2396  0083  0086               	movwf	6
  2397  0084  3000               	movlw	high measure_Impedance@asic
  2398  0085  0087               	movwf	7
  2399  0086  304C               	movlw	low VIN_config@conf
  2400  0087  0084               	movwf	4
  2401  0088  3000               	movlw	high VIN_config@conf
  2402  0089  0085               	movwf	5
  2403  008A  3F40               	moviw [0]fsr1
  2404  008B  3F80               	movwi [0]fsr0
  2405  008C  3F41               	moviw [1]fsr1
  2406  008D  3F81               	movwi [1]fsr0
  2407  008E  3F42               	moviw [2]fsr1
  2408  008F  3F82               	movwi [2]fsr0
  2409  0090  3F43               	moviw [3]fsr1
  2410  0091  3F83               	movwi [3]fsr0
  2411  0092  3F44               	moviw [4]fsr1
  2412  0093  3F84               	movwi [4]fsr0
  2413  0094  3F45               	moviw [5]fsr1
  2414  0095  3F85               	movwi [5]fsr0
  2415  0096  213A               	fcall	_VIN_config
  2416                           
  2417                           ;comm.c: 126: _delay((unsigned long)((60)*(500000/4000.0)));
  2418  0097  300A               	movlw	10
  2419  0098  0020               	movlb	0	; select bank0
  2420  0099  00D5               	movwf	??_measure_Impedance
  2421  009A  30BC               	movlw	188
  2422  009B                     u1007:	
  2423  009B  0B89               	decfsz	9,f
  2424  009C  289B               	goto	u1007
  2425  009D  0BD5               	decfsz	??_measure_Impedance,f
  2426  009E  289B               	goto	u1007
  2427  009F  0000               	nop
  2428                           
  2429                           ;comm.c: 128: value1 = ADC_2();
  2430  00A0  22E5               	fcall	_ADC_2
  2431  00A1  0020               	movlb	0	; select bank0
  2432  00A2  084D               	movf	?_ADC_2+1,w
  2433  00A3  00E4               	movwf	measure_Impedance@value1+1
  2434  00A4  084C               	movf	?_ADC_2,w
  2435  00A5  00E3               	movwf	measure_Impedance@value1
  2436                           
  2437                           ;comm.c: 129: value2 = ADC_4();
  2438  00A6  22C2               	fcall	_ADC_4
  2439  00A7  0020               	movlb	0	; select bank0
  2440  00A8  084D               	movf	?_ADC_4+1,w
  2441  00A9  00E6               	movwf	measure_Impedance@value2+1
  2442  00AA  084C               	movf	?_ADC_4,w
  2443  00AB  00E5               	movwf	measure_Impedance@value2
  2444                           
  2445                           ;comm.c: 131: aux[1] = (unsigned char)(value1 & 0xff);
  2446  00AC  0863               	movf	measure_Impedance@value1,w
  2447  00AD  00D5               	movwf	??_measure_Impedance
  2448  00AE  0855               	movf	??_measure_Impedance,w
  2449  00AF  00D7               	movwf	measure_Impedance@aux+1
  2450                           
  2451                           ;comm.c: 132: aux[2] = (unsigned char)((value1 >> 8) & 0xff);
  2452  00B0  0864               	movf	measure_Impedance@value1+1,w
  2453  00B1  00D5               	movwf	??_measure_Impedance
  2454  00B2  0855               	movf	??_measure_Impedance,w
  2455  00B3  00D8               	movwf	measure_Impedance@aux+2
  2456                           
  2457                           ;comm.c: 133: aux[3] = (unsigned char)(value2 & 0xff);
  2458  00B4  0865               	movf	measure_Impedance@value2,w
  2459  00B5  00D5               	movwf	??_measure_Impedance
  2460  00B6  0855               	movf	??_measure_Impedance,w
  2461  00B7  00D9               	movwf	measure_Impedance@aux+3
  2462                           
  2463                           ;comm.c: 134: aux[4] = (unsigned char)((value2 >> 8) & 0xff);
  2464  00B8  0866               	movf	measure_Impedance@value2+1,w
  2465  00B9  00D5               	movwf	??_measure_Impedance
  2466  00BA  0855               	movf	??_measure_Impedance,w
  2467  00BB  00DA               	movwf	measure_Impedance@aux+4
  2468                           
  2469                           ;comm.c: 137: asic.data_bits.CE = 1;
  2470  00BC  1767               	bsf	measure_Impedance@asic,6
  2471                           
  2472                           ;comm.c: 138: asic.data_bits.IQ = 0;
  2473  00BD  11E8               	bcf	measure_Impedance@asic+1,3
  2474                           
  2475                           ;comm.c: 143: VIN_config(asic);
  2476  00BE  3067               	movlw	low measure_Impedance@asic
  2477  00BF  0086               	movwf	6
  2478  00C0  3000               	movlw	high measure_Impedance@asic
  2479  00C1  0087               	movwf	7
  2480  00C2  304C               	movlw	low VIN_config@conf
  2481  00C3  0084               	movwf	4
  2482  00C4  3000               	movlw	high VIN_config@conf
  2483  00C5  0085               	movwf	5
  2484  00C6  3F40               	moviw [0]fsr1
  2485  00C7  3F80               	movwi [0]fsr0
  2486  00C8  3F41               	moviw [1]fsr1
  2487  00C9  3F81               	movwi [1]fsr0
  2488  00CA  3F42               	moviw [2]fsr1
  2489  00CB  3F82               	movwi [2]fsr0
  2490  00CC  3F43               	moviw [3]fsr1
  2491  00CD  3F83               	movwi [3]fsr0
  2492  00CE  3F44               	moviw [4]fsr1
  2493  00CF  3F84               	movwi [4]fsr0
  2494  00D0  3F45               	moviw [5]fsr1
  2495  00D1  3F85               	movwi [5]fsr0
  2496  00D2  213A               	fcall	_VIN_config
  2497                           
  2498                           ;comm.c: 145: _delay((unsigned long)((60)*(500000/4000.0)));
  2499  00D3  300A               	movlw	10
  2500  00D4  0020               	movlb	0	; select bank0
  2501  00D5  00D5               	movwf	??_measure_Impedance
  2502  00D6  30BC               	movlw	188
  2503  00D7                     u1017:	
  2504  00D7  0B89               	decfsz	9,f
  2505  00D8  28D7               	goto	u1017
  2506  00D9  0BD5               	decfsz	??_measure_Impedance,f
  2507  00DA  28D7               	goto	u1017
  2508  00DB  0000               	nop
  2509                           
  2510                           ;comm.c: 147: value1 = ADC_2();
  2511  00DC  22E5               	fcall	_ADC_2
  2512  00DD  0020               	movlb	0	; select bank0
  2513  00DE  084D               	movf	?_ADC_2+1,w
  2514  00DF  00E4               	movwf	measure_Impedance@value1+1
  2515  00E0  084C               	movf	?_ADC_2,w
  2516  00E1  00E3               	movwf	measure_Impedance@value1
  2517                           
  2518                           ;comm.c: 148: value2 = ADC_4();
  2519  00E2  22C2               	fcall	_ADC_4
  2520  00E3  0020               	movlb	0	; select bank0
  2521  00E4  084D               	movf	?_ADC_4+1,w
  2522  00E5  00E6               	movwf	measure_Impedance@value2+1
  2523  00E6  084C               	movf	?_ADC_4,w
  2524  00E7  00E5               	movwf	measure_Impedance@value2
  2525                           
  2526                           ;comm.c: 150: aux[5] = (unsigned char)(value1 & 0xff);
  2527  00E8  0863               	movf	measure_Impedance@value1,w
  2528  00E9  00D5               	movwf	??_measure_Impedance
  2529  00EA  0855               	movf	??_measure_Impedance,w
  2530  00EB  00DB               	movwf	measure_Impedance@aux+5
  2531                           
  2532                           ;comm.c: 151: aux[6] = (unsigned char)((value1 >> 8) & 0xff);
  2533  00EC  0864               	movf	measure_Impedance@value1+1,w
  2534  00ED  00D5               	movwf	??_measure_Impedance
  2535  00EE  0855               	movf	??_measure_Impedance,w
  2536  00EF  00DC               	movwf	measure_Impedance@aux+6
  2537                           
  2538                           ;comm.c: 152: aux[7] = (unsigned char)(value2 & 0xff);
  2539  00F0  0865               	movf	measure_Impedance@value2,w
  2540  00F1  00D5               	movwf	??_measure_Impedance
  2541  00F2  0855               	movf	??_measure_Impedance,w
  2542  00F3  00DD               	movwf	measure_Impedance@aux+7
  2543                           
  2544                           ;comm.c: 153: aux[8] = (unsigned char)((value2 >> 8) & 0xff);
  2545  00F4  0866               	movf	measure_Impedance@value2+1,w
  2546  00F5  00D5               	movwf	??_measure_Impedance
  2547  00F6  0855               	movf	??_measure_Impedance,w
  2548  00F7  00DE               	movwf	measure_Impedance@aux+8
  2549                           
  2550                           ;comm.c: 156: asic.data_bits.IQ = 1;
  2551  00F8  15E8               	bsf	measure_Impedance@asic+1,3
  2552                           
  2553                           ;comm.c: 161: VIN_config(asic);
  2554  00F9  3067               	movlw	low measure_Impedance@asic
  2555  00FA  0086               	movwf	6
  2556  00FB  3000               	movlw	high measure_Impedance@asic
  2557  00FC  0087               	movwf	7
  2558  00FD  304C               	movlw	low VIN_config@conf
  2559  00FE  0084               	movwf	4
  2560  00FF  3000               	movlw	high VIN_config@conf
  2561  0100  0085               	movwf	5
  2562  0101  3F40               	moviw [0]fsr1
  2563  0102  3F80               	movwi [0]fsr0
  2564  0103  3F41               	moviw [1]fsr1
  2565  0104  3F81               	movwi [1]fsr0
  2566  0105  3F42               	moviw [2]fsr1
  2567  0106  3F82               	movwi [2]fsr0
  2568  0107  3F43               	moviw [3]fsr1
  2569  0108  3F83               	movwi [3]fsr0
  2570  0109  3F44               	moviw [4]fsr1
  2571  010A  3F84               	movwi [4]fsr0
  2572  010B  3F45               	moviw [5]fsr1
  2573  010C  3F85               	movwi [5]fsr0
  2574  010D  213A               	fcall	_VIN_config
  2575                           
  2576                           ;comm.c: 163: _delay((unsigned long)((60)*(500000/4000.0)));
  2577  010E  300A               	movlw	10
  2578  010F  0020               	movlb	0	; select bank0
  2579  0110  00D5               	movwf	??_measure_Impedance
  2580  0111  30BC               	movlw	188
  2581  0112                     u1027:	
  2582  0112  0B89               	decfsz	9,f
  2583  0113  2912               	goto	u1027
  2584  0114  0BD5               	decfsz	??_measure_Impedance,f
  2585  0115  2912               	goto	u1027
  2586  0116  0000               	nop
  2587                           
  2588                           ;comm.c: 165: value1 = ADC_2();
  2589  0117  22E5               	fcall	_ADC_2
  2590  0118  0020               	movlb	0	; select bank0
  2591  0119  084D               	movf	?_ADC_2+1,w
  2592  011A  00E4               	movwf	measure_Impedance@value1+1
  2593  011B  084C               	movf	?_ADC_2,w
  2594  011C  00E3               	movwf	measure_Impedance@value1
  2595                           
  2596                           ;comm.c: 166: value2 = ADC_4();
  2597  011D  22C2               	fcall	_ADC_4
  2598  011E  0020               	movlb	0	; select bank0
  2599  011F  084D               	movf	?_ADC_4+1,w
  2600  0120  00E6               	movwf	measure_Impedance@value2+1
  2601  0121  084C               	movf	?_ADC_4,w
  2602  0122  00E5               	movwf	measure_Impedance@value2
  2603                           
  2604                           ;comm.c: 168: aux[9] = (unsigned char)(value1 & 0xff);
  2605  0123  0863               	movf	measure_Impedance@value1,w
  2606  0124  00D5               	movwf	??_measure_Impedance
  2607  0125  0855               	movf	??_measure_Impedance,w
  2608  0126  00DF               	movwf	measure_Impedance@aux+9
  2609                           
  2610                           ;comm.c: 169: aux[10] = (unsigned char)((value1 >> 8) & 0xff);
  2611  0127  0864               	movf	measure_Impedance@value1+1,w
  2612  0128  00D5               	movwf	??_measure_Impedance
  2613  0129  0855               	movf	??_measure_Impedance,w
  2614  012A  00E0               	movwf	measure_Impedance@aux+10
  2615                           
  2616                           ;comm.c: 170: aux[11] = (unsigned char)(value2 & 0xff);
  2617  012B  0865               	movf	measure_Impedance@value2,w
  2618  012C  00D5               	movwf	??_measure_Impedance
  2619  012D  0855               	movf	??_measure_Impedance,w
  2620  012E  00E1               	movwf	measure_Impedance@aux+11
  2621                           
  2622                           ;comm.c: 171: aux[12] = (unsigned char)((value2 >> 8) & 0xff);
  2623  012F  0866               	movf	measure_Impedance@value2+1,w
  2624  0130  00D5               	movwf	??_measure_Impedance
  2625  0131  0855               	movf	??_measure_Impedance,w
  2626  0132  00E2               	movwf	measure_Impedance@aux+12
  2627                           
  2628                           ;comm.c: 174: lputs_ISR(aux,13);
  2629  0133  300D               	movlw	13
  2630  0134  00D5               	movwf	??_measure_Impedance
  2631  0135  0855               	movf	??_measure_Impedance,w
  2632  0136  00CC               	movwf	lputs_ISR@length
  2633  0137  3056               	movlw	(low (measure_Impedance@aux| 0))& (0+255)
  2634  0138  2276               	fcall	_lputs_ISR
  2635  0139  0008               	return
  2636  013A                     __end_of_measure_Impedance:	
  2637                           
  2638                           	psect	text10
  2639  02C2                     __ptext10:	
  2640 ;; *************** function _ADC_4 *****************
  2641 ;; Defined at:
  2642 ;;		line 38 in file "ADC1823.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;		None
  2645 ;; Auto vars:     Size  Location     Type
  2646 ;;  ADC_value       2    4[BANK0 ] unsigned short 
  2647 ;; Return value:  Size  Location     Type
  2648 ;;                  2    0[BANK0 ] unsigned short 
  2649 ;; Registers used:
  2650 ;;		wreg
  2651 ;; Tracked objects:
  2652 ;;		On entry : 0/0
  2653 ;;		On exit  : 0/0
  2654 ;;		Unchanged: 0/0
  2655 ;; Data sizes:     COMMON   BANK0   BANK1
  2656 ;;      Params:         0       2       0
  2657 ;;      Locals:         0       2       0
  2658 ;;      Temps:          0       2       0
  2659 ;;      Totals:         0       6       0
  2660 ;;Total ram usage:        6 bytes
  2661 ;; Hardware stack levels used:    1
  2662 ;; Hardware stack levels required when called:    2
  2663 ;; This function calls:
  2664 ;;		Nothing
  2665 ;; This function is called by:
  2666 ;;		_read_ADC_channels
  2667 ;;		_measure_Impedance
  2668 ;; This function uses a non-reentrant model
  2669 ;;
  2670                           
  2671                           
  2672                           ;psect for function _ADC_4
  2673  02C2                     _ADC_4:	
  2674                           
  2675                           ;ADC1823.c: 40: unsigned short ADC_value;
  2676                           ;ADC1823.c: 42: { ADCON0 = 0b00010001;};
  2677                           
  2678                           ;incstack = 0
  2679                           ; Regs used in _ADC_4: [wreg]
  2680  02C2  3011               	movlw	17
  2681  02C3  0021               	movlb	1	; select bank1
  2682  02C4  009D               	movwf	29	;volatile
  2683                           
  2684                           ;ADC1823.c: 43: __nop();
  2685  02C5  0000               	nop
  2686                           
  2687                           ;ADC1823.c: 44: { ADGO = 1; while (ADGO); ADC_value = ADRESH; ADC_value <<= 8; ADC_value
      +                           |= ADRESL;};
  2688  02C6  0021               	movlb	1	; select bank1
  2689  02C7  149D               	bsf	29,1	;volatile
  2690  02C8                     l358:	
  2691  02C8  189D               	btfsc	29,1	;volatile
  2692  02C9  2AC8               	goto	l358
  2693  02CA  081C               	movf	28,w	;volatile
  2694  02CB  0020               	movlb	0	; select bank0
  2695  02CC  00CE               	movwf	??_ADC_4
  2696  02CD  01CF               	clrf	??_ADC_4+1
  2697  02CE  084E               	movf	??_ADC_4,w
  2698  02CF  00D0               	movwf	ADC_4@ADC_value
  2699  02D0  084F               	movf	??_ADC_4+1,w
  2700  02D1  00D1               	movwf	ADC_4@ADC_value+1
  2701  02D2  3008               	movlw	8
  2702  02D3                     u925:	
  2703  02D3  35D0               	lslf	ADC_4@ADC_value,f
  2704  02D4  0DD1               	rlf	ADC_4@ADC_value+1,f
  2705  02D5  0B89               	decfsz	9,f
  2706  02D6  2AD3               	goto	u925
  2707  02D7  0021               	movlb	1	; select bank1
  2708  02D8  081B               	movf	27,w	;volatile
  2709  02D9  0020               	movlb	0	; select bank0
  2710  02DA  00CE               	movwf	??_ADC_4
  2711  02DB  01CF               	clrf	??_ADC_4+1
  2712  02DC  084E               	movf	??_ADC_4,w
  2713  02DD  04D0               	iorwf	ADC_4@ADC_value,f
  2714  02DE  084F               	movf	??_ADC_4+1,w
  2715  02DF  04D1               	iorwf	ADC_4@ADC_value+1,f
  2716                           
  2717                           ;ADC1823.c: 45: return ADC_value;
  2718  02E0  0851               	movf	ADC_4@ADC_value+1,w
  2719  02E1  00CD               	movwf	?_ADC_4+1
  2720  02E2  0850               	movf	ADC_4@ADC_value,w
  2721  02E3  00CC               	movwf	?_ADC_4
  2722  02E4  0008               	return
  2723  02E5                     __end_of_ADC_4:	
  2724                           
  2725                           	psect	text11
  2726  02E5                     __ptext11:	
  2727 ;; *************** function _ADC_2 *****************
  2728 ;; Defined at:
  2729 ;;		line 25 in file "ADC1823.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;		None
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;  ADC_value       2    4[BANK0 ] unsigned short 
  2734 ;; Return value:  Size  Location     Type
  2735 ;;                  2    0[BANK0 ] unsigned short 
  2736 ;; Registers used:
  2737 ;;		wreg
  2738 ;; Tracked objects:
  2739 ;;		On entry : 0/0
  2740 ;;		On exit  : 0/0
  2741 ;;		Unchanged: 0/0
  2742 ;; Data sizes:     COMMON   BANK0   BANK1
  2743 ;;      Params:         0       2       0
  2744 ;;      Locals:         0       2       0
  2745 ;;      Temps:          0       2       0
  2746 ;;      Totals:         0       6       0
  2747 ;;Total ram usage:        6 bytes
  2748 ;; Hardware stack levels used:    1
  2749 ;; Hardware stack levels required when called:    2
  2750 ;; This function calls:
  2751 ;;		Nothing
  2752 ;; This function is called by:
  2753 ;;		_read_ADC_channels
  2754 ;;		_measure_Impedance
  2755 ;; This function uses a non-reentrant model
  2756 ;;
  2757                           
  2758                           
  2759                           ;psect for function _ADC_2
  2760  02E5                     _ADC_2:	
  2761                           
  2762                           ;ADC1823.c: 27: unsigned short ADC_value;
  2763                           ;ADC1823.c: 29: { ADCON0 = 0b00001001;};
  2764                           
  2765                           ;incstack = 0
  2766                           ; Regs used in _ADC_2: [wreg]
  2767  02E5  3009               	movlw	9
  2768  02E6  0021               	movlb	1	; select bank1
  2769  02E7  009D               	movwf	29	;volatile
  2770                           
  2771                           ;ADC1823.c: 30: __nop();
  2772  02E8  0000               	nop
  2773                           
  2774                           ;ADC1823.c: 34: { ADGO = 1; while (ADGO); ADC_value = ADRESH; ADC_value <<= 8; ADC_value
      +                           |= ADRESL;};
  2775  02E9  0021               	movlb	1	; select bank1
  2776  02EA  149D               	bsf	29,1	;volatile
  2777  02EB                     l352:	
  2778  02EB  189D               	btfsc	29,1	;volatile
  2779  02EC  2AEB               	goto	l352
  2780  02ED  081C               	movf	28,w	;volatile
  2781  02EE  0020               	movlb	0	; select bank0
  2782  02EF  00CE               	movwf	??_ADC_2
  2783  02F0  01CF               	clrf	??_ADC_2+1
  2784  02F1  084E               	movf	??_ADC_2,w
  2785  02F2  00D0               	movwf	ADC_2@ADC_value
  2786  02F3  084F               	movf	??_ADC_2+1,w
  2787  02F4  00D1               	movwf	ADC_2@ADC_value+1
  2788  02F5  3008               	movlw	8
  2789  02F6                     u905:	
  2790  02F6  35D0               	lslf	ADC_2@ADC_value,f
  2791  02F7  0DD1               	rlf	ADC_2@ADC_value+1,f
  2792  02F8  0B89               	decfsz	9,f
  2793  02F9  2AF6               	goto	u905
  2794  02FA  0021               	movlb	1	; select bank1
  2795  02FB  081B               	movf	27,w	;volatile
  2796  02FC  0020               	movlb	0	; select bank0
  2797  02FD  00CE               	movwf	??_ADC_2
  2798  02FE  01CF               	clrf	??_ADC_2+1
  2799  02FF  084E               	movf	??_ADC_2,w
  2800  0300  04D0               	iorwf	ADC_2@ADC_value,f
  2801  0301  084F               	movf	??_ADC_2+1,w
  2802  0302  04D1               	iorwf	ADC_2@ADC_value+1,f
  2803                           
  2804                           ;ADC1823.c: 35: return ADC_value;
  2805  0303  0851               	movf	ADC_2@ADC_value+1,w
  2806  0304  00CD               	movwf	?_ADC_2+1
  2807  0305  0850               	movf	ADC_2@ADC_value,w
  2808  0306  00CC               	movwf	?_ADC_2
  2809  0307  0008               	return
  2810  0308                     __end_of_ADC_2:	
  2811                           
  2812                           	psect	text12
  2813  0245                     __ptext12:	
  2814 ;; *************** function _config_ASIC *****************
  2815 ;; Defined at:
  2816 ;;		line 38 in file "comm.c"
  2817 ;; Parameters:    Size  Location     Type
  2818 ;;		None
  2819 ;; Auto vars:     Size  Location     Type
  2820 ;;  asic            6   10[BANK0 ] struct .
  2821 ;; Return value:  Size  Location     Type
  2822 ;;                  1    wreg      void 
  2823 ;; Registers used:
  2824 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2825 ;; Tracked objects:
  2826 ;;		On entry : 0/0
  2827 ;;		On exit  : 0/0
  2828 ;;		Unchanged: 0/0
  2829 ;; Data sizes:     COMMON   BANK0   BANK1
  2830 ;;      Params:         0       0       0
  2831 ;;      Locals:         0       6       0
  2832 ;;      Temps:          0       1       0
  2833 ;;      Totals:         0       7       0
  2834 ;;Total ram usage:        7 bytes
  2835 ;; Hardware stack levels used:    1
  2836 ;; Hardware stack levels required when called:    3
  2837 ;; This function calls:
  2838 ;;		_VIN_config
  2839 ;;		_lputs_ISR
  2840 ;; This function is called by:
  2841 ;;		_mess_handler
  2842 ;; This function uses a non-reentrant model
  2843 ;;
  2844                           
  2845                           
  2846                           ;psect for function _config_ASIC
  2847  0245                     _config_ASIC:	
  2848                           
  2849                           ;comm.c: 54: VIN asic;
  2850                           ;comm.c: 56: asic.data[0] = mess_rec[1];
  2851                           
  2852                           ;incstack = 0
  2853                           ; Regs used in _config_ASIC: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2854  0245  0020               	movlb	0	; select bank0
  2855  0246  0843               	movf	_mess_rec+1,w	;volatile
  2856  0247  00D5               	movwf	??_config_ASIC
  2857  0248  0855               	movf	??_config_ASIC,w
  2858  0249  00D6               	movwf	config_ASIC@asic
  2859                           
  2860                           ;comm.c: 57: asic.data[1] = mess_rec[2];
  2861  024A  0844               	movf	_mess_rec+2,w	;volatile
  2862  024B  00D5               	movwf	??_config_ASIC
  2863  024C  0855               	movf	??_config_ASIC,w
  2864  024D  00D7               	movwf	config_ASIC@asic+1
  2865                           
  2866                           ;comm.c: 58: asic.data[2] = mess_rec[3];
  2867  024E  0845               	movf	_mess_rec+3,w	;volatile
  2868  024F  00D5               	movwf	??_config_ASIC
  2869  0250  0855               	movf	??_config_ASIC,w
  2870  0251  00D8               	movwf	config_ASIC@asic+2
  2871                           
  2872                           ;comm.c: 59: asic.data[3] = mess_rec[4];
  2873  0252  0846               	movf	_mess_rec+4,w	;volatile
  2874  0253  00D5               	movwf	??_config_ASIC
  2875  0254  0855               	movf	??_config_ASIC,w
  2876  0255  00D9               	movwf	config_ASIC@asic+3
  2877                           
  2878                           ;comm.c: 60: asic.data[4] = mess_rec[5];
  2879  0256  0847               	movf	_mess_rec+5,w	;volatile
  2880  0257  00D5               	movwf	??_config_ASIC
  2881  0258  0855               	movf	??_config_ASIC,w
  2882  0259  00DA               	movwf	config_ASIC@asic+4
  2883                           
  2884                           ;comm.c: 62: lputs_ISR(mess_rec,mess_rec_size);
  2885  025A  0841               	movf	_mess_rec_size,w	;volatile
  2886  025B  00D5               	movwf	??_config_ASIC
  2887  025C  0855               	movf	??_config_ASIC,w
  2888  025D  00CC               	movwf	lputs_ISR@length
  2889  025E  3042               	movlw	(low (_mess_rec| 0))& (0+255)
  2890  025F  2276               	fcall	_lputs_ISR
  2891                           
  2892                           ;comm.c: 64: VIN_config(asic);
  2893  0260  3056               	movlw	low config_ASIC@asic
  2894  0261  0086               	movwf	6
  2895  0262  3000               	movlw	high config_ASIC@asic
  2896  0263  0087               	movwf	7
  2897  0264  304C               	movlw	low VIN_config@conf
  2898  0265  0084               	movwf	4
  2899  0266  3000               	movlw	high VIN_config@conf
  2900  0267  0085               	movwf	5
  2901  0268  3F40               	moviw [0]fsr1
  2902  0269  3F80               	movwi [0]fsr0
  2903  026A  3F41               	moviw [1]fsr1
  2904  026B  3F81               	movwi [1]fsr0
  2905  026C  3F42               	moviw [2]fsr1
  2906  026D  3F82               	movwi [2]fsr0
  2907  026E  3F43               	moviw [3]fsr1
  2908  026F  3F83               	movwi [3]fsr0
  2909  0270  3F44               	moviw [4]fsr1
  2910  0271  3F84               	movwi [4]fsr0
  2911  0272  3F45               	moviw [5]fsr1
  2912  0273  3F85               	movwi [5]fsr0
  2913  0274  213A               	fcall	_VIN_config
  2914  0275  0008               	return
  2915  0276                     __end_of_config_ASIC:	
  2916                           
  2917                           	psect	text13
  2918  0276                     __ptext13:	
  2919 ;; *************** function _lputs_ISR *****************
  2920 ;; Defined at:
  2921 ;;		line 131 in file "USART1823.c"
  2922 ;; Parameters:    Size  Location     Type
  2923 ;;  data            1    wreg     PTR unsigned char 
  2924 ;;		 -> measure_Impedance@aux(13), read_ADC_channels@aux(7), mess_rec(10), 
  2925 ;;  length          1    0[BANK0 ] unsigned char 
  2926 ;; Auto vars:     Size  Location     Type
  2927 ;;  data            1    3[BANK0 ] PTR unsigned char 
  2928 ;;		 -> measure_Impedance@aux(13), read_ADC_channels@aux(7), mess_rec(10), 
  2929 ;;  i               1    4[BANK0 ] unsigned char 
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  1    wreg      void 
  2932 ;; Registers used:
  2933 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : 0/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMMON   BANK0   BANK1
  2939 ;;      Params:         0       1       0
  2940 ;;      Locals:         0       2       0
  2941 ;;      Temps:          0       2       0
  2942 ;;      Totals:         0       5       0
  2943 ;;Total ram usage:        5 bytes
  2944 ;; Hardware stack levels used:    1
  2945 ;; Hardware stack levels required when called:    2
  2946 ;; This function calls:
  2947 ;;		Nothing
  2948 ;; This function is called by:
  2949 ;;		_mess_handler
  2950 ;;		_config_ASIC
  2951 ;;		_read_ADC_channels
  2952 ;;		_measure_Impedance
  2953 ;; This function uses a non-reentrant model
  2954 ;;
  2955                           
  2956                           
  2957                           ;psect for function _lputs_ISR
  2958  0276                     _lputs_ISR:	
  2959                           
  2960                           ;incstack = 0
  2961                           ; Regs used in _lputs_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  2962                           ;lputs_ISR@data stored from wreg
  2963  0276  0020               	movlb	0	; select bank0
  2964  0277  00CF               	movwf	lputs_ISR@data
  2965                           
  2966                           ;USART1823.c: 133: unsigned char i;
  2967                           ;USART1823.c: 135: if (USART_tx_flag == 1)
  2968  0278  0372               	decf	_USART_tx_flag,w	;volatile
  2969  0279  1903               	btfsc	3,2
  2970  027A  0008               	return
  2971                           
  2972                           ;USART1823.c: 138: for (i = 0; i < length; i++)
  2973                           
  2974                           ;USART1823.c: 136: return;
  2975  027B  01D0               	clrf	lputs_ISR@i
  2976  027C                     l1883:	
  2977  027C  084C               	movf	lputs_ISR@length,w
  2978  027D  0250               	subwf	lputs_ISR@i,w
  2979  027E  1803               	btfsc	3,0
  2980  027F  2A93               	goto	l1885
  2981                           
  2982                           ;USART1823.c: 139: USART_tx_data[i] = data[i];
  2983  0280  0850               	movf	lputs_ISR@i,w
  2984  0281  074F               	addwf	lputs_ISR@data,w
  2985  0282  00CD               	movwf	??_lputs_ISR
  2986  0283  084D               	movf	??_lputs_ISR,w
  2987  0284  0086               	movwf	6
  2988  0285  0187               	clrf	7
  2989  0286  0801               	movf	1,w
  2990  0287  00CE               	movwf	??_lputs_ISR+1
  2991  0288  0850               	movf	lputs_ISR@i,w
  2992  0289  3E2F               	addlw	(low (_USART_tx_data| 0))& (0+255)
  2993  028A  0086               	movwf	6
  2994  028B  0187               	clrf	7
  2995  028C  084E               	movf	??_lputs_ISR+1,w
  2996  028D  0081               	movwf	1
  2997  028E  3001               	movlw	1
  2998  028F  00CD               	movwf	??_lputs_ISR
  2999  0290  084D               	movf	??_lputs_ISR,w
  3000  0291  07D0               	addwf	lputs_ISR@i,f
  3001  0292  2A7C               	goto	l1883
  3002  0293                     l1885:	
  3003                           
  3004                           ;USART1823.c: 141: USART_tx_index = 0;
  3005  0293  01F3               	clrf	_USART_tx_index	;volatile
  3006                           
  3007                           ;USART1823.c: 142: USART_tx_length = length;
  3008  0294  084C               	movf	lputs_ISR@length,w
  3009  0295  00CD               	movwf	??_lputs_ISR
  3010  0296  084D               	movf	??_lputs_ISR,w
  3011  0297  00F4               	movwf	_USART_tx_length	;volatile
  3012                           
  3013                           ;USART1823.c: 144: USART_tx_flag = 1;
  3014  0298  3001               	movlw	1
  3015  0299  00CD               	movwf	??_lputs_ISR
  3016  029A  084D               	movf	??_lputs_ISR,w
  3017  029B  00F2               	movwf	_USART_tx_flag	;volatile
  3018                           
  3019                           ;USART1823.c: 145: TXIE = 1;
  3020  029C  0021               	movlb	1	; select bank1
  3021  029D  1611               	bsf	17,4	;volatile
  3022  029E  0008               	return
  3023  029F                     __end_of_lputs_ISR:	
  3024                           
  3025                           	psect	text14
  3026  013A                     __ptext14:	
  3027 ;; *************** function _VIN_config *****************
  3028 ;; Defined at:
  3029 ;;		line 68 in file "bio3.c"
  3030 ;; Parameters:    Size  Location     Type
  3031 ;;  conf            6    0[BANK0 ] struct .
  3032 ;; Auto vars:     Size  Location     Type
  3033 ;;  out             1    8[BANK0 ] unsigned char 
  3034 ;;  i               1    7[BANK0 ] unsigned char 
  3035 ;;  j               1    0        unsigned char 
  3036 ;; Return value:  Size  Location     Type
  3037 ;;                  1    wreg      void 
  3038 ;; Registers used:
  3039 ;;		wreg, status,2, status,0
  3040 ;; Tracked objects:
  3041 ;;		On entry : 0/0
  3042 ;;		On exit  : 0/0
  3043 ;;		Unchanged: 0/0
  3044 ;; Data sizes:     COMMON   BANK0   BANK1
  3045 ;;      Params:         0       6       0
  3046 ;;      Locals:         0       2       0
  3047 ;;      Temps:          0       1       0
  3048 ;;      Totals:         0       9       0
  3049 ;;Total ram usage:        9 bytes
  3050 ;; Hardware stack levels used:    1
  3051 ;; Hardware stack levels required when called:    2
  3052 ;; This function calls:
  3053 ;;		Nothing
  3054 ;; This function is called by:
  3055 ;;		_config_ASIC
  3056 ;;		_measure_Impedance
  3057 ;; This function uses a non-reentrant model
  3058 ;;
  3059                           
  3060                           
  3061                           ;psect for function _VIN_config
  3062  013A                     _VIN_config:	
  3063                           
  3064                           ;bio3.c: 71: unsigned char i,j,out;
  3065                           ;bio3.c: 73: out &= 0b11110111; PORTC = out;;
  3066                           
  3067                           ;incstack = 0
  3068                           ; Regs used in _VIN_config: [wreg+status,2+status,0]
  3069  013A  30F7               	movlw	247
  3070  013B  0020               	movlb	0	; select bank0
  3071  013C  00D2               	movwf	??_VIN_config
  3072  013D  0852               	movf	??_VIN_config,w
  3073  013E  05D4               	andwf	VIN_config@out,f
  3074  013F  0854               	movf	VIN_config@out,w
  3075  0140  008E               	movwf	14	;volatile
  3076                           
  3077                           ;bio3.c: 74: _delay((unsigned long)((100)*(500000/4000000.0)));
  3078  0141  3004               	movlw	4
  3079  0142                     u1037:	
  3080  0142  0B89               	decfsz	9,f
  3081  0143  2942               	goto	u1037
  3082                           
  3083                           ;bio3.c: 76: RA5 = 0;;
  3084  0144  0020               	movlb	0	; select bank0
  3085  0145  128C               	bcf	12,5	;volatile
  3086                           
  3087                           ;bio3.c: 77: _delay((unsigned long)((100)*(500000/4000000.0)));
  3088  0146  3004               	movlw	4
  3089  0147                     u1047:	
  3090  0147  0B89               	decfsz	9,f
  3091  0148  2947               	goto	u1047
  3092                           
  3093                           ;bio3.c: 79: RA5 = 1;;
  3094  0149  0020               	movlb	0	; select bank0
  3095  014A  168C               	bsf	12,5	;volatile
  3096                           
  3097                           ;bio3.c: 81: for(i = 0; i < 16; i++) {
  3098  014B  01D3               	clrf	VIN_config@i
  3099  014C  3010               	movlw	16
  3100  014D  0253               	subwf	VIN_config@i,w
  3101  014E  1803               	btfsc	3,0
  3102  014F  2978               	goto	l1827
  3103  0150                     l142:	
  3104                           
  3105                           ;bio3.c: 82: if (conf.datas[0] & 0x0001) {
  3106  0150  1C4C               	btfss	VIN_config@conf,0
  3107  0151  2954               	goto	l1813
  3108                           
  3109                           ;bio3.c: 83: out |= 0b00000100; PORTC = out;;
  3110  0152  1554               	bsf	VIN_config@out,2
  3111  0153  2958               	goto	l1815
  3112  0154                     l1813:	
  3113                           ;bio3.c: 84: } else {
  3114                           
  3115                           
  3116                           ;bio3.c: 85: out &= 0b11111011; PORTC = out;;
  3117  0154  30FB               	movlw	251
  3118  0155  00D2               	movwf	??_VIN_config
  3119  0156  0852               	movf	??_VIN_config,w
  3120  0157  05D4               	andwf	VIN_config@out,f
  3121  0158                     l1815:	
  3122  0158  0854               	movf	VIN_config@out,w
  3123  0159  008E               	movwf	14	;volatile
  3124                           
  3125                           ;bio3.c: 86: }
  3126                           ;bio3.c: 87: conf.datas[0] >>= 1;
  3127  015A  3001               	movlw	1
  3128  015B                     u775:	
  3129  015B  36CD               	lsrf	VIN_config@conf+1,f
  3130  015C  0CCC               	rrf	VIN_config@conf,f
  3131  015D  0B89               	decfsz	9,f
  3132  015E  295B               	goto	u775
  3133                           
  3134                           ;bio3.c: 89: _delay((unsigned long)((100)*(500000/4000000.0)));
  3135  015F  3004               	movlw	4
  3136  0160                     u1057:	
  3137  0160  0B89               	decfsz	9,f
  3138  0161  2960               	goto	u1057
  3139                           
  3140                           ;bio3.c: 91: out |= 0b00001000; PORTC = out;;
  3141  0162  0020               	movlb	0	; select bank0
  3142  0163  15D4               	bsf	VIN_config@out,3
  3143  0164  0854               	movf	VIN_config@out,w
  3144  0165  008E               	movwf	14	;volatile
  3145                           
  3146                           ;bio3.c: 92: _delay((unsigned long)((100)*(500000/4000000.0)));
  3147  0166  3004               	movlw	4
  3148  0167                     u1067:	
  3149  0167  0B89               	decfsz	9,f
  3150  0168  2967               	goto	u1067
  3151                           
  3152                           ;bio3.c: 93: out &= 0b11110111; PORTC = out;;
  3153  0169  30F7               	movlw	247
  3154  016A  0020               	movlb	0	; select bank0
  3155  016B  00D2               	movwf	??_VIN_config
  3156  016C  0852               	movf	??_VIN_config,w
  3157  016D  05D4               	andwf	VIN_config@out,f
  3158  016E  0854               	movf	VIN_config@out,w
  3159  016F  008E               	movwf	14	;volatile
  3160  0170  3001               	movlw	1
  3161  0171  00D2               	movwf	??_VIN_config
  3162  0172  0852               	movf	??_VIN_config,w
  3163  0173  07D3               	addwf	VIN_config@i,f
  3164  0174  3010               	movlw	16
  3165  0175  0253               	subwf	VIN_config@i,w
  3166  0176  1C03               	skipc
  3167  0177  2950               	goto	l142
  3168  0178                     l1827:	
  3169                           
  3170                           ;bio3.c: 94: }
  3171                           ;bio3.c: 96: for(i = 0; i < 16; i++) {
  3172  0178  01D3               	clrf	VIN_config@i
  3173  0179  3010               	movlw	16
  3174  017A  0253               	subwf	VIN_config@i,w
  3175  017B  1803               	btfsc	3,0
  3176  017C  29A5               	goto	l1851
  3177  017D                     l146:	
  3178                           
  3179                           ;bio3.c: 97: if (conf.datas[1] & 0x0001) {
  3180  017D  1C4E               	btfss	VIN_config@conf+2,0
  3181  017E  2981               	goto	l1837
  3182                           
  3183                           ;bio3.c: 98: out |= 0b00000100; PORTC = out;;
  3184  017F  1554               	bsf	VIN_config@out,2
  3185  0180  2985               	goto	l1839
  3186  0181                     l1837:	
  3187                           ;bio3.c: 99: } else {
  3188                           
  3189                           
  3190                           ;bio3.c: 100: out &= 0b11111011; PORTC = out;;
  3191  0181  30FB               	movlw	251
  3192  0182  00D2               	movwf	??_VIN_config
  3193  0183  0852               	movf	??_VIN_config,w
  3194  0184  05D4               	andwf	VIN_config@out,f
  3195  0185                     l1839:	
  3196  0185  0854               	movf	VIN_config@out,w
  3197  0186  008E               	movwf	14	;volatile
  3198                           
  3199                           ;bio3.c: 101: }
  3200                           ;bio3.c: 102: conf.datas[1] >>= 1;
  3201  0187  3001               	movlw	1
  3202  0188                     u815:	
  3203  0188  36CF               	lsrf	VIN_config@conf+3,f
  3204  0189  0CCE               	rrf	VIN_config@conf+2,f
  3205  018A  0B89               	decfsz	9,f
  3206  018B  2988               	goto	u815
  3207                           
  3208                           ;bio3.c: 104: _delay((unsigned long)((100)*(500000/4000000.0)));
  3209  018C  3004               	movlw	4
  3210  018D                     u1077:	
  3211  018D  0B89               	decfsz	9,f
  3212  018E  298D               	goto	u1077
  3213                           
  3214                           ;bio3.c: 106: out |= 0b00001000; PORTC = out;;
  3215  018F  0020               	movlb	0	; select bank0
  3216  0190  15D4               	bsf	VIN_config@out,3
  3217  0191  0854               	movf	VIN_config@out,w
  3218  0192  008E               	movwf	14	;volatile
  3219                           
  3220                           ;bio3.c: 107: _delay((unsigned long)((100)*(500000/4000000.0)));
  3221  0193  3004               	movlw	4
  3222  0194                     u1087:	
  3223  0194  0B89               	decfsz	9,f
  3224  0195  2994               	goto	u1087
  3225                           
  3226                           ;bio3.c: 108: out &= 0b11110111; PORTC = out;;
  3227  0196  30F7               	movlw	247
  3228  0197  0020               	movlb	0	; select bank0
  3229  0198  00D2               	movwf	??_VIN_config
  3230  0199  0852               	movf	??_VIN_config,w
  3231  019A  05D4               	andwf	VIN_config@out,f
  3232  019B  0854               	movf	VIN_config@out,w
  3233  019C  008E               	movwf	14	;volatile
  3234  019D  3001               	movlw	1
  3235  019E  00D2               	movwf	??_VIN_config
  3236  019F  0852               	movf	??_VIN_config,w
  3237  01A0  07D3               	addwf	VIN_config@i,f
  3238  01A1  3010               	movlw	16
  3239  01A2  0253               	subwf	VIN_config@i,w
  3240  01A3  1C03               	skipc
  3241  01A4  297D               	goto	l146
  3242  01A5                     l1851:	
  3243                           
  3244                           ;bio3.c: 109: }
  3245                           ;bio3.c: 111: for(i = 0; i < 1; i++) {
  3246  01A5  01D3               	clrf	VIN_config@i
  3247  01A6                     L1:	
  3248  01A6  0853               	movf	VIN_config@i,w
  3249  01A7  1D03               	btfss	3,2
  3250  01A8  0008               	return
  3251                           
  3252                           ;bio3.c: 112: if (conf.datas[2] & 0x0001) {
  3253  01A9  1C50               	btfss	VIN_config@conf+4,0
  3254  01AA  29AD               	goto	l1861
  3255                           
  3256                           ;bio3.c: 113: out |= 0b00000100; PORTC = out;;
  3257  01AB  1554               	bsf	VIN_config@out,2
  3258  01AC  29B1               	goto	l1863
  3259  01AD                     l1861:	
  3260                           ;bio3.c: 114: } else {
  3261                           
  3262                           
  3263                           ;bio3.c: 115: out &= 0b11111011; PORTC = out;;
  3264  01AD  30FB               	movlw	251
  3265  01AE  00D2               	movwf	??_VIN_config
  3266  01AF  0852               	movf	??_VIN_config,w
  3267  01B0  05D4               	andwf	VIN_config@out,f
  3268  01B1                     l1863:	
  3269  01B1  0854               	movf	VIN_config@out,w
  3270  01B2  008E               	movwf	14	;volatile
  3271                           
  3272                           ;bio3.c: 116: }
  3273                           ;bio3.c: 117: conf.datas[2] >>= 1;
  3274  01B3  3001               	movlw	1
  3275  01B4                     u855:	
  3276  01B4  36D1               	lsrf	VIN_config@conf+5,f
  3277  01B5  0CD0               	rrf	VIN_config@conf+4,f
  3278  01B6  0B89               	decfsz	9,f
  3279  01B7  29B4               	goto	u855
  3280                           
  3281                           ;bio3.c: 119: _delay((unsigned long)((100)*(500000/4000000.0)));
  3282  01B8  3004               	movlw	4
  3283  01B9                     u1097:	
  3284  01B9  0B89               	decfsz	9,f
  3285  01BA  29B9               	goto	u1097
  3286                           
  3287                           ;bio3.c: 121: out |= 0b00001000; PORTC = out;;
  3288  01BB  0020               	movlb	0	; select bank0
  3289  01BC  15D4               	bsf	VIN_config@out,3
  3290  01BD  0854               	movf	VIN_config@out,w
  3291  01BE  008E               	movwf	14	;volatile
  3292                           
  3293                           ;bio3.c: 122: _delay((unsigned long)((100)*(500000/4000000.0)));
  3294  01BF  3004               	movlw	4
  3295  01C0                     u1107:	
  3296  01C0  0B89               	decfsz	9,f
  3297  01C1  29C0               	goto	u1107
  3298                           
  3299                           ;bio3.c: 123: out &= 0b11110111; PORTC = out;;
  3300  01C2  30F7               	movlw	247
  3301  01C3  0020               	movlb	0	; select bank0
  3302  01C4  00D2               	movwf	??_VIN_config
  3303  01C5  0852               	movf	??_VIN_config,w
  3304  01C6  05D4               	andwf	VIN_config@out,f
  3305  01C7  0854               	movf	VIN_config@out,w
  3306  01C8  008E               	movwf	14	;volatile
  3307  01C9  3001               	movlw	1
  3308  01CA  00D2               	movwf	??_VIN_config
  3309  01CB  0852               	movf	??_VIN_config,w
  3310  01CC  07D3               	addwf	VIN_config@i,f
  3311  01CD  29A6               	goto	L1
  3312  01CE                     __end_of_VIN_config:	
  3313                           
  3314                           	psect	text15
  3315  039E                     __ptext15:	
  3316 ;; *************** function _SYSTEM_Initialize *****************
  3317 ;; Defined at:
  3318 ;;		line 70 in file "mcc_generated_files/mcc.c"
  3319 ;; Parameters:    Size  Location     Type
  3320 ;;		None
  3321 ;; Auto vars:     Size  Location     Type
  3322 ;;		None
  3323 ;; Return value:  Size  Location     Type
  3324 ;;                  1    wreg      void 
  3325 ;; Registers used:
  3326 ;;		wreg, status,2, status,0, pclath, cstack
  3327 ;; Tracked objects:
  3328 ;;		On entry : 0/0
  3329 ;;		On exit  : 0/0
  3330 ;;		Unchanged: 0/0
  3331 ;; Data sizes:     COMMON   BANK0   BANK1
  3332 ;;      Params:         0       0       0
  3333 ;;      Locals:         0       0       0
  3334 ;;      Temps:          0       0       0
  3335 ;;      Totals:         0       0       0
  3336 ;;Total ram usage:        0 bytes
  3337 ;; Hardware stack levels used:    1
  3338 ;; Hardware stack levels required when called:    3
  3339 ;; This function calls:
  3340 ;;		_OSCILLATOR_Initialize
  3341 ;;		_PIN_MANAGER_Initialize
  3342 ;; This function is called by:
  3343 ;;		_main
  3344 ;; This function uses a non-reentrant model
  3345 ;;
  3346                           
  3347                           
  3348                           ;psect for function _SYSTEM_Initialize
  3349  039E                     _SYSTEM_Initialize:	
  3350                           
  3351                           ;mcc.c: 73: PIN_MANAGER_Initialize();
  3352                           
  3353                           ;incstack = 0
  3354                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3355  039E  2327               	fcall	_PIN_MANAGER_Initialize
  3356                           
  3357                           ;mcc.c: 74: OSCILLATOR_Initialize();
  3358  039F  2394               	fcall	_OSCILLATOR_Initialize
  3359  03A0  0008               	return
  3360  03A1                     __end_of_SYSTEM_Initialize:	
  3361                           
  3362                           	psect	text16
  3363  0327                     __ptext16:	
  3364 ;; *************** function _PIN_MANAGER_Initialize *****************
  3365 ;; Defined at:
  3366 ;;		line 49 in file "mcc_generated_files/pin_manager.c"
  3367 ;; Parameters:    Size  Location     Type
  3368 ;;		None
  3369 ;; Auto vars:     Size  Location     Type
  3370 ;;		None
  3371 ;; Return value:  Size  Location     Type
  3372 ;;                  1    wreg      void 
  3373 ;; Registers used:
  3374 ;;		wreg, status,2
  3375 ;; Tracked objects:
  3376 ;;		On entry : 0/0
  3377 ;;		On exit  : 0/0
  3378 ;;		Unchanged: 0/0
  3379 ;; Data sizes:     COMMON   BANK0   BANK1
  3380 ;;      Params:         0       0       0
  3381 ;;      Locals:         0       0       0
  3382 ;;      Temps:          0       0       0
  3383 ;;      Totals:         0       0       0
  3384 ;;Total ram usage:        0 bytes
  3385 ;; Hardware stack levels used:    1
  3386 ;; Hardware stack levels required when called:    2
  3387 ;; This function calls:
  3388 ;;		Nothing
  3389 ;; This function is called by:
  3390 ;;		_SYSTEM_Initialize
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           
  3394                           
  3395                           ;psect for function _PIN_MANAGER_Initialize
  3396  0327                     _PIN_MANAGER_Initialize:	
  3397                           
  3398                           ;pin_manager.c: 51: LATA = 0x0;
  3399                           
  3400                           ;incstack = 0
  3401                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3402  0327  0022               	movlb	2	; select bank2
  3403  0328  018C               	clrf	12	;volatile
  3404                           
  3405                           ;pin_manager.c: 52: LATC = 0x0;
  3406  0329  018E               	clrf	14	;volatile
  3407                           
  3408                           ;pin_manager.c: 55: ANSELA = 0b00000100;
  3409  032A  3004               	movlw	4
  3410  032B  0023               	movlb	3	; select bank3
  3411  032C  008C               	movwf	12	;volatile
  3412                           
  3413                           ;pin_manager.c: 56: ANSELC = 0b00000011;
  3414  032D  3003               	movlw	3
  3415  032E  008E               	movwf	14	;volatile
  3416                           
  3417                           ;pin_manager.c: 59: WPUA = 0x3B;
  3418  032F  303B               	movlw	59
  3419  0330  0024               	movlb	4	; select bank4
  3420  0331  008C               	movwf	12	;volatile
  3421                           
  3422                           ;pin_manager.c: 60: WPUC = 0x3C;
  3423  0332  303C               	movlw	60
  3424  0333  008E               	movwf	14	;volatile
  3425                           
  3426                           ;pin_manager.c: 62: RXDTSEL = 0;
  3427  0334  0022               	movlb	2	; select bank2
  3428  0335  139D               	bcf	29,7	;volatile
  3429                           
  3430                           ;pin_manager.c: 63: TXCKSEL = 0;
  3431  0336  111D               	bcf	29,2	;volatile
  3432                           
  3433                           ;pin_manager.c: 66: TRISC = 0b01100011;
  3434  0337  3063               	movlw	99
  3435  0338  0021               	movlb	1	; select bank1
  3436  0339  008E               	movwf	14	;volatile
  3437                           
  3438                           ;pin_manager.c: 67: TRISA = 0b01011111;
  3439  033A  305F               	movlw	95
  3440  033B  008C               	movwf	12	;volatile
  3441                           
  3442                           ;pin_manager.c: 69: OPTION_REGbits.nWPUEN = 0x0;
  3443  033C  1395               	bcf	21,7	;volatile
  3444                           
  3445                           ;pin_manager.c: 70: APFCON = 0x00;
  3446  033D  0022               	movlb	2	; select bank2
  3447  033E  019D               	clrf	29	;volatile
  3448  033F  0008               	return
  3449  0340                     __end_of_PIN_MANAGER_Initialize:	
  3450                           
  3451                           	psect	text17
  3452  0394                     __ptext17:	
  3453 ;; *************** function _OSCILLATOR_Initialize *****************
  3454 ;; Defined at:
  3455 ;;		line 78 in file "mcc_generated_files/mcc.c"
  3456 ;; Parameters:    Size  Location     Type
  3457 ;;		None
  3458 ;; Auto vars:     Size  Location     Type
  3459 ;;		None
  3460 ;; Return value:  Size  Location     Type
  3461 ;;                  1    wreg      void 
  3462 ;; Registers used:
  3463 ;;		wreg, status,2
  3464 ;; Tracked objects:
  3465 ;;		On entry : 0/0
  3466 ;;		On exit  : 0/0
  3467 ;;		Unchanged: 0/0
  3468 ;; Data sizes:     COMMON   BANK0   BANK1
  3469 ;;      Params:         0       0       0
  3470 ;;      Locals:         0       0       0
  3471 ;;      Temps:          0       0       0
  3472 ;;      Totals:         0       0       0
  3473 ;;Total ram usage:        0 bytes
  3474 ;; Hardware stack levels used:    1
  3475 ;; Hardware stack levels required when called:    2
  3476 ;; This function calls:
  3477 ;;		Nothing
  3478 ;; This function is called by:
  3479 ;;		_SYSTEM_Initialize
  3480 ;; This function uses a non-reentrant model
  3481 ;;
  3482                           
  3483                           
  3484                           ;psect for function _OSCILLATOR_Initialize
  3485  0394                     _OSCILLATOR_Initialize:	
  3486                           
  3487                           ;mcc.c: 81: OSCCON = 0x3A;
  3488                           
  3489                           ;incstack = 0
  3490                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3491  0394  303A               	movlw	58
  3492  0395  0021               	movlb	1	; select bank1
  3493  0396  0099               	movwf	25	;volatile
  3494                           
  3495                           ;mcc.c: 83: OSCSTAT = 0x00;
  3496  0397  019A               	clrf	26	;volatile
  3497                           
  3498                           ;mcc.c: 85: OSCTUNE = 0x00;
  3499  0398  0198               	clrf	24	;volatile
  3500  0399  0008               	return
  3501  039A                     __end_of_OSCILLATOR_Initialize:	
  3502                           
  3503                           	psect	intentry
  3504  0004                     __pintentry:	
  3505 ;; *************** function _isr *****************
  3506 ;; Defined at:
  3507 ;;		line 65 in file "main.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;		None
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;		None
  3512 ;; Return value:  Size  Location     Type
  3513 ;;                  1    wreg      void 
  3514 ;; Registers used:
  3515 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3516 ;; Tracked objects:
  3517 ;;		On entry : 0/0
  3518 ;;		On exit  : 0/0
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMMON   BANK0   BANK1
  3521 ;;      Params:         0       0       0
  3522 ;;      Locals:         0       0       0
  3523 ;;      Temps:          2       0       0
  3524 ;;      Totals:         2       0       0
  3525 ;;Total ram usage:        2 bytes
  3526 ;; Hardware stack levels used:    1
  3527 ;; Hardware stack levels required when called:    1
  3528 ;; This function calls:
  3529 ;;		_start_TMR0_ISR
  3530 ;;		_stop_TMR0_ISR
  3531 ;;		i1_start_RX_USART_ISR
  3532 ;; This function is called by:
  3533 ;;		Interrupt level 1
  3534 ;; This function uses a non-reentrant model
  3535 ;;
  3536                           
  3537  0004                     _isr:	
  3538                           
  3539                           ;incstack = 0
  3540  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3541                           
  3542                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3543  0005  3180               	pagesel	$
  3544  0006  0020               	movlb	0	; select bank0
  3545  0007  087F               	movf	127,w
  3546  0008  00F9               	movwf	??_isr+1
  3547                           
  3548                           ;main.c: 69: if (TMR0IF && TMR0IE) {
  3549  0009  190B               	btfsc	11,2	;volatile
  3550  000A  1E8B               	btfss	11,5	;volatile
  3551  000B  2815               	goto	i1l120
  3552                           
  3553                           ;main.c: 71: TMR0IF = 0;
  3554  000C  110B               	bcf	11,2	;volatile
  3555                           
  3556                           ;main.c: 72: TMR0 = TIMER0_timeout;
  3557  000D  0870               	movf	_TIMER0_timeout,w	;volatile
  3558  000E  0095               	movwf	21	;volatile
  3559                           
  3560                           ;main.c: 75: TIMER0_flag = 1;
  3561  000F  3001               	movlw	1
  3562  0010  00F8               	movwf	??_isr
  3563  0011  0878               	movf	??_isr,w
  3564  0012  00BE               	movwf	_TIMER0_flag	;volatile
  3565                           
  3566                           ;main.c: 80: stop_TMR0_ISR();
  3567  0013  23A1               	fcall	_stop_TMR0_ISR
  3568                           
  3569                           ;main.c: 82: return;
  3570  0014  2854               	goto	i1l121
  3571  0015                     i1l120:	
  3572                           
  3573                           ;main.c: 83: }
  3574                           ;main.c: 87: if (RCIF) {
  3575  0015  1E91               	btfss	17,5	;volatile
  3576  0016  2834               	goto	i1l122
  3577                           
  3578                           ;main.c: 88: stop_TMR0_ISR();
  3579  0017  23A1               	fcall	_stop_TMR0_ISR
  3580                           
  3581                           ;main.c: 91: if (OERR) {
  3582  0018  0023               	movlb	3	; select bank3
  3583  0019  1C9D               	btfss	29,1	;volatile
  3584  001A  281E               	goto	i1l1761
  3585                           
  3586                           ;main.c: 93: CREN = 0;
  3587  001B  121D               	bcf	29,4	;volatile
  3588                           
  3589                           ;main.c: 94: CREN = 1;
  3590  001C  161D               	bsf	29,4	;volatile
  3591                           
  3592                           ;main.c: 95: return;
  3593  001D  2854               	goto	i1l121
  3594  001E                     i1l1761:	
  3595                           
  3596                           ;main.c: 96: }
  3597                           ;main.c: 99: if (USART_rx_index >= 15) {
  3598  001E  300F               	movlw	15
  3599  001F  0020               	movlb	0	; select bank0
  3600  0020  0240               	subwf	_USART_rx_index,w	;volatile
  3601  0021  1803               	btfsc	3,0
  3602                           
  3603                           ;main.c: 100: USART_rx_index = 0;
  3604  0022  01C0               	clrf	_USART_rx_index	;volatile
  3605                           
  3606                           ;main.c: 101: }
  3607                           ;main.c: 103: USART_rx_data[USART_rx_index++] = RCREG;
  3608  0023  0023               	movlb	3	; select bank3
  3609  0024  0819               	movf	25,w	;volatile
  3610  0025  00F8               	movwf	??_isr
  3611  0026  0020               	movlb	0	; select bank0
  3612  0027  0840               	movf	_USART_rx_index,w
  3613  0028  3E20               	addlw	(low (_USART_rx_data| 0))& (0+255)
  3614  0029  0086               	movwf	6
  3615  002A  0187               	clrf	7
  3616  002B  0878               	movf	??_isr,w
  3617  002C  0081               	movwf	1
  3618  002D  3001               	movlw	1
  3619  002E  00F8               	movwf	??_isr
  3620  002F  0878               	movf	??_isr,w
  3621  0030  07C0               	addwf	_USART_rx_index,f	;volatile
  3622                           
  3623                           ;main.c: 105: start_TMR0_ISR(98);
  3624  0031  3062               	movlw	98
  3625  0032  2362               	fcall	_start_TMR0_ISR
  3626                           
  3627                           ;main.c: 107: return;
  3628  0033  2854               	goto	i1l121
  3629  0034                     i1l122:	
  3630                           
  3631                           ;main.c: 108: }
  3632                           ;main.c: 112: if (TXIF && TXIE) {
  3633  0034  1E11               	btfss	17,4	;volatile
  3634  0035  2854               	goto	i1l121
  3635  0036  0021               	movlb	1	; select bank1
  3636  0037  1E11               	btfss	17,4	;volatile
  3637  0038  2854               	goto	i1l121
  3638                           
  3639                           ;main.c: 114: TXREG = USART_tx_data[USART_tx_index++];
  3640  0039  0873               	movf	_USART_tx_index,w
  3641  003A  3E2F               	addlw	(low (_USART_tx_data| 0))& (0+255)
  3642  003B  0086               	movwf	6
  3643  003C  0187               	clrf	7
  3644  003D  0801               	movf	1,w
  3645  003E  0023               	movlb	3	; select bank3
  3646  003F  009A               	movwf	26	;volatile
  3647  0040  3001               	movlw	1
  3648  0041  00F8               	movwf	??_isr
  3649  0042  0878               	movf	??_isr,w
  3650  0043  07F3               	addwf	_USART_tx_index,f	;volatile
  3651                           
  3652                           ;main.c: 116: if (USART_tx_index >= USART_tx_length) {
  3653  0044  0874               	movf	_USART_tx_length,w	;volatile
  3654  0045  0273               	subwf	_USART_tx_index,w	;volatile
  3655  0046  1C03               	skipc
  3656  0047  2854               	goto	i1l121
  3657                           
  3658                           ;main.c: 117: TXIE = 0;
  3659  0048  0021               	movlb	1	; select bank1
  3660  0049  1211               	bcf	17,4	;volatile
  3661                           
  3662                           ;main.c: 118: USART_tx_flag = 0;
  3663  004A  01F2               	clrf	_USART_tx_flag	;volatile
  3664                           
  3665                           ;main.c: 121: _delay((unsigned long)((25)*(500000/4000.0)));
  3666  004B  3005               	movlw	5
  3667  004C  00F8               	movwf	??_isr
  3668  004D  300D               	movlw	13
  3669  004E                     u111_27:	
  3670  004E  0B89               	decfsz	9,f
  3671  004F  284E               	goto	u111_27
  3672  0050  0BF8               	decfsz	??_isr,f
  3673  0051  284E               	goto	u111_27
  3674  0052  3200               	nop2
  3675                           
  3676                           ;main.c: 122: start_RX_USART_ISR();
  3677  0053  2351               	fcall	i1_start_RX_USART_ISR
  3678  0054                     i1l121:	
  3679                           ;main.c: 123: }
  3680                           ;main.c: 124: return;
  3681                           
  3682  0054  0879               	movf	??_isr+1,w
  3683  0055  0020               	movlb	0	; select bank0
  3684  0056  00FF               	movwf	127
  3685  0057  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3686  0058  0009               	retfie
  3687  0059                     __end_of_isr:	
  3688                           
  3689                           	psect	text19
  3690  0351                     __ptext19:	
  3691 ;; *************** function i1_start_RX_USART_ISR *****************
  3692 ;; Defined at:
  3693 ;;		line 82 in file "USART1823.c"
  3694 ;; Parameters:    Size  Location     Type
  3695 ;;		None
  3696 ;; Auto vars:     Size  Location     Type
  3697 ;;		None
  3698 ;; Return value:  Size  Location     Type
  3699 ;;                  1    wreg      void 
  3700 ;; Registers used:
  3701 ;;		wreg, status,2
  3702 ;; Tracked objects:
  3703 ;;		On entry : 0/0
  3704 ;;		On exit  : 0/0
  3705 ;;		Unchanged: 0/0
  3706 ;; Data sizes:     COMMON   BANK0   BANK1
  3707 ;;      Params:         0       0       0
  3708 ;;      Locals:         0       0       0
  3709 ;;      Temps:          0       0       0
  3710 ;;      Totals:         0       0       0
  3711 ;;Total ram usage:        0 bytes
  3712 ;; Hardware stack levels used:    1
  3713 ;; This function calls:
  3714 ;;		Nothing
  3715 ;; This function is called by:
  3716 ;;		_isr
  3717 ;; This function uses a non-reentrant model
  3718 ;;
  3719                           
  3720                           
  3721                           ;psect for function i1_start_RX_USART_ISR
  3722  0351                     i1_start_RX_USART_ISR:	
  3723                           
  3724                           ;USART1823.c: 85: { BRGH = 1; BRG16 = 1; SPBRGH = 0; SPBRGL = 12; };
  3725                           
  3726                           ;incstack = 0
  3727                           ; Regs used in i1_start_RX_USART_ISR: [wreg+status,2]
  3728  0351  0023               	movlb	3	; select bank3
  3729  0352  151E               	bsf	30,2	;volatile
  3730  0353  159F               	bsf	31,3	;volatile
  3731  0354  019C               	clrf	28	;volatile
  3732  0355  300C               	movlw	12
  3733  0356  009B               	movwf	27	;volatile
  3734                           
  3735                           ;USART1823.c: 87: SYNC = 0;
  3736  0357  121E               	bcf	30,4	;volatile
  3737                           
  3738                           ;USART1823.c: 88: SPEN = 1;
  3739  0358  179D               	bsf	29,7	;volatile
  3740                           
  3741                           ;USART1823.c: 89: CREN = 1;
  3742  0359  161D               	bsf	29,4	;volatile
  3743                           
  3744                           ;USART1823.c: 91: USART_rx_flag = 0;
  3745  035A  0020               	movlb	0	; select bank0
  3746  035B  01BF               	clrf	_USART_rx_flag	;volatile
  3747                           
  3748                           ;USART1823.c: 92: USART_rx_index = 0;
  3749  035C  01C0               	clrf	_USART_rx_index	;volatile
  3750                           
  3751                           ;USART1823.c: 94: RCIE = 1;
  3752  035D  0021               	movlb	1	; select bank1
  3753  035E  1691               	bsf	17,5	;volatile
  3754                           
  3755                           ;USART1823.c: 95: PEIE = 1;
  3756  035F  170B               	bsf	11,6	;volatile
  3757                           
  3758                           ;USART1823.c: 96: GIE = 1;
  3759  0360  178B               	bsf	11,7	;volatile
  3760  0361  0008               	return
  3761  0362                     __end_ofi1_start_RX_USART_ISR:	
  3762                           
  3763                           	psect	text20
  3764  03A1                     __ptext20:	
  3765 ;; *************** function _stop_TMR0_ISR *****************
  3766 ;; Defined at:
  3767 ;;		line 44 in file "TMR0.c"
  3768 ;; Parameters:    Size  Location     Type
  3769 ;;		None
  3770 ;; Auto vars:     Size  Location     Type
  3771 ;;		None
  3772 ;; Return value:  Size  Location     Type
  3773 ;;                  1    wreg      void 
  3774 ;; Registers used:
  3775 ;;		None
  3776 ;; Tracked objects:
  3777 ;;		On entry : 0/0
  3778 ;;		On exit  : 0/0
  3779 ;;		Unchanged: 0/0
  3780 ;; Data sizes:     COMMON   BANK0   BANK1
  3781 ;;      Params:         0       0       0
  3782 ;;      Locals:         0       0       0
  3783 ;;      Temps:          0       0       0
  3784 ;;      Totals:         0       0       0
  3785 ;;Total ram usage:        0 bytes
  3786 ;; Hardware stack levels used:    1
  3787 ;; This function calls:
  3788 ;;		Nothing
  3789 ;; This function is called by:
  3790 ;;		_isr
  3791 ;; This function uses a non-reentrant model
  3792 ;;
  3793                           
  3794                           
  3795                           ;psect for function _stop_TMR0_ISR
  3796  03A1                     _stop_TMR0_ISR:	
  3797                           
  3798                           ;TMR0.c: 47: TMR0IE = 0;
  3799                           
  3800                           ;incstack = 0
  3801                           ; Regs used in _stop_TMR0_ISR: []
  3802  03A1  128B               	bcf	11,5	;volatile
  3803                           
  3804                           ;TMR0.c: 48: TMR0IF = 0;
  3805  03A2  110B               	bcf	11,2	;volatile
  3806  03A3  0008               	return
  3807  03A4                     __end_of_stop_TMR0_ISR:	
  3808                           
  3809                           	psect	text21
  3810  0362                     __ptext21:	
  3811 ;; *************** function _start_TMR0_ISR *****************
  3812 ;; Defined at:
  3813 ;;		line 30 in file "TMR0.c"
  3814 ;; Parameters:    Size  Location     Type
  3815 ;;  val             1    wreg     unsigned char 
  3816 ;; Auto vars:     Size  Location     Type
  3817 ;;  val             1    2[COMMON] unsigned char 
  3818 ;; Return value:  Size  Location     Type
  3819 ;;                  1    wreg      void 
  3820 ;; Registers used:
  3821 ;;		wreg, status,2
  3822 ;; Tracked objects:
  3823 ;;		On entry : 0/0
  3824 ;;		On exit  : 0/0
  3825 ;;		Unchanged: 0/0
  3826 ;; Data sizes:     COMMON   BANK0   BANK1
  3827 ;;      Params:         0       0       0
  3828 ;;      Locals:         1       0       0
  3829 ;;      Temps:          2       0       0
  3830 ;;      Totals:         3       0       0
  3831 ;;Total ram usage:        3 bytes
  3832 ;; Hardware stack levels used:    1
  3833 ;; This function calls:
  3834 ;;		Nothing
  3835 ;; This function is called by:
  3836 ;;		_isr
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839                           
  3840                           
  3841                           ;psect for function _start_TMR0_ISR
  3842  0362                     _start_TMR0_ISR:	
  3843                           
  3844                           ;incstack = 0
  3845                           ; Regs used in _start_TMR0_ISR: [wreg+status,2]
  3846                           ;start_TMR0_ISR@val stored from wreg
  3847  0362  00F7               	movwf	start_TMR0_ISR@val
  3848                           
  3849                           ;TMR0.c: 32: TIMER0_timeout = val;
  3850  0363  0877               	movf	start_TMR0_ISR@val,w
  3851  0364  00F5               	movwf	??_start_TMR0_ISR
  3852  0365  01F6               	clrf	??_start_TMR0_ISR+1
  3853  0366  0875               	movf	??_start_TMR0_ISR,w
  3854  0367  00F0               	movwf	_TIMER0_timeout	;volatile
  3855  0368  0876               	movf	??_start_TMR0_ISR+1,w
  3856  0369  00F1               	movwf	_TIMER0_timeout+1	;volatile
  3857                           
  3858                           ;TMR0.c: 33: TIMER0_flag = 0;
  3859  036A  0020               	movlb	0	; select bank0
  3860  036B  01BE               	clrf	_TIMER0_flag	;volatile
  3861                           
  3862                           ;TMR0.c: 36: TMR0 = TIMER0_timeout;
  3863  036C  0870               	movf	_TIMER0_timeout,w	;volatile
  3864  036D  0095               	movwf	21	;volatile
  3865                           
  3866                           ;TMR0.c: 39: TMR0IF = 0;
  3867  036E  110B               	bcf	11,2	;volatile
  3868                           
  3869                           ;TMR0.c: 40: TMR0IE = 1;
  3870  036F  168B               	bsf	11,5	;volatile
  3871                           
  3872                           ;TMR0.c: 41: GIE = 1;
  3873  0370  178B               	bsf	11,7	;volatile
  3874  0371  0008               	return
  3875  0372                     __end_of_start_TMR0_ISR:	
  3876  007E                     btemp	set	126	;btemp
  3877  007E                     int$flags	set	126
  3878  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         49
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     36      80
    BANK1            32      0       0

Pointer List with Targets:

    lputs_ISR@data	PTR unsigned char  size(1) Largest target is 13
		 -> measure_Impedance@aux(BANK0[13]), read_ADC_channels@aux(BANK0[7]), mess_rec(BANK0[10]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_start_TMR0_ISR

Critical Paths under _main in BANK0

    _main->_mess_handler
    _mess_handler->_measure_Impedance
    _read_ADC_channels->_ADC_2
    _read_ADC_channels->_ADC_4
    _read_ADC_channels->_ADC_5
    _measure_Impedance->_VIN_config
    _config_ASIC->_VIN_config

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6912
                                             34 BANK0      2     2      0
                  _SYSTEM_Initialize
                       _mess_handler
                          _setup_ADC
                         _setup_TMR0
                          _start_RCM
                 _start_RX_USART_ISR
                 _start_TX_USART_ISR
 ---------------------------------------------------------------------------------
 (1) _start_TX_USART_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_RX_USART_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_RCM                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup_TMR0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup_ADC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mess_handler                                         1     1      0    6813
                                             33 BANK0      1     1      0
                        _config_ASIC
                          _lputs_ISR
                  _measure_Impedance
                  _read_ADC_channels
 ---------------------------------------------------------------------------------
 (2) _read_ADC_channels                                   14    14      0    1206
                                              6 BANK0     14    14      0
                              _ADC_2
                              _ADC_4
                              _ADC_5
                          _lputs_ISR
 ---------------------------------------------------------------------------------
 (3) _ADC_5                                                6     4      2      40
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _measure_Impedance                                   26    26      0    3031
                                              9 BANK0     24    24      0
                              _ADC_2
                              _ADC_4
                         _VIN_config
                          _lputs_ISR
 ---------------------------------------------------------------------------------
 (3) _ADC_4                                                6     4      2      40
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _ADC_2                                                6     4      2      40
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _config_ASIC                                          7     7      0    1944
                                              9 BANK0      7     7      0
                         _VIN_config
                          _lputs_ISR
 ---------------------------------------------------------------------------------
 (3) _lputs_ISR                                            5     4      1     632
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (3) _VIN_config                                          10     4      6    1130
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0      22
                                              3 COMMON     2     2      0
                     _start_TMR0_ISR
                      _stop_TMR0_ISR
               i1_start_RX_USART_ISR
 ---------------------------------------------------------------------------------
 (5) i1_start_RX_USART_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _stop_TMR0_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _start_TMR0_ISR                                       3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _mess_handler
     _config_ASIC
       _VIN_config
       _lputs_ISR
     _lputs_ISR
     _measure_Impedance
       _ADC_2
       _ADC_4
       _VIN_config
       _lputs_ISR
     _read_ADC_channels
       _ADC_2
       _ADC_4
       _ADC_5
       _lputs_ISR
   _setup_ADC
   _setup_TMR0
   _start_RCM
   _start_RX_USART_ISR
   _start_TX_USART_ISR

 _isr (ROOT)
   _start_TMR0_ISR
   _stop_TMR0_ISR
   i1_start_RX_USART_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      5A       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     24      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      5A       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Tue Feb 28 09:03:59 2017

                    __CFG_CP$OFF 0000                    _USART_rx_data 0020                    _USART_rx_flag 003F  
                  _USART_tx_data 002F                    _USART_tx_flag 0072                       _VIN_config 013A  
                            l108 01E1                              l142 0150                              l146 017D  
                            l325 0326                              l352 02EB                              l364 02A5  
                            l358 02C8                              _GIE 005F                              _RA5 0065  
                            _PS0 04A8                              _PS1 04A9                              _PS2 04AA  
                   __CFG_CPD$OFF 0000                              u815 0188                              _PSA 04AB  
                            u905 02F6                              u925 02D3                              u855 01B4  
                            u775 015B                              u945 02B0                              u997 01DA  
                            _isr 0004                     __CFG_BORV$HI 0000                              wreg 0009  
                   __CFG_IESO$ON 0000                   _USART_rx_index 0040                     __CFG_LVP$OFF 0000  
                 _USART_tx_index 0073                             l2131 020A                             l2117 01ED  
                           l2081 0309                             l2129 01F5                             l2083 0311  
                           l2091 0317                             l2085 0313                             l2087 0315  
                           l1813 0154                             l1815 0158                             l1851 01A5  
                           l1827 0178                             l1861 01AD                             l1837 0181  
                           l1863 01B1                             l1839 0185                             l1883 027C  
                           l1885 0293                             ?_isr 0075                             _ADGO 04E9  
                   __CFG_WDTE$ON 0000                             _BRGH 0CF2                             _CREN 0CEC  
                           u1007 009B                             u1017 00D7                             u1107 01C0  
                           u1027 0112                             u1037 0142                             u1047 0147  
                           u1057 0160                             u1067 0167                             u1077 018D  
                           _LATA 010C                             u1087 0194                             _LATC 010E  
                           u1097 01B9                             _PEIE 005E                             _RCIE 048D  
                           _RCIF 008D                             _OERR 0CE9                             _TMR0 0015  
                           _SPEN 0CEF                             _TXIE 048C                             _TXEN 0CF5  
                           _TXIF 008C                             _SYNC 0CF4                             _WPUA 020C  
                           _WPUC 020E           __size_of_stop_TMR0_ISR 0003                _read_ADC_channels 020C  
                   __CFG_WRT$OFF 0000                             _main 01CE                             fsr0h 0005  
                           fsr1h 0007                             indf0 0000                             fsr0l 0004  
                           indf1 0001                             fsr1l 0006                             btemp 007E  
             ?_read_ADC_channels 0075                             start 0059                    __CFG_MCLRE$ON 0000  
            ??_read_ADC_channels 0052                            ??_isr 0078   __size_of_OSCILLATOR_Initialize 0006  
                _USART_tx_length 0074    __end_of_OSCILLATOR_Initialize 039A                            ?_main 0075  
                          _ADC_2 02E5                            _ADC_4 02C2                            _ADC_5 029F  
                          _BRG16 0CFB                            i1l120 0015                            i1l121 0054  
                          i1l122 0034                            _RCREG 0199                            _PORTC 000E  
                          _TRISA 008C                   _start_TMR0_ISR 0362                            _TRISC 008E  
                          _TXREG 019A                   __CFG_FCMEN$OFF 0000        __end_of_read_ADC_channels 0245  
                          main@i 006F    __size_ofi1_start_RX_USART_ISR 0011                   __CFG_BOREN$OFF 0000  
                          status 0003                            wtemp0 007E                  __initialization 005A  
                   __end_of_main 020C                    _stop_TMR0_ISR 03A1           __end_of_start_TMR0_ISR 0372  
                         ??_main 006E                           ?_ADC_2 004C                           ?_ADC_4 004C  
                         ?_ADC_5 004C                      ?_VIN_config 004C                   _TIMER0_timeout 0070  
                 __CFG_PLLEN$OFF 0000                           _ADCON0 009D                           _ADCON1 009E  
                         _ADRESH 009C                           _ADRESL 009B                           _APFCON 011D  
                         _ANSELA 018C                           _ANSELC 018E                           u111_27 004E  
                         i1l1761 001E                   VIN_config@conf 004C                           _OSCCON 0099  
                         _TMR0IE 005D                           _TMR0IF 005A                           _TMR0CS 04AD  
                         _SPBRGH 019C                           _SPBRGL 019B                   __CFG_PWRTE$OFF 0000  
           __size_of_config_ASIC 0031                  config_ASIC@asic 0056                   __CFG_STVREN$ON 0000  
                 ?_stop_TMR0_ISR 0075                  ?_start_TMR0_ISR 0075             measure_Impedance@aux 0056  
    __size_of_start_RX_USART_ISR 0011       __size_of_read_ADC_channels 0039                    ?_mess_handler 0075  
              _SYSTEM_Initialize 039E          __end_of__initialization 0065                    __end_of_ADC_2 0308  
                  __end_of_ADC_4 02E5               ?_SYSTEM_Initialize 0075                    __end_of_ADC_5 02C2  
            __size_of_VIN_config 0094                   __pcstackCOMMON 0075              ??_SYSTEM_Initialize 004C  
                        ??_ADC_2 004E                          ??_ADC_4 004E                          ??_ADC_5 004E  
                 _OPTION_REGbits 0095      __size_of_start_TX_USART_ISR 000F                   ??_mess_handler 006D  
      __end_of_SYSTEM_Initialize 03A1                       __pbssBANK0 0020                       __pmaintext 01CE  
                ??_stop_TMR0_ISR 0075             read_ADC_channels@aux 0053                       __pintentry 0004  
                        _CLKRCON 039A               __size_of_lputs_ISR 0029                  lputs_ISR@length 004C  
             __size_of_setup_ADC 0006                          _OSCSTAT 009A                          _OSCTUNE 0098  
             __size_of_start_RCM 0004                          _RXDTSEL 08EF                          _TXCKSEL 08EA  
   __end_ofi1_start_RX_USART_ISR 0362                     ??_VIN_config 0052                          __ptext1 0372  
                        __ptext2 0340                          __ptext3 039A                          __ptext4 0381  
                        __ptext5 038E                          __ptext6 0308                          __ptext7 020C  
                        __ptext8 029F                          __ptext9 0068            _OSCILLATOR_Initialize 0394  
                   __size_of_isr 0055         ??_PIN_MANAGER_Initialize 004C       __size_of_SYSTEM_Initialize 0003  
                        clrloop0 0389                    _mess_rec_size 0041             end_of_initialization 0065  
          measure_Impedance@asic 0067                __end_of_lputs_ISR 029F                __end_of_setup_ADC 0394  
             __end_of_VIN_config 01CE                 ??_start_TMR0_ISR 0075                __end_of_start_RCM 039E  
           __end_of_mess_handler 0327                       _setup_TMR0 0381                 __CFG_FOSC$INTOSC 0000  
                  ??_config_ASIC 0055                _measure_Impedance 0068               ?_measure_Impedance 0075  
                 ADC_2@ADC_value 0050       __end_of_start_RX_USART_ISR 0351           ?_OSCILLATOR_Initialize 0075  
            start_initialization 005A              ??_measure_Impedance 0055  __size_of_PIN_MANAGER_Initialize 0019  
                    __end_of_isr 0059             i1_start_RX_USART_ISR 0351                   ADC_4@ADC_value 0050  
                  VIN_config@out 0054        __end_of_measure_Impedance 013A                   ADC_5@ADC_value 0050  
            __end_of_config_ASIC 0276                      ?_setup_TMR0 0075       __end_of_start_TX_USART_ISR 0381  
                    __pbssCOMMON 0070                        ___latbits 0000                    __pcstackBANK0 004C  
          ?i1_start_RX_USART_ISR 0075                      VIN_config@i 0053            __size_of_mess_handler 001F  
         _PIN_MANAGER_Initialize 0327            __end_of_stop_TMR0_ISR 03A4                   __size_of_ADC_2 0023  
                 __size_of_ADC_4 0023                   __size_of_ADC_5 0023          read_ADC_channels@value1 005A  
        read_ADC_channels@value2 005C          read_ADC_channels@value3 005E                     _mess_handler 0308  
            __size_of_setup_TMR0 0007                      _config_ASIC 0245                        clear_ram0 0388  
                     lputs_ISR@i 0050       __size_of_measure_Impedance 00D2                        _lputs_ISR 0276  
                      _setup_ADC 038E                        _start_RCM 039A           ??i1_start_RX_USART_ISR 0075  
        measure_Impedance@value1 0063          measure_Impedance@value2 0065                       ?_lputs_ISR 004C  
                     ?_setup_ADC 0075          ??_OSCILLATOR_Initialize 004C                start_TMR0_ISR@val 0077  
                     ?_start_RCM 0075                         __ptext10 02C2                         __ptext11 02E5  
                       __ptext20 03A1                         __ptext12 0245                         __ptext21 0362  
                       __ptext13 0276                         __ptext14 013A                         __ptext15 039E  
                       __ptext16 0327                         __ptext17 0394                         __ptext19 0351  
                  lputs_ISR@data 004F               _start_RX_USART_ISR 0340                    __size_of_main 003E  
                       _mess_rec 0042              ?_start_RX_USART_ISR 0075                         int$flags 007E  
                   ??_setup_TMR0 004C                      _TIMER0_flag 003E             ??_start_RX_USART_ISR 004C  
        __size_of_start_TMR0_ISR 0010                         intlevel1 0000               _start_TX_USART_ISR 0372  
        ?_PIN_MANAGER_Initialize 0075                __CFG_CLKOUTEN$OFF 0000               __end_of_setup_TMR0 0388  
            ?_start_TX_USART_ISR 0075                      ??_lputs_ISR 004D                      ??_setup_ADC 004C  
                    ??_start_RCM 004C             ??_start_TX_USART_ISR 004C   __end_of_PIN_MANAGER_Initialize 0340  
                   ?_config_ASIC 0075  
