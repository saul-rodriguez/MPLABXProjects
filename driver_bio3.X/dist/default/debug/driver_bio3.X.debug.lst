

Microchip Technology PIC LITE Macro Assembler V1.40 build -251452761 
                                                                                               Fri Jan 27 15:13:28 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	16LF1823
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 1.40
    33                           ; Generated 01/12/2016 GMT
    34                           ; 
    35                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16LF1823 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000E                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  008C                     	;# 
    94  008E                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0095                     	;# 
    98  0096                     	;# 
    99  0097                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009A                     	;# 
   103  009B                     	;# 
   104  009B                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  010C                     	;# 
   109  010E                     	;# 
   110  0111                     	;# 
   111  0112                     	;# 
   112  0113                     	;# 
   113  0114                     	;# 
   114  0115                     	;# 
   115  0116                     	;# 
   116  0117                     	;# 
   117  0118                     	;# 
   118  0119                     	;# 
   119  011A                     	;# 
   120  011B                     	;# 
   121  011D                     	;# 
   122  011D                     	;# 
   123  018C                     	;# 
   124  018E                     	;# 
   125  0191                     	;# 
   126  0191                     	;# 
   127  0192                     	;# 
   128  0193                     	;# 
   129  0193                     	;# 
   130  0193                     	;# 
   131  0194                     	;# 
   132  0195                     	;# 
   133  0196                     	;# 
   134  0199                     	;# 
   135  019A                     	;# 
   136  019B                     	;# 
   137  019B                     	;# 
   138  019B                     	;# 
   139  019B                     	;# 
   140  019C                     	;# 
   141  019C                     	;# 
   142  019D                     	;# 
   143  019E                     	;# 
   144  019F                     	;# 
   145  020C                     	;# 
   146  020E                     	;# 
   147  0211                     	;# 
   148  0211                     	;# 
   149  0212                     	;# 
   150  0212                     	;# 
   151  0213                     	;# 
   152  0213                     	;# 
   153  0214                     	;# 
   154  0214                     	;# 
   155  0215                     	;# 
   156  0215                     	;# 
   157  0215                     	;# 
   158  0216                     	;# 
   159  0216                     	;# 
   160  0217                     	;# 
   161  0217                     	;# 
   162  0291                     	;# 
   163  0291                     	;# 
   164  0292                     	;# 
   165  0293                     	;# 
   166  0294                     	;# 
   167  0295                     	;# 
   168  0295                     	;# 
   169  0296                     	;# 
   170  0391                     	;# 
   171  0392                     	;# 
   172  0393                     	;# 
   173  039A                     	;# 
   174  039C                     	;# 
   175  039D                     	;# 
   176  039E                     	;# 
   177  039F                     	;# 
   178  0FE4                     	;# 
   179  0FE5                     	;# 
   180  0FE6                     	;# 
   181  0FE7                     	;# 
   182  0FE8                     	;# 
   183  0FE9                     	;# 
   184  0FEA                     	;# 
   185  0FEB                     	;# 
   186  0FED                     	;# 
   187  0FEE                     	;# 
   188  0FEF                     	;# 
   189  0000                     	;# 
   190  0001                     	;# 
   191  0002                     	;# 
   192  0003                     	;# 
   193  0004                     	;# 
   194  0005                     	;# 
   195  0006                     	;# 
   196  0007                     	;# 
   197  0008                     	;# 
   198  0009                     	;# 
   199  000A                     	;# 
   200  000B                     	;# 
   201  000C                     	;# 
   202  000E                     	;# 
   203  0011                     	;# 
   204  0012                     	;# 
   205  0015                     	;# 
   206  0016                     	;# 
   207  0016                     	;# 
   208  0017                     	;# 
   209  0018                     	;# 
   210  0019                     	;# 
   211  001A                     	;# 
   212  001B                     	;# 
   213  001C                     	;# 
   214  001E                     	;# 
   215  001F                     	;# 
   216  008C                     	;# 
   217  008E                     	;# 
   218  0091                     	;# 
   219  0092                     	;# 
   220  0095                     	;# 
   221  0096                     	;# 
   222  0097                     	;# 
   223  0098                     	;# 
   224  0099                     	;# 
   225  009A                     	;# 
   226  009B                     	;# 
   227  009B                     	;# 
   228  009C                     	;# 
   229  009D                     	;# 
   230  009E                     	;# 
   231  010C                     	;# 
   232  010E                     	;# 
   233  0111                     	;# 
   234  0112                     	;# 
   235  0113                     	;# 
   236  0114                     	;# 
   237  0115                     	;# 
   238  0116                     	;# 
   239  0117                     	;# 
   240  0118                     	;# 
   241  0119                     	;# 
   242  011A                     	;# 
   243  011B                     	;# 
   244  011D                     	;# 
   245  011D                     	;# 
   246  018C                     	;# 
   247  018E                     	;# 
   248  0191                     	;# 
   249  0191                     	;# 
   250  0192                     	;# 
   251  0193                     	;# 
   252  0193                     	;# 
   253  0193                     	;# 
   254  0194                     	;# 
   255  0195                     	;# 
   256  0196                     	;# 
   257  0199                     	;# 
   258  019A                     	;# 
   259  019B                     	;# 
   260  019B                     	;# 
   261  019B                     	;# 
   262  019B                     	;# 
   263  019C                     	;# 
   264  019C                     	;# 
   265  019D                     	;# 
   266  019E                     	;# 
   267  019F                     	;# 
   268  020C                     	;# 
   269  020E                     	;# 
   270  0211                     	;# 
   271  0211                     	;# 
   272  0212                     	;# 
   273  0212                     	;# 
   274  0213                     	;# 
   275  0213                     	;# 
   276  0214                     	;# 
   277  0214                     	;# 
   278  0215                     	;# 
   279  0215                     	;# 
   280  0215                     	;# 
   281  0216                     	;# 
   282  0216                     	;# 
   283  0217                     	;# 
   284  0217                     	;# 
   285  0291                     	;# 
   286  0291                     	;# 
   287  0292                     	;# 
   288  0293                     	;# 
   289  0294                     	;# 
   290  0295                     	;# 
   291  0295                     	;# 
   292  0296                     	;# 
   293  0391                     	;# 
   294  0392                     	;# 
   295  0393                     	;# 
   296  039A                     	;# 
   297  039C                     	;# 
   298  039D                     	;# 
   299  039E                     	;# 
   300  039F                     	;# 
   301  0FE4                     	;# 
   302  0FE5                     	;# 
   303  0FE6                     	;# 
   304  0FE7                     	;# 
   305  0FE8                     	;# 
   306  0FE9                     	;# 
   307  0FEA                     	;# 
   308  0FEB                     	;# 
   309  0FED                     	;# 
   310  0FEE                     	;# 
   311  0FEF                     	;# 
   312  0000                     	;# 
   313  0001                     	;# 
   314  0002                     	;# 
   315  0003                     	;# 
   316  0004                     	;# 
   317  0005                     	;# 
   318  0006                     	;# 
   319  0007                     	;# 
   320  0008                     	;# 
   321  0009                     	;# 
   322  000A                     	;# 
   323  000B                     	;# 
   324  000C                     	;# 
   325  000E                     	;# 
   326  0011                     	;# 
   327  0012                     	;# 
   328  0015                     	;# 
   329  0016                     	;# 
   330  0016                     	;# 
   331  0017                     	;# 
   332  0018                     	;# 
   333  0019                     	;# 
   334  001A                     	;# 
   335  001B                     	;# 
   336  001C                     	;# 
   337  001E                     	;# 
   338  001F                     	;# 
   339  008C                     	;# 
   340  008E                     	;# 
   341  0091                     	;# 
   342  0092                     	;# 
   343  0095                     	;# 
   344  0096                     	;# 
   345  0097                     	;# 
   346  0098                     	;# 
   347  0099                     	;# 
   348  009A                     	;# 
   349  009B                     	;# 
   350  009B                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  010C                     	;# 
   355  010E                     	;# 
   356  0111                     	;# 
   357  0112                     	;# 
   358  0113                     	;# 
   359  0114                     	;# 
   360  0115                     	;# 
   361  0116                     	;# 
   362  0117                     	;# 
   363  0118                     	;# 
   364  0119                     	;# 
   365  011A                     	;# 
   366  011B                     	;# 
   367  011D                     	;# 
   368  011D                     	;# 
   369  018C                     	;# 
   370  018E                     	;# 
   371  0191                     	;# 
   372  0191                     	;# 
   373  0192                     	;# 
   374  0193                     	;# 
   375  0193                     	;# 
   376  0193                     	;# 
   377  0194                     	;# 
   378  0195                     	;# 
   379  0196                     	;# 
   380  0199                     	;# 
   381  019A                     	;# 
   382  019B                     	;# 
   383  019B                     	;# 
   384  019B                     	;# 
   385  019B                     	;# 
   386  019C                     	;# 
   387  019C                     	;# 
   388  019D                     	;# 
   389  019E                     	;# 
   390  019F                     	;# 
   391  020C                     	;# 
   392  020E                     	;# 
   393  0211                     	;# 
   394  0211                     	;# 
   395  0212                     	;# 
   396  0212                     	;# 
   397  0213                     	;# 
   398  0213                     	;# 
   399  0214                     	;# 
   400  0214                     	;# 
   401  0215                     	;# 
   402  0215                     	;# 
   403  0215                     	;# 
   404  0216                     	;# 
   405  0216                     	;# 
   406  0217                     	;# 
   407  0217                     	;# 
   408  0291                     	;# 
   409  0291                     	;# 
   410  0292                     	;# 
   411  0293                     	;# 
   412  0294                     	;# 
   413  0295                     	;# 
   414  0295                     	;# 
   415  0296                     	;# 
   416  0391                     	;# 
   417  0392                     	;# 
   418  0393                     	;# 
   419  039A                     	;# 
   420  039C                     	;# 
   421  039D                     	;# 
   422  039E                     	;# 
   423  039F                     	;# 
   424  0FE4                     	;# 
   425  0FE5                     	;# 
   426  0FE6                     	;# 
   427  0FE7                     	;# 
   428  0FE8                     	;# 
   429  0FE9                     	;# 
   430  0FEA                     	;# 
   431  0FEB                     	;# 
   432  0FED                     	;# 
   433  0FEE                     	;# 
   434  0FEF                     	;# 
   435  0000                     	;# 
   436  0001                     	;# 
   437  0002                     	;# 
   438  0003                     	;# 
   439  0004                     	;# 
   440  0005                     	;# 
   441  0006                     	;# 
   442  0007                     	;# 
   443  0008                     	;# 
   444  0009                     	;# 
   445  000A                     	;# 
   446  000B                     	;# 
   447  000C                     	;# 
   448  000E                     	;# 
   449  0011                     	;# 
   450  0012                     	;# 
   451  0015                     	;# 
   452  0016                     	;# 
   453  0016                     	;# 
   454  0017                     	;# 
   455  0018                     	;# 
   456  0019                     	;# 
   457  001A                     	;# 
   458  001B                     	;# 
   459  001C                     	;# 
   460  001E                     	;# 
   461  001F                     	;# 
   462  008C                     	;# 
   463  008E                     	;# 
   464  0091                     	;# 
   465  0092                     	;# 
   466  0095                     	;# 
   467  0096                     	;# 
   468  0097                     	;# 
   469  0098                     	;# 
   470  0099                     	;# 
   471  009A                     	;# 
   472  009B                     	;# 
   473  009B                     	;# 
   474  009C                     	;# 
   475  009D                     	;# 
   476  009E                     	;# 
   477  010C                     	;# 
   478  010E                     	;# 
   479  0111                     	;# 
   480  0112                     	;# 
   481  0113                     	;# 
   482  0114                     	;# 
   483  0115                     	;# 
   484  0116                     	;# 
   485  0117                     	;# 
   486  0118                     	;# 
   487  0119                     	;# 
   488  011A                     	;# 
   489  011B                     	;# 
   490  011D                     	;# 
   491  011D                     	;# 
   492  018C                     	;# 
   493  018E                     	;# 
   494  0191                     	;# 
   495  0191                     	;# 
   496  0192                     	;# 
   497  0193                     	;# 
   498  0193                     	;# 
   499  0193                     	;# 
   500  0194                     	;# 
   501  0195                     	;# 
   502  0196                     	;# 
   503  0199                     	;# 
   504  019A                     	;# 
   505  019B                     	;# 
   506  019B                     	;# 
   507  019B                     	;# 
   508  019B                     	;# 
   509  019C                     	;# 
   510  019C                     	;# 
   511  019D                     	;# 
   512  019E                     	;# 
   513  019F                     	;# 
   514  020C                     	;# 
   515  020E                     	;# 
   516  0211                     	;# 
   517  0211                     	;# 
   518  0212                     	;# 
   519  0212                     	;# 
   520  0213                     	;# 
   521  0213                     	;# 
   522  0214                     	;# 
   523  0214                     	;# 
   524  0215                     	;# 
   525  0215                     	;# 
   526  0215                     	;# 
   527  0216                     	;# 
   528  0216                     	;# 
   529  0217                     	;# 
   530  0217                     	;# 
   531  0291                     	;# 
   532  0291                     	;# 
   533  0292                     	;# 
   534  0293                     	;# 
   535  0294                     	;# 
   536  0295                     	;# 
   537  0295                     	;# 
   538  0296                     	;# 
   539  0391                     	;# 
   540  0392                     	;# 
   541  0393                     	;# 
   542  039A                     	;# 
   543  039C                     	;# 
   544  039D                     	;# 
   545  039E                     	;# 
   546  039F                     	;# 
   547  0FE4                     	;# 
   548  0FE5                     	;# 
   549  0FE6                     	;# 
   550  0FE7                     	;# 
   551  0FE8                     	;# 
   552  0FE9                     	;# 
   553  0FEA                     	;# 
   554  0FEB                     	;# 
   555  0FED                     	;# 
   556  0FEE                     	;# 
   557  0FEF                     	;# 
   558  0000                     	;# 
   559  0001                     	;# 
   560  0002                     	;# 
   561  0003                     	;# 
   562  0004                     	;# 
   563  0005                     	;# 
   564  0006                     	;# 
   565  0007                     	;# 
   566  0008                     	;# 
   567  0009                     	;# 
   568  000A                     	;# 
   569  000B                     	;# 
   570  000C                     	;# 
   571  000E                     	;# 
   572  0011                     	;# 
   573  0012                     	;# 
   574  0015                     	;# 
   575  0016                     	;# 
   576  0016                     	;# 
   577  0017                     	;# 
   578  0018                     	;# 
   579  0019                     	;# 
   580  001A                     	;# 
   581  001B                     	;# 
   582  001C                     	;# 
   583  001E                     	;# 
   584  001F                     	;# 
   585  008C                     	;# 
   586  008E                     	;# 
   587  0091                     	;# 
   588  0092                     	;# 
   589  0095                     	;# 
   590  0096                     	;# 
   591  0097                     	;# 
   592  0098                     	;# 
   593  0099                     	;# 
   594  009A                     	;# 
   595  009B                     	;# 
   596  009B                     	;# 
   597  009C                     	;# 
   598  009D                     	;# 
   599  009E                     	;# 
   600  010C                     	;# 
   601  010E                     	;# 
   602  0111                     	;# 
   603  0112                     	;# 
   604  0113                     	;# 
   605  0114                     	;# 
   606  0115                     	;# 
   607  0116                     	;# 
   608  0117                     	;# 
   609  0118                     	;# 
   610  0119                     	;# 
   611  011A                     	;# 
   612  011B                     	;# 
   613  011D                     	;# 
   614  011D                     	;# 
   615  018C                     	;# 
   616  018E                     	;# 
   617  0191                     	;# 
   618  0191                     	;# 
   619  0192                     	;# 
   620  0193                     	;# 
   621  0193                     	;# 
   622  0193                     	;# 
   623  0194                     	;# 
   624  0195                     	;# 
   625  0196                     	;# 
   626  0199                     	;# 
   627  019A                     	;# 
   628  019B                     	;# 
   629  019B                     	;# 
   630  019B                     	;# 
   631  019B                     	;# 
   632  019C                     	;# 
   633  019C                     	;# 
   634  019D                     	;# 
   635  019E                     	;# 
   636  019F                     	;# 
   637  020C                     	;# 
   638  020E                     	;# 
   639  0211                     	;# 
   640  0211                     	;# 
   641  0212                     	;# 
   642  0212                     	;# 
   643  0213                     	;# 
   644  0213                     	;# 
   645  0214                     	;# 
   646  0214                     	;# 
   647  0215                     	;# 
   648  0215                     	;# 
   649  0215                     	;# 
   650  0216                     	;# 
   651  0216                     	;# 
   652  0217                     	;# 
   653  0217                     	;# 
   654  0291                     	;# 
   655  0291                     	;# 
   656  0292                     	;# 
   657  0293                     	;# 
   658  0294                     	;# 
   659  0295                     	;# 
   660  0295                     	;# 
   661  0296                     	;# 
   662  0391                     	;# 
   663  0392                     	;# 
   664  0393                     	;# 
   665  039A                     	;# 
   666  039C                     	;# 
   667  039D                     	;# 
   668  039E                     	;# 
   669  039F                     	;# 
   670  0FE4                     	;# 
   671  0FE5                     	;# 
   672  0FE6                     	;# 
   673  0FE7                     	;# 
   674  0FE8                     	;# 
   675  0FE9                     	;# 
   676  0FEA                     	;# 
   677  0FEB                     	;# 
   678  0FED                     	;# 
   679  0FEE                     	;# 
   680  0FEF                     	;# 
   681  0000                     	;# 
   682  0001                     	;# 
   683  0002                     	;# 
   684  0003                     	;# 
   685  0004                     	;# 
   686  0005                     	;# 
   687  0006                     	;# 
   688  0007                     	;# 
   689  0008                     	;# 
   690  0009                     	;# 
   691  000A                     	;# 
   692  000B                     	;# 
   693  000C                     	;# 
   694  000E                     	;# 
   695  0011                     	;# 
   696  0012                     	;# 
   697  0015                     	;# 
   698  0016                     	;# 
   699  0016                     	;# 
   700  0017                     	;# 
   701  0018                     	;# 
   702  0019                     	;# 
   703  001A                     	;# 
   704  001B                     	;# 
   705  001C                     	;# 
   706  001E                     	;# 
   707  001F                     	;# 
   708  008C                     	;# 
   709  008E                     	;# 
   710  0091                     	;# 
   711  0092                     	;# 
   712  0095                     	;# 
   713  0096                     	;# 
   714  0097                     	;# 
   715  0098                     	;# 
   716  0099                     	;# 
   717  009A                     	;# 
   718  009B                     	;# 
   719  009B                     	;# 
   720  009C                     	;# 
   721  009D                     	;# 
   722  009E                     	;# 
   723  010C                     	;# 
   724  010E                     	;# 
   725  0111                     	;# 
   726  0112                     	;# 
   727  0113                     	;# 
   728  0114                     	;# 
   729  0115                     	;# 
   730  0116                     	;# 
   731  0117                     	;# 
   732  0118                     	;# 
   733  0119                     	;# 
   734  011A                     	;# 
   735  011B                     	;# 
   736  011D                     	;# 
   737  011D                     	;# 
   738  018C                     	;# 
   739  018E                     	;# 
   740  0191                     	;# 
   741  0191                     	;# 
   742  0192                     	;# 
   743  0193                     	;# 
   744  0193                     	;# 
   745  0193                     	;# 
   746  0194                     	;# 
   747  0195                     	;# 
   748  0196                     	;# 
   749  0199                     	;# 
   750  019A                     	;# 
   751  019B                     	;# 
   752  019B                     	;# 
   753  019B                     	;# 
   754  019B                     	;# 
   755  019C                     	;# 
   756  019C                     	;# 
   757  019D                     	;# 
   758  019E                     	;# 
   759  019F                     	;# 
   760  020C                     	;# 
   761  020E                     	;# 
   762  0211                     	;# 
   763  0211                     	;# 
   764  0212                     	;# 
   765  0212                     	;# 
   766  0213                     	;# 
   767  0213                     	;# 
   768  0214                     	;# 
   769  0214                     	;# 
   770  0215                     	;# 
   771  0215                     	;# 
   772  0215                     	;# 
   773  0216                     	;# 
   774  0216                     	;# 
   775  0217                     	;# 
   776  0217                     	;# 
   777  0291                     	;# 
   778  0291                     	;# 
   779  0292                     	;# 
   780  0293                     	;# 
   781  0294                     	;# 
   782  0295                     	;# 
   783  0295                     	;# 
   784  0296                     	;# 
   785  0391                     	;# 
   786  0392                     	;# 
   787  0393                     	;# 
   788  039A                     	;# 
   789  039C                     	;# 
   790  039D                     	;# 
   791  039E                     	;# 
   792  039F                     	;# 
   793  0FE4                     	;# 
   794  0FE5                     	;# 
   795  0FE6                     	;# 
   796  0FE7                     	;# 
   797  0FE8                     	;# 
   798  0FE9                     	;# 
   799  0FEA                     	;# 
   800  0FEB                     	;# 
   801  0FED                     	;# 
   802  0FEE                     	;# 
   803  0FEF                     	;# 
   804  0000                     	;# 
   805  0001                     	;# 
   806  0002                     	;# 
   807  0003                     	;# 
   808  0004                     	;# 
   809  0005                     	;# 
   810  0006                     	;# 
   811  0007                     	;# 
   812  0008                     	;# 
   813  0009                     	;# 
   814  000A                     	;# 
   815  000B                     	;# 
   816  000C                     	;# 
   817  000E                     	;# 
   818  0011                     	;# 
   819  0012                     	;# 
   820  0015                     	;# 
   821  0016                     	;# 
   822  0016                     	;# 
   823  0017                     	;# 
   824  0018                     	;# 
   825  0019                     	;# 
   826  001A                     	;# 
   827  001B                     	;# 
   828  001C                     	;# 
   829  001E                     	;# 
   830  001F                     	;# 
   831  008C                     	;# 
   832  008E                     	;# 
   833  0091                     	;# 
   834  0092                     	;# 
   835  0095                     	;# 
   836  0096                     	;# 
   837  0097                     	;# 
   838  0098                     	;# 
   839  0099                     	;# 
   840  009A                     	;# 
   841  009B                     	;# 
   842  009B                     	;# 
   843  009C                     	;# 
   844  009D                     	;# 
   845  009E                     	;# 
   846  010C                     	;# 
   847  010E                     	;# 
   848  0111                     	;# 
   849  0112                     	;# 
   850  0113                     	;# 
   851  0114                     	;# 
   852  0115                     	;# 
   853  0116                     	;# 
   854  0117                     	;# 
   855  0118                     	;# 
   856  0119                     	;# 
   857  011A                     	;# 
   858  011B                     	;# 
   859  011D                     	;# 
   860  011D                     	;# 
   861  018C                     	;# 
   862  018E                     	;# 
   863  0191                     	;# 
   864  0191                     	;# 
   865  0192                     	;# 
   866  0193                     	;# 
   867  0193                     	;# 
   868  0193                     	;# 
   869  0194                     	;# 
   870  0195                     	;# 
   871  0196                     	;# 
   872  0199                     	;# 
   873  019A                     	;# 
   874  019B                     	;# 
   875  019B                     	;# 
   876  019B                     	;# 
   877  019B                     	;# 
   878  019C                     	;# 
   879  019C                     	;# 
   880  019D                     	;# 
   881  019E                     	;# 
   882  019F                     	;# 
   883  020C                     	;# 
   884  020E                     	;# 
   885  0211                     	;# 
   886  0211                     	;# 
   887  0212                     	;# 
   888  0212                     	;# 
   889  0213                     	;# 
   890  0213                     	;# 
   891  0214                     	;# 
   892  0214                     	;# 
   893  0215                     	;# 
   894  0215                     	;# 
   895  0215                     	;# 
   896  0216                     	;# 
   897  0216                     	;# 
   898  0217                     	;# 
   899  0217                     	;# 
   900  0291                     	;# 
   901  0291                     	;# 
   902  0292                     	;# 
   903  0293                     	;# 
   904  0294                     	;# 
   905  0295                     	;# 
   906  0295                     	;# 
   907  0296                     	;# 
   908  0391                     	;# 
   909  0392                     	;# 
   910  0393                     	;# 
   911  039A                     	;# 
   912  039C                     	;# 
   913  039D                     	;# 
   914  039E                     	;# 
   915  039F                     	;# 
   916  0FE4                     	;# 
   917  0FE5                     	;# 
   918  0FE6                     	;# 
   919  0FE7                     	;# 
   920  0FE8                     	;# 
   921  0FE9                     	;# 
   922  0FEA                     	;# 
   923  0FEB                     	;# 
   924  0FED                     	;# 
   925  0FEE                     	;# 
   926  0FEF                     	;# 
   927  0000                     	;# 
   928  0001                     	;# 
   929  0002                     	;# 
   930  0003                     	;# 
   931  0004                     	;# 
   932  0005                     	;# 
   933  0006                     	;# 
   934  0007                     	;# 
   935  0008                     	;# 
   936  0009                     	;# 
   937  000A                     	;# 
   938  000B                     	;# 
   939  000C                     	;# 
   940  000E                     	;# 
   941  0011                     	;# 
   942  0012                     	;# 
   943  0015                     	;# 
   944  0016                     	;# 
   945  0016                     	;# 
   946  0017                     	;# 
   947  0018                     	;# 
   948  0019                     	;# 
   949  001A                     	;# 
   950  001B                     	;# 
   951  001C                     	;# 
   952  001E                     	;# 
   953  001F                     	;# 
   954  008C                     	;# 
   955  008E                     	;# 
   956  0091                     	;# 
   957  0092                     	;# 
   958  0095                     	;# 
   959  0096                     	;# 
   960  0097                     	;# 
   961  0098                     	;# 
   962  0099                     	;# 
   963  009A                     	;# 
   964  009B                     	;# 
   965  009B                     	;# 
   966  009C                     	;# 
   967  009D                     	;# 
   968  009E                     	;# 
   969  010C                     	;# 
   970  010E                     	;# 
   971  0111                     	;# 
   972  0112                     	;# 
   973  0113                     	;# 
   974  0114                     	;# 
   975  0115                     	;# 
   976  0116                     	;# 
   977  0117                     	;# 
   978  0118                     	;# 
   979  0119                     	;# 
   980  011A                     	;# 
   981  011B                     	;# 
   982  011D                     	;# 
   983  011D                     	;# 
   984  018C                     	;# 
   985  018E                     	;# 
   986  0191                     	;# 
   987  0191                     	;# 
   988  0192                     	;# 
   989  0193                     	;# 
   990  0193                     	;# 
   991  0193                     	;# 
   992  0194                     	;# 
   993  0195                     	;# 
   994  0196                     	;# 
   995  0199                     	;# 
   996  019A                     	;# 
   997  019B                     	;# 
   998  019B                     	;# 
   999  019B                     	;# 
  1000  019B                     	;# 
  1001  019C                     	;# 
  1002  019C                     	;# 
  1003  019D                     	;# 
  1004  019E                     	;# 
  1005  019F                     	;# 
  1006  020C                     	;# 
  1007  020E                     	;# 
  1008  0211                     	;# 
  1009  0211                     	;# 
  1010  0212                     	;# 
  1011  0212                     	;# 
  1012  0213                     	;# 
  1013  0213                     	;# 
  1014  0214                     	;# 
  1015  0214                     	;# 
  1016  0215                     	;# 
  1017  0215                     	;# 
  1018  0215                     	;# 
  1019  0216                     	;# 
  1020  0216                     	;# 
  1021  0217                     	;# 
  1022  0217                     	;# 
  1023  0291                     	;# 
  1024  0291                     	;# 
  1025  0292                     	;# 
  1026  0293                     	;# 
  1027  0294                     	;# 
  1028  0295                     	;# 
  1029  0295                     	;# 
  1030  0296                     	;# 
  1031  0391                     	;# 
  1032  0392                     	;# 
  1033  0393                     	;# 
  1034  039A                     	;# 
  1035  039C                     	;# 
  1036  039D                     	;# 
  1037  039E                     	;# 
  1038  039F                     	;# 
  1039  0FE4                     	;# 
  1040  0FE5                     	;# 
  1041  0FE6                     	;# 
  1042  0FE7                     	;# 
  1043  0FE8                     	;# 
  1044  0FE9                     	;# 
  1045  0FEA                     	;# 
  1046  0FEB                     	;# 
  1047  0FED                     	;# 
  1048  0FEE                     	;# 
  1049  0FEF                     	;# 
  1050  0000                     	;# 
  1051  0001                     	;# 
  1052  0002                     	;# 
  1053  0003                     	;# 
  1054  0004                     	;# 
  1055  0005                     	;# 
  1056  0006                     	;# 
  1057  0007                     	;# 
  1058  0008                     	;# 
  1059  0009                     	;# 
  1060  000A                     	;# 
  1061  000B                     	;# 
  1062  000C                     	;# 
  1063  000E                     	;# 
  1064  0011                     	;# 
  1065  0012                     	;# 
  1066  0015                     	;# 
  1067  0016                     	;# 
  1068  0016                     	;# 
  1069  0017                     	;# 
  1070  0018                     	;# 
  1071  0019                     	;# 
  1072  001A                     	;# 
  1073  001B                     	;# 
  1074  001C                     	;# 
  1075  001E                     	;# 
  1076  001F                     	;# 
  1077  008C                     	;# 
  1078  008E                     	;# 
  1079  0091                     	;# 
  1080  0092                     	;# 
  1081  0095                     	;# 
  1082  0096                     	;# 
  1083  0097                     	;# 
  1084  0098                     	;# 
  1085  0099                     	;# 
  1086  009A                     	;# 
  1087  009B                     	;# 
  1088  009B                     	;# 
  1089  009C                     	;# 
  1090  009D                     	;# 
  1091  009E                     	;# 
  1092  010C                     	;# 
  1093  010E                     	;# 
  1094  0111                     	;# 
  1095  0112                     	;# 
  1096  0113                     	;# 
  1097  0114                     	;# 
  1098  0115                     	;# 
  1099  0116                     	;# 
  1100  0117                     	;# 
  1101  0118                     	;# 
  1102  0119                     	;# 
  1103  011A                     	;# 
  1104  011B                     	;# 
  1105  011D                     	;# 
  1106  011D                     	;# 
  1107  018C                     	;# 
  1108  018E                     	;# 
  1109  0191                     	;# 
  1110  0191                     	;# 
  1111  0192                     	;# 
  1112  0193                     	;# 
  1113  0193                     	;# 
  1114  0193                     	;# 
  1115  0194                     	;# 
  1116  0195                     	;# 
  1117  0196                     	;# 
  1118  0199                     	;# 
  1119  019A                     	;# 
  1120  019B                     	;# 
  1121  019B                     	;# 
  1122  019B                     	;# 
  1123  019B                     	;# 
  1124  019C                     	;# 
  1125  019C                     	;# 
  1126  019D                     	;# 
  1127  019E                     	;# 
  1128  019F                     	;# 
  1129  020C                     	;# 
  1130  020E                     	;# 
  1131  0211                     	;# 
  1132  0211                     	;# 
  1133  0212                     	;# 
  1134  0212                     	;# 
  1135  0213                     	;# 
  1136  0213                     	;# 
  1137  0214                     	;# 
  1138  0214                     	;# 
  1139  0215                     	;# 
  1140  0215                     	;# 
  1141  0215                     	;# 
  1142  0216                     	;# 
  1143  0216                     	;# 
  1144  0217                     	;# 
  1145  0217                     	;# 
  1146  0291                     	;# 
  1147  0291                     	;# 
  1148  0292                     	;# 
  1149  0293                     	;# 
  1150  0294                     	;# 
  1151  0295                     	;# 
  1152  0295                     	;# 
  1153  0296                     	;# 
  1154  0391                     	;# 
  1155  0392                     	;# 
  1156  0393                     	;# 
  1157  039A                     	;# 
  1158  039C                     	;# 
  1159  039D                     	;# 
  1160  039E                     	;# 
  1161  039F                     	;# 
  1162  0FE4                     	;# 
  1163  0FE5                     	;# 
  1164  0FE6                     	;# 
  1165  0FE7                     	;# 
  1166  0FE8                     	;# 
  1167  0FE9                     	;# 
  1168  0FEA                     	;# 
  1169  0FEB                     	;# 
  1170  0FED                     	;# 
  1171  0FEE                     	;# 
  1172  0FEF                     	;# 
  1173  000E                     _PORTC	set	14
  1174  0015                     _TMR0	set	21
  1175  005F                     _GIE	set	95
  1176  005E                     _PEIE	set	94
  1177  0065                     _RA5	set	101
  1178  008D                     _RCIF	set	141
  1179  005D                     _TMR0IE	set	93
  1180  005A                     _TMR0IF	set	90
  1181  008C                     _TXIF	set	140
  1182  009D                     _ADCON0	set	157
  1183  009E                     _ADCON1	set	158
  1184  009C                     _ADRESH	set	156
  1185  009B                     _ADRESL	set	155
  1186  0095                     _OPTION_REGbits	set	149
  1187  0099                     _OSCCON	set	153
  1188  009A                     _OSCSTAT	set	154
  1189  0098                     _OSCTUNE	set	152
  1190  008C                     _TRISA	set	140
  1191  008E                     _TRISC	set	142
  1192  04E9                     _ADGO	set	1257
  1193  04A8                     _PS0	set	1192
  1194  04A9                     _PS1	set	1193
  1195  04AA                     _PS2	set	1194
  1196  04AB                     _PSA	set	1195
  1197  048D                     _RCIE	set	1165
  1198  04AD                     _TMR0CS	set	1197
  1199  048C                     _TXIE	set	1164
  1200  011D                     _APFCON	set	285
  1201  010C                     _LATA	set	268
  1202  010E                     _LATC	set	270
  1203  08EF                     _RXDTSEL	set	2287
  1204  08EA                     _TXCKSEL	set	2282
  1205  018C                     _ANSELA	set	396
  1206  018E                     _ANSELC	set	398
  1207  0199                     _RCREG	set	409
  1208  019C                     _SPBRGH	set	412
  1209  019B                     _SPBRGL	set	411
  1210  019A                     _TXREG	set	410
  1211  0CFB                     _BRG16	set	3323
  1212  0CF2                     _BRGH	set	3314
  1213  0CEC                     _CREN	set	3308
  1214  0CEF                     _SPEN	set	3311
  1215  0CF4                     _SYNC	set	3316
  1216  0CF5                     _TXEN	set	3317
  1217  020C                     _WPUA	set	524
  1218  020E                     _WPUC	set	526
  1219  039A                     _CLKRCON	set	922
  1220                           
  1221                           ; #config settings
  1222  0000                     
  1223                           	psect	cinit
  1224  0054                     start_initialization:	
  1225  0054                     __initialization:	
  1226                           
  1227                           ; Clear objects allocated to COMMON
  1228  0054  01F0               	clrf	__pbssCOMMON& (0+127)
  1229  0055  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1230  0056  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1231  0057  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1232  0058  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1233                           
  1234                           ; Clear objects allocated to BANK0
  1235  0059  3020               	movlw	low __pbssBANK0
  1236  005A  0084               	movwf	4
  1237  005B  3000               	movlw	high __pbssBANK0
  1238  005C  0085               	movwf	5
  1239  005D  3025               	movlw	37
  1240  005E  224C               	fcall	clear_ram0
  1241  005F                     end_of_initialization:	
  1242                           ;End of C runtime variable initialization code
  1243                           
  1244  005F                     __end_of__initialization:	
  1245  005F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1246  0060  0020               	movlb	0
  1247  0061  2862               	ljmp	_main	;jump to C main() function
  1248                           
  1249                           	psect	bssCOMMON
  1250  0070                     __pbssCOMMON:	
  1251  0070                     _TIMER0_timeout:	
  1252  0070                     	ds	2
  1253  0072                     _USART_tx_flag:	
  1254  0072                     	ds	1
  1255  0073                     _USART_tx_index:	
  1256  0073                     	ds	1
  1257  0074                     _USART_tx_length:	
  1258  0074                     	ds	1
  1259                           
  1260                           	psect	bssBANK0
  1261  0020                     __pbssBANK0:	
  1262  0020                     _USART_rx_data:	
  1263  0020                     	ds	15
  1264  002F                     _USART_tx_data:	
  1265  002F                     	ds	15
  1266  003E                     _TIMER0_flag:	
  1267  003E                     	ds	1
  1268  003F                     _USART_rx_flag:	
  1269  003F                     	ds	1
  1270  0040                     _USART_rx_index:	
  1271  0040                     	ds	1
  1272  0041                     _mess_rec_size:	
  1273  0041                     	ds	1
  1274  0042                     _mess_rec:	
  1275  0042                     	ds	3
  1276                           
  1277                           	psect	clrtext
  1278  024C                     clear_ram0:	
  1279                           ;	Called with FSR0 containing the base address, and
  1280                           ;	WREG with the size to clear
  1281                           
  1282  024C  0064               	clrwdt	;clear the watchdog before getting into this loop
  1283  024D                     clrloop0:	
  1284  024D  0180               	clrf	0	;clear RAM location pointed to by FSR
  1285  024E  3101               	addfsr 0,1
  1286  024F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1287  0250  2A4D               	goto	clrloop0	;have we reached the end yet?
  1288  0251  3400               	retlw	0	;all done for this memory range, return
  1289                           
  1290                           	psect	cstackCOMMON
  1291  0075                     __pcstackCOMMON:	
  1292  0075                     ?_OSCILLATOR_Initialize:	
  1293  0075                     ?_setup_TMR0:	
  1294                           ; 1 bytes @ 0x0
  1295                           
  1296  0075                     ?_start_TX_USART_ISR:	
  1297                           ; 1 bytes @ 0x0
  1298                           
  1299  0075                     ?_start_RX_USART_ISR:	
  1300                           ; 1 bytes @ 0x0
  1301                           
  1302  0075                     ?_start_RCM:	
  1303                           ; 1 bytes @ 0x0
  1304                           
  1305  0075                     ?_setup_ADC:	
  1306                           ; 1 bytes @ 0x0
  1307                           
  1308  0075                     ?_mess_handler:	
  1309                           ; 1 bytes @ 0x0
  1310                           
  1311  0075                     ?_stop_TMR0_ISR:	
  1312                           ; 1 bytes @ 0x0
  1313                           
  1314  0075                     ??_stop_TMR0_ISR:	
  1315                           ; 1 bytes @ 0x0
  1316                           
  1317  0075                     ?_start_TMR0_ISR:	
  1318                           ; 1 bytes @ 0x0
  1319                           
  1320  0075                     ??_start_TMR0_ISR:	
  1321                           ; 1 bytes @ 0x0
  1322                           
  1323  0075                     ?_read_ADC_channels:	
  1324                           ; 1 bytes @ 0x0
  1325                           
  1326  0075                     ?_PIN_MANAGER_Initialize:	
  1327                           ; 1 bytes @ 0x0
  1328                           
  1329  0075                     ?_SYSTEM_Initialize:	
  1330                           ; 1 bytes @ 0x0
  1331                           
  1332  0075                     ?_main:	
  1333                           ; 1 bytes @ 0x0
  1334                           
  1335  0075                     ?_isr:	
  1336                           ; 1 bytes @ 0x0
  1337                           
  1338  0075                     ?i1_start_RX_USART_ISR:	
  1339                           ; 1 bytes @ 0x0
  1340                           
  1341  0075                     ??i1_start_RX_USART_ISR:	
  1342                           ; 1 bytes @ 0x0
  1343                           
  1344                           
  1345                           ; 1 bytes @ 0x0
  1346  0075                     	ds	2
  1347  0077                     start_TMR0_ISR@val:	
  1348                           
  1349                           ; 1 bytes @ 0x2
  1350  0077                     	ds	1
  1351  0078                     ??_isr:	
  1352                           
  1353                           ; 1 bytes @ 0x3
  1354  0078                     	ds	2
  1355                           
  1356                           	psect	cstackBANK0
  1357  0045                     __pcstackBANK0:	
  1358  0045                     ??_OSCILLATOR_Initialize:	
  1359  0045                     ??_setup_TMR0:	
  1360                           ; 1 bytes @ 0x0
  1361                           
  1362  0045                     ??_start_TX_USART_ISR:	
  1363                           ; 1 bytes @ 0x0
  1364                           
  1365  0045                     ??_start_RX_USART_ISR:	
  1366                           ; 1 bytes @ 0x0
  1367                           
  1368  0045                     ??_start_RCM:	
  1369                           ; 1 bytes @ 0x0
  1370                           
  1371  0045                     ??_setup_ADC:	
  1372                           ; 1 bytes @ 0x0
  1373                           
  1374  0045                     ??_PIN_MANAGER_Initialize:	
  1375                           ; 1 bytes @ 0x0
  1376                           
  1377  0045                     ??_SYSTEM_Initialize:	
  1378                           ; 1 bytes @ 0x0
  1379                           
  1380  0045                     ?_BIO_config:	
  1381                           ; 1 bytes @ 0x0
  1382                           
  1383  0045                     ?_lputs_ISR:	
  1384                           ; 1 bytes @ 0x0
  1385                           
  1386  0045                     ?_ADC_2:	
  1387                           ; 1 bytes @ 0x0
  1388                           
  1389  0045                     ?_ADC_4:	
  1390                           ; 2 bytes @ 0x0
  1391                           
  1392  0045                     ?_ADC_5:	
  1393                           ; 2 bytes @ 0x0
  1394                           
  1395  0045                     lputs_ISR@length:	
  1396                           ; 2 bytes @ 0x0
  1397                           
  1398  0045                     BIO_config@conf:	
  1399                           ; 1 bytes @ 0x0
  1400                           
  1401                           
  1402                           ; 2 bytes @ 0x0
  1403  0045                     	ds	1
  1404  0046                     ??_lputs_ISR:	
  1405                           
  1406                           ; 1 bytes @ 0x1
  1407  0046                     	ds	1
  1408  0047                     ??_ADC_2:	
  1409  0047                     ??_ADC_4:	
  1410                           ; 1 bytes @ 0x2
  1411                           
  1412  0047                     ??_ADC_5:	
  1413                           ; 1 bytes @ 0x2
  1414                           
  1415  0047                     ??_BIO_config:	
  1416                           ; 1 bytes @ 0x2
  1417                           
  1418                           
  1419                           ; 1 bytes @ 0x2
  1420  0047                     	ds	1
  1421  0048                     BIO_config@i:	
  1422  0048                     lputs_ISR@data:	
  1423                           ; 1 bytes @ 0x3
  1424                           
  1425                           
  1426                           ; 1 bytes @ 0x3
  1427  0048                     	ds	1
  1428  0049                     BIO_config@out:	
  1429  0049                     lputs_ISR@i:	
  1430                           ; 1 bytes @ 0x4
  1431                           
  1432  0049                     ADC_2@ADC_value:	
  1433                           ; 1 bytes @ 0x4
  1434                           
  1435  0049                     ADC_4@ADC_value:	
  1436                           ; 2 bytes @ 0x4
  1437                           
  1438  0049                     ADC_5@ADC_value:	
  1439                           ; 2 bytes @ 0x4
  1440                           
  1441                           
  1442                           ; 2 bytes @ 0x4
  1443  0049                     	ds	2
  1444  004B                     ??_read_ADC_channels:	
  1445                           
  1446                           ; 1 bytes @ 0x6
  1447  004B                     	ds	1
  1448  004C                     read_ADC_channels@aux:	
  1449                           
  1450                           ; 7 bytes @ 0x7
  1451  004C                     	ds	7
  1452  0053                     read_ADC_channels@value1:	
  1453                           
  1454                           ; 2 bytes @ 0xE
  1455  0053                     	ds	2
  1456  0055                     read_ADC_channels@value2:	
  1457                           
  1458                           ; 2 bytes @ 0x10
  1459  0055                     	ds	2
  1460  0057                     read_ADC_channels@value3:	
  1461                           
  1462                           ; 2 bytes @ 0x12
  1463  0057                     	ds	2
  1464  0059                     ??_mess_handler:	
  1465                           
  1466                           ; 1 bytes @ 0x14
  1467  0059                     	ds	3
  1468  005C                     mess_handler@asic:	
  1469                           
  1470                           ; 2 bytes @ 0x17
  1471  005C                     	ds	2
  1472  005E                     ??_main:	
  1473                           
  1474                           ; 1 bytes @ 0x19
  1475  005E                     	ds	1
  1476  005F                     main@i:	
  1477                           
  1478                           ; 1 bytes @ 0x1A
  1479  005F                     	ds	1
  1480                           
  1481                           	psect	maintext
  1482  0062                     __pmaintext:	
  1483 ;;
  1484 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1485 ;;
  1486 ;; *************** function _main *****************
  1487 ;; Defined at:
  1488 ;;		line 17 in file "main.c"
  1489 ;; Parameters:    Size  Location     Type
  1490 ;;		None
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;  myVin           6    0        struct .
  1493 ;;  mybits          2    0        struct .
  1494 ;;  i               1   26[BANK0 ] unsigned char 
  1495 ;; Return value:  Size  Location     Type
  1496 ;;                  1    wreg      void 
  1497 ;; Registers used:
  1498 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1499 ;; Tracked objects:
  1500 ;;		On entry : B1F/0
  1501 ;;		On exit  : 0/0
  1502 ;;		Unchanged: 0/0
  1503 ;; Data sizes:     COMMON   BANK0   BANK1
  1504 ;;      Params:         0       0       0
  1505 ;;      Locals:         0       1       0
  1506 ;;      Temps:          0       1       0
  1507 ;;      Totals:         0       2       0
  1508 ;;Total ram usage:        2 bytes
  1509 ;; Hardware stack levels required when called:    5
  1510 ;; This function calls:
  1511 ;;		_SYSTEM_Initialize
  1512 ;;		_mess_handler
  1513 ;;		_setup_ADC
  1514 ;;		_setup_TMR0
  1515 ;;		_start_RCM
  1516 ;;		_start_RX_USART_ISR
  1517 ;;		_start_TX_USART_ISR
  1518 ;; This function is called by:
  1519 ;;		Startup code after reset
  1520 ;; This function uses a non-reentrant model
  1521 ;;
  1522                           
  1523                           
  1524                           ;psect for function _main
  1525  0062                     _main:	
  1526                           
  1527                           ;main.c: 19: unsigned char i;
  1528                           ;main.c: 21: BIO3 mybits;
  1529                           ;main.c: 22: VIN myVin;
  1530                           ;main.c: 24: SYSTEM_Initialize();
  1531                           
  1532                           ;incstack = 0
  1533                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1534  0062  2262               	fcall	_SYSTEM_Initialize
  1535                           
  1536                           ;main.c: 25: setup_TMR0();
  1537  0063  2245               	fcall	_setup_TMR0
  1538                           
  1539                           ;main.c: 26: start_TX_USART_ISR();
  1540  0064  2236               	fcall	_start_TX_USART_ISR
  1541                           
  1542                           ;main.c: 27: start_RX_USART_ISR();
  1543  0065  2204               	fcall	_start_RX_USART_ISR
  1544                           
  1545                           ;main.c: 28: start_RCM();
  1546  0066  225E               	fcall	_start_RCM
  1547                           
  1548                           ;main.c: 29: setup_ADC();
  1549  0067  2252               	fcall	_setup_ADC
  1550                           
  1551                           ;main.c: 31: RA5 = 0;
  1552  0068  0020               	movlb	0	; select bank0
  1553  0069  128C               	bcf	12,5	;volatile
  1554                           
  1555                           ;main.c: 32: _delay((unsigned long)((250)*(500000/4000.0)));
  1556  006A  3029               	movlw	41
  1557  006B  0020               	movlb	0	; select bank0
  1558  006C  00DE               	movwf	??_main
  1559  006D  3094               	movlw	148
  1560  006E                     u817:	
  1561  006E  0B89               	decfsz	9,f
  1562  006F  286E               	goto	u817
  1563  0070  0BDE               	decfsz	??_main,f
  1564  0071  286E               	goto	u817
  1565  0072  0000               	nop
  1566                           
  1567                           ;main.c: 33: RA5 = 1;
  1568  0073  0020               	movlb	0	; select bank0
  1569  0074  168C               	bsf	12,5	;volatile
  1570                           
  1571                           ;main.c: 34: _delay((unsigned long)((250)*(500000/4000.0)));
  1572  0075  3029               	movlw	41
  1573  0076  0020               	movlb	0	; select bank0
  1574  0077  00DE               	movwf	??_main
  1575  0078  3094               	movlw	148
  1576  0079                     u827:	
  1577  0079  0B89               	decfsz	9,f
  1578  007A  2879               	goto	u827
  1579  007B  0BDE               	decfsz	??_main,f
  1580  007C  2879               	goto	u827
  1581  007D  0000               	nop
  1582  007E                     l1835:	
  1583                           ;main.c: 38: while(1) {
  1584                           
  1585                           
  1586                           ;main.c: 42: if (TIMER0_flag) {
  1587  007E  0020               	movlb	0	; select bank0
  1588  007F  083E               	movf	_TIMER0_flag,w	;volatile
  1589  0080  1903               	btfsc	3,2
  1590  0081  287E               	goto	l1835
  1591                           
  1592                           ;main.c: 43: TIMER0_flag = 0;
  1593  0082  01BE               	clrf	_TIMER0_flag	;volatile
  1594                           
  1595                           ;main.c: 45: if (USART_rx_index > 3) {
  1596  0083  3004               	movlw	4
  1597  0084  0240               	subwf	_USART_rx_index,w	;volatile
  1598  0085  1C03               	skipc
  1599  0086  2889               	goto	l1843
  1600                           
  1601                           ;main.c: 46: USART_rx_index = 0;
  1602  0087  01C0               	clrf	_USART_rx_index	;volatile
  1603                           
  1604                           ;main.c: 47: continue;
  1605  0088  287E               	goto	l1835
  1606  0089                     l1843:	
  1607                           
  1608                           ;main.c: 48: }
  1609                           ;main.c: 50: if(USART_rx_index == 0)
  1610  0089  0840               	movf	_USART_rx_index,w	;volatile
  1611  008A  1903               	btfsc	3,2
  1612                           
  1613                           ;main.c: 51: continue;
  1614  008B  287E               	goto	l1835
  1615                           
  1616                           ;main.c: 54: mess_rec_size = USART_rx_index;
  1617  008C  0840               	movf	_USART_rx_index,w	;volatile
  1618  008D  00DE               	movwf	??_main
  1619  008E  085E               	movf	??_main,w
  1620  008F  00C1               	movwf	_mess_rec_size	;volatile
  1621                           
  1622                           ;main.c: 56: for (i = 0; i < mess_rec_size; i++)
  1623  0090  01DF               	clrf	main@i
  1624  0091                     l1855:	
  1625  0091  0841               	movf	_mess_rec_size,w	;volatile
  1626  0092  025F               	subwf	main@i,w
  1627  0093  1803               	btfsc	3,0
  1628  0094  28A6               	goto	l1857
  1629                           
  1630                           ;main.c: 57: mess_rec[i] = USART_rx_data[i];
  1631  0095  085F               	movf	main@i,w
  1632  0096  3E20               	addlw	(low (_USART_rx_data| 0))& (0+255)
  1633  0097  0086               	movwf	6
  1634  0098  0187               	clrf	7
  1635  0099  0801               	movf	1,w
  1636  009A  00DE               	movwf	??_main
  1637  009B  085F               	movf	main@i,w
  1638  009C  3E42               	addlw	(low (_mess_rec| 0))& (0+255)
  1639  009D  0086               	movwf	6
  1640  009E  0187               	clrf	7
  1641  009F  085E               	movf	??_main,w
  1642  00A0  0081               	movwf	1
  1643  00A1  3001               	movlw	1
  1644  00A2  00DE               	movwf	??_main
  1645  00A3  085E               	movf	??_main,w
  1646  00A4  07DF               	addwf	main@i,f
  1647  00A5  2891               	goto	l1855
  1648  00A6                     l1857:	
  1649                           
  1650                           ;main.c: 60: mess_handler();
  1651  00A6  20E7               	fcall	_mess_handler
  1652  00A7  287E               	goto	l1835
  1653  00A8                     __end_of_main:	
  1654                           
  1655                           	psect	text1
  1656  0236                     __ptext1:	
  1657 ;; *************** function _start_TX_USART_ISR *****************
  1658 ;; Defined at:
  1659 ;;		line 100 in file "USART1823.c"
  1660 ;; Parameters:    Size  Location     Type
  1661 ;;		None
  1662 ;; Auto vars:     Size  Location     Type
  1663 ;;		None
  1664 ;; Return value:  Size  Location     Type
  1665 ;;                  1    wreg      void 
  1666 ;; Registers used:
  1667 ;;		wreg, status,2
  1668 ;; Tracked objects:
  1669 ;;		On entry : 0/0
  1670 ;;		On exit  : 0/0
  1671 ;;		Unchanged: 0/0
  1672 ;; Data sizes:     COMMON   BANK0   BANK1
  1673 ;;      Params:         0       0       0
  1674 ;;      Locals:         0       0       0
  1675 ;;      Temps:          0       0       0
  1676 ;;      Totals:         0       0       0
  1677 ;;Total ram usage:        0 bytes
  1678 ;; Hardware stack levels used:    1
  1679 ;; Hardware stack levels required when called:    2
  1680 ;; This function calls:
  1681 ;;		Nothing
  1682 ;; This function is called by:
  1683 ;;		_main
  1684 ;; This function uses a non-reentrant model
  1685 ;;
  1686                           
  1687                           
  1688                           ;psect for function _start_TX_USART_ISR
  1689  0236                     _start_TX_USART_ISR:	
  1690                           
  1691                           ;USART1823.c: 102: { BRGH = 1; BRG16 = 1; SPBRGH = 0; SPBRGL = 12; };
  1692                           
  1693                           ;incstack = 0
  1694                           ; Regs used in _start_TX_USART_ISR: [wreg+status,2]
  1695  0236  0023               	movlb	3	; select bank3
  1696  0237  151E               	bsf	30,2	;volatile
  1697  0238  159F               	bsf	31,3	;volatile
  1698  0239  019C               	clrf	28	;volatile
  1699  023A  300C               	movlw	12
  1700  023B  009B               	movwf	27	;volatile
  1701                           
  1702                           ;USART1823.c: 103: SYNC = 0;
  1703  023C  121E               	bcf	30,4	;volatile
  1704                           
  1705                           ;USART1823.c: 104: SPEN = 1;
  1706  023D  179D               	bsf	29,7	;volatile
  1707                           
  1708                           ;USART1823.c: 105: TXEN = 1;
  1709  023E  169E               	bsf	30,5	;volatile
  1710                           
  1711                           ;USART1823.c: 107: USART_tx_flag = 0;
  1712  023F  01F2               	clrf	_USART_tx_flag	;volatile
  1713                           
  1714                           ;USART1823.c: 108: USART_tx_index = 0;
  1715  0240  01F3               	clrf	_USART_tx_index	;volatile
  1716                           
  1717                           ;USART1823.c: 109: USART_tx_length = 0;
  1718  0241  01F4               	clrf	_USART_tx_length	;volatile
  1719                           
  1720                           ;USART1823.c: 112: PEIE = 1;
  1721  0242  170B               	bsf	11,6	;volatile
  1722                           
  1723                           ;USART1823.c: 113: GIE = 1;
  1724  0243  178B               	bsf	11,7	;volatile
  1725  0244  0008               	return
  1726  0245                     __end_of_start_TX_USART_ISR:	
  1727                           
  1728                           	psect	text2
  1729  0204                     __ptext2:	
  1730 ;; *************** function _start_RX_USART_ISR *****************
  1731 ;; Defined at:
  1732 ;;		line 82 in file "USART1823.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;		None
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;		None
  1737 ;; Return value:  Size  Location     Type
  1738 ;;                  1    wreg      void 
  1739 ;; Registers used:
  1740 ;;		wreg, status,2
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMMON   BANK0   BANK1
  1746 ;;      Params:         0       0       0
  1747 ;;      Locals:         0       0       0
  1748 ;;      Temps:          0       0       0
  1749 ;;      Totals:         0       0       0
  1750 ;;Total ram usage:        0 bytes
  1751 ;; Hardware stack levels used:    1
  1752 ;; Hardware stack levels required when called:    2
  1753 ;; This function calls:
  1754 ;;		Nothing
  1755 ;; This function is called by:
  1756 ;;		_main
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           
  1761                           ;psect for function _start_RX_USART_ISR
  1762  0204                     _start_RX_USART_ISR:	
  1763                           
  1764                           ;USART1823.c: 85: { BRGH = 1; BRG16 = 1; SPBRGH = 0; SPBRGL = 12; };
  1765                           
  1766                           ;incstack = 0
  1767                           ; Regs used in _start_RX_USART_ISR: [wreg+status,2]
  1768  0204  0023               	movlb	3	; select bank3
  1769  0205  151E               	bsf	30,2	;volatile
  1770  0206  159F               	bsf	31,3	;volatile
  1771  0207  019C               	clrf	28	;volatile
  1772  0208  300C               	movlw	12
  1773  0209  009B               	movwf	27	;volatile
  1774                           
  1775                           ;USART1823.c: 87: SYNC = 0;
  1776  020A  121E               	bcf	30,4	;volatile
  1777                           
  1778                           ;USART1823.c: 88: SPEN = 1;
  1779  020B  179D               	bsf	29,7	;volatile
  1780                           
  1781                           ;USART1823.c: 89: CREN = 1;
  1782  020C  161D               	bsf	29,4	;volatile
  1783                           
  1784                           ;USART1823.c: 91: USART_rx_flag = 0;
  1785  020D  0020               	movlb	0	; select bank0
  1786  020E  01BF               	clrf	_USART_rx_flag	;volatile
  1787                           
  1788                           ;USART1823.c: 92: USART_rx_index = 0;
  1789  020F  01C0               	clrf	_USART_rx_index	;volatile
  1790                           
  1791                           ;USART1823.c: 94: RCIE = 1;
  1792  0210  0021               	movlb	1	; select bank1
  1793  0211  1691               	bsf	17,5	;volatile
  1794                           
  1795                           ;USART1823.c: 95: PEIE = 1;
  1796  0212  170B               	bsf	11,6	;volatile
  1797                           
  1798                           ;USART1823.c: 96: GIE = 1;
  1799  0213  178B               	bsf	11,7	;volatile
  1800  0214  0008               	return
  1801  0215                     __end_of_start_RX_USART_ISR:	
  1802                           
  1803                           	psect	text3
  1804  025E                     __ptext3:	
  1805 ;; *************** function _start_RCM *****************
  1806 ;; Defined at:
  1807 ;;		line 4 in file "RCM1823.c"
  1808 ;; Parameters:    Size  Location     Type
  1809 ;;		None
  1810 ;; Auto vars:     Size  Location     Type
  1811 ;;		None
  1812 ;; Return value:  Size  Location     Type
  1813 ;;                  1    wreg      void 
  1814 ;; Registers used:
  1815 ;;		wreg
  1816 ;; Tracked objects:
  1817 ;;		On entry : 0/0
  1818 ;;		On exit  : 0/0
  1819 ;;		Unchanged: 0/0
  1820 ;; Data sizes:     COMMON   BANK0   BANK1
  1821 ;;      Params:         0       0       0
  1822 ;;      Locals:         0       0       0
  1823 ;;      Temps:          0       0       0
  1824 ;;      Totals:         0       0       0
  1825 ;;Total ram usage:        0 bytes
  1826 ;; Hardware stack levels used:    1
  1827 ;; Hardware stack levels required when called:    2
  1828 ;; This function calls:
  1829 ;;		Nothing
  1830 ;; This function is called by:
  1831 ;;		_main
  1832 ;; This function uses a non-reentrant model
  1833 ;;
  1834                           
  1835                           
  1836                           ;psect for function _start_RCM
  1837  025E                     _start_RCM:	
  1838                           
  1839                           ;RCM1823.c: 6: CLKRCON = 0b11010000;
  1840                           
  1841                           ;incstack = 0
  1842                           ; Regs used in _start_RCM: [wreg]
  1843  025E  30D0               	movlw	208
  1844  025F  0027               	movlb	7	; select bank7
  1845  0260  009A               	movwf	26	;volatile
  1846  0261  0008               	return
  1847  0262                     __end_of_start_RCM:	
  1848                           
  1849                           	psect	text4
  1850  0245                     __ptext4:	
  1851 ;; *************** function _setup_TMR0 *****************
  1852 ;; Defined at:
  1853 ;;		line 10 in file "TMR0.c"
  1854 ;; Parameters:    Size  Location     Type
  1855 ;;		None
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;		None
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  1    wreg      void 
  1860 ;; Registers used:
  1861 ;;		None
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMMON   BANK0   BANK1
  1867 ;;      Params:         0       0       0
  1868 ;;      Locals:         0       0       0
  1869 ;;      Temps:          0       0       0
  1870 ;;      Totals:         0       0       0
  1871 ;;Total ram usage:        0 bytes
  1872 ;; Hardware stack levels used:    1
  1873 ;; Hardware stack levels required when called:    2
  1874 ;; This function calls:
  1875 ;;		Nothing
  1876 ;; This function is called by:
  1877 ;;		_main
  1878 ;; This function uses a non-reentrant model
  1879 ;;
  1880                           
  1881                           
  1882                           ;psect for function _setup_TMR0
  1883  0245                     _setup_TMR0:	
  1884                           
  1885                           ;TMR0.c: 13: PS2 = 0; PS1 = 1; PS0 = 0;
  1886                           
  1887                           ;incstack = 0
  1888                           ; Regs used in _setup_TMR0: []
  1889  0245  0021               	movlb	1	; select bank1
  1890  0246  1115               	bcf	21,2	;volatile
  1891  0247  1495               	bsf	21,1	;volatile
  1892  0248  1015               	bcf	21,0	;volatile
  1893                           
  1894                           ;TMR0.c: 16: PSA = 0;
  1895  0249  1195               	bcf	21,3	;volatile
  1896                           
  1897                           ;TMR0.c: 18: TMR0CS = 0;
  1898  024A  1295               	bcf	21,5	;volatile
  1899  024B  0008               	return
  1900  024C                     __end_of_setup_TMR0:	
  1901                           
  1902                           	psect	text5
  1903  0252                     __ptext5:	
  1904 ;; *************** function _setup_ADC *****************
  1905 ;; Defined at:
  1906 ;;		line 3 in file "ADC1823.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;		None
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;		None
  1911 ;; Return value:  Size  Location     Type
  1912 ;;                  1    wreg      void 
  1913 ;; Registers used:
  1914 ;;		wreg
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMMON   BANK0   BANK1
  1920 ;;      Params:         0       0       0
  1921 ;;      Locals:         0       0       0
  1922 ;;      Temps:          0       0       0
  1923 ;;      Totals:         0       0       0
  1924 ;;Total ram usage:        0 bytes
  1925 ;; Hardware stack levels used:    1
  1926 ;; Hardware stack levels required when called:    2
  1927 ;; This function calls:
  1928 ;;		Nothing
  1929 ;; This function is called by:
  1930 ;;		_main
  1931 ;; This function uses a non-reentrant model
  1932 ;;
  1933                           
  1934                           
  1935                           ;psect for function _setup_ADC
  1936  0252                     _setup_ADC:	
  1937                           
  1938                           ;ADC1823.c: 20: ADCON1 = 0b11110000;
  1939                           
  1940                           ;incstack = 0
  1941                           ; Regs used in _setup_ADC: [wreg]
  1942  0252  30F0               	movlw	240
  1943  0253  0021               	movlb	1	; select bank1
  1944  0254  009E               	movwf	30	;volatile
  1945                           
  1946                           ;ADC1823.c: 21: { ADCON0 = 0b00100100;};
  1947  0255  3024               	movlw	36
  1948  0256  009D               	movwf	29	;volatile
  1949  0257  0008               	return
  1950  0258                     __end_of_setup_ADC:	
  1951                           
  1952                           	psect	text6
  1953  00E7                     __ptext6:	
  1954 ;; *************** function _mess_handler *****************
  1955 ;; Defined at:
  1956 ;;		line 11 in file "comm.c"
  1957 ;; Parameters:    Size  Location     Type
  1958 ;;		None
  1959 ;; Auto vars:     Size  Location     Type
  1960 ;;  asic            2   23[BANK0 ] struct .
  1961 ;; Return value:  Size  Location     Type
  1962 ;;                  1    wreg      void 
  1963 ;; Registers used:
  1964 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1965 ;; Tracked objects:
  1966 ;;		On entry : 0/0
  1967 ;;		On exit  : 0/0
  1968 ;;		Unchanged: 0/0
  1969 ;; Data sizes:     COMMON   BANK0   BANK1
  1970 ;;      Params:         0       0       0
  1971 ;;      Locals:         0       2       0
  1972 ;;      Temps:          0       3       0
  1973 ;;      Totals:         0       5       0
  1974 ;;Total ram usage:        5 bytes
  1975 ;; Hardware stack levels used:    1
  1976 ;; Hardware stack levels required when called:    4
  1977 ;; This function calls:
  1978 ;;		_BIO_config
  1979 ;;		_lputs_ISR
  1980 ;;		_read_ADC_channels
  1981 ;; This function is called by:
  1982 ;;		_main
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986                           
  1987                           ;psect for function _mess_handler
  1988  00E7                     _mess_handler:	
  1989                           
  1990                           ;comm.c: 15: BIO3 asic;
  1991                           ;comm.c: 17: switch (mess_rec[0]) {
  1992                           
  1993                           ;incstack = 0
  1994                           ; Regs used in _mess_handler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1995  00E7  2913               	goto	l1817
  1996  00E8                     l1801:	
  1997                           ;comm.c: 18: case 't':
  1998                           
  1999                           
  2000                           ;comm.c: 19: lputs_ISR(mess_rec,mess_rec_size);
  2001  00E8  0020               	movlb	0	; select bank0
  2002  00E9  0841               	movf	_mess_rec_size,w	;volatile
  2003  00EA  00D9               	movwf	??_mess_handler
  2004  00EB  0859               	movf	??_mess_handler,w
  2005  00EC  00C5               	movwf	lputs_ISR@length
  2006  00ED  3042               	movlw	(low (_mess_rec| 0))& (0+255)
  2007  00EE  2159               	fcall	_lputs_ISR
  2008                           
  2009                           ;comm.c: 20: break;
  2010  00EF  0008               	return
  2011  00F0                     l1803:	
  2012                           ;comm.c: 22: case 'c':
  2013                           
  2014                           
  2015                           ;comm.c: 23: asic.data = 0x0000;
  2016  00F0  0020               	movlb	0	; select bank0
  2017  00F1  01DC               	clrf	mess_handler@asic
  2018  00F2  01DD               	clrf	mess_handler@asic+1
  2019                           
  2020                           ;comm.c: 24: asic.data |= (unsigned short)(mess_rec[2]<<8);
  2021  00F3  0844               	movf	_mess_rec+2,w	;volatile
  2022  00F4  00D9               	movwf	??_mess_handler
  2023  00F5  01DA               	clrf	??_mess_handler+1
  2024  00F6  0859               	movf	??_mess_handler,w
  2025  00F7  00DA               	movwf	??_mess_handler+1
  2026  00F8  01D9               	clrf	??_mess_handler
  2027  00F9  0859               	movf	??_mess_handler,w
  2028  00FA  04DC               	iorwf	mess_handler@asic,f
  2029  00FB  085A               	movf	??_mess_handler+1,w
  2030  00FC  04DD               	iorwf	mess_handler@asic+1,f
  2031                           
  2032                           ;comm.c: 25: asic.data |= (unsigned short)(mess_rec[1]);
  2033  00FD  0843               	movf	_mess_rec+1,w	;volatile
  2034  00FE  00D9               	movwf	??_mess_handler
  2035  00FF  01DA               	clrf	??_mess_handler+1
  2036  0100  0859               	movf	??_mess_handler,w
  2037  0101  04DC               	iorwf	mess_handler@asic,f
  2038  0102  085A               	movf	??_mess_handler+1,w
  2039  0103  04DD               	iorwf	mess_handler@asic+1,f
  2040                           
  2041                           ;comm.c: 27: lputs_ISR(mess_rec,mess_rec_size);
  2042  0104  0841               	movf	_mess_rec_size,w	;volatile
  2043  0105  00D9               	movwf	??_mess_handler
  2044  0106  0859               	movf	??_mess_handler,w
  2045  0107  00C5               	movwf	lputs_ISR@length
  2046  0108  3042               	movlw	(low (_mess_rec| 0))& (0+255)
  2047  0109  2159               	fcall	_lputs_ISR
  2048                           
  2049                           ;comm.c: 29: BIO_config(asic);
  2050  010A  0020               	movlb	0	; select bank0
  2051  010B  085D               	movf	mess_handler@asic+1,w
  2052  010C  00C6               	movwf	BIO_config@conf+1
  2053  010D  085C               	movf	mess_handler@asic,w
  2054  010E  00C5               	movwf	BIO_config@conf
  2055  010F  20A8               	fcall	_BIO_config
  2056                           
  2057                           ;comm.c: 30: break;
  2058  0110  0008               	return
  2059  0111                     l1813:	
  2060                           ;comm.c: 32: case 'm':
  2061                           
  2062                           
  2063                           ;comm.c: 33: read_ADC_channels();
  2064  0111  2120               	fcall	_read_ADC_channels
  2065                           
  2066                           ;comm.c: 38: }
  2067                           
  2068                           ;comm.c: 37: break;
  2069                           
  2070                           ;comm.c: 36: default:
  2071                           
  2072                           ;comm.c: 34: break;
  2073  0112  0008               	return
  2074  0113                     l1817:	
  2075  0113  0020               	movlb	0	; select bank0
  2076  0114  0842               	movf	_mess_rec,w	;volatile
  2077                           
  2078                           ; Switch size 1, requested type "space"
  2079                           ; Number of cases is 3, Range of values is 99 to 116
  2080                           ; switch strategies available:
  2081                           ; Name         Instructions Cycles
  2082                           ; simple_byte           10     6 (average)
  2083                           ; direct_byte           45     9 (fixed)
  2084                           ; jumptable            263     9 (fixed)
  2085                           ;	Chosen strategy is simple_byte
  2086  0115  3A63               	xorlw	99	; case 99
  2087  0116  1903               	skipnz
  2088  0117  28F0               	goto	l1803
  2089  0118  3A0E               	xorlw	14	; case 109
  2090  0119  1903               	skipnz
  2091  011A  2911               	goto	l1813
  2092  011B  3A19               	xorlw	25	; case 116
  2093  011C  1903               	skipnz
  2094  011D  28E8               	goto	l1801
  2095  011E  291F               	goto	l313
  2096  011F                     l313:	
  2097  011F  0008               	return
  2098  0120                     __end_of_mess_handler:	
  2099                           
  2100                           	psect	text7
  2101  0120                     __ptext7:	
  2102 ;; *************** function _read_ADC_channels *****************
  2103 ;; Defined at:
  2104 ;;		line 41 in file "comm.c"
  2105 ;; Parameters:    Size  Location     Type
  2106 ;;		None
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;  aux             7    7[BANK0 ] unsigned char [7]
  2109 ;;  value3          2   18[BANK0 ] unsigned short 
  2110 ;;  value2          2   16[BANK0 ] unsigned short 
  2111 ;;  value1          2   14[BANK0 ] unsigned short 
  2112 ;; Return value:  Size  Location     Type
  2113 ;;                  1    wreg      void 
  2114 ;; Registers used:
  2115 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2116 ;; Tracked objects:
  2117 ;;		On entry : 0/0
  2118 ;;		On exit  : 0/0
  2119 ;;		Unchanged: 0/0
  2120 ;; Data sizes:     COMMON   BANK0   BANK1
  2121 ;;      Params:         0       0       0
  2122 ;;      Locals:         0      13       0
  2123 ;;      Temps:          0       1       0
  2124 ;;      Totals:         0      14       0
  2125 ;;Total ram usage:       14 bytes
  2126 ;; Hardware stack levels used:    1
  2127 ;; Hardware stack levels required when called:    3
  2128 ;; This function calls:
  2129 ;;		_ADC_2
  2130 ;;		_ADC_4
  2131 ;;		_ADC_5
  2132 ;;		_lputs_ISR
  2133 ;; This function is called by:
  2134 ;;		_mess_handler
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           
  2139                           ;psect for function _read_ADC_channels
  2140  0120                     _read_ADC_channels:	
  2141                           
  2142                           ;comm.c: 43: unsigned char aux[7];
  2143                           ;comm.c: 44: unsigned short value1,value2,value3;
  2144                           ;comm.c: 47: value1 = ADC_2();
  2145                           
  2146                           ;incstack = 0
  2147                           ; Regs used in _read_ADC_channels: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2148  0120  21C8               	fcall	_ADC_2
  2149  0121  0020               	movlb	0	; select bank0
  2150  0122  0846               	movf	?_ADC_2+1,w
  2151  0123  00D4               	movwf	read_ADC_channels@value1+1
  2152  0124  0845               	movf	?_ADC_2,w
  2153  0125  00D3               	movwf	read_ADC_channels@value1
  2154                           
  2155                           ;comm.c: 49: value2 = ADC_4();
  2156  0126  21A5               	fcall	_ADC_4
  2157  0127  0020               	movlb	0	; select bank0
  2158  0128  0846               	movf	?_ADC_4+1,w
  2159  0129  00D6               	movwf	read_ADC_channels@value2+1
  2160  012A  0845               	movf	?_ADC_4,w
  2161  012B  00D5               	movwf	read_ADC_channels@value2
  2162                           
  2163                           ;comm.c: 51: value3 = ADC_5();
  2164  012C  2182               	fcall	_ADC_5
  2165  012D  0020               	movlb	0	; select bank0
  2166  012E  0846               	movf	?_ADC_5+1,w
  2167  012F  00D8               	movwf	read_ADC_channels@value3+1
  2168  0130  0845               	movf	?_ADC_5,w
  2169  0131  00D7               	movwf	read_ADC_channels@value3
  2170                           
  2171                           ;comm.c: 52: { ADCON0 = 0b00100100;};
  2172  0132  3024               	movlw	36
  2173  0133  0021               	movlb	1	; select bank1
  2174  0134  009D               	movwf	29	;volatile
  2175                           
  2176                           ;comm.c: 54: aux[0] = 'm';
  2177  0135  306D               	movlw	109
  2178  0136  0020               	movlb	0	; select bank0
  2179  0137  00CB               	movwf	??_read_ADC_channels
  2180  0138  084B               	movf	??_read_ADC_channels,w
  2181  0139  00CC               	movwf	read_ADC_channels@aux
  2182                           
  2183                           ;comm.c: 55: aux[1] = (unsigned char)(value1 & 0xff);
  2184  013A  0853               	movf	read_ADC_channels@value1,w
  2185  013B  00CB               	movwf	??_read_ADC_channels
  2186  013C  084B               	movf	??_read_ADC_channels,w
  2187  013D  00CD               	movwf	read_ADC_channels@aux+1
  2188                           
  2189                           ;comm.c: 56: aux[2] = (unsigned char)((value1 >> 8) & 0xff);
  2190  013E  0854               	movf	read_ADC_channels@value1+1,w
  2191  013F  00CB               	movwf	??_read_ADC_channels
  2192  0140  084B               	movf	??_read_ADC_channels,w
  2193  0141  00CE               	movwf	read_ADC_channels@aux+2
  2194                           
  2195                           ;comm.c: 57: aux[3] = (unsigned char)(value2 & 0xff);
  2196  0142  0855               	movf	read_ADC_channels@value2,w
  2197  0143  00CB               	movwf	??_read_ADC_channels
  2198  0144  084B               	movf	??_read_ADC_channels,w
  2199  0145  00CF               	movwf	read_ADC_channels@aux+3
  2200                           
  2201                           ;comm.c: 58: aux[4] = (unsigned char)((value2 >> 8) & 0xff);
  2202  0146  0856               	movf	read_ADC_channels@value2+1,w
  2203  0147  00CB               	movwf	??_read_ADC_channels
  2204  0148  084B               	movf	??_read_ADC_channels,w
  2205  0149  00D0               	movwf	read_ADC_channels@aux+4
  2206                           
  2207                           ;comm.c: 59: aux[5] = (unsigned char)(value3 & 0xff);
  2208  014A  0857               	movf	read_ADC_channels@value3,w
  2209  014B  00CB               	movwf	??_read_ADC_channels
  2210  014C  084B               	movf	??_read_ADC_channels,w
  2211  014D  00D1               	movwf	read_ADC_channels@aux+5
  2212                           
  2213                           ;comm.c: 60: aux[6] = (unsigned char)((value3 >> 8) & 0xff);
  2214  014E  0858               	movf	read_ADC_channels@value3+1,w
  2215  014F  00CB               	movwf	??_read_ADC_channels
  2216  0150  084B               	movf	??_read_ADC_channels,w
  2217  0151  00D2               	movwf	read_ADC_channels@aux+6
  2218                           
  2219                           ;comm.c: 62: lputs_ISR(aux,7);
  2220  0152  3007               	movlw	7
  2221  0153  00CB               	movwf	??_read_ADC_channels
  2222  0154  084B               	movf	??_read_ADC_channels,w
  2223  0155  00C5               	movwf	lputs_ISR@length
  2224  0156  304C               	movlw	(low (read_ADC_channels@aux| 0))& (0+255)
  2225  0157  2159               	fcall	_lputs_ISR
  2226  0158  0008               	return
  2227  0159                     __end_of_read_ADC_channels:	
  2228                           
  2229                           	psect	text8
  2230  0159                     __ptext8:	
  2231 ;; *************** function _lputs_ISR *****************
  2232 ;; Defined at:
  2233 ;;		line 131 in file "USART1823.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;  data            1    wreg     PTR unsigned char 
  2236 ;;		 -> read_ADC_channels@aux(7), mess_rec(3), 
  2237 ;;  length          1    0[BANK0 ] unsigned char 
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;  data            1    3[BANK0 ] PTR unsigned char 
  2240 ;;		 -> read_ADC_channels@aux(7), mess_rec(3), 
  2241 ;;  i               1    4[BANK0 ] unsigned char 
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  1    wreg      void 
  2244 ;; Registers used:
  2245 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMMON   BANK0   BANK1
  2251 ;;      Params:         0       1       0
  2252 ;;      Locals:         0       2       0
  2253 ;;      Temps:          0       2       0
  2254 ;;      Totals:         0       5       0
  2255 ;;Total ram usage:        5 bytes
  2256 ;; Hardware stack levels used:    1
  2257 ;; Hardware stack levels required when called:    2
  2258 ;; This function calls:
  2259 ;;		Nothing
  2260 ;; This function is called by:
  2261 ;;		_mess_handler
  2262 ;;		_read_ADC_channels
  2263 ;; This function uses a non-reentrant model
  2264 ;;
  2265                           
  2266                           
  2267                           ;psect for function _lputs_ISR
  2268  0159                     _lputs_ISR:	
  2269                           
  2270                           ;incstack = 0
  2271                           ; Regs used in _lputs_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  2272                           ;lputs_ISR@data stored from wreg
  2273  0159  0020               	movlb	0	; select bank0
  2274  015A  00C8               	movwf	lputs_ISR@data
  2275                           
  2276                           ;USART1823.c: 133: unsigned char i;
  2277                           ;USART1823.c: 135: if (USART_tx_flag == 1)
  2278  015B  0372               	decf	_USART_tx_flag,w	;volatile
  2279  015C  1903               	btfsc	3,2
  2280  015D  0008               	return
  2281                           
  2282                           ;USART1823.c: 138: for (i = 0; i < length; i++)
  2283                           
  2284                           ;USART1823.c: 136: return;
  2285  015E  01C9               	clrf	lputs_ISR@i
  2286  015F                     l1625:	
  2287  015F  0845               	movf	lputs_ISR@length,w
  2288  0160  0249               	subwf	lputs_ISR@i,w
  2289  0161  1803               	btfsc	3,0
  2290  0162  2976               	goto	l1627
  2291                           
  2292                           ;USART1823.c: 139: USART_tx_data[i] = data[i];
  2293  0163  0849               	movf	lputs_ISR@i,w
  2294  0164  0748               	addwf	lputs_ISR@data,w
  2295  0165  00C6               	movwf	??_lputs_ISR
  2296  0166  0846               	movf	??_lputs_ISR,w
  2297  0167  0086               	movwf	6
  2298  0168  0187               	clrf	7
  2299  0169  0801               	movf	1,w
  2300  016A  00C7               	movwf	??_lputs_ISR+1
  2301  016B  0849               	movf	lputs_ISR@i,w
  2302  016C  3E2F               	addlw	(low (_USART_tx_data| 0))& (0+255)
  2303  016D  0086               	movwf	6
  2304  016E  0187               	clrf	7
  2305  016F  0847               	movf	??_lputs_ISR+1,w
  2306  0170  0081               	movwf	1
  2307  0171  3001               	movlw	1
  2308  0172  00C6               	movwf	??_lputs_ISR
  2309  0173  0846               	movf	??_lputs_ISR,w
  2310  0174  07C9               	addwf	lputs_ISR@i,f
  2311  0175  295F               	goto	l1625
  2312  0176                     l1627:	
  2313                           
  2314                           ;USART1823.c: 141: USART_tx_index = 0;
  2315  0176  01F3               	clrf	_USART_tx_index	;volatile
  2316                           
  2317                           ;USART1823.c: 142: USART_tx_length = length;
  2318  0177  0845               	movf	lputs_ISR@length,w
  2319  0178  00C6               	movwf	??_lputs_ISR
  2320  0179  0846               	movf	??_lputs_ISR,w
  2321  017A  00F4               	movwf	_USART_tx_length	;volatile
  2322                           
  2323                           ;USART1823.c: 144: USART_tx_flag = 1;
  2324  017B  3001               	movlw	1
  2325  017C  00C6               	movwf	??_lputs_ISR
  2326  017D  0846               	movf	??_lputs_ISR,w
  2327  017E  00F2               	movwf	_USART_tx_flag	;volatile
  2328                           
  2329                           ;USART1823.c: 145: TXIE = 1;
  2330  017F  0021               	movlb	1	; select bank1
  2331  0180  1611               	bsf	17,4	;volatile
  2332  0181  0008               	return
  2333  0182                     __end_of_lputs_ISR:	
  2334                           
  2335                           	psect	text9
  2336  0182                     __ptext9:	
  2337 ;; *************** function _ADC_5 *****************
  2338 ;; Defined at:
  2339 ;;		line 48 in file "ADC1823.c"
  2340 ;; Parameters:    Size  Location     Type
  2341 ;;		None
  2342 ;; Auto vars:     Size  Location     Type
  2343 ;;  ADC_value       2    4[BANK0 ] unsigned short 
  2344 ;; Return value:  Size  Location     Type
  2345 ;;                  2    0[BANK0 ] unsigned short 
  2346 ;; Registers used:
  2347 ;;		wreg
  2348 ;; Tracked objects:
  2349 ;;		On entry : 0/0
  2350 ;;		On exit  : 0/0
  2351 ;;		Unchanged: 0/0
  2352 ;; Data sizes:     COMMON   BANK0   BANK1
  2353 ;;      Params:         0       2       0
  2354 ;;      Locals:         0       2       0
  2355 ;;      Temps:          0       2       0
  2356 ;;      Totals:         0       6       0
  2357 ;;Total ram usage:        6 bytes
  2358 ;; Hardware stack levels used:    1
  2359 ;; Hardware stack levels required when called:    2
  2360 ;; This function calls:
  2361 ;;		Nothing
  2362 ;; This function is called by:
  2363 ;;		_read_ADC_channels
  2364 ;; This function uses a non-reentrant model
  2365 ;;
  2366                           
  2367                           
  2368                           ;psect for function _ADC_5
  2369  0182                     _ADC_5:	
  2370                           
  2371                           ;ADC1823.c: 50: unsigned short ADC_value;
  2372                           ;ADC1823.c: 52: { ADCON0 = 0b00010101;};
  2373                           
  2374                           ;incstack = 0
  2375                           ; Regs used in _ADC_5: [wreg]
  2376  0182  3015               	movlw	21
  2377  0183  0021               	movlb	1	; select bank1
  2378  0184  009D               	movwf	29	;volatile
  2379                           
  2380                           ;ADC1823.c: 53: __nop();
  2381  0185  0000               	nop
  2382                           
  2383                           ;ADC1823.c: 54: { ADGO = 1; while (ADGO); ADC_value = ADRESH; ADC_value <<= 8; ADC_value
      +                           |= ADRESL;};
  2384  0186  0021               	movlb	1	; select bank1
  2385  0187  149D               	bsf	29,1	;volatile
  2386  0188                     l346:	
  2387  0188  189D               	btfsc	29,1	;volatile
  2388  0189  2988               	goto	l346
  2389  018A  081C               	movf	28,w	;volatile
  2390  018B  0020               	movlb	0	; select bank0
  2391  018C  00C7               	movwf	??_ADC_5
  2392  018D  01C8               	clrf	??_ADC_5+1
  2393  018E  0847               	movf	??_ADC_5,w
  2394  018F  00C9               	movwf	ADC_5@ADC_value
  2395  0190  0848               	movf	??_ADC_5+1,w
  2396  0191  00CA               	movwf	ADC_5@ADC_value+1
  2397  0192  3008               	movlw	8
  2398  0193                     u725:	
  2399  0193  35C9               	lslf	ADC_5@ADC_value,f
  2400  0194  0DCA               	rlf	ADC_5@ADC_value+1,f
  2401  0195  0B89               	decfsz	9,f
  2402  0196  2993               	goto	u725
  2403  0197  0021               	movlb	1	; select bank1
  2404  0198  081B               	movf	27,w	;volatile
  2405  0199  0020               	movlb	0	; select bank0
  2406  019A  00C7               	movwf	??_ADC_5
  2407  019B  01C8               	clrf	??_ADC_5+1
  2408  019C  0847               	movf	??_ADC_5,w
  2409  019D  04C9               	iorwf	ADC_5@ADC_value,f
  2410  019E  0848               	movf	??_ADC_5+1,w
  2411  019F  04CA               	iorwf	ADC_5@ADC_value+1,f
  2412                           
  2413                           ;ADC1823.c: 55: return ADC_value;
  2414  01A0  084A               	movf	ADC_5@ADC_value+1,w
  2415  01A1  00C6               	movwf	?_ADC_5+1
  2416  01A2  0849               	movf	ADC_5@ADC_value,w
  2417  01A3  00C5               	movwf	?_ADC_5
  2418  01A4  0008               	return
  2419  01A5                     __end_of_ADC_5:	
  2420                           
  2421                           	psect	text10
  2422  01A5                     __ptext10:	
  2423 ;; *************** function _ADC_4 *****************
  2424 ;; Defined at:
  2425 ;;		line 38 in file "ADC1823.c"
  2426 ;; Parameters:    Size  Location     Type
  2427 ;;		None
  2428 ;; Auto vars:     Size  Location     Type
  2429 ;;  ADC_value       2    4[BANK0 ] unsigned short 
  2430 ;; Return value:  Size  Location     Type
  2431 ;;                  2    0[BANK0 ] unsigned short 
  2432 ;; Registers used:
  2433 ;;		wreg
  2434 ;; Tracked objects:
  2435 ;;		On entry : 0/0
  2436 ;;		On exit  : 0/0
  2437 ;;		Unchanged: 0/0
  2438 ;; Data sizes:     COMMON   BANK0   BANK1
  2439 ;;      Params:         0       2       0
  2440 ;;      Locals:         0       2       0
  2441 ;;      Temps:          0       2       0
  2442 ;;      Totals:         0       6       0
  2443 ;;Total ram usage:        6 bytes
  2444 ;; Hardware stack levels used:    1
  2445 ;; Hardware stack levels required when called:    2
  2446 ;; This function calls:
  2447 ;;		Nothing
  2448 ;; This function is called by:
  2449 ;;		_read_ADC_channels
  2450 ;; This function uses a non-reentrant model
  2451 ;;
  2452                           
  2453                           
  2454                           ;psect for function _ADC_4
  2455  01A5                     _ADC_4:	
  2456                           
  2457                           ;ADC1823.c: 40: unsigned short ADC_value;
  2458                           ;ADC1823.c: 42: { ADCON0 = 0b00010001;};
  2459                           
  2460                           ;incstack = 0
  2461                           ; Regs used in _ADC_4: [wreg]
  2462  01A5  3011               	movlw	17
  2463  01A6  0021               	movlb	1	; select bank1
  2464  01A7  009D               	movwf	29	;volatile
  2465                           
  2466                           ;ADC1823.c: 43: __nop();
  2467  01A8  0000               	nop
  2468                           
  2469                           ;ADC1823.c: 44: { ADGO = 1; while (ADGO); ADC_value = ADRESH; ADC_value <<= 8; ADC_value
      +                           |= ADRESL;};
  2470  01A9  0021               	movlb	1	; select bank1
  2471  01AA  149D               	bsf	29,1	;volatile
  2472  01AB                     l340:	
  2473  01AB  189D               	btfsc	29,1	;volatile
  2474  01AC  29AB               	goto	l340
  2475  01AD  081C               	movf	28,w	;volatile
  2476  01AE  0020               	movlb	0	; select bank0
  2477  01AF  00C7               	movwf	??_ADC_4
  2478  01B0  01C8               	clrf	??_ADC_4+1
  2479  01B1  0847               	movf	??_ADC_4,w
  2480  01B2  00C9               	movwf	ADC_4@ADC_value
  2481  01B3  0848               	movf	??_ADC_4+1,w
  2482  01B4  00CA               	movwf	ADC_4@ADC_value+1
  2483  01B5  3008               	movlw	8
  2484  01B6                     u705:	
  2485  01B6  35C9               	lslf	ADC_4@ADC_value,f
  2486  01B7  0DCA               	rlf	ADC_4@ADC_value+1,f
  2487  01B8  0B89               	decfsz	9,f
  2488  01B9  29B6               	goto	u705
  2489  01BA  0021               	movlb	1	; select bank1
  2490  01BB  081B               	movf	27,w	;volatile
  2491  01BC  0020               	movlb	0	; select bank0
  2492  01BD  00C7               	movwf	??_ADC_4
  2493  01BE  01C8               	clrf	??_ADC_4+1
  2494  01BF  0847               	movf	??_ADC_4,w
  2495  01C0  04C9               	iorwf	ADC_4@ADC_value,f
  2496  01C1  0848               	movf	??_ADC_4+1,w
  2497  01C2  04CA               	iorwf	ADC_4@ADC_value+1,f
  2498                           
  2499                           ;ADC1823.c: 45: return ADC_value;
  2500  01C3  084A               	movf	ADC_4@ADC_value+1,w
  2501  01C4  00C6               	movwf	?_ADC_4+1
  2502  01C5  0849               	movf	ADC_4@ADC_value,w
  2503  01C6  00C5               	movwf	?_ADC_4
  2504  01C7  0008               	return
  2505  01C8                     __end_of_ADC_4:	
  2506                           
  2507                           	psect	text11
  2508  01C8                     __ptext11:	
  2509 ;; *************** function _ADC_2 *****************
  2510 ;; Defined at:
  2511 ;;		line 25 in file "ADC1823.c"
  2512 ;; Parameters:    Size  Location     Type
  2513 ;;		None
  2514 ;; Auto vars:     Size  Location     Type
  2515 ;;  ADC_value       2    4[BANK0 ] unsigned short 
  2516 ;; Return value:  Size  Location     Type
  2517 ;;                  2    0[BANK0 ] unsigned short 
  2518 ;; Registers used:
  2519 ;;		wreg
  2520 ;; Tracked objects:
  2521 ;;		On entry : 0/0
  2522 ;;		On exit  : 0/0
  2523 ;;		Unchanged: 0/0
  2524 ;; Data sizes:     COMMON   BANK0   BANK1
  2525 ;;      Params:         0       2       0
  2526 ;;      Locals:         0       2       0
  2527 ;;      Temps:          0       2       0
  2528 ;;      Totals:         0       6       0
  2529 ;;Total ram usage:        6 bytes
  2530 ;; Hardware stack levels used:    1
  2531 ;; Hardware stack levels required when called:    2
  2532 ;; This function calls:
  2533 ;;		Nothing
  2534 ;; This function is called by:
  2535 ;;		_read_ADC_channels
  2536 ;; This function uses a non-reentrant model
  2537 ;;
  2538                           
  2539                           
  2540                           ;psect for function _ADC_2
  2541  01C8                     _ADC_2:	
  2542                           
  2543                           ;ADC1823.c: 27: unsigned short ADC_value;
  2544                           ;ADC1823.c: 29: { ADCON0 = 0b00001001;};
  2545                           
  2546                           ;incstack = 0
  2547                           ; Regs used in _ADC_2: [wreg]
  2548  01C8  3009               	movlw	9
  2549  01C9  0021               	movlb	1	; select bank1
  2550  01CA  009D               	movwf	29	;volatile
  2551                           
  2552                           ;ADC1823.c: 30: __nop();
  2553  01CB  0000               	nop
  2554                           
  2555                           ;ADC1823.c: 34: { ADGO = 1; while (ADGO); ADC_value = ADRESH; ADC_value <<= 8; ADC_value
      +                           |= ADRESL;};
  2556  01CC  0021               	movlb	1	; select bank1
  2557  01CD  149D               	bsf	29,1	;volatile
  2558  01CE                     l334:	
  2559  01CE  189D               	btfsc	29,1	;volatile
  2560  01CF  29CE               	goto	l334
  2561  01D0  081C               	movf	28,w	;volatile
  2562  01D1  0020               	movlb	0	; select bank0
  2563  01D2  00C7               	movwf	??_ADC_2
  2564  01D3  01C8               	clrf	??_ADC_2+1
  2565  01D4  0847               	movf	??_ADC_2,w
  2566  01D5  00C9               	movwf	ADC_2@ADC_value
  2567  01D6  0848               	movf	??_ADC_2+1,w
  2568  01D7  00CA               	movwf	ADC_2@ADC_value+1
  2569  01D8  3008               	movlw	8
  2570  01D9                     u685:	
  2571  01D9  35C9               	lslf	ADC_2@ADC_value,f
  2572  01DA  0DCA               	rlf	ADC_2@ADC_value+1,f
  2573  01DB  0B89               	decfsz	9,f
  2574  01DC  29D9               	goto	u685
  2575  01DD  0021               	movlb	1	; select bank1
  2576  01DE  081B               	movf	27,w	;volatile
  2577  01DF  0020               	movlb	0	; select bank0
  2578  01E0  00C7               	movwf	??_ADC_2
  2579  01E1  01C8               	clrf	??_ADC_2+1
  2580  01E2  0847               	movf	??_ADC_2,w
  2581  01E3  04C9               	iorwf	ADC_2@ADC_value,f
  2582  01E4  0848               	movf	??_ADC_2+1,w
  2583  01E5  04CA               	iorwf	ADC_2@ADC_value+1,f
  2584                           
  2585                           ;ADC1823.c: 35: return ADC_value;
  2586  01E6  084A               	movf	ADC_2@ADC_value+1,w
  2587  01E7  00C6               	movwf	?_ADC_2+1
  2588  01E8  0849               	movf	ADC_2@ADC_value,w
  2589  01E9  00C5               	movwf	?_ADC_2
  2590  01EA  0008               	return
  2591  01EB                     __end_of_ADC_2:	
  2592                           
  2593                           	psect	text12
  2594  00A8                     __ptext12:	
  2595 ;; *************** function _BIO_config *****************
  2596 ;; Defined at:
  2597 ;;		line 35 in file "bio3.c"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;  conf            2    0[BANK0 ] struct .
  2600 ;; Auto vars:     Size  Location     Type
  2601 ;;  out             1    4[BANK0 ] unsigned char 
  2602 ;;  i               1    3[BANK0 ] unsigned char 
  2603 ;; Return value:  Size  Location     Type
  2604 ;;                  1    wreg      void 
  2605 ;; Registers used:
  2606 ;;		wreg, status,2, status,0
  2607 ;; Tracked objects:
  2608 ;;		On entry : 0/0
  2609 ;;		On exit  : 0/0
  2610 ;;		Unchanged: 0/0
  2611 ;; Data sizes:     COMMON   BANK0   BANK1
  2612 ;;      Params:         0       2       0
  2613 ;;      Locals:         0       2       0
  2614 ;;      Temps:          0       1       0
  2615 ;;      Totals:         0       5       0
  2616 ;;Total ram usage:        5 bytes
  2617 ;; Hardware stack levels used:    1
  2618 ;; Hardware stack levels required when called:    2
  2619 ;; This function calls:
  2620 ;;		Nothing
  2621 ;; This function is called by:
  2622 ;;		_mess_handler
  2623 ;; This function uses a non-reentrant model
  2624 ;;
  2625                           
  2626                           
  2627                           ;psect for function _BIO_config
  2628  00A8                     _BIO_config:	
  2629                           
  2630                           ;bio3.c: 37: unsigned char i, out;
  2631                           ;bio3.c: 39: out &= 0b11110111; PORTC = out;;
  2632                           
  2633                           ;incstack = 0
  2634                           ; Regs used in _BIO_config: [wreg+status,2+status,0]
  2635  00A8  30F7               	movlw	247
  2636  00A9  0020               	movlb	0	; select bank0
  2637  00AA  00C7               	movwf	??_BIO_config
  2638  00AB  0847               	movf	??_BIO_config,w
  2639  00AC  05C9               	andwf	BIO_config@out,f
  2640  00AD  0849               	movf	BIO_config@out,w
  2641  00AE  008E               	movwf	14	;volatile
  2642                           
  2643                           ;bio3.c: 40: _delay((unsigned long)((1)*(500000/4000.0)));
  2644  00AF  3029               	movlw	41
  2645  00B0                     u837:	
  2646  00B0  0B89               	decfsz	9,f
  2647  00B1  28B0               	goto	u837
  2648  00B2  3200               	nop2
  2649                           
  2650                           ;bio3.c: 42: RA5 = 0;;
  2651  00B3  0020               	movlb	0	; select bank0
  2652  00B4  128C               	bcf	12,5	;volatile
  2653                           
  2654                           ;bio3.c: 43: _delay((unsigned long)((1)*(500000/4000.0)));
  2655  00B5  3029               	movlw	41
  2656  00B6                     u847:	
  2657  00B6  0B89               	decfsz	9,f
  2658  00B7  28B6               	goto	u847
  2659  00B8  3200               	nop2
  2660                           
  2661                           ;bio3.c: 45: RA5 = 1;;
  2662  00B9  0020               	movlb	0	; select bank0
  2663  00BA  168C               	bsf	12,5	;volatile
  2664                           
  2665                           ;bio3.c: 47: for(i = 0; i < 16; i++) {
  2666  00BB  01C8               	clrf	BIO_config@i
  2667  00BC                     L1:	
  2668  00BC  3010               	movlw	16
  2669  00BD  0248               	subwf	BIO_config@i,w
  2670  00BE  1803               	btfsc	3,0
  2671  00BF  0008               	return
  2672                           
  2673                           ;bio3.c: 48: if (conf.data & 0x0001) {
  2674  00C0  1C45               	btfss	BIO_config@conf,0
  2675  00C1  28C4               	goto	l1713
  2676                           
  2677                           ;bio3.c: 49: out |= 0b00000100; PORTC = out;;
  2678  00C2  1549               	bsf	BIO_config@out,2
  2679  00C3  28C8               	goto	l1715
  2680  00C4                     l1713:	
  2681                           ;bio3.c: 50: } else {
  2682                           
  2683                           
  2684                           ;bio3.c: 51: out &= 0b11111011; PORTC = out;;
  2685  00C4  30FB               	movlw	251
  2686  00C5  00C7               	movwf	??_BIO_config
  2687  00C6  0847               	movf	??_BIO_config,w
  2688  00C7  05C9               	andwf	BIO_config@out,f
  2689  00C8                     l1715:	
  2690  00C8  0849               	movf	BIO_config@out,w
  2691  00C9  008E               	movwf	14	;volatile
  2692                           
  2693                           ;bio3.c: 52: }
  2694                           ;bio3.c: 53: conf.data >>= 1;
  2695  00CA  3001               	movlw	1
  2696  00CB                     u755:	
  2697  00CB  36C6               	lsrf	BIO_config@conf+1,f
  2698  00CC  0CC5               	rrf	BIO_config@conf,f
  2699  00CD  0B89               	decfsz	9,f
  2700  00CE  28CB               	goto	u755
  2701                           
  2702                           ;bio3.c: 55: _delay((unsigned long)((1)*(500000/4000.0)));
  2703  00CF  3029               	movlw	41
  2704  00D0                     u857:	
  2705  00D0  0B89               	decfsz	9,f
  2706  00D1  28D0               	goto	u857
  2707  00D2  3200               	nop2
  2708                           
  2709                           ;bio3.c: 57: out |= 0b00001000; PORTC = out;;
  2710  00D3  0020               	movlb	0	; select bank0
  2711  00D4  15C9               	bsf	BIO_config@out,3
  2712  00D5  0849               	movf	BIO_config@out,w
  2713  00D6  008E               	movwf	14	;volatile
  2714                           
  2715                           ;bio3.c: 58: _delay((unsigned long)((1)*(500000/4000.0)));
  2716  00D7  3029               	movlw	41
  2717  00D8                     u867:	
  2718  00D8  0B89               	decfsz	9,f
  2719  00D9  28D8               	goto	u867
  2720  00DA  3200               	nop2
  2721                           
  2722                           ;bio3.c: 59: out &= 0b11110111; PORTC = out;;
  2723  00DB  30F7               	movlw	247
  2724  00DC  0020               	movlb	0	; select bank0
  2725  00DD  00C7               	movwf	??_BIO_config
  2726  00DE  0847               	movf	??_BIO_config,w
  2727  00DF  05C9               	andwf	BIO_config@out,f
  2728  00E0  0849               	movf	BIO_config@out,w
  2729  00E1  008E               	movwf	14	;volatile
  2730  00E2  3001               	movlw	1
  2731  00E3  00C7               	movwf	??_BIO_config
  2732  00E4  0847               	movf	??_BIO_config,w
  2733  00E5  07C8               	addwf	BIO_config@i,f
  2734  00E6  28BC               	goto	L1
  2735  00E7                     __end_of_BIO_config:	
  2736                           
  2737                           	psect	text13
  2738  0262                     __ptext13:	
  2739 ;; *************** function _SYSTEM_Initialize *****************
  2740 ;; Defined at:
  2741 ;;		line 70 in file "mcc_generated_files/mcc.c"
  2742 ;; Parameters:    Size  Location     Type
  2743 ;;		None
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;		None
  2746 ;; Return value:  Size  Location     Type
  2747 ;;                  1    wreg      void 
  2748 ;; Registers used:
  2749 ;;		wreg, status,2, status,0, pclath, cstack
  2750 ;; Tracked objects:
  2751 ;;		On entry : 0/0
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMMON   BANK0   BANK1
  2755 ;;      Params:         0       0       0
  2756 ;;      Locals:         0       0       0
  2757 ;;      Temps:          0       0       0
  2758 ;;      Totals:         0       0       0
  2759 ;;Total ram usage:        0 bytes
  2760 ;; Hardware stack levels used:    1
  2761 ;; Hardware stack levels required when called:    3
  2762 ;; This function calls:
  2763 ;;		_OSCILLATOR_Initialize
  2764 ;;		_PIN_MANAGER_Initialize
  2765 ;; This function is called by:
  2766 ;;		_main
  2767 ;; This function uses a non-reentrant model
  2768 ;;
  2769                           
  2770                           
  2771                           ;psect for function _SYSTEM_Initialize
  2772  0262                     _SYSTEM_Initialize:	
  2773                           
  2774                           ;mcc.c: 73: PIN_MANAGER_Initialize();
  2775                           
  2776                           ;incstack = 0
  2777                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2778  0262  21EB               	fcall	_PIN_MANAGER_Initialize
  2779                           
  2780                           ;mcc.c: 74: OSCILLATOR_Initialize();
  2781  0263  2258               	fcall	_OSCILLATOR_Initialize
  2782  0264  0008               	return
  2783  0265                     __end_of_SYSTEM_Initialize:	
  2784                           
  2785                           	psect	text14
  2786  01EB                     __ptext14:	
  2787 ;; *************** function _PIN_MANAGER_Initialize *****************
  2788 ;; Defined at:
  2789 ;;		line 49 in file "mcc_generated_files/pin_manager.c"
  2790 ;; Parameters:    Size  Location     Type
  2791 ;;		None
  2792 ;; Auto vars:     Size  Location     Type
  2793 ;;		None
  2794 ;; Return value:  Size  Location     Type
  2795 ;;                  1    wreg      void 
  2796 ;; Registers used:
  2797 ;;		wreg, status,2
  2798 ;; Tracked objects:
  2799 ;;		On entry : 0/0
  2800 ;;		On exit  : 0/0
  2801 ;;		Unchanged: 0/0
  2802 ;; Data sizes:     COMMON   BANK0   BANK1
  2803 ;;      Params:         0       0       0
  2804 ;;      Locals:         0       0       0
  2805 ;;      Temps:          0       0       0
  2806 ;;      Totals:         0       0       0
  2807 ;;Total ram usage:        0 bytes
  2808 ;; Hardware stack levels used:    1
  2809 ;; Hardware stack levels required when called:    2
  2810 ;; This function calls:
  2811 ;;		Nothing
  2812 ;; This function is called by:
  2813 ;;		_SYSTEM_Initialize
  2814 ;; This function uses a non-reentrant model
  2815 ;;
  2816                           
  2817                           
  2818                           ;psect for function _PIN_MANAGER_Initialize
  2819  01EB                     _PIN_MANAGER_Initialize:	
  2820                           
  2821                           ;pin_manager.c: 51: LATA = 0x0;
  2822                           
  2823                           ;incstack = 0
  2824                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2825  01EB  0022               	movlb	2	; select bank2
  2826  01EC  018C               	clrf	12	;volatile
  2827                           
  2828                           ;pin_manager.c: 52: LATC = 0x0;
  2829  01ED  018E               	clrf	14	;volatile
  2830                           
  2831                           ;pin_manager.c: 55: ANSELA = 0b00000100;
  2832  01EE  3004               	movlw	4
  2833  01EF  0023               	movlb	3	; select bank3
  2834  01F0  008C               	movwf	12	;volatile
  2835                           
  2836                           ;pin_manager.c: 56: ANSELC = 0b00000011;
  2837  01F1  3003               	movlw	3
  2838  01F2  008E               	movwf	14	;volatile
  2839                           
  2840                           ;pin_manager.c: 59: WPUA = 0x3B;
  2841  01F3  303B               	movlw	59
  2842  01F4  0024               	movlb	4	; select bank4
  2843  01F5  008C               	movwf	12	;volatile
  2844                           
  2845                           ;pin_manager.c: 60: WPUC = 0x3C;
  2846  01F6  303C               	movlw	60
  2847  01F7  008E               	movwf	14	;volatile
  2848                           
  2849                           ;pin_manager.c: 62: RXDTSEL = 0;
  2850  01F8  0022               	movlb	2	; select bank2
  2851  01F9  139D               	bcf	29,7	;volatile
  2852                           
  2853                           ;pin_manager.c: 63: TXCKSEL = 0;
  2854  01FA  111D               	bcf	29,2	;volatile
  2855                           
  2856                           ;pin_manager.c: 66: TRISC = 0b01100011;
  2857  01FB  3063               	movlw	99
  2858  01FC  0021               	movlb	1	; select bank1
  2859  01FD  008E               	movwf	14	;volatile
  2860                           
  2861                           ;pin_manager.c: 67: TRISA = 0b01011111;
  2862  01FE  305F               	movlw	95
  2863  01FF  008C               	movwf	12	;volatile
  2864                           
  2865                           ;pin_manager.c: 69: OPTION_REGbits.nWPUEN = 0x0;
  2866  0200  1395               	bcf	21,7	;volatile
  2867                           
  2868                           ;pin_manager.c: 70: APFCON = 0x00;
  2869  0201  0022               	movlb	2	; select bank2
  2870  0202  019D               	clrf	29	;volatile
  2871  0203  0008               	return
  2872  0204                     __end_of_PIN_MANAGER_Initialize:	
  2873                           
  2874                           	psect	text15
  2875  0258                     __ptext15:	
  2876 ;; *************** function _OSCILLATOR_Initialize *****************
  2877 ;; Defined at:
  2878 ;;		line 78 in file "mcc_generated_files/mcc.c"
  2879 ;; Parameters:    Size  Location     Type
  2880 ;;		None
  2881 ;; Auto vars:     Size  Location     Type
  2882 ;;		None
  2883 ;; Return value:  Size  Location     Type
  2884 ;;                  1    wreg      void 
  2885 ;; Registers used:
  2886 ;;		wreg, status,2
  2887 ;; Tracked objects:
  2888 ;;		On entry : 0/0
  2889 ;;		On exit  : 0/0
  2890 ;;		Unchanged: 0/0
  2891 ;; Data sizes:     COMMON   BANK0   BANK1
  2892 ;;      Params:         0       0       0
  2893 ;;      Locals:         0       0       0
  2894 ;;      Temps:          0       0       0
  2895 ;;      Totals:         0       0       0
  2896 ;;Total ram usage:        0 bytes
  2897 ;; Hardware stack levels used:    1
  2898 ;; Hardware stack levels required when called:    2
  2899 ;; This function calls:
  2900 ;;		Nothing
  2901 ;; This function is called by:
  2902 ;;		_SYSTEM_Initialize
  2903 ;; This function uses a non-reentrant model
  2904 ;;
  2905                           
  2906                           
  2907                           ;psect for function _OSCILLATOR_Initialize
  2908  0258                     _OSCILLATOR_Initialize:	
  2909                           
  2910                           ;mcc.c: 81: OSCCON = 0x3A;
  2911                           
  2912                           ;incstack = 0
  2913                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2914  0258  303A               	movlw	58
  2915  0259  0021               	movlb	1	; select bank1
  2916  025A  0099               	movwf	25	;volatile
  2917                           
  2918                           ;mcc.c: 83: OSCSTAT = 0x00;
  2919  025B  019A               	clrf	26	;volatile
  2920                           
  2921                           ;mcc.c: 85: OSCTUNE = 0x00;
  2922  025C  0198               	clrf	24	;volatile
  2923  025D  0008               	return
  2924  025E                     __end_of_OSCILLATOR_Initialize:	
  2925                           
  2926                           	psect	intentry
  2927  0004                     __pintentry:	
  2928 ;; *************** function _isr *****************
  2929 ;; Defined at:
  2930 ;;		line 69 in file "main.c"
  2931 ;; Parameters:    Size  Location     Type
  2932 ;;		None
  2933 ;; Auto vars:     Size  Location     Type
  2934 ;;		None
  2935 ;; Return value:  Size  Location     Type
  2936 ;;                  1    wreg      void 
  2937 ;; Registers used:
  2938 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2939 ;; Tracked objects:
  2940 ;;		On entry : 0/0
  2941 ;;		On exit  : 0/0
  2942 ;;		Unchanged: 0/0
  2943 ;; Data sizes:     COMMON   BANK0   BANK1
  2944 ;;      Params:         0       0       0
  2945 ;;      Locals:         0       0       0
  2946 ;;      Temps:          2       0       0
  2947 ;;      Totals:         2       0       0
  2948 ;;Total ram usage:        2 bytes
  2949 ;; Hardware stack levels used:    1
  2950 ;; Hardware stack levels required when called:    1
  2951 ;; This function calls:
  2952 ;;		_start_TMR0_ISR
  2953 ;;		_stop_TMR0_ISR
  2954 ;;		i1_start_RX_USART_ISR
  2955 ;; This function is called by:
  2956 ;;		Interrupt level 1
  2957 ;; This function uses a non-reentrant model
  2958 ;;
  2959                           
  2960  0004                     _isr:	
  2961                           
  2962                           ;incstack = 0
  2963  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2964                           
  2965                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2966  0005  3180               	pagesel	$
  2967  0006  0020               	movlb	0	; select bank0
  2968  0007  087F               	movf	127,w
  2969  0008  00F9               	movwf	??_isr+1
  2970                           
  2971                           ;main.c: 73: if (TMR0IF && TMR0IE) {
  2972  0009  190B               	btfsc	11,2	;volatile
  2973  000A  1E8B               	btfss	11,5	;volatile
  2974  000B  2815               	goto	i1l116
  2975                           
  2976                           ;main.c: 75: TMR0IF = 0;
  2977  000C  110B               	bcf	11,2	;volatile
  2978                           
  2979                           ;main.c: 76: TMR0 = TIMER0_timeout;
  2980  000D  0870               	movf	_TIMER0_timeout,w	;volatile
  2981  000E  0095               	movwf	21	;volatile
  2982                           
  2983                           ;main.c: 79: TIMER0_flag = 1;
  2984  000F  3001               	movlw	1
  2985  0010  00F8               	movwf	??_isr
  2986  0011  0878               	movf	??_isr,w
  2987  0012  00BE               	movwf	_TIMER0_flag	;volatile
  2988                           
  2989                           ;main.c: 84: stop_TMR0_ISR();
  2990  0013  2265               	fcall	_stop_TMR0_ISR
  2991                           
  2992                           ;main.c: 86: return;
  2993  0014  284E               	goto	i1l117
  2994  0015                     i1l116:	
  2995                           
  2996                           ;main.c: 87: }
  2997                           ;main.c: 91: if (RCIF) {
  2998  0015  1E91               	btfss	17,5	;volatile
  2999  0016  282E               	goto	i1l118
  3000                           
  3001                           ;main.c: 92: stop_TMR0_ISR();
  3002  0017  2265               	fcall	_stop_TMR0_ISR
  3003                           
  3004                           ;main.c: 95: if (USART_rx_index >= 15) {
  3005  0018  300F               	movlw	15
  3006  0019  0020               	movlb	0	; select bank0
  3007  001A  0240               	subwf	_USART_rx_index,w	;volatile
  3008  001B  1803               	btfsc	3,0
  3009                           
  3010                           ;main.c: 96: USART_rx_index = 0;
  3011  001C  01C0               	clrf	_USART_rx_index	;volatile
  3012                           
  3013                           ;main.c: 97: }
  3014                           ;main.c: 99: USART_rx_data[USART_rx_index++] = RCREG;
  3015  001D  0023               	movlb	3	; select bank3
  3016  001E  0819               	movf	25,w	;volatile
  3017  001F  00F8               	movwf	??_isr
  3018  0020  0020               	movlb	0	; select bank0
  3019  0021  0840               	movf	_USART_rx_index,w
  3020  0022  3E20               	addlw	(low (_USART_rx_data| 0))& (0+255)
  3021  0023  0086               	movwf	6
  3022  0024  0187               	clrf	7
  3023  0025  0878               	movf	??_isr,w
  3024  0026  0081               	movwf	1
  3025  0027  3001               	movlw	1
  3026  0028  00F8               	movwf	??_isr
  3027  0029  0878               	movf	??_isr,w
  3028  002A  07C0               	addwf	_USART_rx_index,f	;volatile
  3029                           
  3030                           ;main.c: 101: start_TMR0_ISR(98);
  3031  002B  3062               	movlw	98
  3032  002C  2226               	fcall	_start_TMR0_ISR
  3033                           
  3034                           ;main.c: 103: return;
  3035  002D  284E               	goto	i1l117
  3036  002E                     i1l118:	
  3037                           
  3038                           ;main.c: 104: }
  3039                           ;main.c: 108: if (TXIF && TXIE) {
  3040  002E  1E11               	btfss	17,4	;volatile
  3041  002F  284E               	goto	i1l117
  3042  0030  0021               	movlb	1	; select bank1
  3043  0031  1E11               	btfss	17,4	;volatile
  3044  0032  284E               	goto	i1l117
  3045                           
  3046                           ;main.c: 110: TXREG = USART_tx_data[USART_tx_index++];
  3047  0033  0873               	movf	_USART_tx_index,w
  3048  0034  3E2F               	addlw	(low (_USART_tx_data| 0))& (0+255)
  3049  0035  0086               	movwf	6
  3050  0036  0187               	clrf	7
  3051  0037  0801               	movf	1,w
  3052  0038  0023               	movlb	3	; select bank3
  3053  0039  009A               	movwf	26	;volatile
  3054  003A  3001               	movlw	1
  3055  003B  00F8               	movwf	??_isr
  3056  003C  0878               	movf	??_isr,w
  3057  003D  07F3               	addwf	_USART_tx_index,f	;volatile
  3058                           
  3059                           ;main.c: 112: if (USART_tx_index >= USART_tx_length) {
  3060  003E  0874               	movf	_USART_tx_length,w	;volatile
  3061  003F  0273               	subwf	_USART_tx_index,w	;volatile
  3062  0040  1C03               	skipc
  3063  0041  284E               	goto	i1l117
  3064                           
  3065                           ;main.c: 113: TXIE = 0;
  3066  0042  0021               	movlb	1	; select bank1
  3067  0043  1211               	bcf	17,4	;volatile
  3068                           
  3069                           ;main.c: 114: USART_tx_flag = 0;
  3070  0044  01F2               	clrf	_USART_tx_flag	;volatile
  3071                           
  3072                           ;main.c: 117: _delay((unsigned long)((25)*(500000/4000.0)));
  3073  0045  3005               	movlw	5
  3074  0046  00F8               	movwf	??_isr
  3075  0047  300D               	movlw	13
  3076  0048                     u87_27:	
  3077  0048  0B89               	decfsz	9,f
  3078  0049  2848               	goto	u87_27
  3079  004A  0BF8               	decfsz	??_isr,f
  3080  004B  2848               	goto	u87_27
  3081  004C  3200               	nop2
  3082                           
  3083                           ;main.c: 118: start_RX_USART_ISR();
  3084  004D  2215               	fcall	i1_start_RX_USART_ISR
  3085  004E                     i1l117:	
  3086                           ;main.c: 119: }
  3087                           ;main.c: 120: return;
  3088                           
  3089  004E  0879               	movf	??_isr+1,w
  3090  004F  0020               	movlb	0	; select bank0
  3091  0050  00FF               	movwf	127
  3092  0051  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3093  0052  0009               	retfie
  3094  0053                     __end_of_isr:	
  3095                           
  3096                           	psect	text17
  3097  0215                     __ptext17:	
  3098 ;; *************** function i1_start_RX_USART_ISR *****************
  3099 ;; Defined at:
  3100 ;;		line 82 in file "USART1823.c"
  3101 ;; Parameters:    Size  Location     Type
  3102 ;;		None
  3103 ;; Auto vars:     Size  Location     Type
  3104 ;;		None
  3105 ;; Return value:  Size  Location     Type
  3106 ;;                  1    wreg      void 
  3107 ;; Registers used:
  3108 ;;		wreg, status,2
  3109 ;; Tracked objects:
  3110 ;;		On entry : 0/0
  3111 ;;		On exit  : 0/0
  3112 ;;		Unchanged: 0/0
  3113 ;; Data sizes:     COMMON   BANK0   BANK1
  3114 ;;      Params:         0       0       0
  3115 ;;      Locals:         0       0       0
  3116 ;;      Temps:          0       0       0
  3117 ;;      Totals:         0       0       0
  3118 ;;Total ram usage:        0 bytes
  3119 ;; Hardware stack levels used:    1
  3120 ;; This function calls:
  3121 ;;		Nothing
  3122 ;; This function is called by:
  3123 ;;		_isr
  3124 ;; This function uses a non-reentrant model
  3125 ;;
  3126                           
  3127                           
  3128                           ;psect for function i1_start_RX_USART_ISR
  3129  0215                     i1_start_RX_USART_ISR:	
  3130                           
  3131                           ;USART1823.c: 85: { BRGH = 1; BRG16 = 1; SPBRGH = 0; SPBRGL = 12; };
  3132                           
  3133                           ;incstack = 0
  3134                           ; Regs used in i1_start_RX_USART_ISR: [wreg+status,2]
  3135  0215  0023               	movlb	3	; select bank3
  3136  0216  151E               	bsf	30,2	;volatile
  3137  0217  159F               	bsf	31,3	;volatile
  3138  0218  019C               	clrf	28	;volatile
  3139  0219  300C               	movlw	12
  3140  021A  009B               	movwf	27	;volatile
  3141                           
  3142                           ;USART1823.c: 87: SYNC = 0;
  3143  021B  121E               	bcf	30,4	;volatile
  3144                           
  3145                           ;USART1823.c: 88: SPEN = 1;
  3146  021C  179D               	bsf	29,7	;volatile
  3147                           
  3148                           ;USART1823.c: 89: CREN = 1;
  3149  021D  161D               	bsf	29,4	;volatile
  3150                           
  3151                           ;USART1823.c: 91: USART_rx_flag = 0;
  3152  021E  0020               	movlb	0	; select bank0
  3153  021F  01BF               	clrf	_USART_rx_flag	;volatile
  3154                           
  3155                           ;USART1823.c: 92: USART_rx_index = 0;
  3156  0220  01C0               	clrf	_USART_rx_index	;volatile
  3157                           
  3158                           ;USART1823.c: 94: RCIE = 1;
  3159  0221  0021               	movlb	1	; select bank1
  3160  0222  1691               	bsf	17,5	;volatile
  3161                           
  3162                           ;USART1823.c: 95: PEIE = 1;
  3163  0223  170B               	bsf	11,6	;volatile
  3164                           
  3165                           ;USART1823.c: 96: GIE = 1;
  3166  0224  178B               	bsf	11,7	;volatile
  3167  0225  0008               	return
  3168  0226                     __end_ofi1_start_RX_USART_ISR:	
  3169                           
  3170                           	psect	text18
  3171  0265                     __ptext18:	
  3172 ;; *************** function _stop_TMR0_ISR *****************
  3173 ;; Defined at:
  3174 ;;		line 44 in file "TMR0.c"
  3175 ;; Parameters:    Size  Location     Type
  3176 ;;		None
  3177 ;; Auto vars:     Size  Location     Type
  3178 ;;		None
  3179 ;; Return value:  Size  Location     Type
  3180 ;;                  1    wreg      void 
  3181 ;; Registers used:
  3182 ;;		None
  3183 ;; Tracked objects:
  3184 ;;		On entry : 0/0
  3185 ;;		On exit  : 0/0
  3186 ;;		Unchanged: 0/0
  3187 ;; Data sizes:     COMMON   BANK0   BANK1
  3188 ;;      Params:         0       0       0
  3189 ;;      Locals:         0       0       0
  3190 ;;      Temps:          0       0       0
  3191 ;;      Totals:         0       0       0
  3192 ;;Total ram usage:        0 bytes
  3193 ;; Hardware stack levels used:    1
  3194 ;; This function calls:
  3195 ;;		Nothing
  3196 ;; This function is called by:
  3197 ;;		_isr
  3198 ;; This function uses a non-reentrant model
  3199 ;;
  3200                           
  3201                           
  3202                           ;psect for function _stop_TMR0_ISR
  3203  0265                     _stop_TMR0_ISR:	
  3204                           
  3205                           ;TMR0.c: 47: TMR0IE = 0;
  3206                           
  3207                           ;incstack = 0
  3208                           ; Regs used in _stop_TMR0_ISR: []
  3209  0265  128B               	bcf	11,5	;volatile
  3210                           
  3211                           ;TMR0.c: 48: TMR0IF = 0;
  3212  0266  110B               	bcf	11,2	;volatile
  3213  0267  0008               	return
  3214  0268                     __end_of_stop_TMR0_ISR:	
  3215                           
  3216                           	psect	text19
  3217  0226                     __ptext19:	
  3218 ;; *************** function _start_TMR0_ISR *****************
  3219 ;; Defined at:
  3220 ;;		line 30 in file "TMR0.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;  val             1    wreg     unsigned char 
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;  val             1    2[COMMON] unsigned char 
  3225 ;; Return value:  Size  Location     Type
  3226 ;;                  1    wreg      void 
  3227 ;; Registers used:
  3228 ;;		wreg, status,2
  3229 ;; Tracked objects:
  3230 ;;		On entry : 0/0
  3231 ;;		On exit  : 0/0
  3232 ;;		Unchanged: 0/0
  3233 ;; Data sizes:     COMMON   BANK0   BANK1
  3234 ;;      Params:         0       0       0
  3235 ;;      Locals:         1       0       0
  3236 ;;      Temps:          2       0       0
  3237 ;;      Totals:         3       0       0
  3238 ;;Total ram usage:        3 bytes
  3239 ;; Hardware stack levels used:    1
  3240 ;; This function calls:
  3241 ;;		Nothing
  3242 ;; This function is called by:
  3243 ;;		_isr
  3244 ;; This function uses a non-reentrant model
  3245 ;;
  3246                           
  3247                           
  3248                           ;psect for function _start_TMR0_ISR
  3249  0226                     _start_TMR0_ISR:	
  3250                           
  3251                           ;incstack = 0
  3252                           ; Regs used in _start_TMR0_ISR: [wreg+status,2]
  3253                           ;start_TMR0_ISR@val stored from wreg
  3254  0226  00F7               	movwf	start_TMR0_ISR@val
  3255                           
  3256                           ;TMR0.c: 32: TIMER0_timeout = val;
  3257  0227  0877               	movf	start_TMR0_ISR@val,w
  3258  0228  00F5               	movwf	??_start_TMR0_ISR
  3259  0229  01F6               	clrf	??_start_TMR0_ISR+1
  3260  022A  0875               	movf	??_start_TMR0_ISR,w
  3261  022B  00F0               	movwf	_TIMER0_timeout	;volatile
  3262  022C  0876               	movf	??_start_TMR0_ISR+1,w
  3263  022D  00F1               	movwf	_TIMER0_timeout+1	;volatile
  3264                           
  3265                           ;TMR0.c: 33: TIMER0_flag = 0;
  3266  022E  0020               	movlb	0	; select bank0
  3267  022F  01BE               	clrf	_TIMER0_flag	;volatile
  3268                           
  3269                           ;TMR0.c: 36: TMR0 = TIMER0_timeout;
  3270  0230  0870               	movf	_TIMER0_timeout,w	;volatile
  3271  0231  0095               	movwf	21	;volatile
  3272                           
  3273                           ;TMR0.c: 39: TMR0IF = 0;
  3274  0232  110B               	bcf	11,2	;volatile
  3275                           
  3276                           ;TMR0.c: 40: TMR0IE = 1;
  3277  0233  168B               	bsf	11,5	;volatile
  3278                           
  3279                           ;TMR0.c: 41: GIE = 1;
  3280  0234  178B               	bsf	11,7	;volatile
  3281  0235  0008               	return
  3282  0236                     __end_of_start_TMR0_ISR:	
  3283  007E                     btemp	set	126	;btemp
  3284  007E                     int$flags	set	126
  3285  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         42
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     27      64
    BANK1            16      0       0

Pointer List with Targets:

    lputs_ISR@data	PTR unsigned char  size(1) Largest target is 7
		 -> read_ADC_channels@aux(BANK0[7]), mess_rec(BANK0[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_start_TMR0_ISR

Critical Paths under _main in BANK0

    _main->_mess_handler
    _mess_handler->_read_ADC_channels
    _read_ADC_channels->_ADC_2
    _read_ADC_channels->_ADC_4
    _read_ADC_channels->_ADC_5

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    2106
                                             25 BANK0      2     2      0
                  _SYSTEM_Initialize
                       _mess_handler
                          _setup_ADC
                         _setup_TMR0
                          _start_RCM
                 _start_RX_USART_ISR
                 _start_TX_USART_ISR
 ---------------------------------------------------------------------------------
 (1) _start_TX_USART_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_RX_USART_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_RCM                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup_TMR0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup_ADC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mess_handler                                         5     5      0    2007
                                             20 BANK0      5     5      0
                         _BIO_config
                          _lputs_ISR
                  _read_ADC_channels
 ---------------------------------------------------------------------------------
 (2) _read_ADC_channels                                   14    14      0    1096
                                              6 BANK0     14    14      0
                              _ADC_2
                              _ADC_4
                              _ADC_5
                          _lputs_ISR
 ---------------------------------------------------------------------------------
 (3) _lputs_ISR                                            5     4      1     522
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (3) _ADC_5                                                6     4      2      40
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _ADC_4                                                6     4      2      40
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _ADC_2                                                6     4      2      40
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _BIO_config                                           5     3      2     349
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0      22
                                              3 COMMON     2     2      0
                     _start_TMR0_ISR
                      _stop_TMR0_ISR
               i1_start_RX_USART_ISR
 ---------------------------------------------------------------------------------
 (5) i1_start_RX_USART_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _stop_TMR0_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _start_TMR0_ISR                                       3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _mess_handler
     _BIO_config
     _lputs_ISR
     _read_ADC_channels
       _ADC_2
       _ADC_4
       _ADC_5
       _lputs_ISR
   _setup_ADC
   _setup_TMR0
   _start_RCM
   _start_RX_USART_ISR
   _start_TX_USART_ISR

 _isr (ROOT)
   _start_TMR0_ISR
   _stop_TMR0_ISR
   i1_start_RX_USART_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              60      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      4A       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1B      40       6       80.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            10      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               10      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      4A       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Fri Jan 27 15:13:28 2017

                    __CFG_CP$OFF 0000                    _USART_rx_data 0020                    _USART_rx_flag 003F  
                  _USART_tx_data 002F                    _USART_tx_flag 0072                              l313 011F  
                            l340 01AB                              l334 01CE                              l346 0188  
                            _GIE 005F                              _RA5 0065                              _PS0 04A8  
                            _PS1 04A9                              _PS2 04AA                     __CFG_CPD$OFF 0000  
                            u705 01B6                              u725 0193                              _PSA 04AB  
                            u817 006E                              u755 00CB                              u827 0079  
                            u837 00B0                              u685 01D9                              u847 00B6  
                            u857 00D0                              u867 00D8                              _isr 0004  
                   __CFG_BORV$HI 0000                              wreg 0009                     __CFG_IESO$ON 0000  
                 _USART_rx_index 0040                     __CFG_LVP$OFF 0000                   _USART_tx_index 0073  
                           l1713 00C4                             l1625 015F                             l1801 00E8  
                           l1715 00C8                             l1627 0176                             l1803 00F0  
                           l1813 0111                             l1817 0113                             l1843 0089  
                           l1835 007E                             l1855 0091                             l1857 00A6  
                           ?_isr 0075                             _ADGO 04E9                             _BRGH 0CF2  
                           _CREN 0CEC                             _LATA 010C                             _LATC 010E  
                           _PEIE 005E                             _RCIE 048D                             _RCIF 008D  
                           _TMR0 0015                             _SPEN 0CEF                             _TXIE 048C  
                           _TXEN 0CF5                             _TXIF 008C                             _SYNC 0CF4  
                           _WPUA 020C                             _WPUC 020E           __size_of_stop_TMR0_ISR 0003  
              _read_ADC_channels 0120                     __CFG_WRT$OFF 0000                             _main 0062  
                           fsr0h 0005                             fsr1h 0007                             indf0 0000  
                           fsr0l 0004                             indf1 0001                             fsr1l 0006  
                           btemp 007E               ?_read_ADC_channels 0075                             start 0053  
                  __CFG_MCLRE$ON 0000              ??_read_ADC_channels 004B                            ??_isr 0078  
 __size_of_OSCILLATOR_Initialize 0006                  _USART_tx_length 0074    __end_of_OSCILLATOR_Initialize 025E  
                          ?_main 0075                            _ADC_2 01C8                            _ADC_4 01A5  
                          _ADC_5 0182                            _BRG16 0CFB                    __CFG_WDTE$OFF 0000  
                          i1l116 0015                            i1l117 004E                            i1l118 002E  
            __size_of_BIO_config 003F                            _RCREG 0199                            _PORTC 000E  
                          _TRISA 008C                   _start_TMR0_ISR 0226                            _TRISC 008E  
                          u87_27 0048                            _TXREG 019A                   __CFG_FCMEN$OFF 0000  
      __end_of_read_ADC_channels 0159                            main@i 005F    __size_ofi1_start_RX_USART_ISR 0011  
                 __CFG_BOREN$OFF 0000                            status 0003                            wtemp0 007E  
                __initialization 0054                     __end_of_main 00A8                    _stop_TMR0_ISR 0265  
         __end_of_start_TMR0_ISR 0236                           ??_main 005E                           ?_ADC_2 0045  
                         ?_ADC_4 0045                           ?_ADC_5 0045                   _TIMER0_timeout 0070  
                 __CFG_PLLEN$OFF 0000                           _ADCON0 009D                           _ADCON1 009E  
                         _ADRESH 009C                           _ADRESL 009B                           _APFCON 011D  
                         _ANSELA 018C                           _ANSELC 018E                           _OSCCON 0099  
                         _TMR0IE 005D                           _TMR0IF 005A                           _TMR0CS 04AD  
                         _SPBRGH 019C                           _SPBRGL 019B                   __CFG_PWRTE$OFF 0000  
                 __CFG_STVREN$ON 0000                   ?_stop_TMR0_ISR 0075                  ?_start_TMR0_ISR 0075  
    __size_of_start_RX_USART_ISR 0011       __size_of_read_ADC_channels 0039                    ?_mess_handler 0075  
              _SYSTEM_Initialize 0262          __end_of__initialization 005F                     ??_BIO_config 0047  
                  __end_of_ADC_2 01EB                    __end_of_ADC_4 01C8               ?_SYSTEM_Initialize 0075  
                  __end_of_ADC_5 01A5                   __pcstackCOMMON 0075              ??_SYSTEM_Initialize 0045  
                        ??_ADC_2 0047                          ??_ADC_4 0047                          ??_ADC_5 0047  
                 _OPTION_REGbits 0095               __end_of_BIO_config 00E7      __size_of_start_TX_USART_ISR 000F  
                 ??_mess_handler 0059        __end_of_SYSTEM_Initialize 0265                       __pbssBANK0 0020  
                     __pmaintext 0062                  ??_stop_TMR0_ISR 0075             read_ADC_channels@aux 004C  
                     __pintentry 0004                          _CLKRCON 039A               __size_of_lputs_ISR 0029  
                lputs_ISR@length 0045               __size_of_setup_ADC 0006                          _OSCSTAT 009A  
                        _OSCTUNE 0098               __size_of_start_RCM 0004                          _RXDTSEL 08EF  
                        _TXCKSEL 08EA     __end_ofi1_start_RX_USART_ISR 0226                          __ptext1 0236  
                        __ptext2 0204                          __ptext3 025E                          __ptext4 0245  
                        __ptext5 0252                          __ptext6 00E7                          __ptext7 0120  
                        __ptext8 0159                          __ptext9 0182            _OSCILLATOR_Initialize 0258  
                   __size_of_isr 004F         ??_PIN_MANAGER_Initialize 0045       __size_of_SYSTEM_Initialize 0003  
                        clrloop0 024D                    _mess_rec_size 0041             end_of_initialization 005F  
              __end_of_lputs_ISR 0182                __end_of_setup_ADC 0258                 ??_start_TMR0_ISR 0075  
              __end_of_start_RCM 0262             __end_of_mess_handler 0120                       _setup_TMR0 0245  
               __CFG_FOSC$INTOSC 0000                   ADC_2@ADC_value 0049       __end_of_start_RX_USART_ISR 0215  
         ?_OSCILLATOR_Initialize 0075              start_initialization 0054  __size_of_PIN_MANAGER_Initialize 0019  
                    __end_of_isr 0053             i1_start_RX_USART_ISR 0215                   ADC_4@ADC_value 0049  
                 ADC_5@ADC_value 0049                      ?_setup_TMR0 0075       __end_of_start_TX_USART_ISR 0245  
                    __pbssCOMMON 0070                        ___latbits 0000                    __pcstackBANK0 0045  
          ?i1_start_RX_USART_ISR 0075            __size_of_mess_handler 0039           _PIN_MANAGER_Initialize 01EB  
          __end_of_stop_TMR0_ISR 0268                   __size_of_ADC_2 0023                   __size_of_ADC_4 0023  
                 __size_of_ADC_5 0023          read_ADC_channels@value1 0053          read_ADC_channels@value2 0055  
        read_ADC_channels@value3 0057                     _mess_handler 00E7              __size_of_setup_TMR0 0007  
                      clear_ram0 024C                       lputs_ISR@i 0049                        _lputs_ISR 0159  
                      _setup_ADC 0252                        _start_RCM 025E           ??i1_start_RX_USART_ISR 0075  
                     ?_lputs_ISR 0045                       ?_setup_ADC 0075          ??_OSCILLATOR_Initialize 0045  
              start_TMR0_ISR@val 0077                       ?_start_RCM 0075                   BIO_config@conf 0045  
                       __ptext10 01A5                         __ptext11 01C8                         __ptext12 00A8  
                       __ptext13 0262                         __ptext14 01EB                         __ptext15 0258  
                       __ptext17 0215                         __ptext18 0265                         __ptext19 0226  
                  lputs_ISR@data 0048               _start_RX_USART_ISR 0204                       _BIO_config 00A8  
                  __size_of_main 0046                         _mess_rec 0042              ?_start_RX_USART_ISR 0075  
                       int$flags 007E                     ??_setup_TMR0 0045                      _TIMER0_flag 003E  
           ??_start_RX_USART_ISR 0045          __size_of_start_TMR0_ISR 0010                 mess_handler@asic 005C  
                       intlevel1 0000               _start_TX_USART_ISR 0236                    BIO_config@out 0049  
        ?_PIN_MANAGER_Initialize 0075                __CFG_CLKOUTEN$OFF 0000               __end_of_setup_TMR0 024C  
            ?_start_TX_USART_ISR 0075                      ??_lputs_ISR 0046                      ??_setup_ADC 0045  
                    ??_start_RCM 0045             ??_start_TX_USART_ISR 0045                      BIO_config@i 0048  
 __end_of_PIN_MANAGER_Initialize 0204                      ?_BIO_config 0045  
