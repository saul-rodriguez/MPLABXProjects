Version 4.0 HI-TECH Software Intermediate Code
"70 ./USART1823.h
[; ;./USART1823.h: 70: void lputs_ISR(unsigned char* data, unsigned char length);
[v _lputs_ISR `(v ~T0 @X0 0 ef2`*uc`uc ]
"41 ./comm.h
[; ;./comm.h: 41: void sweep();
[v _sweep `(v ~T0 @X0 0 e? ]
"33
[; ;./comm.h: 33: void config_ASIC();
[v _config_ASIC `(v ~T0 @X0 0 e? ]
"34
[; ;./comm.h: 34: void read_ADC_channels();
[v _read_ADC_channels `(v ~T0 @X0 0 e? ]
"35
[; ;./comm.h: 35: void measure_Impedance();
[v _measure_Impedance `(v ~T0 @X0 0 e? ]
"36
[; ;./comm.h: 36: void measure_Impedance_no_offset();
[v _measure_Impedance_no_offset `(v ~T0 @X0 0 e? ]
"37
[; ;./comm.h: 37: void measure_Offset();
[v _measure_Offset `(v ~T0 @X0 0 e? ]
"38
[; ;./comm.h: 38: void measure_Impedance_SE();
[v _measure_Impedance_SE `(v ~T0 @X0 0 e? ]
"40
[; ;./comm.h: 40: void calibrate_reader();
[v _calibrate_reader `(v ~T0 @X0 0 e? ]
"45 ./bio3.h
[; ;./bio3.h: 45: typedef struct BIO3_bits_stuct {
[s S297 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S297 BIO3_bits_stuct RE FS GD0 GD1 GD2 NS CE GS0 GS1 GS2 GS3 IQ F0 F1 F2 F3 ]
"65
[; ;./bio3.h: 65: typedef union {
[u S298 `us 1 `uc -> 2 `i `S297 1 ]
[n S298 . datashort data data_bits ]
"277
[; ;./bio3.h: 277: void config(BIO3 conf);
[v _config `(v ~T0 @X0 0 ef1`S298 ]
"22 ./ADC1823.h
[; ;./ADC1823.h: 22: unsigned short ADC_2();
[v _ADC_2 `(us ~T0 @X0 0 e? ]
"23
[; ;./ADC1823.h: 23: unsigned short ADC_4();
[v _ADC_4 `(us ~T0 @X0 0 e? ]
"24
[; ;./ADC1823.h: 24: unsigned short ADC_5();
[v _ADC_5 `(us ~T0 @X0 0 e? ]
"2130 /home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 2130: extern volatile unsigned char ADCON0 __attribute__((address(0x09D)));
[v _ADCON0 `Vuc ~T0 @X0 0 e@157 ]
[v F2121 `(v ~T0 @X0 1 tf1`ul ]
"92 /home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic.h
[v __delay `JF2121 ~T0 @X0 0 e ]
[p i __delay ]
"39 ./comm.h
[; ;./comm.h: 39: unsigned char calculate_checksum(unsigned char* data, unsigned char num);
[v _calculate_checksum `(uc ~T0 @X0 0 ef2`*uc`uc ]
"278 ./bio3.h
[; ;./bio3.h: 278: void setGain(BIO3* asic, unsigned char gain_index);
[v _setGain `(v ~T0 @X0 0 ef2`*S298`uc ]
"279
[; ;./bio3.h: 279: void setFreq(BIO3* asic, unsigned char freq_index);
[v _setFreq `(v ~T0 @X0 0 ef2`*S298`uc ]
"44 ./comm.h
[; ;./comm.h: 44: unsigned char measure(short* I, short* Q, BIO3 asic);
[v _measure `(uc ~T0 @X0 0 ef3`*s`*s`S298 ]
"54 /home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 54: __asm("INDF0 equ 00h");
[; <" INDF0 equ 00h ;# ">
"74
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 74: __asm("INDF1 equ 01h");
[; <" INDF1 equ 01h ;# ">
"94
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 94: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"114
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 114: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"177
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 177: __asm("FSR0L equ 04h");
[; <" FSR0L equ 04h ;# ">
"197
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 197: __asm("FSR0H equ 05h");
[; <" FSR0H equ 05h ;# ">
"221
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 221: __asm("FSR1L equ 06h");
[; <" FSR1L equ 06h ;# ">
"241
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 241: __asm("FSR1H equ 07h");
[; <" FSR1H equ 07h ;# ">
"261
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 261: __asm("BSR equ 08h");
[; <" BSR equ 08h ;# ">
"313
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 313: __asm("WREG equ 09h");
[; <" WREG equ 09h ;# ">
"333
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 333: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"353
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 353: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"431
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 431: __asm("PORTA equ 0Ch");
[; <" PORTA equ 0Ch ;# ">
"686
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 686: __asm("PORTC equ 0Eh");
[; <" PORTC equ 0Eh ;# ">
"953
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 953: __asm("PIR1 equ 011h");
[; <" PIR1 equ 011h ;# ">
"1015
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 1015: __asm("PIR2 equ 012h");
[; <" PIR2 equ 012h ;# ">
"1060
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 1060: __asm("TMR0 equ 015h");
[; <" TMR0 equ 015h ;# ">
"1080
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 1080: __asm("TMR1 equ 016h");
[; <" TMR1 equ 016h ;# ">
"1087
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 1087: __asm("TMR1L equ 016h");
[; <" TMR1L equ 016h ;# ">
"1107
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 1107: __asm("TMR1H equ 017h");
[; <" TMR1H equ 017h ;# ">
"1127
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 1127: __asm("T1CON equ 018h");
[; <" T1CON equ 018h ;# ">
"1199
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 1199: __asm("T1GCON equ 019h");
[; <" T1GCON equ 019h ;# ">
"1276
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 1276: __asm("TMR2 equ 01Ah");
[; <" TMR2 equ 01Ah ;# ">
"1296
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 1296: __asm("PR2 equ 01Bh");
[; <" PR2 equ 01Bh ;# ">
"1316
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 1316: __asm("T2CON equ 01Ch");
[; <" T2CON equ 01Ch ;# ">
"1387
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 1387: __asm("CPSCON0 equ 01Eh");
[; <" CPSCON0 equ 01Eh ;# ">
"1447
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 1447: __asm("CPSCON1 equ 01Fh");
[; <" CPSCON1 equ 01Fh ;# ">
"1493
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 1493: __asm("TRISA equ 08Ch");
[; <" TRISA equ 08Ch ;# ">
"1543
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 1543: __asm("TRISC equ 08Eh");
[; <" TRISC equ 08Eh ;# ">
"1593
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 1593: __asm("PIE1 equ 091h");
[; <" PIE1 equ 091h ;# ">
"1655
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 1655: __asm("PIE2 equ 092h");
[; <" PIE2 equ 092h ;# ">
"1700
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 1700: __asm("OPTION_REG equ 095h");
[; <" OPTION_REG equ 095h ;# ">
"1783
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 1783: __asm("PCON equ 096h");
[; <" PCON equ 096h ;# ">
"1834
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 1834: __asm("WDTCON equ 097h");
[; <" WDTCON equ 097h ;# ">
"1893
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 1893: __asm("OSCTUNE equ 098h");
[; <" OSCTUNE equ 098h ;# ">
"1951
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 1951: __asm("OSCCON equ 099h");
[; <" OSCCON equ 099h ;# ">
"2023
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 2023: __asm("OSCSTAT equ 09Ah");
[; <" OSCSTAT equ 09Ah ;# ">
"2085
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 2085: __asm("ADRES equ 09Bh");
[; <" ADRES equ 09Bh ;# ">
"2092
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 2092: __asm("ADRESL equ 09Bh");
[; <" ADRESL equ 09Bh ;# ">
"2112
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 2112: __asm("ADRESH equ 09Ch");
[; <" ADRESH equ 09Ch ;# ">
"2132
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 2132: __asm("ADCON0 equ 09Dh");
[; <" ADCON0 equ 09Dh ;# ">
"2221
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 2221: __asm("ADCON1 equ 09Eh");
[; <" ADCON1 equ 09Eh ;# ">
"2287
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 2287: __asm("LATA equ 010Ch");
[; <" LATA equ 010Ch ;# ">
"2332
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 2332: __asm("LATC equ 010Eh");
[; <" LATC equ 010Eh ;# ">
"2382
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 2382: __asm("CM1CON0 equ 0111h");
[; <" CM1CON0 equ 0111h ;# ">
"2439
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 2439: __asm("CM1CON1 equ 0112h");
[; <" CM1CON1 equ 0112h ;# ">
"2505
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 2505: __asm("CM2CON0 equ 0113h");
[; <" CM2CON0 equ 0113h ;# ">
"2562
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 2562: __asm("CM2CON1 equ 0114h");
[; <" CM2CON1 equ 0114h ;# ">
"2628
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 2628: __asm("CMOUT equ 0115h");
[; <" CMOUT equ 0115h ;# ">
"2654
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 2654: __asm("BORCON equ 0116h");
[; <" BORCON equ 0116h ;# ">
"2681
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 2681: __asm("FVRCON equ 0117h");
[; <" FVRCON equ 0117h ;# ">
"2757
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 2757: __asm("DACCON0 equ 0118h");
[; <" DACCON0 equ 0118h ;# ">
"2812
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 2812: __asm("DACCON1 equ 0119h");
[; <" DACCON1 equ 0119h ;# ">
"2864
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 2864: __asm("SRCON0 equ 011Ah");
[; <" SRCON0 equ 011Ah ;# ">
"2935
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 2935: __asm("SRCON1 equ 011Bh");
[; <" SRCON1 equ 011Bh ;# ">
"2997
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 2997: __asm("APFCON equ 011Dh");
[; <" APFCON equ 011Dh ;# ">
"3002
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 3002: __asm("APFCON0 equ 011Dh");
[; <" APFCON0 equ 011Dh ;# ">
"3117
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 3117: __asm("ANSELA equ 018Ch");
[; <" ANSELA equ 018Ch ;# ">
"3164
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 3164: __asm("ANSELC equ 018Eh");
[; <" ANSELC equ 018Eh ;# ">
"3210
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 3210: __asm("EEADR equ 0191h");
[; <" EEADR equ 0191h ;# ">
"3217
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 3217: __asm("EEADRL equ 0191h");
[; <" EEADRL equ 0191h ;# ">
"3237
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 3237: __asm("EEADRH equ 0192h");
[; <" EEADRH equ 0192h ;# ">
"3257
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 3257: __asm("EEDAT equ 0193h");
[; <" EEDAT equ 0193h ;# ">
"3264
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 3264: __asm("EEDATL equ 0193h");
[; <" EEDATL equ 0193h ;# ">
"3269
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 3269: __asm("EEDATA equ 0193h");
[; <" EEDATA equ 0193h ;# ">
"3302
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 3302: __asm("EEDATH equ 0194h");
[; <" EEDATH equ 0194h ;# ">
"3322
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 3322: __asm("EECON1 equ 0195h");
[; <" EECON1 equ 0195h ;# ">
"3384
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 3384: __asm("EECON2 equ 0196h");
[; <" EECON2 equ 0196h ;# ">
"3404
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 3404: __asm("RCREG equ 0199h");
[; <" RCREG equ 0199h ;# ">
"3424
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 3424: __asm("TXREG equ 019Ah");
[; <" TXREG equ 019Ah ;# ">
"3444
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 3444: __asm("SP1BRG equ 019Bh");
[; <" SP1BRG equ 019Bh ;# ">
"3451
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 3451: __asm("SP1BRGL equ 019Bh");
[; <" SP1BRGL equ 019Bh ;# ">
"3456
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 3456: __asm("SPBRG equ 019Bh");
[; <" SPBRG equ 019Bh ;# ">
"3460
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 3460: __asm("SPBRGL equ 019Bh");
[; <" SPBRGL equ 019Bh ;# ">
"3505
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 3505: __asm("SP1BRGH equ 019Ch");
[; <" SP1BRGH equ 019Ch ;# ">
"3510
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 3510: __asm("SPBRGH equ 019Ch");
[; <" SPBRGH equ 019Ch ;# ">
"3543
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 3543: __asm("RCSTA equ 019Dh");
[; <" RCSTA equ 019Dh ;# ">
"3605
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 3605: __asm("TXSTA equ 019Eh");
[; <" TXSTA equ 019Eh ;# ">
"3667
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 3667: __asm("BAUDCON equ 019Fh");
[; <" BAUDCON equ 019Fh ;# ">
"3719
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 3719: __asm("WPUA equ 020Ch");
[; <" WPUA equ 020Ch ;# ">
"3777
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 3777: __asm("WPUC equ 020Eh");
[; <" WPUC equ 020Eh ;# ">
"3835
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 3835: __asm("SSP1BUF equ 0211h");
[; <" SSP1BUF equ 0211h ;# ">
"3840
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 3840: __asm("SSPBUF equ 0211h");
[; <" SSPBUF equ 0211h ;# ">
"3873
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 3873: __asm("SSP1ADD equ 0212h");
[; <" SSP1ADD equ 0212h ;# ">
"3878
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 3878: __asm("SSPADD equ 0212h");
[; <" SSPADD equ 0212h ;# ">
"3911
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 3911: __asm("SSP1MSK equ 0213h");
[; <" SSP1MSK equ 0213h ;# ">
"3916
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 3916: __asm("SSPMSK equ 0213h");
[; <" SSPMSK equ 0213h ;# ">
"3949
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 3949: __asm("SSP1STAT equ 0214h");
[; <" SSP1STAT equ 0214h ;# ">
"3954
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 3954: __asm("SSPSTAT equ 0214h");
[; <" SSPSTAT equ 0214h ;# ">
"4071
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 4071: __asm("SSP1CON1 equ 0215h");
[; <" SSP1CON1 equ 0215h ;# ">
"4076
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 4076: __asm("SSPCON1 equ 0215h");
[; <" SSPCON1 equ 0215h ;# ">
"4080
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 4080: __asm("SSPCON equ 0215h");
[; <" SSPCON equ 0215h ;# ">
"4275
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 4275: __asm("SSP1CON2 equ 0216h");
[; <" SSP1CON2 equ 0216h ;# ">
"4280
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 4280: __asm("SSPCON2 equ 0216h");
[; <" SSPCON2 equ 0216h ;# ">
"4397
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 4397: __asm("SSP1CON3 equ 0217h");
[; <" SSP1CON3 equ 0217h ;# ">
"4402
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 4402: __asm("SSPCON3 equ 0217h");
[; <" SSPCON3 equ 0217h ;# ">
"4519
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 4519: __asm("CCPR1 equ 0291h");
[; <" CCPR1 equ 0291h ;# ">
"4526
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 4526: __asm("CCPR1L equ 0291h");
[; <" CCPR1L equ 0291h ;# ">
"4546
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 4546: __asm("CCPR1H equ 0292h");
[; <" CCPR1H equ 0292h ;# ">
"4566
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 4566: __asm("CCP1CON equ 0293h");
[; <" CCP1CON equ 0293h ;# ">
"4648
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 4648: __asm("PWM1CON equ 0294h");
[; <" PWM1CON equ 0294h ;# ">
"4718
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 4718: __asm("CCP1AS equ 0295h");
[; <" CCP1AS equ 0295h ;# ">
"4723
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 4723: __asm("ECCP1AS equ 0295h");
[; <" ECCP1AS equ 0295h ;# ">
"4880
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 4880: __asm("PSTR1CON equ 0296h");
[; <" PSTR1CON equ 0296h ;# ">
"4924
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 4924: __asm("IOCAP equ 0391h");
[; <" IOCAP equ 0391h ;# ">
"4982
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 4982: __asm("IOCAN equ 0392h");
[; <" IOCAN equ 0392h ;# ">
"5040
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 5040: __asm("IOCAF equ 0393h");
[; <" IOCAF equ 0393h ;# ">
"5098
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 5098: __asm("CLKRCON equ 039Ah");
[; <" CLKRCON equ 039Ah ;# ">
"5174
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 5174: __asm("MDCON equ 039Ch");
[; <" MDCON equ 039Ch ;# ">
"5225
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 5225: __asm("MDSRC equ 039Dh");
[; <" MDSRC equ 039Dh ;# ">
"5278
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 5278: __asm("MDCARL equ 039Eh");
[; <" MDCARL equ 039Eh ;# ">
"5343
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 5343: __asm("MDCARH equ 039Fh");
[; <" MDCARH equ 039Fh ;# ">
"5408
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 5408: __asm("STATUS_SHAD equ 0FE4h");
[; <" STATUS_SHAD equ 0FE4h ;# ">
"5440
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 5440: __asm("WREG_SHAD equ 0FE5h");
[; <" WREG_SHAD equ 0FE5h ;# ">
"5460
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 5460: __asm("BSR_SHAD equ 0FE6h");
[; <" BSR_SHAD equ 0FE6h ;# ">
"5480
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 5480: __asm("PCLATH_SHAD equ 0FE7h");
[; <" PCLATH_SHAD equ 0FE7h ;# ">
"5500
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 5500: __asm("FSR0L_SHAD equ 0FE8h");
[; <" FSR0L_SHAD equ 0FE8h ;# ">
"5520
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 5520: __asm("FSR0H_SHAD equ 0FE9h");
[; <" FSR0H_SHAD equ 0FE9h ;# ">
"5540
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 5540: __asm("FSR1L_SHAD equ 0FEAh");
[; <" FSR1L_SHAD equ 0FEAh ;# ">
"5560
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 5560: __asm("FSR1H_SHAD equ 0FEBh");
[; <" FSR1H_SHAD equ 0FEBh ;# ">
"5580
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 5580: __asm("STKPTR equ 0FEDh");
[; <" STKPTR equ 0FEDh ;# ">
"5600
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 5600: __asm("TOSL equ 0FEEh");
[; <" TOSL equ 0FEEh ;# ">
"5620
[; ;/home/saul/.mchp_packs/Microchip/PIC12-16F1xxx_DFP/1.0.42/xc8/pic/include/proc/pic16lf1823.h: 5620: __asm("TOSH equ 0FEFh");
[; <" TOSH equ 0FEFh ;# ">
"118 ./bio3.h
[; ;./bio3.h: 118: const unsigned char gains[8] = {
[v _gains `Cuc ~T0 @X0 -> 8 `i e ]
[i _gains
:U ..
-> -> 4 `i `uc
-> -> 5 `i `uc
-> -> 7 `i `uc
-> -> 3 `i `uc
-> -> 35 `i `uc
-> -> 99 `i `uc
-> -> 107 `i `uc
-> -> 123 `i `uc
..
]
"154
[; ;./bio3.h: 154: const unsigned char freqs[11] = {
[v _freqs `Cuc ~T0 @X0 -> 11 `i e ]
[i _freqs
:U ..
-> -> 0 `i `uc
-> -> 1 `i `uc
-> -> 2 `i `uc
-> -> 3 `i `uc
-> -> 4 `i `uc
-> -> 5 `i `uc
-> -> 6 `i `uc
-> -> 7 `i `uc
-> -> 8 `i `uc
-> -> 9 `i `uc
-> -> 10 `i `uc
..
]
"258
[; ;./bio3.h: 258: const unsigned long filt[11] = {
[v _filt `Cul ~T0 @X0 -> 11 `i e ]
[i _filt
:U ..
-> -> -> 16583 `i `l `ul
-> -> -> 16591 `i `l `ul
-> -> -> 16495 `i `l `ul
-> -> -> 16447 `i `l `ul
-> -> 35087 `ui `ul
-> -> 34831 `ui `ul
-> -> 41999 `ui `ul
-> -> 67855 `l `ul
-> -> 67599 `l `ul
-> -> 74767 `l `ul
-> -> 78351 `l `ul
..
]
"6 comm.c
[; ;comm.c: 6: volatile unsigned char mess_rec[10];
[v _mess_rec `Vuc ~T0 @X0 -> 10 `i e ]
"7
[; ;comm.c: 7: volatile unsigned char mess_rec_size;
[v _mess_rec_size `Vuc ~T0 @X0 1 e ]
"11
[; ;comm.c: 11: void mess_handler()
[v _mess_handler `(v ~T0 @X0 1 ef ]
"12
[; ;comm.c: 12: {
{
[e :U _mess_handler ]
[f ]
"16
[; ;comm.c: 16:     switch (mess_rec[0]) {
[e $U 309  ]
{
"17
[; ;comm.c: 17:         case 't':
[e :U 310 ]
"18
[; ;comm.c: 18:             lputs_ISR(mess_rec,mess_rec_size);
[e ( _lputs_ISR (2 , -> &U _mess_rec `*uc _mess_rec_size ]
"19
[; ;comm.c: 19:             break;
[e $U 308  ]
"21
[; ;comm.c: 21:         case 'f':
[e :U 311 ]
"22
[; ;comm.c: 22:             sweep();
[e ( _sweep ..  ]
"23
[; ;comm.c: 23:             break;
[e $U 308  ]
"25
[; ;comm.c: 25:         case 'c':
[e :U 312 ]
"26
[; ;comm.c: 26:             config_ASIC();
[e ( _config_ASIC ..  ]
"27
[; ;comm.c: 27:             break;
[e $U 308  ]
"29
[; ;comm.c: 29:         case 'm':
[e :U 313 ]
"30
[; ;comm.c: 30:             read_ADC_channels();
[e ( _read_ADC_channels ..  ]
"31
[; ;comm.c: 31:             break;
[e $U 308  ]
"33
[; ;comm.c: 33:         case 'z':
[e :U 314 ]
"34
[; ;comm.c: 34:             measure_Impedance();
[e ( _measure_Impedance ..  ]
"35
[; ;comm.c: 35:             break;
[e $U 308  ]
"37
[; ;comm.c: 37:         case 'y':
[e :U 315 ]
"38
[; ;comm.c: 38:             measure_Impedance_no_offset();
[e ( _measure_Impedance_no_offset ..  ]
"39
[; ;comm.c: 39:             break;
[e $U 308  ]
"41
[; ;comm.c: 41:         case 'o':
[e :U 316 ]
"42
[; ;comm.c: 42:             measure_Offset();
[e ( _measure_Offset ..  ]
"43
[; ;comm.c: 43:             break;
[e $U 308  ]
"45
[; ;comm.c: 45:         case 's':
[e :U 317 ]
"46
[; ;comm.c: 46:             measure_Impedance_SE();
[e ( _measure_Impedance_SE ..  ]
"47
[; ;comm.c: 47:             break;
[e $U 308  ]
"50
[; ;comm.c: 50:         case '&':
[e :U 318 ]
"51
[; ;comm.c: 51:             calibrate_reader();
[e ( _calibrate_reader ..  ]
"52
[; ;comm.c: 52:             break;
[e $U 308  ]
"56
[; ;comm.c: 56:         default:
[e :U 319 ]
"57
[; ;comm.c: 57:             break;
[e $U 308  ]
"58
[; ;comm.c: 58:     }
}
[e $U 308  ]
[e :U 309 ]
[e [\ -> *U + &U _mess_rec * -> -> -> 0 `i `ui `ux -> -> # *U &U _mess_rec `ui `ux `i , $ -> -> 116 `ui `i 310
 , $ -> -> 102 `ui `i 311
 , $ -> -> 99 `ui `i 312
 , $ -> -> 109 `ui `i 313
 , $ -> -> 122 `ui `i 314
 , $ -> -> 121 `ui `i 315
 , $ -> -> 111 `ui `i 316
 , $ -> -> 115 `ui `i 317
 , $ -> -> 38 `ui `i 318
 319 ]
[e :U 308 ]
"59
[; ;comm.c: 59: }
[e :UE 307 ]
}
"61
[; ;comm.c: 61: void config_ASIC()
[v _config_ASIC `(v ~T0 @X0 1 ef ]
"62
[; ;comm.c: 62: {
{
[e :U _config_ASIC ]
[f ]
"64
[; ;comm.c: 64:     BIO3 asic;
[v _asic `S298 ~T0 @X0 1 a ]
"70
[; ;comm.c: 70:     asic.data[0] = mess_rec[1];
[e = *U + &U . _asic 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _asic 1 `ui `ux *U + &U _mess_rec * -> -> -> 1 `i `ui `ux -> -> # *U &U _mess_rec `ui `ux ]
"71
[; ;comm.c: 71:     asic.data[1] = mess_rec[2];
[e = *U + &U . _asic 1 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _asic 1 `ui `ux *U + &U _mess_rec * -> -> -> 2 `i `ui `ux -> -> # *U &U _mess_rec `ui `ux ]
"73
[; ;comm.c: 73:     lputs_ISR(mess_rec,mess_rec_size);
[e ( _lputs_ISR (2 , -> &U _mess_rec `*uc _mess_rec_size ]
"75
[; ;comm.c: 75:     config(asic);
[e ( _config (1 _asic ]
"89
[; ;comm.c: 89: }
[e :UE 320 ]
}
"91
[; ;comm.c: 91: void read_ADC_channels()
[v _read_ADC_channels `(v ~T0 @X0 1 ef ]
"92
[; ;comm.c: 92: {
{
[e :U _read_ADC_channels ]
[f ]
"93
[; ;comm.c: 93:      unsigned char aux[7];
[v _aux `uc ~T0 @X0 -> 7 `i a ]
"94
[; ;comm.c: 94:      unsigned short value1,value2,value3;
[v _value1 `us ~T0 @X0 1 a ]
[v _value2 `us ~T0 @X0 1 a ]
[v _value3 `us ~T0 @X0 1 a ]
"97
[; ;comm.c: 97:      value1 = ADC_2();
[e = _value1 ( _ADC_2 ..  ]
"99
[; ;comm.c: 99:      value2 = ADC_4();
[e = _value2 ( _ADC_4 ..  ]
"101
[; ;comm.c: 101:      value3 = ADC_5();
[e = _value3 ( _ADC_5 ..  ]
"102
[; ;comm.c: 102:      { ADCON0 = 0b00100100;};
{
[e = _ADCON0 -> -> 36 `i `uc ]
}
"104
[; ;comm.c: 104:      aux[0] = 'm';
[e = *U + &U _aux * -> -> -> 0 `i `ui `ux -> -> # *U &U _aux `ui `ux -> -> 109 `ui `uc ]
"105
[; ;comm.c: 105:      aux[1] = (unsigned char)(value1 & 0xff);
[e = *U + &U _aux * -> -> -> 1 `i `ui `ux -> -> # *U &U _aux `ui `ux -> & -> _value1 `ui -> -> 255 `i `ui `uc ]
"106
[; ;comm.c: 106:      aux[2] = (unsigned char)((value1 >> 8) & 0xff);
[e = *U + &U _aux * -> -> -> 2 `i `ui `ux -> -> # *U &U _aux `ui `ux -> & >> -> _value1 `ui -> 8 `i -> -> 255 `i `ui `uc ]
"107
[; ;comm.c: 107:      aux[3] = (unsigned char)(value2 & 0xff);
[e = *U + &U _aux * -> -> -> 3 `i `ui `ux -> -> # *U &U _aux `ui `ux -> & -> _value2 `ui -> -> 255 `i `ui `uc ]
"108
[; ;comm.c: 108:      aux[4] = (unsigned char)((value2 >> 8) & 0xff);
[e = *U + &U _aux * -> -> -> 4 `i `ui `ux -> -> # *U &U _aux `ui `ux -> & >> -> _value2 `ui -> 8 `i -> -> 255 `i `ui `uc ]
"109
[; ;comm.c: 109:      aux[5] = (unsigned char)(value3 & 0xff);
[e = *U + &U _aux * -> -> -> 5 `i `ui `ux -> -> # *U &U _aux `ui `ux -> & -> _value3 `ui -> -> 255 `i `ui `uc ]
"110
[; ;comm.c: 110:      aux[6] = (unsigned char)((value3 >> 8) & 0xff);
[e = *U + &U _aux * -> -> -> 6 `i `ui `ux -> -> # *U &U _aux `ui `ux -> & >> -> _value3 `ui -> 8 `i -> -> 255 `i `ui `uc ]
"112
[; ;comm.c: 112:       lputs_ISR(aux,7);
[e ( _lputs_ISR (2 , &U _aux -> -> 7 `i `uc ]
"113
[; ;comm.c: 113: }
[e :UE 321 ]
}
"115
[; ;comm.c: 115: void measure_Impedance()
[v _measure_Impedance `(v ~T0 @X0 1 ef ]
"116
[; ;comm.c: 116: {
{
[e :U _measure_Impedance ]
[f ]
"117
[; ;comm.c: 117:     unsigned char aux[13];
[v _aux `uc ~T0 @X0 -> 13 `i a ]
"118
[; ;comm.c: 118:     unsigned short value1,value2,value3;
[v _value1 `us ~T0 @X0 1 a ]
[v _value2 `us ~T0 @X0 1 a ]
[v _value3 `us ~T0 @X0 1 a ]
"121
[; ;comm.c: 121:         BIO3 asic;
[v _asic `S298 ~T0 @X0 1 a ]
"127
[; ;comm.c: 127:     aux[0] = 'z';
[e = *U + &U _aux * -> -> -> 0 `i `ui `ux -> -> # *U &U _aux `ui `ux -> -> 122 `ui `uc ]
"131
[; ;comm.c: 131:     asic.data[0] = (unsigned short)(mess_rec[1]);
[e = *U + &U . _asic 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _asic 1 `ui `ux -> -> *U + &U _mess_rec * -> -> -> 1 `i `ui `ux -> -> # *U &U _mess_rec `ui `ux `us `uc ]
"132
[; ;comm.c: 132:     asic.data[1] = (unsigned short)(mess_rec[2]);
[e = *U + &U . _asic 1 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _asic 1 `ui `ux -> -> *U + &U _mess_rec * -> -> -> 2 `i `ui `ux -> -> # *U &U _mess_rec `ui `ux `us `uc ]
"135
[; ;comm.c: 135:     asic.data_bits.CE = 0;
[e = . . _asic 2 6 -> -> 0 `i `uc ]
"136
[; ;comm.c: 136:     config(asic);
[e ( _config (1 _asic ]
"149
[; ;comm.c: 149:     _delay((unsigned long)((20)*(500000/4000.0)));
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 500000 `l `d .4000.0 `ul ]
"151
[; ;comm.c: 151:     value1 = ADC_2();
[e = _value1 ( _ADC_2 ..  ]
"152
[; ;comm.c: 152:     value2 = ADC_4();
[e = _value2 ( _ADC_4 ..  ]
"154
[; ;comm.c: 154:     aux[1] = (unsigned char)(value1 & 0xff);
[e = *U + &U _aux * -> -> -> 1 `i `ui `ux -> -> # *U &U _aux `ui `ux -> & -> _value1 `ui -> -> 255 `i `ui `uc ]
"155
[; ;comm.c: 155:     aux[2] = (unsigned char)((value1 >> 8) & 0xff);
[e = *U + &U _aux * -> -> -> 2 `i `ui `ux -> -> # *U &U _aux `ui `ux -> & >> -> _value1 `ui -> 8 `i -> -> 255 `i `ui `uc ]
"156
[; ;comm.c: 156:     aux[3] = (unsigned char)(value2 & 0xff);
[e = *U + &U _aux * -> -> -> 3 `i `ui `ux -> -> # *U &U _aux `ui `ux -> & -> _value2 `ui -> -> 255 `i `ui `uc ]
"157
[; ;comm.c: 157:     aux[4] = (unsigned char)((value2 >> 8) & 0xff);
[e = *U + &U _aux * -> -> -> 4 `i `ui `ux -> -> # *U &U _aux `ui `ux -> & >> -> _value2 `ui -> 8 `i -> -> 255 `i `ui `uc ]
"160
[; ;comm.c: 160:      asic.data_bits.CE = 1;
[e = . . _asic 2 6 -> -> 1 `i `uc ]
"161
[; ;comm.c: 161:      asic.data_bits.IQ = 0;
[e = . . _asic 2 11 -> -> 0 `i `uc ]
"164
[; ;comm.c: 164:      config(asic);
[e ( _config (1 _asic ]
"168
[; ;comm.c: 168:     _delay((unsigned long)((20)*(500000/4000.0)));
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 500000 `l `d .4000.0 `ul ]
"170
[; ;comm.c: 170:     value1 = ADC_2();
[e = _value1 ( _ADC_2 ..  ]
"171
[; ;comm.c: 171:     value2 = ADC_4();
[e = _value2 ( _ADC_4 ..  ]
"173
[; ;comm.c: 173:     aux[5] = (unsigned char)(value1 & 0xff);
[e = *U + &U _aux * -> -> -> 5 `i `ui `ux -> -> # *U &U _aux `ui `ux -> & -> _value1 `ui -> -> 255 `i `ui `uc ]
"174
[; ;comm.c: 174:     aux[6] = (unsigned char)((value1 >> 8) & 0xff);
[e = *U + &U _aux * -> -> -> 6 `i `ui `ux -> -> # *U &U _aux `ui `ux -> & >> -> _value1 `ui -> 8 `i -> -> 255 `i `ui `uc ]
"175
[; ;comm.c: 175:     aux[7] = (unsigned char)(value2 & 0xff);
[e = *U + &U _aux * -> -> -> 7 `i `ui `ux -> -> # *U &U _aux `ui `ux -> & -> _value2 `ui -> -> 255 `i `ui `uc ]
"176
[; ;comm.c: 176:     aux[8] = (unsigned char)((value2 >> 8) & 0xff);
[e = *U + &U _aux * -> -> -> 8 `i `ui `ux -> -> # *U &U _aux `ui `ux -> & >> -> _value2 `ui -> 8 `i -> -> 255 `i `ui `uc ]
"179
[; ;comm.c: 179:     asic.data_bits.IQ = 1;
[e = . . _asic 2 11 -> -> 1 `i `uc ]
"182
[; ;comm.c: 182:      config(asic);
[e ( _config (1 _asic ]
"186
[; ;comm.c: 186:     _delay((unsigned long)((20)*(500000/4000.0)));
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 500000 `l `d .4000.0 `ul ]
"188
[; ;comm.c: 188:     value1 = ADC_2();
[e = _value1 ( _ADC_2 ..  ]
"189
[; ;comm.c: 189:     value2 = ADC_4();
[e = _value2 ( _ADC_4 ..  ]
"191
[; ;comm.c: 191:     aux[9] = (unsigned char)(value1 & 0xff);
[e = *U + &U _aux * -> -> -> 9 `i `ui `ux -> -> # *U &U _aux `ui `ux -> & -> _value1 `ui -> -> 255 `i `ui `uc ]
"192
[; ;comm.c: 192:     aux[10] = (unsigned char)((value1 >> 8) & 0xff);
[e = *U + &U _aux * -> -> -> 10 `i `ui `ux -> -> # *U &U _aux `ui `ux -> & >> -> _value1 `ui -> 8 `i -> -> 255 `i `ui `uc ]
"193
[; ;comm.c: 193:     aux[11] = (unsigned char)(value2 & 0xff);
[e = *U + &U _aux * -> -> -> 11 `i `ui `ux -> -> # *U &U _aux `ui `ux -> & -> _value2 `ui -> -> 255 `i `ui `uc ]
"194
[; ;comm.c: 194:     aux[12] = (unsigned char)((value2 >> 8) & 0xff);
[e = *U + &U _aux * -> -> -> 12 `i `ui `ux -> -> # *U &U _aux `ui `ux -> & >> -> _value2 `ui -> 8 `i -> -> 255 `i `ui `uc ]
"197
[; ;comm.c: 197:     lputs_ISR(aux,13);
[e ( _lputs_ISR (2 , &U _aux -> -> 13 `i `uc ]
"198
[; ;comm.c: 198: }
[e :UE 322 ]
}
"200
[; ;comm.c: 200: void measure_Impedance_no_offset()
[v _measure_Impedance_no_offset `(v ~T0 @X0 1 ef ]
"201
[; ;comm.c: 201: {
{
[e :U _measure_Impedance_no_offset ]
[f ]
"202
[; ;comm.c: 202:  unsigned char aux[13];
[v _aux `uc ~T0 @X0 -> 13 `i a ]
"203
[; ;comm.c: 203:     unsigned short value1,value2,value3;
[v _value1 `us ~T0 @X0 1 a ]
[v _value2 `us ~T0 @X0 1 a ]
[v _value3 `us ~T0 @X0 1 a ]
"206
[; ;comm.c: 206:         BIO3 asic;
[v _asic `S298 ~T0 @X0 1 a ]
"211
[; ;comm.c: 211:     aux[0] = 'y';
[e = *U + &U _aux * -> -> -> 0 `i `ui `ux -> -> # *U &U _aux `ui `ux -> -> 121 `ui `uc ]
"214
[; ;comm.c: 214:         asic.data[0] = (unsigned short)(mess_rec[1]);
[e = *U + &U . _asic 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _asic 1 `ui `ux -> -> *U + &U _mess_rec * -> -> -> 1 `i `ui `ux -> -> # *U &U _mess_rec `ui `ux `us `uc ]
"215
[; ;comm.c: 215:         asic.data[1] = (unsigned short)(mess_rec[2]);
[e = *U + &U . _asic 1 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _asic 1 `ui `ux -> -> *U + &U _mess_rec * -> -> -> 2 `i `ui `ux -> -> # *U &U _mess_rec `ui `ux `us `uc ]
"225
[; ;comm.c: 225:      asic.data_bits.CE = 1;
[e = . . _asic 2 6 -> -> 1 `i `uc ]
"226
[; ;comm.c: 226:      asic.data_bits.IQ = 0;
[e = . . _asic 2 11 -> -> 0 `i `uc ]
"229
[; ;comm.c: 229:         config(asic);
[e ( _config (1 _asic ]
"233
[; ;comm.c: 233:     _delay((unsigned long)((20)*(500000/4000.0)));
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 500000 `l `d .4000.0 `ul ]
"235
[; ;comm.c: 235:     value1 = ADC_2();
[e = _value1 ( _ADC_2 ..  ]
"236
[; ;comm.c: 236:     value2 = ADC_4();
[e = _value2 ( _ADC_4 ..  ]
"238
[; ;comm.c: 238:     aux[1] = (unsigned char)(value1 & 0xff);
[e = *U + &U _aux * -> -> -> 1 `i `ui `ux -> -> # *U &U _aux `ui `ux -> & -> _value1 `ui -> -> 255 `i `ui `uc ]
"239
[; ;comm.c: 239:     aux[2] = (unsigned char)((value1 >> 8) & 0xff);
[e = *U + &U _aux * -> -> -> 2 `i `ui `ux -> -> # *U &U _aux `ui `ux -> & >> -> _value1 `ui -> 8 `i -> -> 255 `i `ui `uc ]
"240
[; ;comm.c: 240:     aux[3] = (unsigned char)(value2 & 0xff);
[e = *U + &U _aux * -> -> -> 3 `i `ui `ux -> -> # *U &U _aux `ui `ux -> & -> _value2 `ui -> -> 255 `i `ui `uc ]
"241
[; ;comm.c: 241:     aux[4] = (unsigned char)((value2 >> 8) & 0xff);
[e = *U + &U _aux * -> -> -> 4 `i `ui `ux -> -> # *U &U _aux `ui `ux -> & >> -> _value2 `ui -> 8 `i -> -> 255 `i `ui `uc ]
"244
[; ;comm.c: 244:     asic.data_bits.IQ = 1;
[e = . . _asic 2 11 -> -> 1 `i `uc ]
"247
[; ;comm.c: 247:         config(asic);
[e ( _config (1 _asic ]
"251
[; ;comm.c: 251:     _delay((unsigned long)((20)*(500000/4000.0)));
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 500000 `l `d .4000.0 `ul ]
"253
[; ;comm.c: 253:     value1 = ADC_2();
[e = _value1 ( _ADC_2 ..  ]
"254
[; ;comm.c: 254:     value2 = ADC_4();
[e = _value2 ( _ADC_4 ..  ]
"256
[; ;comm.c: 256:     aux[5] = (unsigned char)(value1 & 0xff);
[e = *U + &U _aux * -> -> -> 5 `i `ui `ux -> -> # *U &U _aux `ui `ux -> & -> _value1 `ui -> -> 255 `i `ui `uc ]
"257
[; ;comm.c: 257:     aux[6] = (unsigned char)((value1 >> 8) & 0xff);
[e = *U + &U _aux * -> -> -> 6 `i `ui `ux -> -> # *U &U _aux `ui `ux -> & >> -> _value1 `ui -> 8 `i -> -> 255 `i `ui `uc ]
"258
[; ;comm.c: 258:     aux[7] = (unsigned char)(value2 & 0xff);
[e = *U + &U _aux * -> -> -> 7 `i `ui `ux -> -> # *U &U _aux `ui `ux -> & -> _value2 `ui -> -> 255 `i `ui `uc ]
"259
[; ;comm.c: 259:     aux[8] = (unsigned char)((value2 >> 8) & 0xff);
[e = *U + &U _aux * -> -> -> 8 `i `ui `ux -> -> # *U &U _aux `ui `ux -> & >> -> _value2 `ui -> 8 `i -> -> 255 `i `ui `uc ]
"262
[; ;comm.c: 262:     lputs_ISR(aux,9);
[e ( _lputs_ISR (2 , &U _aux -> -> 9 `i `uc ]
"263
[; ;comm.c: 263: }
[e :UE 323 ]
}
"265
[; ;comm.c: 265: void measure_Offset()
[v _measure_Offset `(v ~T0 @X0 1 ef ]
"266
[; ;comm.c: 266: {
{
[e :U _measure_Offset ]
[f ]
"267
[; ;comm.c: 267:     unsigned char aux[5];
[v _aux `uc ~T0 @X0 -> 5 `i a ]
"268
[; ;comm.c: 268:     unsigned short value1,value2;
[v _value1 `us ~T0 @X0 1 a ]
[v _value2 `us ~T0 @X0 1 a ]
"271
[; ;comm.c: 271:         BIO3 asic;
[v _asic `S298 ~T0 @X0 1 a ]
"277
[; ;comm.c: 277:     aux[0] = 'o';
[e = *U + &U _aux * -> -> -> 0 `i `ui `ux -> -> # *U &U _aux `ui `ux -> -> 111 `ui `uc ]
"280
[; ;comm.c: 280:     asic.data[0] = (unsigned short)(mess_rec[1]);
[e = *U + &U . _asic 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _asic 1 `ui `ux -> -> *U + &U _mess_rec * -> -> -> 1 `i `ui `ux -> -> # *U &U _mess_rec `ui `ux `us `uc ]
"281
[; ;comm.c: 281:     asic.data[1] = (unsigned short)(mess_rec[2]);
[e = *U + &U . _asic 1 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _asic 1 `ui `ux -> -> *U + &U _mess_rec * -> -> -> 2 `i `ui `ux -> -> # *U &U _mess_rec `ui `ux `us `uc ]
"284
[; ;comm.c: 284:     asic.data_bits.CE = 0;
[e = . . _asic 2 6 -> -> 0 `i `uc ]
"285
[; ;comm.c: 285:     config(asic);
[e ( _config (1 _asic ]
"298
[; ;comm.c: 298:     _delay((unsigned long)((20)*(500000/4000.0)));
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 500000 `l `d .4000.0 `ul ]
"300
[; ;comm.c: 300:     value1 = ADC_2();
[e = _value1 ( _ADC_2 ..  ]
"301
[; ;comm.c: 301:     value2 = ADC_4();
[e = _value2 ( _ADC_4 ..  ]
"303
[; ;comm.c: 303:     aux[1] = (unsigned char)(value1 & 0xff);
[e = *U + &U _aux * -> -> -> 1 `i `ui `ux -> -> # *U &U _aux `ui `ux -> & -> _value1 `ui -> -> 255 `i `ui `uc ]
"304
[; ;comm.c: 304:     aux[2] = (unsigned char)((value1 >> 8) & 0xff);
[e = *U + &U _aux * -> -> -> 2 `i `ui `ux -> -> # *U &U _aux `ui `ux -> & >> -> _value1 `ui -> 8 `i -> -> 255 `i `ui `uc ]
"305
[; ;comm.c: 305:     aux[3] = (unsigned char)(value2 & 0xff);
[e = *U + &U _aux * -> -> -> 3 `i `ui `ux -> -> # *U &U _aux `ui `ux -> & -> _value2 `ui -> -> 255 `i `ui `uc ]
"306
[; ;comm.c: 306:     aux[4] = (unsigned char)((value2 >> 8) & 0xff);
[e = *U + &U _aux * -> -> -> 4 `i `ui `ux -> -> # *U &U _aux `ui `ux -> & >> -> _value2 `ui -> 8 `i -> -> 255 `i `ui `uc ]
"309
[; ;comm.c: 309:     lputs_ISR(aux,5);
[e ( _lputs_ISR (2 , &U _aux -> -> 5 `i `uc ]
"311
[; ;comm.c: 311: }
[e :UE 324 ]
}
"314
[; ;comm.c: 314: void measure_Impedance_SE()
[v _measure_Impedance_SE `(v ~T0 @X0 1 ef ]
"315
[; ;comm.c: 315: {
{
[e :U _measure_Impedance_SE ]
[f ]
"316
[; ;comm.c: 316:      unsigned char aux[8], check;
[v _aux `uc ~T0 @X0 -> 8 `i a ]
[v _check `uc ~T0 @X0 1 a ]
"318
[; ;comm.c: 318:      unsigned short value1;
[v _value1 `us ~T0 @X0 1 a ]
"321
[; ;comm.c: 321:         BIO3 asic;
[v _asic `S298 ~T0 @X0 1 a ]
"328
[; ;comm.c: 328:         check = calculate_checksum(mess_rec,4);
[e = _check ( _calculate_checksum (2 , -> &U _mess_rec `*uc -> -> 4 `i `uc ]
"329
[; ;comm.c: 329:         if (check) {
[e $ ! != -> _check `i -> 0 `i 326  ]
{
"330
[; ;comm.c: 330:             aux[0] = 'e';
[e = *U + &U _aux * -> -> -> 0 `i `ui `ux -> -> # *U &U _aux `ui `ux -> -> 101 `ui `uc ]
"331
[; ;comm.c: 331:             lputs_ISR(aux,1);
[e ( _lputs_ISR (2 , &U _aux -> -> 1 `i `uc ]
"332
[; ;comm.c: 332:             return;
[e $UE 325  ]
"333
[; ;comm.c: 333:         }
}
[e :U 326 ]
"336
[; ;comm.c: 336:     aux[0] = 's';
[e = *U + &U _aux * -> -> -> 0 `i `ui `ux -> -> # *U &U _aux `ui `ux -> -> 115 `ui `uc ]
"339
[; ;comm.c: 339:     asic.data[0] = (unsigned short)(mess_rec[1]);
[e = *U + &U . _asic 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _asic 1 `ui `ux -> -> *U + &U _mess_rec * -> -> -> 1 `i `ui `ux -> -> # *U &U _mess_rec `ui `ux `us `uc ]
"340
[; ;comm.c: 340:     asic.data[1] = (unsigned short)(mess_rec[2]);
[e = *U + &U . _asic 1 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _asic 1 `ui `ux -> -> *U + &U _mess_rec * -> -> -> 2 `i `ui `ux -> -> # *U &U _mess_rec `ui `ux `us `uc ]
"343
[; ;comm.c: 343:     asic.data_bits.CE = 0;
[e = . . _asic 2 6 -> -> 0 `i `uc ]
"344
[; ;comm.c: 344:     config(asic);
[e ( _config (1 _asic ]
"357
[; ;comm.c: 357:     _delay((unsigned long)((20)*(500000/4000.0)));
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 500000 `l `d .4000.0 `ul ]
"359
[; ;comm.c: 359:     value1 = ADC_5();
[e = _value1 ( _ADC_5 ..  ]
"361
[; ;comm.c: 361:     aux[1] = (unsigned char)(value1 & 0xff);
[e = *U + &U _aux * -> -> -> 1 `i `ui `ux -> -> # *U &U _aux `ui `ux -> & -> _value1 `ui -> -> 255 `i `ui `uc ]
"362
[; ;comm.c: 362:     aux[2] = (unsigned char)((value1 >> 8) & 0xff);
[e = *U + &U _aux * -> -> -> 2 `i `ui `ux -> -> # *U &U _aux `ui `ux -> & >> -> _value1 `ui -> 8 `i -> -> 255 `i `ui `uc ]
"365
[; ;comm.c: 365:      asic.data_bits.CE = 1;
[e = . . _asic 2 6 -> -> 1 `i `uc ]
"366
[; ;comm.c: 366:      asic.data_bits.IQ = 0;
[e = . . _asic 2 11 -> -> 0 `i `uc ]
"369
[; ;comm.c: 369:      config(asic);
[e ( _config (1 _asic ]
"373
[; ;comm.c: 373:     _delay((unsigned long)((20)*(500000/4000.0)));
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 500000 `l `d .4000.0 `ul ]
"375
[; ;comm.c: 375:     value1 = ADC_5();
[e = _value1 ( _ADC_5 ..  ]
"377
[; ;comm.c: 377:     aux[3] = (unsigned char)(value1 & 0xff);
[e = *U + &U _aux * -> -> -> 3 `i `ui `ux -> -> # *U &U _aux `ui `ux -> & -> _value1 `ui -> -> 255 `i `ui `uc ]
"378
[; ;comm.c: 378:     aux[4] = (unsigned char)((value1 >> 8) & 0xff);
[e = *U + &U _aux * -> -> -> 4 `i `ui `ux -> -> # *U &U _aux `ui `ux -> & >> -> _value1 `ui -> 8 `i -> -> 255 `i `ui `uc ]
"381
[; ;comm.c: 381:     asic.data_bits.IQ = 1;
[e = . . _asic 2 11 -> -> 1 `i `uc ]
"384
[; ;comm.c: 384:      config(asic);
[e ( _config (1 _asic ]
"388
[; ;comm.c: 388:     _delay((unsigned long)((20)*(500000/4000.0)));
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 500000 `l `d .4000.0 `ul ]
"390
[; ;comm.c: 390:     value1 = ADC_5();
[e = _value1 ( _ADC_5 ..  ]
"392
[; ;comm.c: 392:     aux[5] = (unsigned char)(value1 & 0xff);
[e = *U + &U _aux * -> -> -> 5 `i `ui `ux -> -> # *U &U _aux `ui `ux -> & -> _value1 `ui -> -> 255 `i `ui `uc ]
"393
[; ;comm.c: 393:     aux[6] = (unsigned char)((value1 >> 8) & 0xff);
[e = *U + &U _aux * -> -> -> 6 `i `ui `ux -> -> # *U &U _aux `ui `ux -> & >> -> _value1 `ui -> 8 `i -> -> 255 `i `ui `uc ]
"397
[; ;comm.c: 397:     check = calculate_checksum(aux,7);
[e = _check ( _calculate_checksum (2 , &U _aux -> -> 7 `i `uc ]
"398
[; ;comm.c: 398:     aux[7] = check;
[e = *U + &U _aux * -> -> -> 7 `i `ui `ux -> -> # *U &U _aux `ui `ux _check ]
"399
[; ;comm.c: 399:     lputs_ISR(aux,8);
[e ( _lputs_ISR (2 , &U _aux -> -> 8 `i `uc ]
"405
[; ;comm.c: 405: }
[e :UE 325 ]
}
"407
[; ;comm.c: 407: unsigned char calculate_checksum(unsigned char* data, unsigned char num)
[v _calculate_checksum `(uc ~T0 @X0 1 ef2`*uc`uc ]
"408
[; ;comm.c: 408: {
{
[e :U _calculate_checksum ]
"407
[; ;comm.c: 407: unsigned char calculate_checksum(unsigned char* data, unsigned char num)
[v _data `*uc ~T0 @X0 1 r1 ]
[v _num `uc ~T0 @X0 1 r2 ]
"408
[; ;comm.c: 408: {
[f ]
"409
[; ;comm.c: 409:     unsigned char check, i;
[v _check `uc ~T0 @X0 1 a ]
[v _i `uc ~T0 @X0 1 a ]
"411
[; ;comm.c: 411:     check = 0;
[e = _check -> -> 0 `i `uc ]
"412
[; ;comm.c: 412:     for (i = 0; i < num; i++) {
{
[e = _i -> -> 0 `i `uc ]
[e $U 331  ]
[e :U 328 ]
{
"413
[; ;comm.c: 413:         check ^= data[i];
[e =^ _check -> *U + _data * -> _i `ux -> -> # *U _data `ui `ux `uc ]
"414
[; ;comm.c: 414:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e :U 331 ]
[e $ < -> _i `i -> _num `i 328  ]
[e :U 329 ]
}
"416
[; ;comm.c: 416:     return check;
[e ) _check ]
[e $UE 327  ]
"417
[; ;comm.c: 417: }
[e :UE 327 ]
}
"419
[; ;comm.c: 419: void calibrate_reader()
[v _calibrate_reader `(v ~T0 @X0 1 ef ]
"420
[; ;comm.c: 420: {
{
[e :U _calibrate_reader ]
[f ]
"421
[; ;comm.c: 421:     unsigned char aux[8];
[v _aux `uc ~T0 @X0 -> 8 `i a ]
"423
[; ;comm.c: 423:     aux[0] = 'h';
[e = *U + &U _aux * -> -> -> 0 `i `ui `ux -> -> # *U &U _aux `ui `ux -> -> 104 `ui `uc ]
"424
[; ;comm.c: 424:     aux[1] = 'o';
[e = *U + &U _aux * -> -> -> 1 `i `ui `ux -> -> # *U &U _aux `ui `ux -> -> 111 `ui `uc ]
"425
[; ;comm.c: 425:     aux[2] = 'l';
[e = *U + &U _aux * -> -> -> 2 `i `ui `ux -> -> # *U &U _aux `ui `ux -> -> 108 `ui `uc ]
"426
[; ;comm.c: 426:     aux[3] = 'a';
[e = *U + &U _aux * -> -> -> 3 `i `ui `ux -> -> # *U &U _aux `ui `ux -> -> 97 `ui `uc ]
"427
[; ;comm.c: 427:     aux[4] = 0x00;
[e = *U + &U _aux * -> -> -> 4 `i `ui `ux -> -> # *U &U _aux `ui `ux -> -> 0 `i `uc ]
"428
[; ;comm.c: 428:     aux[5] = 0xaa;
[e = *U + &U _aux * -> -> -> 5 `i `ui `ux -> -> # *U &U _aux `ui `ux -> -> 170 `i `uc ]
"429
[; ;comm.c: 429:     aux[6] = 0xfe;
[e = *U + &U _aux * -> -> -> 6 `i `ui `ux -> -> # *U &U _aux `ui `ux -> -> 254 `i `uc ]
"430
[; ;comm.c: 430:     aux[7] = '@';
[e = *U + &U _aux * -> -> -> 7 `i `ui `ux -> -> # *U &U _aux `ui `ux -> -> 64 `ui `uc ]
"432
[; ;comm.c: 432:     while (1) {
[e :U 334 ]
{
"433
[; ;comm.c: 433:         __asm("clrwdt");
[; <" clrwdt ;# ">
"434
[; ;comm.c: 434:          _delay((unsigned long)((250)*(500000/4000.0)));
[e ( __delay (1 -> * -> -> 250 `i `d / -> -> 500000 `l `d .4000.0 `ul ]
"435
[; ;comm.c: 435:          _delay((unsigned long)((250)*(500000/4000.0)));
[e ( __delay (1 -> * -> -> 250 `i `d / -> -> 500000 `l `d .4000.0 `ul ]
"436
[; ;comm.c: 436:          _delay((unsigned long)((250)*(500000/4000.0)));
[e ( __delay (1 -> * -> -> 250 `i `d / -> -> 500000 `l `d .4000.0 `ul ]
"437
[; ;comm.c: 437:          _delay((unsigned long)((250)*(500000/4000.0)));
[e ( __delay (1 -> * -> -> 250 `i `d / -> -> 500000 `l `d .4000.0 `ul ]
"438
[; ;comm.c: 438:          lputs_ISR(aux,8);
[e ( _lputs_ISR (2 , &U _aux -> -> 8 `i `uc ]
"440
[; ;comm.c: 440:     }
}
[e :U 333 ]
[e $U 334  ]
[e :U 335 ]
"442
[; ;comm.c: 442: }
[e :UE 332 ]
}
"444
[; ;comm.c: 444: void sweep()
[v _sweep `(v ~T0 @X0 1 ef ]
"445
[; ;comm.c: 445: {
{
[e :U _sweep ]
[f ]
"446
[; ;comm.c: 446:     unsigned char gain_index;
[v _gain_index `uc ~T0 @X0 1 a ]
"447
[; ;comm.c: 447:     unsigned char freq_index;
[v _freq_index `uc ~T0 @X0 1 a ]
"448
[; ;comm.c: 448:     unsigned char i, ret, count;
[v _i `uc ~T0 @X0 1 a ]
[v _ret `uc ~T0 @X0 1 a ]
[v _count `uc ~T0 @X0 1 a ]
"449
[; ;comm.c: 449:     short I,Q;
[v _I `s ~T0 @X0 1 a ]
[v _Q `s ~T0 @X0 1 a ]
"450
[; ;comm.c: 450:     unsigned char aux[7], check;
[v _aux `uc ~T0 @X0 -> 7 `i a ]
[v _check `uc ~T0 @X0 1 a ]
"453
[; ;comm.c: 453:     BIO3 asic;
[v _asic `S298 ~T0 @X0 1 a ]
"454
[; ;comm.c: 454:     asic.datashort = 0;
[e = . _asic 0 -> -> 0 `i `us ]
"465
[; ;comm.c: 465:     freq_index = 10;
[e = _freq_index -> -> 10 `i `uc ]
"466
[; ;comm.c: 466:     gain_index = 0;
[e = _gain_index -> -> 0 `i `uc ]
"467
[; ;comm.c: 467:     setGain(&asic,gain_index);
[e ( _setGain (2 , &U _asic _gain_index ]
"470
[; ;comm.c: 470:     for (i = 0; i < 11; i++) {
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 11 `i 337  ]
[e $U 338  ]
[e :U 337 ]
{
"473
[; ;comm.c: 473:         setFreq(&asic,freq_index);
[e ( _setFreq (2 , &U _asic _freq_index ]
"480
[; ;comm.c: 480:         count = 0;
[e = _count -> -> 0 `i `uc ]
"481
[; ;comm.c: 481:         ret = 0;
[e = _ret -> -> 0 `i `uc ]
"483
[; ;comm.c: 483:         do {
[e :U 342 ]
{
"485
[; ;comm.c: 485:             ret = measure(&I,&Q,asic);
[e = _ret ( _measure (3 , , &U _I &U _Q _asic ]
"487
[; ;comm.c: 487:             if (ret == 1) {
[e $ ! == -> _ret `i -> 1 `i 343  ]
{
"489
[; ;comm.c: 489:                 if (count == 2) break;
[e $ ! == -> _count `i -> 2 `i 344  ]
[e $U 341  ]
[e :U 344 ]
"490
[; ;comm.c: 490:                 count = ret;
[e = _count _ret ]
"493
[; ;comm.c: 493:                 if (gain_index < 7) {
[e $ ! < -> _gain_index `i -> 7 `i 345  ]
{
"497
[; ;comm.c: 497:                     gain_index++;
[e ++ _gain_index -> -> 1 `i `uc ]
"498
[; ;comm.c: 498:                     setGain(&asic,gain_index);
[e ( _setGain (2 , &U _asic _gain_index ]
"499
[; ;comm.c: 499:                 } else {
}
[e $U 346  ]
[e :U 345 ]
{
"500
[; ;comm.c: 500:                     break;
[e $U 341  ]
"501
[; ;comm.c: 501:                 }
}
[e :U 346 ]
"503
[; ;comm.c: 503:                 continue;
[e $U 340  ]
"505
[; ;comm.c: 505:             } else if (ret == 2) {
}
[e $U 347  ]
[e :U 343 ]
[e $ ! == -> _ret `i -> 2 `i 348  ]
{
"507
[; ;comm.c: 507:                 if (count == 1) break;
[e $ ! == -> _count `i -> 1 `i 349  ]
[e $U 341  ]
[e :U 349 ]
"508
[; ;comm.c: 508:                 count = ret;
[e = _count _ret ]
"510
[; ;comm.c: 510:                 if (gain_index > 0) {
[e $ ! > -> _gain_index `i -> 0 `i 350  ]
{
"511
[; ;comm.c: 511:                     gain_index--;
[e -- _gain_index -> -> 1 `i `uc ]
"512
[; ;comm.c: 512:                     setGain(&asic,gain_index);
[e ( _setGain (2 , &U _asic _gain_index ]
"513
[; ;comm.c: 513:                 } else {
}
[e $U 351  ]
[e :U 350 ]
{
"514
[; ;comm.c: 514:                     break;
[e $U 341  ]
"515
[; ;comm.c: 515:                 }
}
[e :U 351 ]
"517
[; ;comm.c: 517:                 continue;
[e $U 340  ]
"518
[; ;comm.c: 518:             }
}
[e :U 348 ]
[e :U 347 ]
"520
[; ;comm.c: 520:         } while (ret);
}
[e :U 340 ]
[e $ != -> _ret `i -> 0 `i 342  ]
[e :U 341 ]
"526
[; ;comm.c: 526:         ret = (freq_index << 4) & 0xf0;
[e = _ret -> & << -> _freq_index `i -> 4 `i -> 240 `i `uc ]
"527
[; ;comm.c: 527:         ret |= (gain_index & 0xff);
[e =| _ret -> & -> _gain_index `i -> 255 `i `uc ]
"529
[; ;comm.c: 529:         aux[0] = 'f';
[e = *U + &U _aux * -> -> -> 0 `i `ui `ux -> -> # *U &U _aux `ui `ux -> -> 102 `ui `uc ]
"530
[; ;comm.c: 530:         aux[1] = (unsigned char)(I & 0xff);
[e = *U + &U _aux * -> -> -> 1 `i `ui `ux -> -> # *U &U _aux `ui `ux -> & -> _I `i -> 255 `i `uc ]
"531
[; ;comm.c: 531:         aux[2] = (unsigned char)((I >> 8) & 0xff);
[e = *U + &U _aux * -> -> -> 2 `i `ui `ux -> -> # *U &U _aux `ui `ux -> & >> -> _I `i -> 8 `i -> 255 `i `uc ]
"532
[; ;comm.c: 532:         aux[3] = (unsigned char)(Q & 0xff);
[e = *U + &U _aux * -> -> -> 3 `i `ui `ux -> -> # *U &U _aux `ui `ux -> & -> _Q `i -> 255 `i `uc ]
"533
[; ;comm.c: 533:         aux[4] = (unsigned char)((Q >> 8) & 0xff);
[e = *U + &U _aux * -> -> -> 4 `i `ui `ux -> -> # *U &U _aux `ui `ux -> & >> -> _Q `i -> 8 `i -> 255 `i `uc ]
"534
[; ;comm.c: 534:         aux[5] = ret;
[e = *U + &U _aux * -> -> -> 5 `i `ui `ux -> -> # *U &U _aux `ui `ux _ret ]
"536
[; ;comm.c: 536:         check = calculate_checksum(aux,6);
[e = _check ( _calculate_checksum (2 , &U _aux -> -> 6 `i `uc ]
"537
[; ;comm.c: 537:         aux[6] = check;
[e = *U + &U _aux * -> -> -> 6 `i `ui `ux -> -> # *U &U _aux `ui `ux _check ]
"540
[; ;comm.c: 540:         { ADCON0 = 0b00100100;};
{
[e = _ADCON0 -> -> 36 `i `uc ]
}
"542
[; ;comm.c: 542:         lputs_ISR(aux,7);
[e ( _lputs_ISR (2 , &U _aux -> -> 7 `i `uc ]
"552
[; ;comm.c: 552:         freq_index--;
[e -- _freq_index -> -> 1 `i `uc ]
"553
[; ;comm.c: 553:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 11 `i 337  ]
[e :U 338 ]
}
"555
[; ;comm.c: 555: }
[e :UE 336 ]
}
"561
[; ;comm.c: 561: unsigned char measure(short* I, short* Q, BIO3 asic)
[v _measure `(uc ~T0 @X0 1 ef3`*s`*s`S298 ]
"565
[; ;comm.c: 565: {
{
[e :U _measure ]
"561
[; ;comm.c: 561: unsigned char measure(short* I, short* Q, BIO3 asic)
[v _I `*s ~T0 @X0 1 r1 ]
[v _Q `*s ~T0 @X0 1 r2 ]
[v _asic `S298 ~T0 @X0 1 r3 ]
"565
[; ;comm.c: 565: {
[f ]
"566
[; ;comm.c: 566:     unsigned short offset, value;
[v _offset `us ~T0 @X0 1 a ]
[v _value `us ~T0 @X0 1 a ]
"567
[; ;comm.c: 567:     short aux1,aux2;
[v _aux1 `s ~T0 @X0 1 a ]
[v _aux2 `s ~T0 @X0 1 a ]
"571
[; ;comm.c: 571:     asic.data_bits.CE = 0;
[e = . . _asic 2 6 -> -> 0 `i `uc ]
"572
[; ;comm.c: 572:     config(asic);
[e ( _config (1 _asic ]
"573
[; ;comm.c: 573:      _delay((unsigned long)((20)*(500000/4000.0)));
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 500000 `l `d .4000.0 `ul ]
"575
[; ;comm.c: 575:     offset = ADC_5();
[e = _offset ( _ADC_5 ..  ]
"578
[; ;comm.c: 578:     asic.data_bits.CE = 1;
[e = . . _asic 2 6 -> -> 1 `i `uc ]
"579
[; ;comm.c: 579:     asic.data_bits.IQ = 0;
[e = . . _asic 2 11 -> -> 0 `i `uc ]
"581
[; ;comm.c: 581:     config(asic);
[e ( _config (1 _asic ]
"582
[; ;comm.c: 582:      _delay((unsigned long)((20)*(500000/4000.0)));
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 500000 `l `d .4000.0 `ul ]
"584
[; ;comm.c: 584:     value = ADC_5();
[e = _value ( _ADC_5 ..  ]
"585
[; ;comm.c: 585:     *I = (value - offset);
[e = *U _I -> - -> _value `ui -> _offset `ui `s ]
"586
[; ;comm.c: 586:     aux1 = *I;
[e = _aux1 *U _I ]
"588
[; ;comm.c: 588:     if (aux1 < 0) {
[e $ ! < -> _aux1 `i -> 0 `i 353  ]
{
"589
[; ;comm.c: 589:         aux1 = -aux1;
[e = _aux1 -> -U -> _aux1 `i `s ]
"590
[; ;comm.c: 590:     }
}
[e :U 353 ]
"595
[; ;comm.c: 595:     asic.data_bits.IQ = 1;
[e = . . _asic 2 11 -> -> 1 `i `uc ]
"597
[; ;comm.c: 597:     config(asic);
[e ( _config (1 _asic ]
"598
[; ;comm.c: 598:      _delay((unsigned long)((20)*(500000/4000.0)));
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 500000 `l `d .4000.0 `ul ]
"600
[; ;comm.c: 600:     value = ADC_5();
[e = _value ( _ADC_5 ..  ]
"601
[; ;comm.c: 601:     *Q = (value - offset);
[e = *U _Q -> - -> _value `ui -> _offset `ui `s ]
"602
[; ;comm.c: 602:     aux2 = *Q;
[e = _aux2 *U _Q ]
"604
[; ;comm.c: 604:     if (aux2 < 0) {
[e $ ! < -> _aux2 `i -> 0 `i 354  ]
{
"605
[; ;comm.c: 605:         aux2 = -aux2;
[e = _aux2 -> -U -> _aux2 `i `s ]
"606
[; ;comm.c: 606:     }
}
[e :U 354 ]
"608
[; ;comm.c: 608:     if (aux2 > aux1) {
[e $ ! > -> _aux2 `i -> _aux1 `i 355  ]
{
"609
[; ;comm.c: 609:         aux1 = aux2;
[e = _aux1 _aux2 ]
"610
[; ;comm.c: 610:     }
}
[e :U 355 ]
"612
[; ;comm.c: 612:     if (aux1 > 370) {
[e $ ! > -> _aux1 `i -> 370 `i 356  ]
{
"613
[; ;comm.c: 613:         return 2;
[e ) -> -> 2 `i `uc ]
[e $UE 352  ]
"614
[; ;comm.c: 614:     } else if (aux1 < 86) {
}
[e $U 357  ]
[e :U 356 ]
[e $ ! < -> _aux1 `i -> 86 `i 358  ]
{
"615
[; ;comm.c: 615:         return 1;
[e ) -> -> 1 `i `uc ]
[e $UE 352  ]
"616
[; ;comm.c: 616:     }
}
[e :U 358 ]
[e :U 357 ]
"618
[; ;comm.c: 618:     return 0;
[e ) -> -> 0 `i `uc ]
[e $UE 352  ]
"619
[; ;comm.c: 619: }
[e :UE 352 ]
}
