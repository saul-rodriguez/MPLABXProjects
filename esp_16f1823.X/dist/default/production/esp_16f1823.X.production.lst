

Microchip Technology PIC PRO Macro Assembler V2.00 build -1524193055 
                                                                                               Tue Sep  4 20:54:03 2018

Microchip Technology Omniscient Code Generator v2.00 (PRO mode) build 20180527130849
     1                           	processor	16F1823
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	stringtext12,global,class=STRCODE,delta=2
    17                           	psect	stringtext13,global,class=STRCODE,delta=2
    18                           	psect	stringtext14,global,class=STRCODE,delta=2
    19                           	psect	stringtext15,global,class=STRCODE,delta=2
    20                           	psect	stringtext16,global,class=STRCODE,delta=2
    21                           	psect	stringtext17,global,class=STRCODE,delta=2
    22                           	psect	stringtext18,global,class=STRCODE,delta=2
    23                           	psect	stringtext19,global,class=STRCODE,delta=2
    24                           	psect	stringtext20,global,class=STRCODE,delta=2
    25                           	psect	stringtext21,global,class=STRCODE,delta=2
    26                           	psect	stringtext22,global,class=STRCODE,delta=2
    27                           	psect	stringtext23,global,class=STRCODE,delta=2
    28                           	psect	stringtext24,global,class=STRCODE,delta=2
    29                           	psect	stringtext25,global,class=STRCODE,delta=2
    30                           	psect	stringtext26,global,class=STRCODE,delta=2
    31                           	psect	cinit,global,class=CODE,merge=1,delta=2
    32                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    33                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    34                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    35                           	psect	clrtext,global,class=CODE,delta=2
    36                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    37                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    38                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    39                           	psect	text1,local,class=CODE,merge=1,delta=2
    40                           	psect	text2,local,class=CODE,merge=1,delta=2
    41                           	psect	text3,local,class=CODE,merge=1,delta=2
    42                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text7,local,class=CODE,merge=1,delta=2
    46                           	psect	text8,local,class=CODE,merge=1,delta=2
    47                           	psect	text9,local,class=CODE,merge=1,delta=2
    48                           	psect	text10,local,class=CODE,merge=1,delta=2
    49                           	psect	text11,local,class=CODE,merge=1,delta=2
    50                           	psect	text12,local,class=CODE,merge=1,delta=2
    51                           	psect	text13,local,class=CODE,merge=1,delta=2
    52                           	psect	text14,local,class=CODE,merge=1,delta=2
    53                           	psect	text15,local,class=CODE,merge=1,delta=2
    54                           	psect	text16,local,class=CODE,merge=1,delta=2
    55                           	psect	text17,local,class=CODE,merge=1,delta=2
    56                           	psect	text18,local,class=CODE,merge=1,delta=2
    57                           	psect	text19,local,class=CODE,merge=1,delta=2
    58                           	psect	text20,local,class=CODE,merge=1,delta=2
    59                           	psect	text21,local,class=CODE,merge=1,delta=2
    60                           	psect	text22,local,class=CODE,merge=1,delta=2
    61                           	psect	text23,local,class=CODE,merge=1,delta=2
    62                           	psect	text24,local,class=CODE,merge=1,delta=2
    63                           	psect	text25,local,class=CODE,merge=1,delta=2
    64                           	psect	text26,local,class=CODE,merge=1,delta=2
    65                           	psect	text27,local,class=CODE,merge=1,delta=2
    66                           	psect	text28,local,class=CODE,merge=1,delta=2
    67                           	psect	text29,local,class=CODE,merge=1,delta=2
    68                           	psect	text30,local,class=CODE,merge=1,delta=2
    69                           	psect	text31,local,class=CODE,merge=1,delta=2
    70                           	psect	text32,local,class=CODE,merge=1,delta=2
    71                           	psect	intentry,global,class=CODE,delta=2
    72                           	psect	text34,local,class=CODE,merge=1,delta=2
    73                           	psect	text35,local,class=CODE,merge=1,delta=2
    74                           	psect	text36,local,class=CODE,merge=1,delta=2
    75                           	psect	text37,local,class=CODE,merge=1,delta=2
    76                           	psect	text38,local,class=CODE,merge=1,delta=2
    77                           	psect	text39,local,class=CODE,merge=1,delta=2
    78                           	psect	text40,local,class=CODE,merge=1,delta=2
    79                           	psect	text41,local,class=CODE,merge=1,delta=2
    80                           	psect	text42,local,class=CODE,merge=1,delta=2
    81                           	psect	text43,local,class=CODE,merge=1,delta=2
    82                           	psect	text44,local,class=CODE,merge=1,delta=2
    83                           	psect	text45,local,class=CODE,merge=1,delta=2
    84                           	psect	text46,local,class=CODE,merge=1,delta=2
    85                           	psect	pa_nodes0,global,class=CODE,delta=2
    86                           	dabs	1,0x7E,2
    87  0000                     
    88                           ; Version 2.00
    89                           ; Generated 27/05/2018 GMT
    90                           ; 
    91                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    92                           ; All rights reserved.
    93                           ; 
    94                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    95                           ; 
    96                           ; Redistribution and use in source and binary forms, with or without modification, are
    97                           ; permitted provided that the following conditions are met:
    98                           ; 
    99                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   100                           ;        conditions and the following disclaimer.
   101                           ; 
   102                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   103                           ;        of conditions and the following disclaimer in the documentation and/or other
   104                           ;        materials provided with the distribution.
   105                           ; 
   106                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   107                           ;        software without specific prior written permission.
   108                           ; 
   109                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   110                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   111                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   112                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   113                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   114                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   115                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   116                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   117                           ; 
   118                           ; 
   119                           ; Code-generator required, PIC16F1823 Definitions
   120                           ; 
   121                           ; SFR Addresses
   122  0000                     	;# 
   123  0001                     	;# 
   124  0002                     	;# 
   125  0003                     	;# 
   126  0004                     	;# 
   127  0005                     	;# 
   128  0006                     	;# 
   129  0007                     	;# 
   130  0008                     	;# 
   131  0009                     	;# 
   132  000A                     	;# 
   133  000B                     	;# 
   134  000C                     	;# 
   135  000E                     	;# 
   136  0011                     	;# 
   137  0012                     	;# 
   138  0015                     	;# 
   139  0016                     	;# 
   140  0016                     	;# 
   141  0017                     	;# 
   142  0018                     	;# 
   143  0019                     	;# 
   144  001A                     	;# 
   145  001B                     	;# 
   146  001C                     	;# 
   147  001E                     	;# 
   148  001F                     	;# 
   149  008C                     	;# 
   150  008E                     	;# 
   151  0091                     	;# 
   152  0092                     	;# 
   153  0095                     	;# 
   154  0096                     	;# 
   155  0097                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009A                     	;# 
   159  009B                     	;# 
   160  009B                     	;# 
   161  009C                     	;# 
   162  009D                     	;# 
   163  009E                     	;# 
   164  010C                     	;# 
   165  010E                     	;# 
   166  0111                     	;# 
   167  0112                     	;# 
   168  0113                     	;# 
   169  0114                     	;# 
   170  0115                     	;# 
   171  0116                     	;# 
   172  0117                     	;# 
   173  0118                     	;# 
   174  0119                     	;# 
   175  011A                     	;# 
   176  011B                     	;# 
   177  011D                     	;# 
   178  011D                     	;# 
   179  018C                     	;# 
   180  018E                     	;# 
   181  0191                     	;# 
   182  0191                     	;# 
   183  0192                     	;# 
   184  0193                     	;# 
   185  0193                     	;# 
   186  0193                     	;# 
   187  0194                     	;# 
   188  0195                     	;# 
   189  0196                     	;# 
   190  0199                     	;# 
   191  019A                     	;# 
   192  019B                     	;# 
   193  019B                     	;# 
   194  019B                     	;# 
   195  019B                     	;# 
   196  019C                     	;# 
   197  019C                     	;# 
   198  019D                     	;# 
   199  019E                     	;# 
   200  019F                     	;# 
   201  020C                     	;# 
   202  020E                     	;# 
   203  0211                     	;# 
   204  0211                     	;# 
   205  0212                     	;# 
   206  0212                     	;# 
   207  0213                     	;# 
   208  0213                     	;# 
   209  0214                     	;# 
   210  0214                     	;# 
   211  0215                     	;# 
   212  0215                     	;# 
   213  0215                     	;# 
   214  0216                     	;# 
   215  0216                     	;# 
   216  0217                     	;# 
   217  0217                     	;# 
   218  0291                     	;# 
   219  0291                     	;# 
   220  0292                     	;# 
   221  0293                     	;# 
   222  0294                     	;# 
   223  0295                     	;# 
   224  0295                     	;# 
   225  0296                     	;# 
   226  0391                     	;# 
   227  0392                     	;# 
   228  0393                     	;# 
   229  039A                     	;# 
   230  039C                     	;# 
   231  039D                     	;# 
   232  039E                     	;# 
   233  039F                     	;# 
   234  0FE4                     	;# 
   235  0FE5                     	;# 
   236  0FE6                     	;# 
   237  0FE7                     	;# 
   238  0FE8                     	;# 
   239  0FE9                     	;# 
   240  0FEA                     	;# 
   241  0FEB                     	;# 
   242  0FED                     	;# 
   243  0FEE                     	;# 
   244  0FEF                     	;# 
   245  0000                     	;# 
   246  0001                     	;# 
   247  0002                     	;# 
   248  0003                     	;# 
   249  0004                     	;# 
   250  0005                     	;# 
   251  0006                     	;# 
   252  0007                     	;# 
   253  0008                     	;# 
   254  0009                     	;# 
   255  000A                     	;# 
   256  000B                     	;# 
   257  000C                     	;# 
   258  000E                     	;# 
   259  0011                     	;# 
   260  0012                     	;# 
   261  0015                     	;# 
   262  0016                     	;# 
   263  0016                     	;# 
   264  0017                     	;# 
   265  0018                     	;# 
   266  0019                     	;# 
   267  001A                     	;# 
   268  001B                     	;# 
   269  001C                     	;# 
   270  001E                     	;# 
   271  001F                     	;# 
   272  008C                     	;# 
   273  008E                     	;# 
   274  0091                     	;# 
   275  0092                     	;# 
   276  0095                     	;# 
   277  0096                     	;# 
   278  0097                     	;# 
   279  0098                     	;# 
   280  0099                     	;# 
   281  009A                     	;# 
   282  009B                     	;# 
   283  009B                     	;# 
   284  009C                     	;# 
   285  009D                     	;# 
   286  009E                     	;# 
   287  010C                     	;# 
   288  010E                     	;# 
   289  0111                     	;# 
   290  0112                     	;# 
   291  0113                     	;# 
   292  0114                     	;# 
   293  0115                     	;# 
   294  0116                     	;# 
   295  0117                     	;# 
   296  0118                     	;# 
   297  0119                     	;# 
   298  011A                     	;# 
   299  011B                     	;# 
   300  011D                     	;# 
   301  011D                     	;# 
   302  018C                     	;# 
   303  018E                     	;# 
   304  0191                     	;# 
   305  0191                     	;# 
   306  0192                     	;# 
   307  0193                     	;# 
   308  0193                     	;# 
   309  0193                     	;# 
   310  0194                     	;# 
   311  0195                     	;# 
   312  0196                     	;# 
   313  0199                     	;# 
   314  019A                     	;# 
   315  019B                     	;# 
   316  019B                     	;# 
   317  019B                     	;# 
   318  019B                     	;# 
   319  019C                     	;# 
   320  019C                     	;# 
   321  019D                     	;# 
   322  019E                     	;# 
   323  019F                     	;# 
   324  020C                     	;# 
   325  020E                     	;# 
   326  0211                     	;# 
   327  0211                     	;# 
   328  0212                     	;# 
   329  0212                     	;# 
   330  0213                     	;# 
   331  0213                     	;# 
   332  0214                     	;# 
   333  0214                     	;# 
   334  0215                     	;# 
   335  0215                     	;# 
   336  0215                     	;# 
   337  0216                     	;# 
   338  0216                     	;# 
   339  0217                     	;# 
   340  0217                     	;# 
   341  0291                     	;# 
   342  0291                     	;# 
   343  0292                     	;# 
   344  0293                     	;# 
   345  0294                     	;# 
   346  0295                     	;# 
   347  0295                     	;# 
   348  0296                     	;# 
   349  0391                     	;# 
   350  0392                     	;# 
   351  0393                     	;# 
   352  039A                     	;# 
   353  039C                     	;# 
   354  039D                     	;# 
   355  039E                     	;# 
   356  039F                     	;# 
   357  0FE4                     	;# 
   358  0FE5                     	;# 
   359  0FE6                     	;# 
   360  0FE7                     	;# 
   361  0FE8                     	;# 
   362  0FE9                     	;# 
   363  0FEA                     	;# 
   364  0FEB                     	;# 
   365  0FED                     	;# 
   366  0FEE                     	;# 
   367  0FEF                     	;# 
   368  0000                     	;# 
   369  0001                     	;# 
   370  0002                     	;# 
   371  0003                     	;# 
   372  0004                     	;# 
   373  0005                     	;# 
   374  0006                     	;# 
   375  0007                     	;# 
   376  0008                     	;# 
   377  0009                     	;# 
   378  000A                     	;# 
   379  000B                     	;# 
   380  000C                     	;# 
   381  000E                     	;# 
   382  0011                     	;# 
   383  0012                     	;# 
   384  0015                     	;# 
   385  0016                     	;# 
   386  0016                     	;# 
   387  0017                     	;# 
   388  0018                     	;# 
   389  0019                     	;# 
   390  001A                     	;# 
   391  001B                     	;# 
   392  001C                     	;# 
   393  001E                     	;# 
   394  001F                     	;# 
   395  008C                     	;# 
   396  008E                     	;# 
   397  0091                     	;# 
   398  0092                     	;# 
   399  0095                     	;# 
   400  0096                     	;# 
   401  0097                     	;# 
   402  0098                     	;# 
   403  0099                     	;# 
   404  009A                     	;# 
   405  009B                     	;# 
   406  009B                     	;# 
   407  009C                     	;# 
   408  009D                     	;# 
   409  009E                     	;# 
   410  010C                     	;# 
   411  010E                     	;# 
   412  0111                     	;# 
   413  0112                     	;# 
   414  0113                     	;# 
   415  0114                     	;# 
   416  0115                     	;# 
   417  0116                     	;# 
   418  0117                     	;# 
   419  0118                     	;# 
   420  0119                     	;# 
   421  011A                     	;# 
   422  011B                     	;# 
   423  011D                     	;# 
   424  011D                     	;# 
   425  018C                     	;# 
   426  018E                     	;# 
   427  0191                     	;# 
   428  0191                     	;# 
   429  0192                     	;# 
   430  0193                     	;# 
   431  0193                     	;# 
   432  0193                     	;# 
   433  0194                     	;# 
   434  0195                     	;# 
   435  0196                     	;# 
   436  0199                     	;# 
   437  019A                     	;# 
   438  019B                     	;# 
   439  019B                     	;# 
   440  019B                     	;# 
   441  019B                     	;# 
   442  019C                     	;# 
   443  019C                     	;# 
   444  019D                     	;# 
   445  019E                     	;# 
   446  019F                     	;# 
   447  020C                     	;# 
   448  020E                     	;# 
   449  0211                     	;# 
   450  0211                     	;# 
   451  0212                     	;# 
   452  0212                     	;# 
   453  0213                     	;# 
   454  0213                     	;# 
   455  0214                     	;# 
   456  0214                     	;# 
   457  0215                     	;# 
   458  0215                     	;# 
   459  0215                     	;# 
   460  0216                     	;# 
   461  0216                     	;# 
   462  0217                     	;# 
   463  0217                     	;# 
   464  0291                     	;# 
   465  0291                     	;# 
   466  0292                     	;# 
   467  0293                     	;# 
   468  0294                     	;# 
   469  0295                     	;# 
   470  0295                     	;# 
   471  0296                     	;# 
   472  0391                     	;# 
   473  0392                     	;# 
   474  0393                     	;# 
   475  039A                     	;# 
   476  039C                     	;# 
   477  039D                     	;# 
   478  039E                     	;# 
   479  039F                     	;# 
   480  0FE4                     	;# 
   481  0FE5                     	;# 
   482  0FE6                     	;# 
   483  0FE7                     	;# 
   484  0FE8                     	;# 
   485  0FE9                     	;# 
   486  0FEA                     	;# 
   487  0FEB                     	;# 
   488  0FED                     	;# 
   489  0FEE                     	;# 
   490  0FEF                     	;# 
   491  0000                     	;# 
   492  0001                     	;# 
   493  0002                     	;# 
   494  0003                     	;# 
   495  0004                     	;# 
   496  0005                     	;# 
   497  0006                     	;# 
   498  0007                     	;# 
   499  0008                     	;# 
   500  0009                     	;# 
   501  000A                     	;# 
   502  000B                     	;# 
   503  000C                     	;# 
   504  000E                     	;# 
   505  0011                     	;# 
   506  0012                     	;# 
   507  0015                     	;# 
   508  0016                     	;# 
   509  0016                     	;# 
   510  0017                     	;# 
   511  0018                     	;# 
   512  0019                     	;# 
   513  001A                     	;# 
   514  001B                     	;# 
   515  001C                     	;# 
   516  001E                     	;# 
   517  001F                     	;# 
   518  008C                     	;# 
   519  008E                     	;# 
   520  0091                     	;# 
   521  0092                     	;# 
   522  0095                     	;# 
   523  0096                     	;# 
   524  0097                     	;# 
   525  0098                     	;# 
   526  0099                     	;# 
   527  009A                     	;# 
   528  009B                     	;# 
   529  009B                     	;# 
   530  009C                     	;# 
   531  009D                     	;# 
   532  009E                     	;# 
   533  010C                     	;# 
   534  010E                     	;# 
   535  0111                     	;# 
   536  0112                     	;# 
   537  0113                     	;# 
   538  0114                     	;# 
   539  0115                     	;# 
   540  0116                     	;# 
   541  0117                     	;# 
   542  0118                     	;# 
   543  0119                     	;# 
   544  011A                     	;# 
   545  011B                     	;# 
   546  011D                     	;# 
   547  011D                     	;# 
   548  018C                     	;# 
   549  018E                     	;# 
   550  0191                     	;# 
   551  0191                     	;# 
   552  0192                     	;# 
   553  0193                     	;# 
   554  0193                     	;# 
   555  0193                     	;# 
   556  0194                     	;# 
   557  0195                     	;# 
   558  0196                     	;# 
   559  0199                     	;# 
   560  019A                     	;# 
   561  019B                     	;# 
   562  019B                     	;# 
   563  019B                     	;# 
   564  019B                     	;# 
   565  019C                     	;# 
   566  019C                     	;# 
   567  019D                     	;# 
   568  019E                     	;# 
   569  019F                     	;# 
   570  020C                     	;# 
   571  020E                     	;# 
   572  0211                     	;# 
   573  0211                     	;# 
   574  0212                     	;# 
   575  0212                     	;# 
   576  0213                     	;# 
   577  0213                     	;# 
   578  0214                     	;# 
   579  0214                     	;# 
   580  0215                     	;# 
   581  0215                     	;# 
   582  0215                     	;# 
   583  0216                     	;# 
   584  0216                     	;# 
   585  0217                     	;# 
   586  0217                     	;# 
   587  0291                     	;# 
   588  0291                     	;# 
   589  0292                     	;# 
   590  0293                     	;# 
   591  0294                     	;# 
   592  0295                     	;# 
   593  0295                     	;# 
   594  0296                     	;# 
   595  0391                     	;# 
   596  0392                     	;# 
   597  0393                     	;# 
   598  039A                     	;# 
   599  039C                     	;# 
   600  039D                     	;# 
   601  039E                     	;# 
   602  039F                     	;# 
   603  0FE4                     	;# 
   604  0FE5                     	;# 
   605  0FE6                     	;# 
   606  0FE7                     	;# 
   607  0FE8                     	;# 
   608  0FE9                     	;# 
   609  0FEA                     	;# 
   610  0FEB                     	;# 
   611  0FED                     	;# 
   612  0FEE                     	;# 
   613  0FEF                     	;# 
   614  0000                     	;# 
   615  0001                     	;# 
   616  0002                     	;# 
   617  0003                     	;# 
   618  0004                     	;# 
   619  0005                     	;# 
   620  0006                     	;# 
   621  0007                     	;# 
   622  0008                     	;# 
   623  0009                     	;# 
   624  000A                     	;# 
   625  000B                     	;# 
   626  000C                     	;# 
   627  000E                     	;# 
   628  0011                     	;# 
   629  0012                     	;# 
   630  0015                     	;# 
   631  0016                     	;# 
   632  0016                     	;# 
   633  0017                     	;# 
   634  0018                     	;# 
   635  0019                     	;# 
   636  001A                     	;# 
   637  001B                     	;# 
   638  001C                     	;# 
   639  001E                     	;# 
   640  001F                     	;# 
   641  008C                     	;# 
   642  008E                     	;# 
   643  0091                     	;# 
   644  0092                     	;# 
   645  0095                     	;# 
   646  0096                     	;# 
   647  0097                     	;# 
   648  0098                     	;# 
   649  0099                     	;# 
   650  009A                     	;# 
   651  009B                     	;# 
   652  009B                     	;# 
   653  009C                     	;# 
   654  009D                     	;# 
   655  009E                     	;# 
   656  010C                     	;# 
   657  010E                     	;# 
   658  0111                     	;# 
   659  0112                     	;# 
   660  0113                     	;# 
   661  0114                     	;# 
   662  0115                     	;# 
   663  0116                     	;# 
   664  0117                     	;# 
   665  0118                     	;# 
   666  0119                     	;# 
   667  011A                     	;# 
   668  011B                     	;# 
   669  011D                     	;# 
   670  011D                     	;# 
   671  018C                     	;# 
   672  018E                     	;# 
   673  0191                     	;# 
   674  0191                     	;# 
   675  0192                     	;# 
   676  0193                     	;# 
   677  0193                     	;# 
   678  0193                     	;# 
   679  0194                     	;# 
   680  0195                     	;# 
   681  0196                     	;# 
   682  0199                     	;# 
   683  019A                     	;# 
   684  019B                     	;# 
   685  019B                     	;# 
   686  019B                     	;# 
   687  019B                     	;# 
   688  019C                     	;# 
   689  019C                     	;# 
   690  019D                     	;# 
   691  019E                     	;# 
   692  019F                     	;# 
   693  020C                     	;# 
   694  020E                     	;# 
   695  0211                     	;# 
   696  0211                     	;# 
   697  0212                     	;# 
   698  0212                     	;# 
   699  0213                     	;# 
   700  0213                     	;# 
   701  0214                     	;# 
   702  0214                     	;# 
   703  0215                     	;# 
   704  0215                     	;# 
   705  0215                     	;# 
   706  0216                     	;# 
   707  0216                     	;# 
   708  0217                     	;# 
   709  0217                     	;# 
   710  0291                     	;# 
   711  0291                     	;# 
   712  0292                     	;# 
   713  0293                     	;# 
   714  0294                     	;# 
   715  0295                     	;# 
   716  0295                     	;# 
   717  0296                     	;# 
   718  0391                     	;# 
   719  0392                     	;# 
   720  0393                     	;# 
   721  039A                     	;# 
   722  039C                     	;# 
   723  039D                     	;# 
   724  039E                     	;# 
   725  039F                     	;# 
   726  0FE4                     	;# 
   727  0FE5                     	;# 
   728  0FE6                     	;# 
   729  0FE7                     	;# 
   730  0FE8                     	;# 
   731  0FE9                     	;# 
   732  0FEA                     	;# 
   733  0FEB                     	;# 
   734  0FED                     	;# 
   735  0FEE                     	;# 
   736  0FEF                     	;# 
   737  0000                     	;# 
   738  0001                     	;# 
   739  0002                     	;# 
   740  0003                     	;# 
   741  0004                     	;# 
   742  0005                     	;# 
   743  0006                     	;# 
   744  0007                     	;# 
   745  0008                     	;# 
   746  0009                     	;# 
   747  000A                     	;# 
   748  000B                     	;# 
   749  000C                     	;# 
   750  000E                     	;# 
   751  0011                     	;# 
   752  0012                     	;# 
   753  0015                     	;# 
   754  0016                     	;# 
   755  0016                     	;# 
   756  0017                     	;# 
   757  0018                     	;# 
   758  0019                     	;# 
   759  001A                     	;# 
   760  001B                     	;# 
   761  001C                     	;# 
   762  001E                     	;# 
   763  001F                     	;# 
   764  008C                     	;# 
   765  008E                     	;# 
   766  0091                     	;# 
   767  0092                     	;# 
   768  0095                     	;# 
   769  0096                     	;# 
   770  0097                     	;# 
   771  0098                     	;# 
   772  0099                     	;# 
   773  009A                     	;# 
   774  009B                     	;# 
   775  009B                     	;# 
   776  009C                     	;# 
   777  009D                     	;# 
   778  009E                     	;# 
   779  010C                     	;# 
   780  010E                     	;# 
   781  0111                     	;# 
   782  0112                     	;# 
   783  0113                     	;# 
   784  0114                     	;# 
   785  0115                     	;# 
   786  0116                     	;# 
   787  0117                     	;# 
   788  0118                     	;# 
   789  0119                     	;# 
   790  011A                     	;# 
   791  011B                     	;# 
   792  011D                     	;# 
   793  011D                     	;# 
   794  018C                     	;# 
   795  018E                     	;# 
   796  0191                     	;# 
   797  0191                     	;# 
   798  0192                     	;# 
   799  0193                     	;# 
   800  0193                     	;# 
   801  0193                     	;# 
   802  0194                     	;# 
   803  0195                     	;# 
   804  0196                     	;# 
   805  0199                     	;# 
   806  019A                     	;# 
   807  019B                     	;# 
   808  019B                     	;# 
   809  019B                     	;# 
   810  019B                     	;# 
   811  019C                     	;# 
   812  019C                     	;# 
   813  019D                     	;# 
   814  019E                     	;# 
   815  019F                     	;# 
   816  020C                     	;# 
   817  020E                     	;# 
   818  0211                     	;# 
   819  0211                     	;# 
   820  0212                     	;# 
   821  0212                     	;# 
   822  0213                     	;# 
   823  0213                     	;# 
   824  0214                     	;# 
   825  0214                     	;# 
   826  0215                     	;# 
   827  0215                     	;# 
   828  0215                     	;# 
   829  0216                     	;# 
   830  0216                     	;# 
   831  0217                     	;# 
   832  0217                     	;# 
   833  0291                     	;# 
   834  0291                     	;# 
   835  0292                     	;# 
   836  0293                     	;# 
   837  0294                     	;# 
   838  0295                     	;# 
   839  0295                     	;# 
   840  0296                     	;# 
   841  0391                     	;# 
   842  0392                     	;# 
   843  0393                     	;# 
   844  039A                     	;# 
   845  039C                     	;# 
   846  039D                     	;# 
   847  039E                     	;# 
   848  039F                     	;# 
   849  0FE4                     	;# 
   850  0FE5                     	;# 
   851  0FE6                     	;# 
   852  0FE7                     	;# 
   853  0FE8                     	;# 
   854  0FE9                     	;# 
   855  0FEA                     	;# 
   856  0FEB                     	;# 
   857  0FED                     	;# 
   858  0FEE                     	;# 
   859  0FEF                     	;# 
   860  0000                     	;# 
   861  0001                     	;# 
   862  0002                     	;# 
   863  0003                     	;# 
   864  0004                     	;# 
   865  0005                     	;# 
   866  0006                     	;# 
   867  0007                     	;# 
   868  0008                     	;# 
   869  0009                     	;# 
   870  000A                     	;# 
   871  000B                     	;# 
   872  000C                     	;# 
   873  000E                     	;# 
   874  0011                     	;# 
   875  0012                     	;# 
   876  0015                     	;# 
   877  0016                     	;# 
   878  0016                     	;# 
   879  0017                     	;# 
   880  0018                     	;# 
   881  0019                     	;# 
   882  001A                     	;# 
   883  001B                     	;# 
   884  001C                     	;# 
   885  001E                     	;# 
   886  001F                     	;# 
   887  008C                     	;# 
   888  008E                     	;# 
   889  0091                     	;# 
   890  0092                     	;# 
   891  0095                     	;# 
   892  0096                     	;# 
   893  0097                     	;# 
   894  0098                     	;# 
   895  0099                     	;# 
   896  009A                     	;# 
   897  009B                     	;# 
   898  009B                     	;# 
   899  009C                     	;# 
   900  009D                     	;# 
   901  009E                     	;# 
   902  010C                     	;# 
   903  010E                     	;# 
   904  0111                     	;# 
   905  0112                     	;# 
   906  0113                     	;# 
   907  0114                     	;# 
   908  0115                     	;# 
   909  0116                     	;# 
   910  0117                     	;# 
   911  0118                     	;# 
   912  0119                     	;# 
   913  011A                     	;# 
   914  011B                     	;# 
   915  011D                     	;# 
   916  011D                     	;# 
   917  018C                     	;# 
   918  018E                     	;# 
   919  0191                     	;# 
   920  0191                     	;# 
   921  0192                     	;# 
   922  0193                     	;# 
   923  0193                     	;# 
   924  0193                     	;# 
   925  0194                     	;# 
   926  0195                     	;# 
   927  0196                     	;# 
   928  0199                     	;# 
   929  019A                     	;# 
   930  019B                     	;# 
   931  019B                     	;# 
   932  019B                     	;# 
   933  019B                     	;# 
   934  019C                     	;# 
   935  019C                     	;# 
   936  019D                     	;# 
   937  019E                     	;# 
   938  019F                     	;# 
   939  020C                     	;# 
   940  020E                     	;# 
   941  0211                     	;# 
   942  0211                     	;# 
   943  0212                     	;# 
   944  0212                     	;# 
   945  0213                     	;# 
   946  0213                     	;# 
   947  0214                     	;# 
   948  0214                     	;# 
   949  0215                     	;# 
   950  0215                     	;# 
   951  0215                     	;# 
   952  0216                     	;# 
   953  0216                     	;# 
   954  0217                     	;# 
   955  0217                     	;# 
   956  0291                     	;# 
   957  0291                     	;# 
   958  0292                     	;# 
   959  0293                     	;# 
   960  0294                     	;# 
   961  0295                     	;# 
   962  0295                     	;# 
   963  0296                     	;# 
   964  0391                     	;# 
   965  0392                     	;# 
   966  0393                     	;# 
   967  039A                     	;# 
   968  039C                     	;# 
   969  039D                     	;# 
   970  039E                     	;# 
   971  039F                     	;# 
   972  0FE4                     	;# 
   973  0FE5                     	;# 
   974  0FE6                     	;# 
   975  0FE7                     	;# 
   976  0FE8                     	;# 
   977  0FE9                     	;# 
   978  0FEA                     	;# 
   979  0FEB                     	;# 
   980  0FED                     	;# 
   981  0FEE                     	;# 
   982  0FEF                     	;# 
   983  0000                     	;# 
   984  0001                     	;# 
   985  0002                     	;# 
   986  0003                     	;# 
   987  0004                     	;# 
   988  0005                     	;# 
   989  0006                     	;# 
   990  0007                     	;# 
   991  0008                     	;# 
   992  0009                     	;# 
   993  000A                     	;# 
   994  000B                     	;# 
   995  000C                     	;# 
   996  000E                     	;# 
   997  0011                     	;# 
   998  0012                     	;# 
   999  0015                     	;# 
  1000  0016                     	;# 
  1001  0016                     	;# 
  1002  0017                     	;# 
  1003  0018                     	;# 
  1004  0019                     	;# 
  1005  001A                     	;# 
  1006  001B                     	;# 
  1007  001C                     	;# 
  1008  001E                     	;# 
  1009  001F                     	;# 
  1010  008C                     	;# 
  1011  008E                     	;# 
  1012  0091                     	;# 
  1013  0092                     	;# 
  1014  0095                     	;# 
  1015  0096                     	;# 
  1016  0097                     	;# 
  1017  0098                     	;# 
  1018  0099                     	;# 
  1019  009A                     	;# 
  1020  009B                     	;# 
  1021  009B                     	;# 
  1022  009C                     	;# 
  1023  009D                     	;# 
  1024  009E                     	;# 
  1025  010C                     	;# 
  1026  010E                     	;# 
  1027  0111                     	;# 
  1028  0112                     	;# 
  1029  0113                     	;# 
  1030  0114                     	;# 
  1031  0115                     	;# 
  1032  0116                     	;# 
  1033  0117                     	;# 
  1034  0118                     	;# 
  1035  0119                     	;# 
  1036  011A                     	;# 
  1037  011B                     	;# 
  1038  011D                     	;# 
  1039  011D                     	;# 
  1040  018C                     	;# 
  1041  018E                     	;# 
  1042  0191                     	;# 
  1043  0191                     	;# 
  1044  0192                     	;# 
  1045  0193                     	;# 
  1046  0193                     	;# 
  1047  0193                     	;# 
  1048  0194                     	;# 
  1049  0195                     	;# 
  1050  0196                     	;# 
  1051  0199                     	;# 
  1052  019A                     	;# 
  1053  019B                     	;# 
  1054  019B                     	;# 
  1055  019B                     	;# 
  1056  019B                     	;# 
  1057  019C                     	;# 
  1058  019C                     	;# 
  1059  019D                     	;# 
  1060  019E                     	;# 
  1061  019F                     	;# 
  1062  020C                     	;# 
  1063  020E                     	;# 
  1064  0211                     	;# 
  1065  0211                     	;# 
  1066  0212                     	;# 
  1067  0212                     	;# 
  1068  0213                     	;# 
  1069  0213                     	;# 
  1070  0214                     	;# 
  1071  0214                     	;# 
  1072  0215                     	;# 
  1073  0215                     	;# 
  1074  0215                     	;# 
  1075  0216                     	;# 
  1076  0216                     	;# 
  1077  0217                     	;# 
  1078  0217                     	;# 
  1079  0291                     	;# 
  1080  0291                     	;# 
  1081  0292                     	;# 
  1082  0293                     	;# 
  1083  0294                     	;# 
  1084  0295                     	;# 
  1085  0295                     	;# 
  1086  0296                     	;# 
  1087  0391                     	;# 
  1088  0392                     	;# 
  1089  0393                     	;# 
  1090  039A                     	;# 
  1091  039C                     	;# 
  1092  039D                     	;# 
  1093  039E                     	;# 
  1094  039F                     	;# 
  1095  0FE4                     	;# 
  1096  0FE5                     	;# 
  1097  0FE6                     	;# 
  1098  0FE7                     	;# 
  1099  0FE8                     	;# 
  1100  0FE9                     	;# 
  1101  0FEA                     	;# 
  1102  0FEB                     	;# 
  1103  0FED                     	;# 
  1104  0FEE                     	;# 
  1105  0FEF                     	;# 
  1106  0000                     	;# 
  1107  0001                     	;# 
  1108  0002                     	;# 
  1109  0003                     	;# 
  1110  0004                     	;# 
  1111  0005                     	;# 
  1112  0006                     	;# 
  1113  0007                     	;# 
  1114  0008                     	;# 
  1115  0009                     	;# 
  1116  000A                     	;# 
  1117  000B                     	;# 
  1118  000C                     	;# 
  1119  000E                     	;# 
  1120  0011                     	;# 
  1121  0012                     	;# 
  1122  0015                     	;# 
  1123  0016                     	;# 
  1124  0016                     	;# 
  1125  0017                     	;# 
  1126  0018                     	;# 
  1127  0019                     	;# 
  1128  001A                     	;# 
  1129  001B                     	;# 
  1130  001C                     	;# 
  1131  001E                     	;# 
  1132  001F                     	;# 
  1133  008C                     	;# 
  1134  008E                     	;# 
  1135  0091                     	;# 
  1136  0092                     	;# 
  1137  0095                     	;# 
  1138  0096                     	;# 
  1139  0097                     	;# 
  1140  0098                     	;# 
  1141  0099                     	;# 
  1142  009A                     	;# 
  1143  009B                     	;# 
  1144  009B                     	;# 
  1145  009C                     	;# 
  1146  009D                     	;# 
  1147  009E                     	;# 
  1148  010C                     	;# 
  1149  010E                     	;# 
  1150  0111                     	;# 
  1151  0112                     	;# 
  1152  0113                     	;# 
  1153  0114                     	;# 
  1154  0115                     	;# 
  1155  0116                     	;# 
  1156  0117                     	;# 
  1157  0118                     	;# 
  1158  0119                     	;# 
  1159  011A                     	;# 
  1160  011B                     	;# 
  1161  011D                     	;# 
  1162  011D                     	;# 
  1163  018C                     	;# 
  1164  018E                     	;# 
  1165  0191                     	;# 
  1166  0191                     	;# 
  1167  0192                     	;# 
  1168  0193                     	;# 
  1169  0193                     	;# 
  1170  0193                     	;# 
  1171  0194                     	;# 
  1172  0195                     	;# 
  1173  0196                     	;# 
  1174  0199                     	;# 
  1175  019A                     	;# 
  1176  019B                     	;# 
  1177  019B                     	;# 
  1178  019B                     	;# 
  1179  019B                     	;# 
  1180  019C                     	;# 
  1181  019C                     	;# 
  1182  019D                     	;# 
  1183  019E                     	;# 
  1184  019F                     	;# 
  1185  020C                     	;# 
  1186  020E                     	;# 
  1187  0211                     	;# 
  1188  0211                     	;# 
  1189  0212                     	;# 
  1190  0212                     	;# 
  1191  0213                     	;# 
  1192  0213                     	;# 
  1193  0214                     	;# 
  1194  0214                     	;# 
  1195  0215                     	;# 
  1196  0215                     	;# 
  1197  0215                     	;# 
  1198  0216                     	;# 
  1199  0216                     	;# 
  1200  0217                     	;# 
  1201  0217                     	;# 
  1202  0291                     	;# 
  1203  0291                     	;# 
  1204  0292                     	;# 
  1205  0293                     	;# 
  1206  0294                     	;# 
  1207  0295                     	;# 
  1208  0295                     	;# 
  1209  0296                     	;# 
  1210  0391                     	;# 
  1211  0392                     	;# 
  1212  0393                     	;# 
  1213  039A                     	;# 
  1214  039C                     	;# 
  1215  039D                     	;# 
  1216  039E                     	;# 
  1217  039F                     	;# 
  1218  0FE4                     	;# 
  1219  0FE5                     	;# 
  1220  0FE6                     	;# 
  1221  0FE7                     	;# 
  1222  0FE8                     	;# 
  1223  0FE9                     	;# 
  1224  0FEA                     	;# 
  1225  0FEB                     	;# 
  1226  0FED                     	;# 
  1227  0FEE                     	;# 
  1228  0FEF                     	;# 
  1229  0000                     	;# 
  1230  0001                     	;# 
  1231  0002                     	;# 
  1232  0003                     	;# 
  1233  0004                     	;# 
  1234  0005                     	;# 
  1235  0006                     	;# 
  1236  0007                     	;# 
  1237  0008                     	;# 
  1238  0009                     	;# 
  1239  000A                     	;# 
  1240  000B                     	;# 
  1241  000C                     	;# 
  1242  000E                     	;# 
  1243  0011                     	;# 
  1244  0012                     	;# 
  1245  0015                     	;# 
  1246  0016                     	;# 
  1247  0016                     	;# 
  1248  0017                     	;# 
  1249  0018                     	;# 
  1250  0019                     	;# 
  1251  001A                     	;# 
  1252  001B                     	;# 
  1253  001C                     	;# 
  1254  001E                     	;# 
  1255  001F                     	;# 
  1256  008C                     	;# 
  1257  008E                     	;# 
  1258  0091                     	;# 
  1259  0092                     	;# 
  1260  0095                     	;# 
  1261  0096                     	;# 
  1262  0097                     	;# 
  1263  0098                     	;# 
  1264  0099                     	;# 
  1265  009A                     	;# 
  1266  009B                     	;# 
  1267  009B                     	;# 
  1268  009C                     	;# 
  1269  009D                     	;# 
  1270  009E                     	;# 
  1271  010C                     	;# 
  1272  010E                     	;# 
  1273  0111                     	;# 
  1274  0112                     	;# 
  1275  0113                     	;# 
  1276  0114                     	;# 
  1277  0115                     	;# 
  1278  0116                     	;# 
  1279  0117                     	;# 
  1280  0118                     	;# 
  1281  0119                     	;# 
  1282  011A                     	;# 
  1283  011B                     	;# 
  1284  011D                     	;# 
  1285  011D                     	;# 
  1286  018C                     	;# 
  1287  018E                     	;# 
  1288  0191                     	;# 
  1289  0191                     	;# 
  1290  0192                     	;# 
  1291  0193                     	;# 
  1292  0193                     	;# 
  1293  0193                     	;# 
  1294  0194                     	;# 
  1295  0195                     	;# 
  1296  0196                     	;# 
  1297  0199                     	;# 
  1298  019A                     	;# 
  1299  019B                     	;# 
  1300  019B                     	;# 
  1301  019B                     	;# 
  1302  019B                     	;# 
  1303  019C                     	;# 
  1304  019C                     	;# 
  1305  019D                     	;# 
  1306  019E                     	;# 
  1307  019F                     	;# 
  1308  020C                     	;# 
  1309  020E                     	;# 
  1310  0211                     	;# 
  1311  0211                     	;# 
  1312  0212                     	;# 
  1313  0212                     	;# 
  1314  0213                     	;# 
  1315  0213                     	;# 
  1316  0214                     	;# 
  1317  0214                     	;# 
  1318  0215                     	;# 
  1319  0215                     	;# 
  1320  0215                     	;# 
  1321  0216                     	;# 
  1322  0216                     	;# 
  1323  0217                     	;# 
  1324  0217                     	;# 
  1325  0291                     	;# 
  1326  0291                     	;# 
  1327  0292                     	;# 
  1328  0293                     	;# 
  1329  0294                     	;# 
  1330  0295                     	;# 
  1331  0295                     	;# 
  1332  0296                     	;# 
  1333  0391                     	;# 
  1334  0392                     	;# 
  1335  0393                     	;# 
  1336  039A                     	;# 
  1337  039C                     	;# 
  1338  039D                     	;# 
  1339  039E                     	;# 
  1340  039F                     	;# 
  1341  0FE4                     	;# 
  1342  0FE5                     	;# 
  1343  0FE6                     	;# 
  1344  0FE7                     	;# 
  1345  0FE8                     	;# 
  1346  0FE9                     	;# 
  1347  0FEA                     	;# 
  1348  0FEB                     	;# 
  1349  0FED                     	;# 
  1350  0FEE                     	;# 
  1351  0FEF                     	;# 
  1352  0000                     	;# 
  1353  0001                     	;# 
  1354  0002                     	;# 
  1355  0003                     	;# 
  1356  0004                     	;# 
  1357  0005                     	;# 
  1358  0006                     	;# 
  1359  0007                     	;# 
  1360  0008                     	;# 
  1361  0009                     	;# 
  1362  000A                     	;# 
  1363  000B                     	;# 
  1364  000C                     	;# 
  1365  000E                     	;# 
  1366  0011                     	;# 
  1367  0012                     	;# 
  1368  0015                     	;# 
  1369  0016                     	;# 
  1370  0016                     	;# 
  1371  0017                     	;# 
  1372  0018                     	;# 
  1373  0019                     	;# 
  1374  001A                     	;# 
  1375  001B                     	;# 
  1376  001C                     	;# 
  1377  001E                     	;# 
  1378  001F                     	;# 
  1379  008C                     	;# 
  1380  008E                     	;# 
  1381  0091                     	;# 
  1382  0092                     	;# 
  1383  0095                     	;# 
  1384  0096                     	;# 
  1385  0097                     	;# 
  1386  0098                     	;# 
  1387  0099                     	;# 
  1388  009A                     	;# 
  1389  009B                     	;# 
  1390  009B                     	;# 
  1391  009C                     	;# 
  1392  009D                     	;# 
  1393  009E                     	;# 
  1394  010C                     	;# 
  1395  010E                     	;# 
  1396  0111                     	;# 
  1397  0112                     	;# 
  1398  0113                     	;# 
  1399  0114                     	;# 
  1400  0115                     	;# 
  1401  0116                     	;# 
  1402  0117                     	;# 
  1403  0118                     	;# 
  1404  0119                     	;# 
  1405  011A                     	;# 
  1406  011B                     	;# 
  1407  011D                     	;# 
  1408  011D                     	;# 
  1409  018C                     	;# 
  1410  018E                     	;# 
  1411  0191                     	;# 
  1412  0191                     	;# 
  1413  0192                     	;# 
  1414  0193                     	;# 
  1415  0193                     	;# 
  1416  0193                     	;# 
  1417  0194                     	;# 
  1418  0195                     	;# 
  1419  0196                     	;# 
  1420  0199                     	;# 
  1421  019A                     	;# 
  1422  019B                     	;# 
  1423  019B                     	;# 
  1424  019B                     	;# 
  1425  019B                     	;# 
  1426  019C                     	;# 
  1427  019C                     	;# 
  1428  019D                     	;# 
  1429  019E                     	;# 
  1430  019F                     	;# 
  1431  020C                     	;# 
  1432  020E                     	;# 
  1433  0211                     	;# 
  1434  0211                     	;# 
  1435  0212                     	;# 
  1436  0212                     	;# 
  1437  0213                     	;# 
  1438  0213                     	;# 
  1439  0214                     	;# 
  1440  0214                     	;# 
  1441  0215                     	;# 
  1442  0215                     	;# 
  1443  0215                     	;# 
  1444  0216                     	;# 
  1445  0216                     	;# 
  1446  0217                     	;# 
  1447  0217                     	;# 
  1448  0291                     	;# 
  1449  0291                     	;# 
  1450  0292                     	;# 
  1451  0293                     	;# 
  1452  0294                     	;# 
  1453  0295                     	;# 
  1454  0295                     	;# 
  1455  0296                     	;# 
  1456  0391                     	;# 
  1457  0392                     	;# 
  1458  0393                     	;# 
  1459  039A                     	;# 
  1460  039C                     	;# 
  1461  039D                     	;# 
  1462  039E                     	;# 
  1463  039F                     	;# 
  1464  0FE4                     	;# 
  1465  0FE5                     	;# 
  1466  0FE6                     	;# 
  1467  0FE7                     	;# 
  1468  0FE8                     	;# 
  1469  0FE9                     	;# 
  1470  0FEA                     	;# 
  1471  0FEB                     	;# 
  1472  0FED                     	;# 
  1473  0FEE                     	;# 
  1474  0FEF                     	;# 
  1475  0000                     	;# 
  1476  0001                     	;# 
  1477  0002                     	;# 
  1478  0003                     	;# 
  1479  0004                     	;# 
  1480  0005                     	;# 
  1481  0006                     	;# 
  1482  0007                     	;# 
  1483  0008                     	;# 
  1484  0009                     	;# 
  1485  000A                     	;# 
  1486  000B                     	;# 
  1487  000C                     	;# 
  1488  000E                     	;# 
  1489  0011                     	;# 
  1490  0012                     	;# 
  1491  0015                     	;# 
  1492  0016                     	;# 
  1493  0016                     	;# 
  1494  0017                     	;# 
  1495  0018                     	;# 
  1496  0019                     	;# 
  1497  001A                     	;# 
  1498  001B                     	;# 
  1499  001C                     	;# 
  1500  001E                     	;# 
  1501  001F                     	;# 
  1502  008C                     	;# 
  1503  008E                     	;# 
  1504  0091                     	;# 
  1505  0092                     	;# 
  1506  0095                     	;# 
  1507  0096                     	;# 
  1508  0097                     	;# 
  1509  0098                     	;# 
  1510  0099                     	;# 
  1511  009A                     	;# 
  1512  009B                     	;# 
  1513  009B                     	;# 
  1514  009C                     	;# 
  1515  009D                     	;# 
  1516  009E                     	;# 
  1517  010C                     	;# 
  1518  010E                     	;# 
  1519  0111                     	;# 
  1520  0112                     	;# 
  1521  0113                     	;# 
  1522  0114                     	;# 
  1523  0115                     	;# 
  1524  0116                     	;# 
  1525  0117                     	;# 
  1526  0118                     	;# 
  1527  0119                     	;# 
  1528  011A                     	;# 
  1529  011B                     	;# 
  1530  011D                     	;# 
  1531  011D                     	;# 
  1532  018C                     	;# 
  1533  018E                     	;# 
  1534  0191                     	;# 
  1535  0191                     	;# 
  1536  0192                     	;# 
  1537  0193                     	;# 
  1538  0193                     	;# 
  1539  0193                     	;# 
  1540  0194                     	;# 
  1541  0195                     	;# 
  1542  0196                     	;# 
  1543  0199                     	;# 
  1544  019A                     	;# 
  1545  019B                     	;# 
  1546  019B                     	;# 
  1547  019B                     	;# 
  1548  019B                     	;# 
  1549  019C                     	;# 
  1550  019C                     	;# 
  1551  019D                     	;# 
  1552  019E                     	;# 
  1553  019F                     	;# 
  1554  020C                     	;# 
  1555  020E                     	;# 
  1556  0211                     	;# 
  1557  0211                     	;# 
  1558  0212                     	;# 
  1559  0212                     	;# 
  1560  0213                     	;# 
  1561  0213                     	;# 
  1562  0214                     	;# 
  1563  0214                     	;# 
  1564  0215                     	;# 
  1565  0215                     	;# 
  1566  0215                     	;# 
  1567  0216                     	;# 
  1568  0216                     	;# 
  1569  0217                     	;# 
  1570  0217                     	;# 
  1571  0291                     	;# 
  1572  0291                     	;# 
  1573  0292                     	;# 
  1574  0293                     	;# 
  1575  0294                     	;# 
  1576  0295                     	;# 
  1577  0295                     	;# 
  1578  0296                     	;# 
  1579  0391                     	;# 
  1580  0392                     	;# 
  1581  0393                     	;# 
  1582  039A                     	;# 
  1583  039C                     	;# 
  1584  039D                     	;# 
  1585  039E                     	;# 
  1586  039F                     	;# 
  1587  0FE4                     	;# 
  1588  0FE5                     	;# 
  1589  0FE6                     	;# 
  1590  0FE7                     	;# 
  1591  0FE8                     	;# 
  1592  0FE9                     	;# 
  1593  0FEA                     	;# 
  1594  0FEB                     	;# 
  1595  0FED                     	;# 
  1596  0FEE                     	;# 
  1597  0FEF                     	;# 
  1598                           
  1599 ;; Function _ESP_default_application_handler is unused but had its address taken
  1600  0000                     
  1601                           	psect	nvBANK0
  1602  0067                     __pnvBANK0:	
  1603  0067                     _IOCAF4_InterruptHandler:	
  1604  0067                     	ds	2
  1605  000C                     _PORTAbits	set	12
  1606  0018                     _T1CONbits	set	24
  1607  0018                     _T1CON	set	24
  1608  0016                     _TMR1L	set	22
  1609  0017                     _TMR1H	set	23
  1610  0019                     _T1GCON	set	25
  1611  000B                     _INTCONbits	set	11
  1612  0011                     _PIR1bits	set	17
  1613  0095                     _OPTION_REGbits	set	149
  1614  008E                     _TRISC	set	142
  1615  008C                     _TRISA	set	140
  1616  0097                     _WDTCON	set	151
  1617  0098                     _OSCTUNE	set	152
  1618  0099                     _OSCCON	set	153
  1619  009D                     _ADCON0bits	set	157
  1620  0091                     _PIE1bits	set	145
  1621  009C                     _ADRESH	set	156
  1622  009B                     _ADRESL	set	155
  1623  009E                     _ADCON1	set	158
  1624  009D                     _ADCON0	set	157
  1625  04D6                     _PLLR	set	1238
  1626  010C                     _LATAbits	set	268
  1627  011D                     _APFCON	set	285
  1628  010E                     _LATC	set	270
  1629  010C                     _LATA	set	268
  1630  0116                     _BORCON	set	278
  1631  018C                     _ANSELA	set	396
  1632  018E                     _ANSELC	set	398
  1633  0199                     _RCREG	set	409
  1634  019D                     _RCSTAbits	set	413
  1635  019A                     _TXREG	set	410
  1636  019C                     _SPBRGH	set	412
  1637  019B                     _SPBRGL	set	411
  1638  019E                     _TXSTA	set	414
  1639  019D                     _RCSTA	set	413
  1640  019F                     _BAUDCON	set	415
  1641  020E                     _WPUC	set	526
  1642  020C                     _WPUA	set	524
  1643  0391                     _IOCAPbits	set	913
  1644  0392                     _IOCANbits	set	914
  1645  0393                     _IOCAFbits	set	915
  1646                           
  1647                           	psect	stringtext1
  1648  0252                     __pstringtext1:	
  1649  0252                     STR_28:	
  1650  0252  3465               	retlw	101	;'e'
  1651  0253  346E               	retlw	110	;'n'
  1652  0254  3474               	retlw	116	;'t'
  1653  0255  3465               	retlw	101	;'e'
  1654  0256  3472               	retlw	114	;'r'
  1655  0257  3420               	retlw	32	;' '
  1656  0258  3477               	retlw	119	;'w'
  1657  0259  346C               	retlw	108	;'l'
  1658  025A  3461               	retlw	97	;'a'
  1659  025B  346E               	retlw	110	;'n'
  1660  025C  3420               	retlw	32	;' '
  1661  025D  3470               	retlw	112	;'p'
  1662  025E  3461               	retlw	97	;'a'
  1663  025F  3473               	retlw	115	;'s'
  1664  0260  3473               	retlw	115	;'s'
  1665  0261  3477               	retlw	119	;'w'
  1666  0262  346F               	retlw	111	;'o'
  1667  0263  3472               	retlw	114	;'r'
  1668  0264  3464               	retlw	100	;'d'
  1669  0265  343A               	retlw	58	;':'
  1670  0266  340A               	retlw	10
  1671  0267  3400               	retlw	0
  1672                           
  1673                           	psect	stringtext2
  1674  02BF                     __pstringtext2:	
  1675  02BF                     STR_14:	
  1676  02BF  3441               	retlw	65	;'A'
  1677  02C0  3454               	retlw	84	;'T'
  1678  02C1  342B               	retlw	43	;'+'
  1679  02C2  3443               	retlw	67	;'C'
  1680  02C3  3449               	retlw	73	;'I'
  1681  02C4  3450               	retlw	80	;'P'
  1682  02C5  3453               	retlw	83	;'S'
  1683  02C6  3445               	retlw	69	;'E'
  1684  02C7  3452               	retlw	82	;'R'
  1685  02C8  3456               	retlw	86	;'V'
  1686  02C9  3445               	retlw	69	;'E'
  1687  02CA  3452               	retlw	82	;'R'
  1688  02CB  343D               	retlw	61	;'='
  1689  02CC  3431               	retlw	49	;'1'
  1690  02CD  342C               	retlw	44	;','
  1691  02CE  3438               	retlw	56	;'8'
  1692  02CF  3430               	retlw	48	;'0'
  1693  02D0  340D               	retlw	13
  1694  02D1  340A               	retlw	10
  1695  02D2  3400               	retlw	0
  1696                           
  1697                           	psect	stringtext3
  1698  02E6                     __pstringtext3:	
  1699  02E6                     STR_26:	
  1700  02E6  3465               	retlw	101	;'e'
  1701  02E7  346E               	retlw	110	;'n'
  1702  02E8  3474               	retlw	116	;'t'
  1703  02E9  3465               	retlw	101	;'e'
  1704  02EA  3472               	retlw	114	;'r'
  1705  02EB  3420               	retlw	32	;' '
  1706  02EC  3477               	retlw	119	;'w'
  1707  02ED  346C               	retlw	108	;'l'
  1708  02EE  3461               	retlw	97	;'a'
  1709  02EF  346E               	retlw	110	;'n'
  1710  02F0  3420               	retlw	32	;' '
  1711  02F1  346E               	retlw	110	;'n'
  1712  02F2  3461               	retlw	97	;'a'
  1713  02F3  346D               	retlw	109	;'m'
  1714  02F4  3465               	retlw	101	;'e'
  1715  02F5  343A               	retlw	58	;':'
  1716  02F6  340A               	retlw	10
  1717  02F7  3400               	retlw	0
  1718                           
  1719                           	psect	stringtext4
  1720  0318                     __pstringtext4:	
  1721  0318                     STR_9:	
  1722  0318  3441               	retlw	65	;'A'
  1723  0319  3454               	retlw	84	;'T'
  1724  031A  342B               	retlw	43	;'+'
  1725  031B  3443               	retlw	67	;'C'
  1726  031C  3457               	retlw	87	;'W'
  1727  031D  344D               	retlw	77	;'M'
  1728  031E  344F               	retlw	79	;'O'
  1729  031F  3444               	retlw	68	;'D'
  1730  0320  3445               	retlw	69	;'E'
  1731  0321  343D               	retlw	61	;'='
  1732  0322  3431               	retlw	49	;'1'
  1733  0323  340D               	retlw	13
  1734  0324  340A               	retlw	10
  1735  0325  3400               	retlw	0
  1736                           
  1737                           	psect	stringtext5
  1738  0326                     __pstringtext5:	
  1739  0326                     STR_13:	
  1740  0326  3441               	retlw	65	;'A'
  1741  0327  3454               	retlw	84	;'T'
  1742  0328  342B               	retlw	43	;'+'
  1743  0329  3443               	retlw	67	;'C'
  1744  032A  3449               	retlw	73	;'I'
  1745  032B  3450               	retlw	80	;'P'
  1746  032C  344D               	retlw	77	;'M'
  1747  032D  3455               	retlw	85	;'U'
  1748  032E  3458               	retlw	88	;'X'
  1749  032F  343D               	retlw	61	;'='
  1750  0330  3431               	retlw	49	;'1'
  1751  0331  340D               	retlw	13
  1752  0332  340A               	retlw	10
  1753  0333  3400               	retlw	0
  1754                           
  1755                           	psect	stringtext6
  1756  0350                     __pstringtext6:	
  1757  0350                     STR_25:	
  1758  0350  344C               	retlw	76	;'L'
  1759  0351  346F               	retlw	111	;'o'
  1760  0352  3467               	retlw	103	;'g'
  1761  0353  3467               	retlw	103	;'g'
  1762  0354  3465               	retlw	101	;'e'
  1763  0355  3472               	retlw	114	;'r'
  1764  0356  3420               	retlw	32	;' '
  1765  0357  3456               	retlw	86	;'V'
  1766  0358  3431               	retlw	49	;'1'
  1767  0359  342E               	retlw	46	;'.'
  1768  035A  3430               	retlw	48	;'0'
  1769  035B  340A               	retlw	10
  1770  035C  3400               	retlw	0
  1771                           
  1772                           	psect	stringtext7
  1773  035D                     __pstringtext7:	
  1774  035D                     STR_27:	
  1775  035D  3462               	retlw	98	;'b'
  1776  035E  3475               	retlw	117	;'u'
  1777  035F  3466               	retlw	102	;'f'
  1778  0360  3466               	retlw	102	;'f'
  1779  0361  3465               	retlw	101	;'e'
  1780  0362  3472               	retlw	114	;'r'
  1781  0363  3420               	retlw	32	;' '
  1782  0364  3465               	retlw	101	;'e'
  1783  0365  3472               	retlw	114	;'r'
  1784  0366  3472               	retlw	114	;'r'
  1785  0367  346F               	retlw	111	;'o'
  1786  0368  3472               	retlw	114	;'r'
  1787  0369  3400               	retlw	0
  1788                           
  1789                           	psect	stringtext8
  1790  0377                     __pstringtext8:	
  1791  0377                     STR_16:	
  1792  0377  3441               	retlw	65	;'A'
  1793  0378  3454               	retlw	84	;'T'
  1794  0379  342B               	retlw	43	;'+'
  1795  037A  3443               	retlw	67	;'C'
  1796  037B  3449               	retlw	73	;'I'
  1797  037C  3450               	retlw	80	;'P'
  1798  037D  3453               	retlw	83	;'S'
  1799  037E  3445               	retlw	69	;'E'
  1800  037F  344E               	retlw	78	;'N'
  1801  0380  3444               	retlw	68	;'D'
  1802  0381  343D               	retlw	61	;'='
  1803  0382  3400               	retlw	0
  1804                           
  1805                           	psect	stringtext9
  1806  038F                     __pstringtext9:	
  1807  038F                     STR_10:	
  1808  038F  3441               	retlw	65	;'A'
  1809  0390  3454               	retlw	84	;'T'
  1810  0391  342B               	retlw	43	;'+'
  1811  0392  3443               	retlw	67	;'C'
  1812  0393  3457               	retlw	87	;'W'
  1813  0394  344A               	retlw	74	;'J'
  1814  0395  3441               	retlw	65	;'A'
  1815  0396  3450               	retlw	80	;'P'
  1816  0397  343D               	retlw	61	;'='
  1817  0398  3422               	retlw	34	;'"'
  1818  0399  3400               	retlw	0
  1819                           
  1820                           	psect	stringtext10
  1821  039A                     __pstringtext10:	
  1822  039A                     STR_3:	
  1823  039A  3453               	retlw	83	;'S'
  1824  039B  3445               	retlw	69	;'E'
  1825  039C  344E               	retlw	78	;'N'
  1826  039D  3444               	retlw	68	;'D'
  1827  039E  3420               	retlw	32	;' '
  1828  039F  3446               	retlw	70	;'F'
  1829  03A0  3441               	retlw	65	;'A'
  1830  03A1  3449               	retlw	73	;'I'
  1831  03A2  344C               	retlw	76	;'L'
  1832  03A3  3400               	retlw	0
  1833                           
  1834                           	psect	stringtext11
  1835  03C0                     __pstringtext11:	
  1836  03C0                     STR_1:	
  1837  03C0  3453               	retlw	83	;'S'
  1838  03C1  3445               	retlw	69	;'E'
  1839  03C2  344E               	retlw	78	;'N'
  1840  03C3  3444               	retlw	68	;'D'
  1841  03C4  3420               	retlw	32	;' '
  1842  03C5  344F               	retlw	79	;'O'
  1843  03C6  344B               	retlw	75	;'K'
  1844  03C7  3400               	retlw	0
  1845                           
  1846                           	psect	stringtext12
  1847  03C8                     __pstringtext12:	
  1848  03C8                     STR_6:	
  1849  03C8  3443               	retlw	67	;'C'
  1850  03C9  344F               	retlw	79	;'O'
  1851  03CA  344E               	retlw	78	;'N'
  1852  03CB  344E               	retlw	78	;'N'
  1853  03CC  3445               	retlw	69	;'E'
  1854  03CD  3443               	retlw	67	;'C'
  1855  03CE  3454               	retlw	84	;'T'
  1856  03CF  3400               	retlw	0
  1857                           
  1858                           	psect	stringtext13
  1859  03D0                     __pstringtext13:	
  1860  03D0                     STR_22:	
  1861  03D0  3462               	retlw	98	;'b'
  1862  03D1  346D               	retlw	109	;'m'
  1863  03D2  346F               	retlw	111	;'o'
  1864  03D3  3464               	retlw	100	;'d'
  1865  03D4  3465               	retlw	101	;'e'
  1866  03D5  340A               	retlw	10
  1867  03D6  3400               	retlw	0
  1868                           
  1869                           	psect	stringtext14
  1870  03D7                     __pstringtext14:	
  1871  03D7                     STR_21:	
  1872  03D7  3474               	retlw	116	;'t'
  1873  03D8  346D               	retlw	109	;'m'
  1874  03D9  346F               	retlw	111	;'o'
  1875  03DA  3464               	retlw	100	;'d'
  1876  03DB  3465               	retlw	101	;'e'
  1877  03DC  340A               	retlw	10
  1878  03DD  3400               	retlw	0
  1879                           
  1880                           	psect	stringtext15
  1881  03DE                     __pstringtext15:	
  1882  03DE                     STR_7:	
  1883  03DE  3443               	retlw	67	;'C'
  1884  03DF  344C               	retlw	76	;'L'
  1885  03E0  344F               	retlw	79	;'O'
  1886  03E1  3453               	retlw	83	;'S'
  1887  03E2  3445               	retlw	69	;'E'
  1888  03E3  3444               	retlw	68	;'D'
  1889  03E4  3400               	retlw	0
  1890                           
  1891                           	psect	stringtext16
  1892  03EC                     __pstringtext16:	
  1893  03EC                     STR_4:	
  1894  03EC  3445               	retlw	69	;'E'
  1895  03ED  3452               	retlw	82	;'R'
  1896  03EE  3452               	retlw	82	;'R'
  1897  03EF  344F               	retlw	79	;'O'
  1898  03F0  3452               	retlw	82	;'R'
  1899  03F1  3400               	retlw	0
  1900                           
  1901                           	psect	stringtext17
  1902  0416                     __pstringtext17:	
  1903  0416                     STR_8:	
  1904  0416  3441               	retlw	65	;'A'
  1905  0417  3454               	retlw	84	;'T'
  1906  0418  340D               	retlw	13
  1907  0419  340A               	retlw	10
  1908  041A  3400               	retlw	0
  1909                           
  1910                           	psect	stringtext18
  1911  041B                     __pstringtext18:	
  1912  041B                     STR_5:	
  1913  041B  342B               	retlw	43	;'+'
  1914  041C  3449               	retlw	73	;'I'
  1915  041D  3450               	retlw	80	;'P'
  1916  041E  3444               	retlw	68	;'D'
  1917  041F  3400               	retlw	0
  1918                           
  1919                           	psect	stringtext19
  1920  0425                     __pstringtext19:	
  1921  0425                     STR_20:	
  1922  0425  344F               	retlw	79	;'O'
  1923  0426  346B               	retlw	107	;'k'
  1924  0427  340A               	retlw	10
  1925  0428  3400               	retlw	0
  1926                           
  1927                           	psect	stringtext20
  1928  0429                     __pstringtext20:	
  1929  0429                     STR_12:	
  1930  0429  3422               	retlw	34	;'"'
  1931  042A  340D               	retlw	13
  1932  042B  340A               	retlw	10
  1933  042C  3400               	retlw	0
  1934                           
  1935                           	psect	stringtext21
  1936  042D                     __pstringtext21:	
  1937  042D                     STR_11:	
  1938  042D  3422               	retlw	34	;'"'
  1939  042E  342C               	retlw	44	;','
  1940  042F  3422               	retlw	34	;'"'
  1941  0430  3400               	retlw	0
  1942                           
  1943                           	psect	stringtext22
  1944  0439                     __pstringtext22:	
  1945  0439                     STR_23:	
  1946  0439  3443               	retlw	67	;'C'
  1947  043A  3448               	retlw	72	;'H'
  1948  043B  3400               	retlw	0
  1949                           
  1950                           	psect	stringtext23
  1951  043C                     __pstringtext23:	
  1952  043C                     STR_24:	
  1953  043C  3443               	retlw	67	;'C'
  1954  043D  344C               	retlw	76	;'L'
  1955  043E  3400               	retlw	0
  1956                           
  1957                           	psect	stringtext24
  1958  044B                     __pstringtext24:	
  1959  044B                     STR_17:	
  1960  044B  342C               	retlw	44	;','
  1961  044C  3400               	retlw	0
  1962                           
  1963                           	psect	stringtext25
  1964  044D                     __pstringtext25:	
  1965  044D                     STR_15:	
  1966  044D  343A               	retlw	58	;':'
  1967  044E  3400               	retlw	0
  1968                           
  1969                           	psect	stringtext26
  1970  0000                     __pstringtext26:	
  1971  042A                     
  1972                           ; #config settings
  1973  0000                     
  1974                           	psect	cinit
  1975  003F                     start_initialization:	
  1976  003F                     __initialization:	
  1977  003F  3020               	movlw	low __pbssBANK0
  1978                           
  1979                           ; Clear objects allocated to COMMON
  1980  0040  01FA               	clrf	__pbssCOMMON& (0+127)
  1981  0041  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  1982                           
  1983                           ; Clear objects allocated to BANK0
  1984  0042  0084               	movwf	4
  1985  0043  3000               	movlw	high __pbssBANK0
  1986  0044  0085               	movwf	5
  1987  0045  3030               	movlw	48
  1988  0046  23F2               	fcall	clear_ram0
  1989                           
  1990                           ; Clear objects allocated to BANK1
  1991  0047  30A0               	movlw	low __pbssBANK1
  1992  0048  0084               	movwf	4
  1993  0049  3000               	movlw	high __pbssBANK1
  1994  004A  0085               	movwf	5
  1995  004B  3020               	movlw	32
  1996  004C  23F2               	fcall	clear_ram0
  1997  004D                     end_of_initialization:	
  1998                           ;End of C runtime variable initialization code
  1999                           
  2000  004D                     __end_of__initialization:	
  2001  004D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2002  004E  0020               	movlb	0
  2003  004F  2923               	ljmp	_main	;jump to C main() function
  2004                           
  2005                           	psect	bssCOMMON
  2006  007A                     __pbssCOMMON:	
  2007  007A                     _eusartTxBufferRemaining:	
  2008  007A                     	ds	1
  2009  007B                     _eusartTxHead:	
  2010  007B                     	ds	1
  2011                           
  2012                           	psect	bssBANK0
  2013  0020                     __pbssBANK0:	
  2014  0020                     _eusartRxBuffer:	
  2015  0020                     	ds	8
  2016  0028                     _TMR1_InterruptHandler:	
  2017  0028                     	ds	2
  2018  002A                     _timer1ReloadVal:	
  2019  002A                     	ds	2
  2020  002C                     _ADC_value:	
  2021  002C                     	ds	2
  2022  002E                     _EUSART_RxDefaultInterruptHandler:	
  2023  002E                     	ds	2
  2024  0030                     _EUSART_TxDefaultInterruptHandler:	
  2025  0030                     	ds	2
  2026  0032                     _WIFI_tx_buf_ind:	
  2027  0032                     	ds	1
  2028  0033                     _IOC_value:	
  2029  0033                     	ds	1
  2030  0034                     _TMR1_state:	
  2031  0034                     	ds	1
  2032  0035                     _ADC_count:	
  2033  0035                     	ds	1
  2034  0036                     _message_format:	
  2035  0036                     	ds	1
  2036  0037                     _ESP_wait_exception:	
  2037  0037                     	ds	1
  2038  0038                     _esp_channel:	
  2039  0038                     	ds	1
  2040  0039                     _esp_read_data_index:	
  2041  0039                     	ds	1
  2042  003A                     _IOC_state:	
  2043  003A                     	ds	1
  2044  003B                     _eusartRxCount:	
  2045  003B                     	ds	1
  2046  003C                     _eusartRxTail:	
  2047  003C                     	ds	1
  2048  003D                     _eusartRxHead:	
  2049  003D                     	ds	1
  2050  003E                     _eusartTxTail:	
  2051  003E                     	ds	1
  2052  003F                     _ADC_state:	
  2053  003F                     	ds	1
  2054  0040                     _WIFI_tx_buf:	
  2055  0040                     	ds	16
  2056                           
  2057                           	psect	bssBANK1
  2058  00A0                     __pbssBANK1:	
  2059  00A0                     _eusartTxBuffer:	
  2060  00A0                     	ds	16
  2061  00B0                     _esp_read_data:	
  2062  00B0                     	ds	16
  2063                           
  2064                           	psect	clrtext
  2065  03F2                     clear_ram0:	
  2066                           ;	Called with FSR0 containing the base address, and
  2067                           ;	WREG with the size to clear
  2068                           
  2069  03F2  0064               	clrwdt	;clear the watchdog before getting into this loop
  2070  03F3                     clrloop0:	
  2071  03F3  0180               	clrf	0	;clear RAM location pointed to by FSR
  2072  03F4  3101               	addfsr 0,1
  2073  03F5  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2074  03F6  2BF3               	goto	clrloop0	;have we reached the end yet?
  2075  03F7  3400               	retlw	0	;all done for this memory range, return
  2076                           
  2077                           	psect	cstackCOMMON
  2078  0070                     __pcstackCOMMON:	
  2079  0070                     ?_PIN_MANAGER_IOC:	
  2080  0070                     ??_PIN_MANAGER_IOC:	
  2081                           ; 1 bytes @ 0x0
  2082                           
  2083  0070                     ?_TMR1_ISR:	
  2084                           ; 1 bytes @ 0x0
  2085                           
  2086  0070                     ?_EUSART_Receive_ISR:	
  2087                           ; 1 bytes @ 0x0
  2088                           
  2089  0070                     ??_EUSART_Receive_ISR:	
  2090                           ; 1 bytes @ 0x0
  2091                           
  2092  0070                     ?_EUSART_Transmit_ISR:	
  2093                           ; 1 bytes @ 0x0
  2094                           
  2095  0070                     ??_EUSART_Transmit_ISR:	
  2096                           ; 1 bytes @ 0x0
  2097                           
  2098  0070                     ?_PIN_MANAGER_Initialize:	
  2099                           ; 1 bytes @ 0x0
  2100                           
  2101  0070                     ?_OSCILLATOR_Initialize:	
  2102                           ; 1 bytes @ 0x0
  2103                           
  2104  0070                     ?_WDT_Initialize:	
  2105                           ; 1 bytes @ 0x0
  2106                           
  2107  0070                     ?_TMR1_Initialize:	
  2108                           ; 1 bytes @ 0x0
  2109                           
  2110  0070                     ?_TMR1_DefaultInterruptHandler:	
  2111                           ; 1 bytes @ 0x0
  2112                           
  2113  0070                     ??_TMR1_DefaultInterruptHandler:	
  2114                           ; 1 bytes @ 0x0
  2115                           
  2116  0070                     ?_IOCAF4_DefaultInterruptHandler:	
  2117                           ; 1 bytes @ 0x0
  2118                           
  2119  0070                     ??_IOCAF4_DefaultInterruptHandler:	
  2120                           ; 1 bytes @ 0x0
  2121                           
  2122  0070                     ?_IOCAF4_ISR:	
  2123                           ; 1 bytes @ 0x0
  2124                           
  2125  0070                     ??_IOCAF4_ISR:	
  2126                           ; 1 bytes @ 0x0
  2127                           
  2128  0070                     ?_logger_initialize:	
  2129                           ; 1 bytes @ 0x0
  2130                           
  2131  0070                     ?_bt_message_handler:	
  2132                           ; 1 bytes @ 0x0
  2133                           
  2134  0070                     ?_read_analog:	
  2135                           ; 1 bytes @ 0x0
  2136                           
  2137  0070                     ?_process_ioc:	
  2138                           ; 1 bytes @ 0x0
  2139                           
  2140  0070                     ?__TMR1_Ready:	
  2141                           ; 1 bytes @ 0x0
  2142                           
  2143  0070                     ??__TMR1_Ready:	
  2144                           ; 1 bytes @ 0x0
  2145                           
  2146  0070                     ?__IOC_Ready:	
  2147                           ; 1 bytes @ 0x0
  2148                           
  2149  0070                     ??__IOC_Ready:	
  2150                           ; 1 bytes @ 0x0
  2151                           
  2152  0070                     ?_toggle_format:	
  2153                           ; 1 bytes @ 0x0
  2154                           
  2155  0070                     ?_ADC_Initialize:	
  2156                           ; 1 bytes @ 0x0
  2157                           
  2158  0070                     ?_ADC_SelectChannel:	
  2159                           ; 1 bytes @ 0x0
  2160                           
  2161  0070                     ?_ADC_StartConversion:	
  2162                           ; 1 bytes @ 0x0
  2163                           
  2164  0070                     ?_ADC_ISR:	
  2165                           ; 1 bytes @ 0x0
  2166                           
  2167  0070                     ??_ADC_ISR:	
  2168                           ; 1 bytes @ 0x0
  2169                           
  2170  0070                     ?_INTERRUPT_InterruptManager:	
  2171                           ; 1 bytes @ 0x0
  2172                           
  2173  0070                     ?_EUSART_Initialize:	
  2174                           ; 1 bytes @ 0x0
  2175                           
  2176  0070                     ?_EUSART_is_tx_ready:	
  2177                           ; 1 bytes @ 0x0
  2178                           
  2179  0070                     ?_EUSART_is_rx_ready:	
  2180                           ; 1 bytes @ 0x0
  2181                           
  2182  0070                     ?_EUSART_Read:	
  2183                           ; 1 bytes @ 0x0
  2184                           
  2185  0070                     ?_EUSART_Write:	
  2186                           ; 1 bytes @ 0x0
  2187                           
  2188  0070                     ?_SYSTEM_Initialize:	
  2189                           ; 1 bytes @ 0x0
  2190                           
  2191  0070                     ?_TMR1_StartTimer:	
  2192                           ; 1 bytes @ 0x0
  2193                           
  2194  0070                     ?_TMR1_StopTimer:	
  2195                           ; 1 bytes @ 0x0
  2196                           
  2197  0070                     ?_TMR1_WriteTimer:	
  2198                           ; 1 bytes @ 0x0
  2199                           
  2200  0070                     ?_main:	
  2201                           ; 1 bytes @ 0x0
  2202                           
  2203  0070                     ?i1_ADC_StartConversion:	
  2204                           ; 1 bytes @ 0x0
  2205                           
  2206  0070                     ??i1_ADC_StartConversion:	
  2207                           ; 1 bytes @ 0x0
  2208                           
  2209  0070                     ?_ADC_GetConversionResult:	
  2210                           ; 1 bytes @ 0x0
  2211                           
  2212  0070                     TMR1_WriteTimer@timerVal:	
  2213                           ; 2 bytes @ 0x0
  2214                           
  2215                           
  2216                           ; 2 bytes @ 0x0
  2217  0070                     	ds	2
  2218  0072                     ??_TMR1_ISR:	
  2219  0072                     ?_EUSART_SetRxInterruptHandler:	
  2220                           ; 1 bytes @ 0x2
  2221                           
  2222  0072                     ?_EUSART_SetTxInterruptHandler:	
  2223                           ; 1 bytes @ 0x2
  2224                           
  2225  0072                     ??_OSCILLATOR_Initialize:	
  2226                           ; 1 bytes @ 0x2
  2227                           
  2228  0072                     ??_WDT_Initialize:	
  2229                           ; 1 bytes @ 0x2
  2230                           
  2231  0072                     ?_TMR1_SetInterruptHandler:	
  2232                           ; 1 bytes @ 0x2
  2233                           
  2234  0072                     ?_IOCAF4_SetInterruptHandler:	
  2235                           ; 1 bytes @ 0x2
  2236                           
  2237  0072                     ?_ESP_Set_application_handler:	
  2238                           ; 1 bytes @ 0x2
  2239                           
  2240  0072                     ??_ADC_Initialize:	
  2241                           ; 1 bytes @ 0x2
  2242                           
  2243  0072                     ??_ADC_SelectChannel:	
  2244                           ; 1 bytes @ 0x2
  2245                           
  2246  0072                     ??_ADC_StartConversion:	
  2247                           ; 1 bytes @ 0x2
  2248                           
  2249  0072                     ??_ADC_GetConversionResult:	
  2250                           ; 1 bytes @ 0x2
  2251                           
  2252  0072                     ??_INTERRUPT_InterruptManager:	
  2253                           ; 1 bytes @ 0x2
  2254                           
  2255  0072                     ??_EUSART_is_tx_ready:	
  2256                           ; 1 bytes @ 0x2
  2257                           
  2258  0072                     ??_EUSART_is_rx_ready:	
  2259                           ; 1 bytes @ 0x2
  2260                           
  2261  0072                     ??_EUSART_Read:	
  2262                           ; 1 bytes @ 0x2
  2263                           
  2264  0072                     ??_EUSART_Write:	
  2265                           ; 1 bytes @ 0x2
  2266                           
  2267  0072                     ??_TMR1_StartTimer:	
  2268                           ; 1 bytes @ 0x2
  2269                           
  2270  0072                     ??_TMR1_StopTimer:	
  2271                           ; 1 bytes @ 0x2
  2272                           
  2273  0072                     ??_TMR1_WriteTimer:	
  2274                           ; 1 bytes @ 0x2
  2275                           
  2276  0072                     ?___lwdiv:	
  2277                           ; 1 bytes @ 0x2
  2278                           
  2279  0072                     ?___lwmod:	
  2280                           ; 2 bytes @ 0x2
  2281                           
  2282  0072                     ?___lmul:	
  2283                           ; 2 bytes @ 0x2
  2284                           
  2285  0072                     EUSART_Read@readValue:	
  2286                           ; 4 bytes @ 0x2
  2287                           
  2288  0072                     EUSART_Write@txData:	
  2289                           ; 1 bytes @ 0x2
  2290                           
  2291  0072                     EUSART_SetTxInterruptHandler@interruptHandler:	
  2292                           ; 1 bytes @ 0x2
  2293                           
  2294  0072                     EUSART_SetRxInterruptHandler@interruptHandler:	
  2295                           ; 2 bytes @ 0x2
  2296                           
  2297  0072                     TMR1_SetInterruptHandler@InterruptHandler:	
  2298                           ; 2 bytes @ 0x2
  2299                           
  2300  0072                     IOCAF4_SetInterruptHandler@InterruptHandler:	
  2301                           ; 2 bytes @ 0x2
  2302                           
  2303  0072                     ESP_Set_application_handler@applicationHandler:	
  2304                           ; 2 bytes @ 0x2
  2305                           
  2306  0072                     ___lwdiv@divisor:	
  2307                           ; 2 bytes @ 0x2
  2308                           
  2309  0072                     ___lwmod@divisor:	
  2310                           ; 2 bytes @ 0x2
  2311                           
  2312  0072                     ___lmul@multiplier:	
  2313                           ; 2 bytes @ 0x2
  2314                           
  2315                           
  2316                           ; 4 bytes @ 0x2
  2317  0072                     	ds	1
  2318  0073                     ?__puts:	
  2319  0073                     ?_write:	
  2320                           ; 1 bytes @ 0x3
  2321                           
  2322  0073                     ADC_SelectChannel@channel:	
  2323                           ; 1 bytes @ 0x3
  2324                           
  2325  0073                     write@lenght:	
  2326                           ; 1 bytes @ 0x3
  2327                           
  2328  0073                     __puts@pt:	
  2329                           ; 1 bytes @ 0x3
  2330                           
  2331                           
  2332                           ; 2 bytes @ 0x3
  2333  0073                     	ds	1
  2334  0074                     ??_EUSART_SetRxInterruptHandler:	
  2335  0074                     ??_EUSART_SetTxInterruptHandler:	
  2336                           ; 1 bytes @ 0x4
  2337                           
  2338  0074                     ??_PIN_MANAGER_Initialize:	
  2339                           ; 1 bytes @ 0x4
  2340                           
  2341  0074                     ??_TMR1_Initialize:	
  2342                           ; 1 bytes @ 0x4
  2343                           
  2344  0074                     ??_TMR1_SetInterruptHandler:	
  2345                           ; 1 bytes @ 0x4
  2346                           
  2347  0074                     ??_IOCAF4_SetInterruptHandler:	
  2348                           ; 1 bytes @ 0x4
  2349                           
  2350  0074                     ??_logger_initialize:	
  2351                           ; 1 bytes @ 0x4
  2352                           
  2353  0074                     ??_ESP_Set_application_handler:	
  2354                           ; 1 bytes @ 0x4
  2355                           
  2356  0074                     ??_EUSART_Initialize:	
  2357                           ; 1 bytes @ 0x4
  2358                           
  2359  0074                     ??_SYSTEM_Initialize:	
  2360                           ; 1 bytes @ 0x4
  2361                           
  2362  0074                     ??_write:	
  2363                           ; 1 bytes @ 0x4
  2364                           
  2365  0074                     ___lwdiv@dividend:	
  2366                           ; 1 bytes @ 0x4
  2367                           
  2368  0074                     ___lwmod@dividend:	
  2369                           ; 2 bytes @ 0x4
  2370                           
  2371                           
  2372                           ; 2 bytes @ 0x4
  2373  0074                     	ds	1
  2374  0075                     ??__puts:	
  2375  0075                     write@i:	
  2376                           ; 1 bytes @ 0x5
  2377                           
  2378                           
  2379                           ; 1 bytes @ 0x5
  2380  0075                     	ds	1
  2381  0076                     ??___lwdiv:	
  2382  0076                     ??___lwmod:	
  2383                           ; 1 bytes @ 0x6
  2384                           
  2385  0076                     write@pt:	
  2386                           ; 1 bytes @ 0x6
  2387                           
  2388  0076                     ___lwmod@counter:	
  2389                           ; 1 bytes @ 0x6
  2390                           
  2391  0076                     ___lwdiv@quotient:	
  2392                           ; 1 bytes @ 0x6
  2393                           
  2394  0076                     ___lmul@multiplicand:	
  2395                           ; 2 bytes @ 0x6
  2396                           
  2397                           
  2398                           ; 4 bytes @ 0x6
  2399  0076                     	ds	2
  2400  0078                     __puts@index:	
  2401  0078                     ___lwdiv@counter:	
  2402                           ; 1 bytes @ 0x8
  2403                           
  2404                           
  2405                           ; 1 bytes @ 0x8
  2406  0078                     	ds	1
  2407  0079                     ??_process_ioc:	
  2408  0079                     ?_process_message:	
  2409                           ; 1 bytes @ 0x9
  2410                           
  2411  0079                     ??_toggle_format:	
  2412                           ; 1 bytes @ 0x9
  2413                           
  2414  0079                     ??__sprintf:	
  2415                           ; 1 bytes @ 0x9
  2416                           
  2417  0079                     process_message@message:	
  2418                           ; 1 bytes @ 0x9
  2419                           
  2420                           
  2421                           ; 1 bytes @ 0x9
  2422  0079                     	ds	1
  2423  007A                     ??_bt_message_handler:	
  2424  007A                     ??___lmul:	
  2425                           ; 1 bytes @ 0xA
  2426                           
  2427                           
  2428                           	psect	cstackBANK0
  2429  0050                     __pcstackBANK0:	
  2430                           ; 1 bytes @ 0xA
  2431                           
  2432  0050                     ??_process_message:	
  2433  0050                     ?__sprintf:	
  2434                           ; 1 bytes @ 0x0
  2435                           
  2436  0050                     __sprintf@val:	
  2437                           ; 1 bytes @ 0x0
  2438                           
  2439  0050                     ___lmul@product:	
  2440                           ; 2 bytes @ 0x0
  2441                           
  2442                           
  2443                           ; 4 bytes @ 0x0
  2444  0050                     	ds	2
  2445  0052                     bt_message_handler@message:	
  2446  0052                     __sprintf@aux:	
  2447                           ; 1 bytes @ 0x2
  2448                           
  2449                           
  2450                           ; 2 bytes @ 0x2
  2451  0052                     	ds	2
  2452  0054                     __sprintf@mess:	
  2453                           
  2454                           ; 1 bytes @ 0x4
  2455  0054                     	ds	1
  2456  0055                     ??_read_analog:	
  2457                           
  2458                           ; 1 bytes @ 0x5
  2459  0055                     	ds	4
  2460  0059                     read_analog@mess:	
  2461                           
  2462                           ; 6 bytes @ 0x9
  2463  0059                     	ds	6
  2464  005F                     read_analog@aux1:	
  2465                           
  2466                           ; 4 bytes @ 0xF
  2467  005F                     	ds	4
  2468  0063                     read_analog@adc_val:	
  2469                           
  2470                           ; 2 bytes @ 0x13
  2471  0063                     	ds	2
  2472  0065                     ??_main:	
  2473                           
  2474                           ; 1 bytes @ 0x15
  2475  0065                     	ds	2
  2476                           
  2477                           	psect	maintext
  2478  0123                     __pmaintext:	
  2479 ;;
  2480 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2481 ;;
  2482 ;; *************** function _main *****************
  2483 ;; Defined at:
  2484 ;;		line 51 in file "main.c"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;		None
  2487 ;; Auto vars:     Size  Location     Type
  2488 ;;		None
  2489 ;; Return value:  Size  Location     Type
  2490 ;;                  1    wreg      void 
  2491 ;; Registers used:
  2492 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2493 ;; Tracked objects:
  2494 ;;		On entry : B1F/0
  2495 ;;		On exit  : 0/0
  2496 ;;		Unchanged: 0/0
  2497 ;; Data sizes:     COMMON   BANK0   BANK1
  2498 ;;      Params:         0       0       0
  2499 ;;      Locals:         0       0       0
  2500 ;;      Temps:          0       2       0
  2501 ;;      Totals:         0       2       0
  2502 ;;Total ram usage:        2 bytes
  2503 ;; Hardware stack levels required when called:    9
  2504 ;; This function calls:
  2505 ;;		_EUSART_is_rx_ready
  2506 ;;		_SYSTEM_Initialize
  2507 ;;		_bt_message_handler
  2508 ;;		_logger_initialize
  2509 ;;		_process_ioc
  2510 ;;		_read_analog
  2511 ;; This function is called by:
  2512 ;;		Startup code after reset
  2513 ;; This function uses a non-reentrant model
  2514 ;;
  2515                           
  2516                           
  2517                           ;psect for function _main
  2518  0123                     _main:	
  2519                           
  2520                           ;main.c: 54:     SYSTEM_Initialize();
  2521                           
  2522                           ;incstack = 0
  2523                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2524  0123  23F8               	fcall	_SYSTEM_Initialize
  2525                           
  2526                           ;main.c: 60:     logger_initialize();
  2527  0124  2200               	fcall	_logger_initialize
  2528                           
  2529                           ;main.c: 67:     (INTCONbits.GIE = 1);
  2530  0125  178B               	bsf	11,7	;volatile
  2531                           
  2532                           ;main.c: 73:     (INTCONbits.PEIE = 1);
  2533  0126  170B               	bsf	11,6	;volatile
  2534  0127  0022               	movlb	2	; select bank2
  2535  0128  168C               	bsf	12,5	;volatile
  2536                           
  2537                           ;main.c: 79:     _delay((unsigned long)((200)*(32000000/4000.0)));
  2538  0129  3009               	movlw	9
  2539  012A  0020               	movlb	0	; select bank0
  2540  012B  00E6               	movwf	??_main+1
  2541  012C  301E               	movlw	30
  2542  012D  00E5               	movwf	??_main
  2543  012E  30E4               	movlw	228
  2544  012F                     u1047:	
  2545  012F  0B89               	decfsz	9,f
  2546  0130  292F               	goto	u1047
  2547  0131  0BE5               	decfsz	??_main,f
  2548  0132  292F               	goto	u1047
  2549  0133  0BE6               	decfsz	??_main+1,f
  2550  0134  292F               	goto	u1047
  2551  0135  0000               	nop
  2552  0136  0022               	movlb	2	; select bank2
  2553  0137  128C               	bcf	12,5	;volatile
  2554                           
  2555                           ;main.c: 81:     _delay((unsigned long)((200)*(32000000/4000.0)));
  2556  0138  3009               	movlw	9
  2557  0139  0020               	movlb	0	; select bank0
  2558  013A  00E6               	movwf	??_main+1
  2559  013B  301E               	movlw	30
  2560  013C  00E5               	movwf	??_main
  2561  013D  30E4               	movlw	228
  2562  013E                     u1057:	
  2563  013E  0B89               	decfsz	9,f
  2564  013F  293E               	goto	u1057
  2565  0140  0BE5               	decfsz	??_main,f
  2566  0141  293E               	goto	u1057
  2567  0142  0BE6               	decfsz	??_main+1,f
  2568  0143  293E               	goto	u1057
  2569  0144  0000               	nop
  2570  0145                     l2358:	
  2571                           
  2572                           ;main.c: 95:     {;main.c: 98:         if (EUSART_is_rx_ready()) {
  2573  0145  2445               	fcall	_EUSART_is_rx_ready
  2574  0146  3A00               	xorlw	0
  2575  0147  1903               	skipnz
  2576  0148  294A               	goto	l2362
  2577                           
  2578                           ;main.c: 100:                 bt_message_handler();
  2579  0149  2420               	fcall	_bt_message_handler
  2580  014A                     l2362:	
  2581                           
  2582                           ;main.c: 106:         if (ADC_state == ADC_READY) {
  2583  014A  0020               	movlb	0	; select bank0
  2584  014B  0B3F               	decfsz	_ADC_state,w	;volatile
  2585  014C  294E               	goto	l2366
  2586                           
  2587                           ;main.c: 107:             read_analog();
  2588  014D  2050               	fcall	_read_analog
  2589  014E                     l2366:	
  2590                           
  2591                           ;main.c: 110:         if (IOC_state == IOC_READY) {
  2592  014E  0020               	movlb	0	; select bank0
  2593  014F  0B3A               	decfsz	_IOC_state,w	;volatile
  2594  0150  2952               	goto	l368
  2595                           
  2596                           ;main.c: 111:             process_ioc();
  2597  0151  2334               	fcall	_process_ioc
  2598  0152                     l368:	
  2599                           ;main.c: 112:         }
  2600                           
  2601  0152  0064               	clrwdt	;# 
  2602  0153  2945               	goto	l2358
  2603  0154                     __end_of_main:	
  2604                           
  2605                           	psect	text1
  2606  0050                     __ptext1:	
  2607 ;; *************** function _read_analog *****************
  2608 ;; Defined at:
  2609 ;;		line 97 in file "logger.c"
  2610 ;; Parameters:    Size  Location     Type
  2611 ;;		None
  2612 ;; Auto vars:     Size  Location     Type
  2613 ;;  mess            6    9[BANK0 ] unsigned char [6]
  2614 ;;  aux1            4   15[BANK0 ] unsigned long 
  2615 ;;  adc_val         2   19[BANK0 ] unsigned short 
  2616 ;; Return value:  Size  Location     Type
  2617 ;;                  1    wreg      void 
  2618 ;; Registers used:
  2619 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2620 ;; Tracked objects:
  2621 ;;		On entry : 1F/0
  2622 ;;		On exit  : 1E/0
  2623 ;;		Unchanged: 0/0
  2624 ;; Data sizes:     COMMON   BANK0   BANK1
  2625 ;;      Params:         0       0       0
  2626 ;;      Locals:         0      12       0
  2627 ;;      Temps:          0       4       0
  2628 ;;      Totals:         0      16       0
  2629 ;;Total ram usage:       16 bytes
  2630 ;; Hardware stack levels used:    1
  2631 ;; Hardware stack levels required when called:    6
  2632 ;; This function calls:
  2633 ;;		___lmul
  2634 ;;		__sprintf
  2635 ;;		_write
  2636 ;; This function is called by:
  2637 ;;		_main
  2638 ;; This function uses a non-reentrant model
  2639 ;;
  2640                           
  2641                           
  2642                           ;psect for function _read_analog
  2643  0050                     _read_analog:	
  2644                           
  2645                           ;logger.c: 99:     unsigned short adc_val;;logger.c: 101:     unsigned long aux1;;logger
      +                          .c: 102:     unsigned char mess[6];;logger.c: 104:     adc_val = ADC_value;
  2646                           
  2647                           ;incstack = 0
  2648                           ; Regs used in _read_analog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2649  0050  082D               	movf	_ADC_value+1,w	;volatile
  2650  0051  00E4               	movwf	read_analog@adc_val+1
  2651  0052  082C               	movf	_ADC_value,w	;volatile
  2652  0053  00E3               	movwf	read_analog@adc_val
  2653                           
  2654                           ;logger.c: 105:     ADC_state = ADC_IDLE;
  2655  0054  01BF               	clrf	_ADC_state	;volatile
  2656                           
  2657                           ;logger.c: 107:     if (message_format == MESSAGE_BINARY) {
  2658  0055  0836               	movf	_message_format,w	;volatile
  2659  0056  1D03               	btfss	3,2
  2660  0057  2870               	goto	l2334
  2661                           
  2662                           ;logger.c: 108:        WIFI_tx_buf[WIFI_tx_buf_ind++] = (unsigned char)(adc_val & 0xff);
  2663  0058  0832               	movf	_WIFI_tx_buf_ind,w
  2664  0059  3E40               	addlw	(low (_WIFI_tx_buf| 0))& (0+255)
  2665  005A  0086               	movwf	6
  2666  005B  0187               	clrf	7
  2667  005C  0863               	movf	read_analog@adc_val,w
  2668  005D  0081               	movwf	1
  2669  005E  0AB2               	incf	_WIFI_tx_buf_ind,f	;volatile
  2670                           
  2671                           ;logger.c: 109:        WIFI_tx_buf[WIFI_tx_buf_ind++] = (unsigned char)((adc_val >> 8) &
      +                           0xff);
  2672  005F  0832               	movf	_WIFI_tx_buf_ind,w
  2673  0060  3E40               	addlw	(low (_WIFI_tx_buf| 0))& (0+255)
  2674  0061  0086               	movwf	6
  2675  0062  0864               	movf	read_analog@adc_val+1,w
  2676  0063  0081               	movwf	1
  2677  0064  0AB2               	incf	_WIFI_tx_buf_ind,f	;volatile
  2678                           
  2679                           ;logger.c: 111:        if (WIFI_tx_buf_ind == 16) {
  2680  0065  3010               	movlw	16
  2681  0066  0632               	xorwf	_WIFI_tx_buf_ind,w	;volatile
  2682  0067  1D03               	btfss	3,2
  2683  0068  0008               	return
  2684                           
  2685                           ;logger.c: 113:                 write(WIFI_tx_buf,16);
  2686  0069  3010               	movlw	16
  2687  006A  00F3               	movwf	write@lenght
  2688  006B  3040               	movlw	(low (_WIFI_tx_buf| 0))& (0+255)
  2689  006C  22D3               	fcall	_write
  2690                           
  2691                           ;logger.c: 118:             WIFI_tx_buf_ind = 0;
  2692  006D  0020               	movlb	0	; select bank0
  2693  006E  01B2               	clrf	_WIFI_tx_buf_ind	;volatile
  2694  006F  0008               	return
  2695  0070                     l2334:	
  2696                           
  2697                           ;logger.c: 122:         aux1 = (unsigned long)adc_val*3300UL;
  2698  0070  0863               	movf	read_analog@adc_val,w
  2699  0071  00F2               	movwf	___lmul@multiplier
  2700  0072  0864               	movf	read_analog@adc_val+1,w
  2701  0073  00F3               	movwf	___lmul@multiplier+1
  2702  0074  300C               	movlw	12
  2703  0075  01F4               	clrf	___lmul@multiplier+2
  2704  0076  01F5               	clrf	___lmul@multiplier+3
  2705  0077  01F9               	clrf	___lmul@multiplicand+3
  2706  0078  01F8               	clrf	___lmul@multiplicand+2
  2707  0079  00F7               	movwf	___lmul@multiplicand+1
  2708  007A  30E4               	movlw	228
  2709  007B  00F6               	movwf	___lmul@multiplicand
  2710  007C  2179               	fcall	___lmul
  2711  007D  0875               	movf	?___lmul+3,w
  2712  007E  00E2               	movwf	read_analog@aux1+3
  2713  007F  0874               	movf	?___lmul+2,w
  2714  0080  00E1               	movwf	read_analog@aux1+2
  2715  0081  0873               	movf	?___lmul+1,w
  2716  0082  00E0               	movwf	read_analog@aux1+1
  2717  0083  0872               	movf	?___lmul,w
  2718  0084  00DF               	movwf	read_analog@aux1
  2719                           
  2720                           ;logger.c: 123:         adc_val = (unsigned short)(aux1 >> 10);
  2721  0085  00D5               	movwf	??_read_analog
  2722  0086  0860               	movf	read_analog@aux1+1,w
  2723  0087  00D6               	movwf	??_read_analog+1
  2724  0088  0861               	movf	read_analog@aux1+2,w
  2725  0089  00D7               	movwf	??_read_analog+2
  2726  008A  0862               	movf	read_analog@aux1+3,w
  2727  008B  00D8               	movwf	??_read_analog+3
  2728  008C  300A               	movlw	10
  2729  008D                     u1005:	
  2730  008D  36D8               	lsrf	??_read_analog+3,f
  2731  008E  0CD7               	rrf	??_read_analog+2,f
  2732  008F  0CD6               	rrf	??_read_analog+1,f
  2733  0090  0CD5               	rrf	??_read_analog,f
  2734  0091  0B89               	decfsz	9,f
  2735  0092  288D               	goto	u1005
  2736  0093  0856               	movf	??_read_analog+1,w
  2737  0094  00E4               	movwf	read_analog@adc_val+1
  2738  0095  0855               	movf	??_read_analog,w
  2739  0096  00E3               	movwf	read_analog@adc_val
  2740                           
  2741                           ;logger.c: 125:         _sprintf(mess,adc_val);
  2742  0097  0864               	movf	read_analog@adc_val+1,w
  2743  0098  00D1               	movwf	__sprintf@val+1
  2744  0099  0863               	movf	read_analog@adc_val,w
  2745  009A  00D0               	movwf	__sprintf@val
  2746  009B  3059               	movlw	(low (read_analog@mess| 0))& (0+255)
  2747  009C  20A3               	fcall	__sprintf
  2748                           
  2749                           ;logger.c: 126:         mess[5] = '\n';
  2750  009D  300A               	movlw	10
  2751  009E  00DE               	movwf	read_analog@mess+5
  2752                           
  2753                           ;logger.c: 128:             write(mess,6);
  2754  009F  3006               	movlw	6
  2755  00A0  00F3               	movwf	write@lenght
  2756  00A1  3059               	movlw	(low (read_analog@mess| 0))& (0+255)
  2757  00A2  2AD3               	ljmp	_write
  2758  00A3                     __end_of_read_analog:	
  2759                           
  2760                           	psect	text2
  2761  02D3                     __ptext2:	
  2762 ;; *************** function _write *****************
  2763 ;; Defined at:
  2764 ;;		line 15 in file "comm.c"
  2765 ;; Parameters:    Size  Location     Type
  2766 ;;  pt              1    wreg     PTR unsigned char 
  2767 ;;		 -> read_wifi_settings@pass(14), read_wifi_settings@wifi(10), read_analog@mess(6), WIFI_tx_buf(16), 
  2768 ;;		 -> ESP_write@res(1), ESP_write@aux(1), 
  2769 ;;  lenght          1    3[COMMON] unsigned char 
  2770 ;; Auto vars:     Size  Location     Type
  2771 ;;  pt              1    6[COMMON] PTR unsigned char 
  2772 ;;		 -> read_wifi_settings@pass(14), read_wifi_settings@wifi(10), read_analog@mess(6), WIFI_tx_buf(16), 
  2773 ;;		 -> ESP_write@res(1), ESP_write@aux(1), 
  2774 ;;  i               1    5[COMMON] unsigned char 
  2775 ;; Return value:  Size  Location     Type
  2776 ;;                  1    wreg      void 
  2777 ;; Registers used:
  2778 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2779 ;; Tracked objects:
  2780 ;;		On entry : 1F/0
  2781 ;;		On exit  : 1E/0
  2782 ;;		Unchanged: 0/0
  2783 ;; Data sizes:     COMMON   BANK0   BANK1
  2784 ;;      Params:         1       0       0
  2785 ;;      Locals:         2       0       0
  2786 ;;      Temps:          1       0       0
  2787 ;;      Totals:         4       0       0
  2788 ;;Total ram usage:        4 bytes
  2789 ;; Hardware stack levels used:    1
  2790 ;; Hardware stack levels required when called:    5
  2791 ;; This function calls:
  2792 ;;		_EUSART_Write
  2793 ;;		_EUSART_is_tx_ready
  2794 ;; This function is called by:
  2795 ;;		_read_analog
  2796 ;; This function uses a non-reentrant model
  2797 ;;
  2798                           
  2799                           
  2800                           ;psect for function _write
  2801  02D3                     _write:	
  2802                           
  2803                           ;incstack = 0
  2804                           ; Regs used in _write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2805                           ;write@pt stored from wreg
  2806  02D3  00F6               	movwf	write@pt
  2807                           
  2808                           ;comm.c: 15: void write(unsigned char *pt, unsigned char lenght);comm.c: 16: {;comm.c: 1
      +                          7:     unsigned char i;;comm.c: 19:     for (i=0; i<lenght; i++) {
  2809  02D4  01F5               	clrf	write@i
  2810  02D5                     l1994:	
  2811  02D5  0873               	movf	write@lenght,w
  2812  02D6  0275               	subwf	write@i,w
  2813  02D7  1803               	btfsc	3,0
  2814  02D8  0008               	return
  2815  02D9                     l1988:	
  2816  02D9  244F               	fcall	_EUSART_is_tx_ready
  2817  02DA  3A00               	xorlw	0
  2818  02DB  1903               	skipnz
  2819  02DC  2AD9               	goto	l1988
  2820                           
  2821                           ;comm.c: 21:         EUSART_Write(pt[i]);
  2822  02DD  0875               	movf	write@i,w
  2823  02DE  0776               	addwf	write@pt,w
  2824  02DF  00F4               	movwf	??_write
  2825  02E0  0086               	movwf	6
  2826  02E1  0187               	clrf	7
  2827  02E2  0801               	movf	1,w
  2828  02E3  221D               	fcall	_EUSART_Write
  2829                           
  2830                           ;comm.c: 22:     }
  2831  02E4  0AF5               	incf	write@i,f
  2832  02E5  2AD5               	goto	l1994
  2833  02E6                     __end_of_write:	
  2834                           
  2835                           	psect	text3
  2836  00A3                     __ptext3:	
  2837 ;; *************** function __sprintf *****************
  2838 ;; Defined at:
  2839 ;;		line 25 in file "comm.c"
  2840 ;; Parameters:    Size  Location     Type
  2841 ;;  mess            1    wreg     PTR unsigned char 
  2842 ;;		 -> read_analog@mess(6), 
  2843 ;;  val             2    0[BANK0 ] unsigned short 
  2844 ;; Auto vars:     Size  Location     Type
  2845 ;;  mess            1    4[BANK0 ] PTR unsigned char 
  2846 ;;		 -> read_analog@mess(6), 
  2847 ;;  aux             2    2[BANK0 ] unsigned short 
  2848 ;; Return value:  Size  Location     Type
  2849 ;;                  1    wreg      void 
  2850 ;; Registers used:
  2851 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2852 ;; Tracked objects:
  2853 ;;		On entry : 1F/0
  2854 ;;		On exit  : 1F/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMMON   BANK0   BANK1
  2857 ;;      Params:         0       2       0
  2858 ;;      Locals:         0       3       0
  2859 ;;      Temps:          0       0       0
  2860 ;;      Totals:         0       5       0
  2861 ;;Total ram usage:        5 bytes
  2862 ;; Hardware stack levels used:    1
  2863 ;; Hardware stack levels required when called:    5
  2864 ;; This function calls:
  2865 ;;		___lwdiv
  2866 ;;		___lwmod
  2867 ;; This function is called by:
  2868 ;;		_read_analog
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           
  2873                           ;psect for function __sprintf
  2874  00A3                     __sprintf:	
  2875                           
  2876                           ;incstack = 0
  2877                           ; Regs used in __sprintf: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2878                           ;__sprintf@mess stored from wreg
  2879  00A3  00D4               	movwf	__sprintf@mess
  2880                           
  2881                           ;comm.c: 25: void _sprintf(char *mess, unsigned short val);comm.c: 26: {;comm.c: 27:   u
      +                          nsigned short aux;;comm.c: 31:   aux = val%10;
  2882  00A4  20D7               	fcall	PL6	;call to abstracted procedure
  2883  00A5  21C0               	fcall	___lwmod
  2884                           
  2885                           ;comm.c: 32:   val /= 10;
  2886  00A6  20CB               	fcall	PL2	;call to abstracted procedure
  2887  00A7  2154               	fcall	___lwdiv
  2888                           
  2889                           ;comm.c: 34:   mess[5] = 0x00;
  2890  00A8  20DF               	fcall	PL8	;call to abstracted procedure
  2891  00A9  3E05               	addlw	5
  2892  00AA  0086               	movwf	6
  2893  00AB  0187               	clrf	7
  2894  00AC  0181               	clrf	1
  2895                           
  2896                           ;comm.c: 36:   mess[4] = (unsigned char)aux+'0';
  2897  00AD  0854               	movf	__sprintf@mess,w
  2898  00AE  3E04               	addlw	4
  2899  00AF  0086               	movwf	6
  2900  00B0  0852               	movf	__sprintf@aux,w
  2901  00B1  3E30               	addlw	48
  2902  00B2  0081               	movwf	1
  2903                           
  2904                           ;comm.c: 38:   aux = val%10;
  2905  00B3  20D7               	fcall	PL6	;call to abstracted procedure
  2906  00B4  21C0               	fcall	___lwmod
  2907                           
  2908                           ;comm.c: 39:   val /= 10;
  2909  00B5  20CB               	fcall	PL2	;call to abstracted procedure
  2910  00B6  2154               	fcall	___lwdiv
  2911                           
  2912                           ;comm.c: 41:   mess[3] = (unsigned char)aux+'0';
  2913  00B7  20DF               	fcall	PL8	;call to abstracted procedure
  2914  00B8  3E03               	addlw	3
  2915  00B9  20E5               	fcall	PL10	;call to abstracted procedure
  2916                           
  2917                           ;comm.c: 43:   aux = val%10;
  2918  00BA  20D7               	fcall	PL6	;call to abstracted procedure
  2919  00BB  21C0               	fcall	___lwmod
  2920                           
  2921                           ;comm.c: 44:   val /= 10;
  2922  00BC  20CB               	fcall	PL2	;call to abstracted procedure
  2923  00BD  2154               	fcall	___lwdiv
  2924                           
  2925                           ;comm.c: 46:   mess[2] = (unsigned char)aux+'0';
  2926  00BE  20DF               	fcall	PL8	;call to abstracted procedure
  2927  00BF  3E02               	addlw	2
  2928  00C0  20E5               	fcall	PL10	;call to abstracted procedure
  2929                           
  2930                           ;comm.c: 47:   mess[1] = '.';
  2931  00C1  0A54               	incf	__sprintf@mess,w
  2932  00C2  0086               	movwf	6
  2933  00C3  302E               	movlw	46
  2934  00C4  0081               	movwf	1
  2935                           
  2936                           ;comm.c: 48:   mess[0] = (unsigned char)val+'0';
  2937  00C5  0854               	movf	__sprintf@mess,w
  2938  00C6  0086               	movwf	6
  2939  00C7  0850               	movf	__sprintf@val,w
  2940  00C8  3E30               	addlw	48
  2941  00C9  0081               	movwf	1
  2942  00CA  0008               	return
  2943  00CB                     __end_of__sprintf:	
  2944  00CB                     PL2:	
  2945  00CB  0873               	movf	?___lwmod+1,w
  2946  00CC  00D3               	movwf	__sprintf@aux+1
  2947  00CD  0872               	movf	?___lwmod,w
  2948  00CE  00D2               	movwf	__sprintf@aux
  2949  00CF  300A               	movlw	10
  2950  00D0  00F2               	movwf	___lwdiv@divisor
  2951  00D1  01F3               	clrf	___lwdiv@divisor+1
  2952  00D2  0851               	movf	__sprintf@val+1,w
  2953  00D3  00F5               	movwf	___lwdiv@dividend+1
  2954  00D4  0850               	movf	__sprintf@val,w
  2955  00D5  00F4               	movwf	___lwdiv@dividend
  2956  00D6  0008               	return
  2957  00D7                     __end_ofPL2:	
  2958  00D7                     PL6:	
  2959  00D7  300A               	movlw	10
  2960  00D8  00F2               	movwf	___lwmod@divisor
  2961  00D9  01F3               	clrf	___lwmod@divisor+1
  2962  00DA  0851               	movf	__sprintf@val+1,w
  2963  00DB  00F5               	movwf	___lwmod@dividend+1
  2964  00DC  0850               	movf	__sprintf@val,w
  2965  00DD  00F4               	movwf	___lwmod@dividend
  2966  00DE  0008               	return
  2967  00DF                     __end_ofPL6:	
  2968  00DF                     PL8:	
  2969  00DF  0873               	movf	?___lwdiv+1,w
  2970  00E0  00D1               	movwf	__sprintf@val+1
  2971  00E1  0872               	movf	?___lwdiv,w
  2972  00E2  00D0               	movwf	__sprintf@val
  2973  00E3  0854               	movf	__sprintf@mess,w
  2974  00E4  0008               	return
  2975  00E5                     __end_ofPL8:	
  2976  00E5                     PL10:	
  2977  00E5  0086               	movwf	6
  2978  00E6  0187               	clrf	7
  2979  00E7  0852               	movf	__sprintf@aux,w
  2980  00E8  3E30               	addlw	48
  2981  00E9  0081               	movwf	1
  2982  00EA  0008               	return
  2983  00EB                     __end_ofPL10:	
  2984                           
  2985                           	psect	text4
  2986  01C0                     __ptext4:	
  2987 ;; *************** function ___lwmod *****************
  2988 ;; Defined at:
  2989 ;;		line 5 in file "/pkg/microchip/xc8/v2.00/pic/sources/c99/common/lwmod.c"
  2990 ;; Parameters:    Size  Location     Type
  2991 ;;  divisor         2    2[COMMON] unsigned int 
  2992 ;;  dividend        2    4[COMMON] unsigned int 
  2993 ;; Auto vars:     Size  Location     Type
  2994 ;;  counter         1    6[COMMON] unsigned char 
  2995 ;; Return value:  Size  Location     Type
  2996 ;;                  2    2[COMMON] unsigned int 
  2997 ;; Registers used:
  2998 ;;		wreg, status,2, status,0
  2999 ;; Tracked objects:
  3000 ;;		On entry : 1F/0
  3001 ;;		On exit  : 1F/0
  3002 ;;		Unchanged: 1F/0
  3003 ;; Data sizes:     COMMON   BANK0   BANK1
  3004 ;;      Params:         4       0       0
  3005 ;;      Locals:         1       0       0
  3006 ;;      Temps:          0       0       0
  3007 ;;      Totals:         5       0       0
  3008 ;;Total ram usage:        5 bytes
  3009 ;; Hardware stack levels used:    1
  3010 ;; Hardware stack levels required when called:    4
  3011 ;; This function calls:
  3012 ;;		Nothing
  3013 ;; This function is called by:
  3014 ;;		__sprintf
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           
  3019                           ;psect for function ___lwmod
  3020  01C0                     ___lwmod:	
  3021                           
  3022                           ;incstack = 0
  3023                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3024  01C0  0872               	movf	___lwmod@divisor,w
  3025  01C1  0473               	iorwf	___lwmod@divisor+1,w
  3026  01C2  1903               	btfsc	3,2
  3027  01C3  29DB               	goto	l1846
  3028  01C4  01F6               	clrf	___lwmod@counter
  3029  01C5                     L1:	
  3030  01C5  0AF6               	incf	___lwmod@counter,f
  3031  01C6  1BF3               	btfsc	___lwmod@divisor+1,7
  3032  01C7  29CB               	goto	l1838
  3033  01C8  35F2               	lslf	___lwmod@divisor,f
  3034  01C9  0DF3               	rlf	___lwmod@divisor+1,f
  3035  01CA  29C5               	goto	L1
  3036  01CB                     l1838:	
  3037  01CB  0873               	movf	___lwmod@divisor+1,w
  3038  01CC  0275               	subwf	___lwmod@dividend+1,w
  3039  01CD  1D03               	skipz
  3040  01CE  29D1               	goto	u605
  3041  01CF  0872               	movf	___lwmod@divisor,w
  3042  01D0  0274               	subwf	___lwmod@dividend,w
  3043  01D1                     u605:	
  3044  01D1  1C03               	skipc
  3045  01D2  29D7               	goto	l1842
  3046  01D3  0872               	movf	___lwmod@divisor,w
  3047  01D4  02F4               	subwf	___lwmod@dividend,f
  3048  01D5  0873               	movf	___lwmod@divisor+1,w
  3049  01D6  3BF5               	subwfb	___lwmod@dividend+1,f
  3050  01D7                     l1842:	
  3051  01D7  36F3               	lsrf	___lwmod@divisor+1,f
  3052  01D8  0CF2               	rrf	___lwmod@divisor,f
  3053  01D9  0BF6               	decfsz	___lwmod@counter,f
  3054  01DA  29CB               	goto	l1838
  3055  01DB                     l1846:	
  3056  01DB  0875               	movf	___lwmod@dividend+1,w
  3057  01DC  00F3               	movwf	?___lwmod+1
  3058  01DD  0874               	movf	___lwmod@dividend,w
  3059  01DE  00F2               	movwf	?___lwmod
  3060  01DF  0008               	return
  3061  01E0                     __end_of___lwmod:	
  3062                           
  3063                           	psect	text5
  3064  0154                     __ptext5:	
  3065 ;; *************** function ___lwdiv *****************
  3066 ;; Defined at:
  3067 ;;		line 5 in file "/pkg/microchip/xc8/v2.00/pic/sources/c99/common/lwdiv.c"
  3068 ;; Parameters:    Size  Location     Type
  3069 ;;  divisor         2    2[COMMON] unsigned int 
  3070 ;;  dividend        2    4[COMMON] unsigned int 
  3071 ;; Auto vars:     Size  Location     Type
  3072 ;;  quotient        2    6[COMMON] unsigned int 
  3073 ;;  counter         1    8[COMMON] unsigned char 
  3074 ;; Return value:  Size  Location     Type
  3075 ;;                  2    2[COMMON] unsigned int 
  3076 ;; Registers used:
  3077 ;;		wreg, status,2, status,0
  3078 ;; Tracked objects:
  3079 ;;		On entry : 1F/0
  3080 ;;		On exit  : 1F/0
  3081 ;;		Unchanged: 1F/0
  3082 ;; Data sizes:     COMMON   BANK0   BANK1
  3083 ;;      Params:         4       0       0
  3084 ;;      Locals:         3       0       0
  3085 ;;      Temps:          0       0       0
  3086 ;;      Totals:         7       0       0
  3087 ;;Total ram usage:        7 bytes
  3088 ;; Hardware stack levels used:    1
  3089 ;; Hardware stack levels required when called:    4
  3090 ;; This function calls:
  3091 ;;		Nothing
  3092 ;; This function is called by:
  3093 ;;		__sprintf
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096                           
  3097                           
  3098                           ;psect for function ___lwdiv
  3099  0154                     ___lwdiv:	
  3100                           
  3101                           ;incstack = 0
  3102                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3103  0154  01F6               	clrf	___lwdiv@quotient
  3104  0155  01F7               	clrf	___lwdiv@quotient+1
  3105  0156  0872               	movf	___lwdiv@divisor,w
  3106  0157  0473               	iorwf	___lwdiv@divisor+1,w
  3107  0158  1903               	btfsc	3,2
  3108  0159  2974               	goto	l1826
  3109  015A  01F8               	clrf	___lwdiv@counter
  3110  015B                     L2:	
  3111  015B  0AF8               	incf	___lwdiv@counter,f
  3112  015C  1BF3               	btfsc	___lwdiv@divisor+1,7
  3113  015D  2961               	goto	l1814
  3114  015E  35F2               	lslf	___lwdiv@divisor,f
  3115  015F  0DF3               	rlf	___lwdiv@divisor+1,f
  3116  0160  295B               	goto	L2
  3117  0161                     l1814:	
  3118  0161  35F6               	lslf	___lwdiv@quotient,f
  3119  0162  0DF7               	rlf	___lwdiv@quotient+1,f
  3120  0163  0873               	movf	___lwdiv@divisor+1,w
  3121  0164  0275               	subwf	___lwdiv@dividend+1,w
  3122  0165  1D03               	skipz
  3123  0166  2969               	goto	u565
  3124  0167  0872               	movf	___lwdiv@divisor,w
  3125  0168  0274               	subwf	___lwdiv@dividend,w
  3126  0169                     u565:	
  3127  0169  1C03               	skipc
  3128  016A  2970               	goto	l1822
  3129  016B  0872               	movf	___lwdiv@divisor,w
  3130  016C  02F4               	subwf	___lwdiv@dividend,f
  3131  016D  0873               	movf	___lwdiv@divisor+1,w
  3132  016E  3BF5               	subwfb	___lwdiv@dividend+1,f
  3133  016F  1476               	bsf	___lwdiv@quotient,0
  3134  0170                     l1822:	
  3135  0170  36F3               	lsrf	___lwdiv@divisor+1,f
  3136  0171  0CF2               	rrf	___lwdiv@divisor,f
  3137  0172  0BF8               	decfsz	___lwdiv@counter,f
  3138  0173  2961               	goto	l1814
  3139  0174                     l1826:	
  3140  0174  0877               	movf	___lwdiv@quotient+1,w
  3141  0175  00F3               	movwf	?___lwdiv+1
  3142  0176  0876               	movf	___lwdiv@quotient,w
  3143  0177  00F2               	movwf	?___lwdiv
  3144  0178  0008               	return
  3145  0179                     __end_of___lwdiv:	
  3146                           
  3147                           	psect	text6
  3148  0179                     __ptext6:	
  3149 ;; *************** function ___lmul *****************
  3150 ;; Defined at:
  3151 ;;		line 15 in file "/pkg/microchip/xc8/v2.00/pic/sources/c99/common/Umul32.c"
  3152 ;; Parameters:    Size  Location     Type
  3153 ;;  multiplier      4    2[COMMON] unsigned long 
  3154 ;;  multiplicand    4    6[COMMON] unsigned long 
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;  product         4    0[BANK0 ] unsigned long 
  3157 ;; Return value:  Size  Location     Type
  3158 ;;                  4    2[COMMON] unsigned long 
  3159 ;; Registers used:
  3160 ;;		wreg, status,2, status,0
  3161 ;; Tracked objects:
  3162 ;;		On entry : 1F/0
  3163 ;;		On exit  : 1F/0
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:     COMMON   BANK0   BANK1
  3166 ;;      Params:         8       0       0
  3167 ;;      Locals:         0       4       0
  3168 ;;      Temps:          0       0       0
  3169 ;;      Totals:         8       4       0
  3170 ;;Total ram usage:       12 bytes
  3171 ;; Hardware stack levels used:    1
  3172 ;; Hardware stack levels required when called:    4
  3173 ;; This function calls:
  3174 ;;		Nothing
  3175 ;; This function is called by:
  3176 ;;		_read_analog
  3177 ;; This function uses a non-reentrant model
  3178 ;;
  3179                           
  3180                           
  3181                           ;psect for function ___lmul
  3182  0179                     ___lmul:	
  3183                           
  3184                           ;incstack = 0
  3185                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3186  0179  01D0               	clrf	___lmul@product
  3187  017A  01D1               	clrf	___lmul@product+1
  3188  017B  01D2               	clrf	___lmul@product+2
  3189  017C  01D3               	clrf	___lmul@product+3
  3190  017D                     l781:	
  3191  017D  1C72               	btfss	___lmul@multiplier,0
  3192  017E  2987               	goto	l2050
  3193  017F  0876               	movf	___lmul@multiplicand,w
  3194  0180  07D0               	addwf	___lmul@product,f
  3195  0181  0877               	movf	___lmul@multiplicand+1,w
  3196  0182  3DD1               	addwfc	___lmul@product+1,f
  3197  0183  0878               	movf	___lmul@multiplicand+2,w
  3198  0184  3DD2               	addwfc	___lmul@product+2,f
  3199  0185  0879               	movf	___lmul@multiplicand+3,w
  3200  0186  3DD3               	addwfc	___lmul@product+3,f
  3201  0187                     l2050:	
  3202  0187  35F6               	lslf	___lmul@multiplicand,f
  3203  0188  0DF7               	rlf	___lmul@multiplicand+1,f
  3204  0189  0DF8               	rlf	___lmul@multiplicand+2,f
  3205  018A  0DF9               	rlf	___lmul@multiplicand+3,f
  3206  018B  36F5               	lsrf	___lmul@multiplier+3,f
  3207  018C  0CF4               	rrf	___lmul@multiplier+2,f
  3208  018D  0CF3               	rrf	___lmul@multiplier+1,f
  3209  018E  0CF2               	rrf	___lmul@multiplier,f
  3210  018F  0875               	movf	___lmul@multiplier+3,w
  3211  0190  0474               	iorwf	___lmul@multiplier+2,w
  3212  0191  0473               	iorwf	___lmul@multiplier+1,w
  3213  0192  0472               	iorwf	___lmul@multiplier,w
  3214  0193  1D03               	skipz
  3215  0194  297D               	goto	l781
  3216  0195  0853               	movf	___lmul@product+3,w
  3217  0196  00F5               	movwf	?___lmul+3
  3218  0197  0852               	movf	___lmul@product+2,w
  3219  0198  00F4               	movwf	?___lmul+2
  3220  0199  0851               	movf	___lmul@product+1,w
  3221  019A  00F3               	movwf	?___lmul+1
  3222  019B  0850               	movf	___lmul@product,w
  3223  019C  00F2               	movwf	?___lmul
  3224  019D  0008               	return
  3225  019E                     __end_of___lmul:	
  3226                           
  3227                           	psect	text7
  3228  0334                     __ptext7:	
  3229 ;; *************** function _process_ioc *****************
  3230 ;; Defined at:
  3231 ;;		line 172 in file "logger.c"
  3232 ;; Parameters:    Size  Location     Type
  3233 ;;		None
  3234 ;; Auto vars:     Size  Location     Type
  3235 ;;		None
  3236 ;; Return value:  Size  Location     Type
  3237 ;;                  1    wreg      void 
  3238 ;; Registers used:
  3239 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3240 ;; Tracked objects:
  3241 ;;		On entry : 1F/0
  3242 ;;		On exit  : 1E/0
  3243 ;;		Unchanged: 0/0
  3244 ;; Data sizes:     COMMON   BANK0   BANK1
  3245 ;;      Params:         0       0       0
  3246 ;;      Locals:         0       0       0
  3247 ;;      Temps:          0       0       0
  3248 ;;      Totals:         0       0       0
  3249 ;;Total ram usage:        0 bytes
  3250 ;; Hardware stack levels used:    1
  3251 ;; Hardware stack levels required when called:    6
  3252 ;; This function calls:
  3253 ;;		__puts
  3254 ;; This function is called by:
  3255 ;;		_main
  3256 ;; This function uses a non-reentrant model
  3257 ;;
  3258                           
  3259                           
  3260                           ;psect for function _process_ioc
  3261  0334                     _process_ioc:	
  3262                           
  3263                           ;logger.c: 174:     IOC_state = IOC_IDLE;
  3264                           
  3265                           ;incstack = 0
  3266                           ; Regs used in _process_ioc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3267  0334  01BA               	clrf	_IOC_state	;volatile
  3268                           
  3269                           ;logger.c: 175:      if (IOC_value) {
  3270  0335  0833               	movf	_IOC_value,w	;volatile
  3271  0336  1903               	btfsc	3,2
  3272  0337  2B3D               	goto	l2168
  3273                           
  3274                           ;logger.c: 177:             _puts("CH");
  3275  0338  3039               	movlw	low (STR_23| (0+32768))
  3276  0339  00F3               	movwf	__puts@pt
  3277  033A  3084               	movlw	high (STR_23| (0+32768))
  3278  033B  00F4               	movwf	__puts@pt+1
  3279  033C  2A38               	ljmp	l1766
  3280  033D                     l2168:	
  3281                           ;logger.c: 182:     } else {
  3282                           
  3283                           
  3284                           ;logger.c: 184:             _puts("CL");
  3285  033D  303C               	movlw	low (STR_24| (0+32768))
  3286  033E  00F3               	movwf	__puts@pt
  3287  033F  3084               	movlw	high (STR_24| (0+32768))
  3288  0340  00F4               	movwf	__puts@pt+1
  3289  0341  2A38               	ljmp	l1766
  3290  0342                     __end_of_process_ioc:	
  3291                           
  3292                           	psect	text8
  3293  0200                     __ptext8:	
  3294 ;; *************** function _logger_initialize *****************
  3295 ;; Defined at:
  3296 ;;		line 20 in file "logger.c"
  3297 ;; Parameters:    Size  Location     Type
  3298 ;;		None
  3299 ;; Auto vars:     Size  Location     Type
  3300 ;;		None
  3301 ;; Return value:  Size  Location     Type
  3302 ;;                  1    wreg      void 
  3303 ;; Registers used:
  3304 ;;		wreg, status,2, status,0, pclath, cstack
  3305 ;; Tracked objects:
  3306 ;;		On entry : 1F/1
  3307 ;;		On exit  : 1F/0
  3308 ;;		Unchanged: 0/0
  3309 ;; Data sizes:     COMMON   BANK0   BANK1
  3310 ;;      Params:         0       0       0
  3311 ;;      Locals:         0       0       0
  3312 ;;      Temps:          0       0       0
  3313 ;;      Totals:         0       0       0
  3314 ;;Total ram usage:        0 bytes
  3315 ;; Hardware stack levels used:    1
  3316 ;; Hardware stack levels required when called:    5
  3317 ;; This function calls:
  3318 ;;		_ADC_SelectChannel
  3319 ;;		_ESP_Set_application_handler
  3320 ;;		_IOCAF4_SetInterruptHandler
  3321 ;;		_TMR1_SetInterruptHandler
  3322 ;;		_TMR1_StopTimer
  3323 ;; This function is called by:
  3324 ;;		_main
  3325 ;; This function uses a non-reentrant model
  3326 ;;
  3327                           
  3328                           
  3329                           ;psect for function _logger_initialize
  3330  0200                     _logger_initialize:	
  3331                           
  3332                           ;logger.c: 22:     message_format = MESSAGE_BINARY;
  3333                           
  3334                           ;incstack = 0
  3335                           ; Regs used in _logger_initialize: [wreg+status,2+status,0+pclath+cstack]
  3336  0200  0020               	movlb	0	; select bank0
  3337  0201  01B6               	clrf	_message_format	;volatile
  3338                           
  3339                           ;logger.c: 24:     ADC_SelectChannel(channel_AN2);
  3340  0202  3002               	movlw	2
  3341  0203  2383               	fcall	_ADC_SelectChannel
  3342                           
  3343                           ;logger.c: 25:     ADC_state = ADC_IDLE;
  3344  0204  0020               	movlb	0	; select bank0
  3345  0205  01BF               	clrf	_ADC_state	;volatile
  3346                           
  3347                           ;logger.c: 26:     ADC_value = 0;
  3348  0206  01AC               	clrf	_ADC_value	;volatile
  3349  0207  01AD               	clrf	_ADC_value+1	;volatile
  3350                           
  3351                           ;logger.c: 27:     ADC_count = 0;
  3352  0208  01B5               	clrf	_ADC_count	;volatile
  3353                           
  3354                           ;logger.c: 29:     TMR1_StopTimer();
  3355  0209  2451               	fcall	_TMR1_StopTimer
  3356                           
  3357                           ;logger.c: 30:     TMR1_state = TMR1_STOP;
  3358  020A  01B4               	clrf	_TMR1_state	;volatile
  3359                           
  3360                           ;logger.c: 31:     TMR1_SetInterruptHandler(_TMR1_Ready);
  3361  020B  3031               	movlw	low __TMR1_Ready
  3362  020C  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  3363  020D  3004               	movlw	high __TMR1_Ready
  3364  020E  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  3365  020F  23FE               	fcall	_TMR1_SetInterruptHandler
  3366                           
  3367                           ;logger.c: 33:     IOCAF4_SetInterruptHandler(_IOC_Ready);
  3368  0210  30E5               	movlw	low __IOC_Ready
  3369  0211  00F2               	movwf	IOCAF4_SetInterruptHandler@InterruptHandler
  3370  0212  3003               	movlw	high __IOC_Ready
  3371  0213  00F3               	movwf	IOCAF4_SetInterruptHandler@InterruptHandler+1
  3372  0214  2404               	fcall	_IOCAF4_SetInterruptHandler
  3373                           
  3374                           ;logger.c: 34:     IOC_state = IOC_IDLE;
  3375  0215  01BA               	clrf	_IOC_state	;volatile
  3376                           
  3377                           ;logger.c: 35:     IOC_value = 1;
  3378  0216  3001               	movlw	1
  3379  0217  00B3               	movwf	_IOC_value	;volatile
  3380                           
  3381                           ;logger.c: 37:     ESP_Set_application_handler(process_message);
  3382  0218  30EB               	movlw	low _process_message
  3383  0219  00F2               	movwf	ESP_Set_application_handler@applicationHandler
  3384  021A  3000               	movlw	high _process_message
  3385  021B  00F3               	movwf	ESP_Set_application_handler@applicationHandler+1
  3386  021C  2C57               	ljmp	l503
  3387  021D                     __end_of_logger_initialize:	
  3388                           
  3389                           	psect	text9
  3390  0457                     __ptext9:	
  3391 ;; *************** function _ESP_Set_application_handler *****************
  3392 ;; Defined at:
  3393 ;;		line 224 in file "esp1.c"
  3394 ;; Parameters:    Size  Location     Type
  3395 ;;  applicationH    2    2[COMMON] PTR FTN(unsigned char ,)
  3396 ;;		 -> process_message(1), ESP_default_application_handler(1), 
  3397 ;; Auto vars:     Size  Location     Type
  3398 ;;		None
  3399 ;; Return value:  Size  Location     Type
  3400 ;;                  1    wreg      void 
  3401 ;; Registers used:
  3402 ;;		None
  3403 ;; Tracked objects:
  3404 ;;		On entry : 1F/0
  3405 ;;		On exit  : 1F/0
  3406 ;;		Unchanged: 1F/0
  3407 ;; Data sizes:     COMMON   BANK0   BANK1
  3408 ;;      Params:         2       0       0
  3409 ;;      Locals:         0       0       0
  3410 ;;      Temps:          0       0       0
  3411 ;;      Totals:         2       0       0
  3412 ;;Total ram usage:        2 bytes
  3413 ;; Hardware stack levels used:    1
  3414 ;; Hardware stack levels required when called:    4
  3415 ;; This function calls:
  3416 ;;		Nothing
  3417 ;; This function is called by:
  3418 ;;		_logger_initialize
  3419 ;; This function uses a non-reentrant model
  3420 ;;
  3421                           
  3422                           
  3423                           ;psect for function _ESP_Set_application_handler
  3424  0457                     _ESP_Set_application_handler:	
  3425  0457                     l503:	
  3426                           ;incstack = 0
  3427                           ; Regs used in _ESP_Set_application_handler: []
  3428                           
  3429  0457  0008               	return
  3430  0458                     __end_of_ESP_Set_application_handler:	
  3431                           
  3432                           	psect	text10
  3433  0383                     __ptext10:	
  3434 ;; *************** function _ADC_SelectChannel *****************
  3435 ;; Defined at:
  3436 ;;		line 85 in file "mcc_generated_files/adc.c"
  3437 ;; Parameters:    Size  Location     Type
  3438 ;;  channel         1    wreg     enum E2157
  3439 ;; Auto vars:     Size  Location     Type
  3440 ;;  channel         1    3[COMMON] enum E2157
  3441 ;; Return value:  Size  Location     Type
  3442 ;;                  1    wreg      void 
  3443 ;; Registers used:
  3444 ;;		wreg, status,2, status,0
  3445 ;; Tracked objects:
  3446 ;;		On entry : 1F/0
  3447 ;;		On exit  : 1F/1
  3448 ;;		Unchanged: 0/0
  3449 ;; Data sizes:     COMMON   BANK0   BANK1
  3450 ;;      Params:         0       0       0
  3451 ;;      Locals:         1       0       0
  3452 ;;      Temps:          1       0       0
  3453 ;;      Totals:         2       0       0
  3454 ;;Total ram usage:        2 bytes
  3455 ;; Hardware stack levels used:    1
  3456 ;; Hardware stack levels required when called:    4
  3457 ;; This function calls:
  3458 ;;		Nothing
  3459 ;; This function is called by:
  3460 ;;		_logger_initialize
  3461 ;; This function uses a non-reentrant model
  3462 ;;
  3463                           
  3464                           
  3465                           ;psect for function _ADC_SelectChannel
  3466  0383                     _ADC_SelectChannel:	
  3467                           
  3468                           ;incstack = 0
  3469                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
  3470                           ;ADC_SelectChannel@channel stored from wreg
  3471  0383  00F3               	movwf	ADC_SelectChannel@channel
  3472                           
  3473                           ;mcc_generated_files/adc.c: 85: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 86: {;mcc_generated_files/adc.c: 88:     ADCON0bits.CHS = channel;
  3474  0384  00F2               	movwf	??_ADC_SelectChannel
  3475  0385  0DF2               	rlf	??_ADC_SelectChannel,f
  3476  0386  0DF2               	rlf	??_ADC_SelectChannel,f
  3477  0387  0021               	movlb	1	; select bank1
  3478  0388  081D               	movf	29,w	;volatile
  3479  0389  0672               	xorwf	??_ADC_SelectChannel,w
  3480  038A  3983               	andlw	-125
  3481  038B  0672               	xorwf	??_ADC_SelectChannel,w
  3482  038C  009D               	movwf	29	;volatile
  3483                           
  3484                           ;mcc_generated_files/adc.c: 90:     ADCON0bits.ADON = 1;
  3485  038D  141D               	bsf	29,0	;volatile
  3486  038E  0008               	return
  3487  038F                     __end_of_ADC_SelectChannel:	
  3488                           
  3489                           	psect	text11
  3490  0420                     __ptext11:	
  3491 ;; *************** function _bt_message_handler *****************
  3492 ;; Defined at:
  3493 ;;		line 40 in file "logger.c"
  3494 ;; Parameters:    Size  Location     Type
  3495 ;;		None
  3496 ;; Auto vars:     Size  Location     Type
  3497 ;;  message         1    2[BANK0 ] unsigned char 
  3498 ;; Return value:  Size  Location     Type
  3499 ;;                  1    wreg      void 
  3500 ;; Registers used:
  3501 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3502 ;; Tracked objects:
  3503 ;;		On entry : 1F/0
  3504 ;;		On exit  : 1C/0
  3505 ;;		Unchanged: 0/0
  3506 ;; Data sizes:     COMMON   BANK0   BANK1
  3507 ;;      Params:         0       0       0
  3508 ;;      Locals:         0       1       0
  3509 ;;      Temps:          0       0       0
  3510 ;;      Totals:         0       1       0
  3511 ;;Total ram usage:        1 bytes
  3512 ;; Hardware stack levels used:    1
  3513 ;; Hardware stack levels required when called:    8
  3514 ;; This function calls:
  3515 ;;		_EUSART_Read
  3516 ;;		_process_message
  3517 ;; This function is called by:
  3518 ;;		_main
  3519 ;; This function uses a non-reentrant model
  3520 ;;
  3521                           
  3522                           
  3523                           ;psect for function _bt_message_handler
  3524  0420                     _bt_message_handler:	
  3525                           
  3526                           ;logger.c: 42:     unsigned char message;;logger.c: 43:     message = EUSART_Read();
  3527                           
  3528                           ;incstack = 0
  3529                           ; Regs used in _bt_message_handler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3530  0420  2268               	fcall	_EUSART_Read
  3531  0421  0020               	movlb	0	; select bank0
  3532  0422  00D2               	movwf	bt_message_handler@message
  3533                           
  3534                           ;logger.c: 44:     process_message(message);
  3535  0423  00F9               	movwf	process_message@message
  3536  0424  28EB               	ljmp	l2262
  3537  0425                     __end_of_bt_message_handler:	
  3538                           
  3539                           	psect	text12
  3540  00EB                     __ptext12:	
  3541 ;; *************** function _process_message *****************
  3542 ;; Defined at:
  3543 ;;		line 47 in file "logger.c"
  3544 ;; Parameters:    Size  Location     Type
  3545 ;;  message         1    9[COMMON] unsigned char 
  3546 ;; Auto vars:     Size  Location     Type
  3547 ;;		None
  3548 ;; Return value:  Size  Location     Type
  3549 ;;                  1    wreg      void 
  3550 ;; Registers used:
  3551 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3552 ;; Tracked objects:
  3553 ;;		On entry : 1F/0
  3554 ;;		On exit  : 1C/0
  3555 ;;		Unchanged: 0/0
  3556 ;; Data sizes:     COMMON   BANK0   BANK1
  3557 ;;      Params:         1       0       0
  3558 ;;      Locals:         0       0       0
  3559 ;;      Temps:          0       2       0
  3560 ;;      Totals:         1       2       0
  3561 ;;Total ram usage:        3 bytes
  3562 ;; Hardware stack levels used:    1
  3563 ;; Hardware stack levels required when called:    7
  3564 ;; This function calls:
  3565 ;;		_ADC_StartConversion
  3566 ;;		_TMR1_StartTimer
  3567 ;;		_TMR1_StopTimer
  3568 ;;		__puts
  3569 ;;		_toggle_format
  3570 ;; This function is called by:
  3571 ;;		_logger_initialize
  3572 ;;		_bt_message_handler
  3573 ;; This function uses a non-reentrant model
  3574 ;;
  3575                           
  3576                           
  3577                           ;psect for function _process_message
  3578  00EB                     _process_message:	
  3579  00EB                     l2262:	
  3580                           ;incstack = 0
  3581                           ; Regs used in _process_message: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3582                           
  3583                           
  3584                           ;logger.c: 47: void process_message(unsigned char message);logger.c: 48: {;logger.c: 51:
      +                               switch (message) {
  3585  00EB  2903               	goto	l2284
  3586  00EC                     l2264:	
  3587                           
  3588                           ;logger.c: 54:                 _puts("Ok\n");
  3589  00EC  3025               	movlw	low (STR_20| (0+32768))
  3590  00ED  00F3               	movwf	__puts@pt
  3591  00EE  3084               	movlw	high (STR_20| (0+32768))
  3592  00EF  00F4               	movwf	__puts@pt+1
  3593  00F0  2A38               	ljmp	l1766
  3594  00F1                     l2266:	
  3595                           ;logger.c: 58:             break;
  3596                           
  3597                           
  3598                           ;logger.c: 61:             ADC_StartConversion();
  3599  00F1  2C3F               	ljmp	l1776
  3600  00F2                     l2268:	
  3601                           ;logger.c: 62:             break;
  3602                           
  3603                           
  3604                           ;logger.c: 65:             toggle_format();
  3605  00F2  2AF8               	ljmp	l1790
  3606  00F3                     l2270:	
  3607                           ;logger.c: 66:             break;
  3608                           
  3609                           
  3610                           ;logger.c: 69:             if (TMR1_state == TMR1_RUNNING)
  3611  00F3  0B34               	decfsz	_TMR1_state,w	;volatile
  3612  00F4  28F6               	goto	l2274
  3613  00F5  0008               	return
  3614  00F6                     l2274:	
  3615                           
  3616                           ;logger.c: 71:             TMR1_StartTimer();
  3617  00F6  2453               	fcall	_TMR1_StartTimer
  3618                           
  3619                           ;logger.c: 72:             TMR1_state = TMR1_RUNNING;
  3620  00F7  3001               	movlw	1
  3621  00F8  00B4               	movwf	_TMR1_state	;volatile
  3622                           
  3623                           ;logger.c: 74:             break;
  3624  00F9  0008               	return
  3625  00FA                     l2278:	
  3626                           
  3627                           ;logger.c: 78:             TMR1_StopTimer();
  3628  00FA  2451               	fcall	_TMR1_StopTimer
  3629                           
  3630                           ;logger.c: 79:             TMR1_state = TMR1_STOP;
  3631  00FB  01B4               	clrf	_TMR1_state	;volatile
  3632                           
  3633                           ;logger.c: 80:             break;
  3634  00FC  0008               	return
  3635  00FD                     l586:	
  3636                           ;logger.c: 84:             do { LATAbits.LATA5 = 0; } while(0);
  3637                           
  3638  00FD  0022               	movlb	2	; select bank2
  3639  00FE  128C               	bcf	12,5	;volatile
  3640  00FF  0008               	return
  3641  0100                     l589:	
  3642                           ;logger.c: 89:             do { LATAbits.LATA5 = 1; } while(0);
  3643                           
  3644  0100  0022               	movlb	2	; select bank2
  3645  0101  168C               	bsf	12,5	;volatile
  3646  0102  0008               	return
  3647  0103                     l2284:	
  3648  0103  0879               	movf	process_message@message,w
  3649  0104  00D0               	movwf	??_process_message
  3650  0105  01D1               	clrf	??_process_message+1
  3651                           
  3652                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3653                           ; Switch size 1, requested type "space"
  3654                           ; Number of cases is 1, Range of values is 0 to 0
  3655                           ; switch strategies available:
  3656                           ; Name         Instructions Cycles
  3657                           ; simple_byte            4     3 (average)
  3658                           ; direct_byte            8     6 (fixed)
  3659                           ; jumptable            260     6 (fixed)
  3660                           ;	Chosen strategy is simple_byte
  3661  0106  0851               	movf	??_process_message+1,w
  3662  0107  3A00               	xorlw	0	; case 0
  3663  0108  1903               	skipnz
  3664  0109  290B               	goto	l2390
  3665  010A  2922               	goto	l583
  3666  010B                     l2390:	
  3667                           
  3668                           ; Switch size 1, requested type "space"
  3669                           ; Number of cases is 7, Range of values is 79 to 116
  3670                           ; switch strategies available:
  3671                           ; Name         Instructions Cycles
  3672                           ; simple_byte           22    12 (average)
  3673                           ; direct_byte           85     9 (fixed)
  3674                           ; jumptable            263     9 (fixed)
  3675                           ;	Chosen strategy is simple_byte
  3676  010B  0850               	movf	??_process_message,w
  3677  010C  3A4F               	xorlw	79	; case 79
  3678  010D  1903               	skipnz
  3679  010E  2900               	goto	l589
  3680  010F  3A1C               	xorlw	28	; case 83
  3681  0110  1903               	skipnz
  3682  0111  28FA               	goto	l2278
  3683  0112  3A07               	xorlw	7	; case 84
  3684  0113  1903               	skipnz
  3685  0114  28F2               	goto	l2268
  3686  0115  3A35               	xorlw	53	; case 97
  3687  0116  1903               	skipnz
  3688  0117  28F1               	goto	l2266
  3689  0118  3A0E               	xorlw	14	; case 111
  3690  0119  1903               	skipnz
  3691  011A  28FD               	goto	l586
  3692  011B  3A1C               	xorlw	28	; case 115
  3693  011C  1903               	skipnz
  3694  011D  28F3               	goto	l2270
  3695  011E  3A07               	xorlw	7	; case 116
  3696  011F  1903               	skipnz
  3697  0120  28EC               	goto	l2264
  3698  0121  2922               	goto	l583
  3699  0122                     l583:	
  3700  0122  0008               	return
  3701  0123                     __end_of_process_message:	
  3702                           
  3703                           	psect	text13
  3704  02F8                     __ptext13:	
  3705 ;; *************** function _toggle_format *****************
  3706 ;; Defined at:
  3707 ;;		line 139 in file "logger.c"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;		None
  3710 ;; Auto vars:     Size  Location     Type
  3711 ;;		None
  3712 ;; Return value:  Size  Location     Type
  3713 ;;                  1    wreg      void 
  3714 ;; Registers used:
  3715 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3716 ;; Tracked objects:
  3717 ;;		On entry : 1F/0
  3718 ;;		On exit  : 1E/0
  3719 ;;		Unchanged: 0/0
  3720 ;; Data sizes:     COMMON   BANK0   BANK1
  3721 ;;      Params:         0       0       0
  3722 ;;      Locals:         0       0       0
  3723 ;;      Temps:          0       0       0
  3724 ;;      Totals:         0       0       0
  3725 ;;Total ram usage:        0 bytes
  3726 ;; Hardware stack levels used:    1
  3727 ;; Hardware stack levels required when called:    6
  3728 ;; This function calls:
  3729 ;;		__puts
  3730 ;; This function is called by:
  3731 ;;		_process_message
  3732 ;; This function uses a non-reentrant model
  3733 ;;
  3734                           
  3735                           
  3736                           ;psect for function _toggle_format
  3737  02F8                     _toggle_format:	
  3738  02F8                     l1790:	
  3739                           ;incstack = 0
  3740                           ; Regs used in _toggle_format: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3741                           
  3742                           
  3743                           ;logger.c: 141:     if (message_format == MESSAGE_BINARY) {
  3744  02F8  0836               	movf	_message_format,w	;volatile
  3745  02F9  1D03               	btfss	3,2
  3746  02FA  2B02               	goto	l1796
  3747                           
  3748                           ;logger.c: 142:         message_format = MESSAGE_TEXT;
  3749  02FB  3001               	movlw	1
  3750  02FC  00B6               	movwf	_message_format	;volatile
  3751                           
  3752                           ;logger.c: 144:             _puts("tmode\n");
  3753  02FD  30D7               	movlw	low (STR_21| (0+32768))
  3754  02FE  00F3               	movwf	__puts@pt
  3755  02FF  3083               	movlw	high (STR_21| (0+32768))
  3756  0300  00F4               	movwf	__puts@pt+1
  3757  0301  2A38               	ljmp	l1766
  3758  0302                     l1796:	
  3759                           ;logger.c: 148:     } else {
  3760                           
  3761                           
  3762                           ;logger.c: 149:         message_format = MESSAGE_BINARY;
  3763  0302  01B6               	clrf	_message_format	;volatile
  3764                           
  3765                           ;logger.c: 151:             _puts("bmode\n");
  3766  0303  30D0               	movlw	low (STR_22| (0+32768))
  3767  0304  00F3               	movwf	__puts@pt
  3768  0305  3083               	movlw	high (STR_22| (0+32768))
  3769  0306  00F4               	movwf	__puts@pt+1
  3770  0307  2A38               	ljmp	l1766
  3771  0308                     __end_of_toggle_format:	
  3772                           
  3773                           	psect	text14
  3774  0238                     __ptext14:	
  3775 ;; *************** function __puts *****************
  3776 ;; Defined at:
  3777 ;;		line 5 in file "comm.c"
  3778 ;; Parameters:    Size  Location     Type
  3779 ;;  pt              2    3[COMMON] PTR unsigned char 
  3780 ;;		 -> STR_29(13), STR_28(22), STR_27(13), STR_26(18), 
  3781 ;;		 -> STR_25(13), STR_24(3), STR_23(3), STR_22(7), 
  3782 ;;		 -> STR_21(7), STR_20(4), STR_19(3), STR_18(3), 
  3783 ;;		 -> STR_17(2), STR_16(12), STR_14(20), STR_13(14), 
  3784 ;;		 -> STR_12(4), STR_11(4), STR_10(11), STR_9(14), 
  3785 ;;		 -> STR_8(5), 
  3786 ;; Auto vars:     Size  Location     Type
  3787 ;;  index           1    8[COMMON] unsigned char 
  3788 ;; Return value:  Size  Location     Type
  3789 ;;                  1    wreg      void 
  3790 ;; Registers used:
  3791 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3792 ;; Tracked objects:
  3793 ;;		On entry : 1F/0
  3794 ;;		On exit  : 1E/0
  3795 ;;		Unchanged: 0/0
  3796 ;; Data sizes:     COMMON   BANK0   BANK1
  3797 ;;      Params:         2       0       0
  3798 ;;      Locals:         1       0       0
  3799 ;;      Temps:          3       0       0
  3800 ;;      Totals:         6       0       0
  3801 ;;Total ram usage:        6 bytes
  3802 ;; Hardware stack levels used:    1
  3803 ;; Hardware stack levels required when called:    5
  3804 ;; This function calls:
  3805 ;;		_EUSART_Write
  3806 ;;		_EUSART_is_tx_ready
  3807 ;; This function is called by:
  3808 ;;		_process_message
  3809 ;;		_toggle_format
  3810 ;;		_process_ioc
  3811 ;; This function uses a non-reentrant model
  3812 ;;
  3813                           
  3814                           
  3815                           ;psect for function __puts
  3816  0238                     __puts:	
  3817  0238                     l1766:	
  3818                           ;incstack = 0
  3819                           ; Regs used in __puts: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3820                           
  3821                           
  3822                           ;comm.c: 5: void _puts(char *pt);comm.c: 6: {;comm.c: 7:     unsigned char index;;comm.c
      +                          : 8:     index = 0;
  3823  0238  01F8               	clrf	__puts@index
  3824  0239                     l1774:	
  3825                           ;comm.c: 9:     while(pt[index]) {
  3826                           
  3827                           
  3828                           ;comm.c: 9:     while(pt[index]) {
  3829  0239  2246               	fcall	PL4	;call to abstracted procedure
  3830  023A  0012               	moviw fsr0++
  3831  023B  1903               	btfsc	3,2
  3832  023C  0008               	return
  3833  023D                     l1768:	
  3834  023D  244F               	fcall	_EUSART_is_tx_ready
  3835  023E  3A00               	xorlw	0
  3836  023F  1903               	skipnz
  3837  0240  2A3D               	goto	l1768
  3838                           
  3839                           ;comm.c: 11:         EUSART_Write(pt[index++]);
  3840  0241  2246               	fcall	PL4	;call to abstracted procedure
  3841  0242  0800               	movf	0,w	;code access
  3842  0243  221D               	fcall	_EUSART_Write
  3843  0244  0AF8               	incf	__puts@index,f
  3844  0245  2A39               	goto	l1774
  3845  0246                     __end_of__puts:	
  3846  0246                     PL4:	
  3847  0246  0874               	movf	__puts@pt+1,w
  3848  0247  00F6               	movwf	??__puts+1
  3849  0248  0873               	movf	__puts@pt,w
  3850  0249  00F5               	movwf	??__puts
  3851  024A  0878               	movf	__puts@index,w
  3852  024B  0775               	addwf	??__puts,w
  3853  024C  0084               	movwf	4
  3854  024D  0876               	movf	??__puts+1,w
  3855  024E  1803               	skipnc
  3856  024F  0A76               	incf	??__puts+1,w
  3857  0250  0085               	movwf	5
  3858  0251  0008               	return
  3859  0252                     __end_ofPL4:	
  3860                           
  3861                           	psect	text15
  3862  044F                     __ptext15:	
  3863 ;; *************** function _EUSART_is_tx_ready *****************
  3864 ;; Defined at:
  3865 ;;		line 113 in file "mcc_generated_files/eusart.c"
  3866 ;; Parameters:    Size  Location     Type
  3867 ;;		None
  3868 ;; Auto vars:     Size  Location     Type
  3869 ;;		None
  3870 ;; Return value:  Size  Location     Type
  3871 ;;                  1    wreg      unsigned char 
  3872 ;; Registers used:
  3873 ;;		wreg
  3874 ;; Tracked objects:
  3875 ;;		On entry : 0/0
  3876 ;;		On exit  : 0/0
  3877 ;;		Unchanged: 0/0
  3878 ;; Data sizes:     COMMON   BANK0   BANK1
  3879 ;;      Params:         0       0       0
  3880 ;;      Locals:         0       0       0
  3881 ;;      Temps:          0       0       0
  3882 ;;      Totals:         0       0       0
  3883 ;;Total ram usage:        0 bytes
  3884 ;; Hardware stack levels used:    1
  3885 ;; Hardware stack levels required when called:    4
  3886 ;; This function calls:
  3887 ;;		Nothing
  3888 ;; This function is called by:
  3889 ;;		__puts
  3890 ;;		_write
  3891 ;; This function uses a non-reentrant model
  3892 ;;
  3893                           
  3894                           
  3895                           ;psect for function _EUSART_is_tx_ready
  3896  044F                     _EUSART_is_tx_ready:	
  3897                           
  3898                           ;mcc_generated_files/eusart.c: 115:     return eusartTxBufferRemaining;
  3899                           
  3900                           ;incstack = 0
  3901                           ; Regs used in _EUSART_is_tx_ready: [wreg]
  3902  044F  087A               	movf	_eusartTxBufferRemaining,w	;volatile
  3903  0450  0008               	return
  3904  0451                     __end_of_EUSART_is_tx_ready:	
  3905                           
  3906                           	psect	text16
  3907  021D                     __ptext16:	
  3908 ;; *************** function _EUSART_Write *****************
  3909 ;; Defined at:
  3910 ;;		line 148 in file "mcc_generated_files/eusart.c"
  3911 ;; Parameters:    Size  Location     Type
  3912 ;;  txData          1    wreg     unsigned char 
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;  txData          1    2[COMMON] unsigned char 
  3915 ;; Return value:  Size  Location     Type
  3916 ;;                  1    wreg      void 
  3917 ;; Registers used:
  3918 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3919 ;; Tracked objects:
  3920 ;;		On entry : 0/0
  3921 ;;		On exit  : 1F/1
  3922 ;;		Unchanged: 0/0
  3923 ;; Data sizes:     COMMON   BANK0   BANK1
  3924 ;;      Params:         0       0       0
  3925 ;;      Locals:         1       0       0
  3926 ;;      Temps:          0       0       0
  3927 ;;      Totals:         1       0       0
  3928 ;;Total ram usage:        1 bytes
  3929 ;; Hardware stack levels used:    1
  3930 ;; Hardware stack levels required when called:    4
  3931 ;; This function calls:
  3932 ;;		Nothing
  3933 ;; This function is called by:
  3934 ;;		__puts
  3935 ;;		_write
  3936 ;; This function uses a non-reentrant model
  3937 ;;
  3938                           
  3939                           
  3940                           ;psect for function _EUSART_Write
  3941  021D                     _EUSART_Write:	
  3942                           
  3943                           ;incstack = 0
  3944                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  3945                           ;EUSART_Write@txData stored from wreg
  3946  021D  00F2               	movwf	EUSART_Write@txData
  3947  021E                     l1750:	
  3948                           ;mcc_generated_files/eusart.c: 148: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 149: {;mcc_generated_files/eusart.c: 150:     while(0 == eusartTxBufferRemai
      +                          ning)
  3949                           
  3950                           
  3951                           ;mcc_generated_files/eusart.c: 150:     while(0 == eusartTxBufferRemaining)
  3952  021E  087A               	movf	_eusartTxBufferRemaining,w	;volatile
  3953  021F  1903               	btfsc	3,2
  3954  0220  2A1E               	goto	l1750
  3955                           
  3956                           ;mcc_generated_files/eusart.c: 154:     if(0 == PIE1bits.TXIE)
  3957  0221  0021               	movlb	1	; select bank1
  3958  0222  1A11               	btfsc	17,4	;volatile
  3959  0223  2A28               	goto	l159
  3960                           
  3961                           ;mcc_generated_files/eusart.c: 155:     {;mcc_generated_files/eusart.c: 156:         TXR
      +                          EG = txData;
  3962  0224  0872               	movf	EUSART_Write@txData,w
  3963  0225  0023               	movlb	3	; select bank3
  3964  0226  009A               	movwf	26	;volatile
  3965                           
  3966                           ;mcc_generated_files/eusart.c: 157:     }
  3967  0227  2A35               	goto	l1764
  3968  0228                     l159:	
  3969                           ;mcc_generated_files/eusart.c: 158:     else
  3970                           
  3971                           
  3972                           ;mcc_generated_files/eusart.c: 159:     {;mcc_generated_files/eusart.c: 160:         PIE
      +                          1bits.TXIE = 0;
  3973  0228  1211               	bcf	17,4	;volatile
  3974                           
  3975                           ;mcc_generated_files/eusart.c: 161:         eusartTxBuffer[eusartTxHead++] = txData;
  3976  0229  087B               	movf	_eusartTxHead,w
  3977  022A  3EA0               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  3978  022B  0086               	movwf	6
  3979  022C  0187               	clrf	7
  3980  022D  0872               	movf	EUSART_Write@txData,w
  3981  022E  0081               	movwf	1
  3982  022F  0AFB               	incf	_eusartTxHead,f	;volatile
  3983                           
  3984                           ;mcc_generated_files/eusart.c: 162:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  3985  0230  3010               	movlw	16
  3986  0231  027B               	subwf	_eusartTxHead,w
  3987  0232  1803               	btfsc	3,0
  3988                           
  3989                           ;mcc_generated_files/eusart.c: 163:         {;mcc_generated_files/eusart.c: 164:        
      +                               eusartTxHead = 0;
  3990  0233  01FB               	clrf	_eusartTxHead	;volatile
  3991                           
  3992                           ;mcc_generated_files/eusart.c: 166:         eusartTxBufferRemaining--;
  3993  0234  03FA               	decf	_eusartTxBufferRemaining,f	;volatile
  3994  0235                     l1764:	
  3995                           
  3996                           ;mcc_generated_files/eusart.c: 168:     PIE1bits.TXIE = 1;
  3997  0235  0021               	movlb	1	; select bank1
  3998  0236  1611               	bsf	17,4	;volatile
  3999  0237  0008               	return
  4000  0238                     __end_of_EUSART_Write:	
  4001                           
  4002                           	psect	text17
  4003  0451                     __ptext17:	
  4004 ;; *************** function _TMR1_StopTimer *****************
  4005 ;; Defined at:
  4006 ;;		line 99 in file "mcc_generated_files/tmr1.c"
  4007 ;; Parameters:    Size  Location     Type
  4008 ;;		None
  4009 ;; Auto vars:     Size  Location     Type
  4010 ;;		None
  4011 ;; Return value:  Size  Location     Type
  4012 ;;                  1    wreg      void 
  4013 ;; Registers used:
  4014 ;;		None
  4015 ;; Tracked objects:
  4016 ;;		On entry : 1F/0
  4017 ;;		On exit  : 1F/0
  4018 ;;		Unchanged: 0/0
  4019 ;; Data sizes:     COMMON   BANK0   BANK1
  4020 ;;      Params:         0       0       0
  4021 ;;      Locals:         0       0       0
  4022 ;;      Temps:          0       0       0
  4023 ;;      Totals:         0       0       0
  4024 ;;Total ram usage:        0 bytes
  4025 ;; Hardware stack levels used:    1
  4026 ;; Hardware stack levels required when called:    4
  4027 ;; This function calls:
  4028 ;;		Nothing
  4029 ;; This function is called by:
  4030 ;;		_logger_initialize
  4031 ;;		_process_message
  4032 ;; This function uses a non-reentrant model
  4033 ;;
  4034                           
  4035                           
  4036                           ;psect for function _TMR1_StopTimer
  4037  0451                     _TMR1_StopTimer:	
  4038                           
  4039                           ;mcc_generated_files/tmr1.c: 102:     T1CONbits.TMR1ON = 0;
  4040                           
  4041                           ;incstack = 0
  4042                           ; Regs used in _TMR1_StopTimer: []
  4043  0451  1018               	bcf	24,0	;volatile
  4044  0452  0008               	return
  4045  0453                     __end_of_TMR1_StopTimer:	
  4046                           
  4047                           	psect	text18
  4048  0453                     __ptext18:	
  4049 ;; *************** function _TMR1_StartTimer *****************
  4050 ;; Defined at:
  4051 ;;		line 93 in file "mcc_generated_files/tmr1.c"
  4052 ;; Parameters:    Size  Location     Type
  4053 ;;		None
  4054 ;; Auto vars:     Size  Location     Type
  4055 ;;		None
  4056 ;; Return value:  Size  Location     Type
  4057 ;;                  1    wreg      void 
  4058 ;; Registers used:
  4059 ;;		None
  4060 ;; Tracked objects:
  4061 ;;		On entry : 1F/0
  4062 ;;		On exit  : 1F/0
  4063 ;;		Unchanged: 0/0
  4064 ;; Data sizes:     COMMON   BANK0   BANK1
  4065 ;;      Params:         0       0       0
  4066 ;;      Locals:         0       0       0
  4067 ;;      Temps:          0       0       0
  4068 ;;      Totals:         0       0       0
  4069 ;;Total ram usage:        0 bytes
  4070 ;; Hardware stack levels used:    1
  4071 ;; Hardware stack levels required when called:    4
  4072 ;; This function calls:
  4073 ;;		Nothing
  4074 ;; This function is called by:
  4075 ;;		_process_message
  4076 ;; This function uses a non-reentrant model
  4077 ;;
  4078                           
  4079                           
  4080                           ;psect for function _TMR1_StartTimer
  4081  0453                     _TMR1_StartTimer:	
  4082                           
  4083                           ;mcc_generated_files/tmr1.c: 96:     T1CONbits.TMR1ON = 1;
  4084                           
  4085                           ;incstack = 0
  4086                           ; Regs used in _TMR1_StartTimer: []
  4087  0453  1418               	bsf	24,0	;volatile
  4088  0454  0008               	return
  4089  0455                     __end_of_TMR1_StartTimer:	
  4090                           
  4091                           	psect	text19
  4092  043F                     __ptext19:	
  4093 ;; *************** function _ADC_StartConversion *****************
  4094 ;; Defined at:
  4095 ;;		line 93 in file "mcc_generated_files/adc.c"
  4096 ;; Parameters:    Size  Location     Type
  4097 ;;		None
  4098 ;; Auto vars:     Size  Location     Type
  4099 ;;		None
  4100 ;; Return value:  Size  Location     Type
  4101 ;;                  1    wreg      void 
  4102 ;; Registers used:
  4103 ;;		None
  4104 ;; Tracked objects:
  4105 ;;		On entry : 1F/0
  4106 ;;		On exit  : 1F/1
  4107 ;;		Unchanged: 0/0
  4108 ;; Data sizes:     COMMON   BANK0   BANK1
  4109 ;;      Params:         0       0       0
  4110 ;;      Locals:         0       0       0
  4111 ;;      Temps:          0       0       0
  4112 ;;      Totals:         0       0       0
  4113 ;;Total ram usage:        0 bytes
  4114 ;; Hardware stack levels used:    1
  4115 ;; Hardware stack levels required when called:    4
  4116 ;; This function calls:
  4117 ;;		Nothing
  4118 ;; This function is called by:
  4119 ;;		_process_message
  4120 ;; This function uses a non-reentrant model
  4121 ;;
  4122                           
  4123                           
  4124                           ;psect for function _ADC_StartConversion
  4125  043F                     _ADC_StartConversion:	
  4126  043F                     l1776:	
  4127                           ;incstack = 0
  4128                           ; Regs used in _ADC_StartConversion: []
  4129                           
  4130                           
  4131                           ;mcc_generated_files/adc.c: 96:     ADCON0bits.GO_nDONE = 1;
  4132  043F  0021               	movlb	1	; select bank1
  4133  0440  149D               	bsf	29,1	;volatile
  4134  0441  0008               	return
  4135  0442                     __end_of_ADC_StartConversion:	
  4136                           
  4137                           	psect	text20
  4138  0268                     __ptext20:	
  4139 ;; *************** function _EUSART_Read *****************
  4140 ;; Defined at:
  4141 ;;		line 128 in file "mcc_generated_files/eusart.c"
  4142 ;; Parameters:    Size  Location     Type
  4143 ;;		None
  4144 ;; Auto vars:     Size  Location     Type
  4145 ;;  readValue       1    2[COMMON] unsigned char 
  4146 ;; Return value:  Size  Location     Type
  4147 ;;                  1    wreg      unsigned char 
  4148 ;; Registers used:
  4149 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4150 ;; Tracked objects:
  4151 ;;		On entry : 1F/0
  4152 ;;		On exit  : 1F/1
  4153 ;;		Unchanged: 0/0
  4154 ;; Data sizes:     COMMON   BANK0   BANK1
  4155 ;;      Params:         0       0       0
  4156 ;;      Locals:         1       0       0
  4157 ;;      Temps:          0       0       0
  4158 ;;      Totals:         1       0       0
  4159 ;;Total ram usage:        1 bytes
  4160 ;; Hardware stack levels used:    1
  4161 ;; Hardware stack levels required when called:    4
  4162 ;; This function calls:
  4163 ;;		Nothing
  4164 ;; This function is called by:
  4165 ;;		_bt_message_handler
  4166 ;; This function uses a non-reentrant model
  4167 ;;
  4168                           
  4169                           
  4170                           ;psect for function _EUSART_Read
  4171  0268                     _EUSART_Read:	
  4172  0268                     l1896:	
  4173                           ;mcc_generated_files/eusart.c: 132:     while(0 == eusartRxCount)
  4174                           
  4175                           ;incstack = 0
  4176                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  4177                           
  4178                           
  4179                           ;mcc_generated_files/eusart.c: 132:     while(0 == eusartRxCount)
  4180  0268  083B               	movf	_eusartRxCount,w	;volatile
  4181  0269  1903               	btfsc	3,2
  4182  026A  2A68               	goto	l1896
  4183                           
  4184                           ;mcc_generated_files/eusart.c: 136:     readValue = eusartRxBuffer[eusartRxTail++];
  4185  026B  083C               	movf	_eusartRxTail,w
  4186  026C  3E20               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  4187  026D  0086               	movwf	6
  4188  026E  0187               	clrf	7
  4189  026F  0801               	movf	1,w
  4190  0270  00F2               	movwf	EUSART_Read@readValue
  4191  0271  0ABC               	incf	_eusartRxTail,f	;volatile
  4192                           
  4193                           ;mcc_generated_files/eusart.c: 137:     if(sizeof(eusartRxBuffer) <= eusartRxTail)
  4194  0272  3008               	movlw	8
  4195  0273  023C               	subwf	_eusartRxTail,w
  4196  0274  1803               	btfsc	3,0
  4197                           
  4198                           ;mcc_generated_files/eusart.c: 138:     {;mcc_generated_files/eusart.c: 139:         eus
      +                          artRxTail = 0;
  4199  0275  01BC               	clrf	_eusartRxTail	;volatile
  4200                           
  4201                           ;mcc_generated_files/eusart.c: 141:     PIE1bits.RCIE = 0;
  4202  0276  0021               	movlb	1	; select bank1
  4203  0277  1291               	bcf	17,5	;volatile
  4204                           
  4205                           ;mcc_generated_files/eusart.c: 142:     eusartRxCount--;
  4206  0278  0020               	movlb	0	; select bank0
  4207  0279  03BB               	decf	_eusartRxCount,f	;volatile
  4208                           
  4209                           ;mcc_generated_files/eusart.c: 143:     PIE1bits.RCIE = 1;
  4210  027A  0021               	movlb	1	; select bank1
  4211  027B  1691               	bsf	17,5	;volatile
  4212                           
  4213                           ;mcc_generated_files/eusart.c: 145:     return readValue;
  4214  027C  0872               	movf	EUSART_Read@readValue,w
  4215  027D  0008               	return
  4216  027E                     __end_of_EUSART_Read:	
  4217                           
  4218                           	psect	text21
  4219  03F8                     __ptext21:	
  4220 ;; *************** function _SYSTEM_Initialize *****************
  4221 ;; Defined at:
  4222 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4223 ;; Parameters:    Size  Location     Type
  4224 ;;		None
  4225 ;; Auto vars:     Size  Location     Type
  4226 ;;		None
  4227 ;; Return value:  Size  Location     Type
  4228 ;;                  1    wreg      void 
  4229 ;; Registers used:
  4230 ;;		wreg, status,2, status,0, pclath, cstack
  4231 ;; Tracked objects:
  4232 ;;		On entry : B1F/0
  4233 ;;		On exit  : 1F/1
  4234 ;;		Unchanged: 0/0
  4235 ;; Data sizes:     COMMON   BANK0   BANK1
  4236 ;;      Params:         0       0       0
  4237 ;;      Locals:         0       0       0
  4238 ;;      Temps:          0       0       0
  4239 ;;      Totals:         0       0       0
  4240 ;;Total ram usage:        0 bytes
  4241 ;; Hardware stack levels used:    1
  4242 ;; Hardware stack levels required when called:    6
  4243 ;; This function calls:
  4244 ;;		_ADC_Initialize
  4245 ;;		_EUSART_Initialize
  4246 ;;		_OSCILLATOR_Initialize
  4247 ;;		_PIN_MANAGER_Initialize
  4248 ;;		_TMR1_Initialize
  4249 ;;		_WDT_Initialize
  4250 ;; This function is called by:
  4251 ;;		_main
  4252 ;; This function uses a non-reentrant model
  4253 ;;
  4254                           
  4255                           
  4256                           ;psect for function _SYSTEM_Initialize
  4257  03F8                     _SYSTEM_Initialize:	
  4258                           
  4259                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  4260                           
  4261                           ;incstack = 0
  4262                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4263  03F8  21E0               	fcall	_PIN_MANAGER_Initialize
  4264                           
  4265                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  4266  03F9  23A4               	fcall	_OSCILLATOR_Initialize
  4267                           
  4268                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  4269  03FA  2442               	fcall	_WDT_Initialize
  4270                           
  4271                           ;mcc_generated_files/mcc.c: 56:     TMR1_Initialize();
  4272  03FB  227E               	fcall	_TMR1_Initialize
  4273                           
  4274                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  4275  03FC  23AE               	fcall	_ADC_Initialize
  4276                           
  4277                           ;mcc_generated_files/mcc.c: 58:     EUSART_Initialize();
  4278  03FD  299E               	ljmp	l1864
  4279  03FE                     __end_of_SYSTEM_Initialize:	
  4280                           
  4281                           	psect	text22
  4282  0442                     __ptext22:	
  4283 ;; *************** function _WDT_Initialize *****************
  4284 ;; Defined at:
  4285 ;;		line 75 in file "mcc_generated_files/mcc.c"
  4286 ;; Parameters:    Size  Location     Type
  4287 ;;		None
  4288 ;; Auto vars:     Size  Location     Type
  4289 ;;		None
  4290 ;; Return value:  Size  Location     Type
  4291 ;;                  1    wreg      void 
  4292 ;; Registers used:
  4293 ;;		wreg
  4294 ;; Tracked objects:
  4295 ;;		On entry : 1F/1
  4296 ;;		On exit  : 1F/1
  4297 ;;		Unchanged: 0/0
  4298 ;; Data sizes:     COMMON   BANK0   BANK1
  4299 ;;      Params:         0       0       0
  4300 ;;      Locals:         0       0       0
  4301 ;;      Temps:          0       0       0
  4302 ;;      Totals:         0       0       0
  4303 ;;Total ram usage:        0 bytes
  4304 ;; Hardware stack levels used:    1
  4305 ;; Hardware stack levels required when called:    4
  4306 ;; This function calls:
  4307 ;;		Nothing
  4308 ;; This function is called by:
  4309 ;;		_SYSTEM_Initialize
  4310 ;; This function uses a non-reentrant model
  4311 ;;
  4312                           
  4313                           
  4314                           ;psect for function _WDT_Initialize
  4315  0442                     _WDT_Initialize:	
  4316                           
  4317                           ;mcc_generated_files/mcc.c: 78:     WDTCON = 0x16;
  4318                           
  4319                           ;incstack = 0
  4320                           ; Regs used in _WDT_Initialize: [wreg]
  4321  0442  3016               	movlw	22
  4322  0443  0097               	movwf	23	;volatile
  4323  0444  0008               	return
  4324  0445                     __end_of_WDT_Initialize:	
  4325                           
  4326                           	psect	text23
  4327  027E                     __ptext23:	
  4328 ;; *************** function _TMR1_Initialize *****************
  4329 ;; Defined at:
  4330 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  4331 ;; Parameters:    Size  Location     Type
  4332 ;;		None
  4333 ;; Auto vars:     Size  Location     Type
  4334 ;;		None
  4335 ;; Return value:  Size  Location     Type
  4336 ;;                  1    wreg      void 
  4337 ;; Registers used:
  4338 ;;		wreg, status,2, status,0, pclath, cstack
  4339 ;; Tracked objects:
  4340 ;;		On entry : 1F/1
  4341 ;;		On exit  : 1F/0
  4342 ;;		Unchanged: 0/0
  4343 ;; Data sizes:     COMMON   BANK0   BANK1
  4344 ;;      Params:         0       0       0
  4345 ;;      Locals:         0       0       0
  4346 ;;      Temps:          0       0       0
  4347 ;;      Totals:         0       0       0
  4348 ;;Total ram usage:        0 bytes
  4349 ;; Hardware stack levels used:    1
  4350 ;; Hardware stack levels required when called:    5
  4351 ;; This function calls:
  4352 ;;		_TMR1_SetInterruptHandler
  4353 ;; This function is called by:
  4354 ;;		_SYSTEM_Initialize
  4355 ;; This function uses a non-reentrant model
  4356 ;;
  4357                           
  4358                           
  4359                           ;psect for function _TMR1_Initialize
  4360  027E                     _TMR1_Initialize:	
  4361                           
  4362                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  4363                           
  4364                           ;incstack = 0
  4365                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4366  027E  0020               	movlb	0	; select bank0
  4367  027F  0199               	clrf	25	;volatile
  4368                           
  4369                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x63;
  4370  0280  3063               	movlw	99
  4371  0281  0097               	movwf	23	;volatile
  4372                           
  4373                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xC0;
  4374  0282  30C0               	movlw	192
  4375  0283  0096               	movwf	22	;volatile
  4376                           
  4377                           ;mcc_generated_files/tmr1.c: 78:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  4378  0284  0817               	movf	23,w	;volatile
  4379  0285  00AB               	movwf	_timer1ReloadVal+1	;volatile
  4380  0286  01AA               	clrf	_timer1ReloadVal	;volatile
  4381  0287  0816               	movf	22,w	;volatile
  4382  0288  04AA               	iorwf	_timer1ReloadVal,f	;volatile
  4383                           
  4384                           ;mcc_generated_files/tmr1.c: 81:     PIR1bits.TMR1IF = 0;
  4385  0289  1011               	bcf	17,0	;volatile
  4386                           
  4387                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  4388  028A  0021               	movlb	1	; select bank1
  4389  028B  1411               	bsf	17,0	;volatile
  4390                           
  4391                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  4392  028C  3058               	movlw	low _TMR1_DefaultInterruptHandler
  4393  028D  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  4394  028E  3004               	movlw	high _TMR1_DefaultInterruptHandler
  4395  028F  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  4396  0290  23FE               	fcall	_TMR1_SetInterruptHandler
  4397                           
  4398                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x11;
  4399  0291  3011               	movlw	17
  4400  0292  0098               	movwf	24	;volatile
  4401  0293  0008               	return
  4402  0294                     __end_of_TMR1_Initialize:	
  4403                           
  4404                           	psect	text24
  4405  03FE                     __ptext24:	
  4406 ;; *************** function _TMR1_SetInterruptHandler *****************
  4407 ;; Defined at:
  4408 ;;		line 171 in file "mcc_generated_files/tmr1.c"
  4409 ;; Parameters:    Size  Location     Type
  4410 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  4411 ;;		 -> _TMR1_Ready(1), TMR1_DefaultInterruptHandler(1), 
  4412 ;; Auto vars:     Size  Location     Type
  4413 ;;		None
  4414 ;; Return value:  Size  Location     Type
  4415 ;;                  1    wreg      void 
  4416 ;; Registers used:
  4417 ;;		wreg
  4418 ;; Tracked objects:
  4419 ;;		On entry : 1E/0
  4420 ;;		On exit  : 1F/0
  4421 ;;		Unchanged: 0/0
  4422 ;; Data sizes:     COMMON   BANK0   BANK1
  4423 ;;      Params:         2       0       0
  4424 ;;      Locals:         0       0       0
  4425 ;;      Temps:          0       0       0
  4426 ;;      Totals:         2       0       0
  4427 ;;Total ram usage:        2 bytes
  4428 ;; Hardware stack levels used:    1
  4429 ;; Hardware stack levels required when called:    4
  4430 ;; This function calls:
  4431 ;;		Nothing
  4432 ;; This function is called by:
  4433 ;;		_TMR1_Initialize
  4434 ;;		_logger_initialize
  4435 ;; This function uses a non-reentrant model
  4436 ;;
  4437                           
  4438                           
  4439                           ;psect for function _TMR1_SetInterruptHandler
  4440  03FE                     _TMR1_SetInterruptHandler:	
  4441                           
  4442                           ;mcc_generated_files/tmr1.c: 172:     TMR1_InterruptHandler = InterruptHandler;
  4443                           
  4444                           ;incstack = 0
  4445                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  4446  03FE  0873               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  4447  03FF  0020               	movlb	0	; select bank0
  4448  0400  00A9               	movwf	_TMR1_InterruptHandler+1
  4449  0401  0872               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  4450  0402  00A8               	movwf	_TMR1_InterruptHandler
  4451  0403  0008               	return
  4452  0404                     __end_of_TMR1_SetInterruptHandler:	
  4453                           
  4454                           	psect	text25
  4455  01E0                     __ptext25:	
  4456 ;; *************** function _PIN_MANAGER_Initialize *****************
  4457 ;; Defined at:
  4458 ;;		line 59 in file "mcc_generated_files/pin_manager.c"
  4459 ;; Parameters:    Size  Location     Type
  4460 ;;		None
  4461 ;; Auto vars:     Size  Location     Type
  4462 ;;		None
  4463 ;; Return value:  Size  Location     Type
  4464 ;;                  1    wreg      void 
  4465 ;; Registers used:
  4466 ;;		wreg, status,2, status,0, pclath, cstack
  4467 ;; Tracked objects:
  4468 ;;		On entry : B1F/0
  4469 ;;		On exit  : 1F/0
  4470 ;;		Unchanged: 0/0
  4471 ;; Data sizes:     COMMON   BANK0   BANK1
  4472 ;;      Params:         0       0       0
  4473 ;;      Locals:         0       0       0
  4474 ;;      Temps:          0       0       0
  4475 ;;      Totals:         0       0       0
  4476 ;;Total ram usage:        0 bytes
  4477 ;; Hardware stack levels used:    1
  4478 ;; Hardware stack levels required when called:    5
  4479 ;; This function calls:
  4480 ;;		_IOCAF4_SetInterruptHandler
  4481 ;; This function is called by:
  4482 ;;		_SYSTEM_Initialize
  4483 ;; This function uses a non-reentrant model
  4484 ;;
  4485                           
  4486                           
  4487                           ;psect for function _PIN_MANAGER_Initialize
  4488  01E0                     _PIN_MANAGER_Initialize:	
  4489                           
  4490                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
  4491                           
  4492                           ;incstack = 0
  4493                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4494  01E0  0022               	movlb	2	; select bank2
  4495  01E1  018C               	clrf	12	;volatile
  4496                           
  4497                           ;mcc_generated_files/pin_manager.c: 65:     LATC = 0x00;
  4498  01E2  018E               	clrf	14	;volatile
  4499                           
  4500                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x1F;
  4501  01E3  301F               	movlw	31
  4502  01E4  0021               	movlb	1	; select bank1
  4503  01E5  008C               	movwf	12	;volatile
  4504                           
  4505                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0x2F;
  4506  01E6  302F               	movlw	47
  4507  01E7  008E               	movwf	14	;volatile
  4508                           
  4509                           ;mcc_generated_files/pin_manager.c: 76:     ANSELC = 0x0F;
  4510  01E8  300F               	movlw	15
  4511  01E9  0023               	movlb	3	; select bank3
  4512  01EA  008E               	movwf	14	;volatile
  4513                           
  4514                           ;mcc_generated_files/pin_manager.c: 77:     ANSELA = 0x07;
  4515  01EB  3007               	movlw	7
  4516  01EC  008C               	movwf	12	;volatile
  4517                           
  4518                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x10;
  4519  01ED  3010               	movlw	16
  4520  01EE  0024               	movlb	4	; select bank4
  4521  01EF  008C               	movwf	12	;volatile
  4522                           
  4523                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
  4524  01F0  018E               	clrf	14	;volatile
  4525                           
  4526                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 0;
  4527  01F1  0021               	movlb	1	; select bank1
  4528  01F2  1395               	bcf	21,7	;volatile
  4529                           
  4530                           ;mcc_generated_files/pin_manager.c: 93:     APFCON = 0x00;
  4531  01F3  0022               	movlb	2	; select bank2
  4532  01F4  019D               	clrf	29	;volatile
  4533                           
  4534                           ;mcc_generated_files/pin_manager.c: 99:     IOCAFbits.IOCAF4 = 0;
  4535  01F5  0027               	movlb	7	; select bank7
  4536  01F6  1213               	bcf	19,4	;volatile
  4537                           
  4538                           ;mcc_generated_files/pin_manager.c: 101:     IOCANbits.IOCAN4 = 1;
  4539  01F7  1612               	bsf	18,4	;volatile
  4540                           
  4541                           ;mcc_generated_files/pin_manager.c: 103:     IOCAPbits.IOCAP4 = 1;
  4542  01F8  1611               	bsf	17,4	;volatile
  4543                           
  4544                           ;mcc_generated_files/pin_manager.c: 108:     IOCAF4_SetInterruptHandler(IOCAF4_DefaultIn
      +                          terruptHandler);
  4545  01F9  3059               	movlw	low _IOCAF4_DefaultInterruptHandler
  4546  01FA  00F2               	movwf	IOCAF4_SetInterruptHandler@InterruptHandler
  4547  01FB  3004               	movlw	high _IOCAF4_DefaultInterruptHandler
  4548  01FC  00F3               	movwf	IOCAF4_SetInterruptHandler@InterruptHandler+1
  4549  01FD  2404               	fcall	_IOCAF4_SetInterruptHandler
  4550                           
  4551                           ;mcc_generated_files/pin_manager.c: 111:     INTCONbits.IOCIE = 1;
  4552  01FE  158B               	bsf	11,3	;volatile
  4553  01FF  0008               	return
  4554  0200                     __end_of_PIN_MANAGER_Initialize:	
  4555                           
  4556                           	psect	text26
  4557  0404                     __ptext26:	
  4558 ;; *************** function _IOCAF4_SetInterruptHandler *****************
  4559 ;; Defined at:
  4560 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
  4561 ;; Parameters:    Size  Location     Type
  4562 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  4563 ;;		 -> _IOC_Ready(1), IOCAF4_DefaultInterruptHandler(1), 
  4564 ;; Auto vars:     Size  Location     Type
  4565 ;;		None
  4566 ;; Return value:  Size  Location     Type
  4567 ;;                  1    wreg      void 
  4568 ;; Registers used:
  4569 ;;		wreg
  4570 ;; Tracked objects:
  4571 ;;		On entry : 18/0
  4572 ;;		On exit  : 1F/0
  4573 ;;		Unchanged: 0/0
  4574 ;; Data sizes:     COMMON   BANK0   BANK1
  4575 ;;      Params:         2       0       0
  4576 ;;      Locals:         0       0       0
  4577 ;;      Temps:          0       0       0
  4578 ;;      Totals:         2       0       0
  4579 ;;Total ram usage:        2 bytes
  4580 ;; Hardware stack levels used:    1
  4581 ;; Hardware stack levels required when called:    4
  4582 ;; This function calls:
  4583 ;;		Nothing
  4584 ;; This function is called by:
  4585 ;;		_PIN_MANAGER_Initialize
  4586 ;;		_logger_initialize
  4587 ;; This function uses a non-reentrant model
  4588 ;;
  4589                           
  4590                           
  4591                           ;psect for function _IOCAF4_SetInterruptHandler
  4592  0404                     _IOCAF4_SetInterruptHandler:	
  4593                           
  4594                           ;mcc_generated_files/pin_manager.c: 143:     IOCAF4_InterruptHandler = InterruptHandler;
  4595                           
  4596                           ;incstack = 0
  4597                           ; Regs used in _IOCAF4_SetInterruptHandler: [wreg]
  4598  0404  0873               	movf	IOCAF4_SetInterruptHandler@InterruptHandler+1,w
  4599  0405  0020               	movlb	0	; select bank0
  4600  0406  00E8               	movwf	_IOCAF4_InterruptHandler+1
  4601  0407  0872               	movf	IOCAF4_SetInterruptHandler@InterruptHandler,w
  4602  0408  00E7               	movwf	_IOCAF4_InterruptHandler
  4603  0409  0008               	return
  4604  040A                     __end_of_IOCAF4_SetInterruptHandler:	
  4605                           
  4606                           	psect	text27
  4607  03A4                     __ptext27:	
  4608 ;; *************** function _OSCILLATOR_Initialize *****************
  4609 ;; Defined at:
  4610 ;;		line 61 in file "mcc_generated_files/mcc.c"
  4611 ;; Parameters:    Size  Location     Type
  4612 ;;		None
  4613 ;; Auto vars:     Size  Location     Type
  4614 ;;		None
  4615 ;; Return value:  Size  Location     Type
  4616 ;;                  1    wreg      void 
  4617 ;; Registers used:
  4618 ;;		wreg, status,2
  4619 ;; Tracked objects:
  4620 ;;		On entry : 1F/0
  4621 ;;		On exit  : 1F/1
  4622 ;;		Unchanged: 0/0
  4623 ;; Data sizes:     COMMON   BANK0   BANK1
  4624 ;;      Params:         0       0       0
  4625 ;;      Locals:         0       0       0
  4626 ;;      Temps:          0       0       0
  4627 ;;      Totals:         0       0       0
  4628 ;;Total ram usage:        0 bytes
  4629 ;; Hardware stack levels used:    1
  4630 ;; Hardware stack levels required when called:    4
  4631 ;; This function calls:
  4632 ;;		Nothing
  4633 ;; This function is called by:
  4634 ;;		_SYSTEM_Initialize
  4635 ;; This function uses a non-reentrant model
  4636 ;;
  4637                           
  4638                           
  4639                           ;psect for function _OSCILLATOR_Initialize
  4640  03A4                     _OSCILLATOR_Initialize:	
  4641                           
  4642                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  4643                           
  4644                           ;incstack = 0
  4645                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4646  03A4  3070               	movlw	112
  4647  03A5  0021               	movlb	1	; select bank1
  4648  03A6  0099               	movwf	25	;volatile
  4649                           
  4650                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  4651  03A7  0198               	clrf	24	;volatile
  4652                           
  4653                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  4654  03A8  0022               	movlb	2	; select bank2
  4655  03A9  0196               	clrf	22	;volatile
  4656  03AA                     l211:	
  4657                           ;mcc_generated_files/mcc.c: 71:     {;mcc_generated_files/mcc.c: 72:     }
  4658                           
  4659                           
  4660                           ;mcc_generated_files/mcc.c: 70:     while(PLLR == 0)
  4661  03AA  0021               	movlb	1	; select bank1
  4662  03AB  1B1A               	btfsc	26,6	;volatile
  4663  03AC  0008               	return
  4664  03AD  2BAA               	goto	l211
  4665  03AE                     __end_of_OSCILLATOR_Initialize:	
  4666                           
  4667                           	psect	text28
  4668  019E                     __ptext28:	
  4669 ;; *************** function _EUSART_Initialize *****************
  4670 ;; Defined at:
  4671 ;;		line 75 in file "mcc_generated_files/eusart.c"
  4672 ;; Parameters:    Size  Location     Type
  4673 ;;		None
  4674 ;; Auto vars:     Size  Location     Type
  4675 ;;		None
  4676 ;; Return value:  Size  Location     Type
  4677 ;;                  1    wreg      void 
  4678 ;; Registers used:
  4679 ;;		wreg, status,2, status,0, pclath, cstack
  4680 ;; Tracked objects:
  4681 ;;		On entry : 1F/1
  4682 ;;		On exit  : 1F/1
  4683 ;;		Unchanged: 0/0
  4684 ;; Data sizes:     COMMON   BANK0   BANK1
  4685 ;;      Params:         0       0       0
  4686 ;;      Locals:         0       0       0
  4687 ;;      Temps:          0       0       0
  4688 ;;      Totals:         0       0       0
  4689 ;;Total ram usage:        0 bytes
  4690 ;; Hardware stack levels used:    1
  4691 ;; Hardware stack levels required when called:    5
  4692 ;; This function calls:
  4693 ;;		_EUSART_SetRxInterruptHandler
  4694 ;;		_EUSART_SetTxInterruptHandler
  4695 ;; This function is called by:
  4696 ;;		_SYSTEM_Initialize
  4697 ;; This function uses a non-reentrant model
  4698 ;;
  4699                           
  4700                           
  4701                           ;psect for function _EUSART_Initialize
  4702  019E                     _EUSART_Initialize:	
  4703  019E                     l1864:	
  4704                           ;incstack = 0
  4705                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4706                           
  4707                           
  4708                           ;mcc_generated_files/eusart.c: 78:     PIE1bits.RCIE = 0;
  4709  019E  1291               	bcf	17,5	;volatile
  4710                           
  4711                           ;mcc_generated_files/eusart.c: 79:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  4712  019F  30AA               	movlw	low _EUSART_Receive_ISR
  4713  01A0  00F2               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  4714  01A1  3002               	movlw	high _EUSART_Receive_ISR
  4715  01A2  00F3               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  4716  01A3  2410               	fcall	_EUSART_SetRxInterruptHandler
  4717                           
  4718                           ;mcc_generated_files/eusart.c: 80:     PIE1bits.TXIE = 0;
  4719  01A4  0021               	movlb	1	; select bank1
  4720  01A5  1211               	bcf	17,4	;volatile
  4721                           
  4722                           ;mcc_generated_files/eusart.c: 81:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  4723  01A6  3094               	movlw	low _EUSART_Transmit_ISR
  4724  01A7  00F2               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  4725  01A8  3002               	movlw	high _EUSART_Transmit_ISR
  4726  01A9  00F3               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  4727  01AA  240A               	fcall	_EUSART_SetTxInterruptHandler
  4728                           
  4729                           ;mcc_generated_files/eusart.c: 85:     BAUDCON = 0x08;
  4730  01AB  3008               	movlw	8
  4731  01AC  0023               	movlb	3	; select bank3
  4732  01AD  009F               	movwf	31	;volatile
  4733                           
  4734                           ;mcc_generated_files/eusart.c: 88:     RCSTA = 0x90;
  4735  01AE  3090               	movlw	144
  4736  01AF  009D               	movwf	29	;volatile
  4737                           
  4738                           ;mcc_generated_files/eusart.c: 91:     TXSTA = 0x24;
  4739  01B0  3024               	movlw	36
  4740  01B1  009E               	movwf	30	;volatile
  4741                           
  4742                           ;mcc_generated_files/eusart.c: 94:     SPBRGL = 0x44;
  4743  01B2  3044               	movlw	68
  4744  01B3  009B               	movwf	27	;volatile
  4745                           
  4746                           ;mcc_generated_files/eusart.c: 97:     SPBRGH = 0x00;
  4747  01B4  019C               	clrf	28	;volatile
  4748                           
  4749                           ;mcc_generated_files/eusart.c: 101:     eusartTxHead = 0;
  4750  01B5  01FB               	clrf	_eusartTxHead	;volatile
  4751                           
  4752                           ;mcc_generated_files/eusart.c: 102:     eusartTxTail = 0;
  4753  01B6  0020               	movlb	0	; select bank0
  4754  01B7  01BE               	clrf	_eusartTxTail	;volatile
  4755                           
  4756                           ;mcc_generated_files/eusart.c: 103:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  4757  01B8  3010               	movlw	16
  4758  01B9  00FA               	movwf	_eusartTxBufferRemaining	;volatile
  4759                           
  4760                           ;mcc_generated_files/eusart.c: 105:     eusartRxHead = 0;
  4761  01BA  01BD               	clrf	_eusartRxHead	;volatile
  4762                           
  4763                           ;mcc_generated_files/eusart.c: 106:     eusartRxTail = 0;
  4764  01BB  01BC               	clrf	_eusartRxTail	;volatile
  4765                           
  4766                           ;mcc_generated_files/eusart.c: 107:     eusartRxCount = 0;
  4767  01BC  01BB               	clrf	_eusartRxCount	;volatile
  4768                           
  4769                           ;mcc_generated_files/eusart.c: 110:     PIE1bits.RCIE = 1;
  4770  01BD  0021               	movlb	1	; select bank1
  4771  01BE  1691               	bsf	17,5	;volatile
  4772  01BF  0008               	return
  4773  01C0                     __end_of_EUSART_Initialize:	
  4774                           
  4775                           	psect	text29
  4776  040A                     __ptext29:	
  4777 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  4778 ;; Defined at:
  4779 ;;		line 211 in file "mcc_generated_files/eusart.c"
  4780 ;; Parameters:    Size  Location     Type
  4781 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  4782 ;;		 -> EUSART_Transmit_ISR(1), 
  4783 ;; Auto vars:     Size  Location     Type
  4784 ;;		None
  4785 ;; Return value:  Size  Location     Type
  4786 ;;                  1    wreg      void 
  4787 ;; Registers used:
  4788 ;;		wreg
  4789 ;; Tracked objects:
  4790 ;;		On entry : 1F/1
  4791 ;;		On exit  : 1F/0
  4792 ;;		Unchanged: 0/0
  4793 ;; Data sizes:     COMMON   BANK0   BANK1
  4794 ;;      Params:         2       0       0
  4795 ;;      Locals:         0       0       0
  4796 ;;      Temps:          0       0       0
  4797 ;;      Totals:         2       0       0
  4798 ;;Total ram usage:        2 bytes
  4799 ;; Hardware stack levels used:    1
  4800 ;; Hardware stack levels required when called:    4
  4801 ;; This function calls:
  4802 ;;		Nothing
  4803 ;; This function is called by:
  4804 ;;		_EUSART_Initialize
  4805 ;; This function uses a non-reentrant model
  4806 ;;
  4807                           
  4808                           
  4809                           ;psect for function _EUSART_SetTxInterruptHandler
  4810  040A                     _EUSART_SetTxInterruptHandler:	
  4811                           
  4812                           ;mcc_generated_files/eusart.c: 212:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  4813                           
  4814                           ;incstack = 0
  4815                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  4816  040A  0873               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  4817  040B  0020               	movlb	0	; select bank0
  4818  040C  00B1               	movwf	_EUSART_TxDefaultInterruptHandler+1
  4819  040D  0872               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  4820  040E  00B0               	movwf	_EUSART_TxDefaultInterruptHandler
  4821  040F  0008               	return
  4822  0410                     __end_of_EUSART_SetTxInterruptHandler:	
  4823                           
  4824                           	psect	text30
  4825  0410                     __ptext30:	
  4826 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  4827 ;; Defined at:
  4828 ;;		line 215 in file "mcc_generated_files/eusart.c"
  4829 ;; Parameters:    Size  Location     Type
  4830 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  4831 ;;		 -> EUSART_Receive_ISR(1), 
  4832 ;; Auto vars:     Size  Location     Type
  4833 ;;		None
  4834 ;; Return value:  Size  Location     Type
  4835 ;;                  1    wreg      void 
  4836 ;; Registers used:
  4837 ;;		wreg
  4838 ;; Tracked objects:
  4839 ;;		On entry : 1F/1
  4840 ;;		On exit  : 1F/0
  4841 ;;		Unchanged: 0/0
  4842 ;; Data sizes:     COMMON   BANK0   BANK1
  4843 ;;      Params:         2       0       0
  4844 ;;      Locals:         0       0       0
  4845 ;;      Temps:          0       0       0
  4846 ;;      Totals:         2       0       0
  4847 ;;Total ram usage:        2 bytes
  4848 ;; Hardware stack levels used:    1
  4849 ;; Hardware stack levels required when called:    4
  4850 ;; This function calls:
  4851 ;;		Nothing
  4852 ;; This function is called by:
  4853 ;;		_EUSART_Initialize
  4854 ;; This function uses a non-reentrant model
  4855 ;;
  4856                           
  4857                           
  4858                           ;psect for function _EUSART_SetRxInterruptHandler
  4859  0410                     _EUSART_SetRxInterruptHandler:	
  4860                           
  4861                           ;mcc_generated_files/eusart.c: 216:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  4862                           
  4863                           ;incstack = 0
  4864                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  4865  0410  0873               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  4866  0411  0020               	movlb	0	; select bank0
  4867  0412  00AF               	movwf	_EUSART_RxDefaultInterruptHandler+1
  4868  0413  0872               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  4869  0414  00AE               	movwf	_EUSART_RxDefaultInterruptHandler
  4870  0415  0008               	return
  4871  0416                     __end_of_EUSART_SetRxInterruptHandler:	
  4872                           
  4873                           	psect	text31
  4874  03AE                     __ptext31:	
  4875 ;; *************** function _ADC_Initialize *****************
  4876 ;; Defined at:
  4877 ;;		line 65 in file "mcc_generated_files/adc.c"
  4878 ;; Parameters:    Size  Location     Type
  4879 ;;		None
  4880 ;; Auto vars:     Size  Location     Type
  4881 ;;		None
  4882 ;; Return value:  Size  Location     Type
  4883 ;;                  1    wreg      void 
  4884 ;; Registers used:
  4885 ;;		wreg, status,2
  4886 ;; Tracked objects:
  4887 ;;		On entry : 1F/0
  4888 ;;		On exit  : 1F/1
  4889 ;;		Unchanged: 0/0
  4890 ;; Data sizes:     COMMON   BANK0   BANK1
  4891 ;;      Params:         0       0       0
  4892 ;;      Locals:         0       0       0
  4893 ;;      Temps:          0       0       0
  4894 ;;      Totals:         0       0       0
  4895 ;;Total ram usage:        0 bytes
  4896 ;; Hardware stack levels used:    1
  4897 ;; Hardware stack levels required when called:    4
  4898 ;; This function calls:
  4899 ;;		Nothing
  4900 ;; This function is called by:
  4901 ;;		_SYSTEM_Initialize
  4902 ;; This function uses a non-reentrant model
  4903 ;;
  4904                           
  4905                           
  4906                           ;psect for function _ADC_Initialize
  4907  03AE                     _ADC_Initialize:	
  4908                           
  4909                           ;mcc_generated_files/adc.c: 70:     ADCON0 = 0x01;
  4910                           
  4911                           ;incstack = 0
  4912                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  4913  03AE  3001               	movlw	1
  4914  03AF  0021               	movlb	1	; select bank1
  4915  03B0  009D               	movwf	29	;volatile
  4916                           
  4917                           ;mcc_generated_files/adc.c: 73:     ADCON1 = 0xF0;
  4918  03B1  30F0               	movlw	240
  4919  03B2  009E               	movwf	30	;volatile
  4920                           
  4921                           ;mcc_generated_files/adc.c: 76:     ADRESL = 0x00;
  4922  03B3  019B               	clrf	27	;volatile
  4923                           
  4924                           ;mcc_generated_files/adc.c: 79:     ADRESH = 0x00;
  4925  03B4  019C               	clrf	28	;volatile
  4926                           
  4927                           ;mcc_generated_files/adc.c: 82:     PIE1bits.ADIE = 1;
  4928  03B5  1711               	bsf	17,6	;volatile
  4929  03B6  0008               	return
  4930  03B7                     __end_of_ADC_Initialize:	
  4931                           
  4932                           	psect	text32
  4933  0445                     __ptext32:	
  4934 ;; *************** function _EUSART_is_rx_ready *****************
  4935 ;; Defined at:
  4936 ;;		line 118 in file "mcc_generated_files/eusart.c"
  4937 ;; Parameters:    Size  Location     Type
  4938 ;;		None
  4939 ;; Auto vars:     Size  Location     Type
  4940 ;;		None
  4941 ;; Return value:  Size  Location     Type
  4942 ;;                  1    wreg      unsigned char 
  4943 ;; Registers used:
  4944 ;;		wreg
  4945 ;; Tracked objects:
  4946 ;;		On entry : 0/2
  4947 ;;		On exit  : 1F/0
  4948 ;;		Unchanged: 0/0
  4949 ;; Data sizes:     COMMON   BANK0   BANK1
  4950 ;;      Params:         0       0       0
  4951 ;;      Locals:         0       0       0
  4952 ;;      Temps:          0       0       0
  4953 ;;      Totals:         0       0       0
  4954 ;;Total ram usage:        0 bytes
  4955 ;; Hardware stack levels used:    1
  4956 ;; Hardware stack levels required when called:    4
  4957 ;; This function calls:
  4958 ;;		Nothing
  4959 ;; This function is called by:
  4960 ;;		_main
  4961 ;; This function uses a non-reentrant model
  4962 ;;
  4963                           
  4964                           
  4965                           ;psect for function _EUSART_is_rx_ready
  4966  0445                     _EUSART_is_rx_ready:	
  4967                           
  4968                           ;mcc_generated_files/eusart.c: 120:     return eusartRxCount;
  4969                           
  4970                           ;incstack = 0
  4971                           ; Regs used in _EUSART_is_rx_ready: [wreg]
  4972  0445  0020               	movlb	0	; select bank0
  4973  0446  083B               	movf	_eusartRxCount,w	;volatile
  4974  0447  0008               	return
  4975  0448                     __end_of_EUSART_is_rx_ready:	
  4976                           
  4977                           	psect	intentry
  4978  0004                     __pintentry:	
  4979 ;; *************** function _INTERRUPT_InterruptManager *****************
  4980 ;; Defined at:
  4981 ;;		line 55 in file "mcc_generated_files/interrupt_manager.c"
  4982 ;; Parameters:    Size  Location     Type
  4983 ;;		None
  4984 ;; Auto vars:     Size  Location     Type
  4985 ;;		None
  4986 ;; Return value:  Size  Location     Type
  4987 ;;                  1    wreg      void 
  4988 ;; Registers used:
  4989 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4990 ;; Tracked objects:
  4991 ;;		On entry : 0/0
  4992 ;;		On exit  : 0/0
  4993 ;;		Unchanged: 0/0
  4994 ;; Data sizes:     COMMON   BANK0   BANK1
  4995 ;;      Params:         0       0       0
  4996 ;;      Locals:         0       0       0
  4997 ;;      Temps:          0       0       0
  4998 ;;      Totals:         0       0       0
  4999 ;;Total ram usage:        0 bytes
  5000 ;; Hardware stack levels used:    1
  5001 ;; Hardware stack levels required when called:    3
  5002 ;; This function calls:
  5003 ;;		Absolute function
  5004 ;;		_ADC_GetConversionResult
  5005 ;;		_ADC_ISR
  5006 ;;		_EUSART_Receive_ISR
  5007 ;;		_EUSART_Transmit_ISR
  5008 ;;		_PIN_MANAGER_IOC
  5009 ;;		_TMR1_ISR
  5010 ;; This function is called by:
  5011 ;;		Interrupt level 1
  5012 ;; This function uses a non-reentrant model
  5013 ;;
  5014                           
  5015  0004                     _INTERRUPT_InterruptManager:	
  5016                           
  5017                           ;incstack = 0
  5018  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  5019                           
  5020                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  5021  0005  3180               	pagesel	$
  5022                           
  5023                           ;mcc_generated_files/interrupt_manager.c: 58:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
  5024  0006  198B               	btfsc	11,3	;volatile
  5025  0007  1C0B               	btfss	11,0	;volatile
  5026  0008  280B               	goto	i1l74
  5027                           
  5028                           ;mcc_generated_files/interrupt_manager.c: 59:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 60:         PIN_MANAGER_IOC();
  5029  0009  2435               	fcall	_PIN_MANAGER_IOC
  5030                           
  5031                           ;mcc_generated_files/interrupt_manager.c: 61:     }
  5032  000A  283C               	goto	i1l86
  5033  000B                     i1l74:	
  5034                           ;mcc_generated_files/interrupt_manager.c: 62:     else if(INTCONbits.PEIE == 1)
  5035                           
  5036  000B  1F0B               	btfss	11,6	;volatile
  5037  000C  283C               	goto	i1l86
  5038                           
  5039                           ;mcc_generated_files/interrupt_manager.c: 63:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 64:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  5040  000D  0021               	movlb	1	; select bank1
  5041  000E  1C11               	btfss	17,0	;volatile
  5042  000F  2815               	goto	i1l77
  5043  0010  0020               	movlb	0	; select bank0
  5044  0011  1C11               	btfss	17,0	;volatile
  5045  0012  2815               	goto	i1l77
  5046                           
  5047                           ;mcc_generated_files/interrupt_manager.c: 65:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 66:             TMR1_ISR();
  5048  0013  2308               	fcall	_TMR1_ISR
  5049                           
  5050                           ;mcc_generated_files/interrupt_manager.c: 67:         }
  5051  0014  283C               	goto	i1l86
  5052  0015                     i1l77:	
  5053                           ;mcc_generated_files/interrupt_manager.c: 68:         else if(PIE1bits.ADIE == 1 && PIR1
      +                          bits.ADIF == 1)
  5054                           
  5055  0015  0021               	movlb	1	; select bank1
  5056  0016  1F11               	btfss	17,6	;volatile
  5057  0017  2825               	goto	i1l79
  5058  0018  0020               	movlb	0	; select bank0
  5059  0019  1F11               	btfss	17,6	;volatile
  5060  001A  2825               	goto	i1l79
  5061                           
  5062                           ;mcc_generated_files/interrupt_manager.c: 69:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 70:             ADC_value = ADC_GetConversionResult();
  5063  001B  23B7               	fcall	_ADC_GetConversionResult
  5064  001C  0871               	movf	?_ADC_GetConversionResult+1,w
  5065  001D  0020               	movlb	0	; select bank0
  5066  001E  00AD               	movwf	_ADC_value+1	;volatile
  5067  001F  0870               	movf	?_ADC_GetConversionResult,w
  5068  0020  00AC               	movwf	_ADC_value	;volatile
  5069                           
  5070                           ;mcc_generated_files/interrupt_manager.c: 78:             ADC_state = ADC_READY;
  5071  0021  3001               	movlw	1
  5072  0022  00BF               	movwf	_ADC_state	;volatile
  5073                           
  5074                           ;mcc_generated_files/interrupt_manager.c: 80:             ADC_ISR();
  5075  0023  2455               	fcall	_ADC_ISR
  5076                           
  5077                           ;mcc_generated_files/interrupt_manager.c: 81:         }
  5078  0024  283C               	goto	i1l86
  5079  0025                     i1l79:	
  5080                           ;mcc_generated_files/interrupt_manager.c: 82:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
  5081                           
  5082  0025  0021               	movlb	1	; select bank1
  5083  0026  1E91               	btfss	17,5	;volatile
  5084  0027  2831               	goto	i1l81
  5085  0028  0020               	movlb	0	; select bank0
  5086  0029  1E91               	btfss	17,5	;volatile
  5087  002A  2831               	goto	i1l81
  5088                           
  5089                           ;mcc_generated_files/interrupt_manager.c: 83:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 84:             EUSART_RxDefaultInterruptHandler();
  5090  002B  082F               	movf	_EUSART_RxDefaultInterruptHandler+1,w
  5091  002C  008A               	movwf	10
  5092  002D  082E               	movf	_EUSART_RxDefaultInterruptHandler,w
  5093  002E  000A               	callw
  5094  002F  3180               	pagesel	$
  5095                           
  5096                           ;mcc_generated_files/interrupt_manager.c: 85:         }
  5097  0030  283C               	goto	i1l86
  5098  0031                     i1l81:	
  5099                           ;mcc_generated_files/interrupt_manager.c: 86:         else if(PIE1bits.TXIE == 1 && PIR1
      +                          bits.TXIF == 1)
  5100                           
  5101  0031  0021               	movlb	1	; select bank1
  5102  0032  1E11               	btfss	17,4	;volatile
  5103  0033  283C               	goto	i1l86
  5104  0034  0020               	movlb	0	; select bank0
  5105  0035  1E11               	btfss	17,4	;volatile
  5106  0036  283C               	goto	i1l86
  5107                           
  5108                           ;mcc_generated_files/interrupt_manager.c: 87:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 88:             EUSART_TxDefaultInterruptHandler();
  5109  0037  0831               	movf	_EUSART_TxDefaultInterruptHandler+1,w
  5110  0038  008A               	movwf	10
  5111  0039  0830               	movf	_EUSART_TxDefaultInterruptHandler,w
  5112  003A  000A               	callw
  5113  003B  3180               	pagesel	$
  5114  003C                     i1l86:	
  5115                           ;mcc_generated_files/interrupt_manager.c: 89:         }
  5116                           
  5117  003C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  5118  003D  0009               	retfie
  5119  003E                     __end_of_INTERRUPT_InterruptManager:	
  5120                           
  5121                           	psect	text34
  5122  0308                     __ptext34:	
  5123 ;; *************** function _TMR1_ISR *****************
  5124 ;; Defined at:
  5125 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  5126 ;; Parameters:    Size  Location     Type
  5127 ;;		None
  5128 ;; Auto vars:     Size  Location     Type
  5129 ;;		None
  5130 ;; Return value:  Size  Location     Type
  5131 ;;                  1    wreg      void 
  5132 ;; Registers used:
  5133 ;;		wreg, status,2, status,0, pclath, cstack
  5134 ;; Tracked objects:
  5135 ;;		On entry : 1F/0
  5136 ;;		On exit  : 0/0
  5137 ;;		Unchanged: 0/0
  5138 ;; Data sizes:     COMMON   BANK0   BANK1
  5139 ;;      Params:         0       0       0
  5140 ;;      Locals:         0       0       0
  5141 ;;      Temps:          0       0       0
  5142 ;;      Totals:         0       0       0
  5143 ;;Total ram usage:        0 bytes
  5144 ;; Hardware stack levels used:    1
  5145 ;; Hardware stack levels required when called:    2
  5146 ;; This function calls:
  5147 ;;		Absolute function
  5148 ;;		_TMR1_DefaultInterruptHandler
  5149 ;;		_TMR1_WriteTimer
  5150 ;;		__TMR1_Ready
  5151 ;; This function is called by:
  5152 ;;		_INTERRUPT_InterruptManager
  5153 ;; This function uses a non-reentrant model
  5154 ;;
  5155                           
  5156                           
  5157                           ;psect for function _TMR1_ISR
  5158  0308                     _TMR1_ISR:	
  5159                           
  5160                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  5161                           
  5162                           ;incstack = 0
  5163                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  5164  0308  1011               	bcf	17,0	;volatile
  5165                           
  5166                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  5167  0309  082B               	movf	_timer1ReloadVal+1,w	;volatile
  5168  030A  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  5169  030B  082A               	movf	_timer1ReloadVal,w	;volatile
  5170  030C  00F0               	movwf	TMR1_WriteTimer@timerVal
  5171  030D  2342               	fcall	_TMR1_WriteTimer
  5172                           
  5173                           ;mcc_generated_files/tmr1.c: 164:     if(TMR1_InterruptHandler)
  5174  030E  0828               	movf	_TMR1_InterruptHandler,w
  5175  030F  0429               	iorwf	_TMR1_InterruptHandler+1,w
  5176  0310  1903               	btfsc	3,2
  5177  0311  0008               	return
  5178                           
  5179                           ;mcc_generated_files/tmr1.c: 165:     {;mcc_generated_files/tmr1.c: 166:         TMR1_In
      +                          terruptHandler();
  5180  0312  0829               	movf	_TMR1_InterruptHandler+1,w
  5181  0313  008A               	movwf	10
  5182  0314  0828               	movf	_TMR1_InterruptHandler,w
  5183  0315  000A               	callw
  5184  0316  3183               	pagesel	$
  5185  0317  0008               	return
  5186  0318                     __end_of_TMR1_ISR:	
  5187                           
  5188                           	psect	text35
  5189  0458                     __ptext35:	
  5190 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  5191 ;; Defined at:
  5192 ;;		line 175 in file "mcc_generated_files/tmr1.c"
  5193 ;; Parameters:    Size  Location     Type
  5194 ;;		None
  5195 ;; Auto vars:     Size  Location     Type
  5196 ;;		None
  5197 ;; Return value:  Size  Location     Type
  5198 ;;                  1    wreg      void 
  5199 ;; Registers used:
  5200 ;;		None
  5201 ;; Tracked objects:
  5202 ;;		On entry : 1F/0
  5203 ;;		On exit  : 1F/0
  5204 ;;		Unchanged: 1F/0
  5205 ;; Data sizes:     COMMON   BANK0   BANK1
  5206 ;;      Params:         0       0       0
  5207 ;;      Locals:         0       0       0
  5208 ;;      Temps:          0       0       0
  5209 ;;      Totals:         0       0       0
  5210 ;;Total ram usage:        0 bytes
  5211 ;; Hardware stack levels used:    1
  5212 ;; This function calls:
  5213 ;;		Nothing
  5214 ;; This function is called by:
  5215 ;;		_TMR1_Initialize
  5216 ;;		_TMR1_ISR
  5217 ;; This function uses a non-reentrant model
  5218 ;;
  5219                           
  5220                           
  5221                           ;psect for function _TMR1_DefaultInterruptHandler
  5222  0458                     _TMR1_DefaultInterruptHandler:	
  5223                           
  5224                           ;incstack = 0
  5225                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  5226  0458  0008               	return
  5227  0459                     __end_of_TMR1_DefaultInterruptHandler:	
  5228                           
  5229                           	psect	text36
  5230  0431                     __ptext36:	
  5231 ;; *************** function __TMR1_Ready *****************
  5232 ;; Defined at:
  5233 ;;		line 158 in file "logger.c"
  5234 ;; Parameters:    Size  Location     Type
  5235 ;;		None
  5236 ;; Auto vars:     Size  Location     Type
  5237 ;;		None
  5238 ;; Return value:  Size  Location     Type
  5239 ;;                  1    wreg      void 
  5240 ;; Registers used:
  5241 ;;		wreg, status,2, status,0, pclath, cstack
  5242 ;; Tracked objects:
  5243 ;;		On entry : 1F/0
  5244 ;;		On exit  : 1E/0
  5245 ;;		Unchanged: 0/0
  5246 ;; Data sizes:     COMMON   BANK0   BANK1
  5247 ;;      Params:         0       0       0
  5248 ;;      Locals:         0       0       0
  5249 ;;      Temps:          0       0       0
  5250 ;;      Totals:         0       0       0
  5251 ;;Total ram usage:        0 bytes
  5252 ;; Hardware stack levels used:    1
  5253 ;; Hardware stack levels required when called:    1
  5254 ;; This function calls:
  5255 ;;		i1_ADC_StartConversion
  5256 ;; This function is called by:
  5257 ;;		_logger_initialize
  5258 ;;		_TMR1_ISR
  5259 ;; This function uses a non-reentrant model
  5260 ;;
  5261                           
  5262                           
  5263                           ;psect for function __TMR1_Ready
  5264  0431                     __TMR1_Ready:	
  5265                           
  5266                           ;logger.c: 160:     if (TMR1_state == TMR1_RUNNING) {
  5267                           
  5268                           ;incstack = 0
  5269                           ; Regs used in __TMR1_Ready: [wreg+status,2+status,0+pclath+cstack]
  5270  0431  0B34               	decfsz	_TMR1_state,w	;volatile
  5271  0432  0008               	return
  5272                           
  5273                           ;logger.c: 161:          ADC_StartConversion();
  5274  0433  2448               	fcall	i1_ADC_StartConversion
  5275  0434  0008               	return
  5276  0435                     __end_of__TMR1_Ready:	
  5277                           
  5278                           	psect	text37
  5279  0448                     __ptext37:	
  5280 ;; *************** function i1_ADC_StartConversion *****************
  5281 ;; Defined at:
  5282 ;;		line 93 in file "mcc_generated_files/adc.c"
  5283 ;; Parameters:    Size  Location     Type
  5284 ;;		None
  5285 ;; Auto vars:     Size  Location     Type
  5286 ;;		None
  5287 ;; Return value:  Size  Location     Type
  5288 ;;                  1    wreg      void 
  5289 ;; Registers used:
  5290 ;;		None
  5291 ;; Tracked objects:
  5292 ;;		On entry : 1F/0
  5293 ;;		On exit  : 1F/1
  5294 ;;		Unchanged: 0/0
  5295 ;; Data sizes:     COMMON   BANK0   BANK1
  5296 ;;      Params:         0       0       0
  5297 ;;      Locals:         0       0       0
  5298 ;;      Temps:          0       0       0
  5299 ;;      Totals:         0       0       0
  5300 ;;Total ram usage:        0 bytes
  5301 ;; Hardware stack levels used:    1
  5302 ;; This function calls:
  5303 ;;		Nothing
  5304 ;; This function is called by:
  5305 ;;		__TMR1_Ready
  5306 ;; This function uses a non-reentrant model
  5307 ;;
  5308                           
  5309                           
  5310                           ;psect for function i1_ADC_StartConversion
  5311  0448                     i1_ADC_StartConversion:	
  5312                           
  5313                           ;mcc_generated_files/adc.c: 96:     ADCON0bits.GO_nDONE = 1;
  5314                           
  5315                           ;incstack = 0
  5316                           ; Regs used in i1_ADC_StartConversion: []
  5317  0448  0021               	movlb	1	; select bank1
  5318  0449  149D               	bsf	29,1	;volatile
  5319  044A  0008               	return
  5320  044B                     __end_ofi1_ADC_StartConversion:	
  5321                           
  5322                           	psect	text38
  5323  0342                     __ptext38:	
  5324 ;; *************** function _TMR1_WriteTimer *****************
  5325 ;; Defined at:
  5326 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  5327 ;; Parameters:    Size  Location     Type
  5328 ;;  timerVal        2    0[COMMON] unsigned short 
  5329 ;; Auto vars:     Size  Location     Type
  5330 ;;		None
  5331 ;; Return value:  Size  Location     Type
  5332 ;;                  1    wreg      void 
  5333 ;; Registers used:
  5334 ;;		wreg
  5335 ;; Tracked objects:
  5336 ;;		On entry : 1F/0
  5337 ;;		On exit  : 1F/0
  5338 ;;		Unchanged: 0/0
  5339 ;; Data sizes:     COMMON   BANK0   BANK1
  5340 ;;      Params:         2       0       0
  5341 ;;      Locals:         0       0       0
  5342 ;;      Temps:          0       0       0
  5343 ;;      Totals:         2       0       0
  5344 ;;Total ram usage:        2 bytes
  5345 ;; Hardware stack levels used:    1
  5346 ;; This function calls:
  5347 ;;		Nothing
  5348 ;; This function is called by:
  5349 ;;		_TMR1_ISR
  5350 ;; This function uses a non-reentrant model
  5351 ;;
  5352                           
  5353                           
  5354                           ;psect for function _TMR1_WriteTimer
  5355  0342                     _TMR1_WriteTimer:	
  5356                           
  5357                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  5358                           
  5359                           ;incstack = 0
  5360                           ; Regs used in _TMR1_WriteTimer: [wreg]
  5361  0342  1D18               	btfss	24,2	;volatile
  5362  0343  2B4B               	goto	i1l1978
  5363                           
  5364                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  5365  0344  1018               	bcf	24,0	;volatile
  5366                           
  5367                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (timerVal >> 8);
  5368  0345  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  5369  0346  0097               	movwf	23	;volatile
  5370                           
  5371                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = timerVal;
  5372  0347  0870               	movf	TMR1_WriteTimer@timerVal,w
  5373  0348  0096               	movwf	22	;volatile
  5374                           
  5375                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  5376  0349  1418               	bsf	24,0	;volatile
  5377                           
  5378                           ;mcc_generated_files/tmr1.c: 133:     }
  5379  034A  0008               	return
  5380  034B                     i1l1978:	
  5381                           
  5382                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (timerVal >> 8);
  5383  034B  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  5384  034C  0097               	movwf	23	;volatile
  5385                           
  5386                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = timerVal;
  5387  034D  0870               	movf	TMR1_WriteTimer@timerVal,w
  5388  034E  0096               	movwf	22	;volatile
  5389  034F  0008               	return
  5390  0350                     __end_of_TMR1_WriteTimer:	
  5391                           
  5392                           	psect	text39
  5393  0435                     __ptext39:	
  5394 ;; *************** function _PIN_MANAGER_IOC *****************
  5395 ;; Defined at:
  5396 ;;		line 115 in file "mcc_generated_files/pin_manager.c"
  5397 ;; Parameters:    Size  Location     Type
  5398 ;;		None
  5399 ;; Auto vars:     Size  Location     Type
  5400 ;;		None
  5401 ;; Return value:  Size  Location     Type
  5402 ;;                  1    wreg      void 
  5403 ;; Registers used:
  5404 ;;		wreg, status,2, status,0, pclath, cstack
  5405 ;; Tracked objects:
  5406 ;;		On entry : 0/0
  5407 ;;		On exit  : 1F/7
  5408 ;;		Unchanged: 0/0
  5409 ;; Data sizes:     COMMON   BANK0   BANK1
  5410 ;;      Params:         0       0       0
  5411 ;;      Locals:         0       0       0
  5412 ;;      Temps:          0       0       0
  5413 ;;      Totals:         0       0       0
  5414 ;;Total ram usage:        0 bytes
  5415 ;; Hardware stack levels used:    1
  5416 ;; Hardware stack levels required when called:    2
  5417 ;; This function calls:
  5418 ;;		_IOCAF4_ISR
  5419 ;; This function is called by:
  5420 ;;		_INTERRUPT_InterruptManager
  5421 ;; This function uses a non-reentrant model
  5422 ;;
  5423                           
  5424                           
  5425                           ;psect for function _PIN_MANAGER_IOC
  5426  0435                     _PIN_MANAGER_IOC:	
  5427                           
  5428                           ;mcc_generated_files/pin_manager.c: 118:     if(IOCAFbits.IOCAF4 == 1)
  5429                           
  5430                           ;incstack = 0
  5431                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
  5432  0435  0027               	movlb	7	; select bank7
  5433  0436  1E13               	btfss	19,4	;volatile
  5434  0437  0008               	return
  5435                           
  5436                           ;mcc_generated_files/pin_manager.c: 119:     {;mcc_generated_files/pin_manager.c: 120:  
      +                                 IOCAF4_ISR();
  5437  0438  2B6A               	ljmp	i1l1980
  5438  0439                     __end_of_PIN_MANAGER_IOC:	
  5439                           
  5440                           	psect	text40
  5441  036A                     __ptext40:	
  5442 ;; *************** function _IOCAF4_ISR *****************
  5443 ;; Defined at:
  5444 ;;		line 127 in file "mcc_generated_files/pin_manager.c"
  5445 ;; Parameters:    Size  Location     Type
  5446 ;;		None
  5447 ;; Auto vars:     Size  Location     Type
  5448 ;;		None
  5449 ;; Return value:  Size  Location     Type
  5450 ;;                  1    wreg      void 
  5451 ;; Registers used:
  5452 ;;		wreg, status,2, status,0, pclath, cstack
  5453 ;; Tracked objects:
  5454 ;;		On entry : 1F/7
  5455 ;;		On exit  : 1F/7
  5456 ;;		Unchanged: 0/0
  5457 ;; Data sizes:     COMMON   BANK0   BANK1
  5458 ;;      Params:         0       0       0
  5459 ;;      Locals:         0       0       0
  5460 ;;      Temps:          0       0       0
  5461 ;;      Totals:         0       0       0
  5462 ;;Total ram usage:        0 bytes
  5463 ;; Hardware stack levels used:    1
  5464 ;; Hardware stack levels required when called:    1
  5465 ;; This function calls:
  5466 ;;		Absolute function
  5467 ;;		_IOCAF4_DefaultInterruptHandler
  5468 ;;		__IOC_Ready
  5469 ;; This function is called by:
  5470 ;;		_PIN_MANAGER_IOC
  5471 ;; This function uses a non-reentrant model
  5472 ;;
  5473                           
  5474                           
  5475                           ;psect for function _IOCAF4_ISR
  5476  036A                     _IOCAF4_ISR:	
  5477  036A                     i1l1980:	
  5478                           ;incstack = 0
  5479                           ; Regs used in _IOCAF4_ISR: [wreg+status,2+status,0+pclath+cstack]
  5480                           
  5481                           
  5482                           ;mcc_generated_files/pin_manager.c: 132:     if(IOCAF4_InterruptHandler)
  5483  036A  0020               	movlb	0	; select bank0
  5484  036B  0867               	movf	_IOCAF4_InterruptHandler,w
  5485  036C  0468               	iorwf	_IOCAF4_InterruptHandler+1,w
  5486  036D  1903               	btfsc	3,2
  5487  036E  2B74               	goto	i1l1984
  5488                           
  5489                           ;mcc_generated_files/pin_manager.c: 133:     {;mcc_generated_files/pin_manager.c: 134:  
      +                                 IOCAF4_InterruptHandler();
  5490  036F  0868               	movf	_IOCAF4_InterruptHandler+1,w
  5491  0370  008A               	movwf	10
  5492  0371  0867               	movf	_IOCAF4_InterruptHandler,w
  5493  0372  000A               	callw
  5494  0373  3183               	pagesel	$
  5495  0374                     i1l1984:	
  5496                           
  5497                           ;mcc_generated_files/pin_manager.c: 136:     IOCAFbits.IOCAF4 = 0;
  5498  0374  0027               	movlb	7	; select bank7
  5499  0375  1213               	bcf	19,4	;volatile
  5500  0376  0008               	return
  5501  0377                     __end_of_IOCAF4_ISR:	
  5502                           
  5503                           	psect	text41
  5504  0459                     __ptext41:	
  5505 ;; *************** function _IOCAF4_DefaultInterruptHandler *****************
  5506 ;; Defined at:
  5507 ;;		line 149 in file "mcc_generated_files/pin_manager.c"
  5508 ;; Parameters:    Size  Location     Type
  5509 ;;		None
  5510 ;; Auto vars:     Size  Location     Type
  5511 ;;		None
  5512 ;; Return value:  Size  Location     Type
  5513 ;;                  1    wreg      void 
  5514 ;; Registers used:
  5515 ;;		None
  5516 ;; Tracked objects:
  5517 ;;		On entry : 1F/0
  5518 ;;		On exit  : 1F/0
  5519 ;;		Unchanged: 1F/0
  5520 ;; Data sizes:     COMMON   BANK0   BANK1
  5521 ;;      Params:         0       0       0
  5522 ;;      Locals:         0       0       0
  5523 ;;      Temps:          0       0       0
  5524 ;;      Totals:         0       0       0
  5525 ;;Total ram usage:        0 bytes
  5526 ;; Hardware stack levels used:    1
  5527 ;; This function calls:
  5528 ;;		Nothing
  5529 ;; This function is called by:
  5530 ;;		_PIN_MANAGER_Initialize
  5531 ;;		_IOCAF4_ISR
  5532 ;; This function uses a non-reentrant model
  5533 ;;
  5534                           
  5535                           
  5536                           ;psect for function _IOCAF4_DefaultInterruptHandler
  5537  0459                     _IOCAF4_DefaultInterruptHandler:	
  5538                           
  5539                           ;incstack = 0
  5540                           ; Regs used in _IOCAF4_DefaultInterruptHandler: []
  5541  0459  0008               	return
  5542  045A                     __end_of_IOCAF4_DefaultInterruptHandler:	
  5543                           
  5544                           	psect	text42
  5545  03E5                     __ptext42:	
  5546 ;; *************** function __IOC_Ready *****************
  5547 ;; Defined at:
  5548 ;;		line 165 in file "logger.c"
  5549 ;; Parameters:    Size  Location     Type
  5550 ;;		None
  5551 ;; Auto vars:     Size  Location     Type
  5552 ;;		None
  5553 ;; Return value:  Size  Location     Type
  5554 ;;                  1    wreg      void 
  5555 ;; Registers used:
  5556 ;;		wreg, status,2
  5557 ;; Tracked objects:
  5558 ;;		On entry : 1F/0
  5559 ;;		On exit  : 1F/0
  5560 ;;		Unchanged: 0/0
  5561 ;; Data sizes:     COMMON   BANK0   BANK1
  5562 ;;      Params:         0       0       0
  5563 ;;      Locals:         0       0       0
  5564 ;;      Temps:          0       0       0
  5565 ;;      Totals:         0       0       0
  5566 ;;Total ram usage:        0 bytes
  5567 ;; Hardware stack levels used:    1
  5568 ;; This function calls:
  5569 ;;		Nothing
  5570 ;; This function is called by:
  5571 ;;		_logger_initialize
  5572 ;;		_IOCAF4_ISR
  5573 ;; This function uses a non-reentrant model
  5574 ;;
  5575                           
  5576                           
  5577                           ;psect for function __IOC_Ready
  5578  03E5                     __IOC_Ready:	
  5579                           
  5580                           ;logger.c: 168:     IOC_value = PORTAbits.RA4;
  5581                           
  5582                           ;incstack = 0
  5583                           ; Regs used in __IOC_Ready: [wreg+status,2]
  5584  03E5  3000               	movlw	0
  5585  03E6  1A0C               	btfsc	12,4	;volatile
  5586  03E7  3001               	movlw	1
  5587  03E8  00B3               	movwf	_IOC_value	;volatile
  5588                           
  5589                           ;logger.c: 169:     IOC_state = IOC_READY;
  5590  03E9  3001               	movlw	1
  5591  03EA  00BA               	movwf	_IOC_state	;volatile
  5592  03EB  0008               	return
  5593  03EC                     __end_of__IOC_Ready:	
  5594                           
  5595                           	psect	text43
  5596  0294                     __ptext43:	
  5597 ;; *************** function _EUSART_Transmit_ISR *****************
  5598 ;; Defined at:
  5599 ;;		line 172 in file "mcc_generated_files/eusart.c"
  5600 ;; Parameters:    Size  Location     Type
  5601 ;;		None
  5602 ;; Auto vars:     Size  Location     Type
  5603 ;;		None
  5604 ;; Return value:  Size  Location     Type
  5605 ;;                  1    wreg      void 
  5606 ;; Registers used:
  5607 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5608 ;; Tracked objects:
  5609 ;;		On entry : 1F/0
  5610 ;;		On exit  : 1E/0
  5611 ;;		Unchanged: 0/0
  5612 ;; Data sizes:     COMMON   BANK0   BANK1
  5613 ;;      Params:         0       0       0
  5614 ;;      Locals:         0       0       0
  5615 ;;      Temps:          0       0       0
  5616 ;;      Totals:         0       0       0
  5617 ;;Total ram usage:        0 bytes
  5618 ;; Hardware stack levels used:    1
  5619 ;; This function calls:
  5620 ;;		Nothing
  5621 ;; This function is called by:
  5622 ;;		_EUSART_Initialize
  5623 ;;		_INTERRUPT_InterruptManager
  5624 ;; This function uses a non-reentrant model
  5625 ;;
  5626                           
  5627                           
  5628                           ;psect for function _EUSART_Transmit_ISR
  5629  0294                     _EUSART_Transmit_ISR:	
  5630                           
  5631                           ;mcc_generated_files/eusart.c: 176:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  5632                           
  5633                           ;incstack = 0
  5634                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  5635  0294  3010               	movlw	16
  5636  0295  027A               	subwf	_eusartTxBufferRemaining,w
  5637  0296  1803               	skipnc
  5638  0297  2AA7               	goto	i1l165
  5639                           
  5640                           ;mcc_generated_files/eusart.c: 177:     {;mcc_generated_files/eusart.c: 178:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
  5641  0298  083E               	movf	_eusartTxTail,w
  5642  0299  3EA0               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  5643  029A  0086               	movwf	6
  5644  029B  0187               	clrf	7
  5645  029C  0801               	movf	1,w
  5646  029D  0023               	movlb	3	; select bank3
  5647  029E  009A               	movwf	26	;volatile
  5648  029F  0020               	movlb	0	; select bank0
  5649  02A0  0ABE               	incf	_eusartTxTail,f	;volatile
  5650                           
  5651                           ;mcc_generated_files/eusart.c: 179:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  5652  02A1  3010               	movlw	16
  5653  02A2  023E               	subwf	_eusartTxTail,w
  5654  02A3  1803               	btfsc	3,0
  5655                           
  5656                           ;mcc_generated_files/eusart.c: 180:         {;mcc_generated_files/eusart.c: 181:        
      +                               eusartTxTail = 0;
  5657  02A4  01BE               	clrf	_eusartTxTail	;volatile
  5658                           
  5659                           ;mcc_generated_files/eusart.c: 183:         eusartTxBufferRemaining++;
  5660  02A5  0AFA               	incf	_eusartTxBufferRemaining,f	;volatile
  5661                           
  5662                           ;mcc_generated_files/eusart.c: 184:     }
  5663  02A6  0008               	return
  5664  02A7                     i1l165:	
  5665                           ;mcc_generated_files/eusart.c: 185:     else
  5666                           
  5667                           
  5668                           ;mcc_generated_files/eusart.c: 186:     {;mcc_generated_files/eusart.c: 187:         PIE
      +                          1bits.TXIE = 0;
  5669  02A7  0021               	movlb	1	; select bank1
  5670  02A8  1211               	bcf	17,4	;volatile
  5671  02A9  0008               	return
  5672  02AA                     __end_of_EUSART_Transmit_ISR:	
  5673                           
  5674                           	psect	text44
  5675  02AA                     __ptext44:	
  5676 ;; *************** function _EUSART_Receive_ISR *****************
  5677 ;; Defined at:
  5678 ;;		line 191 in file "mcc_generated_files/eusart.c"
  5679 ;; Parameters:    Size  Location     Type
  5680 ;;		None
  5681 ;; Auto vars:     Size  Location     Type
  5682 ;;		None
  5683 ;; Return value:  Size  Location     Type
  5684 ;;                  1    wreg      void 
  5685 ;; Registers used:
  5686 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5687 ;; Tracked objects:
  5688 ;;		On entry : 1F/0
  5689 ;;		On exit  : 1F/0
  5690 ;;		Unchanged: 0/0
  5691 ;; Data sizes:     COMMON   BANK0   BANK1
  5692 ;;      Params:         0       0       0
  5693 ;;      Locals:         0       0       0
  5694 ;;      Temps:          0       0       0
  5695 ;;      Totals:         0       0       0
  5696 ;;Total ram usage:        0 bytes
  5697 ;; Hardware stack levels used:    1
  5698 ;; This function calls:
  5699 ;;		Nothing
  5700 ;; This function is called by:
  5701 ;;		_EUSART_Initialize
  5702 ;;		_INTERRUPT_InterruptManager
  5703 ;; This function uses a non-reentrant model
  5704 ;;
  5705                           
  5706                           
  5707                           ;psect for function _EUSART_Receive_ISR
  5708  02AA                     _EUSART_Receive_ISR:	
  5709                           
  5710                           ;mcc_generated_files/eusart.c: 194:     if(1 == RCSTAbits.OERR)
  5711                           
  5712                           ;incstack = 0
  5713                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  5714  02AA  0023               	movlb	3	; select bank3
  5715  02AB  1C9D               	btfss	29,1	;volatile
  5716  02AC  2AAF               	goto	i1l2096
  5717                           
  5718                           ;mcc_generated_files/eusart.c: 195:     {;mcc_generated_files/eusart.c: 198:         RCS
      +                          TAbits.CREN = 0;
  5719  02AD  121D               	bcf	29,4	;volatile
  5720                           
  5721                           ;mcc_generated_files/eusart.c: 199:         RCSTAbits.CREN = 1;
  5722  02AE  161D               	bsf	29,4	;volatile
  5723  02AF                     i1l2096:	
  5724                           
  5725                           ;mcc_generated_files/eusart.c: 203:     eusartRxBuffer[eusartRxHead++] = RCREG;
  5726  02AF  0020               	movlb	0	; select bank0
  5727  02B0  083D               	movf	_eusartRxHead,w
  5728  02B1  3E20               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  5729  02B2  0086               	movwf	6
  5730  02B3  0187               	clrf	7
  5731  02B4  0023               	movlb	3	; select bank3
  5732  02B5  0819               	movf	25,w	;volatile
  5733  02B6  0081               	movwf	1
  5734  02B7  0020               	movlb	0	; select bank0
  5735  02B8  0ABD               	incf	_eusartRxHead,f	;volatile
  5736                           
  5737                           ;mcc_generated_files/eusart.c: 204:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  5738  02B9  3008               	movlw	8
  5739  02BA  023D               	subwf	_eusartRxHead,w
  5740  02BB  1803               	btfsc	3,0
  5741                           
  5742                           ;mcc_generated_files/eusart.c: 205:     {;mcc_generated_files/eusart.c: 206:         eus
      +                          artRxHead = 0;
  5743  02BC  01BD               	clrf	_eusartRxHead	;volatile
  5744                           
  5745                           ;mcc_generated_files/eusart.c: 208:     eusartRxCount++;
  5746  02BD  0ABB               	incf	_eusartRxCount,f	;volatile
  5747  02BE  0008               	return
  5748  02BF                     __end_of_EUSART_Receive_ISR:	
  5749                           
  5750                           	psect	text45
  5751  0455                     __ptext45:	
  5752 ;; *************** function _ADC_ISR *****************
  5753 ;; Defined at:
  5754 ;;		line 140 in file "mcc_generated_files/adc.c"
  5755 ;; Parameters:    Size  Location     Type
  5756 ;;		None
  5757 ;; Auto vars:     Size  Location     Type
  5758 ;;		None
  5759 ;; Return value:  Size  Location     Type
  5760 ;;                  1    wreg      void 
  5761 ;; Registers used:
  5762 ;;		None
  5763 ;; Tracked objects:
  5764 ;;		On entry : 1F/0
  5765 ;;		On exit  : 1F/0
  5766 ;;		Unchanged: 0/0
  5767 ;; Data sizes:     COMMON   BANK0   BANK1
  5768 ;;      Params:         0       0       0
  5769 ;;      Locals:         0       0       0
  5770 ;;      Temps:          0       0       0
  5771 ;;      Totals:         0       0       0
  5772 ;;Total ram usage:        0 bytes
  5773 ;; Hardware stack levels used:    1
  5774 ;; This function calls:
  5775 ;;		Nothing
  5776 ;; This function is called by:
  5777 ;;		_INTERRUPT_InterruptManager
  5778 ;; This function uses a non-reentrant model
  5779 ;;
  5780                           
  5781                           
  5782                           ;psect for function _ADC_ISR
  5783  0455                     _ADC_ISR:	
  5784                           
  5785                           ;mcc_generated_files/adc.c: 143:     PIR1bits.ADIF = 0;
  5786                           
  5787                           ;incstack = 0
  5788                           ; Regs used in _ADC_ISR: []
  5789  0455  1311               	bcf	17,6	;volatile
  5790  0456  0008               	return
  5791  0457                     __end_of_ADC_ISR:	
  5792                           
  5793                           	psect	text46
  5794  03B7                     __ptext46:	
  5795 ;; *************** function _ADC_GetConversionResult *****************
  5796 ;; Defined at:
  5797 ;;		line 106 in file "mcc_generated_files/adc.c"
  5798 ;; Parameters:    Size  Location     Type
  5799 ;;		None
  5800 ;; Auto vars:     Size  Location     Type
  5801 ;;		None
  5802 ;; Return value:  Size  Location     Type
  5803 ;;                  2    0[COMMON] unsigned short 
  5804 ;; Registers used:
  5805 ;;		wreg
  5806 ;; Tracked objects:
  5807 ;;		On entry : 1F/0
  5808 ;;		On exit  : 1F/1
  5809 ;;		Unchanged: 0/0
  5810 ;; Data sizes:     COMMON   BANK0   BANK1
  5811 ;;      Params:         2       0       0
  5812 ;;      Locals:         0       0       0
  5813 ;;      Temps:          0       0       0
  5814 ;;      Totals:         2       0       0
  5815 ;;Total ram usage:        2 bytes
  5816 ;; Hardware stack levels used:    1
  5817 ;; This function calls:
  5818 ;;		Nothing
  5819 ;; This function is called by:
  5820 ;;		_INTERRUPT_InterruptManager
  5821 ;; This function uses a non-reentrant model
  5822 ;;
  5823                           
  5824                           
  5825                           ;psect for function _ADC_GetConversionResult
  5826  03B7                     _ADC_GetConversionResult:	
  5827                           
  5828                           ;mcc_generated_files/adc.c: 109:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  5829                           
  5830                           ;incstack = 0
  5831                           ; Regs used in _ADC_GetConversionResult: [wreg]
  5832  03B7  0021               	movlb	1	; select bank1
  5833  03B8  081C               	movf	28,w	;volatile
  5834  03B9  00F1               	movwf	?_ADC_GetConversionResult+1
  5835  03BA  01F0               	clrf	?_ADC_GetConversionResult
  5836  03BB  081B               	movf	27,w	;volatile
  5837  03BC  07F0               	addwf	?_ADC_GetConversionResult,f
  5838  03BD  1803               	skipnc
  5839  03BE  0AF1               	incf	?_ADC_GetConversionResult+1,f
  5840  03BF  0008               	return
  5841  03C0                     __end_of_ADC_GetConversionResult:	
  5842  007E                     btemp	set	126	;btemp
  5843  007E                     int$flags	set	126
  5844  007E                     wtemp0	set	126


Data Sizes:
    Strings     222
    Constant    0
    Data        0
    BSS         82
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     23      73
    BANK1            32      0      32

Pointer List with Targets:

    sp__strchr	PTR unsigned char  size(1) Largest target is 16
		 -> NULL(NULL[0]), esp_read_data(BANK1[16]), 

    ESP_Set_application_handler@applicationHandler	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> process_message(), ESP_default_application_handler(), 

    ESP_external_message_handler	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> process_message(), ESP_default_application_handler(), Absolute function(), 

    sp__strstr	PTR unsigned char  size(1) Largest target is 16
		 -> NULL(NULL[0]), esp_read_data(BANK1[16]), 

    _sprintf@mess	PTR unsigned char  size(1) Largest target is 6
		 -> read_analog@mess(BANK0[6]), 

    write@pt	PTR unsigned char  size(1) Largest target is 16
		 -> read_wifi_settings@pass(COMMON[14]), read_wifi_settings@wifi(COMMON[10]), read_analog@mess(BANK0[6]), WIFI_tx_buf(BANK0[16]), 
		 -> ESP_write@res(COMMON[1]), ESP_write@aux(COMMON[1]), 

    _puts@pt	PTR unsigned char  size(2) Largest target is 22
		 -> STR_29(CODE[13]), STR_28(CODE[22]), STR_27(CODE[13]), STR_26(CODE[18]), 
		 -> STR_25(CODE[13]), STR_24(CODE[3]), STR_23(CODE[3]), STR_22(CODE[7]), 
		 -> STR_21(CODE[7]), STR_20(CODE[4]), STR_19(CODE[3]), STR_18(CODE[3]), 
		 -> STR_17(CODE[2]), STR_16(CODE[12]), STR_14(CODE[20]), STR_13(CODE[14]), 
		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[11]), STR_9(CODE[14]), 
		 -> STR_8(CODE[5]), 

    IOCAF4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> _IOC_Ready(), IOCAF4_DefaultInterruptHandler(), 

    IOCAF4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> _IOC_Ready(), IOCAF4_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> _TMR1_Ready(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> _TMR1_Ready(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Transmit_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 


Critical Paths under _main in COMMON

    _read_analog->___lmul
    _write->_EUSART_Write
    __sprintf->___lwdiv
    _process_ioc->__puts
    _logger_initialize->_ADC_SelectChannel
    _logger_initialize->_ESP_Set_application_handler
    _logger_initialize->_IOCAF4_SetInterruptHandler
    _logger_initialize->_TMR1_SetInterruptHandler
    _bt_message_handler->_process_message
    _process_message->__puts
    _toggle_format->__puts
    __puts->_EUSART_Write
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCAF4_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_ADC_GetConversionResult
    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->_read_analog
    _read_analog->__sprintf
    _bt_message_handler->_process_message

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    9287
                                             21 BANK0      2     2      0
                 _EUSART_is_rx_ready
                  _SYSTEM_Initialize
                 _bt_message_handler
                  _logger_initialize
                        _process_ioc
                        _read_analog
 ---------------------------------------------------------------------------------
 (1) _read_analog                                         16    16      0    3446
                                              5 BANK0     16    16      0
                             ___lmul
                           __sprintf
                              _write
 ---------------------------------------------------------------------------------
 (2) _write                                                4     3      1    1024
                                              3 COMMON     4     3      1
                       _EUSART_Write
                 _EUSART_is_tx_ready
 ---------------------------------------------------------------------------------
 (2) __sprintf                                             5     3      2    1873
                                              0 BANK0      5     3      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     615
                                              2 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     244
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _process_ioc                                          0     0      0    1522
                              __puts
 ---------------------------------------------------------------------------------
 (1) _logger_initialize                                    0     0      0     520
                  _ADC_SelectChannel
        _ESP_Set_application_handler
         _IOCAF4_SetInterruptHandler
           _TMR1_SetInterruptHandler
                     _TMR1_StopTimer
 ---------------------------------------------------------------------------------
 (2) _ESP_Set_application_handler                          2     0      2     150
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _bt_message_handler                                   1     1      0    3255
                                              2 BANK0      1     1      0
                        _EUSART_Read
                    _process_message
 ---------------------------------------------------------------------------------
 (2) _process_message                                      3     2      1    3197
                                              9 COMMON     1     0      1
                                              0 BANK0      2     2      0
                _ADC_StartConversion
                    _TMR1_StartTimer
                     _TMR1_StopTimer
                              __puts
                      _toggle_format
 ---------------------------------------------------------------------------------
 (3) _toggle_format                                        0     0      0    1522
                              __puts
 ---------------------------------------------------------------------------------
 (2) __puts                                                6     4      2    1522
                                              3 COMMON     6     4      2
                       _EUSART_Write
                 _EUSART_is_tx_ready
 ---------------------------------------------------------------------------------
 (3) _EUSART_is_tx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      44
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read                                          1     1      0      24
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     544
                     _ADC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR1_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
         _IOCAF4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _IOCAF4_SetInterruptHandler                           2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     196
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0     229
                   Absolute function *
            _ADC_GetConversionResult
                            _ADC_ISR
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR1_ISR                                             0     0      0     229
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                        __TMR1_Ready *
 ---------------------------------------------------------------------------------
 (8) __TMR1_Ready                                          0     0      0       0
              i1_ADC_StartConversion
 ---------------------------------------------------------------------------------
 (9) i1_ADC_StartConversion                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR1_WriteTimer                                      2     0      2     229
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (8) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _PIN_MANAGER_IOC                                      0     0      0       0
                         _IOCAF4_ISR
 ---------------------------------------------------------------------------------
 (8) _IOCAF4_ISR                                           0     0      0       0
                   Absolute function *
     _IOCAF4_DefaultInterruptHandler *
                         __IOC_Ready *
 ---------------------------------------------------------------------------------
 (9) __IOC_Ready                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _IOCAF4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ADC_GetConversionResult                              2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_is_rx_ready
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCAF4_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize
   _bt_message_handler
     _EUSART_Read
     _process_message
       _ADC_StartConversion
       _TMR1_StartTimer
       _TMR1_StopTimer
       __puts
         _EUSART_Write
         _EUSART_is_tx_ready
       _toggle_format
         __puts
           _EUSART_Write
           _EUSART_is_tx_ready
   _logger_initialize
     _ADC_SelectChannel
     _ESP_Set_application_handler
     _IOCAF4_SetInterruptHandler
     _TMR1_SetInterruptHandler
     _TMR1_StopTimer
   _process_ioc
     __puts
       _EUSART_Write
       _EUSART_is_tx_ready
   _read_analog
     ___lmul
     __sprintf
       ___lwdiv
       ___lwmod
     _write
       _EUSART_Write
       _EUSART_is_tx_ready

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADC_GetConversionResult *
   _ADC_ISR *
   _EUSART_Receive_ISR *
   _EUSART_Transmit_ISR *
   _PIN_MANAGER_IOC *
     _IOCAF4_ISR
       Absolute function(Fake) *
       _IOCAF4_DefaultInterruptHandler *
       __IOC_Ready *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     __TMR1_Ready *
       i1_ADC_StartConversion

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      75       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     17      49       6       91.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0      20       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      75       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Tue Sep  4 20:54:03 2018

                ?_EUSART_SetRxInterruptHandler 0072                                    __CFG_CP$OFF 0000  
                                           PL2 00CB                                             PL4 0246  
                                           PL6 00D7                                             PL8 00DF  
                                          PL10 00E5                                            l211 03AA  
                                          l159 0228                                            l503 0457  
                                          l368 0152                                            l583 0122  
                                          l586 00FD                                            l589 0100  
                                          l781 017D                                   __CFG_CPD$OFF 0000  
                                          u605 01D1                                            u565 0169  
                              _timer1ReloadVal 002A                                __end_of_ADC_ISR 0457  
                                 __CFG_BORV$LO 0000                                            wreg 0009  
                                 __CFG_IESO$ON 0000                                   ?_EUSART_Read 0070  
                                 __CFG_LVP$OFF 0000                                 ?_toggle_format 0070  
                                         l2050 0187                                           l2270 00F3  
                                         l2262 00EB                                           l2334 0070  
                                         l2264 00EC                                           l2168 033D  
                                         l2274 00F6                                           l2266 00F1  
                                         l2362 014A                                           l2268 00F2  
                                         l2284 0103                                           l1750 021E  
                                         l2390 010B                                           l2278 00FA  
                                         l1822 0170                                           l1814 0161  
                                         l2366 014E                                           l2358 0145  
                                         l1826 0174                                           l1842 01D7  
                                         l1764 0235                                           l1774 0239  
                                         l1766 0238                                           l1790 02F8  
                                         l1838 01CB                                           l1846 01DB  
                                         l1864 019E                                           l1776 043F  
                                         l1768 023D                                           l1796 0302  
                                         l1896 0268                                           l1994 02D5  
                                         l1988 02D9                                           STR_1 03C0  
                                         STR_3 039A                                           STR_4 03EC  
                                         STR_5 041B                                           STR_6 03C8  
                                         STR_7 03DE                                           STR_8 0416  
                                         STR_9 0318                                           u1005 008D  
                                         u1047 012F                                           u1057 013E  
                                         _LATA 010C                                           _LATC 010E  
                                         i1l81 0031                                           i1l74 000B  
                                         i1l77 0015                                           i1l86 003C  
                                         i1l79 0025                                           _PLLR 04D6  
                                         _WPUA 020C                                           _WPUC 020E  
                                 __CFG_WRT$OFF 0000                                  __CFG_FCMEN$ON 0000  
                                         _main 0123                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                __CFG_BOREN$ON 0000                                     __IOC_Ready 03E5  
                                         start 003E                     ??_TMR1_SetInterruptHandler 0074  
                                __CFG_MCLRE$ON 0000                            __end_of__TMR1_Ready 0435  
                           _ESP_wait_exception 0037                                  __CFG_PLLEN$ON 0000  
                                ?_EUSART_Write 0070                 __size_of_OSCILLATOR_Initialize 000A  
                          __size_of_IOCAF4_ISR 000D                  __end_of_OSCILLATOR_Initialize 03AE  
                                        ?_main 0070                                          STR_10 038F  
                                        STR_11 042D                                          STR_12 0429  
                                        STR_20 0425                                          STR_21 03D7  
                                        STR_13 0326                                          STR_22 03D0  
                                        STR_14 02BF                                          STR_15 044D  
                                        STR_23 0439                                          STR_24 043C  
                                        STR_16 0377                                          STR_17 044B  
                                        STR_25 0350                                  __CFG_WDTE$OFF 0000  
                                        STR_26 02E6                                          STR_27 035D  
                                        STR_28 0252                                _TMR1_StartTimer 0453  
                                        _T1CON 0018                                __end_of___lwdiv 0179  
                                        i1l165 02A7                                __end_of___lwmod 01E0  
                 ?_ESP_Set_application_handler 0072                                          _RCREG 0199  
                                        _RCSTA 019D                                          _TMR1H 0017  
                                        _TMR1L 0016                                          _TRISA 008C  
                                        _TRISC 008E                         ?i1_ADC_StartConversion 0070  
                                        _TXREG 019A                     __end_of_bt_message_handler 0425  
                                        _TXSTA 019E               __size_of_ADC_GetConversionResult 0009  
                                 ?_read_analog 0070                            ___lmul@multiplicand 0076  
                             __end_of_TMR1_ISR 0318                        __end_of_PIN_MANAGER_IOC 0439  
                                        __puts 0238                                 _WDT_Initialize 0442  
                                        _write 02D3                        __end_of_TMR1_Initialize 0294  
                                        pclath 000A                                          status 0003  
                                        wtemp0 007E                     __size_of_logger_initialize 001D  
                              _TMR1_WriteTimer 0342                                __initialization 003F  
                                 __end_of_main 0154                                 ??_EUSART_Write 0072  
                                    ??_ADC_ISR 0070                    ?_INTERRUPT_InterruptManager 0070  
               ??_EUSART_SetRxInterruptHandler 0074                                         ??_main 0065  
                      _IOCAF4_InterruptHandler 0067                         __end_of_WDT_Initialize 0445  
                ??_ESP_Set_application_handler 0074                                ??_toggle_format 0079  
                                       ?__puts 0073                                         _ADCON0 009D  
                                       _ADCON1 009E                                         _ADRESH 009C  
                                       _ADRESL 009B                                         _APFCON 011D  
                                       _ANSELA 018C                                         _ANSELC 018E  
                   __end_of_EUSART_is_rx_ready 0448                                         _BORCON 0116  
                                       _T1GCON 0019                                         ?_write 0073  
                      TMR1_WriteTimer@timerVal 0070                                         i1l2096 02AF  
                                       i1l1980 036A                                         i1l1984 0374  
                                       i1l1978 034B                     __end_of_EUSART_is_tx_ready 0451  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                    __TMR1_Ready 0431  
                                       _WDTCON 0097                                    ?__IOC_Ready 0070  
                               __CFG_PWRTE$OFF 0000           __end_of_TMR1_DefaultInterruptHandler 0459  
        __size_of_TMR1_DefaultInterruptHandler 0001                                  _esp_read_data 00B0  
                 _TMR1_DefaultInterruptHandler 0458                               __end_of__sprintf 00CB  
                                       ___lmul 0179                        __end_of_TMR1_StartTimer 0455  
                               __CFG_STVREN$ON 0000                                      ??___lwdiv 0076  
                                    ??___lwmod 0076                            _EUSART_Transmit_ISR 0294  
                              ?_WDT_Initialize 0070     IOCAF4_SetInterruptHandler@InterruptHandler 0072  
     TMR1_SetInterruptHandler@InterruptHandler 0072                               ?_PIN_MANAGER_IOC 0070  
                                       write@i 0075                        __end_of_TMR1_WriteTimer 0350  
                                 ??_IOCAF4_ISR 0070                           ?_EUSART_Transmit_ISR 0070  
                                 ?_process_ioc 0070                               ?_TMR1_Initialize 0070  
                         __size_of_EUSART_Read 0016                              _SYSTEM_Initialize 03F8  
                      __end_of__initialization 004D                             read_analog@adc_val 0063  
                           ?_SYSTEM_Initialize 0070           __size_of_ESP_Set_application_handler 0001  
         __end_of_EUSART_SetTxInterruptHandler 0410          __size_of_EUSART_SetTxInterruptHandler 0006  
                 _EUSART_SetTxInterruptHandler 040A                   __size_of_ADC_StartConversion 0003  
                               __pcstackCOMMON 0070                            ??_SYSTEM_Initialize 0074  
                                    ?_TMR1_ISR 0070                  ?_TMR1_DefaultInterruptHandler 0070  
                                __end_of__puts 0246         __end_of_IOCAF4_DefaultInterruptHandler 045A  
      __size_of_IOCAF4_DefaultInterruptHandler 0001                 _IOCAF4_DefaultInterruptHandler 0459  
                                __end_of_write 02E6                                     __end_ofPL2 00D7  
                                   __end_ofPL4 0252                                     __end_ofPL6 00DF  
                                   __end_ofPL8 00E5                             __end_of_IOCAF4_ISR 0377  
                      _ADC_GetConversionResult 03B7                                 _OPTION_REGbits 0095  
                          __size_of__IOC_Ready 0007                       __size_of_process_message 0038  
                                      ??__puts 0075                           __size_of_read_analog 0053  
                    __end_of_SYSTEM_Initialize 03FE                          ??_EUSART_Transmit_ISR 0070  
                                      ??_write 0074                                     __pbssBANK0 0020  
                                   __pbssBANK1 00A0                           __end_of_EUSART_Write 0238  
                  __size_of_EUSART_Receive_ISR 0015                                     __pmaintext 0123  
                ?_EUSART_SetTxInterruptHandler 0072               _EUSART_TxDefaultInterruptHandler 0030  
                                      ?___lmul 0072                               ?_TMR1_StartTimer 0070  
                                   ??_TMR1_ISR 0072                                     __pintentry 0004  
                                      _ADC_ISR 0455                                        _BAUDCON 019F  
                               ___lmul@product 0050                        ??i1_ADC_StartConversion 0070  
                      __size_of_ADC_Initialize 0009                        __size_of_TMR1_StopTimer 0002  
                                _eusartRxCount 003B                                        _OSCTUNE 0098  
                                    ?__sprintf 0050                               ?_TMR1_WriteTimer 0070  
                           _bt_message_handler 0420                                      _ADC_count 0035  
                                    _ADC_value 002C                            ?_bt_message_handler 0070  
                                    _ADC_state 003F                                __size_of___lmul 0025  
                                      ___lwdiv 0154                                        ___lwmod 01C0  
                    ??_ADC_GetConversionResult 0072                                        __ptext1 0050  
                                      __ptext2 02D3                                        __ptext3 00A3  
                                      __ptext4 01C0                                        __ptext5 0154  
                                      __ptext6 0179                                        __ptext7 0334  
                                      __ptext8 0200                                        __ptext9 0457  
               ??_TMR1_DefaultInterruptHandler 0070                                      _T1CONbits 0018  
                        _OSCILLATOR_Initialize 03A4              __size_of_TMR1_SetInterruptHandler 0006  
                     ??_PIN_MANAGER_Initialize 0074                      ?_TMR1_SetInterruptHandler 0072  
                                    _IOCAFbits 0393                                      _IOCANbits 0392  
                                    _IOCAPbits 0391                           ??_bt_message_handler 007A  
                   __size_of_SYSTEM_Initialize 0006                                        clrloop0 03F3  
                                   ??__sprintf 0079                           end_of_initialization 004D  
                                 ?__TMR1_Ready 0070                              ??_process_message 0050  
                         __size_of_process_ioc 000E                                   ??__IOC_Ready 0070  
                            _EUSART_Initialize 019E                                      _IOC_value 0033  
                                    _IOC_state 003A                             ?_EUSART_Initialize 0070  
                                    _RCSTAbits 019D                             _EUSART_is_rx_ready 0445  
                           _EUSART_is_tx_ready 044F                                   __sprintf@aux 0052  
                                 __sprintf@val 0050                            ??_EUSART_Initialize 0074  
                                      write@pt 0076                               ??_WDT_Initialize 0072  
               ??_EUSART_SetTxInterruptHandler 0074                                      _PORTAbits 000C  
                          ?_EUSART_is_rx_ready 0070                            ?_EUSART_is_tx_ready 0070  
                             __CFG_FOSC$INTOSC 0000                             __end_of__IOC_Ready 03EC  
                        __size_of_EUSART_Write 001B                            _ADC_StartConversion 043F  
                 ??_IOCAF4_SetInterruptHandler 0074                          __end_of_toggle_format 0308  
                    __end_of_EUSART_Initialize 01C0                           ??_EUSART_is_rx_ready 0072  
                         ??_EUSART_is_tx_ready 0072                           ?_ADC_StartConversion 0070  
                               __end_of___lmul 019E  ESP_Set_application_handler@applicationHandler 0072  
                                 _EUSART_Write 021D                              __size_of_TMR1_ISR 0010  
                               _ADC_Initialize 03AE            __size_of_IOCAF4_SetInterruptHandler 0006  
                               _TMR1_StopTimer 0451                         ?_OSCILLATOR_Initialize 0070  
          __end_of_ESP_Set_application_handler 0458                    _ESP_Set_application_handler 0457  
                                  __end_ofPL10 00EB                            start_initialization 003F  
              __size_of_PIN_MANAGER_Initialize 0020                                  ??_EUSART_Read 0072  
 EUSART_SetRxInterruptHandler@interruptHandler 0072   EUSART_SetTxInterruptHandler@interruptHandler 0072  
                     __size_of_PIN_MANAGER_IOC 0004                          ??_ADC_StartConversion 0072  
                     __size_of_TMR1_Initialize 0016                                       ??___lmul 007A  
                       __end_of_ADC_Initialize 03B7                         __end_of_TMR1_StopTimer 0453  
                                     ?_ADC_ISR 0070                 __size_ofi1_ADC_StartConversion 0003  
                __end_ofi1_ADC_StartConversion 044B                    __end_of_EUSART_Transmit_ISR 02AA  
                                ??_read_analog 0055                                    __pbssCOMMON 007A  
                                    ___latbits 0000                _ESP_default_application_handler 0000  
                                __pcstackBANK0 0050                                _WIFI_tx_buf_ind 0032  
                   __end_of_EUSART_Receive_ISR 02BF                     __size_of_EUSART_Initialize 0022  
                            __size_of__sprintf 0028               _EUSART_RxDefaultInterruptHandler 002E  
                          __end_of_EUSART_Read 027E                                read_analog@aux1 005F  
                                    __pnvBANK0 0067                                read_analog@mess 0059  
                         __size_of__TMR1_Ready 0004                               ___lwdiv@dividend 0074  
                       _PIN_MANAGER_Initialize 01E0                           EUSART_Read@readValue 0072  
                            _ADC_SelectChannel 0383               __end_of_TMR1_SetInterruptHandler 0404  
                                     ?___lwdiv 0072                                       ?___lwmod 0072  
                              ?_ADC_Initialize 0070                                   _eusartRxHead 003D  
                              ?_TMR1_StopTimer 0070                             ?_ADC_SelectChannel 0070  
                                 _eusartTxHead 007B                                   _eusartRxTail 003C  
                                 _eusartTxTail 003E                   ??_INTERRUPT_InterruptManager 0072  
                      _eusartTxBufferRemaining 007A                       __size_of_TMR1_StartTimer 0002  
                          ??_ADC_SelectChannel 0072                                _process_message 00EB  
           __end_of_IOCAF4_SetInterruptHandler 040A                     _IOCAF4_SetInterruptHandler 0404  
                             ___lwdiv@quotient 0076                                 __size_of__puts 000E  
                               __size_of_write 0013                            __end_of_read_analog 00A3  
                               _eusartRxBuffer 0020                                 _eusartTxBuffer 00A0  
                                     _LATAbits 010C                                      clear_ram0 03F2  
                                  __puts@index 0078                                       _PIE1bits 0091  
                    __end_of_ADC_SelectChannel 038F                       __size_of_TMR1_WriteTimer 000E  
          __size_of_INTERRUPT_InterruptManager 003A                                    write@lenght 0073  
                                     _PIR1bits 0011                                       _TMR1_ISR 0308  
                            ??_PIN_MANAGER_IOC 0070                              ??_TMR1_Initialize 0074  
                             __size_of_ADC_ISR 0002                                     _ADCON0bits 009D  
                     ADC_SelectChannel@channel 0073                    __size_of_bt_message_handler 0005  
                                  _EUSART_Read 0268                              ___lmul@multiplier 0072  
                                ??_process_ioc 0079                                    _esp_channel 0038  
                     ?_ADC_GetConversionResult 0070                        ??_OSCILLATOR_Initialize 0072  
                             __size_of___lwdiv 0025                        __end_of_process_message 0123  
                             __size_of___lwmod 0020                       _TMR1_SetInterruptHandler 03FE  
                        _TMR1_InterruptHandler 0028                                    _read_analog 0050  
                          _esp_read_data_index 0039                                ___lwdiv@divisor 0072  
                              ___lwdiv@counter 0078                                       __ptext10 0383  
                                     __ptext11 0420                                       __ptext20 0268  
                                     __ptext12 00EB                                       __ptext21 03F8  
                                     __ptext13 02F8                                       __ptext30 0410  
                                     __ptext22 0442                                       __ptext14 0238  
                                     __ptext31 03AE                                       __ptext23 027E  
                                     __ptext15 044F                                       __ptext40 036A  
                                     __ptext32 0445                                       __ptext24 03FE  
                                     __ptext16 021D                                       __ptext41 0459  
                                     __ptext25 01E0                                       __ptext17 0451  
                                     __ptext42 03E5                                       __ptext34 0308  
                                     __ptext26 0404                                       __ptext18 0453  
                                     __ptext43 0294                                       __ptext35 0458  
                                     __ptext27 03A4                                       __ptext19 043F  
                                     __ptext44 02AA                                       __ptext36 0431  
                                     __ptext28 019E                                       __ptext45 0455  
                                     __ptext37 0448                                       __ptext29 040A  
                                     __ptext46 03B7                                       __ptext38 0342  
                                     __ptext39 0435                                       __puts@pt 0073  
                       process_message@message 0079                                       __sprintf 00A3  
                            ??_TMR1_StartTimer 0072                                     _IOCAF4_ISR 036A  
                               _message_format 0036                    __size_of_EUSART_is_rx_ready 0003  
                                __size_of_main 0031                    __size_of_EUSART_is_tx_ready 0002  
                   __size_of_ADC_SelectChannel 000C                            __end_of_process_ioc 0342  
                                     int$flags 007E                         __size_of_toggle_format 0010  
           __end_of_INTERRUPT_InterruptManager 003E                     _INTERRUPT_InterruptManager 0004  
                            ??_TMR1_WriteTimer 0072                                     _INTCONbits 000B  
                               __pstringtext10 039A                                 __pstringtext11 03C0  
                               __pstringtext20 0429                                 __pstringtext12 03C8  
                               __pstringtext21 042D                                 __pstringtext13 03D0  
                               __pstringtext22 0439                                 __pstringtext14 03D7  
                               __pstringtext23 043C                                 __pstringtext15 03DE  
                               __pstringtext24 044B                                 __pstringtext16 03EC  
                               __pstringtext25 044D                                 __pstringtext17 0416  
                               __pstringtext26 0000                                 __pstringtext18 041B  
                               __pstringtext19 0425                        __size_of_WDT_Initialize 0003  
                                     intlevel1 0000                    __end_of_ADC_StartConversion 0442  
                             ___lwmod@dividend 0074                        ?_PIN_MANAGER_Initialize 0070  
              __end_of_ADC_GetConversionResult 03C0                              __CFG_CLKOUTEN$OFF 0000  
                             ??_ADC_Initialize 0072           __end_of_EUSART_SetRxInterruptHandler 0416  
        __size_of_EUSART_SetRxInterruptHandler 0006                   _EUSART_SetRxInterruptHandler 0410  
                            _logger_initialize 0200                               ??_TMR1_StopTimer 0072  
                           ?_logger_initialize 0070                             _EUSART_Receive_ISR 02AA  
                             ?_process_message 0079                                  __sprintf@mess 0054  
                                __pstringtext1 0252                                  __pstringtext2 02BF  
                                __pstringtext3 02E6                                  __pstringtext4 0318  
                                __pstringtext5 0326                                  __pstringtext6 0350  
                                __pstringtext7 035D                                  __pstringtext8 0377  
                                __pstringtext9 038F                            ??_logger_initialize 0074  
                          ?_EUSART_Receive_ISR 0070                                ___lwmod@divisor 0072  
                              ___lwmod@counter 0076                          i1_ADC_StartConversion 0448  
                  ?_IOCAF4_SetInterruptHandler 0072                                  _toggle_format 02F8  
                                  _WIFI_tx_buf 0040                                    ?_IOCAF4_ISR 0070  
                           EUSART_Write@txData 0072                   __size_of_EUSART_Transmit_ISR 0016  
                                   _TMR1_state 0034                 __end_of_PIN_MANAGER_Initialize 0200  
                                  _process_ioc 0334                      bt_message_handler@message 0052  
                                ??__TMR1_Ready 0070               ??_IOCAF4_DefaultInterruptHandler 0070  
              ?_IOCAF4_DefaultInterruptHandler 0070                                _PIN_MANAGER_IOC 0435  
                    __end_of_logger_initialize 021D                           ??_EUSART_Receive_ISR 0070  
                              _TMR1_Initialize 027E  
