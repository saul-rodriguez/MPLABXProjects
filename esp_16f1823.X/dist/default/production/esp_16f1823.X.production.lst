

Microchip Technology PIC PRO Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Aug  8 15:21:45 2018

Microchip Technology Omniscient Code Generator v2.00 (PRO mode) build 20180527130849
     1                           	processor	16F1823
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	stringtext12,global,class=STRCODE,delta=2
    17                           	psect	stringtext13,global,class=STRCODE,delta=2
    18                           	psect	stringtext14,global,class=STRCODE,delta=2
    19                           	psect	stringtext15,global,class=STRCODE,delta=2
    20                           	psect	stringtext16,global,class=STRCODE,delta=2
    21                           	psect	stringtext17,global,class=STRCODE,delta=2
    22                           	psect	stringtext18,global,class=STRCODE,delta=2
    23                           	psect	stringtext19,global,class=STRCODE,delta=2
    24                           	psect	stringtext20,global,class=STRCODE,delta=2
    25                           	psect	stringtext21,global,class=STRCODE,delta=2
    26                           	psect	stringtext22,global,class=STRCODE,delta=2
    27                           	psect	stringtext23,global,class=STRCODE,delta=2
    28                           	psect	stringtext24,global,class=STRCODE,delta=2
    29                           	psect	stringtext25,global,class=STRCODE,delta=2
    30                           	psect	stringtext26,global,class=STRCODE,delta=2
    31                           	psect	cinit,global,class=CODE,merge=1,delta=2
    32                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    33                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    34                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    35                           	psect	clrtext,global,class=CODE,delta=2
    36                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    37                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    38                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    39                           	psect	text1,local,class=CODE,merge=1,delta=2
    40                           	psect	text2,local,class=CODE,merge=1,delta=2
    41                           	psect	text3,local,class=CODE,merge=1,delta=2
    42                           	psect	text4,local,class=CODE,merge=1,delta=2
    43                           	psect	text5,local,class=CODE,merge=1,delta=2
    44                           	psect	text6,local,class=CODE,merge=1,delta=2
    45                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text10,local,class=CODE,merge=1,delta=2
    49                           	psect	text11,local,class=CODE,merge=1,delta=2
    50                           	psect	text12,local,class=CODE,merge=1,delta=2
    51                           	psect	text13,local,class=CODE,merge=1,delta=2
    52                           	psect	text14,local,class=CODE,merge=1,delta=2
    53                           	psect	text15,local,class=CODE,merge=1,delta=2
    54                           	psect	text16,local,class=CODE,merge=1,delta=2
    55                           	psect	text17,local,class=CODE,merge=1,delta=2
    56                           	psect	text18,local,class=CODE,merge=1,delta=2
    57                           	psect	text19,local,class=CODE,merge=1,delta=2
    58                           	psect	text20,local,class=CODE,merge=1,delta=2
    59                           	psect	text21,local,class=CODE,merge=1,delta=2
    60                           	psect	text22,local,class=CODE,merge=1,delta=2
    61                           	psect	text23,local,class=CODE,merge=1,delta=2
    62                           	psect	text24,local,class=CODE,merge=1,delta=2
    63                           	psect	text25,local,class=CODE,merge=1,delta=2
    64                           	psect	text26,local,class=CODE,merge=1,delta=2
    65                           	psect	text27,local,class=CODE,merge=1,delta=2
    66                           	psect	text28,local,class=CODE,merge=1,delta=2
    67                           	psect	text29,local,class=CODE,merge=1,delta=2
    68                           	psect	text30,local,class=CODE,merge=1,delta=2
    69                           	psect	text31,local,class=CODE,merge=1,delta=2
    70                           	psect	text32,local,class=CODE,merge=1,delta=2
    71                           	psect	text33,local,class=CODE,merge=1,delta=2
    72                           	psect	text34,local,class=CODE,merge=1,delta=2
    73                           	psect	text35,local,class=CODE,merge=1,delta=2
    74                           	psect	text36,local,class=CODE,merge=1,delta=2
    75                           	psect	text37,local,class=CODE,merge=1,delta=2,group=1
    76                           	psect	text38,local,class=CODE,merge=1,delta=2,group=1
    77                           	psect	text39,local,class=CODE,merge=1,delta=2
    78                           	psect	text40,local,class=CODE,merge=1,delta=2
    79                           	psect	text41,local,class=CODE,merge=1,delta=2
    80                           	psect	text42,local,class=CODE,merge=1,delta=2
    81                           	psect	text43,local,class=CODE,merge=1,delta=2,group=2
    82                           	psect	text44,local,class=CODE,merge=1,delta=2,group=2
    83                           	psect	text45,local,class=CODE,merge=1,delta=2,group=2
    84                           	psect	text46,local,class=CODE,merge=1,delta=2,group=2
    85                           	psect	text47,local,class=CODE,merge=1,delta=2
    86                           	psect	text48,local,class=CODE,merge=1,delta=2
    87                           	psect	text49,local,class=CODE,merge=1,delta=2
    88                           	psect	text50,local,class=CODE,merge=1,delta=2
    89                           	psect	text51,local,class=CODE,merge=1,delta=2
    90                           	psect	intentry,global,class=CODE,delta=2
    91                           	psect	text53,local,class=CODE,merge=1,delta=2
    92                           	psect	text54,local,class=CODE,merge=1,delta=2
    93                           	psect	text55,local,class=CODE,merge=1,delta=2
    94                           	psect	text56,local,class=CODE,merge=1,delta=2
    95                           	psect	text57,local,class=CODE,merge=1,delta=2
    96                           	psect	text58,local,class=CODE,merge=1,delta=2
    97                           	psect	text59,local,class=CODE,merge=1,delta=2
    98                           	psect	text60,local,class=CODE,merge=1,delta=2
    99                           	psect	text61,local,class=CODE,merge=1,delta=2
   100                           	psect	text62,local,class=CODE,merge=1,delta=2
   101                           	psect	text63,local,class=CODE,merge=1,delta=2
   102                           	psect	text64,local,class=CODE,merge=1,delta=2
   103                           	psect	text65,local,class=CODE,merge=1,delta=2
   104                           	psect	pa_nodes0,global,class=CODE,delta=2
   105                           	dabs	1,0x7E,2
   106  0000                     
   107                           ; Version 2.00
   108                           ; Generated 27/05/2018 GMT
   109                           ; 
   110                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   111                           ; All rights reserved.
   112                           ; 
   113                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   114                           ; 
   115                           ; Redistribution and use in source and binary forms, with or without modification, are
   116                           ; permitted provided that the following conditions are met:
   117                           ; 
   118                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   119                           ;        conditions and the following disclaimer.
   120                           ; 
   121                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   122                           ;        of conditions and the following disclaimer in the documentation and/or other
   123                           ;        materials provided with the distribution.
   124                           ; 
   125                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   126                           ;        software without specific prior written permission.
   127                           ; 
   128                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   129                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   130                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   131                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   132                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   133                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   134                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   135                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   136                           ; 
   137                           ; 
   138                           ; Code-generator required, PIC16F1823 Definitions
   139                           ; 
   140                           ; SFR Addresses
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000E                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  008C                     	;# 
   169  008E                     	;# 
   170  0091                     	;# 
   171  0092                     	;# 
   172  0095                     	;# 
   173  0096                     	;# 
   174  0097                     	;# 
   175  0098                     	;# 
   176  0099                     	;# 
   177  009A                     	;# 
   178  009B                     	;# 
   179  009B                     	;# 
   180  009C                     	;# 
   181  009D                     	;# 
   182  009E                     	;# 
   183  010C                     	;# 
   184  010E                     	;# 
   185  0111                     	;# 
   186  0112                     	;# 
   187  0113                     	;# 
   188  0114                     	;# 
   189  0115                     	;# 
   190  0116                     	;# 
   191  0117                     	;# 
   192  0118                     	;# 
   193  0119                     	;# 
   194  011A                     	;# 
   195  011B                     	;# 
   196  011D                     	;# 
   197  011D                     	;# 
   198  018C                     	;# 
   199  018E                     	;# 
   200  0191                     	;# 
   201  0191                     	;# 
   202  0192                     	;# 
   203  0193                     	;# 
   204  0193                     	;# 
   205  0193                     	;# 
   206  0194                     	;# 
   207  0195                     	;# 
   208  0196                     	;# 
   209  0199                     	;# 
   210  019A                     	;# 
   211  019B                     	;# 
   212  019B                     	;# 
   213  019B                     	;# 
   214  019B                     	;# 
   215  019C                     	;# 
   216  019C                     	;# 
   217  019D                     	;# 
   218  019E                     	;# 
   219  019F                     	;# 
   220  020C                     	;# 
   221  020E                     	;# 
   222  0211                     	;# 
   223  0211                     	;# 
   224  0212                     	;# 
   225  0212                     	;# 
   226  0213                     	;# 
   227  0213                     	;# 
   228  0214                     	;# 
   229  0214                     	;# 
   230  0215                     	;# 
   231  0215                     	;# 
   232  0215                     	;# 
   233  0216                     	;# 
   234  0216                     	;# 
   235  0217                     	;# 
   236  0217                     	;# 
   237  0291                     	;# 
   238  0291                     	;# 
   239  0292                     	;# 
   240  0293                     	;# 
   241  0294                     	;# 
   242  0295                     	;# 
   243  0295                     	;# 
   244  0296                     	;# 
   245  0391                     	;# 
   246  0392                     	;# 
   247  0393                     	;# 
   248  039A                     	;# 
   249  039C                     	;# 
   250  039D                     	;# 
   251  039E                     	;# 
   252  039F                     	;# 
   253  0FE4                     	;# 
   254  0FE5                     	;# 
   255  0FE6                     	;# 
   256  0FE7                     	;# 
   257  0FE8                     	;# 
   258  0FE9                     	;# 
   259  0FEA                     	;# 
   260  0FEB                     	;# 
   261  0FED                     	;# 
   262  0FEE                     	;# 
   263  0FEF                     	;# 
   264  0000                     	;# 
   265  0001                     	;# 
   266  0002                     	;# 
   267  0003                     	;# 
   268  0004                     	;# 
   269  0005                     	;# 
   270  0006                     	;# 
   271  0007                     	;# 
   272  0008                     	;# 
   273  0009                     	;# 
   274  000A                     	;# 
   275  000B                     	;# 
   276  000C                     	;# 
   277  000E                     	;# 
   278  0011                     	;# 
   279  0012                     	;# 
   280  0015                     	;# 
   281  0016                     	;# 
   282  0016                     	;# 
   283  0017                     	;# 
   284  0018                     	;# 
   285  0019                     	;# 
   286  001A                     	;# 
   287  001B                     	;# 
   288  001C                     	;# 
   289  001E                     	;# 
   290  001F                     	;# 
   291  008C                     	;# 
   292  008E                     	;# 
   293  0091                     	;# 
   294  0092                     	;# 
   295  0095                     	;# 
   296  0096                     	;# 
   297  0097                     	;# 
   298  0098                     	;# 
   299  0099                     	;# 
   300  009A                     	;# 
   301  009B                     	;# 
   302  009B                     	;# 
   303  009C                     	;# 
   304  009D                     	;# 
   305  009E                     	;# 
   306  010C                     	;# 
   307  010E                     	;# 
   308  0111                     	;# 
   309  0112                     	;# 
   310  0113                     	;# 
   311  0114                     	;# 
   312  0115                     	;# 
   313  0116                     	;# 
   314  0117                     	;# 
   315  0118                     	;# 
   316  0119                     	;# 
   317  011A                     	;# 
   318  011B                     	;# 
   319  011D                     	;# 
   320  011D                     	;# 
   321  018C                     	;# 
   322  018E                     	;# 
   323  0191                     	;# 
   324  0191                     	;# 
   325  0192                     	;# 
   326  0193                     	;# 
   327  0193                     	;# 
   328  0193                     	;# 
   329  0194                     	;# 
   330  0195                     	;# 
   331  0196                     	;# 
   332  0199                     	;# 
   333  019A                     	;# 
   334  019B                     	;# 
   335  019B                     	;# 
   336  019B                     	;# 
   337  019B                     	;# 
   338  019C                     	;# 
   339  019C                     	;# 
   340  019D                     	;# 
   341  019E                     	;# 
   342  019F                     	;# 
   343  020C                     	;# 
   344  020E                     	;# 
   345  0211                     	;# 
   346  0211                     	;# 
   347  0212                     	;# 
   348  0212                     	;# 
   349  0213                     	;# 
   350  0213                     	;# 
   351  0214                     	;# 
   352  0214                     	;# 
   353  0215                     	;# 
   354  0215                     	;# 
   355  0215                     	;# 
   356  0216                     	;# 
   357  0216                     	;# 
   358  0217                     	;# 
   359  0217                     	;# 
   360  0291                     	;# 
   361  0291                     	;# 
   362  0292                     	;# 
   363  0293                     	;# 
   364  0294                     	;# 
   365  0295                     	;# 
   366  0295                     	;# 
   367  0296                     	;# 
   368  0391                     	;# 
   369  0392                     	;# 
   370  0393                     	;# 
   371  039A                     	;# 
   372  039C                     	;# 
   373  039D                     	;# 
   374  039E                     	;# 
   375  039F                     	;# 
   376  0FE4                     	;# 
   377  0FE5                     	;# 
   378  0FE6                     	;# 
   379  0FE7                     	;# 
   380  0FE8                     	;# 
   381  0FE9                     	;# 
   382  0FEA                     	;# 
   383  0FEB                     	;# 
   384  0FED                     	;# 
   385  0FEE                     	;# 
   386  0FEF                     	;# 
   387  0000                     	;# 
   388  0001                     	;# 
   389  0002                     	;# 
   390  0003                     	;# 
   391  0004                     	;# 
   392  0005                     	;# 
   393  0006                     	;# 
   394  0007                     	;# 
   395  0008                     	;# 
   396  0009                     	;# 
   397  000A                     	;# 
   398  000B                     	;# 
   399  000C                     	;# 
   400  000E                     	;# 
   401  0011                     	;# 
   402  0012                     	;# 
   403  0015                     	;# 
   404  0016                     	;# 
   405  0016                     	;# 
   406  0017                     	;# 
   407  0018                     	;# 
   408  0019                     	;# 
   409  001A                     	;# 
   410  001B                     	;# 
   411  001C                     	;# 
   412  001E                     	;# 
   413  001F                     	;# 
   414  008C                     	;# 
   415  008E                     	;# 
   416  0091                     	;# 
   417  0092                     	;# 
   418  0095                     	;# 
   419  0096                     	;# 
   420  0097                     	;# 
   421  0098                     	;# 
   422  0099                     	;# 
   423  009A                     	;# 
   424  009B                     	;# 
   425  009B                     	;# 
   426  009C                     	;# 
   427  009D                     	;# 
   428  009E                     	;# 
   429  010C                     	;# 
   430  010E                     	;# 
   431  0111                     	;# 
   432  0112                     	;# 
   433  0113                     	;# 
   434  0114                     	;# 
   435  0115                     	;# 
   436  0116                     	;# 
   437  0117                     	;# 
   438  0118                     	;# 
   439  0119                     	;# 
   440  011A                     	;# 
   441  011B                     	;# 
   442  011D                     	;# 
   443  011D                     	;# 
   444  018C                     	;# 
   445  018E                     	;# 
   446  0191                     	;# 
   447  0191                     	;# 
   448  0192                     	;# 
   449  0193                     	;# 
   450  0193                     	;# 
   451  0193                     	;# 
   452  0194                     	;# 
   453  0195                     	;# 
   454  0196                     	;# 
   455  0199                     	;# 
   456  019A                     	;# 
   457  019B                     	;# 
   458  019B                     	;# 
   459  019B                     	;# 
   460  019B                     	;# 
   461  019C                     	;# 
   462  019C                     	;# 
   463  019D                     	;# 
   464  019E                     	;# 
   465  019F                     	;# 
   466  020C                     	;# 
   467  020E                     	;# 
   468  0211                     	;# 
   469  0211                     	;# 
   470  0212                     	;# 
   471  0212                     	;# 
   472  0213                     	;# 
   473  0213                     	;# 
   474  0214                     	;# 
   475  0214                     	;# 
   476  0215                     	;# 
   477  0215                     	;# 
   478  0215                     	;# 
   479  0216                     	;# 
   480  0216                     	;# 
   481  0217                     	;# 
   482  0217                     	;# 
   483  0291                     	;# 
   484  0291                     	;# 
   485  0292                     	;# 
   486  0293                     	;# 
   487  0294                     	;# 
   488  0295                     	;# 
   489  0295                     	;# 
   490  0296                     	;# 
   491  0391                     	;# 
   492  0392                     	;# 
   493  0393                     	;# 
   494  039A                     	;# 
   495  039C                     	;# 
   496  039D                     	;# 
   497  039E                     	;# 
   498  039F                     	;# 
   499  0FE4                     	;# 
   500  0FE5                     	;# 
   501  0FE6                     	;# 
   502  0FE7                     	;# 
   503  0FE8                     	;# 
   504  0FE9                     	;# 
   505  0FEA                     	;# 
   506  0FEB                     	;# 
   507  0FED                     	;# 
   508  0FEE                     	;# 
   509  0FEF                     	;# 
   510  0000                     	;# 
   511  0001                     	;# 
   512  0002                     	;# 
   513  0003                     	;# 
   514  0004                     	;# 
   515  0005                     	;# 
   516  0006                     	;# 
   517  0007                     	;# 
   518  0008                     	;# 
   519  0009                     	;# 
   520  000A                     	;# 
   521  000B                     	;# 
   522  000C                     	;# 
   523  000E                     	;# 
   524  0011                     	;# 
   525  0012                     	;# 
   526  0015                     	;# 
   527  0016                     	;# 
   528  0016                     	;# 
   529  0017                     	;# 
   530  0018                     	;# 
   531  0019                     	;# 
   532  001A                     	;# 
   533  001B                     	;# 
   534  001C                     	;# 
   535  001E                     	;# 
   536  001F                     	;# 
   537  008C                     	;# 
   538  008E                     	;# 
   539  0091                     	;# 
   540  0092                     	;# 
   541  0095                     	;# 
   542  0096                     	;# 
   543  0097                     	;# 
   544  0098                     	;# 
   545  0099                     	;# 
   546  009A                     	;# 
   547  009B                     	;# 
   548  009B                     	;# 
   549  009C                     	;# 
   550  009D                     	;# 
   551  009E                     	;# 
   552  010C                     	;# 
   553  010E                     	;# 
   554  0111                     	;# 
   555  0112                     	;# 
   556  0113                     	;# 
   557  0114                     	;# 
   558  0115                     	;# 
   559  0116                     	;# 
   560  0117                     	;# 
   561  0118                     	;# 
   562  0119                     	;# 
   563  011A                     	;# 
   564  011B                     	;# 
   565  011D                     	;# 
   566  011D                     	;# 
   567  018C                     	;# 
   568  018E                     	;# 
   569  0191                     	;# 
   570  0191                     	;# 
   571  0192                     	;# 
   572  0193                     	;# 
   573  0193                     	;# 
   574  0193                     	;# 
   575  0194                     	;# 
   576  0195                     	;# 
   577  0196                     	;# 
   578  0199                     	;# 
   579  019A                     	;# 
   580  019B                     	;# 
   581  019B                     	;# 
   582  019B                     	;# 
   583  019B                     	;# 
   584  019C                     	;# 
   585  019C                     	;# 
   586  019D                     	;# 
   587  019E                     	;# 
   588  019F                     	;# 
   589  020C                     	;# 
   590  020E                     	;# 
   591  0211                     	;# 
   592  0211                     	;# 
   593  0212                     	;# 
   594  0212                     	;# 
   595  0213                     	;# 
   596  0213                     	;# 
   597  0214                     	;# 
   598  0214                     	;# 
   599  0215                     	;# 
   600  0215                     	;# 
   601  0215                     	;# 
   602  0216                     	;# 
   603  0216                     	;# 
   604  0217                     	;# 
   605  0217                     	;# 
   606  0291                     	;# 
   607  0291                     	;# 
   608  0292                     	;# 
   609  0293                     	;# 
   610  0294                     	;# 
   611  0295                     	;# 
   612  0295                     	;# 
   613  0296                     	;# 
   614  0391                     	;# 
   615  0392                     	;# 
   616  0393                     	;# 
   617  039A                     	;# 
   618  039C                     	;# 
   619  039D                     	;# 
   620  039E                     	;# 
   621  039F                     	;# 
   622  0FE4                     	;# 
   623  0FE5                     	;# 
   624  0FE6                     	;# 
   625  0FE7                     	;# 
   626  0FE8                     	;# 
   627  0FE9                     	;# 
   628  0FEA                     	;# 
   629  0FEB                     	;# 
   630  0FED                     	;# 
   631  0FEE                     	;# 
   632  0FEF                     	;# 
   633  0000                     	;# 
   634  0001                     	;# 
   635  0002                     	;# 
   636  0003                     	;# 
   637  0004                     	;# 
   638  0005                     	;# 
   639  0006                     	;# 
   640  0007                     	;# 
   641  0008                     	;# 
   642  0009                     	;# 
   643  000A                     	;# 
   644  000B                     	;# 
   645  000C                     	;# 
   646  000E                     	;# 
   647  0011                     	;# 
   648  0012                     	;# 
   649  0015                     	;# 
   650  0016                     	;# 
   651  0016                     	;# 
   652  0017                     	;# 
   653  0018                     	;# 
   654  0019                     	;# 
   655  001A                     	;# 
   656  001B                     	;# 
   657  001C                     	;# 
   658  001E                     	;# 
   659  001F                     	;# 
   660  008C                     	;# 
   661  008E                     	;# 
   662  0091                     	;# 
   663  0092                     	;# 
   664  0095                     	;# 
   665  0096                     	;# 
   666  0097                     	;# 
   667  0098                     	;# 
   668  0099                     	;# 
   669  009A                     	;# 
   670  009B                     	;# 
   671  009B                     	;# 
   672  009C                     	;# 
   673  009D                     	;# 
   674  009E                     	;# 
   675  010C                     	;# 
   676  010E                     	;# 
   677  0111                     	;# 
   678  0112                     	;# 
   679  0113                     	;# 
   680  0114                     	;# 
   681  0115                     	;# 
   682  0116                     	;# 
   683  0117                     	;# 
   684  0118                     	;# 
   685  0119                     	;# 
   686  011A                     	;# 
   687  011B                     	;# 
   688  011D                     	;# 
   689  011D                     	;# 
   690  018C                     	;# 
   691  018E                     	;# 
   692  0191                     	;# 
   693  0191                     	;# 
   694  0192                     	;# 
   695  0193                     	;# 
   696  0193                     	;# 
   697  0193                     	;# 
   698  0194                     	;# 
   699  0195                     	;# 
   700  0196                     	;# 
   701  0199                     	;# 
   702  019A                     	;# 
   703  019B                     	;# 
   704  019B                     	;# 
   705  019B                     	;# 
   706  019B                     	;# 
   707  019C                     	;# 
   708  019C                     	;# 
   709  019D                     	;# 
   710  019E                     	;# 
   711  019F                     	;# 
   712  020C                     	;# 
   713  020E                     	;# 
   714  0211                     	;# 
   715  0211                     	;# 
   716  0212                     	;# 
   717  0212                     	;# 
   718  0213                     	;# 
   719  0213                     	;# 
   720  0214                     	;# 
   721  0214                     	;# 
   722  0215                     	;# 
   723  0215                     	;# 
   724  0215                     	;# 
   725  0216                     	;# 
   726  0216                     	;# 
   727  0217                     	;# 
   728  0217                     	;# 
   729  0291                     	;# 
   730  0291                     	;# 
   731  0292                     	;# 
   732  0293                     	;# 
   733  0294                     	;# 
   734  0295                     	;# 
   735  0295                     	;# 
   736  0296                     	;# 
   737  0391                     	;# 
   738  0392                     	;# 
   739  0393                     	;# 
   740  039A                     	;# 
   741  039C                     	;# 
   742  039D                     	;# 
   743  039E                     	;# 
   744  039F                     	;# 
   745  0FE4                     	;# 
   746  0FE5                     	;# 
   747  0FE6                     	;# 
   748  0FE7                     	;# 
   749  0FE8                     	;# 
   750  0FE9                     	;# 
   751  0FEA                     	;# 
   752  0FEB                     	;# 
   753  0FED                     	;# 
   754  0FEE                     	;# 
   755  0FEF                     	;# 
   756  0000                     	;# 
   757  0001                     	;# 
   758  0002                     	;# 
   759  0003                     	;# 
   760  0004                     	;# 
   761  0005                     	;# 
   762  0006                     	;# 
   763  0007                     	;# 
   764  0008                     	;# 
   765  0009                     	;# 
   766  000A                     	;# 
   767  000B                     	;# 
   768  000C                     	;# 
   769  000E                     	;# 
   770  0011                     	;# 
   771  0012                     	;# 
   772  0015                     	;# 
   773  0016                     	;# 
   774  0016                     	;# 
   775  0017                     	;# 
   776  0018                     	;# 
   777  0019                     	;# 
   778  001A                     	;# 
   779  001B                     	;# 
   780  001C                     	;# 
   781  001E                     	;# 
   782  001F                     	;# 
   783  008C                     	;# 
   784  008E                     	;# 
   785  0091                     	;# 
   786  0092                     	;# 
   787  0095                     	;# 
   788  0096                     	;# 
   789  0097                     	;# 
   790  0098                     	;# 
   791  0099                     	;# 
   792  009A                     	;# 
   793  009B                     	;# 
   794  009B                     	;# 
   795  009C                     	;# 
   796  009D                     	;# 
   797  009E                     	;# 
   798  010C                     	;# 
   799  010E                     	;# 
   800  0111                     	;# 
   801  0112                     	;# 
   802  0113                     	;# 
   803  0114                     	;# 
   804  0115                     	;# 
   805  0116                     	;# 
   806  0117                     	;# 
   807  0118                     	;# 
   808  0119                     	;# 
   809  011A                     	;# 
   810  011B                     	;# 
   811  011D                     	;# 
   812  011D                     	;# 
   813  018C                     	;# 
   814  018E                     	;# 
   815  0191                     	;# 
   816  0191                     	;# 
   817  0192                     	;# 
   818  0193                     	;# 
   819  0193                     	;# 
   820  0193                     	;# 
   821  0194                     	;# 
   822  0195                     	;# 
   823  0196                     	;# 
   824  0199                     	;# 
   825  019A                     	;# 
   826  019B                     	;# 
   827  019B                     	;# 
   828  019B                     	;# 
   829  019B                     	;# 
   830  019C                     	;# 
   831  019C                     	;# 
   832  019D                     	;# 
   833  019E                     	;# 
   834  019F                     	;# 
   835  020C                     	;# 
   836  020E                     	;# 
   837  0211                     	;# 
   838  0211                     	;# 
   839  0212                     	;# 
   840  0212                     	;# 
   841  0213                     	;# 
   842  0213                     	;# 
   843  0214                     	;# 
   844  0214                     	;# 
   845  0215                     	;# 
   846  0215                     	;# 
   847  0215                     	;# 
   848  0216                     	;# 
   849  0216                     	;# 
   850  0217                     	;# 
   851  0217                     	;# 
   852  0291                     	;# 
   853  0291                     	;# 
   854  0292                     	;# 
   855  0293                     	;# 
   856  0294                     	;# 
   857  0295                     	;# 
   858  0295                     	;# 
   859  0296                     	;# 
   860  0391                     	;# 
   861  0392                     	;# 
   862  0393                     	;# 
   863  039A                     	;# 
   864  039C                     	;# 
   865  039D                     	;# 
   866  039E                     	;# 
   867  039F                     	;# 
   868  0FE4                     	;# 
   869  0FE5                     	;# 
   870  0FE6                     	;# 
   871  0FE7                     	;# 
   872  0FE8                     	;# 
   873  0FE9                     	;# 
   874  0FEA                     	;# 
   875  0FEB                     	;# 
   876  0FED                     	;# 
   877  0FEE                     	;# 
   878  0FEF                     	;# 
   879  0000                     	;# 
   880  0001                     	;# 
   881  0002                     	;# 
   882  0003                     	;# 
   883  0004                     	;# 
   884  0005                     	;# 
   885  0006                     	;# 
   886  0007                     	;# 
   887  0008                     	;# 
   888  0009                     	;# 
   889  000A                     	;# 
   890  000B                     	;# 
   891  000C                     	;# 
   892  000E                     	;# 
   893  0011                     	;# 
   894  0012                     	;# 
   895  0015                     	;# 
   896  0016                     	;# 
   897  0016                     	;# 
   898  0017                     	;# 
   899  0018                     	;# 
   900  0019                     	;# 
   901  001A                     	;# 
   902  001B                     	;# 
   903  001C                     	;# 
   904  001E                     	;# 
   905  001F                     	;# 
   906  008C                     	;# 
   907  008E                     	;# 
   908  0091                     	;# 
   909  0092                     	;# 
   910  0095                     	;# 
   911  0096                     	;# 
   912  0097                     	;# 
   913  0098                     	;# 
   914  0099                     	;# 
   915  009A                     	;# 
   916  009B                     	;# 
   917  009B                     	;# 
   918  009C                     	;# 
   919  009D                     	;# 
   920  009E                     	;# 
   921  010C                     	;# 
   922  010E                     	;# 
   923  0111                     	;# 
   924  0112                     	;# 
   925  0113                     	;# 
   926  0114                     	;# 
   927  0115                     	;# 
   928  0116                     	;# 
   929  0117                     	;# 
   930  0118                     	;# 
   931  0119                     	;# 
   932  011A                     	;# 
   933  011B                     	;# 
   934  011D                     	;# 
   935  011D                     	;# 
   936  018C                     	;# 
   937  018E                     	;# 
   938  0191                     	;# 
   939  0191                     	;# 
   940  0192                     	;# 
   941  0193                     	;# 
   942  0193                     	;# 
   943  0193                     	;# 
   944  0194                     	;# 
   945  0195                     	;# 
   946  0196                     	;# 
   947  0199                     	;# 
   948  019A                     	;# 
   949  019B                     	;# 
   950  019B                     	;# 
   951  019B                     	;# 
   952  019B                     	;# 
   953  019C                     	;# 
   954  019C                     	;# 
   955  019D                     	;# 
   956  019E                     	;# 
   957  019F                     	;# 
   958  020C                     	;# 
   959  020E                     	;# 
   960  0211                     	;# 
   961  0211                     	;# 
   962  0212                     	;# 
   963  0212                     	;# 
   964  0213                     	;# 
   965  0213                     	;# 
   966  0214                     	;# 
   967  0214                     	;# 
   968  0215                     	;# 
   969  0215                     	;# 
   970  0215                     	;# 
   971  0216                     	;# 
   972  0216                     	;# 
   973  0217                     	;# 
   974  0217                     	;# 
   975  0291                     	;# 
   976  0291                     	;# 
   977  0292                     	;# 
   978  0293                     	;# 
   979  0294                     	;# 
   980  0295                     	;# 
   981  0295                     	;# 
   982  0296                     	;# 
   983  0391                     	;# 
   984  0392                     	;# 
   985  0393                     	;# 
   986  039A                     	;# 
   987  039C                     	;# 
   988  039D                     	;# 
   989  039E                     	;# 
   990  039F                     	;# 
   991  0FE4                     	;# 
   992  0FE5                     	;# 
   993  0FE6                     	;# 
   994  0FE7                     	;# 
   995  0FE8                     	;# 
   996  0FE9                     	;# 
   997  0FEA                     	;# 
   998  0FEB                     	;# 
   999  0FED                     	;# 
  1000  0FEE                     	;# 
  1001  0FEF                     	;# 
  1002  0000                     	;# 
  1003  0001                     	;# 
  1004  0002                     	;# 
  1005  0003                     	;# 
  1006  0004                     	;# 
  1007  0005                     	;# 
  1008  0006                     	;# 
  1009  0007                     	;# 
  1010  0008                     	;# 
  1011  0009                     	;# 
  1012  000A                     	;# 
  1013  000B                     	;# 
  1014  000C                     	;# 
  1015  000E                     	;# 
  1016  0011                     	;# 
  1017  0012                     	;# 
  1018  0015                     	;# 
  1019  0016                     	;# 
  1020  0016                     	;# 
  1021  0017                     	;# 
  1022  0018                     	;# 
  1023  0019                     	;# 
  1024  001A                     	;# 
  1025  001B                     	;# 
  1026  001C                     	;# 
  1027  001E                     	;# 
  1028  001F                     	;# 
  1029  008C                     	;# 
  1030  008E                     	;# 
  1031  0091                     	;# 
  1032  0092                     	;# 
  1033  0095                     	;# 
  1034  0096                     	;# 
  1035  0097                     	;# 
  1036  0098                     	;# 
  1037  0099                     	;# 
  1038  009A                     	;# 
  1039  009B                     	;# 
  1040  009B                     	;# 
  1041  009C                     	;# 
  1042  009D                     	;# 
  1043  009E                     	;# 
  1044  010C                     	;# 
  1045  010E                     	;# 
  1046  0111                     	;# 
  1047  0112                     	;# 
  1048  0113                     	;# 
  1049  0114                     	;# 
  1050  0115                     	;# 
  1051  0116                     	;# 
  1052  0117                     	;# 
  1053  0118                     	;# 
  1054  0119                     	;# 
  1055  011A                     	;# 
  1056  011B                     	;# 
  1057  011D                     	;# 
  1058  011D                     	;# 
  1059  018C                     	;# 
  1060  018E                     	;# 
  1061  0191                     	;# 
  1062  0191                     	;# 
  1063  0192                     	;# 
  1064  0193                     	;# 
  1065  0193                     	;# 
  1066  0193                     	;# 
  1067  0194                     	;# 
  1068  0195                     	;# 
  1069  0196                     	;# 
  1070  0199                     	;# 
  1071  019A                     	;# 
  1072  019B                     	;# 
  1073  019B                     	;# 
  1074  019B                     	;# 
  1075  019B                     	;# 
  1076  019C                     	;# 
  1077  019C                     	;# 
  1078  019D                     	;# 
  1079  019E                     	;# 
  1080  019F                     	;# 
  1081  020C                     	;# 
  1082  020E                     	;# 
  1083  0211                     	;# 
  1084  0211                     	;# 
  1085  0212                     	;# 
  1086  0212                     	;# 
  1087  0213                     	;# 
  1088  0213                     	;# 
  1089  0214                     	;# 
  1090  0214                     	;# 
  1091  0215                     	;# 
  1092  0215                     	;# 
  1093  0215                     	;# 
  1094  0216                     	;# 
  1095  0216                     	;# 
  1096  0217                     	;# 
  1097  0217                     	;# 
  1098  0291                     	;# 
  1099  0291                     	;# 
  1100  0292                     	;# 
  1101  0293                     	;# 
  1102  0294                     	;# 
  1103  0295                     	;# 
  1104  0295                     	;# 
  1105  0296                     	;# 
  1106  0391                     	;# 
  1107  0392                     	;# 
  1108  0393                     	;# 
  1109  039A                     	;# 
  1110  039C                     	;# 
  1111  039D                     	;# 
  1112  039E                     	;# 
  1113  039F                     	;# 
  1114  0FE4                     	;# 
  1115  0FE5                     	;# 
  1116  0FE6                     	;# 
  1117  0FE7                     	;# 
  1118  0FE8                     	;# 
  1119  0FE9                     	;# 
  1120  0FEA                     	;# 
  1121  0FEB                     	;# 
  1122  0FED                     	;# 
  1123  0FEE                     	;# 
  1124  0FEF                     	;# 
  1125  0000                     	;# 
  1126  0001                     	;# 
  1127  0002                     	;# 
  1128  0003                     	;# 
  1129  0004                     	;# 
  1130  0005                     	;# 
  1131  0006                     	;# 
  1132  0007                     	;# 
  1133  0008                     	;# 
  1134  0009                     	;# 
  1135  000A                     	;# 
  1136  000B                     	;# 
  1137  000C                     	;# 
  1138  000E                     	;# 
  1139  0011                     	;# 
  1140  0012                     	;# 
  1141  0015                     	;# 
  1142  0016                     	;# 
  1143  0016                     	;# 
  1144  0017                     	;# 
  1145  0018                     	;# 
  1146  0019                     	;# 
  1147  001A                     	;# 
  1148  001B                     	;# 
  1149  001C                     	;# 
  1150  001E                     	;# 
  1151  001F                     	;# 
  1152  008C                     	;# 
  1153  008E                     	;# 
  1154  0091                     	;# 
  1155  0092                     	;# 
  1156  0095                     	;# 
  1157  0096                     	;# 
  1158  0097                     	;# 
  1159  0098                     	;# 
  1160  0099                     	;# 
  1161  009A                     	;# 
  1162  009B                     	;# 
  1163  009B                     	;# 
  1164  009C                     	;# 
  1165  009D                     	;# 
  1166  009E                     	;# 
  1167  010C                     	;# 
  1168  010E                     	;# 
  1169  0111                     	;# 
  1170  0112                     	;# 
  1171  0113                     	;# 
  1172  0114                     	;# 
  1173  0115                     	;# 
  1174  0116                     	;# 
  1175  0117                     	;# 
  1176  0118                     	;# 
  1177  0119                     	;# 
  1178  011A                     	;# 
  1179  011B                     	;# 
  1180  011D                     	;# 
  1181  011D                     	;# 
  1182  018C                     	;# 
  1183  018E                     	;# 
  1184  0191                     	;# 
  1185  0191                     	;# 
  1186  0192                     	;# 
  1187  0193                     	;# 
  1188  0193                     	;# 
  1189  0193                     	;# 
  1190  0194                     	;# 
  1191  0195                     	;# 
  1192  0196                     	;# 
  1193  0199                     	;# 
  1194  019A                     	;# 
  1195  019B                     	;# 
  1196  019B                     	;# 
  1197  019B                     	;# 
  1198  019B                     	;# 
  1199  019C                     	;# 
  1200  019C                     	;# 
  1201  019D                     	;# 
  1202  019E                     	;# 
  1203  019F                     	;# 
  1204  020C                     	;# 
  1205  020E                     	;# 
  1206  0211                     	;# 
  1207  0211                     	;# 
  1208  0212                     	;# 
  1209  0212                     	;# 
  1210  0213                     	;# 
  1211  0213                     	;# 
  1212  0214                     	;# 
  1213  0214                     	;# 
  1214  0215                     	;# 
  1215  0215                     	;# 
  1216  0215                     	;# 
  1217  0216                     	;# 
  1218  0216                     	;# 
  1219  0217                     	;# 
  1220  0217                     	;# 
  1221  0291                     	;# 
  1222  0291                     	;# 
  1223  0292                     	;# 
  1224  0293                     	;# 
  1225  0294                     	;# 
  1226  0295                     	;# 
  1227  0295                     	;# 
  1228  0296                     	;# 
  1229  0391                     	;# 
  1230  0392                     	;# 
  1231  0393                     	;# 
  1232  039A                     	;# 
  1233  039C                     	;# 
  1234  039D                     	;# 
  1235  039E                     	;# 
  1236  039F                     	;# 
  1237  0FE4                     	;# 
  1238  0FE5                     	;# 
  1239  0FE6                     	;# 
  1240  0FE7                     	;# 
  1241  0FE8                     	;# 
  1242  0FE9                     	;# 
  1243  0FEA                     	;# 
  1244  0FEB                     	;# 
  1245  0FED                     	;# 
  1246  0FEE                     	;# 
  1247  0FEF                     	;# 
  1248  0000                     	;# 
  1249  0001                     	;# 
  1250  0002                     	;# 
  1251  0003                     	;# 
  1252  0004                     	;# 
  1253  0005                     	;# 
  1254  0006                     	;# 
  1255  0007                     	;# 
  1256  0008                     	;# 
  1257  0009                     	;# 
  1258  000A                     	;# 
  1259  000B                     	;# 
  1260  000C                     	;# 
  1261  000E                     	;# 
  1262  0011                     	;# 
  1263  0012                     	;# 
  1264  0015                     	;# 
  1265  0016                     	;# 
  1266  0016                     	;# 
  1267  0017                     	;# 
  1268  0018                     	;# 
  1269  0019                     	;# 
  1270  001A                     	;# 
  1271  001B                     	;# 
  1272  001C                     	;# 
  1273  001E                     	;# 
  1274  001F                     	;# 
  1275  008C                     	;# 
  1276  008E                     	;# 
  1277  0091                     	;# 
  1278  0092                     	;# 
  1279  0095                     	;# 
  1280  0096                     	;# 
  1281  0097                     	;# 
  1282  0098                     	;# 
  1283  0099                     	;# 
  1284  009A                     	;# 
  1285  009B                     	;# 
  1286  009B                     	;# 
  1287  009C                     	;# 
  1288  009D                     	;# 
  1289  009E                     	;# 
  1290  010C                     	;# 
  1291  010E                     	;# 
  1292  0111                     	;# 
  1293  0112                     	;# 
  1294  0113                     	;# 
  1295  0114                     	;# 
  1296  0115                     	;# 
  1297  0116                     	;# 
  1298  0117                     	;# 
  1299  0118                     	;# 
  1300  0119                     	;# 
  1301  011A                     	;# 
  1302  011B                     	;# 
  1303  011D                     	;# 
  1304  011D                     	;# 
  1305  018C                     	;# 
  1306  018E                     	;# 
  1307  0191                     	;# 
  1308  0191                     	;# 
  1309  0192                     	;# 
  1310  0193                     	;# 
  1311  0193                     	;# 
  1312  0193                     	;# 
  1313  0194                     	;# 
  1314  0195                     	;# 
  1315  0196                     	;# 
  1316  0199                     	;# 
  1317  019A                     	;# 
  1318  019B                     	;# 
  1319  019B                     	;# 
  1320  019B                     	;# 
  1321  019B                     	;# 
  1322  019C                     	;# 
  1323  019C                     	;# 
  1324  019D                     	;# 
  1325  019E                     	;# 
  1326  019F                     	;# 
  1327  020C                     	;# 
  1328  020E                     	;# 
  1329  0211                     	;# 
  1330  0211                     	;# 
  1331  0212                     	;# 
  1332  0212                     	;# 
  1333  0213                     	;# 
  1334  0213                     	;# 
  1335  0214                     	;# 
  1336  0214                     	;# 
  1337  0215                     	;# 
  1338  0215                     	;# 
  1339  0215                     	;# 
  1340  0216                     	;# 
  1341  0216                     	;# 
  1342  0217                     	;# 
  1343  0217                     	;# 
  1344  0291                     	;# 
  1345  0291                     	;# 
  1346  0292                     	;# 
  1347  0293                     	;# 
  1348  0294                     	;# 
  1349  0295                     	;# 
  1350  0295                     	;# 
  1351  0296                     	;# 
  1352  0391                     	;# 
  1353  0392                     	;# 
  1354  0393                     	;# 
  1355  039A                     	;# 
  1356  039C                     	;# 
  1357  039D                     	;# 
  1358  039E                     	;# 
  1359  039F                     	;# 
  1360  0FE4                     	;# 
  1361  0FE5                     	;# 
  1362  0FE6                     	;# 
  1363  0FE7                     	;# 
  1364  0FE8                     	;# 
  1365  0FE9                     	;# 
  1366  0FEA                     	;# 
  1367  0FEB                     	;# 
  1368  0FED                     	;# 
  1369  0FEE                     	;# 
  1370  0FEF                     	;# 
  1371  0000                     	;# 
  1372  0001                     	;# 
  1373  0002                     	;# 
  1374  0003                     	;# 
  1375  0004                     	;# 
  1376  0005                     	;# 
  1377  0006                     	;# 
  1378  0007                     	;# 
  1379  0008                     	;# 
  1380  0009                     	;# 
  1381  000A                     	;# 
  1382  000B                     	;# 
  1383  000C                     	;# 
  1384  000E                     	;# 
  1385  0011                     	;# 
  1386  0012                     	;# 
  1387  0015                     	;# 
  1388  0016                     	;# 
  1389  0016                     	;# 
  1390  0017                     	;# 
  1391  0018                     	;# 
  1392  0019                     	;# 
  1393  001A                     	;# 
  1394  001B                     	;# 
  1395  001C                     	;# 
  1396  001E                     	;# 
  1397  001F                     	;# 
  1398  008C                     	;# 
  1399  008E                     	;# 
  1400  0091                     	;# 
  1401  0092                     	;# 
  1402  0095                     	;# 
  1403  0096                     	;# 
  1404  0097                     	;# 
  1405  0098                     	;# 
  1406  0099                     	;# 
  1407  009A                     	;# 
  1408  009B                     	;# 
  1409  009B                     	;# 
  1410  009C                     	;# 
  1411  009D                     	;# 
  1412  009E                     	;# 
  1413  010C                     	;# 
  1414  010E                     	;# 
  1415  0111                     	;# 
  1416  0112                     	;# 
  1417  0113                     	;# 
  1418  0114                     	;# 
  1419  0115                     	;# 
  1420  0116                     	;# 
  1421  0117                     	;# 
  1422  0118                     	;# 
  1423  0119                     	;# 
  1424  011A                     	;# 
  1425  011B                     	;# 
  1426  011D                     	;# 
  1427  011D                     	;# 
  1428  018C                     	;# 
  1429  018E                     	;# 
  1430  0191                     	;# 
  1431  0191                     	;# 
  1432  0192                     	;# 
  1433  0193                     	;# 
  1434  0193                     	;# 
  1435  0193                     	;# 
  1436  0194                     	;# 
  1437  0195                     	;# 
  1438  0196                     	;# 
  1439  0199                     	;# 
  1440  019A                     	;# 
  1441  019B                     	;# 
  1442  019B                     	;# 
  1443  019B                     	;# 
  1444  019B                     	;# 
  1445  019C                     	;# 
  1446  019C                     	;# 
  1447  019D                     	;# 
  1448  019E                     	;# 
  1449  019F                     	;# 
  1450  020C                     	;# 
  1451  020E                     	;# 
  1452  0211                     	;# 
  1453  0211                     	;# 
  1454  0212                     	;# 
  1455  0212                     	;# 
  1456  0213                     	;# 
  1457  0213                     	;# 
  1458  0214                     	;# 
  1459  0214                     	;# 
  1460  0215                     	;# 
  1461  0215                     	;# 
  1462  0215                     	;# 
  1463  0216                     	;# 
  1464  0216                     	;# 
  1465  0217                     	;# 
  1466  0217                     	;# 
  1467  0291                     	;# 
  1468  0291                     	;# 
  1469  0292                     	;# 
  1470  0293                     	;# 
  1471  0294                     	;# 
  1472  0295                     	;# 
  1473  0295                     	;# 
  1474  0296                     	;# 
  1475  0391                     	;# 
  1476  0392                     	;# 
  1477  0393                     	;# 
  1478  039A                     	;# 
  1479  039C                     	;# 
  1480  039D                     	;# 
  1481  039E                     	;# 
  1482  039F                     	;# 
  1483  0FE4                     	;# 
  1484  0FE5                     	;# 
  1485  0FE6                     	;# 
  1486  0FE7                     	;# 
  1487  0FE8                     	;# 
  1488  0FE9                     	;# 
  1489  0FEA                     	;# 
  1490  0FEB                     	;# 
  1491  0FED                     	;# 
  1492  0FEE                     	;# 
  1493  0FEF                     	;# 
  1494  0000                     	;# 
  1495  0001                     	;# 
  1496  0002                     	;# 
  1497  0003                     	;# 
  1498  0004                     	;# 
  1499  0005                     	;# 
  1500  0006                     	;# 
  1501  0007                     	;# 
  1502  0008                     	;# 
  1503  0009                     	;# 
  1504  000A                     	;# 
  1505  000B                     	;# 
  1506  000C                     	;# 
  1507  000E                     	;# 
  1508  0011                     	;# 
  1509  0012                     	;# 
  1510  0015                     	;# 
  1511  0016                     	;# 
  1512  0016                     	;# 
  1513  0017                     	;# 
  1514  0018                     	;# 
  1515  0019                     	;# 
  1516  001A                     	;# 
  1517  001B                     	;# 
  1518  001C                     	;# 
  1519  001E                     	;# 
  1520  001F                     	;# 
  1521  008C                     	;# 
  1522  008E                     	;# 
  1523  0091                     	;# 
  1524  0092                     	;# 
  1525  0095                     	;# 
  1526  0096                     	;# 
  1527  0097                     	;# 
  1528  0098                     	;# 
  1529  0099                     	;# 
  1530  009A                     	;# 
  1531  009B                     	;# 
  1532  009B                     	;# 
  1533  009C                     	;# 
  1534  009D                     	;# 
  1535  009E                     	;# 
  1536  010C                     	;# 
  1537  010E                     	;# 
  1538  0111                     	;# 
  1539  0112                     	;# 
  1540  0113                     	;# 
  1541  0114                     	;# 
  1542  0115                     	;# 
  1543  0116                     	;# 
  1544  0117                     	;# 
  1545  0118                     	;# 
  1546  0119                     	;# 
  1547  011A                     	;# 
  1548  011B                     	;# 
  1549  011D                     	;# 
  1550  011D                     	;# 
  1551  018C                     	;# 
  1552  018E                     	;# 
  1553  0191                     	;# 
  1554  0191                     	;# 
  1555  0192                     	;# 
  1556  0193                     	;# 
  1557  0193                     	;# 
  1558  0193                     	;# 
  1559  0194                     	;# 
  1560  0195                     	;# 
  1561  0196                     	;# 
  1562  0199                     	;# 
  1563  019A                     	;# 
  1564  019B                     	;# 
  1565  019B                     	;# 
  1566  019B                     	;# 
  1567  019B                     	;# 
  1568  019C                     	;# 
  1569  019C                     	;# 
  1570  019D                     	;# 
  1571  019E                     	;# 
  1572  019F                     	;# 
  1573  020C                     	;# 
  1574  020E                     	;# 
  1575  0211                     	;# 
  1576  0211                     	;# 
  1577  0212                     	;# 
  1578  0212                     	;# 
  1579  0213                     	;# 
  1580  0213                     	;# 
  1581  0214                     	;# 
  1582  0214                     	;# 
  1583  0215                     	;# 
  1584  0215                     	;# 
  1585  0215                     	;# 
  1586  0216                     	;# 
  1587  0216                     	;# 
  1588  0217                     	;# 
  1589  0217                     	;# 
  1590  0291                     	;# 
  1591  0291                     	;# 
  1592  0292                     	;# 
  1593  0293                     	;# 
  1594  0294                     	;# 
  1595  0295                     	;# 
  1596  0295                     	;# 
  1597  0296                     	;# 
  1598  0391                     	;# 
  1599  0392                     	;# 
  1600  0393                     	;# 
  1601  039A                     	;# 
  1602  039C                     	;# 
  1603  039D                     	;# 
  1604  039E                     	;# 
  1605  039F                     	;# 
  1606  0FE4                     	;# 
  1607  0FE5                     	;# 
  1608  0FE6                     	;# 
  1609  0FE7                     	;# 
  1610  0FE8                     	;# 
  1611  0FE9                     	;# 
  1612  0FEA                     	;# 
  1613  0FEB                     	;# 
  1614  0FED                     	;# 
  1615  0FEE                     	;# 
  1616  0FEF                     	;# 
  1617                           
  1618                           	psect	nvBANK0
  1619  006D                     __pnvBANK0:	
  1620  006D                     _IOCAF4_InterruptHandler:	
  1621  006D                     	ds	2
  1622  000C                     _PORTAbits	set	12
  1623  0018                     _T1CONbits	set	24
  1624  0018                     _T1CON	set	24
  1625  0016                     _TMR1L	set	22
  1626  0017                     _TMR1H	set	23
  1627  0019                     _T1GCON	set	25
  1628  000B                     _INTCONbits	set	11
  1629  0011                     _PIR1bits	set	17
  1630  0095                     _OPTION_REGbits	set	149
  1631  008E                     _TRISC	set	142
  1632  008C                     _TRISA	set	140
  1633  0097                     _WDTCON	set	151
  1634  0098                     _OSCTUNE	set	152
  1635  0099                     _OSCCON	set	153
  1636  009D                     _ADCON0bits	set	157
  1637  0091                     _PIE1bits	set	145
  1638  009C                     _ADRESH	set	156
  1639  009B                     _ADRESL	set	155
  1640  009E                     _ADCON1	set	158
  1641  009D                     _ADCON0	set	157
  1642  04D6                     _PLLR	set	1238
  1643  010C                     _LATAbits	set	268
  1644  011D                     _APFCON	set	285
  1645  010E                     _LATC	set	270
  1646  010C                     _LATA	set	268
  1647  0116                     _BORCON	set	278
  1648  0196                     _EECON2	set	406
  1649  0193                     _EEDATL	set	403
  1650  0195                     _EECON1bits	set	405
  1651  0191                     _EEADRL	set	401
  1652  018C                     _ANSELA	set	396
  1653  018E                     _ANSELC	set	398
  1654  0199                     _RCREG	set	409
  1655  019D                     _RCSTAbits	set	413
  1656  019A                     _TXREG	set	410
  1657  019C                     _SPBRGH	set	412
  1658  019B                     _SPBRGL	set	411
  1659  019E                     _TXSTA	set	414
  1660  019D                     _RCSTA	set	413
  1661  019F                     _BAUDCON	set	415
  1662  020E                     _WPUC	set	526
  1663  020C                     _WPUA	set	524
  1664  0391                     _IOCAPbits	set	913
  1665  0392                     _IOCANbits	set	914
  1666  0393                     _IOCAFbits	set	915
  1667                           
  1668                           	psect	stringtext1
  1669  056B                     __pstringtext1:	
  1670  056B                     STR_28:	
  1671  056B  3465               	retlw	101	;'e'
  1672  056C  346E               	retlw	110	;'n'
  1673  056D  3474               	retlw	116	;'t'
  1674  056E  3465               	retlw	101	;'e'
  1675  056F  3472               	retlw	114	;'r'
  1676  0570  3420               	retlw	32	;' '
  1677  0571  3477               	retlw	119	;'w'
  1678  0572  346C               	retlw	108	;'l'
  1679  0573  3461               	retlw	97	;'a'
  1680  0574  346E               	retlw	110	;'n'
  1681  0575  3420               	retlw	32	;' '
  1682  0576  3470               	retlw	112	;'p'
  1683  0577  3461               	retlw	97	;'a'
  1684  0578  3473               	retlw	115	;'s'
  1685  0579  3473               	retlw	115	;'s'
  1686  057A  3477               	retlw	119	;'w'
  1687  057B  346F               	retlw	111	;'o'
  1688  057C  3472               	retlw	114	;'r'
  1689  057D  3464               	retlw	100	;'d'
  1690  057E  343A               	retlw	58	;':'
  1691  057F  340A               	retlw	10
  1692  0580  3400               	retlw	0
  1693                           
  1694                           	psect	stringtext2
  1695  05EE                     __pstringtext2:	
  1696  05EE                     STR_14:	
  1697  05EE  3441               	retlw	65	;'A'
  1698  05EF  3454               	retlw	84	;'T'
  1699  05F0  342B               	retlw	43	;'+'
  1700  05F1  3443               	retlw	67	;'C'
  1701  05F2  3449               	retlw	73	;'I'
  1702  05F3  3450               	retlw	80	;'P'
  1703  05F4  3453               	retlw	83	;'S'
  1704  05F5  3445               	retlw	69	;'E'
  1705  05F6  3452               	retlw	82	;'R'
  1706  05F7  3456               	retlw	86	;'V'
  1707  05F8  3445               	retlw	69	;'E'
  1708  05F9  3452               	retlw	82	;'R'
  1709  05FA  343D               	retlw	61	;'='
  1710  05FB  3431               	retlw	49	;'1'
  1711  05FC  342C               	retlw	44	;','
  1712  05FD  3438               	retlw	56	;'8'
  1713  05FE  3430               	retlw	48	;'0'
  1714  05FF  340D               	retlw	13
  1715  0600  340A               	retlw	10
  1716  0601  3400               	retlw	0
  1717                           
  1718                           	psect	stringtext3
  1719  0616                     __pstringtext3:	
  1720  0616                     STR_26:	
  1721  0616  3465               	retlw	101	;'e'
  1722  0617  346E               	retlw	110	;'n'
  1723  0618  3474               	retlw	116	;'t'
  1724  0619  3465               	retlw	101	;'e'
  1725  061A  3472               	retlw	114	;'r'
  1726  061B  3420               	retlw	32	;' '
  1727  061C  3477               	retlw	119	;'w'
  1728  061D  346C               	retlw	108	;'l'
  1729  061E  3461               	retlw	97	;'a'
  1730  061F  346E               	retlw	110	;'n'
  1731  0620  3420               	retlw	32	;' '
  1732  0621  346E               	retlw	110	;'n'
  1733  0622  3461               	retlw	97	;'a'
  1734  0623  346D               	retlw	109	;'m'
  1735  0624  3465               	retlw	101	;'e'
  1736  0625  343A               	retlw	58	;':'
  1737  0626  340A               	retlw	10
  1738  0627  3400               	retlw	0
  1739                           
  1740                           	psect	stringtext4
  1741  064A                     __pstringtext4:	
  1742  064A                     STR_9:	
  1743  064A  3441               	retlw	65	;'A'
  1744  064B  3454               	retlw	84	;'T'
  1745  064C  342B               	retlw	43	;'+'
  1746  064D  3443               	retlw	67	;'C'
  1747  064E  3457               	retlw	87	;'W'
  1748  064F  344D               	retlw	77	;'M'
  1749  0650  344F               	retlw	79	;'O'
  1750  0651  3444               	retlw	68	;'D'
  1751  0652  3445               	retlw	69	;'E'
  1752  0653  343D               	retlw	61	;'='
  1753  0654  3431               	retlw	49	;'1'
  1754  0655  340D               	retlw	13
  1755  0656  340A               	retlw	10
  1756  0657  3400               	retlw	0
  1757                           
  1758                           	psect	stringtext5
  1759  0658                     __pstringtext5:	
  1760  0658                     STR_13:	
  1761  0658  3441               	retlw	65	;'A'
  1762  0659  3454               	retlw	84	;'T'
  1763  065A  342B               	retlw	43	;'+'
  1764  065B  3443               	retlw	67	;'C'
  1765  065C  3449               	retlw	73	;'I'
  1766  065D  3450               	retlw	80	;'P'
  1767  065E  344D               	retlw	77	;'M'
  1768  065F  3455               	retlw	85	;'U'
  1769  0660  3458               	retlw	88	;'X'
  1770  0661  343D               	retlw	61	;'='
  1771  0662  3431               	retlw	49	;'1'
  1772  0663  340D               	retlw	13
  1773  0664  340A               	retlw	10
  1774  0665  3400               	retlw	0
  1775                           
  1776                           	psect	stringtext6
  1777  0674                     __pstringtext6:	
  1778  0674                     STR_25:	
  1779  0674  344C               	retlw	76	;'L'
  1780  0675  346F               	retlw	111	;'o'
  1781  0676  3467               	retlw	103	;'g'
  1782  0677  3467               	retlw	103	;'g'
  1783  0678  3465               	retlw	101	;'e'
  1784  0679  3472               	retlw	114	;'r'
  1785  067A  3420               	retlw	32	;' '
  1786  067B  3456               	retlw	86	;'V'
  1787  067C  3431               	retlw	49	;'1'
  1788  067D  342E               	retlw	46	;'.'
  1789  067E  3430               	retlw	48	;'0'
  1790  067F  340A               	retlw	10
  1791  0680  3400               	retlw	0
  1792                           
  1793                           	psect	stringtext7
  1794  0681                     __pstringtext7:	
  1795  0681                     STR_27:	
  1796  0681  3462               	retlw	98	;'b'
  1797  0682  3475               	retlw	117	;'u'
  1798  0683  3466               	retlw	102	;'f'
  1799  0684  3466               	retlw	102	;'f'
  1800  0685  3465               	retlw	101	;'e'
  1801  0686  3472               	retlw	114	;'r'
  1802  0687  3420               	retlw	32	;' '
  1803  0688  3465               	retlw	101	;'e'
  1804  0689  3472               	retlw	114	;'r'
  1805  068A  3472               	retlw	114	;'r'
  1806  068B  346F               	retlw	111	;'o'
  1807  068C  3472               	retlw	114	;'r'
  1808  068D  3400               	retlw	0
  1809                           
  1810                           	psect	stringtext8
  1811  069B                     __pstringtext8:	
  1812  069B                     STR_16:	
  1813  069B  3441               	retlw	65	;'A'
  1814  069C  3454               	retlw	84	;'T'
  1815  069D  342B               	retlw	43	;'+'
  1816  069E  3443               	retlw	67	;'C'
  1817  069F  3449               	retlw	73	;'I'
  1818  06A0  3450               	retlw	80	;'P'
  1819  06A1  3453               	retlw	83	;'S'
  1820  06A2  3445               	retlw	69	;'E'
  1821  06A3  344E               	retlw	78	;'N'
  1822  06A4  3444               	retlw	68	;'D'
  1823  06A5  343D               	retlw	61	;'='
  1824  06A6  3400               	retlw	0
  1825                           
  1826                           	psect	stringtext9
  1827  06B3                     __pstringtext9:	
  1828  06B3                     STR_10:	
  1829  06B3  3441               	retlw	65	;'A'
  1830  06B4  3454               	retlw	84	;'T'
  1831  06B5  342B               	retlw	43	;'+'
  1832  06B6  3443               	retlw	67	;'C'
  1833  06B7  3457               	retlw	87	;'W'
  1834  06B8  344A               	retlw	74	;'J'
  1835  06B9  3441               	retlw	65	;'A'
  1836  06BA  3450               	retlw	80	;'P'
  1837  06BB  343D               	retlw	61	;'='
  1838  06BC  3422               	retlw	34	;'"'
  1839  06BD  3400               	retlw	0
  1840                           
  1841                           	psect	stringtext10
  1842  06C9                     __pstringtext10:	
  1843  06C9                     STR_3:	
  1844  06C9  3453               	retlw	83	;'S'
  1845  06CA  3445               	retlw	69	;'E'
  1846  06CB  344E               	retlw	78	;'N'
  1847  06CC  3444               	retlw	68	;'D'
  1848  06CD  3420               	retlw	32	;' '
  1849  06CE  3446               	retlw	70	;'F'
  1850  06CF  3441               	retlw	65	;'A'
  1851  06D0  3449               	retlw	73	;'I'
  1852  06D1  344C               	retlw	76	;'L'
  1853  06D2  3400               	retlw	0
  1854                           
  1855                           	psect	stringtext11
  1856  06EF                     __pstringtext11:	
  1857  06EF                     STR_1:	
  1858  06EF  3453               	retlw	83	;'S'
  1859  06F0  3445               	retlw	69	;'E'
  1860  06F1  344E               	retlw	78	;'N'
  1861  06F2  3444               	retlw	68	;'D'
  1862  06F3  3420               	retlw	32	;' '
  1863  06F4  344F               	retlw	79	;'O'
  1864  06F5  344B               	retlw	75	;'K'
  1865  06F6  3400               	retlw	0
  1866                           
  1867                           	psect	stringtext12
  1868  06F7                     __pstringtext12:	
  1869  06F7                     STR_6:	
  1870  06F7  3443               	retlw	67	;'C'
  1871  06F8  344F               	retlw	79	;'O'
  1872  06F9  344E               	retlw	78	;'N'
  1873  06FA  344E               	retlw	78	;'N'
  1874  06FB  3445               	retlw	69	;'E'
  1875  06FC  3443               	retlw	67	;'C'
  1876  06FD  3454               	retlw	84	;'T'
  1877  06FE  3400               	retlw	0
  1878                           
  1879                           	psect	stringtext13
  1880  0707                     __pstringtext13:	
  1881  0707                     STR_22:	
  1882  0707  3462               	retlw	98	;'b'
  1883  0708  346D               	retlw	109	;'m'
  1884  0709  346F               	retlw	111	;'o'
  1885  070A  3464               	retlw	100	;'d'
  1886  070B  3465               	retlw	101	;'e'
  1887  070C  340A               	retlw	10
  1888  070D  3400               	retlw	0
  1889                           
  1890                           	psect	stringtext14
  1891  070E                     __pstringtext14:	
  1892  070E                     STR_21:	
  1893  070E  3474               	retlw	116	;'t'
  1894  070F  346D               	retlw	109	;'m'
  1895  0710  346F               	retlw	111	;'o'
  1896  0711  3464               	retlw	100	;'d'
  1897  0712  3465               	retlw	101	;'e'
  1898  0713  340A               	retlw	10
  1899  0714  3400               	retlw	0
  1900                           
  1901                           	psect	stringtext15
  1902  0715                     __pstringtext15:	
  1903  0715                     STR_7:	
  1904  0715  3443               	retlw	67	;'C'
  1905  0716  344C               	retlw	76	;'L'
  1906  0717  344F               	retlw	79	;'O'
  1907  0718  3453               	retlw	83	;'S'
  1908  0719  3445               	retlw	69	;'E'
  1909  071A  3444               	retlw	68	;'D'
  1910  071B  3400               	retlw	0
  1911                           
  1912                           	psect	stringtext16
  1913  0723                     __pstringtext16:	
  1914  0723                     STR_4:	
  1915  0723  3445               	retlw	69	;'E'
  1916  0724  3452               	retlw	82	;'R'
  1917  0725  3452               	retlw	82	;'R'
  1918  0726  344F               	retlw	79	;'O'
  1919  0727  3452               	retlw	82	;'R'
  1920  0728  3400               	retlw	0
  1921                           
  1922                           	psect	stringtext17
  1923  074D                     __pstringtext17:	
  1924  074D                     STR_8:	
  1925  074D  3441               	retlw	65	;'A'
  1926  074E  3454               	retlw	84	;'T'
  1927  074F  340D               	retlw	13
  1928  0750  340A               	retlw	10
  1929  0751  3400               	retlw	0
  1930                           
  1931                           	psect	stringtext18
  1932  0752                     __pstringtext18:	
  1933  0752                     STR_5:	
  1934  0752  342B               	retlw	43	;'+'
  1935  0753  3449               	retlw	73	;'I'
  1936  0754  3450               	retlw	80	;'P'
  1937  0755  3444               	retlw	68	;'D'
  1938  0756  3400               	retlw	0
  1939                           
  1940                           	psect	stringtext19
  1941  075C                     __pstringtext19:	
  1942  075C                     STR_20:	
  1943  075C  344F               	retlw	79	;'O'
  1944  075D  346B               	retlw	107	;'k'
  1945  075E  340A               	retlw	10
  1946  075F  3400               	retlw	0
  1947                           
  1948                           	psect	stringtext20
  1949  0760                     __pstringtext20:	
  1950  0760                     STR_12:	
  1951  0760  3422               	retlw	34	;'"'
  1952  0761  340D               	retlw	13
  1953  0762  340A               	retlw	10
  1954  0763  3400               	retlw	0
  1955                           
  1956                           	psect	stringtext21
  1957  0764                     __pstringtext21:	
  1958  0764                     STR_11:	
  1959  0764  3422               	retlw	34	;'"'
  1960  0765  342C               	retlw	44	;','
  1961  0766  3422               	retlw	34	;'"'
  1962  0767  3400               	retlw	0
  1963                           
  1964                           	psect	stringtext22
  1965  0770                     __pstringtext22:	
  1966  0770                     STR_23:	
  1967  0770  3443               	retlw	67	;'C'
  1968  0771  3448               	retlw	72	;'H'
  1969  0772  3400               	retlw	0
  1970                           
  1971                           	psect	stringtext23
  1972  0773                     __pstringtext23:	
  1973  0773                     STR_24:	
  1974  0773  3443               	retlw	67	;'C'
  1975  0774  344C               	retlw	76	;'L'
  1976  0775  3400               	retlw	0
  1977                           
  1978                           	psect	stringtext24
  1979  0782                     __pstringtext24:	
  1980  0782                     STR_17:	
  1981  0782  342C               	retlw	44	;','
  1982  0783  3400               	retlw	0
  1983                           
  1984                           	psect	stringtext25
  1985  0784                     __pstringtext25:	
  1986  0784                     STR_15:	
  1987  0784  343A               	retlw	58	;':'
  1988  0785  3400               	retlw	0
  1989                           
  1990                           	psect	stringtext26
  1991  0000                     __pstringtext26:	
  1992  0761                     
  1993                           ; #config settings
  1994  0000                     
  1995                           	psect	cinit
  1996  003F                     start_initialization:	
  1997  003F                     __initialization:	
  1998  003F  304D               	movlw	low __pbssBANK0
  1999                           
  2000                           ; Clear objects allocated to COMMON
  2001  0040  01FA               	clrf	__pbssCOMMON& (0+127)
  2002  0041  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  2003                           
  2004                           ; Clear objects allocated to BANK0
  2005  0042  0084               	movwf	4
  2006  0043  3000               	movlw	high __pbssBANK0
  2007  0044  0085               	movwf	5
  2008  0045  3020               	movlw	32
  2009  0046  2729               	fcall	clear_ram0
  2010                           
  2011                           ; Clear objects allocated to BANK1
  2012  0047  30A0               	movlw	low __pbssBANK1
  2013  0048  0084               	movwf	4
  2014  0049  3000               	movlw	high __pbssBANK1
  2015  004A  0085               	movwf	5
  2016  004B  3020               	movlw	32
  2017  004C  2729               	fcall	clear_ram0
  2018  004D                     end_of_initialization:	
  2019                           ;End of C runtime variable initialization code
  2020                           
  2021  004D                     __end_of__initialization:	
  2022  004D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2023  004E  0020               	movlb	0
  2024  004F  2C69               	ljmp	_main	;jump to C main() function
  2025                           
  2026                           	psect	bssCOMMON
  2027  007A                     __pbssCOMMON:	
  2028  007A                     _eusartTxBufferRemaining:	
  2029  007A                     	ds	1
  2030  007B                     _eusartTxHead:	
  2031  007B                     	ds	1
  2032                           
  2033                           	psect	bssBANK0
  2034  004D                     __pbssBANK0:	
  2035  004D                     _eusartTxBuffer:	
  2036  004D                     	ds	8
  2037  0055                     _ESP_external_message_handler:	
  2038  0055                     	ds	2
  2039  0057                     _TMR1_InterruptHandler:	
  2040  0057                     	ds	2
  2041  0059                     _timer1ReloadVal:	
  2042  0059                     	ds	2
  2043  005B                     _ADC_value:	
  2044  005B                     	ds	2
  2045  005D                     _EUSART_RxDefaultInterruptHandler:	
  2046  005D                     	ds	2
  2047  005F                     _EUSART_TxDefaultInterruptHandler:	
  2048  005F                     	ds	2
  2049  0061                     _IOC_value:	
  2050  0061                     	ds	1
  2051  0062                     _TMR1_state:	
  2052  0062                     	ds	1
  2053  0063                     _message_format:	
  2054  0063                     	ds	1
  2055  0064                     _esp_channel:	
  2056  0064                     	ds	1
  2057  0065                     _esp_read_data_index:	
  2058  0065                     	ds	1
  2059  0066                     _IOC_state:	
  2060  0066                     	ds	1
  2061  0067                     _ESP_wait_exception:	
  2062  0067                     	ds	1
  2063  0068                     _eusartRxCount:	
  2064  0068                     	ds	1
  2065  0069                     _eusartRxTail:	
  2066  0069                     	ds	1
  2067  006A                     _eusartRxHead:	
  2068  006A                     	ds	1
  2069  006B                     _eusartTxTail:	
  2070  006B                     	ds	1
  2071  006C                     _ADC_state:	
  2072  006C                     	ds	1
  2073                           
  2074                           	psect	bssBANK1
  2075  00A0                     __pbssBANK1:	
  2076  00A0                     _eusartRxBuffer:	
  2077  00A0                     	ds	8
  2078  00A8                     _esp_read_data:	
  2079  00A8                     	ds	24
  2080                           
  2081                           	psect	clrtext
  2082  0729                     clear_ram0:	
  2083                           ;	Called with FSR0 containing the base address, and
  2084                           ;	WREG with the size to clear
  2085                           
  2086  0729  0064               	clrwdt	;clear the watchdog before getting into this loop
  2087  072A                     clrloop0:	
  2088  072A  0180               	clrf	0	;clear RAM location pointed to by FSR
  2089  072B  3101               	addfsr 0,1
  2090  072C  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2091  072D  2F2A               	goto	clrloop0	;have we reached the end yet?
  2092  072E  3400               	retlw	0	;all done for this memory range, return
  2093                           
  2094                           	psect	cstackCOMMON
  2095  0070                     __pcstackCOMMON:	
  2096  0070                     ?_PIN_MANAGER_IOC:	
  2097  0070                     ??_PIN_MANAGER_IOC:	
  2098                           ; 1 bytes @ 0x0
  2099                           
  2100  0070                     ?_TMR1_ISR:	
  2101                           ; 1 bytes @ 0x0
  2102                           
  2103  0070                     ?_EUSART_Receive_ISR:	
  2104                           ; 1 bytes @ 0x0
  2105                           
  2106  0070                     ??_EUSART_Receive_ISR:	
  2107                           ; 1 bytes @ 0x0
  2108                           
  2109  0070                     ?_EUSART_Transmit_ISR:	
  2110                           ; 1 bytes @ 0x0
  2111                           
  2112  0070                     ??_EUSART_Transmit_ISR:	
  2113                           ; 1 bytes @ 0x0
  2114                           
  2115  0070                     ?_PIN_MANAGER_Initialize:	
  2116                           ; 1 bytes @ 0x0
  2117                           
  2118  0070                     ?_OSCILLATOR_Initialize:	
  2119                           ; 1 bytes @ 0x0
  2120                           
  2121  0070                     ?_WDT_Initialize:	
  2122                           ; 1 bytes @ 0x0
  2123                           
  2124  0070                     ?_TMR1_Initialize:	
  2125                           ; 1 bytes @ 0x0
  2126                           
  2127  0070                     ?_TMR1_DefaultInterruptHandler:	
  2128                           ; 1 bytes @ 0x0
  2129                           
  2130  0070                     ??_TMR1_DefaultInterruptHandler:	
  2131                           ; 1 bytes @ 0x0
  2132                           
  2133  0070                     ?_IOCAF4_DefaultInterruptHandler:	
  2134                           ; 1 bytes @ 0x0
  2135                           
  2136  0070                     ??_IOCAF4_DefaultInterruptHandler:	
  2137                           ; 1 bytes @ 0x0
  2138                           
  2139  0070                     ?_IOCAF4_ISR:	
  2140                           ; 1 bytes @ 0x0
  2141                           
  2142  0070                     ??_IOCAF4_ISR:	
  2143                           ; 1 bytes @ 0x0
  2144                           
  2145  0070                     ?_ESP_initialize:	
  2146                           ; 1 bytes @ 0x0
  2147                           
  2148  0070                     ?_logger_initialize:	
  2149                           ; 1 bytes @ 0x0
  2150                           
  2151  0070                     ?_config_wifi_settings:	
  2152                           ; 1 bytes @ 0x0
  2153                           
  2154  0070                     ?_read_wifi_settings:	
  2155                           ; 1 bytes @ 0x0
  2156                           
  2157  0070                     ?_ESP_message_handler:	
  2158                           ; 1 bytes @ 0x0
  2159                           
  2160  0070                     ?_read_analog:	
  2161                           ; 1 bytes @ 0x0
  2162                           
  2163  0070                     ?_process_ioc:	
  2164                           ; 1 bytes @ 0x0
  2165                           
  2166  0070                     ?_ESP_process_message:	
  2167                           ; 1 bytes @ 0x0
  2168                           
  2169  0070                     ?_ESP_wait_for:	
  2170                           ; 1 bytes @ 0x0
  2171                           
  2172  0070                     ?__TMR1_Ready:	
  2173                           ; 1 bytes @ 0x0
  2174                           
  2175  0070                     ??__TMR1_Ready:	
  2176                           ; 1 bytes @ 0x0
  2177                           
  2178  0070                     ?__IOC_Ready:	
  2179                           ; 1 bytes @ 0x0
  2180                           
  2181  0070                     ??__IOC_Ready:	
  2182                           ; 1 bytes @ 0x0
  2183                           
  2184  0070                     ?_toggle_format:	
  2185                           ; 1 bytes @ 0x0
  2186                           
  2187  0070                     ?_DATAEE_ReadByte:	
  2188                           ; 1 bytes @ 0x0
  2189                           
  2190  0070                     ?_ADC_Initialize:	
  2191                           ; 1 bytes @ 0x0
  2192                           
  2193  0070                     ?_ADC_SelectChannel:	
  2194                           ; 1 bytes @ 0x0
  2195                           
  2196  0070                     ?_ADC_StartConversion:	
  2197                           ; 1 bytes @ 0x0
  2198                           
  2199  0070                     ?_ADC_ISR:	
  2200                           ; 1 bytes @ 0x0
  2201                           
  2202  0070                     ??_ADC_ISR:	
  2203                           ; 1 bytes @ 0x0
  2204                           
  2205  0070                     ?_INTERRUPT_InterruptManager:	
  2206                           ; 1 bytes @ 0x0
  2207                           
  2208  0070                     ?_EUSART_Initialize:	
  2209                           ; 1 bytes @ 0x0
  2210                           
  2211  0070                     ?_EUSART_is_tx_ready:	
  2212                           ; 1 bytes @ 0x0
  2213                           
  2214  0070                     ?_EUSART_is_rx_ready:	
  2215                           ; 1 bytes @ 0x0
  2216                           
  2217  0070                     ?_EUSART_Read:	
  2218                           ; 1 bytes @ 0x0
  2219                           
  2220  0070                     ?_EUSART_Write:	
  2221                           ; 1 bytes @ 0x0
  2222                           
  2223  0070                     ?_SYSTEM_Initialize:	
  2224                           ; 1 bytes @ 0x0
  2225                           
  2226  0070                     ?_TMR1_StartTimer:	
  2227                           ; 1 bytes @ 0x0
  2228                           
  2229  0070                     ?_TMR1_StopTimer:	
  2230                           ; 1 bytes @ 0x0
  2231                           
  2232  0070                     ?_TMR1_WriteTimer:	
  2233                           ; 1 bytes @ 0x0
  2234                           
  2235  0070                     ?_main:	
  2236                           ; 1 bytes @ 0x0
  2237                           
  2238  0070                     ?_ESP_read:	
  2239                           ; 1 bytes @ 0x0
  2240                           
  2241  0070                     ?_ESP_process_rx_data:	
  2242                           ; 1 bytes @ 0x0
  2243                           
  2244  0070                     ?i1_ADC_StartConversion:	
  2245                           ; 1 bytes @ 0x0
  2246                           
  2247  0070                     ??i1_ADC_StartConversion:	
  2248                           ; 1 bytes @ 0x0
  2249                           
  2250  0070                     ?_ADC_GetConversionResult:	
  2251                           ; 1 bytes @ 0x0
  2252                           
  2253  0070                     TMR1_WriteTimer@timerVal:	
  2254                           ; 2 bytes @ 0x0
  2255                           
  2256                           
  2257                           ; 2 bytes @ 0x0
  2258  0070                     	ds	2
  2259  0072                     ??_TMR1_ISR:	
  2260  0072                     ?_EUSART_SetRxInterruptHandler:	
  2261                           ; 1 bytes @ 0x2
  2262                           
  2263  0072                     ?_EUSART_SetTxInterruptHandler:	
  2264                           ; 1 bytes @ 0x2
  2265                           
  2266  0072                     ??_OSCILLATOR_Initialize:	
  2267                           ; 1 bytes @ 0x2
  2268                           
  2269  0072                     ??_WDT_Initialize:	
  2270                           ; 1 bytes @ 0x2
  2271                           
  2272  0072                     ?_TMR1_SetInterruptHandler:	
  2273                           ; 1 bytes @ 0x2
  2274                           
  2275  0072                     ?_IOCAF4_SetInterruptHandler:	
  2276                           ; 1 bytes @ 0x2
  2277                           
  2278  0072                     ?_ESP_Set_application_handler:	
  2279                           ; 1 bytes @ 0x2
  2280                           
  2281  0072                     ?_DATAEE_WriteByte:	
  2282                           ; 1 bytes @ 0x2
  2283                           
  2284  0072                     ??_DATAEE_ReadByte:	
  2285                           ; 1 bytes @ 0x2
  2286                           
  2287  0072                     ?_strchr:	
  2288                           ; 1 bytes @ 0x2
  2289                           
  2290  0072                     ??_ADC_Initialize:	
  2291                           ; 1 bytes @ 0x2
  2292                           
  2293  0072                     ??_ADC_SelectChannel:	
  2294                           ; 1 bytes @ 0x2
  2295                           
  2296  0072                     ??_ADC_StartConversion:	
  2297                           ; 1 bytes @ 0x2
  2298                           
  2299  0072                     ??_ADC_GetConversionResult:	
  2300                           ; 1 bytes @ 0x2
  2301                           
  2302  0072                     ??_INTERRUPT_InterruptManager:	
  2303                           ; 1 bytes @ 0x2
  2304                           
  2305  0072                     ??_EUSART_is_tx_ready:	
  2306                           ; 1 bytes @ 0x2
  2307                           
  2308  0072                     ??_EUSART_is_rx_ready:	
  2309                           ; 1 bytes @ 0x2
  2310                           
  2311  0072                     ??_EUSART_Read:	
  2312                           ; 1 bytes @ 0x2
  2313                           
  2314  0072                     ??_EUSART_Write:	
  2315                           ; 1 bytes @ 0x2
  2316                           
  2317  0072                     ??_TMR1_StartTimer:	
  2318                           ; 1 bytes @ 0x2
  2319                           
  2320  0072                     ??_TMR1_StopTimer:	
  2321                           ; 1 bytes @ 0x2
  2322                           
  2323  0072                     ??_TMR1_WriteTimer:	
  2324                           ; 1 bytes @ 0x2
  2325                           
  2326  0072                     ?___lbmod:	
  2327                           ; 1 bytes @ 0x2
  2328                           
  2329  0072                     ?_strlen:	
  2330                           ; 1 bytes @ 0x2
  2331                           
  2332  0072                     ?_strncmp:	
  2333                           ; 2 bytes @ 0x2
  2334                           
  2335  0072                     ?___awdiv:	
  2336                           ; 2 bytes @ 0x2
  2337                           
  2338  0072                     ?___lwdiv:	
  2339                           ; 2 bytes @ 0x2
  2340                           
  2341  0072                     ?___lwmod:	
  2342                           ; 2 bytes @ 0x2
  2343                           
  2344  0072                     ?___lmul:	
  2345                           ; 2 bytes @ 0x2
  2346                           
  2347  0072                     EUSART_Read@readValue:	
  2348                           ; 4 bytes @ 0x2
  2349                           
  2350  0072                     EUSART_Write@txData:	
  2351                           ; 1 bytes @ 0x2
  2352                           
  2353  0072                     DATAEE_WriteByte@bData:	
  2354                           ; 1 bytes @ 0x2
  2355                           
  2356  0072                     DATAEE_ReadByte@bAdd:	
  2357                           ; 1 bytes @ 0x2
  2358                           
  2359  0072                     ___lbmod@divisor:	
  2360                           ; 1 bytes @ 0x2
  2361                           
  2362  0072                     EUSART_SetTxInterruptHandler@interruptHandler:	
  2363                           ; 1 bytes @ 0x2
  2364                           
  2365  0072                     EUSART_SetRxInterruptHandler@interruptHandler:	
  2366                           ; 2 bytes @ 0x2
  2367                           
  2368  0072                     TMR1_SetInterruptHandler@InterruptHandler:	
  2369                           ; 2 bytes @ 0x2
  2370                           
  2371  0072                     IOCAF4_SetInterruptHandler@InterruptHandler:	
  2372                           ; 2 bytes @ 0x2
  2373                           
  2374  0072                     ESP_Set_application_handler@applicationHandler:	
  2375                           ; 2 bytes @ 0x2
  2376                           
  2377  0072                     ___awdiv@divisor:	
  2378                           ; 2 bytes @ 0x2
  2379                           
  2380  0072                     ___lwdiv@divisor:	
  2381                           ; 2 bytes @ 0x2
  2382                           
  2383  0072                     ___lwmod@divisor:	
  2384                           ; 2 bytes @ 0x2
  2385                           
  2386  0072                     strchr@c:	
  2387                           ; 2 bytes @ 0x2
  2388                           
  2389  0072                     strlen@s:	
  2390                           ; 2 bytes @ 0x2
  2391                           
  2392  0072                     strncmp@_r:	
  2393                           ; 2 bytes @ 0x2
  2394                           
  2395  0072                     ___lmul@multiplier:	
  2396                           ; 2 bytes @ 0x2
  2397                           
  2398                           
  2399                           ; 4 bytes @ 0x2
  2400  0072                     	ds	1
  2401  0073                     ??_DATAEE_WriteByte:	
  2402  0073                     ?__puts:	
  2403                           ; 1 bytes @ 0x3
  2404                           
  2405  0073                     ?_write:	
  2406                           ; 1 bytes @ 0x3
  2407                           
  2408  0073                     ?__gets:	
  2409                           ; 1 bytes @ 0x3
  2410                           
  2411  0073                     ??___lbmod:	
  2412                           ; 1 bytes @ 0x3
  2413                           
  2414  0073                     ADC_SelectChannel@channel:	
  2415                           ; 1 bytes @ 0x3
  2416                           
  2417  0073                     __gets@length:	
  2418                           ; 1 bytes @ 0x3
  2419                           
  2420  0073                     DATAEE_WriteByte@bAdd:	
  2421                           ; 1 bytes @ 0x3
  2422                           
  2423  0073                     __puts@pt:	
  2424                           ; 1 bytes @ 0x3
  2425                           
  2426  0073                     write@pt:	
  2427                           ; 2 bytes @ 0x3
  2428                           
  2429                           
  2430                           ; 2 bytes @ 0x3
  2431  0073                     	ds	1
  2432  0074                     ??_EUSART_SetRxInterruptHandler:	
  2433  0074                     ??_EUSART_SetTxInterruptHandler:	
  2434                           ; 1 bytes @ 0x4
  2435                           
  2436  0074                     ??_PIN_MANAGER_Initialize:	
  2437                           ; 1 bytes @ 0x4
  2438                           
  2439  0074                     ??_TMR1_Initialize:	
  2440                           ; 1 bytes @ 0x4
  2441                           
  2442  0074                     ??_TMR1_SetInterruptHandler:	
  2443                           ; 1 bytes @ 0x4
  2444                           
  2445  0074                     ??_IOCAF4_SetInterruptHandler:	
  2446                           ; 1 bytes @ 0x4
  2447                           
  2448  0074                     ??_ESP_initialize:	
  2449                           ; 1 bytes @ 0x4
  2450                           
  2451  0074                     ??_logger_initialize:	
  2452                           ; 1 bytes @ 0x4
  2453                           
  2454  0074                     ??_ESP_Set_application_handler:	
  2455                           ; 1 bytes @ 0x4
  2456                           
  2457  0074                     ??_strlen:	
  2458                           ; 1 bytes @ 0x4
  2459                           
  2460  0074                     ??_strchr:	
  2461                           ; 1 bytes @ 0x4
  2462                           
  2463  0074                     ??_EUSART_Initialize:	
  2464                           ; 1 bytes @ 0x4
  2465                           
  2466  0074                     ??_SYSTEM_Initialize:	
  2467                           ; 1 bytes @ 0x4
  2468                           
  2469  0074                     ??__gets:	
  2470                           ; 1 bytes @ 0x4
  2471                           
  2472  0074                     DATAEE_WriteByte@GIEBitValue:	
  2473                           ; 1 bytes @ 0x4
  2474                           
  2475  0074                     ___lbmod@dividend:	
  2476                           ; 1 bytes @ 0x4
  2477                           
  2478  0074                     strchr@s:	
  2479                           ; 1 bytes @ 0x4
  2480                           
  2481  0074                     ___awdiv@dividend:	
  2482                           ; 1 bytes @ 0x4
  2483                           
  2484  0074                     ___lwdiv@dividend:	
  2485                           ; 2 bytes @ 0x4
  2486                           
  2487  0074                     ___lwmod@dividend:	
  2488                           ; 2 bytes @ 0x4
  2489                           
  2490  0074                     strncmp@n:	
  2491                           ; 2 bytes @ 0x4
  2492                           
  2493                           
  2494                           ; 2 bytes @ 0x4
  2495  0074                     	ds	1
  2496  0075                     ??__puts:	
  2497  0075                     write@lenght:	
  2498                           ; 1 bytes @ 0x5
  2499                           
  2500  0075                     ___lbmod@counter:	
  2501                           ; 1 bytes @ 0x5
  2502                           
  2503  0075                     strlen@a:	
  2504                           ; 1 bytes @ 0x5
  2505                           
  2506                           
  2507                           ; 2 bytes @ 0x5
  2508  0075                     	ds	1
  2509  0076                     ??_strncmp:	
  2510  0076                     ??_write:	
  2511                           ; 1 bytes @ 0x6
  2512                           
  2513  0076                     ??___awdiv:	
  2514                           ; 1 bytes @ 0x6
  2515                           
  2516  0076                     ??___lwdiv:	
  2517                           ; 1 bytes @ 0x6
  2518                           
  2519  0076                     ??___lwmod:	
  2520                           ; 1 bytes @ 0x6
  2521                           
  2522  0076                     __gets@pt:	
  2523                           ; 1 bytes @ 0x6
  2524                           
  2525  0076                     ___awdiv@counter:	
  2526                           ; 1 bytes @ 0x6
  2527                           
  2528  0076                     ___lbmod@rem:	
  2529                           ; 1 bytes @ 0x6
  2530                           
  2531  0076                     ___lwmod@counter:	
  2532                           ; 1 bytes @ 0x6
  2533                           
  2534  0076                     ___lwdiv@quotient:	
  2535                           ; 1 bytes @ 0x6
  2536                           
  2537  0076                     ___lmul@multiplicand:	
  2538                           ; 2 bytes @ 0x6
  2539                           
  2540                           
  2541                           ; 4 bytes @ 0x6
  2542  0076                     	ds	1
  2543  0077                     ??_strstr:	
  2544  0077                     __gets@index:	
  2545                           ; 1 bytes @ 0x7
  2546                           
  2547  0077                     ___awdiv@sign:	
  2548                           ; 1 bytes @ 0x7
  2549                           
  2550  0077                     strstr@nl:	
  2551                           ; 1 bytes @ 0x7
  2552                           
  2553                           
  2554                           ; 2 bytes @ 0x7
  2555  0077                     	ds	1
  2556  0078                     __puts@index:	
  2557  0078                     write@i:	
  2558                           ; 1 bytes @ 0x8
  2559                           
  2560  0078                     ___lwdiv@counter:	
  2561                           ; 1 bytes @ 0x8
  2562                           
  2563  0078                     ___awdiv@quotient:	
  2564                           ; 1 bytes @ 0x8
  2565                           
  2566                           
  2567                           ; 2 bytes @ 0x8
  2568  0078                     	ds	1
  2569  0079                     ??_config_wifi_settings:	
  2570  0079                     ??__sprintf:	
  2571                           ; 1 bytes @ 0x9
  2572                           
  2573  0079                     strstr@h:	
  2574                           ; 1 bytes @ 0x9
  2575                           
  2576                           
  2577                           ; 1 bytes @ 0x9
  2578  0079                     	ds	1
  2579  007A                     ??_read_wifi_settings:	
  2580  007A                     ??_process_ioc:	
  2581                           ; 1 bytes @ 0xA
  2582                           
  2583  007A                     ??_ESP_default_application_handler:	
  2584                           ; 1 bytes @ 0xA
  2585                           
  2586  007A                     ??_ESP_process_message:	
  2587                           ; 1 bytes @ 0xA
  2588                           
  2589  007A                     ??_ESP_wait_for:	
  2590                           ; 1 bytes @ 0xA
  2591                           
  2592  007A                     ??_toggle_format:	
  2593                           ; 1 bytes @ 0xA
  2594                           
  2595  007A                     ??_main:	
  2596                           ; 1 bytes @ 0xA
  2597                           
  2598  007A                     ??_ESP_process_rx_data:	
  2599                           ; 1 bytes @ 0xA
  2600                           
  2601  007A                     ??_ESP_write:	
  2602                           ; 1 bytes @ 0xA
  2603                           
  2604  007A                     ??___lmul:	
  2605                           ; 1 bytes @ 0xA
  2606                           
  2607                           
  2608                           	psect	cstackBANK0
  2609  0020                     __pcstackBANK0:	
  2610                           ; 1 bytes @ 0xA
  2611                           
  2612  0020                     ?__sprintf:	
  2613  0020                     strncmp@_l:	
  2614                           ; 1 bytes @ 0x0
  2615                           
  2616  0020                     __sprintf@val:	
  2617                           ; 1 bytes @ 0x0
  2618                           
  2619  0020                     ___lmul@product:	
  2620                           ; 2 bytes @ 0x0
  2621                           
  2622  0020                     config_wifi_settings@line:	
  2623                           ; 4 bytes @ 0x0
  2624                           
  2625                           
  2626                           ; 16 bytes @ 0x0
  2627  0020                     	ds	1
  2628  0021                     strncmp@r:	
  2629                           
  2630                           ; 2 bytes @ 0x1
  2631  0021                     	ds	1
  2632  0022                     __sprintf@aux:	
  2633                           
  2634                           ; 2 bytes @ 0x2
  2635  0022                     	ds	1
  2636  0023                     strncmp@l:	
  2637                           
  2638                           ; 1 bytes @ 0x3
  2639  0023                     	ds	1
  2640  0024                     ?_strstr:	
  2641  0024                     __sprintf@mess:	
  2642                           ; 1 bytes @ 0x4
  2643                           
  2644  0024                     strstr@n:	
  2645                           ; 1 bytes @ 0x4
  2646                           
  2647                           
  2648                           ; 2 bytes @ 0x4
  2649  0024                     	ds	2
  2650  0026                     ESP_process_message@aux:	
  2651                           
  2652                           ; 1 bytes @ 0x6
  2653  0026                     	ds	1
  2654  0027                     ??_ESP_read:	
  2655                           
  2656                           ; 1 bytes @ 0x7
  2657  0027                     	ds	1
  2658  0028                     ESP_read@ret:	
  2659                           
  2660                           ; 1 bytes @ 0x8
  2661  0028                     	ds	1
  2662  0029                     ESP_wait_for@esp_mess:	
  2663                           
  2664                           ; 1 bytes @ 0x9
  2665  0029                     	ds	1
  2666  002A                     ESP_wait_for@ret:	
  2667                           
  2668                           ; 1 bytes @ 0xA
  2669  002A                     	ds	1
  2670  002B                     ?_ESP_config:	
  2671  002B                     ?_ESP_write:	
  2672                           ; 1 bytes @ 0xB
  2673                           
  2674  002B                     ESP_config@len_wifi:	
  2675                           ; 1 bytes @ 0xB
  2676                           
  2677  002B                     ESP_write@pt:	
  2678                           ; 1 bytes @ 0xB
  2679                           
  2680                           
  2681                           ; 2 bytes @ 0xB
  2682  002B                     	ds	1
  2683  002C                     ESP_config@pass:	
  2684                           
  2685                           ; 1 bytes @ 0xC
  2686  002C                     	ds	1
  2687  002D                     ESP_config@len_pass:	
  2688  002D                     ESP_write@length:	
  2689                           ; 1 bytes @ 0xD
  2690                           
  2691                           
  2692                           ; 1 bytes @ 0xD
  2693  002D                     	ds	1
  2694  002E                     ??_ESP_config:	
  2695  002E                     ESP_write@res:	
  2696                           ; 1 bytes @ 0xE
  2697                           
  2698                           
  2699                           ; 1 bytes @ 0xE
  2700  002E                     	ds	1
  2701  002F                     ESP_write@aux:	
  2702                           
  2703                           ; 1 bytes @ 0xF
  2704  002F                     	ds	1
  2705  0030                     ??_read_analog:	
  2706  0030                     ?_process_message:	
  2707                           ; 1 bytes @ 0x10
  2708                           
  2709  0030                     ?_ESP_default_application_handler:	
  2710                           ; 1 bytes @ 0x10
  2711                           
  2712  0030                     ESP_config@wifi:	
  2713                           ; 1 bytes @ 0x10
  2714                           
  2715  0030                     ESP_default_application_handler@data:	
  2716                           ; 1 bytes @ 0x10
  2717                           
  2718  0030                     process_message@message:	
  2719                           ; 1 bytes @ 0x10
  2720                           
  2721  0030                     config_wifi_settings@i:	
  2722                           ; 1 bytes @ 0x10
  2723                           
  2724                           
  2725                           ; 1 bytes @ 0x10
  2726  0030                     	ds	1
  2727  0031                     ??_process_message:	
  2728  0031                     config_wifi_settings@address:	
  2729                           ; 1 bytes @ 0x11
  2730                           
  2731  0031                     read_wifi_settings@pass:	
  2732                           ; 1 bytes @ 0x11
  2733                           
  2734                           
  2735                           ; 14 bytes @ 0x11
  2736  0031                     	ds	1
  2737  0032                     config_wifi_settings@len:	
  2738                           
  2739                           ; 1 bytes @ 0x12
  2740  0032                     	ds	1
  2741  0033                     ESP_process_rx_data@index:	
  2742                           
  2743                           ; 1 bytes @ 0x13
  2744  0033                     	ds	1
  2745  0034                     ESP_process_rx_data@aux:	
  2746  0034                     read_analog@aux1:	
  2747                           ; 1 bytes @ 0x14
  2748                           
  2749                           
  2750                           ; 4 bytes @ 0x14
  2751  0034                     	ds	1
  2752  0035                     ??_ESP_message_handler:	
  2753                           
  2754                           ; 1 bytes @ 0x15
  2755  0035                     	ds	2
  2756  0037                     ESP_message_handler@ret:	
  2757                           
  2758                           ; 1 bytes @ 0x17
  2759  0037                     	ds	1
  2760  0038                     read_analog@mess:	
  2761                           
  2762                           ; 6 bytes @ 0x18
  2763  0038                     	ds	6
  2764  003E                     read_analog@adc_val:	
  2765                           
  2766                           ; 2 bytes @ 0x1E
  2767  003E                     	ds	1
  2768  003F                     read_wifi_settings@wifi:	
  2769                           
  2770                           ; 10 bytes @ 0x1F
  2771  003F                     	ds	10
  2772  0049                     read_wifi_settings@len_wifi:	
  2773                           
  2774                           ; 1 bytes @ 0x29
  2775  0049                     	ds	1
  2776  004A                     read_wifi_settings@len_pass:	
  2777                           
  2778                           ; 1 bytes @ 0x2A
  2779  004A                     	ds	1
  2780  004B                     read_wifi_settings@i:	
  2781                           
  2782                           ; 1 bytes @ 0x2B
  2783  004B                     	ds	1
  2784  004C                     read_wifi_settings@add:	
  2785                           
  2786                           ; 1 bytes @ 0x2C
  2787  004C                     	ds	1
  2788                           
  2789                           	psect	maintext
  2790  0469                     __pmaintext:	
  2791 ;;
  2792 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2793 ;;
  2794 ;; *************** function _main *****************
  2795 ;; Defined at:
  2796 ;;		line 52 in file "main.c"
  2797 ;; Parameters:    Size  Location     Type
  2798 ;;		None
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;		None
  2801 ;; Return value:  Size  Location     Type
  2802 ;;                  1    wreg      void 
  2803 ;; Registers used:
  2804 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2805 ;; Tracked objects:
  2806 ;;		On entry : B1F/0
  2807 ;;		On exit  : 1F/0
  2808 ;;		Unchanged: 0/0
  2809 ;; Data sizes:     COMMON   BANK0   BANK1
  2810 ;;      Params:         0       0       0
  2811 ;;      Locals:         0       0       0
  2812 ;;      Temps:          0       0       0
  2813 ;;      Totals:         0       0       0
  2814 ;;Total ram usage:        0 bytes
  2815 ;; Hardware stack levels required when called:   14
  2816 ;; This function calls:
  2817 ;;		_ESP_initialize
  2818 ;;		_ESP_message_handler
  2819 ;;		_EUSART_is_rx_ready
  2820 ;;		_SYSTEM_Initialize
  2821 ;;		_config_wifi_settings
  2822 ;;		_logger_initialize
  2823 ;;		_process_ioc
  2824 ;;		_process_message
  2825 ;;		_read_analog
  2826 ;;		_read_wifi_settings
  2827 ;; This function is called by:
  2828 ;;		Startup code after reset
  2829 ;; This function uses a non-reentrant model
  2830 ;;
  2831                           
  2832                           
  2833                           ;psect for function _main
  2834  0469                     _main:	
  2835                           
  2836                           ;main.c: 56:     SYSTEM_Initialize();
  2837                           
  2838                           ;incstack = 0
  2839                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2840  0469  272F               	fcall	_SYSTEM_Initialize
  2841                           
  2842                           ;main.c: 59:     ESP_initialize();
  2843  046A  26FF               	fcall	_ESP_initialize
  2844                           
  2845                           ;main.c: 62:     logger_initialize();
  2846  046B  24F3               	fcall	_logger_initialize
  2847                           
  2848                           ;main.c: 67:     (INTCONbits.GIE = 1);
  2849  046C  178B               	bsf	11,7	;volatile
  2850                           
  2851                           ;main.c: 70:     (INTCONbits.PEIE = 1);
  2852  046D  170B               	bsf	11,6	;volatile
  2853                           
  2854                           ;main.c: 78:     if (!PORTAbits.RA4) {
  2855  046E  1A0C               	btfsc	12,4	;volatile
  2856  046F  2C71               	goto	l369
  2857                           
  2858                           ;main.c: 79:         config_wifi_settings();
  2859  0470  20AC               	fcall	_config_wifi_settings
  2860  0471                     l369:	
  2861                           ;main.c: 80:     }
  2862                           
  2863                           
  2864                           ;main.c: 82:     read_wifi_settings();
  2865  0471  22EE               	fcall	_read_wifi_settings
  2866  0472                     l3587:	
  2867                           
  2868                           ;main.c: 88:     {;main.c: 91:          if (EUSART_is_rx_ready()) {
  2869  0472  2776               	fcall	_EUSART_is_rx_ready
  2870  0473  3A00               	xorlw	0
  2871  0474  1903               	skipnz
  2872  0475  2C77               	goto	l3591
  2873                           
  2874                           ;main.c: 95:                 ESP_message_handler();
  2875  0476  23E6               	fcall	_ESP_message_handler
  2876  0477                     l3591:	
  2877                           
  2878                           ;main.c: 99:           if (ADC_state == ADC_READY) {
  2879  0477  0020               	movlb	0	; select bank0
  2880  0478  0B6C               	decfsz	_ADC_state,w	;volatile
  2881  0479  2C7B               	goto	l3595
  2882                           
  2883                           ;main.c: 100:             read_analog();
  2884  047A  2154               	fcall	_read_analog
  2885  047B                     l3595:	
  2886                           
  2887                           ;main.c: 104:         if (ESP_wait_exception) {
  2888  047B  0867               	movf	_ESP_wait_exception,w	;volatile
  2889  047C  1903               	btfsc	3,2
  2890  047D  2C82               	goto	l3601
  2891                           
  2892                           ;main.c: 105:             ESP_wait_exception = 0;
  2893  047E  01E7               	clrf	_ESP_wait_exception	;volatile
  2894                           
  2895                           ;main.c: 106:             process_message('S');
  2896  047F  3053               	movlw	83
  2897  0480  00B0               	movwf	process_message@message
  2898  0481  22B4               	fcall	_process_message
  2899  0482                     l3601:	
  2900                           
  2901                           ;main.c: 110:         if (IOC_state == IOC_READY) {
  2902  0482  0020               	movlb	0	; select bank0
  2903  0483  0B66               	decfsz	_IOC_state,w	;volatile
  2904  0484  2C72               	goto	l3587
  2905                           
  2906                           ;main.c: 111:             process_ioc();
  2907  0485  2581               	fcall	_process_ioc
  2908  0486  2C72               	goto	l3587
  2909  0487                     __end_of_main:	
  2910                           
  2911                           	psect	text1
  2912  02EE                     __ptext1:	
  2913 ;; *************** function _read_wifi_settings *****************
  2914 ;; Defined at:
  2915 ;;		line 239 in file "logger.c"
  2916 ;; Parameters:    Size  Location     Type
  2917 ;;		None
  2918 ;; Auto vars:     Size  Location     Type
  2919 ;;  pass           14   17[BANK0 ] unsigned char [14]
  2920 ;;  wifi           10   31[BANK0 ] unsigned char [10]
  2921 ;;  add             1   44[BANK0 ] unsigned char 
  2922 ;;  i               1   43[BANK0 ] unsigned char 
  2923 ;;  len_pass        1   42[BANK0 ] unsigned char 
  2924 ;;  len_wifi        1   41[BANK0 ] unsigned char 
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  1    wreg      void 
  2927 ;; Registers used:
  2928 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 1F/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMMON   BANK0   BANK1
  2934 ;;      Params:         0       0       0
  2935 ;;      Locals:         0      28       0
  2936 ;;      Temps:          0       0       0
  2937 ;;      Totals:         0      28       0
  2938 ;;Total ram usage:       28 bytes
  2939 ;; Hardware stack levels used:    1
  2940 ;; Hardware stack levels required when called:   10
  2941 ;; This function calls:
  2942 ;;		_DATAEE_ReadByte
  2943 ;;		_ESP_config
  2944 ;; This function is called by:
  2945 ;;		_main
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           
  2949                           
  2950                           ;psect for function _read_wifi_settings
  2951  02EE                     _read_wifi_settings:	
  2952                           
  2953                           ;logger.c: 241:     unsigned char i,len_wifi,len_pass,add;;logger.c: 244:     add = 0;
  2954                           
  2955                           ;incstack = 0
  2956                           ; Regs used in _read_wifi_settings: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2957  02EE  0020               	movlb	0	; select bank0
  2958  02EF  3000               	movlw	0
  2959  02F0  01CC               	clrf	read_wifi_settings@add
  2960                           
  2961                           ;logger.c: 245:     len_wifi = DATAEE_ReadByte(add);
  2962  02F1  26BE               	fcall	_DATAEE_ReadByte
  2963  02F2  0020               	movlb	0	; select bank0
  2964  02F3  00C9               	movwf	read_wifi_settings@len_wifi
  2965                           
  2966                           ;logger.c: 246:     add++;
  2967  02F4  0ACC               	incf	read_wifi_settings@add,f
  2968                           
  2969                           ;logger.c: 247:     for (i = 0; i < len_wifi; i++) {
  2970  02F5  01CB               	clrf	read_wifi_settings@i
  2971  02F6                     l3509:	
  2972  02F6  0849               	movf	read_wifi_settings@len_wifi,w
  2973  02F7  024B               	subwf	read_wifi_settings@i,w
  2974  02F8  1803               	btfsc	3,0
  2975  02F9  2B02               	goto	l3511
  2976                           
  2977                           ;logger.c: 248:         wifi[i] = DATAEE_ReadByte(add);
  2978  02FA  084B               	movf	read_wifi_settings@i,w
  2979  02FB  3E3F               	addlw	(low (read_wifi_settings@wifi| 0))& (0+255)
  2980  02FC  0086               	movwf	6
  2981  02FD  0187               	clrf	7
  2982  02FE  084C               	movf	read_wifi_settings@add,w
  2983  02FF  26BE               	fcall	_DATAEE_ReadByte
  2984                           
  2985                           ;logger.c: 249:         add++;
  2986                           
  2987                           ;logger.c: 250:     }
  2988  0300  231D               	fcall	PL18	;call to abstracted procedure
  2989  0301  2AF6               	goto	l3509
  2990  0302                     l3511:	
  2991                           
  2992                           ;logger.c: 252:     add = 20;
  2993  0302  3014               	movlw	20
  2994  0303  00CC               	movwf	read_wifi_settings@add
  2995                           
  2996                           ;logger.c: 253:     len_pass = DATAEE_ReadByte(add);
  2997  0304  26BE               	fcall	_DATAEE_ReadByte
  2998  0305  0020               	movlb	0	; select bank0
  2999  0306  00CA               	movwf	read_wifi_settings@len_pass
  3000                           
  3001                           ;logger.c: 254:     add++;
  3002  0307  0ACC               	incf	read_wifi_settings@add,f
  3003                           
  3004                           ;logger.c: 255:     for (i = 0; i < len_pass; i++) {
  3005  0308  01CB               	clrf	read_wifi_settings@i
  3006  0309                     l3525:	
  3007  0309  084A               	movf	read_wifi_settings@len_pass,w
  3008  030A  024B               	subwf	read_wifi_settings@i,w
  3009  030B  1803               	btfsc	3,0
  3010  030C  2B15               	goto	l3527
  3011                           
  3012                           ;logger.c: 256:         pass[i] = DATAEE_ReadByte(add);
  3013  030D  084B               	movf	read_wifi_settings@i,w
  3014  030E  3E31               	addlw	(low (read_wifi_settings@pass| 0))& (0+255)
  3015  030F  0086               	movwf	6
  3016  0310  0187               	clrf	7
  3017  0311  084C               	movf	read_wifi_settings@add,w
  3018  0312  26BE               	fcall	_DATAEE_ReadByte
  3019                           
  3020                           ;logger.c: 257:         add++;
  3021                           
  3022                           ;logger.c: 258:     }
  3023  0313  231D               	fcall	PL18	;call to abstracted procedure
  3024  0314  2B09               	goto	l3525
  3025  0315                     l3527:	
  3026                           
  3027                           ;logger.c: 267:     ESP_config(wifi,len_wifi,pass,len_pass);
  3028  0315  0849               	movf	read_wifi_settings@len_wifi,w
  3029  0316  00AB               	movwf	ESP_config@len_wifi
  3030  0317  3031               	movlw	(low (read_wifi_settings@pass| 0))& (0+255)
  3031  0318  00AC               	movwf	ESP_config@pass
  3032  0319  084A               	movf	read_wifi_settings@len_pass,w
  3033  031A  00AD               	movwf	ESP_config@len_pass
  3034  031B  303F               	movlw	(low (read_wifi_settings@wifi| 0))& (0+255)
  3035  031C  2850               	ljmp	_ESP_config
  3036  031D                     __end_of_read_wifi_settings:	
  3037  031D                     PL18:	
  3038  031D  0081               	movwf	1
  3039  031E  0020               	movlb	0	; select bank0
  3040  031F  0ACC               	incf	read_wifi_settings@add,f
  3041  0320  0ACB               	incf	read_wifi_settings@i,f
  3042  0321  0008               	return
  3043  0322                     __end_ofPL18:	
  3044                           
  3045                           	psect	text2
  3046  0050                     __ptext2:	
  3047 ;; *************** function _ESP_config *****************
  3048 ;; Defined at:
  3049 ;;		line 83 in file "esp1.c"
  3050 ;; Parameters:    Size  Location     Type
  3051 ;;  wifi            1    wreg     PTR unsigned char 
  3052 ;;		 -> read_wifi_settings@wifi(10), 
  3053 ;;  len_wifi        1   11[BANK0 ] unsigned char 
  3054 ;;  pass            1   12[BANK0 ] PTR unsigned char 
  3055 ;;		 -> read_wifi_settings@pass(14), 
  3056 ;;  len_pass        1   13[BANK0 ] unsigned char 
  3057 ;; Auto vars:     Size  Location     Type
  3058 ;;  wifi            1   16[BANK0 ] PTR unsigned char 
  3059 ;;		 -> read_wifi_settings@wifi(10), 
  3060 ;; Return value:  Size  Location     Type
  3061 ;;                  1    wreg      void 
  3062 ;; Registers used:
  3063 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3064 ;; Tracked objects:
  3065 ;;		On entry : 1F/0
  3066 ;;		On exit  : 1F/0
  3067 ;;		Unchanged: 0/0
  3068 ;; Data sizes:     COMMON   BANK0   BANK1
  3069 ;;      Params:         0       3       0
  3070 ;;      Locals:         0       1       0
  3071 ;;      Temps:          0       2       0
  3072 ;;      Totals:         0       6       0
  3073 ;;Total ram usage:        6 bytes
  3074 ;; Hardware stack levels used:    1
  3075 ;; Hardware stack levels required when called:    9
  3076 ;; This function calls:
  3077 ;;		_ESP_wait_for
  3078 ;;		_EUSART_Read
  3079 ;;		_EUSART_is_rx_ready
  3080 ;;		__puts
  3081 ;;		_write
  3082 ;; This function is called by:
  3083 ;;		_read_wifi_settings
  3084 ;; This function uses a non-reentrant model
  3085 ;;
  3086                           
  3087                           
  3088                           ;psect for function _ESP_config
  3089  0050                     _ESP_config:	
  3090                           
  3091                           ;incstack = 0
  3092                           ; Regs used in _ESP_config: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3093                           ;ESP_config@wifi stored from wreg
  3094  0050  00B0               	movwf	ESP_config@wifi
  3095                           
  3096                           ;esp1.c: 83: void ESP_config(unsigned char *wifi, unsigned char len_wifi, unsigned char 
      +                          *pass, unsigned char len_pass);esp1.c: 84: {;esp1.c: 87:     _delay((unsigned long)((250
      +                          )*(32000000/4000.0)));
  3097  0051  300B               	movlw	11
  3098  0052  0020               	movlb	0	; select bank0
  3099  0053  00AF               	movwf	??_ESP_config+1
  3100  0054  3026               	movlw	38
  3101  0055  00AE               	movwf	??_ESP_config
  3102  0056  305D               	movlw	93
  3103  0057                     u2387:	
  3104  0057  0B89               	decfsz	9,f
  3105  0058  2857               	goto	u2387
  3106  0059  0BAE               	decfsz	??_ESP_config,f
  3107  005A  2857               	goto	u2387
  3108  005B  0BAF               	decfsz	??_ESP_config+1,f
  3109  005C  2857               	goto	u2387
  3110  005D  3200               	nop2
  3111                           
  3112                           ;esp1.c: 88:     _delay((unsigned long)((250)*(32000000/4000.0)));
  3113  005E  300B               	movlw	11
  3114  005F  0020               	movlb	0	; select bank0
  3115  0060  00AF               	movwf	??_ESP_config+1
  3116  0061  3026               	movlw	38
  3117  0062  00AE               	movwf	??_ESP_config
  3118  0063  305D               	movlw	93
  3119  0064                     u2397:	
  3120  0064  0B89               	decfsz	9,f
  3121  0065  2864               	goto	u2397
  3122  0066  0BAE               	decfsz	??_ESP_config,f
  3123  0067  2864               	goto	u2397
  3124  0068  0BAF               	decfsz	??_ESP_config+1,f
  3125  0069  2864               	goto	u2397
  3126  006A  3200               	nop2
  3127  006B                     l3465:	
  3128                           ;esp1.c: 89:     while(EUSART_is_rx_ready())
  3129                           
  3130                           
  3131                           ;esp1.c: 89:     while(EUSART_is_rx_ready())
  3132  006B  2776               	fcall	_EUSART_is_rx_ready
  3133  006C  3A00               	xorlw	0
  3134  006D  1903               	btfsc	3,2
  3135  006E  2871               	goto	l3467
  3136                           
  3137                           ;esp1.c: 90:         EUSART_Read();
  3138  006F  2554               	fcall	_EUSART_Read
  3139  0070  286B               	goto	l3465
  3140  0071                     l3467:	
  3141                           
  3142                           ;esp1.c: 92:     _puts("AT\r\n");
  3143  0071  304D               	movlw	low (STR_8| (0+32768))
  3144  0072  00F3               	movwf	__puts@pt
  3145  0073  3087               	movlw	high (STR_8| (0+32768))
  3146  0074  00F4               	movwf	__puts@pt+1
  3147  0075  24D9               	fcall	__puts
  3148                           
  3149                           ;esp1.c: 93:     ESP_wait_for(ESP_OK);
  3150  0076  3002               	movlw	2
  3151  0077  2408               	fcall	_ESP_wait_for
  3152                           
  3153                           ;esp1.c: 96:     _puts("AT+CWMODE=1\r\n");
  3154  0078  304A               	movlw	low (STR_9| (0+32768))
  3155  0079  00F3               	movwf	__puts@pt
  3156  007A  3086               	movlw	high (STR_9| (0+32768))
  3157  007B  00F4               	movwf	__puts@pt+1
  3158  007C  24D9               	fcall	__puts
  3159                           
  3160                           ;esp1.c: 97:     ESP_wait_for(ESP_OK);
  3161  007D  3002               	movlw	2
  3162  007E  2408               	fcall	_ESP_wait_for
  3163                           
  3164                           ;esp1.c: 101:     _puts("AT+CWJAP=\"");
  3165  007F  30B3               	movlw	low (STR_10| (0+32768))
  3166  0080  00F3               	movwf	__puts@pt
  3167  0081  3086               	movlw	high (STR_10| (0+32768))
  3168  0082  00F4               	movwf	__puts@pt+1
  3169  0083  24D9               	fcall	__puts
  3170                           
  3171                           ;esp1.c: 102:     write(wifi,len_wifi);
  3172  0084  0020               	movlb	0	; select bank0
  3173  0085  0830               	movf	ESP_config@wifi,w
  3174  0086  00F3               	movwf	write@pt
  3175  0087  01F4               	clrf	write@pt+1
  3176  0088  082B               	movf	ESP_config@len_wifi,w
  3177  0089  00F5               	movwf	write@lenght
  3178  008A  2524               	fcall	_write
  3179                           
  3180                           ;esp1.c: 103:     _puts("\",\"");
  3181  008B  3064               	movlw	low (STR_11| (0+32768))
  3182  008C  00F3               	movwf	__puts@pt
  3183  008D  3087               	movlw	high (STR_11| (0+32768))
  3184  008E  00F4               	movwf	__puts@pt+1
  3185  008F  24D9               	fcall	__puts
  3186                           
  3187                           ;esp1.c: 104:     write(pass,len_pass);
  3188  0090  0020               	movlb	0	; select bank0
  3189  0091  082C               	movf	ESP_config@pass,w
  3190  0092  00F3               	movwf	write@pt
  3191  0093  01F4               	clrf	write@pt+1
  3192  0094  082D               	movf	ESP_config@len_pass,w
  3193  0095  00F5               	movwf	write@lenght
  3194  0096  2524               	fcall	_write
  3195                           
  3196                           ;esp1.c: 105:     _puts("\"\r\n");
  3197  0097  3060               	movlw	low (STR_12| (0+32768))
  3198  0098  00F3               	movwf	__puts@pt
  3199  0099  3087               	movlw	high (STR_12| (0+32768))
  3200  009A  00F4               	movwf	__puts@pt+1
  3201  009B  24D9               	fcall	__puts
  3202                           
  3203                           ;esp1.c: 107:     ESP_wait_for(ESP_OK);
  3204  009C  3002               	movlw	2
  3205  009D  2408               	fcall	_ESP_wait_for
  3206                           
  3207                           ;esp1.c: 110:     _puts("AT+CIPMUX=1\r\n");
  3208  009E  3058               	movlw	low (STR_13| (0+32768))
  3209  009F  00F3               	movwf	__puts@pt
  3210  00A0  3086               	movlw	high (STR_13| (0+32768))
  3211  00A1  00F4               	movwf	__puts@pt+1
  3212  00A2  24D9               	fcall	__puts
  3213                           
  3214                           ;esp1.c: 111:     ESP_wait_for(ESP_OK);
  3215  00A3  3002               	movlw	2
  3216  00A4  2408               	fcall	_ESP_wait_for
  3217                           
  3218                           ;esp1.c: 114:     _puts("AT+CIPSERVER=1,80\r\n");
  3219  00A5  30EE               	movlw	low (STR_14| (0+32768))
  3220  00A6  00F3               	movwf	__puts@pt
  3221  00A7  3085               	movlw	high (STR_14| (0+32768))
  3222  00A8  00F4               	movwf	__puts@pt+1
  3223  00A9  24D9               	fcall	__puts
  3224                           
  3225                           ;esp1.c: 115:     ESP_wait_for(ESP_OK);
  3226  00AA  3002               	movlw	2
  3227  00AB  2C08               	ljmp	_ESP_wait_for
  3228  00AC                     __end_of_ESP_config:	
  3229                           
  3230                           	psect	text3
  3231  0776                     __ptext3:	
  3232 ;; *************** function _EUSART_is_rx_ready *****************
  3233 ;; Defined at:
  3234 ;;		line 118 in file "mcc_generated_files/eusart.c"
  3235 ;; Parameters:    Size  Location     Type
  3236 ;;		None
  3237 ;; Auto vars:     Size  Location     Type
  3238 ;;		None
  3239 ;; Return value:  Size  Location     Type
  3240 ;;                  1    wreg      unsigned char 
  3241 ;; Registers used:
  3242 ;;		wreg
  3243 ;; Tracked objects:
  3244 ;;		On entry : 0/0
  3245 ;;		On exit  : 1F/0
  3246 ;;		Unchanged: 0/0
  3247 ;; Data sizes:     COMMON   BANK0   BANK1
  3248 ;;      Params:         0       0       0
  3249 ;;      Locals:         0       0       0
  3250 ;;      Temps:          0       0       0
  3251 ;;      Totals:         0       0       0
  3252 ;;Total ram usage:        0 bytes
  3253 ;; Hardware stack levels used:    1
  3254 ;; Hardware stack levels required when called:    4
  3255 ;; This function calls:
  3256 ;;		Nothing
  3257 ;; This function is called by:
  3258 ;;		_main
  3259 ;;		_ESP_config
  3260 ;; This function uses a non-reentrant model
  3261 ;;
  3262                           
  3263                           
  3264                           ;psect for function _EUSART_is_rx_ready
  3265  0776                     _EUSART_is_rx_ready:	
  3266                           
  3267                           ;mcc_generated_files/eusart.c: 120:     return eusartRxCount;
  3268                           
  3269                           ;incstack = 0
  3270                           ; Regs used in _EUSART_is_rx_ready: [wreg]
  3271  0776  0020               	movlb	0	; select bank0
  3272  0777  0868               	movf	_eusartRxCount,w	;volatile
  3273  0778  0008               	return
  3274  0779                     __end_of_EUSART_is_rx_ready:	
  3275                           
  3276                           	psect	text4
  3277  06BE                     __ptext4:	
  3278 ;; *************** function _DATAEE_ReadByte *****************
  3279 ;; Defined at:
  3280 ;;		line 211 in file "mcc_generated_files/memory.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;  bAdd            1    wreg     unsigned char 
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;  bAdd            1    2[COMMON] unsigned char 
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  1    wreg      unsigned char 
  3287 ;; Registers used:
  3288 ;;		wreg
  3289 ;; Tracked objects:
  3290 ;;		On entry : 1F/0
  3291 ;;		On exit  : 1F/3
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMMON   BANK0   BANK1
  3294 ;;      Params:         0       0       0
  3295 ;;      Locals:         1       0       0
  3296 ;;      Temps:          0       0       0
  3297 ;;      Totals:         1       0       0
  3298 ;;Total ram usage:        1 bytes
  3299 ;; Hardware stack levels used:    1
  3300 ;; Hardware stack levels required when called:    4
  3301 ;; This function calls:
  3302 ;;		Nothing
  3303 ;; This function is called by:
  3304 ;;		_read_wifi_settings
  3305 ;; This function uses a non-reentrant model
  3306 ;;
  3307                           
  3308                           
  3309                           ;psect for function _DATAEE_ReadByte
  3310  06BE                     _DATAEE_ReadByte:	
  3311                           
  3312                           ;incstack = 0
  3313                           ; Regs used in _DATAEE_ReadByte: [wreg]
  3314                           ;DATAEE_ReadByte@bAdd stored from wreg
  3315  06BE  00F2               	movwf	DATAEE_ReadByte@bAdd
  3316                           
  3317                           ;mcc_generated_files/memory.c: 211: uint8_t DATAEE_ReadByte(uint8_t bAdd);mcc_generated_
      +                          files/memory.c: 212: {;mcc_generated_files/memory.c: 213:     EEADRL = (uint8_t)(bAdd & 
      +                          0x0ff);
  3318  06BF  0023               	movlb	3	; select bank3
  3319  06C0  0091               	movwf	17	;volatile
  3320                           
  3321                           ;mcc_generated_files/memory.c: 214:     EECON1bits.CFGS = 0;
  3322  06C1  1315               	bcf	21,6	;volsfr
  3323                           
  3324                           ;mcc_generated_files/memory.c: 215:     EECON1bits.EEPGD = 0;
  3325  06C2  1395               	bcf	21,7	;volsfr
  3326                           
  3327                           ;mcc_generated_files/memory.c: 216:     EECON1bits.RD = 1;
  3328  06C3  1415               	bsf	21,0	;volsfr
  3329                           
  3330                           ;mcc_generated_files/memory.c: 217:     __nop();
  3331  06C4  0000               	nop
  3332                           
  3333                           ;mcc_generated_files/memory.c: 218:     __nop();
  3334  06C5  0000               	nop
  3335                           
  3336                           ;mcc_generated_files/memory.c: 220:     return (EEDATL);
  3337  06C6  0023               	movlb	3	; select bank3
  3338  06C7  0813               	movf	19,w	;volatile
  3339  06C8  0008               	return
  3340  06C9                     __end_of_DATAEE_ReadByte:	
  3341                           
  3342                           	psect	text5
  3343  0154                     __ptext5:	
  3344 ;; *************** function _read_analog *****************
  3345 ;; Defined at:
  3346 ;;		line 91 in file "logger.c"
  3347 ;; Parameters:    Size  Location     Type
  3348 ;;		None
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;  mess            6   24[BANK0 ] unsigned char [6]
  3351 ;;  aux1            4   20[BANK0 ] unsigned long 
  3352 ;;  adc_val         2   30[BANK0 ] unsigned short 
  3353 ;; Return value:  Size  Location     Type
  3354 ;;                  1    wreg      void 
  3355 ;; Registers used:
  3356 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3357 ;; Tracked objects:
  3358 ;;		On entry : 1F/0
  3359 ;;		On exit  : 1F/0
  3360 ;;		Unchanged: 0/0
  3361 ;; Data sizes:     COMMON   BANK0   BANK1
  3362 ;;      Params:         0       0       0
  3363 ;;      Locals:         0      12       0
  3364 ;;      Temps:          0       4       0
  3365 ;;      Totals:         0      16       0
  3366 ;;Total ram usage:       16 bytes
  3367 ;; Hardware stack levels used:    1
  3368 ;; Hardware stack levels required when called:   10
  3369 ;; This function calls:
  3370 ;;		_ESP_wait_for
  3371 ;;		_ESP_write
  3372 ;;		___lmul
  3373 ;;		__sprintf
  3374 ;; This function is called by:
  3375 ;;		_main
  3376 ;; This function uses a non-reentrant model
  3377 ;;
  3378                           
  3379                           
  3380                           ;psect for function _read_analog
  3381  0154                     _read_analog:	
  3382                           
  3383                           ;logger.c: 93:     unsigned short adc_val;;logger.c: 95:     unsigned long aux1;;logger.
      +                          c: 96:     unsigned char mess[6];;logger.c: 98:     adc_val = ADC_value;
  3384                           
  3385                           ;incstack = 0
  3386                           ; Regs used in _read_analog: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3387  0154  085C               	movf	_ADC_value+1,w	;volatile
  3388  0155  00BF               	movwf	read_analog@adc_val+1
  3389  0156  085B               	movf	_ADC_value,w	;volatile
  3390  0157  00BE               	movwf	read_analog@adc_val
  3391                           
  3392                           ;logger.c: 99:     ADC_state = ADC_IDLE;
  3393  0158  01EC               	clrf	_ADC_state	;volatile
  3394                           
  3395                           ;logger.c: 101:     if (message_format == MESSAGE_BINARY) {
  3396  0159  0863               	movf	_message_format,w	;volatile
  3397  015A  1D03               	btfss	3,2
  3398  015B  2969               	goto	l3557
  3399                           
  3400                           ;logger.c: 102:         mess[0] = (unsigned char)(adc_val & 0xff);
  3401  015C  083E               	movf	read_analog@adc_val,w
  3402  015D  00B8               	movwf	read_analog@mess
  3403                           
  3404                           ;logger.c: 103:         mess[1] = (unsigned char)((adc_val >> 8) & 0xff);
  3405  015E  083F               	movf	read_analog@adc_val+1,w
  3406  015F  00B9               	movwf	read_analog@mess+1
  3407                           
  3408                           ;logger.c: 109:         ESP_write(mess,2);
  3409  0160  3038               	movlw	low read_analog@mess
  3410  0161  00AB               	movwf	ESP_write@pt
  3411  0162  3000               	movlw	high read_analog@mess
  3412  0163  00AC               	movwf	ESP_write@pt+1
  3413  0164  3002               	movlw	2
  3414  0165  00AD               	movwf	ESP_write@length
  3415  0166  2103               	fcall	_ESP_write
  3416                           
  3417                           ;logger.c: 110:         ESP_wait_for(ESP_SEND_OK);
  3418  0167  3001               	movlw	1
  3419  0168  2C08               	ljmp	_ESP_wait_for
  3420  0169                     l3557:	
  3421                           ;logger.c: 113:     } else {
  3422                           
  3423                           
  3424                           ;logger.c: 116:             aux1 = (unsigned long)adc_val*3300UL;
  3425  0169  083E               	movf	read_analog@adc_val,w
  3426  016A  00F2               	movwf	___lmul@multiplier
  3427  016B  083F               	movf	read_analog@adc_val+1,w
  3428  016C  00F3               	movwf	___lmul@multiplier+1
  3429  016D  300C               	movlw	12
  3430  016E  01F4               	clrf	___lmul@multiplier+2
  3431  016F  01F5               	clrf	___lmul@multiplier+3
  3432  0170  01F9               	clrf	___lmul@multiplicand+3
  3433  0171  01F8               	clrf	___lmul@multiplicand+2
  3434  0172  00F7               	movwf	___lmul@multiplicand+1
  3435  0173  30E4               	movlw	228
  3436  0174  00F6               	movwf	___lmul@multiplicand
  3437  0175  237A               	fcall	___lmul
  3438  0176  0875               	movf	?___lmul+3,w
  3439  0177  00B7               	movwf	read_analog@aux1+3
  3440  0178  0874               	movf	?___lmul+2,w
  3441  0179  00B6               	movwf	read_analog@aux1+2
  3442  017A  0873               	movf	?___lmul+1,w
  3443  017B  00B5               	movwf	read_analog@aux1+1
  3444  017C  0872               	movf	?___lmul,w
  3445  017D  00B4               	movwf	read_analog@aux1
  3446                           
  3447                           ;logger.c: 117:             adc_val = (unsigned short)(aux1 >> 10);
  3448  017E  00B0               	movwf	??_read_analog
  3449  017F  0835               	movf	read_analog@aux1+1,w
  3450  0180  00B1               	movwf	??_read_analog+1
  3451  0181  0836               	movf	read_analog@aux1+2,w
  3452  0182  00B2               	movwf	??_read_analog+2
  3453  0183  0837               	movf	read_analog@aux1+3,w
  3454  0184  00B3               	movwf	??_read_analog+3
  3455  0185  300A               	movlw	10
  3456  0186                     u2315:	
  3457  0186  36B3               	lsrf	??_read_analog+3,f
  3458  0187  0CB2               	rrf	??_read_analog+2,f
  3459  0188  0CB1               	rrf	??_read_analog+1,f
  3460  0189  0CB0               	rrf	??_read_analog,f
  3461  018A  0B89               	decfsz	9,f
  3462  018B  2986               	goto	u2315
  3463  018C  0831               	movf	??_read_analog+1,w
  3464  018D  00BF               	movwf	read_analog@adc_val+1
  3465  018E  0830               	movf	??_read_analog,w
  3466  018F  00BE               	movwf	read_analog@adc_val
  3467                           
  3468                           ;logger.c: 119:             _sprintf(mess,adc_val);
  3469  0190  083F               	movf	read_analog@adc_val+1,w
  3470  0191  00A1               	movwf	__sprintf@val+1
  3471  0192  083E               	movf	read_analog@adc_val,w
  3472  0193  00A0               	movwf	__sprintf@val
  3473  0194  3038               	movlw	(low (read_analog@mess| 0))& (0+255)
  3474  0195  21A1               	fcall	__sprintf
  3475                           
  3476                           ;logger.c: 120:             mess[5] = '\n';
  3477  0196  300A               	movlw	10
  3478  0197  00BD               	movwf	read_analog@mess+5
  3479                           
  3480                           ;logger.c: 124:             ESP_write(mess,6);
  3481  0198  3038               	movlw	low read_analog@mess
  3482  0199  00AB               	movwf	ESP_write@pt
  3483  019A  3000               	movlw	high read_analog@mess
  3484  019B  00AC               	movwf	ESP_write@pt+1
  3485  019C  3006               	movlw	6
  3486  019D  00AD               	movwf	ESP_write@length
  3487  019E  2103               	fcall	_ESP_write
  3488                           
  3489                           ;logger.c: 125:             ESP_wait_for(ESP_SEND_OK);
  3490  019F  3001               	movlw	1
  3491  01A0  2C08               	ljmp	_ESP_wait_for
  3492  01A1                     __end_of_read_analog:	
  3493                           
  3494                           	psect	text6
  3495  01A1                     __ptext6:	
  3496 ;; *************** function __sprintf *****************
  3497 ;; Defined at:
  3498 ;;		line 25 in file "comm.c"
  3499 ;; Parameters:    Size  Location     Type
  3500 ;;  mess            1    wreg     PTR unsigned char 
  3501 ;;		 -> read_analog@mess(6), 
  3502 ;;  val             2    0[BANK0 ] unsigned short 
  3503 ;; Auto vars:     Size  Location     Type
  3504 ;;  mess            1    4[BANK0 ] PTR unsigned char 
  3505 ;;		 -> read_analog@mess(6), 
  3506 ;;  aux             2    2[BANK0 ] unsigned short 
  3507 ;; Return value:  Size  Location     Type
  3508 ;;                  1    wreg      void 
  3509 ;; Registers used:
  3510 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3511 ;; Tracked objects:
  3512 ;;		On entry : 1F/0
  3513 ;;		On exit  : 1F/0
  3514 ;;		Unchanged: 0/0
  3515 ;; Data sizes:     COMMON   BANK0   BANK1
  3516 ;;      Params:         0       2       0
  3517 ;;      Locals:         0       3       0
  3518 ;;      Temps:          0       0       0
  3519 ;;      Totals:         0       5       0
  3520 ;;Total ram usage:        5 bytes
  3521 ;; Hardware stack levels used:    1
  3522 ;; Hardware stack levels required when called:    5
  3523 ;; This function calls:
  3524 ;;		___lwdiv
  3525 ;;		___lwmod
  3526 ;; This function is called by:
  3527 ;;		_read_analog
  3528 ;; This function uses a non-reentrant model
  3529 ;;
  3530                           
  3531                           
  3532                           ;psect for function __sprintf
  3533  01A1                     __sprintf:	
  3534                           
  3535                           ;incstack = 0
  3536                           ; Regs used in __sprintf: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3537                           ;__sprintf@mess stored from wreg
  3538  01A1  00A4               	movwf	__sprintf@mess
  3539                           
  3540                           ;comm.c: 25: void _sprintf(char *mess, unsigned short val);comm.c: 26: {;comm.c: 27:   u
      +                          nsigned short aux;;comm.c: 31:   aux = val%10;
  3541  01A2  21D5               	fcall	PL6	;call to abstracted procedure
  3542  01A3  2429               	fcall	___lwmod
  3543                           
  3544                           ;comm.c: 32:   val /= 10;
  3545  01A4  21C9               	fcall	PL2	;call to abstracted procedure
  3546  01A5  2355               	fcall	___lwdiv
  3547                           
  3548                           ;comm.c: 34:   mess[5] = 0x00;
  3549  01A6  21DD               	fcall	PL10	;call to abstracted procedure
  3550  01A7  3E05               	addlw	5
  3551  01A8  0086               	movwf	6
  3552  01A9  0187               	clrf	7
  3553  01AA  0181               	clrf	1
  3554                           
  3555                           ;comm.c: 36:   mess[4] = (unsigned char)aux+'0';
  3556  01AB  0824               	movf	__sprintf@mess,w
  3557  01AC  3E04               	addlw	4
  3558  01AD  0086               	movwf	6
  3559  01AE  0822               	movf	__sprintf@aux,w
  3560  01AF  3E30               	addlw	48
  3561  01B0  0081               	movwf	1
  3562                           
  3563                           ;comm.c: 38:   aux = val%10;
  3564  01B1  21D5               	fcall	PL6	;call to abstracted procedure
  3565  01B2  2429               	fcall	___lwmod
  3566                           
  3567                           ;comm.c: 39:   val /= 10;
  3568  01B3  21C9               	fcall	PL2	;call to abstracted procedure
  3569  01B4  2355               	fcall	___lwdiv
  3570                           
  3571                           ;comm.c: 41:   mess[3] = (unsigned char)aux+'0';
  3572  01B5  21DD               	fcall	PL10	;call to abstracted procedure
  3573  01B6  3E03               	addlw	3
  3574  01B7  21E3               	fcall	PL16	;call to abstracted procedure
  3575                           
  3576                           ;comm.c: 43:   aux = val%10;
  3577  01B8  21D5               	fcall	PL6	;call to abstracted procedure
  3578  01B9  2429               	fcall	___lwmod
  3579                           
  3580                           ;comm.c: 44:   val /= 10;
  3581  01BA  21C9               	fcall	PL2	;call to abstracted procedure
  3582  01BB  2355               	fcall	___lwdiv
  3583                           
  3584                           ;comm.c: 46:   mess[2] = (unsigned char)aux+'0';
  3585  01BC  21DD               	fcall	PL10	;call to abstracted procedure
  3586  01BD  3E02               	addlw	2
  3587  01BE  21E3               	fcall	PL16	;call to abstracted procedure
  3588                           
  3589                           ;comm.c: 47:   mess[1] = '.';
  3590  01BF  0A24               	incf	__sprintf@mess,w
  3591  01C0  0086               	movwf	6
  3592  01C1  302E               	movlw	46
  3593  01C2  0081               	movwf	1
  3594                           
  3595                           ;comm.c: 48:   mess[0] = (unsigned char)val+'0';
  3596  01C3  0824               	movf	__sprintf@mess,w
  3597  01C4  0086               	movwf	6
  3598  01C5  0820               	movf	__sprintf@val,w
  3599  01C6  3E30               	addlw	48
  3600  01C7  0081               	movwf	1
  3601  01C8  0008               	return
  3602  01C9                     __end_of__sprintf:	
  3603  01C9                     PL2:	
  3604  01C9  0873               	movf	?___lwmod+1,w
  3605  01CA  00A3               	movwf	__sprintf@aux+1
  3606  01CB  0872               	movf	?___lwmod,w
  3607  01CC  00A2               	movwf	__sprintf@aux
  3608  01CD  300A               	movlw	10
  3609  01CE  00F2               	movwf	___lwdiv@divisor
  3610  01CF  01F3               	clrf	___lwdiv@divisor+1
  3611  01D0  0821               	movf	__sprintf@val+1,w
  3612  01D1  00F5               	movwf	___lwdiv@dividend+1
  3613  01D2  0820               	movf	__sprintf@val,w
  3614  01D3  00F4               	movwf	___lwdiv@dividend
  3615  01D4  0008               	return
  3616  01D5                     __end_ofPL2:	
  3617  01D5                     PL6:	
  3618  01D5  300A               	movlw	10
  3619  01D6  00F2               	movwf	___lwmod@divisor
  3620  01D7  01F3               	clrf	___lwmod@divisor+1
  3621  01D8  0821               	movf	__sprintf@val+1,w
  3622  01D9  00F5               	movwf	___lwmod@dividend+1
  3623  01DA  0820               	movf	__sprintf@val,w
  3624  01DB  00F4               	movwf	___lwmod@dividend
  3625  01DC  0008               	return
  3626  01DD                     __end_ofPL6:	
  3627  01DD                     PL10:	
  3628  01DD  0873               	movf	?___lwdiv+1,w
  3629  01DE  00A1               	movwf	__sprintf@val+1
  3630  01DF  0872               	movf	?___lwdiv,w
  3631  01E0  00A0               	movwf	__sprintf@val
  3632  01E1  0824               	movf	__sprintf@mess,w
  3633  01E2  0008               	return
  3634  01E3                     __end_ofPL10:	
  3635  01E3                     PL16:	
  3636  01E3  0086               	movwf	6
  3637  01E4  0187               	clrf	7
  3638  01E5  0822               	movf	__sprintf@aux,w
  3639  01E6  3E30               	addlw	48
  3640  01E7  0081               	movwf	1
  3641  01E8  0008               	return
  3642  01E9                     __end_ofPL16:	
  3643                           
  3644                           	psect	text7
  3645  0429                     __ptext7:	
  3646 ;; *************** function ___lwmod *****************
  3647 ;; Defined at:
  3648 ;;		line 5 in file "/pkg/microchip/xc8/v2.00/pic/sources/c99/common/lwmod.c"
  3649 ;; Parameters:    Size  Location     Type
  3650 ;;  divisor         2    2[COMMON] unsigned int 
  3651 ;;  dividend        2    4[COMMON] unsigned int 
  3652 ;; Auto vars:     Size  Location     Type
  3653 ;;  counter         1    6[COMMON] unsigned char 
  3654 ;; Return value:  Size  Location     Type
  3655 ;;                  2    2[COMMON] unsigned int 
  3656 ;; Registers used:
  3657 ;;		wreg, status,2, status,0
  3658 ;; Tracked objects:
  3659 ;;		On entry : 1F/0
  3660 ;;		On exit  : 1F/0
  3661 ;;		Unchanged: 1F/0
  3662 ;; Data sizes:     COMMON   BANK0   BANK1
  3663 ;;      Params:         4       0       0
  3664 ;;      Locals:         1       0       0
  3665 ;;      Temps:          0       0       0
  3666 ;;      Totals:         5       0       0
  3667 ;;Total ram usage:        5 bytes
  3668 ;; Hardware stack levels used:    1
  3669 ;; Hardware stack levels required when called:    4
  3670 ;; This function calls:
  3671 ;;		Nothing
  3672 ;; This function is called by:
  3673 ;;		__sprintf
  3674 ;; This function uses a non-reentrant model
  3675 ;;
  3676                           
  3677                           
  3678                           ;psect for function ___lwmod
  3679  0429                     ___lwmod:	
  3680                           
  3681                           ;incstack = 0
  3682                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3683  0429  0872               	movf	___lwmod@divisor,w
  3684  042A  0473               	iorwf	___lwmod@divisor+1,w
  3685  042B  1903               	btfsc	3,2
  3686  042C  2C44               	goto	l2667
  3687  042D  01F6               	clrf	___lwmod@counter
  3688  042E                     L1:	
  3689  042E  0AF6               	incf	___lwmod@counter,f
  3690  042F  1BF3               	btfsc	___lwmod@divisor+1,7
  3691  0430  2C34               	goto	l2659
  3692  0431  35F2               	lslf	___lwmod@divisor,f
  3693  0432  0DF3               	rlf	___lwmod@divisor+1,f
  3694  0433  2C2E               	goto	L1
  3695  0434                     l2659:	
  3696  0434  0873               	movf	___lwmod@divisor+1,w
  3697  0435  0275               	subwf	___lwmod@dividend+1,w
  3698  0436  1D03               	skipz
  3699  0437  2C3A               	goto	u1535
  3700  0438  0872               	movf	___lwmod@divisor,w
  3701  0439  0274               	subwf	___lwmod@dividend,w
  3702  043A                     u1535:	
  3703  043A  1C03               	skipc
  3704  043B  2C40               	goto	l2663
  3705  043C  0872               	movf	___lwmod@divisor,w
  3706  043D  02F4               	subwf	___lwmod@dividend,f
  3707  043E  0873               	movf	___lwmod@divisor+1,w
  3708  043F  3BF5               	subwfb	___lwmod@dividend+1,f
  3709  0440                     l2663:	
  3710  0440  36F3               	lsrf	___lwmod@divisor+1,f
  3711  0441  0CF2               	rrf	___lwmod@divisor,f
  3712  0442  0BF6               	decfsz	___lwmod@counter,f
  3713  0443  2C34               	goto	l2659
  3714  0444                     l2667:	
  3715  0444  0875               	movf	___lwmod@dividend+1,w
  3716  0445  00F3               	movwf	?___lwmod+1
  3717  0446  0874               	movf	___lwmod@dividend,w
  3718  0447  00F2               	movwf	?___lwmod
  3719  0448  0008               	return
  3720  0449                     __end_of___lwmod:	
  3721                           
  3722                           	psect	text8
  3723  0355                     __ptext8:	
  3724 ;; *************** function ___lwdiv *****************
  3725 ;; Defined at:
  3726 ;;		line 5 in file "/pkg/microchip/xc8/v2.00/pic/sources/c99/common/lwdiv.c"
  3727 ;; Parameters:    Size  Location     Type
  3728 ;;  divisor         2    2[COMMON] unsigned int 
  3729 ;;  dividend        2    4[COMMON] unsigned int 
  3730 ;; Auto vars:     Size  Location     Type
  3731 ;;  quotient        2    6[COMMON] unsigned int 
  3732 ;;  counter         1    8[COMMON] unsigned char 
  3733 ;; Return value:  Size  Location     Type
  3734 ;;                  2    2[COMMON] unsigned int 
  3735 ;; Registers used:
  3736 ;;		wreg, status,2, status,0
  3737 ;; Tracked objects:
  3738 ;;		On entry : 1F/0
  3739 ;;		On exit  : 1F/0
  3740 ;;		Unchanged: 1F/0
  3741 ;; Data sizes:     COMMON   BANK0   BANK1
  3742 ;;      Params:         4       0       0
  3743 ;;      Locals:         3       0       0
  3744 ;;      Temps:          0       0       0
  3745 ;;      Totals:         7       0       0
  3746 ;;Total ram usage:        7 bytes
  3747 ;; Hardware stack levels used:    1
  3748 ;; Hardware stack levels required when called:    4
  3749 ;; This function calls:
  3750 ;;		Nothing
  3751 ;; This function is called by:
  3752 ;;		__sprintf
  3753 ;; This function uses a non-reentrant model
  3754 ;;
  3755                           
  3756                           
  3757                           ;psect for function ___lwdiv
  3758  0355                     ___lwdiv:	
  3759                           
  3760                           ;incstack = 0
  3761                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3762  0355  01F6               	clrf	___lwdiv@quotient
  3763  0356  01F7               	clrf	___lwdiv@quotient+1
  3764  0357  0872               	movf	___lwdiv@divisor,w
  3765  0358  0473               	iorwf	___lwdiv@divisor+1,w
  3766  0359  1903               	btfsc	3,2
  3767  035A  2B75               	goto	l2647
  3768  035B  01F8               	clrf	___lwdiv@counter
  3769  035C                     L2:	
  3770  035C  0AF8               	incf	___lwdiv@counter,f
  3771  035D  1BF3               	btfsc	___lwdiv@divisor+1,7
  3772  035E  2B62               	goto	l2635
  3773  035F  35F2               	lslf	___lwdiv@divisor,f
  3774  0360  0DF3               	rlf	___lwdiv@divisor+1,f
  3775  0361  2B5C               	goto	L2
  3776  0362                     l2635:	
  3777  0362  35F6               	lslf	___lwdiv@quotient,f
  3778  0363  0DF7               	rlf	___lwdiv@quotient+1,f
  3779  0364  0873               	movf	___lwdiv@divisor+1,w
  3780  0365  0275               	subwf	___lwdiv@dividend+1,w
  3781  0366  1D03               	skipz
  3782  0367  2B6A               	goto	u1495
  3783  0368  0872               	movf	___lwdiv@divisor,w
  3784  0369  0274               	subwf	___lwdiv@dividend,w
  3785  036A                     u1495:	
  3786  036A  1C03               	skipc
  3787  036B  2B71               	goto	l2643
  3788  036C  0872               	movf	___lwdiv@divisor,w
  3789  036D  02F4               	subwf	___lwdiv@dividend,f
  3790  036E  0873               	movf	___lwdiv@divisor+1,w
  3791  036F  3BF5               	subwfb	___lwdiv@dividend+1,f
  3792  0370  1476               	bsf	___lwdiv@quotient,0
  3793  0371                     l2643:	
  3794  0371  36F3               	lsrf	___lwdiv@divisor+1,f
  3795  0372  0CF2               	rrf	___lwdiv@divisor,f
  3796  0373  0BF8               	decfsz	___lwdiv@counter,f
  3797  0374  2B62               	goto	l2635
  3798  0375                     l2647:	
  3799  0375  0877               	movf	___lwdiv@quotient+1,w
  3800  0376  00F3               	movwf	?___lwdiv+1
  3801  0377  0876               	movf	___lwdiv@quotient,w
  3802  0378  00F2               	movwf	?___lwdiv
  3803  0379  0008               	return
  3804  037A                     __end_of___lwdiv:	
  3805                           
  3806                           	psect	text9
  3807  037A                     __ptext9:	
  3808 ;; *************** function ___lmul *****************
  3809 ;; Defined at:
  3810 ;;		line 15 in file "/pkg/microchip/xc8/v2.00/pic/sources/c99/common/Umul32.c"
  3811 ;; Parameters:    Size  Location     Type
  3812 ;;  multiplier      4    2[COMMON] unsigned long 
  3813 ;;  multiplicand    4    6[COMMON] unsigned long 
  3814 ;; Auto vars:     Size  Location     Type
  3815 ;;  product         4    0[BANK0 ] unsigned long 
  3816 ;; Return value:  Size  Location     Type
  3817 ;;                  4    2[COMMON] unsigned long 
  3818 ;; Registers used:
  3819 ;;		wreg, status,2, status,0
  3820 ;; Tracked objects:
  3821 ;;		On entry : 1F/0
  3822 ;;		On exit  : 1F/0
  3823 ;;		Unchanged: 0/0
  3824 ;; Data sizes:     COMMON   BANK0   BANK1
  3825 ;;      Params:         8       0       0
  3826 ;;      Locals:         0       4       0
  3827 ;;      Temps:          0       0       0
  3828 ;;      Totals:         8       4       0
  3829 ;;Total ram usage:       12 bytes
  3830 ;; Hardware stack levels used:    1
  3831 ;; Hardware stack levels required when called:    4
  3832 ;; This function calls:
  3833 ;;		Nothing
  3834 ;; This function is called by:
  3835 ;;		_read_analog
  3836 ;; This function uses a non-reentrant model
  3837 ;;
  3838                           
  3839                           
  3840                           ;psect for function ___lmul
  3841  037A                     ___lmul:	
  3842                           
  3843                           ;incstack = 0
  3844                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3845  037A  01A0               	clrf	___lmul@product
  3846  037B  01A1               	clrf	___lmul@product+1
  3847  037C  01A2               	clrf	___lmul@product+2
  3848  037D  01A3               	clrf	___lmul@product+3
  3849  037E                     l782:	
  3850  037E  1C72               	btfss	___lmul@multiplier,0
  3851  037F  2B88               	goto	l2883
  3852  0380  0876               	movf	___lmul@multiplicand,w
  3853  0381  07A0               	addwf	___lmul@product,f
  3854  0382  0877               	movf	___lmul@multiplicand+1,w
  3855  0383  3DA1               	addwfc	___lmul@product+1,f
  3856  0384  0878               	movf	___lmul@multiplicand+2,w
  3857  0385  3DA2               	addwfc	___lmul@product+2,f
  3858  0386  0879               	movf	___lmul@multiplicand+3,w
  3859  0387  3DA3               	addwfc	___lmul@product+3,f
  3860  0388                     l2883:	
  3861  0388  35F6               	lslf	___lmul@multiplicand,f
  3862  0389  0DF7               	rlf	___lmul@multiplicand+1,f
  3863  038A  0DF8               	rlf	___lmul@multiplicand+2,f
  3864  038B  0DF9               	rlf	___lmul@multiplicand+3,f
  3865  038C  36F5               	lsrf	___lmul@multiplier+3,f
  3866  038D  0CF4               	rrf	___lmul@multiplier+2,f
  3867  038E  0CF3               	rrf	___lmul@multiplier+1,f
  3868  038F  0CF2               	rrf	___lmul@multiplier,f
  3869  0390  0875               	movf	___lmul@multiplier+3,w
  3870  0391  0474               	iorwf	___lmul@multiplier+2,w
  3871  0392  0473               	iorwf	___lmul@multiplier+1,w
  3872  0393  0472               	iorwf	___lmul@multiplier,w
  3873  0394  1D03               	skipz
  3874  0395  2B7E               	goto	l782
  3875  0396  0823               	movf	___lmul@product+3,w
  3876  0397  00F5               	movwf	?___lmul+3
  3877  0398  0822               	movf	___lmul@product+2,w
  3878  0399  00F4               	movwf	?___lmul+2
  3879  039A  0821               	movf	___lmul@product+1,w
  3880  039B  00F3               	movwf	?___lmul+1
  3881  039C  0820               	movf	___lmul@product,w
  3882  039D  00F2               	movwf	?___lmul
  3883  039E  0008               	return
  3884  039F                     __end_of___lmul:	
  3885                           
  3886                           	psect	text10
  3887  0581                     __ptext10:	
  3888 ;; *************** function _process_ioc *****************
  3889 ;; Defined at:
  3890 ;;		line 167 in file "logger.c"
  3891 ;; Parameters:    Size  Location     Type
  3892 ;;		None
  3893 ;; Auto vars:     Size  Location     Type
  3894 ;;		None
  3895 ;; Return value:  Size  Location     Type
  3896 ;;                  1    wreg      void 
  3897 ;; Registers used:
  3898 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3899 ;; Tracked objects:
  3900 ;;		On entry : 1F/0
  3901 ;;		On exit  : 1F/0
  3902 ;;		Unchanged: 0/0
  3903 ;; Data sizes:     COMMON   BANK0   BANK1
  3904 ;;      Params:         0       0       0
  3905 ;;      Locals:         0       0       0
  3906 ;;      Temps:          0       0       0
  3907 ;;      Totals:         0       0       0
  3908 ;;Total ram usage:        0 bytes
  3909 ;; Hardware stack levels used:    1
  3910 ;; Hardware stack levels required when called:   10
  3911 ;; This function calls:
  3912 ;;		_ESP_wait_for
  3913 ;;		_ESP_write
  3914 ;; This function is called by:
  3915 ;;		_main
  3916 ;; This function uses a non-reentrant model
  3917 ;;
  3918                           
  3919                           
  3920                           ;psect for function _process_ioc
  3921  0581                     _process_ioc:	
  3922                           
  3923                           ;logger.c: 169:     IOC_state = IOC_IDLE;
  3924                           
  3925                           ;incstack = 0
  3926                           ; Regs used in _process_ioc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3927  0581  01E6               	clrf	_IOC_state	;volatile
  3928                           
  3929                           ;logger.c: 170:      if (IOC_value) {
  3930  0582  0861               	movf	_IOC_value,w	;volatile
  3931  0583  1903               	btfsc	3,2
  3932  0584  2D8E               	goto	l3575
  3933                           
  3934                           ;logger.c: 174:             ESP_write("CH",2);
  3935  0585  3070               	movlw	low (STR_23| (0+32768))
  3936  0586  00AB               	movwf	ESP_write@pt
  3937  0587  3087               	movlw	high (STR_23| (0+32768))
  3938  0588  00AC               	movwf	ESP_write@pt+1
  3939  0589  3002               	movlw	2
  3940  058A  00AD               	movwf	ESP_write@length
  3941  058B  2103               	fcall	_ESP_write
  3942                           
  3943                           ;logger.c: 175:             ESP_wait_for(ESP_SEND_OK);
  3944  058C  3001               	movlw	1
  3945  058D  2C08               	ljmp	_ESP_wait_for
  3946  058E                     l3575:	
  3947                           ;logger.c: 177:     } else {
  3948                           
  3949                           
  3950                           ;logger.c: 181:             ESP_write("CL",2);
  3951  058E  3073               	movlw	low (STR_24| (0+32768))
  3952  058F  00AB               	movwf	ESP_write@pt
  3953  0590  3087               	movlw	high (STR_24| (0+32768))
  3954  0591  00AC               	movwf	ESP_write@pt+1
  3955  0592  3002               	movlw	2
  3956  0593  00AD               	movwf	ESP_write@length
  3957  0594  2103               	fcall	_ESP_write
  3958                           
  3959                           ;logger.c: 182:             ESP_wait_for(ESP_SEND_OK);
  3960  0595  3001               	movlw	1
  3961  0596  2C08               	ljmp	_ESP_wait_for
  3962  0597                     __end_of_process_ioc:	
  3963                           
  3964                           	psect	text11
  3965  04F3                     __ptext11:	
  3966 ;; *************** function _logger_initialize *****************
  3967 ;; Defined at:
  3968 ;;		line 17 in file "logger.c"
  3969 ;; Parameters:    Size  Location     Type
  3970 ;;		None
  3971 ;; Auto vars:     Size  Location     Type
  3972 ;;		None
  3973 ;; Return value:  Size  Location     Type
  3974 ;;                  1    wreg      void 
  3975 ;; Registers used:
  3976 ;;		wreg, status,2, status,0, pclath, cstack
  3977 ;; Tracked objects:
  3978 ;;		On entry : 1F/0
  3979 ;;		On exit  : 1F/0
  3980 ;;		Unchanged: 0/0
  3981 ;; Data sizes:     COMMON   BANK0   BANK1
  3982 ;;      Params:         0       0       0
  3983 ;;      Locals:         0       0       0
  3984 ;;      Temps:          0       0       0
  3985 ;;      Totals:         0       0       0
  3986 ;;Total ram usage:        0 bytes
  3987 ;; Hardware stack levels used:    1
  3988 ;; Hardware stack levels required when called:    5
  3989 ;; This function calls:
  3990 ;;		_ADC_SelectChannel
  3991 ;;		_ESP_Set_application_handler
  3992 ;;		_IOCAF4_SetInterruptHandler
  3993 ;;		_TMR1_SetInterruptHandler
  3994 ;;		_TMR1_StopTimer
  3995 ;; This function is called by:
  3996 ;;		_main
  3997 ;; This function uses a non-reentrant model
  3998 ;;
  3999                           
  4000                           
  4001                           ;psect for function _logger_initialize
  4002  04F3                     _logger_initialize:	
  4003                           
  4004                           ;logger.c: 19:     message_format = MESSAGE_BINARY;
  4005                           
  4006                           ;incstack = 0
  4007                           ; Regs used in _logger_initialize: [wreg+status,2+status,0+pclath+cstack]
  4008  04F3  01E3               	clrf	_message_format	;volatile
  4009                           
  4010                           ;logger.c: 21:     ADC_SelectChannel(channel_AN2);
  4011  04F4  3002               	movlw	2
  4012  04F5  26A7               	fcall	_ADC_SelectChannel
  4013                           
  4014                           ;logger.c: 22:     ADC_state = ADC_IDLE;
  4015  04F6  0020               	movlb	0	; select bank0
  4016  04F7  01EC               	clrf	_ADC_state	;volatile
  4017                           
  4018                           ;logger.c: 26:     TMR1_StopTimer();
  4019  04F8  2788               	fcall	_TMR1_StopTimer
  4020                           
  4021                           ;logger.c: 27:     TMR1_state = TMR1_STOP;
  4022  04F9  01E2               	clrf	_TMR1_state	;volatile
  4023                           
  4024                           ;logger.c: 28:     TMR1_SetInterruptHandler(_TMR1_Ready);
  4025  04FA  3068               	movlw	low __TMR1_Ready
  4026  04FB  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  4027  04FC  3007               	movlw	high __TMR1_Ready
  4028  04FD  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  4029  04FE  2735               	fcall	_TMR1_SetInterruptHandler
  4030                           
  4031                           ;logger.c: 31:     IOCAF4_SetInterruptHandler(_IOC_Ready);
  4032  04FF  301C               	movlw	low __IOC_Ready
  4033  0500  00F2               	movwf	IOCAF4_SetInterruptHandler@InterruptHandler
  4034  0501  3007               	movlw	high __IOC_Ready
  4035  0502  00F3               	movwf	IOCAF4_SetInterruptHandler@InterruptHandler+1
  4036  0503  273B               	fcall	_IOCAF4_SetInterruptHandler
  4037                           
  4038                           ;logger.c: 32:     IOC_state = IOC_IDLE;
  4039  0504  01E6               	clrf	_IOC_state	;volatile
  4040                           
  4041                           ;logger.c: 33:     IOC_value = 1;
  4042  0505  3001               	movlw	1
  4043  0506  00E1               	movwf	_IOC_value	;volatile
  4044                           
  4045                           ;logger.c: 35:     ESP_Set_application_handler(process_message);
  4046  0507  30B4               	movlw	low _process_message
  4047  0508  00F2               	movwf	ESP_Set_application_handler@applicationHandler
  4048  0509  3002               	movlw	high _process_message
  4049  050A  00F3               	movwf	ESP_Set_application_handler@applicationHandler+1
  4050  050B  2F57               	ljmp	l2823
  4051  050C                     __end_of_logger_initialize:	
  4052                           
  4053                           	psect	text12
  4054  06A7                     __ptext12:	
  4055 ;; *************** function _ADC_SelectChannel *****************
  4056 ;; Defined at:
  4057 ;;		line 85 in file "mcc_generated_files/adc.c"
  4058 ;; Parameters:    Size  Location     Type
  4059 ;;  channel         1    wreg     enum E2157
  4060 ;; Auto vars:     Size  Location     Type
  4061 ;;  channel         1    3[COMMON] enum E2157
  4062 ;; Return value:  Size  Location     Type
  4063 ;;                  1    wreg      void 
  4064 ;; Registers used:
  4065 ;;		wreg, status,2, status,0
  4066 ;; Tracked objects:
  4067 ;;		On entry : 1F/0
  4068 ;;		On exit  : 1F/1
  4069 ;;		Unchanged: 0/0
  4070 ;; Data sizes:     COMMON   BANK0   BANK1
  4071 ;;      Params:         0       0       0
  4072 ;;      Locals:         1       0       0
  4073 ;;      Temps:          1       0       0
  4074 ;;      Totals:         2       0       0
  4075 ;;Total ram usage:        2 bytes
  4076 ;; Hardware stack levels used:    1
  4077 ;; Hardware stack levels required when called:    4
  4078 ;; This function calls:
  4079 ;;		Nothing
  4080 ;; This function is called by:
  4081 ;;		_logger_initialize
  4082 ;; This function uses a non-reentrant model
  4083 ;;
  4084                           
  4085                           
  4086                           ;psect for function _ADC_SelectChannel
  4087  06A7                     _ADC_SelectChannel:	
  4088                           
  4089                           ;incstack = 0
  4090                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
  4091                           ;ADC_SelectChannel@channel stored from wreg
  4092  06A7  00F3               	movwf	ADC_SelectChannel@channel
  4093                           
  4094                           ;mcc_generated_files/adc.c: 85: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 86: {;mcc_generated_files/adc.c: 88:     ADCON0bits.CHS = channel;
  4095  06A8  00F2               	movwf	??_ADC_SelectChannel
  4096  06A9  0DF2               	rlf	??_ADC_SelectChannel,f
  4097  06AA  0DF2               	rlf	??_ADC_SelectChannel,f
  4098  06AB  0021               	movlb	1	; select bank1
  4099  06AC  081D               	movf	29,w	;volatile
  4100  06AD  0672               	xorwf	??_ADC_SelectChannel,w
  4101  06AE  3983               	andlw	-125
  4102  06AF  0672               	xorwf	??_ADC_SelectChannel,w
  4103  06B0  009D               	movwf	29	;volatile
  4104                           
  4105                           ;mcc_generated_files/adc.c: 90:     ADCON0bits.ADON = 1;
  4106  06B1  141D               	bsf	29,0	;volatile
  4107  06B2  0008               	return
  4108  06B3                     __end_of_ADC_SelectChannel:	
  4109                           
  4110                           	psect	text13
  4111  00AC                     __ptext13:	
  4112 ;; *************** function _config_wifi_settings *****************
  4113 ;; Defined at:
  4114 ;;		line 188 in file "logger.c"
  4115 ;; Parameters:    Size  Location     Type
  4116 ;;		None
  4117 ;; Auto vars:     Size  Location     Type
  4118 ;;  line           16    0[BANK0 ] unsigned char [16]
  4119 ;;  len             1   18[BANK0 ] unsigned char 
  4120 ;;  address         1   17[BANK0 ] unsigned char 
  4121 ;;  i               1   16[BANK0 ] unsigned char 
  4122 ;; Return value:  Size  Location     Type
  4123 ;;                  1    wreg      void 
  4124 ;; Registers used:
  4125 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4126 ;; Tracked objects:
  4127 ;;		On entry : 1F/0
  4128 ;;		On exit  : 0/0
  4129 ;;		Unchanged: 0/0
  4130 ;; Data sizes:     COMMON   BANK0   BANK1
  4131 ;;      Params:         0       0       0
  4132 ;;      Locals:         0      19       0
  4133 ;;      Temps:          0       0       0
  4134 ;;      Totals:         0      19       0
  4135 ;;Total ram usage:       19 bytes
  4136 ;; Hardware stack levels used:    1
  4137 ;; Hardware stack levels required when called:    6
  4138 ;; This function calls:
  4139 ;;		_DATAEE_WriteByte
  4140 ;;		__gets
  4141 ;;		__puts
  4142 ;; This function is called by:
  4143 ;;		_main
  4144 ;; This function uses a non-reentrant model
  4145 ;;
  4146                           
  4147                           
  4148                           ;psect for function _config_wifi_settings
  4149  00AC                     _config_wifi_settings:	
  4150                           
  4151                           ;logger.c: 190:     unsigned char line[16];;logger.c: 191:     unsigned char len, addres
      +                          s, i;;logger.c: 193:     _puts("Logger V1.0\n");
  4152                           
  4153                           ;incstack = 0
  4154                           ; Regs used in _config_wifi_settings: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4155  00AC  3074               	movlw	low (STR_25| (0+32768))
  4156  00AD  00F3               	movwf	__puts@pt
  4157  00AE  3086               	movlw	high (STR_25| (0+32768))
  4158  00AF  00F4               	movwf	__puts@pt+1
  4159  00B0  24D9               	fcall	__puts
  4160                           
  4161                           ;logger.c: 194:     _puts("enter wlan name:\n");
  4162  00B1  3016               	movlw	low (STR_26| (0+32768))
  4163  00B2  00F3               	movwf	__puts@pt
  4164  00B3  3086               	movlw	high (STR_26| (0+32768))
  4165  00B4  00F4               	movwf	__puts@pt+1
  4166  00B5  24D9               	fcall	__puts
  4167                           
  4168                           ;logger.c: 196:     len = _gets(line,16);
  4169  00B6  3010               	movlw	16
  4170  00B7  00F3               	movwf	__gets@length
  4171  00B8  3020               	movlw	(low (config_wifi_settings@line| 0))& (0+255)
  4172  00B9  2487               	fcall	__gets
  4173  00BA  0020               	movlb	0	; select bank0
  4174  00BB  00B2               	movwf	config_wifi_settings@len
  4175                           
  4176                           ;logger.c: 198:     if (!len) {
  4177  00BC  0832               	movf	config_wifi_settings@len,w
  4178  00BD  1D03               	btfss	3,2
  4179  00BE  28C1               	goto	l2969
  4180                           
  4181                           ;logger.c: 199:         _puts("buffer error");
  4182  00BF  20FE               	fcall	PL22	;call to abstracted procedure
  4183  00C0  2CD9               	ljmp	l2423
  4184  00C1                     l2969:	
  4185                           
  4186                           ;logger.c: 203:     address = 0;
  4187  00C1  01B1               	clrf	config_wifi_settings@address
  4188                           
  4189                           ;logger.c: 204:     DATAEE_WriteByte(address,len);
  4190  00C2  0832               	movf	config_wifi_settings@len,w
  4191  00C3  00F2               	movwf	DATAEE_WriteByte@bData
  4192  00C4  3000               	movlw	0
  4193  00C5  24A3               	fcall	_DATAEE_WriteByte
  4194                           
  4195                           ;logger.c: 205:     address++;
  4196  00C6  0020               	movlb	0	; select bank0
  4197  00C7  0AB1               	incf	config_wifi_settings@address,f
  4198                           
  4199                           ;logger.c: 206:     for (i=0; i < len; i++) {
  4200  00C8  01B0               	clrf	config_wifi_settings@i
  4201  00C9                     l2983:	
  4202  00C9  0832               	movf	config_wifi_settings@len,w
  4203  00CA  0230               	subwf	config_wifi_settings@i,w
  4204  00CB  1803               	btfsc	3,0
  4205  00CC  28D3               	goto	l2985
  4206                           
  4207                           ;logger.c: 207:         DATAEE_WriteByte(address,line[i]);
  4208  00CD  20F6               	fcall	PL8	;call to abstracted procedure
  4209  00CE  24A3               	fcall	_DATAEE_WriteByte
  4210                           
  4211                           ;logger.c: 208:         address++;
  4212  00CF  0020               	movlb	0	; select bank0
  4213  00D0  0AB1               	incf	config_wifi_settings@address,f
  4214                           
  4215                           ;logger.c: 209:     }
  4216  00D1  0AB0               	incf	config_wifi_settings@i,f
  4217  00D2  28C9               	goto	l2983
  4218  00D3                     l2985:	
  4219                           
  4220                           ;logger.c: 211:     _puts("enter wlan password:\n");
  4221  00D3  306B               	movlw	low (STR_28| (0+32768))
  4222  00D4  00F3               	movwf	__puts@pt
  4223  00D5  3085               	movlw	high (STR_28| (0+32768))
  4224  00D6  00F4               	movwf	__puts@pt+1
  4225  00D7  24D9               	fcall	__puts
  4226                           
  4227                           ;logger.c: 213:     len = _gets(line,16);
  4228  00D8  3010               	movlw	16
  4229  00D9  00F3               	movwf	__gets@length
  4230  00DA  3020               	movlw	(low (config_wifi_settings@line| 0))& (0+255)
  4231  00DB  2487               	fcall	__gets
  4232  00DC  0020               	movlb	0	; select bank0
  4233  00DD  00B2               	movwf	config_wifi_settings@len
  4234                           
  4235                           ;logger.c: 215:     if (!len) {
  4236  00DE  0832               	movf	config_wifi_settings@len,w
  4237  00DF  1D03               	btfss	3,2
  4238  00E0  28E3               	goto	l2995
  4239                           
  4240                           ;logger.c: 216:         _puts("buffer error");
  4241  00E1  20FE               	fcall	PL22	;call to abstracted procedure
  4242  00E2  2CD9               	ljmp	l2423
  4243  00E3                     l2995:	
  4244                           
  4245                           ;logger.c: 220:     address = 20;
  4246  00E3  3014               	movlw	20
  4247  00E4  00B1               	movwf	config_wifi_settings@address
  4248                           
  4249                           ;logger.c: 221:     DATAEE_WriteByte(address,len);
  4250  00E5  0832               	movf	config_wifi_settings@len,w
  4251  00E6  00F2               	movwf	DATAEE_WriteByte@bData
  4252  00E7  3014               	movlw	20
  4253  00E8  24A3               	fcall	_DATAEE_WriteByte
  4254                           
  4255                           ;logger.c: 222:     address++;
  4256  00E9  0020               	movlb	0	; select bank0
  4257  00EA  0AB1               	incf	config_wifi_settings@address,f
  4258                           
  4259                           ;logger.c: 223:     for (i=0; i < len; i++) {
  4260  00EB  01B0               	clrf	config_wifi_settings@i
  4261  00EC                     l3009:	
  4262  00EC  0832               	movf	config_wifi_settings@len,w
  4263  00ED  0230               	subwf	config_wifi_settings@i,w
  4264  00EE  1803               	btfsc	3,0
  4265  00EF  0008               	return
  4266                           
  4267                           ;logger.c: 224:         DATAEE_WriteByte(address,line[i]);
  4268  00F0  20F6               	fcall	PL8	;call to abstracted procedure
  4269  00F1  24A3               	fcall	_DATAEE_WriteByte
  4270                           
  4271                           ;logger.c: 225:         address++;
  4272  00F2  0020               	movlb	0	; select bank0
  4273  00F3  0AB1               	incf	config_wifi_settings@address,f
  4274                           
  4275                           ;logger.c: 226:     }
  4276  00F4  0AB0               	incf	config_wifi_settings@i,f
  4277  00F5  28EC               	goto	l3009
  4278  00F6                     __end_of_config_wifi_settings:	
  4279  00F6                     PL8:	
  4280  00F6  0830               	movf	config_wifi_settings@i,w
  4281  00F7  3E20               	addlw	(low (config_wifi_settings@line| 0))& (0+255)
  4282  00F8  0086               	movwf	6
  4283  00F9  0187               	clrf	7
  4284  00FA  0801               	movf	1,w
  4285  00FB  00F2               	movwf	DATAEE_WriteByte@bData
  4286  00FC  0831               	movf	config_wifi_settings@address,w
  4287  00FD  0008               	return
  4288  00FE                     __end_ofPL8:	
  4289  00FE                     PL22:	
  4290  00FE  3081               	movlw	low (STR_27| (0+32768))
  4291  00FF  00F3               	movwf	__puts@pt
  4292  0100  3086               	movlw	high (STR_27| (0+32768))
  4293  0101  00F4               	movwf	__puts@pt+1
  4294  0102  0008               	return
  4295  0103                     __end_ofPL22:	
  4296                           
  4297                           	psect	text14
  4298  0487                     __ptext14:	
  4299 ;; *************** function __gets *****************
  4300 ;; Defined at:
  4301 ;;		line 51 in file "comm.c"
  4302 ;; Parameters:    Size  Location     Type
  4303 ;;  pt              1    wreg     PTR unsigned char 
  4304 ;;		 -> config_wifi_settings@line(16), 
  4305 ;;  length          1    3[COMMON] unsigned char 
  4306 ;; Auto vars:     Size  Location     Type
  4307 ;;  pt              1    6[COMMON] PTR unsigned char 
  4308 ;;		 -> config_wifi_settings@line(16), 
  4309 ;;  index           1    7[COMMON] unsigned char 
  4310 ;; Return value:  Size  Location     Type
  4311 ;;                  1    wreg      unsigned char 
  4312 ;; Registers used:
  4313 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4314 ;; Tracked objects:
  4315 ;;		On entry : 0/0
  4316 ;;		On exit  : 0/0
  4317 ;;		Unchanged: 0/0
  4318 ;; Data sizes:     COMMON   BANK0   BANK1
  4319 ;;      Params:         1       0       0
  4320 ;;      Locals:         2       0       0
  4321 ;;      Temps:          2       0       0
  4322 ;;      Totals:         5       0       0
  4323 ;;Total ram usage:        5 bytes
  4324 ;; Hardware stack levels used:    1
  4325 ;; Hardware stack levels required when called:    5
  4326 ;; This function calls:
  4327 ;;		_EUSART_Read
  4328 ;; This function is called by:
  4329 ;;		_config_wifi_settings
  4330 ;; This function uses a non-reentrant model
  4331 ;;
  4332                           
  4333                           
  4334                           ;psect for function __gets
  4335  0487                     __gets:	
  4336                           
  4337                           ;incstack = 0
  4338                           ; Regs used in __gets: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4339                           ;__gets@pt stored from wreg
  4340  0487  00F6               	movwf	__gets@pt
  4341                           
  4342                           ;comm.c: 51: unsigned char _gets(unsigned char *pt, unsigned char length);comm.c: 52: {;
      +                          comm.c: 53:     unsigned char index;;comm.c: 55:     index = 0;
  4343  0488  01F7               	clrf	__gets@index
  4344  0489                     l2817:	
  4345                           ;comm.c: 56:     while (index < length) {
  4346                           
  4347                           
  4348                           ;comm.c: 56:     while (index < length) {
  4349  0489  0873               	movf	__gets@length,w
  4350  048A  0277               	subwf	__gets@index,w
  4351  048B  1803               	btfsc	3,0
  4352  048C  3400               	retlw	0
  4353                           
  4354                           ;comm.c: 57:         pt[index] = EUSART_Read();
  4355  048D  2554               	fcall	_EUSART_Read
  4356  048E  00F4               	movwf	??__gets
  4357  048F  0877               	movf	__gets@index,w
  4358  0490  0776               	addwf	__gets@pt,w
  4359  0491  00F5               	movwf	??__gets+1
  4360  0492  0086               	movwf	6
  4361  0493  0187               	clrf	7
  4362  0494  0874               	movf	??__gets,w
  4363  0495  0081               	movwf	1
  4364                           
  4365                           ;comm.c: 58:         if (pt[index] == 0x0a) {
  4366  0496  0877               	movf	__gets@index,w
  4367  0497  0776               	addwf	__gets@pt,w
  4368  0498  00F4               	movwf	??__gets
  4369  0499  0086               	movwf	6
  4370  049A  300A               	movlw	10
  4371  049B  0601               	xorwf	1,w
  4372  049C  1D03               	btfss	3,2
  4373  049D  2CA1               	goto	l2815
  4374                           
  4375                           ;comm.c: 59:             index --;
  4376  049E  03F7               	decf	__gets@index,f
  4377                           
  4378                           ;comm.c: 60:             return index;
  4379  049F  0877               	movf	__gets@index,w
  4380  04A0  0008               	return
  4381  04A1                     l2815:	
  4382                           
  4383                           ;comm.c: 62:         index++;
  4384  04A1  0AF7               	incf	__gets@index,f
  4385  04A2  2C89               	goto	l2817
  4386  04A3                     __end_of__gets:	
  4387                           ;comm.c: 66:     return 0;
  4388                           
  4389                           
  4390                           	psect	text15
  4391  04A3                     __ptext15:	
  4392 ;; *************** function _DATAEE_WriteByte *****************
  4393 ;; Defined at:
  4394 ;;		line 187 in file "mcc_generated_files/memory.c"
  4395 ;; Parameters:    Size  Location     Type
  4396 ;;  bAdd            1    wreg     unsigned char 
  4397 ;;  bData           1    2[COMMON] unsigned char 
  4398 ;; Auto vars:     Size  Location     Type
  4399 ;;  bAdd            1    3[COMMON] unsigned char 
  4400 ;;  GIEBitValue     1    4[COMMON] unsigned char 
  4401 ;; Return value:  Size  Location     Type
  4402 ;;                  1    wreg      void 
  4403 ;; Registers used:
  4404 ;;		wreg, status,2, status,0
  4405 ;; Tracked objects:
  4406 ;;		On entry : 1F/0
  4407 ;;		On exit  : 1F/3
  4408 ;;		Unchanged: 0/0
  4409 ;; Data sizes:     COMMON   BANK0   BANK1
  4410 ;;      Params:         1       0       0
  4411 ;;      Locals:         2       0       0
  4412 ;;      Temps:          0       0       0
  4413 ;;      Totals:         3       0       0
  4414 ;;Total ram usage:        3 bytes
  4415 ;; Hardware stack levels used:    1
  4416 ;; Hardware stack levels required when called:    4
  4417 ;; This function calls:
  4418 ;;		Nothing
  4419 ;; This function is called by:
  4420 ;;		_config_wifi_settings
  4421 ;; This function uses a non-reentrant model
  4422 ;;
  4423                           
  4424                           
  4425                           ;psect for function _DATAEE_WriteByte
  4426  04A3                     _DATAEE_WriteByte:	
  4427                           
  4428                           ;incstack = 0
  4429                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
  4430                           ;DATAEE_WriteByte@bAdd stored from wreg
  4431  04A3  00F3               	movwf	DATAEE_WriteByte@bAdd
  4432                           
  4433                           ;mcc_generated_files/memory.c: 191:     EEADRL = (uint8_t)(bAdd & 0x0ff);
  4434  04A4  0023               	movlb	3	; select bank3
  4435  04A5  0091               	movwf	17	;volatile
  4436                           
  4437                           ;mcc_generated_files/memory.c: 192:     EEDATL = bData;
  4438  04A6  0872               	movf	DATAEE_WriteByte@bData,w
  4439  04A7  0093               	movwf	19	;volatile
  4440                           
  4441                           ;mcc_generated_files/memory.c: 193:     EECON1bits.EEPGD = 0;
  4442  04A8  1395               	bcf	21,7	;volsfr
  4443                           
  4444                           ;mcc_generated_files/memory.c: 194:     EECON1bits.CFGS = 0;
  4445  04A9  1315               	bcf	21,6	;volsfr
  4446                           
  4447                           ;mcc_generated_files/memory.c: 195:     EECON1bits.WREN = 1;
  4448  04AA  1515               	bsf	21,2	;volsfr
  4449                           
  4450                           ;mcc_generated_files/memory.c: 197:     GIEBitValue = INTCONbits.GIE;
  4451  04AB  3000               	movlw	0
  4452  04AC  1B8B               	btfsc	11,7	;volatile
  4453  04AD  3001               	movlw	1
  4454  04AE  00F4               	movwf	DATAEE_WriteByte@GIEBitValue
  4455                           
  4456                           ;mcc_generated_files/memory.c: 198:     INTCONbits.GIE = 0;
  4457  04AF  138B               	bcf	11,7	;volatile
  4458                           
  4459                           ;mcc_generated_files/memory.c: 199:     EECON2 = 0x55;
  4460  04B0  3055               	movlw	85
  4461  04B1  0096               	movwf	22	;volsfr
  4462                           
  4463                           ;mcc_generated_files/memory.c: 200:     EECON2 = 0xAA;
  4464  04B2  30AA               	movlw	170
  4465  04B3  0096               	movwf	22	;volsfr
  4466                           
  4467                           ;mcc_generated_files/memory.c: 201:     EECON1bits.WR = 1;
  4468  04B4  1495               	bsf	21,1	;volsfr
  4469  04B5                     l679:	
  4470                           ;mcc_generated_files/memory.c: 204:     {;mcc_generated_files/memory.c: 205:     }
  4471                           
  4472                           
  4473                           ;mcc_generated_files/memory.c: 203:     while (EECON1bits.WR)
  4474  04B5  1895               	btfsc	21,1	;volsfr
  4475  04B6  2CB5               	goto	l679
  4476                           
  4477                           ;mcc_generated_files/memory.c: 207:     EECON1bits.WREN = 0;
  4478  04B7  1115               	bcf	21,2	;volsfr
  4479                           
  4480                           ;mcc_generated_files/memory.c: 208:     INTCONbits.GIE = GIEBitValue;
  4481  04B8  0C74               	rrf	DATAEE_WriteByte@GIEBitValue,w
  4482  04B9  1C03               	skipc
  4483  04BA  138B               	bcf	11,7	;volatile
  4484  04BB  1803               	skipnc
  4485  04BC  178B               	bsf	11,7	;volatile
  4486  04BD  0008               	return
  4487  04BE                     __end_of_DATAEE_WriteByte:	
  4488                           
  4489                           	psect	text16
  4490  072F                     __ptext16:	
  4491 ;; *************** function _SYSTEM_Initialize *****************
  4492 ;; Defined at:
  4493 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4494 ;; Parameters:    Size  Location     Type
  4495 ;;		None
  4496 ;; Auto vars:     Size  Location     Type
  4497 ;;		None
  4498 ;; Return value:  Size  Location     Type
  4499 ;;                  1    wreg      void 
  4500 ;; Registers used:
  4501 ;;		wreg, status,2, status,0, pclath, cstack
  4502 ;; Tracked objects:
  4503 ;;		On entry : B1F/0
  4504 ;;		On exit  : 1F/1
  4505 ;;		Unchanged: 0/0
  4506 ;; Data sizes:     COMMON   BANK0   BANK1
  4507 ;;      Params:         0       0       0
  4508 ;;      Locals:         0       0       0
  4509 ;;      Temps:          0       0       0
  4510 ;;      Totals:         0       0       0
  4511 ;;Total ram usage:        0 bytes
  4512 ;; Hardware stack levels used:    1
  4513 ;; Hardware stack levels required when called:    6
  4514 ;; This function calls:
  4515 ;;		_ADC_Initialize
  4516 ;;		_EUSART_Initialize
  4517 ;;		_OSCILLATOR_Initialize
  4518 ;;		_PIN_MANAGER_Initialize
  4519 ;;		_TMR1_Initialize
  4520 ;;		_WDT_Initialize
  4521 ;; This function is called by:
  4522 ;;		_main
  4523 ;; This function uses a non-reentrant model
  4524 ;;
  4525                           
  4526                           
  4527                           ;psect for function _SYSTEM_Initialize
  4528  072F                     _SYSTEM_Initialize:	
  4529                           
  4530                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  4531                           
  4532                           ;incstack = 0
  4533                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4534  072F  2449               	fcall	_PIN_MANAGER_Initialize
  4535                           
  4536                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  4537  0730  26D3               	fcall	_OSCILLATOR_Initialize
  4538                           
  4539                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  4540  0731  2779               	fcall	_WDT_Initialize
  4541                           
  4542                           ;mcc_generated_files/mcc.c: 56:     TMR1_Initialize();
  4543  0732  2597               	fcall	_TMR1_Initialize
  4544                           
  4545                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  4546  0733  26DD               	fcall	_ADC_Initialize
  4547                           
  4548                           ;mcc_generated_files/mcc.c: 58:     EUSART_Initialize();
  4549  0734  2BC4               	ljmp	l2685
  4550  0735                     __end_of_SYSTEM_Initialize:	
  4551                           
  4552                           	psect	text17
  4553  0779                     __ptext17:	
  4554 ;; *************** function _WDT_Initialize *****************
  4555 ;; Defined at:
  4556 ;;		line 75 in file "mcc_generated_files/mcc.c"
  4557 ;; Parameters:    Size  Location     Type
  4558 ;;		None
  4559 ;; Auto vars:     Size  Location     Type
  4560 ;;		None
  4561 ;; Return value:  Size  Location     Type
  4562 ;;                  1    wreg      void 
  4563 ;; Registers used:
  4564 ;;		wreg
  4565 ;; Tracked objects:
  4566 ;;		On entry : 1F/1
  4567 ;;		On exit  : 1F/1
  4568 ;;		Unchanged: 0/0
  4569 ;; Data sizes:     COMMON   BANK0   BANK1
  4570 ;;      Params:         0       0       0
  4571 ;;      Locals:         0       0       0
  4572 ;;      Temps:          0       0       0
  4573 ;;      Totals:         0       0       0
  4574 ;;Total ram usage:        0 bytes
  4575 ;; Hardware stack levels used:    1
  4576 ;; Hardware stack levels required when called:    4
  4577 ;; This function calls:
  4578 ;;		Nothing
  4579 ;; This function is called by:
  4580 ;;		_SYSTEM_Initialize
  4581 ;; This function uses a non-reentrant model
  4582 ;;
  4583                           
  4584                           
  4585                           ;psect for function _WDT_Initialize
  4586  0779                     _WDT_Initialize:	
  4587                           
  4588                           ;mcc_generated_files/mcc.c: 78:     WDTCON = 0x16;
  4589                           
  4590                           ;incstack = 0
  4591                           ; Regs used in _WDT_Initialize: [wreg]
  4592  0779  3016               	movlw	22
  4593  077A  0097               	movwf	23	;volatile
  4594  077B  0008               	return
  4595  077C                     __end_of_WDT_Initialize:	
  4596                           
  4597                           	psect	text18
  4598  0597                     __ptext18:	
  4599 ;; *************** function _TMR1_Initialize *****************
  4600 ;; Defined at:
  4601 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  4602 ;; Parameters:    Size  Location     Type
  4603 ;;		None
  4604 ;; Auto vars:     Size  Location     Type
  4605 ;;		None
  4606 ;; Return value:  Size  Location     Type
  4607 ;;                  1    wreg      void 
  4608 ;; Registers used:
  4609 ;;		wreg, status,2, status,0, pclath, cstack
  4610 ;; Tracked objects:
  4611 ;;		On entry : 1F/1
  4612 ;;		On exit  : 1F/0
  4613 ;;		Unchanged: 0/0
  4614 ;; Data sizes:     COMMON   BANK0   BANK1
  4615 ;;      Params:         0       0       0
  4616 ;;      Locals:         0       0       0
  4617 ;;      Temps:          0       0       0
  4618 ;;      Totals:         0       0       0
  4619 ;;Total ram usage:        0 bytes
  4620 ;; Hardware stack levels used:    1
  4621 ;; Hardware stack levels required when called:    5
  4622 ;; This function calls:
  4623 ;;		_TMR1_SetInterruptHandler
  4624 ;; This function is called by:
  4625 ;;		_SYSTEM_Initialize
  4626 ;; This function uses a non-reentrant model
  4627 ;;
  4628                           
  4629                           
  4630                           ;psect for function _TMR1_Initialize
  4631  0597                     _TMR1_Initialize:	
  4632                           
  4633                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  4634                           
  4635                           ;incstack = 0
  4636                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4637  0597  0020               	movlb	0	; select bank0
  4638  0598  0199               	clrf	25	;volatile
  4639                           
  4640                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x63;
  4641  0599  3063               	movlw	99
  4642  059A  0097               	movwf	23	;volatile
  4643                           
  4644                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xC0;
  4645  059B  30C0               	movlw	192
  4646  059C  0096               	movwf	22	;volatile
  4647                           
  4648                           ;mcc_generated_files/tmr1.c: 78:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  4649  059D  0817               	movf	23,w	;volatile
  4650  059E  00DA               	movwf	_timer1ReloadVal+1	;volatile
  4651  059F  01D9               	clrf	_timer1ReloadVal	;volatile
  4652  05A0  0816               	movf	22,w	;volatile
  4653  05A1  04D9               	iorwf	_timer1ReloadVal,f	;volatile
  4654                           
  4655                           ;mcc_generated_files/tmr1.c: 81:     PIR1bits.TMR1IF = 0;
  4656  05A2  1011               	bcf	17,0	;volatile
  4657                           
  4658                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  4659  05A3  0021               	movlb	1	; select bank1
  4660  05A4  1411               	bsf	17,0	;volatile
  4661                           
  4662                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  4663  05A5  308F               	movlw	low _TMR1_DefaultInterruptHandler
  4664  05A6  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  4665  05A7  3007               	movlw	high _TMR1_DefaultInterruptHandler
  4666  05A8  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  4667  05A9  2735               	fcall	_TMR1_SetInterruptHandler
  4668                           
  4669                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x11;
  4670  05AA  3011               	movlw	17
  4671  05AB  0098               	movwf	24	;volatile
  4672  05AC  0008               	return
  4673  05AD                     __end_of_TMR1_Initialize:	
  4674                           
  4675                           	psect	text19
  4676  0735                     __ptext19:	
  4677 ;; *************** function _TMR1_SetInterruptHandler *****************
  4678 ;; Defined at:
  4679 ;;		line 171 in file "mcc_generated_files/tmr1.c"
  4680 ;; Parameters:    Size  Location     Type
  4681 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  4682 ;;		 -> _TMR1_Ready(1), TMR1_DefaultInterruptHandler(1), 
  4683 ;; Auto vars:     Size  Location     Type
  4684 ;;		None
  4685 ;; Return value:  Size  Location     Type
  4686 ;;                  1    wreg      void 
  4687 ;; Registers used:
  4688 ;;		wreg
  4689 ;; Tracked objects:
  4690 ;;		On entry : 1E/0
  4691 ;;		On exit  : 1F/0
  4692 ;;		Unchanged: 0/0
  4693 ;; Data sizes:     COMMON   BANK0   BANK1
  4694 ;;      Params:         2       0       0
  4695 ;;      Locals:         0       0       0
  4696 ;;      Temps:          0       0       0
  4697 ;;      Totals:         2       0       0
  4698 ;;Total ram usage:        2 bytes
  4699 ;; Hardware stack levels used:    1
  4700 ;; Hardware stack levels required when called:    4
  4701 ;; This function calls:
  4702 ;;		Nothing
  4703 ;; This function is called by:
  4704 ;;		_TMR1_Initialize
  4705 ;;		_logger_initialize
  4706 ;; This function uses a non-reentrant model
  4707 ;;
  4708                           
  4709                           
  4710                           ;psect for function _TMR1_SetInterruptHandler
  4711  0735                     _TMR1_SetInterruptHandler:	
  4712                           
  4713                           ;mcc_generated_files/tmr1.c: 172:     TMR1_InterruptHandler = InterruptHandler;
  4714                           
  4715                           ;incstack = 0
  4716                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  4717  0735  0873               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  4718  0736  0020               	movlb	0	; select bank0
  4719  0737  00D8               	movwf	_TMR1_InterruptHandler+1
  4720  0738  0872               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  4721  0739  00D7               	movwf	_TMR1_InterruptHandler
  4722  073A  0008               	return
  4723  073B                     __end_of_TMR1_SetInterruptHandler:	
  4724                           
  4725                           	psect	text20
  4726  0449                     __ptext20:	
  4727 ;; *************** function _PIN_MANAGER_Initialize *****************
  4728 ;; Defined at:
  4729 ;;		line 59 in file "mcc_generated_files/pin_manager.c"
  4730 ;; Parameters:    Size  Location     Type
  4731 ;;		None
  4732 ;; Auto vars:     Size  Location     Type
  4733 ;;		None
  4734 ;; Return value:  Size  Location     Type
  4735 ;;                  1    wreg      void 
  4736 ;; Registers used:
  4737 ;;		wreg, status,2, status,0, pclath, cstack
  4738 ;; Tracked objects:
  4739 ;;		On entry : B1F/0
  4740 ;;		On exit  : 1F/0
  4741 ;;		Unchanged: 0/0
  4742 ;; Data sizes:     COMMON   BANK0   BANK1
  4743 ;;      Params:         0       0       0
  4744 ;;      Locals:         0       0       0
  4745 ;;      Temps:          0       0       0
  4746 ;;      Totals:         0       0       0
  4747 ;;Total ram usage:        0 bytes
  4748 ;; Hardware stack levels used:    1
  4749 ;; Hardware stack levels required when called:    5
  4750 ;; This function calls:
  4751 ;;		_IOCAF4_SetInterruptHandler
  4752 ;; This function is called by:
  4753 ;;		_SYSTEM_Initialize
  4754 ;; This function uses a non-reentrant model
  4755 ;;
  4756                           
  4757                           
  4758                           ;psect for function _PIN_MANAGER_Initialize
  4759  0449                     _PIN_MANAGER_Initialize:	
  4760                           
  4761                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
  4762                           
  4763                           ;incstack = 0
  4764                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4765  0449  0022               	movlb	2	; select bank2
  4766  044A  018C               	clrf	12	;volatile
  4767                           
  4768                           ;mcc_generated_files/pin_manager.c: 65:     LATC = 0x00;
  4769  044B  018E               	clrf	14	;volatile
  4770                           
  4771                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x1F;
  4772  044C  301F               	movlw	31
  4773  044D  0021               	movlb	1	; select bank1
  4774  044E  008C               	movwf	12	;volatile
  4775                           
  4776                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0x2F;
  4777  044F  302F               	movlw	47
  4778  0450  008E               	movwf	14	;volatile
  4779                           
  4780                           ;mcc_generated_files/pin_manager.c: 76:     ANSELC = 0x0F;
  4781  0451  300F               	movlw	15
  4782  0452  0023               	movlb	3	; select bank3
  4783  0453  008E               	movwf	14	;volatile
  4784                           
  4785                           ;mcc_generated_files/pin_manager.c: 77:     ANSELA = 0x07;
  4786  0454  3007               	movlw	7
  4787  0455  008C               	movwf	12	;volatile
  4788                           
  4789                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x10;
  4790  0456  3010               	movlw	16
  4791  0457  0024               	movlb	4	; select bank4
  4792  0458  008C               	movwf	12	;volatile
  4793                           
  4794                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
  4795  0459  018E               	clrf	14	;volatile
  4796                           
  4797                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 0;
  4798  045A  0021               	movlb	1	; select bank1
  4799  045B  1395               	bcf	21,7	;volatile
  4800                           
  4801                           ;mcc_generated_files/pin_manager.c: 93:     APFCON = 0x00;
  4802  045C  0022               	movlb	2	; select bank2
  4803  045D  019D               	clrf	29	;volatile
  4804                           
  4805                           ;mcc_generated_files/pin_manager.c: 99:     IOCAFbits.IOCAF4 = 0;
  4806  045E  0027               	movlb	7	; select bank7
  4807  045F  1213               	bcf	19,4	;volatile
  4808                           
  4809                           ;mcc_generated_files/pin_manager.c: 101:     IOCANbits.IOCAN4 = 1;
  4810  0460  1612               	bsf	18,4	;volatile
  4811                           
  4812                           ;mcc_generated_files/pin_manager.c: 103:     IOCAPbits.IOCAP4 = 1;
  4813  0461  1611               	bsf	17,4	;volatile
  4814                           
  4815                           ;mcc_generated_files/pin_manager.c: 108:     IOCAF4_SetInterruptHandler(IOCAF4_DefaultIn
      +                          terruptHandler);
  4816  0462  3090               	movlw	low _IOCAF4_DefaultInterruptHandler
  4817  0463  00F2               	movwf	IOCAF4_SetInterruptHandler@InterruptHandler
  4818  0464  3007               	movlw	high _IOCAF4_DefaultInterruptHandler
  4819  0465  00F3               	movwf	IOCAF4_SetInterruptHandler@InterruptHandler+1
  4820  0466  273B               	fcall	_IOCAF4_SetInterruptHandler
  4821                           
  4822                           ;mcc_generated_files/pin_manager.c: 111:     INTCONbits.IOCIE = 1;
  4823  0467  158B               	bsf	11,3	;volatile
  4824  0468  0008               	return
  4825  0469                     __end_of_PIN_MANAGER_Initialize:	
  4826                           
  4827                           	psect	text21
  4828  073B                     __ptext21:	
  4829 ;; *************** function _IOCAF4_SetInterruptHandler *****************
  4830 ;; Defined at:
  4831 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
  4832 ;; Parameters:    Size  Location     Type
  4833 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  4834 ;;		 -> _IOC_Ready(1), IOCAF4_DefaultInterruptHandler(1), 
  4835 ;; Auto vars:     Size  Location     Type
  4836 ;;		None
  4837 ;; Return value:  Size  Location     Type
  4838 ;;                  1    wreg      void 
  4839 ;; Registers used:
  4840 ;;		wreg
  4841 ;; Tracked objects:
  4842 ;;		On entry : 18/0
  4843 ;;		On exit  : 1F/0
  4844 ;;		Unchanged: 0/0
  4845 ;; Data sizes:     COMMON   BANK0   BANK1
  4846 ;;      Params:         2       0       0
  4847 ;;      Locals:         0       0       0
  4848 ;;      Temps:          0       0       0
  4849 ;;      Totals:         2       0       0
  4850 ;;Total ram usage:        2 bytes
  4851 ;; Hardware stack levels used:    1
  4852 ;; Hardware stack levels required when called:    4
  4853 ;; This function calls:
  4854 ;;		Nothing
  4855 ;; This function is called by:
  4856 ;;		_PIN_MANAGER_Initialize
  4857 ;;		_logger_initialize
  4858 ;; This function uses a non-reentrant model
  4859 ;;
  4860                           
  4861                           
  4862                           ;psect for function _IOCAF4_SetInterruptHandler
  4863  073B                     _IOCAF4_SetInterruptHandler:	
  4864                           
  4865                           ;mcc_generated_files/pin_manager.c: 143:     IOCAF4_InterruptHandler = InterruptHandler;
  4866                           
  4867                           ;incstack = 0
  4868                           ; Regs used in _IOCAF4_SetInterruptHandler: [wreg]
  4869  073B  0873               	movf	IOCAF4_SetInterruptHandler@InterruptHandler+1,w
  4870  073C  0020               	movlb	0	; select bank0
  4871  073D  00EE               	movwf	_IOCAF4_InterruptHandler+1
  4872  073E  0872               	movf	IOCAF4_SetInterruptHandler@InterruptHandler,w
  4873  073F  00ED               	movwf	_IOCAF4_InterruptHandler
  4874  0740  0008               	return
  4875  0741                     __end_of_IOCAF4_SetInterruptHandler:	
  4876                           
  4877                           	psect	text22
  4878  06D3                     __ptext22:	
  4879 ;; *************** function _OSCILLATOR_Initialize *****************
  4880 ;; Defined at:
  4881 ;;		line 61 in file "mcc_generated_files/mcc.c"
  4882 ;; Parameters:    Size  Location     Type
  4883 ;;		None
  4884 ;; Auto vars:     Size  Location     Type
  4885 ;;		None
  4886 ;; Return value:  Size  Location     Type
  4887 ;;                  1    wreg      void 
  4888 ;; Registers used:
  4889 ;;		wreg, status,2
  4890 ;; Tracked objects:
  4891 ;;		On entry : 1F/0
  4892 ;;		On exit  : 1F/1
  4893 ;;		Unchanged: 0/0
  4894 ;; Data sizes:     COMMON   BANK0   BANK1
  4895 ;;      Params:         0       0       0
  4896 ;;      Locals:         0       0       0
  4897 ;;      Temps:          0       0       0
  4898 ;;      Totals:         0       0       0
  4899 ;;Total ram usage:        0 bytes
  4900 ;; Hardware stack levels used:    1
  4901 ;; Hardware stack levels required when called:    4
  4902 ;; This function calls:
  4903 ;;		Nothing
  4904 ;; This function is called by:
  4905 ;;		_SYSTEM_Initialize
  4906 ;; This function uses a non-reentrant model
  4907 ;;
  4908                           
  4909                           
  4910                           ;psect for function _OSCILLATOR_Initialize
  4911  06D3                     _OSCILLATOR_Initialize:	
  4912                           
  4913                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  4914                           
  4915                           ;incstack = 0
  4916                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4917  06D3  3070               	movlw	112
  4918  06D4  0021               	movlb	1	; select bank1
  4919  06D5  0099               	movwf	25	;volatile
  4920                           
  4921                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  4922  06D6  0198               	clrf	24	;volatile
  4923                           
  4924                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  4925  06D7  0022               	movlb	2	; select bank2
  4926  06D8  0196               	clrf	22	;volatile
  4927  06D9                     l211:	
  4928                           ;mcc_generated_files/mcc.c: 71:     {;mcc_generated_files/mcc.c: 72:     }
  4929                           
  4930                           
  4931                           ;mcc_generated_files/mcc.c: 70:     while(PLLR == 0)
  4932  06D9  0021               	movlb	1	; select bank1
  4933  06DA  1B1A               	btfsc	26,6	;volatile
  4934  06DB  0008               	return
  4935  06DC  2ED9               	goto	l211
  4936  06DD                     __end_of_OSCILLATOR_Initialize:	
  4937                           
  4938                           	psect	text23
  4939  03C4                     __ptext23:	
  4940 ;; *************** function _EUSART_Initialize *****************
  4941 ;; Defined at:
  4942 ;;		line 75 in file "mcc_generated_files/eusart.c"
  4943 ;; Parameters:    Size  Location     Type
  4944 ;;		None
  4945 ;; Auto vars:     Size  Location     Type
  4946 ;;		None
  4947 ;; Return value:  Size  Location     Type
  4948 ;;                  1    wreg      void 
  4949 ;; Registers used:
  4950 ;;		wreg, status,2, status,0, pclath, cstack
  4951 ;; Tracked objects:
  4952 ;;		On entry : 1F/1
  4953 ;;		On exit  : 1F/1
  4954 ;;		Unchanged: 0/0
  4955 ;; Data sizes:     COMMON   BANK0   BANK1
  4956 ;;      Params:         0       0       0
  4957 ;;      Locals:         0       0       0
  4958 ;;      Temps:          0       0       0
  4959 ;;      Totals:         0       0       0
  4960 ;;Total ram usage:        0 bytes
  4961 ;; Hardware stack levels used:    1
  4962 ;; Hardware stack levels required when called:    5
  4963 ;; This function calls:
  4964 ;;		_EUSART_SetRxInterruptHandler
  4965 ;;		_EUSART_SetTxInterruptHandler
  4966 ;; This function is called by:
  4967 ;;		_SYSTEM_Initialize
  4968 ;; This function uses a non-reentrant model
  4969 ;;
  4970                           
  4971                           
  4972                           ;psect for function _EUSART_Initialize
  4973  03C4                     _EUSART_Initialize:	
  4974  03C4                     l2685:	
  4975                           ;incstack = 0
  4976                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4977                           
  4978                           
  4979                           ;mcc_generated_files/eusart.c: 78:     PIE1bits.RCIE = 0;
  4980  03C4  1291               	bcf	17,5	;volatile
  4981                           
  4982                           ;mcc_generated_files/eusart.c: 79:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  4983  03C5  30D9               	movlw	low _EUSART_Receive_ISR
  4984  03C6  00F2               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  4985  03C7  3005               	movlw	high _EUSART_Receive_ISR
  4986  03C8  00F3               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  4987  03C9  2747               	fcall	_EUSART_SetRxInterruptHandler
  4988                           
  4989                           ;mcc_generated_files/eusart.c: 80:     PIE1bits.TXIE = 0;
  4990  03CA  0021               	movlb	1	; select bank1
  4991  03CB  1211               	bcf	17,4	;volatile
  4992                           
  4993                           ;mcc_generated_files/eusart.c: 81:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  4994  03CC  30C3               	movlw	low _EUSART_Transmit_ISR
  4995  03CD  00F2               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  4996  03CE  3005               	movlw	high _EUSART_Transmit_ISR
  4997  03CF  00F3               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  4998  03D0  2741               	fcall	_EUSART_SetTxInterruptHandler
  4999                           
  5000                           ;mcc_generated_files/eusart.c: 85:     BAUDCON = 0x08;
  5001  03D1  3008               	movlw	8
  5002  03D2  0023               	movlb	3	; select bank3
  5003  03D3  009F               	movwf	31	;volatile
  5004                           
  5005                           ;mcc_generated_files/eusart.c: 88:     RCSTA = 0x90;
  5006  03D4  3090               	movlw	144
  5007  03D5  009D               	movwf	29	;volatile
  5008                           
  5009                           ;mcc_generated_files/eusart.c: 91:     TXSTA = 0x24;
  5010  03D6  3024               	movlw	36
  5011  03D7  009E               	movwf	30	;volatile
  5012                           
  5013                           ;mcc_generated_files/eusart.c: 94:     SPBRGL = 0x44;
  5014  03D8  3044               	movlw	68
  5015  03D9  009B               	movwf	27	;volatile
  5016                           
  5017                           ;mcc_generated_files/eusart.c: 97:     SPBRGH = 0x00;
  5018  03DA  019C               	clrf	28	;volatile
  5019                           
  5020                           ;mcc_generated_files/eusart.c: 101:     eusartTxHead = 0;
  5021  03DB  01FB               	clrf	_eusartTxHead	;volatile
  5022                           
  5023                           ;mcc_generated_files/eusart.c: 102:     eusartTxTail = 0;
  5024  03DC  0020               	movlb	0	; select bank0
  5025  03DD  01EB               	clrf	_eusartTxTail	;volatile
  5026                           
  5027                           ;mcc_generated_files/eusart.c: 103:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  5028  03DE  3008               	movlw	8
  5029  03DF  00FA               	movwf	_eusartTxBufferRemaining	;volatile
  5030                           
  5031                           ;mcc_generated_files/eusart.c: 105:     eusartRxHead = 0;
  5032  03E0  01EA               	clrf	_eusartRxHead	;volatile
  5033                           
  5034                           ;mcc_generated_files/eusart.c: 106:     eusartRxTail = 0;
  5035  03E1  01E9               	clrf	_eusartRxTail	;volatile
  5036                           
  5037                           ;mcc_generated_files/eusart.c: 107:     eusartRxCount = 0;
  5038  03E2  01E8               	clrf	_eusartRxCount	;volatile
  5039                           
  5040                           ;mcc_generated_files/eusart.c: 110:     PIE1bits.RCIE = 1;
  5041  03E3  0021               	movlb	1	; select bank1
  5042  03E4  1691               	bsf	17,5	;volatile
  5043  03E5  0008               	return
  5044  03E6                     __end_of_EUSART_Initialize:	
  5045                           
  5046                           	psect	text24
  5047  0741                     __ptext24:	
  5048 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  5049 ;; Defined at:
  5050 ;;		line 211 in file "mcc_generated_files/eusart.c"
  5051 ;; Parameters:    Size  Location     Type
  5052 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  5053 ;;		 -> EUSART_Transmit_ISR(1), 
  5054 ;; Auto vars:     Size  Location     Type
  5055 ;;		None
  5056 ;; Return value:  Size  Location     Type
  5057 ;;                  1    wreg      void 
  5058 ;; Registers used:
  5059 ;;		wreg
  5060 ;; Tracked objects:
  5061 ;;		On entry : 1F/1
  5062 ;;		On exit  : 1F/0
  5063 ;;		Unchanged: 0/0
  5064 ;; Data sizes:     COMMON   BANK0   BANK1
  5065 ;;      Params:         2       0       0
  5066 ;;      Locals:         0       0       0
  5067 ;;      Temps:          0       0       0
  5068 ;;      Totals:         2       0       0
  5069 ;;Total ram usage:        2 bytes
  5070 ;; Hardware stack levels used:    1
  5071 ;; Hardware stack levels required when called:    4
  5072 ;; This function calls:
  5073 ;;		Nothing
  5074 ;; This function is called by:
  5075 ;;		_EUSART_Initialize
  5076 ;; This function uses a non-reentrant model
  5077 ;;
  5078                           
  5079                           
  5080                           ;psect for function _EUSART_SetTxInterruptHandler
  5081  0741                     _EUSART_SetTxInterruptHandler:	
  5082                           
  5083                           ;mcc_generated_files/eusart.c: 212:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  5084                           
  5085                           ;incstack = 0
  5086                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  5087  0741  0873               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  5088  0742  0020               	movlb	0	; select bank0
  5089  0743  00E0               	movwf	_EUSART_TxDefaultInterruptHandler+1
  5090  0744  0872               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  5091  0745  00DF               	movwf	_EUSART_TxDefaultInterruptHandler
  5092  0746  0008               	return
  5093  0747                     __end_of_EUSART_SetTxInterruptHandler:	
  5094                           
  5095                           	psect	text25
  5096  0747                     __ptext25:	
  5097 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  5098 ;; Defined at:
  5099 ;;		line 215 in file "mcc_generated_files/eusart.c"
  5100 ;; Parameters:    Size  Location     Type
  5101 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  5102 ;;		 -> EUSART_Receive_ISR(1), 
  5103 ;; Auto vars:     Size  Location     Type
  5104 ;;		None
  5105 ;; Return value:  Size  Location     Type
  5106 ;;                  1    wreg      void 
  5107 ;; Registers used:
  5108 ;;		wreg
  5109 ;; Tracked objects:
  5110 ;;		On entry : 1F/1
  5111 ;;		On exit  : 1F/0
  5112 ;;		Unchanged: 0/0
  5113 ;; Data sizes:     COMMON   BANK0   BANK1
  5114 ;;      Params:         2       0       0
  5115 ;;      Locals:         0       0       0
  5116 ;;      Temps:          0       0       0
  5117 ;;      Totals:         2       0       0
  5118 ;;Total ram usage:        2 bytes
  5119 ;; Hardware stack levels used:    1
  5120 ;; Hardware stack levels required when called:    4
  5121 ;; This function calls:
  5122 ;;		Nothing
  5123 ;; This function is called by:
  5124 ;;		_EUSART_Initialize
  5125 ;; This function uses a non-reentrant model
  5126 ;;
  5127                           
  5128                           
  5129                           ;psect for function _EUSART_SetRxInterruptHandler
  5130  0747                     _EUSART_SetRxInterruptHandler:	
  5131                           
  5132                           ;mcc_generated_files/eusart.c: 216:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  5133                           
  5134                           ;incstack = 0
  5135                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  5136  0747  0873               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  5137  0748  0020               	movlb	0	; select bank0
  5138  0749  00DE               	movwf	_EUSART_RxDefaultInterruptHandler+1
  5139  074A  0872               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  5140  074B  00DD               	movwf	_EUSART_RxDefaultInterruptHandler
  5141  074C  0008               	return
  5142  074D                     __end_of_EUSART_SetRxInterruptHandler:	
  5143                           
  5144                           	psect	text26
  5145  06DD                     __ptext26:	
  5146 ;; *************** function _ADC_Initialize *****************
  5147 ;; Defined at:
  5148 ;;		line 65 in file "mcc_generated_files/adc.c"
  5149 ;; Parameters:    Size  Location     Type
  5150 ;;		None
  5151 ;; Auto vars:     Size  Location     Type
  5152 ;;		None
  5153 ;; Return value:  Size  Location     Type
  5154 ;;                  1    wreg      void 
  5155 ;; Registers used:
  5156 ;;		wreg, status,2
  5157 ;; Tracked objects:
  5158 ;;		On entry : 1F/0
  5159 ;;		On exit  : 1F/1
  5160 ;;		Unchanged: 0/0
  5161 ;; Data sizes:     COMMON   BANK0   BANK1
  5162 ;;      Params:         0       0       0
  5163 ;;      Locals:         0       0       0
  5164 ;;      Temps:          0       0       0
  5165 ;;      Totals:         0       0       0
  5166 ;;Total ram usage:        0 bytes
  5167 ;; Hardware stack levels used:    1
  5168 ;; Hardware stack levels required when called:    4
  5169 ;; This function calls:
  5170 ;;		Nothing
  5171 ;; This function is called by:
  5172 ;;		_SYSTEM_Initialize
  5173 ;; This function uses a non-reentrant model
  5174 ;;
  5175                           
  5176                           
  5177                           ;psect for function _ADC_Initialize
  5178  06DD                     _ADC_Initialize:	
  5179                           
  5180                           ;mcc_generated_files/adc.c: 70:     ADCON0 = 0x01;
  5181                           
  5182                           ;incstack = 0
  5183                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  5184  06DD  3001               	movlw	1
  5185  06DE  0021               	movlb	1	; select bank1
  5186  06DF  009D               	movwf	29	;volatile
  5187                           
  5188                           ;mcc_generated_files/adc.c: 73:     ADCON1 = 0xF0;
  5189  06E0  30F0               	movlw	240
  5190  06E1  009E               	movwf	30	;volatile
  5191                           
  5192                           ;mcc_generated_files/adc.c: 76:     ADRESL = 0x00;
  5193  06E2  019B               	clrf	27	;volatile
  5194                           
  5195                           ;mcc_generated_files/adc.c: 79:     ADRESH = 0x00;
  5196  06E3  019C               	clrf	28	;volatile
  5197                           
  5198                           ;mcc_generated_files/adc.c: 82:     PIE1bits.ADIE = 1;
  5199  06E4  1711               	bsf	17,6	;volatile
  5200  06E5  0008               	return
  5201  06E6                     __end_of_ADC_Initialize:	
  5202                           
  5203                           	psect	text27
  5204  03E6                     __ptext27:	
  5205 ;; *************** function _ESP_message_handler *****************
  5206 ;; Defined at:
  5207 ;;		line 159 in file "esp1.c"
  5208 ;; Parameters:    Size  Location     Type
  5209 ;;		None
  5210 ;; Auto vars:     Size  Location     Type
  5211 ;;  index           2    0        PTR unsigned char 
  5212 ;;  ret             1   23[BANK0 ] unsigned char 
  5213 ;;  aux             1    0        unsigned char 
  5214 ;; Return value:  Size  Location     Type
  5215 ;;                  1    wreg      void 
  5216 ;; Registers used:
  5217 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5218 ;; Tracked objects:
  5219 ;;		On entry : 1F/0
  5220 ;;		On exit  : 0/0
  5221 ;;		Unchanged: 0/0
  5222 ;; Data sizes:     COMMON   BANK0   BANK1
  5223 ;;      Params:         0       0       0
  5224 ;;      Locals:         0       1       0
  5225 ;;      Temps:          0       2       0
  5226 ;;      Totals:         0       3       0
  5227 ;;Total ram usage:        3 bytes
  5228 ;; Hardware stack levels used:    1
  5229 ;; Hardware stack levels required when called:   13
  5230 ;; This function calls:
  5231 ;;		_ESP_process_rx_data
  5232 ;;		_ESP_read
  5233 ;; This function is called by:
  5234 ;;		_main
  5235 ;; This function uses a non-reentrant model
  5236 ;;
  5237                           
  5238                           
  5239                           ;psect for function _ESP_message_handler
  5240  03E6                     _ESP_message_handler:	
  5241                           
  5242                           ;esp1.c: 161:     unsigned char ret,aux;;esp1.c: 162:     char *index;;esp1.c: 164:     
      +                          ret = ESP_read();
  5243                           
  5244                           ;incstack = 0
  5245                           ; Regs used in _ESP_message_handler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5246  03E6  239F               	fcall	_ESP_read
  5247  03E7  00B7               	movwf	ESP_message_handler@ret
  5248                           
  5249                           ;esp1.c: 166:     switch (ret) {
  5250  03E8  2BF1               	goto	l3539
  5251  03E9                     l3531:	
  5252                           
  5253                           ;esp1.c: 171:             ESP_process_rx_data();
  5254  03E9  2D0C               	ljmp	l3469
  5255  03EA                     l3533:	
  5256                           ;esp1.c: 172:             break;
  5257                           
  5258                           
  5259                           ;esp1.c: 175:             esp_channel = esp_read_data[0];
  5260  03EA  0021               	movlb	1	; select bank1
  5261  03EB  0828               	movf	_esp_read_data^(0+128),w	;volatile
  5262  03EC  0020               	movlb	0	; select bank0
  5263  03ED  00E4               	movwf	_esp_channel	;volatile
  5264                           
  5265                           ;esp1.c: 176:             break;
  5266  03EE  0008               	return
  5267  03EF                     l3535:	
  5268                           
  5269                           ;esp1.c: 179:             esp_channel = 0;
  5270  03EF  01E4               	clrf	_esp_channel	;volatile
  5271                           
  5272                           ;esp1.c: 180:             break;
  5273  03F0  0008               	return
  5274  03F1                     l3539:	
  5275  03F1  0837               	movf	ESP_message_handler@ret,w
  5276  03F2  00B5               	movwf	??_ESP_message_handler
  5277  03F3  01B6               	clrf	??_ESP_message_handler+1
  5278                           
  5279                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5280                           ; Switch size 1, requested type "space"
  5281                           ; Number of cases is 1, Range of values is 0 to 0
  5282                           ; switch strategies available:
  5283                           ; Name         Instructions Cycles
  5284                           ; simple_byte            4     3 (average)
  5285                           ; direct_byte            8     6 (fixed)
  5286                           ; jumptable            260     6 (fixed)
  5287                           ;	Chosen strategy is simple_byte
  5288  03F4  0836               	movf	??_ESP_message_handler+1,w
  5289  03F5  3A00               	xorlw	0	; case 0
  5290  03F6  1903               	skipnz
  5291  03F7  2BF9               	goto	l3645
  5292  03F8  2C07               	goto	l498
  5293  03F9                     l3645:	
  5294                           
  5295                           ; Switch size 1, requested type "space"
  5296                           ; Number of cases is 4, Range of values is 0 to 8
  5297                           ; switch strategies available:
  5298                           ; Name         Instructions Cycles
  5299                           ; simple_byte           13     7 (average)
  5300                           ; direct_byte           24     6 (fixed)
  5301                           ; jumptable            260     6 (fixed)
  5302                           ;	Chosen strategy is simple_byte
  5303  03F9  0835               	movf	??_ESP_message_handler,w
  5304  03FA  3A00               	xorlw	0	; case 0
  5305  03FB  1903               	skipnz
  5306  03FC  2C07               	goto	l498
  5307  03FD  3A04               	xorlw	4	; case 4
  5308  03FE  1903               	skipnz
  5309  03FF  2BE9               	goto	l3531
  5310  0400  3A02               	xorlw	2	; case 6
  5311  0401  1903               	skipnz
  5312  0402  2BEA               	goto	l3533
  5313  0403  3A0E               	xorlw	14	; case 8
  5314  0404  1903               	skipnz
  5315  0405  2BEF               	goto	l3535
  5316  0406  2C07               	goto	l498
  5317  0407                     l498:	
  5318  0407  0008               	return
  5319  0408                     __end_of_ESP_message_handler:	
  5320                           
  5321                           	psect	text28
  5322  050C                     __ptext28:	
  5323 ;; *************** function _ESP_process_rx_data *****************
  5324 ;; Defined at:
  5325 ;;		line 144 in file "esp1.c"
  5326 ;; Parameters:    Size  Location     Type
  5327 ;;		None
  5328 ;; Auto vars:     Size  Location     Type
  5329 ;;  aux             1   20[BANK0 ] unsigned char 
  5330 ;;  index           1   19[BANK0 ] PTR unsigned char 
  5331 ;;		 -> NULL(0), esp_read_data(24), 
  5332 ;; Return value:  Size  Location     Type
  5333 ;;                  1    wreg      void 
  5334 ;; Registers used:
  5335 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5336 ;; Tracked objects:
  5337 ;;		On entry : 1F/0
  5338 ;;		On exit  : 0/0
  5339 ;;		Unchanged: 0/0
  5340 ;; Data sizes:     COMMON   BANK0   BANK1
  5341 ;;      Params:         0       0       0
  5342 ;;      Locals:         0       2       0
  5343 ;;      Temps:          0       0       0
  5344 ;;      Totals:         0       2       0
  5345 ;;Total ram usage:        2 bytes
  5346 ;; Hardware stack levels used:    1
  5347 ;; Hardware stack levels required when called:   12
  5348 ;; This function calls:
  5349 ;;		Absolute function
  5350 ;;		_ESP_default_application_handler
  5351 ;;		_process_message
  5352 ;;		_strstr
  5353 ;; This function is called by:
  5354 ;;		_ESP_message_handler
  5355 ;; This function uses a non-reentrant model
  5356 ;;
  5357                           
  5358                           
  5359                           ;psect for function _ESP_process_rx_data
  5360  050C                     _ESP_process_rx_data:	
  5361  050C                     l3469:	
  5362                           ;incstack = 0
  5363                           ; Regs used in _ESP_process_rx_data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5364                           
  5365                           
  5366                           ;esp1.c: 146:     char *index;;esp1.c: 147:     unsigned char aux;;esp1.c: 149:     esp_
      +                          channel = esp_read_data[5];
  5367  050C  0021               	movlb	1	; select bank1
  5368  050D  082D               	movf	(_esp_read_data^(0+128)+5),w	;volatile
  5369  050E  0020               	movlb	0	; select bank0
  5370  050F  00E4               	movwf	_esp_channel	;volatile
  5371                           
  5372                           ;esp1.c: 150:     index = strstr(esp_read_data,":");
  5373  0510  3084               	movlw	low (STR_15| (0+32768))
  5374  0511  00A4               	movwf	strstr@n
  5375  0512  3087               	movlw	high (STR_15| (0+32768))
  5376  0513  00A5               	movwf	strstr@n+1
  5377  0514  30A8               	movlw	(low (_esp_read_data| 0))& (0+255)
  5378  0515  2322               	fcall	_strstr
  5379  0516  00B3               	movwf	ESP_process_rx_data@index
  5380                           
  5381                           ;esp1.c: 151:     aux = *(++index);
  5382  0517  0AB3               	incf	ESP_process_rx_data@index,f
  5383  0518  0833               	movf	ESP_process_rx_data@index,w
  5384  0519  0086               	movwf	6
  5385  051A  0187               	clrf	7
  5386  051B  0801               	movf	1,w
  5387  051C  00B4               	movwf	ESP_process_rx_data@aux
  5388                           
  5389                           ;esp1.c: 156:     ESP_external_message_handler(aux);
  5390  051D  00B0               	movwf	ESP_default_application_handler@data
  5391  051E  0856               	movf	_ESP_external_message_handler+1,w
  5392  051F  008A               	movwf	10
  5393  0520  0855               	movf	_ESP_external_message_handler,w
  5394  0521  000A               	callw
  5395  0522  3185               	pagesel	$
  5396  0523  0008               	return
  5397  0524                     __end_of_ESP_process_rx_data:	
  5398                           
  5399                           	psect	text29
  5400  078E                     __ptext29:	
  5401 ;; *************** function _ESP_default_application_handler *****************
  5402 ;; Defined at:
  5403 ;;		line 219 in file "esp1.c"
  5404 ;; Parameters:    Size  Location     Type
  5405 ;;  data            1   16[BANK0 ] unsigned char 
  5406 ;; Auto vars:     Size  Location     Type
  5407 ;;		None
  5408 ;; Return value:  Size  Location     Type
  5409 ;;                  1    wreg      void 
  5410 ;; Registers used:
  5411 ;;		None
  5412 ;; Tracked objects:
  5413 ;;		On entry : 1F/0
  5414 ;;		On exit  : 1F/0
  5415 ;;		Unchanged: 1F/0
  5416 ;; Data sizes:     COMMON   BANK0   BANK1
  5417 ;;      Params:         0       1       0
  5418 ;;      Locals:         0       0       0
  5419 ;;      Temps:          0       0       0
  5420 ;;      Totals:         0       1       0
  5421 ;;Total ram usage:        1 bytes
  5422 ;; Hardware stack levels used:    1
  5423 ;; Hardware stack levels required when called:    4
  5424 ;; This function calls:
  5425 ;;		Nothing
  5426 ;; This function is called by:
  5427 ;;		_ESP_initialize
  5428 ;;		_ESP_process_rx_data
  5429 ;; This function uses a non-reentrant model
  5430 ;;
  5431                           
  5432                           
  5433                           ;psect for function _ESP_default_application_handler
  5434  078E                     _ESP_default_application_handler:	
  5435                           
  5436                           ;incstack = 0
  5437                           ; Regs used in _ESP_default_application_handler: []
  5438  078E  0008               	return
  5439  078F                     __end_of_ESP_default_application_handler:	
  5440                           
  5441                           	psect	text30
  5442  02B4                     __ptext30:	
  5443 ;; *************** function _process_message *****************
  5444 ;; Defined at:
  5445 ;;		line 45 in file "logger.c"
  5446 ;; Parameters:    Size  Location     Type
  5447 ;;  message         1   16[BANK0 ] unsigned char 
  5448 ;; Auto vars:     Size  Location     Type
  5449 ;;		None
  5450 ;; Return value:  Size  Location     Type
  5451 ;;                  1    wreg      void 
  5452 ;; Registers used:
  5453 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5454 ;; Tracked objects:
  5455 ;;		On entry : 1F/0
  5456 ;;		On exit  : 0/0
  5457 ;;		Unchanged: 0/0
  5458 ;; Data sizes:     COMMON   BANK0   BANK1
  5459 ;;      Params:         0       1       0
  5460 ;;      Locals:         0       0       0
  5461 ;;      Temps:          0       2       0
  5462 ;;      Totals:         0       3       0
  5463 ;;Total ram usage:        3 bytes
  5464 ;; Hardware stack levels used:    1
  5465 ;; Hardware stack levels required when called:   11
  5466 ;; This function calls:
  5467 ;;		_ADC_StartConversion
  5468 ;;		_ESP_write
  5469 ;;		_TMR1_StartTimer
  5470 ;;		_TMR1_StopTimer
  5471 ;;		_toggle_format
  5472 ;; This function is called by:
  5473 ;;		_main
  5474 ;;		_logger_initialize
  5475 ;;		_ESP_process_rx_data
  5476 ;; This function uses a non-reentrant model
  5477 ;;
  5478                           
  5479                           
  5480                           ;psect for function _process_message
  5481  02B4                     _process_message:	
  5482                           
  5483                           ;logger.c: 45: void process_message(unsigned char message);logger.c: 46: {;logger.c: 49:
      +                               switch (message) {
  5484                           
  5485                           ;incstack = 0
  5486                           ; Regs used in _process_message: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5487  02B4  2ACE               	goto	l3437
  5488  02B5                     l3417:	
  5489                           
  5490                           ;logger.c: 54:             ESP_write("Ok\n",3);
  5491  02B5  305C               	movlw	low (STR_20| (0+32768))
  5492  02B6  00AB               	movwf	ESP_write@pt
  5493  02B7  3087               	movlw	high (STR_20| (0+32768))
  5494  02B8  00AC               	movwf	ESP_write@pt+1
  5495  02B9  3003               	movlw	3
  5496  02BA  00AD               	movwf	ESP_write@length
  5497  02BB  2903               	ljmp	l3371
  5498  02BC                     l3419:	
  5499                           ;logger.c: 56:             break;
  5500                           
  5501                           
  5502                           ;logger.c: 59:             ADC_StartConversion();
  5503  02BC  2F7C               	ljmp	l2565
  5504  02BD                     l3421:	
  5505                           ;logger.c: 60:             break;
  5506                           
  5507                           
  5508                           ;logger.c: 63:             toggle_format();
  5509  02BD  2E02               	ljmp	l3405
  5510  02BE                     l3423:	
  5511                           ;logger.c: 64:             break;
  5512                           
  5513                           
  5514                           ;logger.c: 67:             if (TMR1_state == TMR1_RUNNING)
  5515  02BE  0B62               	decfsz	_TMR1_state,w	;volatile
  5516  02BF  2AC1               	goto	l3427
  5517  02C0  0008               	return
  5518  02C1                     l3427:	
  5519                           
  5520                           ;logger.c: 69:             TMR1_StartTimer();
  5521  02C1  278A               	fcall	_TMR1_StartTimer
  5522                           
  5523                           ;logger.c: 70:             TMR1_state = TMR1_RUNNING;
  5524  02C2  3001               	movlw	1
  5525  02C3  00E2               	movwf	_TMR1_state	;volatile
  5526                           
  5527                           ;logger.c: 71:             break;
  5528  02C4  0008               	return
  5529  02C5                     l3431:	
  5530                           
  5531                           ;logger.c: 74:             TMR1_StopTimer();
  5532  02C5  2788               	fcall	_TMR1_StopTimer
  5533                           
  5534                           ;logger.c: 75:             TMR1_state = TMR1_STOP;
  5535  02C6  01E2               	clrf	_TMR1_state	;volatile
  5536                           
  5537                           ;logger.c: 76:             break;
  5538  02C7  0008               	return
  5539  02C8                     l588:	
  5540                           ;logger.c: 79:             do { LATAbits.LATA5 = 0; } while(0);
  5541                           
  5542  02C8  0022               	movlb	2	; select bank2
  5543  02C9  128C               	bcf	12,5	;volatile
  5544  02CA  0008               	return
  5545  02CB                     l591:	
  5546                           ;logger.c: 83:             do { LATAbits.LATA5 = 1; } while(0);
  5547                           
  5548  02CB  0022               	movlb	2	; select bank2
  5549  02CC  168C               	bsf	12,5	;volatile
  5550  02CD  0008               	return
  5551  02CE                     l3437:	
  5552  02CE  0830               	movf	process_message@message,w
  5553  02CF  00B1               	movwf	??_process_message
  5554  02D0  01B2               	clrf	??_process_message+1
  5555                           
  5556                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5557                           ; Switch size 1, requested type "space"
  5558                           ; Number of cases is 1, Range of values is 0 to 0
  5559                           ; switch strategies available:
  5560                           ; Name         Instructions Cycles
  5561                           ; simple_byte            4     3 (average)
  5562                           ; direct_byte            8     6 (fixed)
  5563                           ; jumptable            260     6 (fixed)
  5564                           ;	Chosen strategy is simple_byte
  5565  02D1  0832               	movf	??_process_message+1,w
  5566  02D2  3A00               	xorlw	0	; case 0
  5567  02D3  1903               	skipnz
  5568  02D4  2AD6               	goto	l3647
  5569  02D5  2AED               	goto	l585
  5570  02D6                     l3647:	
  5571                           
  5572                           ; Switch size 1, requested type "space"
  5573                           ; Number of cases is 7, Range of values is 79 to 116
  5574                           ; switch strategies available:
  5575                           ; Name         Instructions Cycles
  5576                           ; simple_byte           22    12 (average)
  5577                           ; direct_byte           85     9 (fixed)
  5578                           ; jumptable            263     9 (fixed)
  5579                           ;	Chosen strategy is simple_byte
  5580  02D6  0831               	movf	??_process_message,w
  5581  02D7  3A4F               	xorlw	79	; case 79
  5582  02D8  1903               	skipnz
  5583  02D9  2ACB               	goto	l591
  5584  02DA  3A1C               	xorlw	28	; case 83
  5585  02DB  1903               	skipnz
  5586  02DC  2AC5               	goto	l3431
  5587  02DD  3A07               	xorlw	7	; case 84
  5588  02DE  1903               	skipnz
  5589  02DF  2ABD               	goto	l3421
  5590  02E0  3A35               	xorlw	53	; case 97
  5591  02E1  1903               	skipnz
  5592  02E2  2ABC               	goto	l3419
  5593  02E3  3A0E               	xorlw	14	; case 111
  5594  02E4  1903               	skipnz
  5595  02E5  2AC8               	goto	l588
  5596  02E6  3A1C               	xorlw	28	; case 115
  5597  02E7  1903               	skipnz
  5598  02E8  2ABE               	goto	l3423
  5599  02E9  3A07               	xorlw	7	; case 116
  5600  02EA  1903               	skipnz
  5601  02EB  2AB5               	goto	l3417
  5602  02EC  2AED               	goto	l585
  5603  02ED                     l585:	
  5604  02ED  0008               	return
  5605  02EE                     __end_of_process_message:	
  5606                           
  5607                           	psect	text31
  5608  0602                     __ptext31:	
  5609 ;; *************** function _toggle_format *****************
  5610 ;; Defined at:
  5611 ;;		line 134 in file "logger.c"
  5612 ;; Parameters:    Size  Location     Type
  5613 ;;		None
  5614 ;; Auto vars:     Size  Location     Type
  5615 ;;		None
  5616 ;; Return value:  Size  Location     Type
  5617 ;;                  1    wreg      void 
  5618 ;; Registers used:
  5619 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5620 ;; Tracked objects:
  5621 ;;		On entry : 1F/0
  5622 ;;		On exit  : 0/0
  5623 ;;		Unchanged: 0/0
  5624 ;; Data sizes:     COMMON   BANK0   BANK1
  5625 ;;      Params:         0       0       0
  5626 ;;      Locals:         0       0       0
  5627 ;;      Temps:          0       0       0
  5628 ;;      Totals:         0       0       0
  5629 ;;Total ram usage:        0 bytes
  5630 ;; Hardware stack levels used:    1
  5631 ;; Hardware stack levels required when called:   10
  5632 ;; This function calls:
  5633 ;;		_ESP_write
  5634 ;; This function is called by:
  5635 ;;		_process_message
  5636 ;; This function uses a non-reentrant model
  5637 ;;
  5638                           
  5639                           
  5640                           ;psect for function _toggle_format
  5641  0602                     _toggle_format:	
  5642  0602                     l3405:	
  5643                           ;incstack = 0
  5644                           ; Regs used in _toggle_format: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5645                           
  5646                           
  5647                           ;logger.c: 136:     if (message_format == MESSAGE_BINARY) {
  5648  0602  0863               	movf	_message_format,w	;volatile
  5649  0603  1D03               	btfss	3,2
  5650  0604  2E0E               	goto	l3411
  5651                           
  5652                           ;logger.c: 137:         message_format = MESSAGE_TEXT;
  5653  0605  3001               	movlw	1
  5654  0606  00E3               	movwf	_message_format	;volatile
  5655                           
  5656                           ;logger.c: 141:             ESP_write("tmode\n",6);
  5657  0607  300E               	movlw	low (STR_21| (0+32768))
  5658  0608  00AB               	movwf	ESP_write@pt
  5659  0609  3087               	movlw	high (STR_21| (0+32768))
  5660  060A  00AC               	movwf	ESP_write@pt+1
  5661  060B  3006               	movlw	6
  5662  060C  00AD               	movwf	ESP_write@length
  5663  060D  2903               	ljmp	l3371
  5664  060E                     l3411:	
  5665                           ;logger.c: 143:     } else {
  5666                           
  5667                           
  5668                           ;logger.c: 144:         message_format = MESSAGE_BINARY;
  5669  060E  01E3               	clrf	_message_format	;volatile
  5670                           
  5671                           ;logger.c: 148:             ESP_write("bmode\n",6);
  5672  060F  3007               	movlw	low (STR_22| (0+32768))
  5673  0610  00AB               	movwf	ESP_write@pt
  5674  0611  3087               	movlw	high (STR_22| (0+32768))
  5675  0612  00AC               	movwf	ESP_write@pt+1
  5676  0613  3006               	movlw	6
  5677  0614  00AD               	movwf	ESP_write@length
  5678  0615  2903               	ljmp	l3371
  5679  0616                     __end_of_toggle_format:	
  5680                           
  5681                           	psect	text32
  5682  0103                     __ptext32:	
  5683 ;; *************** function _ESP_write *****************
  5684 ;; Defined at:
  5685 ;;		line 187 in file "esp1.c"
  5686 ;; Parameters:    Size  Location     Type
  5687 ;;  pt              2   11[BANK0 ] PTR unsigned char 
  5688 ;;		 -> STR_24(3), STR_23(3), STR_22(7), STR_21(7), 
  5689 ;;		 -> read_analog@mess(6), STR_20(4), 
  5690 ;;  length          1   13[BANK0 ] unsigned char 
  5691 ;; Auto vars:     Size  Location     Type
  5692 ;;  aux             1   15[BANK0 ] unsigned char 
  5693 ;;  res             1   14[BANK0 ] unsigned char 
  5694 ;; Return value:  Size  Location     Type
  5695 ;;                  1    wreg      void 
  5696 ;; Registers used:
  5697 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5698 ;; Tracked objects:
  5699 ;;		On entry : 1F/0
  5700 ;;		On exit  : 0/0
  5701 ;;		Unchanged: 0/0
  5702 ;; Data sizes:     COMMON   BANK0   BANK1
  5703 ;;      Params:         0       3       0
  5704 ;;      Locals:         0       2       0
  5705 ;;      Temps:          0       0       0
  5706 ;;      Totals:         0       5       0
  5707 ;;Total ram usage:        5 bytes
  5708 ;; Hardware stack levels used:    1
  5709 ;; Hardware stack levels required when called:    9
  5710 ;; This function calls:
  5711 ;;		_ESP_wait_for
  5712 ;;		___awdiv
  5713 ;;		___lbmod
  5714 ;;		__puts
  5715 ;;		_write
  5716 ;; This function is called by:
  5717 ;;		_process_message
  5718 ;;		_read_analog
  5719 ;;		_toggle_format
  5720 ;;		_process_ioc
  5721 ;; This function uses a non-reentrant model
  5722 ;;
  5723                           
  5724                           
  5725                           ;psect for function _ESP_write
  5726  0103                     _ESP_write:	
  5727  0103                     l3371:	
  5728                           ;incstack = 0
  5729                           ; Regs used in _ESP_write: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5730                           
  5731                           
  5732                           ;esp1.c: 187: void ESP_write(unsigned char *pt, unsigned char length);esp1.c: 188: {;esp
      +                          1.c: 189:     unsigned char aux, res;;esp1.c: 191:     _puts("AT+CIPSEND=");
  5733  0103  309B               	movlw	low (STR_16| (0+32768))
  5734  0104  00F3               	movwf	__puts@pt
  5735  0105  3086               	movlw	high (STR_16| (0+32768))
  5736  0106  00F4               	movwf	__puts@pt+1
  5737  0107  24D9               	fcall	__puts
  5738                           
  5739                           ;esp1.c: 192:     aux = esp_channel;
  5740  0108  0020               	movlb	0	; select bank0
  5741  0109  0864               	movf	_esp_channel,w	;volatile
  5742  010A  00AF               	movwf	ESP_write@aux
  5743                           
  5744                           ;esp1.c: 193:     write(&aux,1);
  5745  010B  2148               	fcall	PL12	;call to abstracted procedure
  5746  010C  2524               	fcall	_write
  5747                           
  5748                           ;esp1.c: 194:     _puts(",");
  5749  010D  3082               	movlw	low (STR_17| (0+32768))
  5750  010E  00F3               	movwf	__puts@pt
  5751  010F  3087               	movlw	high (STR_17| (0+32768))
  5752  0110  00F4               	movwf	__puts@pt+1
  5753  0111  24D9               	fcall	__puts
  5754                           
  5755                           ;esp1.c: 196:     aux = length;
  5756  0112  0020               	movlb	0	; select bank0
  5757  0113  082D               	movf	ESP_write@length,w
  5758  0114  00AF               	movwf	ESP_write@aux
  5759                           
  5760                           ;esp1.c: 197:     if (aux > 9) {
  5761  0115  300A               	movlw	10
  5762  0116  022F               	subwf	ESP_write@aux,w
  5763  0117  1C03               	skipc
  5764  0118  2931               	goto	l3393
  5765                           
  5766                           ;esp1.c: 198:         res = aux%10;
  5767  0119  300A               	movlw	10
  5768  011A  00F2               	movwf	___lbmod@divisor
  5769  011B  082F               	movf	ESP_write@aux,w
  5770  011C  253C               	fcall	___lbmod
  5771  011D  00AE               	movwf	ESP_write@res
  5772                           
  5773                           ;esp1.c: 199:         res += '0';
  5774  011E  3030               	movlw	48
  5775  011F  07AE               	addwf	ESP_write@res,f
  5776                           
  5777                           ;esp1.c: 200:         aux /= 10;
  5778  0120  300A               	movlw	10
  5779  0121  00F2               	movwf	___awdiv@divisor
  5780  0122  01F3               	clrf	___awdiv@divisor+1
  5781  0123  082F               	movf	ESP_write@aux,w
  5782  0124  00F4               	movwf	___awdiv@dividend
  5783  0125  01F5               	clrf	___awdiv@dividend+1
  5784  0126  2274               	fcall	___awdiv
  5785  0127  0872               	movf	?___awdiv,w
  5786  0128  00AF               	movwf	ESP_write@aux
  5787                           
  5788                           ;esp1.c: 201:         aux += '0';
  5789  0129  3030               	movlw	48
  5790  012A  07AF               	addwf	ESP_write@aux,f
  5791                           
  5792                           ;esp1.c: 202:         write(&aux,1);
  5793  012B  2148               	fcall	PL12	;call to abstracted procedure
  5794  012C  2524               	fcall	_write
  5795                           
  5796                           ;esp1.c: 203:         write(&res,1);
  5797  012D  302E               	movlw	low ESP_write@res
  5798  012E  00F3               	movwf	write@pt
  5799  012F  3000               	movlw	high ESP_write@res
  5800  0130  2937               	goto	L3
  5801  0131                     l3393:	
  5802                           ;esp1.c: 205:     } else {
  5803                           
  5804                           
  5805                           ;esp1.c: 206:         aux = length + '0';
  5806  0131  082D               	movf	ESP_write@length,w
  5807  0132  3E30               	addlw	48
  5808  0133  00AF               	movwf	ESP_write@aux
  5809                           
  5810                           ;esp1.c: 207:         write(&aux,1);
  5811  0134  302F               	movlw	low ESP_write@aux
  5812  0135  00F3               	movwf	write@pt
  5813  0136  3000               	movlw	high ESP_write@aux
  5814  0137                     L3:	
  5815  0137  00F4               	movwf	write@pt+1
  5816  0138  01F5               	clrf	write@lenght
  5817  0139  0AF5               	incf	write@lenght,f
  5818  013A  2524               	fcall	_write
  5819                           
  5820                           ;esp1.c: 210:     _puts("\r\n");
  5821  013B  214F               	fcall	PL20	;call to abstracted procedure
  5822  013C  24D9               	fcall	__puts
  5823                           
  5824                           ;esp1.c: 212:     ESP_wait_for(ESP_OK);
  5825  013D  3002               	movlw	2
  5826  013E  2408               	fcall	_ESP_wait_for
  5827                           
  5828                           ;esp1.c: 214:     write(pt,length);
  5829  013F  082C               	movf	ESP_write@pt+1,w
  5830  0140  00F4               	movwf	write@pt+1
  5831  0141  082B               	movf	ESP_write@pt,w
  5832  0142  00F3               	movwf	write@pt
  5833  0143  082D               	movf	ESP_write@length,w
  5834  0144  00F5               	movwf	write@lenght
  5835  0145  2524               	fcall	_write
  5836                           
  5837                           ;esp1.c: 215:     _puts("\r\n");
  5838  0146  214F               	fcall	PL20	;call to abstracted procedure
  5839  0147  2CD9               	ljmp	l2423
  5840  0148                     __end_of_ESP_write:	
  5841  0148                     PL12:	
  5842  0148  302F               	movlw	low ESP_write@aux
  5843  0149  00F3               	movwf	write@pt
  5844  014A  3000               	movlw	high ESP_write@aux
  5845  014B  00F4               	movwf	write@pt+1
  5846  014C  01F5               	clrf	write@lenght
  5847  014D  0AF5               	incf	write@lenght,f
  5848  014E  0008               	return
  5849  014F                     __end_ofPL12:	
  5850  014F                     PL20:	
  5851  014F  3061               	movlw	low ((STR_12+1)| (0+32768))
  5852  0150  00F3               	movwf	__puts@pt
  5853  0151  3087               	movlw	high ((STR_12+1)| (0+32768))
  5854  0152  00F4               	movwf	__puts@pt+1
  5855  0153  0008               	return
  5856  0154                     __end_ofPL20:	
  5857                           
  5858                           	psect	text33
  5859  0524                     __ptext33:	
  5860 ;; *************** function _write *****************
  5861 ;; Defined at:
  5862 ;;		line 15 in file "comm.c"
  5863 ;; Parameters:    Size  Location     Type
  5864 ;;  pt              2    3[COMMON] PTR unsigned char 
  5865 ;;		 -> read_wifi_settings@pass(14), read_wifi_settings@wifi(10), STR_24(3), STR_23(3), 
  5866 ;;		 -> STR_22(7), STR_21(7), read_analog@mess(6), STR_20(4), 
  5867 ;;		 -> ESP_write@res(1), ESP_write@aux(1), 
  5868 ;;  lenght          1    5[COMMON] unsigned char 
  5869 ;; Auto vars:     Size  Location     Type
  5870 ;;  i               1    8[COMMON] unsigned char 
  5871 ;; Return value:  Size  Location     Type
  5872 ;;                  1    wreg      void 
  5873 ;; Registers used:
  5874 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5875 ;; Tracked objects:
  5876 ;;		On entry : 0/0
  5877 ;;		On exit  : 0/0
  5878 ;;		Unchanged: 0/0
  5879 ;; Data sizes:     COMMON   BANK0   BANK1
  5880 ;;      Params:         3       0       0
  5881 ;;      Locals:         1       0       0
  5882 ;;      Temps:          2       0       0
  5883 ;;      Totals:         6       0       0
  5884 ;;Total ram usage:        6 bytes
  5885 ;; Hardware stack levels used:    1
  5886 ;; Hardware stack levels required when called:    5
  5887 ;; This function calls:
  5888 ;;		_EUSART_Write
  5889 ;;		_EUSART_is_tx_ready
  5890 ;; This function is called by:
  5891 ;;		_ESP_config
  5892 ;;		_ESP_write
  5893 ;; This function uses a non-reentrant model
  5894 ;;
  5895                           
  5896                           
  5897                           ;psect for function _write
  5898  0524                     _write:	
  5899                           
  5900                           ;comm.c: 15: void write(unsigned char *pt, unsigned char lenght);comm.c: 16: {;comm.c: 1
      +                          7:     unsigned char i;;comm.c: 19:     for (i=0; i<lenght; i++) {
  5901                           
  5902                           ;incstack = 0
  5903                           ; Regs used in _write: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5904  0524  01F8               	clrf	write@i
  5905  0525                     l2441:	
  5906  0525  0875               	movf	write@lenght,w
  5907  0526  0278               	subwf	write@i,w
  5908  0527  1803               	btfsc	3,0
  5909  0528  0008               	return
  5910  0529                     l2435:	
  5911  0529  2786               	fcall	_EUSART_is_tx_ready
  5912  052A  3A00               	xorlw	0
  5913  052B  1903               	skipnz
  5914  052C  2D29               	goto	l2435
  5915                           
  5916                           ;comm.c: 21:         EUSART_Write(pt[i]);
  5917  052D  0874               	movf	write@pt+1,w
  5918  052E  00F7               	movwf	??_write+1
  5919  052F  0873               	movf	write@pt,w
  5920  0530  00F6               	movwf	??_write
  5921  0531  0878               	movf	write@i,w
  5922  0532  0776               	addwf	??_write,w
  5923  0533  0084               	movwf	4
  5924  0534  0877               	movf	??_write+1,w
  5925  0535  1803               	skipnc
  5926  0536  0A77               	incf	??_write+1,w
  5927  0537  0085               	movwf	5
  5928  0538  0800               	movf	0,w	;code access
  5929  0539  24BE               	fcall	_EUSART_Write
  5930                           
  5931                           ;comm.c: 22:     }
  5932  053A  0AF8               	incf	write@i,f
  5933  053B  2D25               	goto	l2441
  5934  053C                     __end_of_write:	
  5935                           
  5936                           	psect	text34
  5937  04D9                     __ptext34:	
  5938 ;; *************** function __puts *****************
  5939 ;; Defined at:
  5940 ;;		line 5 in file "comm.c"
  5941 ;; Parameters:    Size  Location     Type
  5942 ;;  pt              2    3[COMMON] PTR unsigned char 
  5943 ;;		 -> STR_29(13), STR_28(22), STR_27(13), STR_26(18), 
  5944 ;;		 -> STR_25(13), STR_19(3), STR_18(3), STR_17(2), 
  5945 ;;		 -> STR_16(12), STR_14(20), STR_13(14), STR_12(4), 
  5946 ;;		 -> STR_11(4), STR_10(11), STR_9(14), STR_8(5), 
  5947 ;; Auto vars:     Size  Location     Type
  5948 ;;  index           1    8[COMMON] unsigned char 
  5949 ;; Return value:  Size  Location     Type
  5950 ;;                  1    wreg      void 
  5951 ;; Registers used:
  5952 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5953 ;; Tracked objects:
  5954 ;;		On entry : 0/0
  5955 ;;		On exit  : 0/0
  5956 ;;		Unchanged: 0/0
  5957 ;; Data sizes:     COMMON   BANK0   BANK1
  5958 ;;      Params:         2       0       0
  5959 ;;      Locals:         1       0       0
  5960 ;;      Temps:          3       0       0
  5961 ;;      Totals:         6       0       0
  5962 ;;Total ram usage:        6 bytes
  5963 ;; Hardware stack levels used:    1
  5964 ;; Hardware stack levels required when called:    5
  5965 ;; This function calls:
  5966 ;;		_EUSART_Write
  5967 ;;		_EUSART_is_tx_ready
  5968 ;; This function is called by:
  5969 ;;		_ESP_config
  5970 ;;		_ESP_write
  5971 ;;		_config_wifi_settings
  5972 ;; This function uses a non-reentrant model
  5973 ;;
  5974                           
  5975                           
  5976                           ;psect for function __puts
  5977  04D9                     __puts:	
  5978  04D9                     l2423:	
  5979                           ;incstack = 0
  5980                           ; Regs used in __puts: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5981                           
  5982                           
  5983                           ;comm.c: 5: void _puts(char *pt);comm.c: 6: {;comm.c: 7:     unsigned char index;;comm.c
      +                          : 8:     index = 0;
  5984  04D9  01F8               	clrf	__puts@index
  5985  04DA                     l2431:	
  5986                           ;comm.c: 9:     while(pt[index]) {
  5987                           
  5988                           
  5989                           ;comm.c: 9:     while(pt[index]) {
  5990  04DA  24E7               	fcall	PL4	;call to abstracted procedure
  5991  04DB  0012               	moviw fsr0++
  5992  04DC  1903               	btfsc	3,2
  5993  04DD  0008               	return
  5994  04DE                     l2425:	
  5995  04DE  2786               	fcall	_EUSART_is_tx_ready
  5996  04DF  3A00               	xorlw	0
  5997  04E0  1903               	skipnz
  5998  04E1  2CDE               	goto	l2425
  5999                           
  6000                           ;comm.c: 11:         EUSART_Write(pt[index++]);
  6001  04E2  24E7               	fcall	PL4	;call to abstracted procedure
  6002  04E3  0800               	movf	0,w	;code access
  6003  04E4  24BE               	fcall	_EUSART_Write
  6004  04E5  0AF8               	incf	__puts@index,f
  6005  04E6  2CDA               	goto	l2431
  6006  04E7                     __end_of__puts:	
  6007  04E7                     PL4:	
  6008  04E7  0874               	movf	__puts@pt+1,w
  6009  04E8  00F6               	movwf	??__puts+1
  6010  04E9  0873               	movf	__puts@pt,w
  6011  04EA  00F5               	movwf	??__puts
  6012  04EB  0878               	movf	__puts@index,w
  6013  04EC  0775               	addwf	??__puts,w
  6014  04ED  0084               	movwf	4
  6015  04EE  0876               	movf	??__puts+1,w
  6016  04EF  1803               	skipnc
  6017  04F0  0A76               	incf	??__puts+1,w
  6018  04F1  0085               	movwf	5
  6019  04F2  0008               	return
  6020  04F3                     __end_ofPL4:	
  6021                           
  6022                           	psect	text35
  6023  0786                     __ptext35:	
  6024 ;; *************** function _EUSART_is_tx_ready *****************
  6025 ;; Defined at:
  6026 ;;		line 113 in file "mcc_generated_files/eusart.c"
  6027 ;; Parameters:    Size  Location     Type
  6028 ;;		None
  6029 ;; Auto vars:     Size  Location     Type
  6030 ;;		None
  6031 ;; Return value:  Size  Location     Type
  6032 ;;                  1    wreg      unsigned char 
  6033 ;; Registers used:
  6034 ;;		wreg
  6035 ;; Tracked objects:
  6036 ;;		On entry : 0/0
  6037 ;;		On exit  : 0/0
  6038 ;;		Unchanged: 0/0
  6039 ;; Data sizes:     COMMON   BANK0   BANK1
  6040 ;;      Params:         0       0       0
  6041 ;;      Locals:         0       0       0
  6042 ;;      Temps:          0       0       0
  6043 ;;      Totals:         0       0       0
  6044 ;;Total ram usage:        0 bytes
  6045 ;; Hardware stack levels used:    1
  6046 ;; Hardware stack levels required when called:    4
  6047 ;; This function calls:
  6048 ;;		Nothing
  6049 ;; This function is called by:
  6050 ;;		__puts
  6051 ;;		_write
  6052 ;; This function uses a non-reentrant model
  6053 ;;
  6054                           
  6055                           
  6056                           ;psect for function _EUSART_is_tx_ready
  6057  0786                     _EUSART_is_tx_ready:	
  6058                           
  6059                           ;mcc_generated_files/eusart.c: 115:     return eusartTxBufferRemaining;
  6060                           
  6061                           ;incstack = 0
  6062                           ; Regs used in _EUSART_is_tx_ready: [wreg]
  6063  0786  087A               	movf	_eusartTxBufferRemaining,w	;volatile
  6064  0787  0008               	return
  6065  0788                     __end_of_EUSART_is_tx_ready:	
  6066                           
  6067                           	psect	text36
  6068  04BE                     __ptext36:	
  6069 ;; *************** function _EUSART_Write *****************
  6070 ;; Defined at:
  6071 ;;		line 148 in file "mcc_generated_files/eusart.c"
  6072 ;; Parameters:    Size  Location     Type
  6073 ;;  txData          1    wreg     unsigned char 
  6074 ;; Auto vars:     Size  Location     Type
  6075 ;;  txData          1    2[COMMON] unsigned char 
  6076 ;; Return value:  Size  Location     Type
  6077 ;;                  1    wreg      void 
  6078 ;; Registers used:
  6079 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6080 ;; Tracked objects:
  6081 ;;		On entry : 0/0
  6082 ;;		On exit  : 1F/1
  6083 ;;		Unchanged: 0/0
  6084 ;; Data sizes:     COMMON   BANK0   BANK1
  6085 ;;      Params:         0       0       0
  6086 ;;      Locals:         1       0       0
  6087 ;;      Temps:          0       0       0
  6088 ;;      Totals:         1       0       0
  6089 ;;Total ram usage:        1 bytes
  6090 ;; Hardware stack levels used:    1
  6091 ;; Hardware stack levels required when called:    4
  6092 ;; This function calls:
  6093 ;;		Nothing
  6094 ;; This function is called by:
  6095 ;;		__puts
  6096 ;;		_write
  6097 ;; This function uses a non-reentrant model
  6098 ;;
  6099                           
  6100                           
  6101                           ;psect for function _EUSART_Write
  6102  04BE                     _EUSART_Write:	
  6103                           
  6104                           ;incstack = 0
  6105                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  6106                           ;EUSART_Write@txData stored from wreg
  6107  04BE  00F2               	movwf	EUSART_Write@txData
  6108  04BF                     l2379:	
  6109                           ;mcc_generated_files/eusart.c: 148: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 149: {;mcc_generated_files/eusart.c: 150:     while(0 == eusartTxBufferRemai
      +                          ning)
  6110                           
  6111                           
  6112                           ;mcc_generated_files/eusart.c: 150:     while(0 == eusartTxBufferRemaining)
  6113  04BF  087A               	movf	_eusartTxBufferRemaining,w	;volatile
  6114  04C0  1903               	btfsc	3,2
  6115  04C1  2CBF               	goto	l2379
  6116                           
  6117                           ;mcc_generated_files/eusart.c: 154:     if(0 == PIE1bits.TXIE)
  6118  04C2  0021               	movlb	1	; select bank1
  6119  04C3  1A11               	btfsc	17,4	;volatile
  6120  04C4  2CC9               	goto	l159
  6121                           
  6122                           ;mcc_generated_files/eusart.c: 155:     {;mcc_generated_files/eusart.c: 156:         TXR
      +                          EG = txData;
  6123  04C5  0872               	movf	EUSART_Write@txData,w
  6124  04C6  0023               	movlb	3	; select bank3
  6125  04C7  009A               	movwf	26	;volatile
  6126                           
  6127                           ;mcc_generated_files/eusart.c: 157:     }
  6128  04C8  2CD6               	goto	l2393
  6129  04C9                     l159:	
  6130                           ;mcc_generated_files/eusart.c: 158:     else
  6131                           
  6132                           
  6133                           ;mcc_generated_files/eusart.c: 159:     {;mcc_generated_files/eusart.c: 160:         PIE
      +                          1bits.TXIE = 0;
  6134  04C9  1211               	bcf	17,4	;volatile
  6135                           
  6136                           ;mcc_generated_files/eusart.c: 161:         eusartTxBuffer[eusartTxHead++] = txData;
  6137  04CA  087B               	movf	_eusartTxHead,w
  6138  04CB  3E4D               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  6139  04CC  0086               	movwf	6
  6140  04CD  0187               	clrf	7
  6141  04CE  0872               	movf	EUSART_Write@txData,w
  6142  04CF  0081               	movwf	1
  6143  04D0  0AFB               	incf	_eusartTxHead,f	;volatile
  6144                           
  6145                           ;mcc_generated_files/eusart.c: 162:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  6146  04D1  3008               	movlw	8
  6147  04D2  027B               	subwf	_eusartTxHead,w
  6148  04D3  1803               	btfsc	3,0
  6149                           
  6150                           ;mcc_generated_files/eusart.c: 163:         {;mcc_generated_files/eusart.c: 164:        
      +                               eusartTxHead = 0;
  6151  04D4  01FB               	clrf	_eusartTxHead	;volatile
  6152                           
  6153                           ;mcc_generated_files/eusart.c: 166:         eusartTxBufferRemaining--;
  6154  04D5  03FA               	decf	_eusartTxBufferRemaining,f	;volatile
  6155  04D6                     l2393:	
  6156                           
  6157                           ;mcc_generated_files/eusart.c: 168:     PIE1bits.TXIE = 1;
  6158  04D6  0021               	movlb	1	; select bank1
  6159  04D7  1611               	bsf	17,4	;volatile
  6160  04D8  0008               	return
  6161  04D9                     __end_of_EUSART_Write:	
  6162                           
  6163                           	psect	text37
  6164  053C                     __ptext37:	
  6165 ;; *************** function ___lbmod *****************
  6166 ;; Defined at:
  6167 ;;		line 4 in file "/pkg/microchip/xc8/v2.00/pic/sources/c99/common/lbmod.c"
  6168 ;; Parameters:    Size  Location     Type
  6169 ;;  dividend        1    wreg     unsigned char 
  6170 ;;  divisor         1    2[COMMON] unsigned char 
  6171 ;; Auto vars:     Size  Location     Type
  6172 ;;  dividend        1    4[COMMON] unsigned char 
  6173 ;;  rem             1    6[COMMON] unsigned char 
  6174 ;;  counter         1    5[COMMON] unsigned char 
  6175 ;; Return value:  Size  Location     Type
  6176 ;;                  1    wreg      unsigned char 
  6177 ;; Registers used:
  6178 ;;		wreg, status,2, status,0
  6179 ;; Tracked objects:
  6180 ;;		On entry : 1F/0
  6181 ;;		On exit  : 1F/0
  6182 ;;		Unchanged: 1F/0
  6183 ;; Data sizes:     COMMON   BANK0   BANK1
  6184 ;;      Params:         1       0       0
  6185 ;;      Locals:         3       0       0
  6186 ;;      Temps:          1       0       0
  6187 ;;      Totals:         5       0       0
  6188 ;;Total ram usage:        5 bytes
  6189 ;; Hardware stack levels used:    1
  6190 ;; Hardware stack levels required when called:    4
  6191 ;; This function calls:
  6192 ;;		Nothing
  6193 ;; This function is called by:
  6194 ;;		_ESP_write
  6195 ;; This function uses a non-reentrant model
  6196 ;;
  6197                           
  6198                           
  6199                           ;psect for function ___lbmod
  6200  053C                     ___lbmod:	
  6201                           
  6202                           ;incstack = 0
  6203                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  6204                           ;___lbmod@dividend stored from wreg
  6205  053C  00F4               	movwf	___lbmod@dividend
  6206  053D  3008               	movlw	8
  6207  053E  00F5               	movwf	___lbmod@counter
  6208  053F  01F6               	clrf	___lbmod@rem
  6209  0540                     l2517:	
  6210  0540  0874               	movf	___lbmod@dividend,w
  6211  0541  00F3               	movwf	??___lbmod
  6212  0542  3007               	movlw	7
  6213  0543                     u1415:	
  6214  0543  36F3               	lsrf	??___lbmod,f
  6215  0544  0B89               	decfsz	9,f
  6216  0545  2D43               	goto	u1415
  6217  0546  3576               	lslf	___lbmod@rem,w
  6218  0547  0473               	iorwf	??___lbmod,w
  6219  0548  00F6               	movwf	___lbmod@rem
  6220  0549  35F4               	lslf	___lbmod@dividend,f
  6221  054A  0872               	movf	___lbmod@divisor,w
  6222  054B  0276               	subwf	___lbmod@rem,w
  6223  054C  1C03               	skipc
  6224  054D  2D50               	goto	l2525
  6225  054E  0872               	movf	___lbmod@divisor,w
  6226  054F  02F6               	subwf	___lbmod@rem,f
  6227  0550                     l2525:	
  6228  0550  0BF5               	decfsz	___lbmod@counter,f
  6229  0551  2D40               	goto	l2517
  6230  0552  0876               	movf	___lbmod@rem,w
  6231  0553  0008               	return
  6232  0554                     __end_of___lbmod:	
  6233                           
  6234                           	psect	text38
  6235  0274                     __ptext38:	
  6236 ;; *************** function ___awdiv *****************
  6237 ;; Defined at:
  6238 ;;		line 5 in file "/pkg/microchip/xc8/v2.00/pic/sources/c99/common/awdiv.c"
  6239 ;; Parameters:    Size  Location     Type
  6240 ;;  divisor         2    2[COMMON] int 
  6241 ;;  dividend        2    4[COMMON] int 
  6242 ;; Auto vars:     Size  Location     Type
  6243 ;;  quotient        2    8[COMMON] int 
  6244 ;;  sign            1    7[COMMON] unsigned char 
  6245 ;;  counter         1    6[COMMON] unsigned char 
  6246 ;; Return value:  Size  Location     Type
  6247 ;;                  2    2[COMMON] int 
  6248 ;; Registers used:
  6249 ;;		wreg, status,2, status,0
  6250 ;; Tracked objects:
  6251 ;;		On entry : 1F/0
  6252 ;;		On exit  : 1F/0
  6253 ;;		Unchanged: 1F/0
  6254 ;; Data sizes:     COMMON   BANK0   BANK1
  6255 ;;      Params:         4       0       0
  6256 ;;      Locals:         4       0       0
  6257 ;;      Temps:          0       0       0
  6258 ;;      Totals:         8       0       0
  6259 ;;Total ram usage:        8 bytes
  6260 ;; Hardware stack levels used:    1
  6261 ;; Hardware stack levels required when called:    4
  6262 ;; This function calls:
  6263 ;;		Nothing
  6264 ;; This function is called by:
  6265 ;;		_ESP_write
  6266 ;; This function uses a non-reentrant model
  6267 ;;
  6268                           
  6269                           
  6270                           ;psect for function ___awdiv
  6271  0274                     ___awdiv:	
  6272                           
  6273                           ;incstack = 0
  6274                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6275  0274  01F7               	clrf	___awdiv@sign
  6276  0275  1FF3               	btfss	___awdiv@divisor+1,7
  6277  0276  2A7E               	goto	l2477
  6278  0277  09F2               	comf	___awdiv@divisor,f
  6279  0278  09F3               	comf	___awdiv@divisor+1,f
  6280  0279  0AF2               	incf	___awdiv@divisor,f
  6281  027A  1903               	skipnz
  6282  027B  0AF3               	incf	___awdiv@divisor+1,f
  6283  027C  01F7               	clrf	___awdiv@sign
  6284  027D  0AF7               	incf	___awdiv@sign,f
  6285  027E                     l2477:	
  6286  027E  1FF5               	btfss	___awdiv@dividend+1,7
  6287  027F  2A87               	goto	l2483
  6288  0280  09F4               	comf	___awdiv@dividend,f
  6289  0281  09F5               	comf	___awdiv@dividend+1,f
  6290  0282  0AF4               	incf	___awdiv@dividend,f
  6291  0283  1903               	skipnz
  6292  0284  0AF5               	incf	___awdiv@dividend+1,f
  6293  0285  3001               	movlw	1
  6294  0286  06F7               	xorwf	___awdiv@sign,f
  6295  0287                     l2483:	
  6296  0287  01F8               	clrf	___awdiv@quotient
  6297  0288  01F9               	clrf	___awdiv@quotient+1
  6298  0289  0872               	movf	___awdiv@divisor,w
  6299  028A  0473               	iorwf	___awdiv@divisor+1,w
  6300  028B  1903               	btfsc	3,2
  6301  028C  2AA7               	goto	l2505
  6302  028D  01F6               	clrf	___awdiv@counter
  6303  028E                     L4:	
  6304  028E  0AF6               	incf	___awdiv@counter,f
  6305  028F  1BF3               	btfsc	___awdiv@divisor+1,7
  6306  0290  2A94               	goto	l2493
  6307  0291  35F2               	lslf	___awdiv@divisor,f
  6308  0292  0DF3               	rlf	___awdiv@divisor+1,f
  6309  0293  2A8E               	goto	L4
  6310  0294                     l2493:	
  6311  0294  35F8               	lslf	___awdiv@quotient,f
  6312  0295  0DF9               	rlf	___awdiv@quotient+1,f
  6313  0296  0873               	movf	___awdiv@divisor+1,w
  6314  0297  0275               	subwf	___awdiv@dividend+1,w
  6315  0298  1D03               	skipz
  6316  0299  2A9C               	goto	u1385
  6317  029A  0872               	movf	___awdiv@divisor,w
  6318  029B  0274               	subwf	___awdiv@dividend,w
  6319  029C                     u1385:	
  6320  029C  1C03               	skipc
  6321  029D  2AA3               	goto	l2501
  6322  029E  0872               	movf	___awdiv@divisor,w
  6323  029F  02F4               	subwf	___awdiv@dividend,f
  6324  02A0  0873               	movf	___awdiv@divisor+1,w
  6325  02A1  3BF5               	subwfb	___awdiv@dividend+1,f
  6326  02A2  1478               	bsf	___awdiv@quotient,0
  6327  02A3                     l2501:	
  6328  02A3  36F3               	lsrf	___awdiv@divisor+1,f
  6329  02A4  0CF2               	rrf	___awdiv@divisor,f
  6330  02A5  0BF6               	decfsz	___awdiv@counter,f
  6331  02A6  2A94               	goto	l2493
  6332  02A7                     l2505:	
  6333  02A7  0877               	movf	___awdiv@sign,w
  6334  02A8  1903               	btfsc	3,2
  6335  02A9  2AAF               	goto	l2509
  6336  02AA  09F8               	comf	___awdiv@quotient,f
  6337  02AB  09F9               	comf	___awdiv@quotient+1,f
  6338  02AC  0AF8               	incf	___awdiv@quotient,f
  6339  02AD  1903               	skipnz
  6340  02AE  0AF9               	incf	___awdiv@quotient+1,f
  6341  02AF                     l2509:	
  6342  02AF  0879               	movf	___awdiv@quotient+1,w
  6343  02B0  00F3               	movwf	?___awdiv+1
  6344  02B1  0878               	movf	___awdiv@quotient,w
  6345  02B2  00F2               	movwf	?___awdiv
  6346  02B3  0008               	return
  6347  02B4                     __end_of___awdiv:	
  6348                           
  6349                           	psect	text39
  6350  0408                     __ptext39:	
  6351 ;; *************** function _ESP_wait_for *****************
  6352 ;; Defined at:
  6353 ;;		line 120 in file "esp1.c"
  6354 ;; Parameters:    Size  Location     Type
  6355 ;;  esp_mess        1    wreg     unsigned char 
  6356 ;; Auto vars:     Size  Location     Type
  6357 ;;  esp_mess        1    9[BANK0 ] unsigned char 
  6358 ;;  ret             1   10[BANK0 ] unsigned char 
  6359 ;; Return value:  Size  Location     Type
  6360 ;;                  1    wreg      void 
  6361 ;; Registers used:
  6362 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6363 ;; Tracked objects:
  6364 ;;		On entry : 0/0
  6365 ;;		On exit  : 1F/0
  6366 ;;		Unchanged: 0/0
  6367 ;; Data sizes:     COMMON   BANK0   BANK1
  6368 ;;      Params:         0       0       0
  6369 ;;      Locals:         0       2       0
  6370 ;;      Temps:          0       0       0
  6371 ;;      Totals:         0       2       0
  6372 ;;Total ram usage:        2 bytes
  6373 ;; Hardware stack levels used:    1
  6374 ;; Hardware stack levels required when called:    8
  6375 ;; This function calls:
  6376 ;;		_ESP_read
  6377 ;; This function is called by:
  6378 ;;		_ESP_config
  6379 ;;		_ESP_write
  6380 ;;		_read_analog
  6381 ;;		_process_ioc
  6382 ;; This function uses a non-reentrant model
  6383 ;;
  6384                           
  6385                           
  6386                           ;psect for function _ESP_wait_for
  6387  0408                     _ESP_wait_for:	
  6388                           
  6389                           ;incstack = 0
  6390                           ; Regs used in _ESP_wait_for: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6391                           ;ESP_wait_for@esp_mess stored from wreg
  6392  0408  0020               	movlb	0	; select bank0
  6393  0409  00A9               	movwf	ESP_wait_for@esp_mess
  6394  040A                     l478:	
  6395                           ;esp1.c: 120: void ESP_wait_for(unsigned char esp_mess);esp1.c: 121: {;esp1.c: 122:     
      +                          unsigned char ret;;esp1.c: 125:     do {
  6396                           
  6397                           
  6398                           ;esp1.c: 126:         ret = ESP_read();
  6399  040A  239F               	fcall	_ESP_read
  6400  040B  00AA               	movwf	ESP_wait_for@ret
  6401                           
  6402                           ;esp1.c: 128:         if (ret != esp_mess) {
  6403  040C  0629               	xorwf	ESP_wait_for@esp_mess,w
  6404  040D  1903               	skipnz
  6405  040E  2C24               	goto	l3369
  6406                           
  6407                           ;esp1.c: 129:             if (ret == ESP_SEND_FAIL) return;
  6408  040F  3007               	movlw	7
  6409  0410  062A               	xorwf	ESP_wait_for@ret,w
  6410  0411  1903               	btfsc	3,2
  6411  0412  0008               	return
  6412                           
  6413                           ;esp1.c: 130:             if (ret == ESP_CLOSED) {
  6414  0413  3008               	movlw	8
  6415  0414  062A               	xorwf	ESP_wait_for@ret,w
  6416  0415  1D03               	btfss	3,2
  6417  0416  2C19               	goto	l3359
  6418                           
  6419                           ;esp1.c: 131:                 esp_channel = 0;
  6420  0417  01E4               	clrf	_esp_channel	;volatile
  6421  0418  0008               	return
  6422  0419                     l3359:	
  6423                           
  6424                           ;esp1.c: 134:             if (ret == ESP_ERROR) return;
  6425  0419  3009               	movlw	9
  6426  041A  062A               	xorwf	ESP_wait_for@ret,w
  6427  041B  1903               	btfsc	3,2
  6428  041C  0008               	return
  6429                           
  6430                           ;esp1.c: 135:             if (ret == ESP_RX) {
  6431  041D  3004               	movlw	4
  6432  041E  062A               	xorwf	ESP_wait_for@ret,w
  6433  041F  1D03               	btfss	3,2
  6434  0420  2C24               	goto	l3369
  6435                           
  6436                           ;esp1.c: 137:                 ESP_wait_exception = ESP_RX;
  6437  0421  3004               	movlw	4
  6438  0422  00E7               	movwf	_ESP_wait_exception	;volatile
  6439  0423  0008               	return
  6440  0424                     l3369:	
  6441                           
  6442                           ;esp1.c: 141:     } while (ret != esp_mess);
  6443  0424  082A               	movf	ESP_wait_for@ret,w
  6444  0425  0629               	xorwf	ESP_wait_for@esp_mess,w
  6445  0426  1903               	btfsc	3,2
  6446  0427  0008               	return
  6447  0428  2C0A               	goto	l478
  6448  0429                     __end_of_ESP_wait_for:	
  6449                           
  6450                           	psect	text40
  6451  039F                     __ptext40:	
  6452 ;; *************** function _ESP_read *****************
  6453 ;; Defined at:
  6454 ;;		line 27 in file "esp1.c"
  6455 ;; Parameters:    Size  Location     Type
  6456 ;;		None
  6457 ;; Auto vars:     Size  Location     Type
  6458 ;;  ret             1    8[BANK0 ] unsigned char 
  6459 ;; Return value:  Size  Location     Type
  6460 ;;                  1    wreg      unsigned char 
  6461 ;; Registers used:
  6462 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6463 ;; Tracked objects:
  6464 ;;		On entry : 0/0
  6465 ;;		On exit  : 1F/0
  6466 ;;		Unchanged: 0/0
  6467 ;; Data sizes:     COMMON   BANK0   BANK1
  6468 ;;      Params:         0       0       0
  6469 ;;      Locals:         0       1       0
  6470 ;;      Temps:          0       1       0
  6471 ;;      Totals:         0       2       0
  6472 ;;Total ram usage:        2 bytes
  6473 ;; Hardware stack levels used:    1
  6474 ;; Hardware stack levels required when called:    7
  6475 ;; This function calls:
  6476 ;;		_ESP_process_message
  6477 ;;		_EUSART_Read
  6478 ;; This function is called by:
  6479 ;;		_ESP_wait_for
  6480 ;;		_ESP_message_handler
  6481 ;; This function uses a non-reentrant model
  6482 ;;
  6483                           
  6484                           
  6485                           ;psect for function _ESP_read
  6486  039F                     _ESP_read:	
  6487                           
  6488                           ;esp1.c: 29:     unsigned char ret;;esp1.c: 31:     esp_read_data[esp_read_data_index] =
      +                           EUSART_Read();
  6489                           
  6490                           ;incstack = 0
  6491                           ; Regs used in _ESP_read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6492  039F  2554               	fcall	_EUSART_Read
  6493  03A0  0020               	movlb	0	; select bank0
  6494  03A1  00A7               	movwf	??_ESP_read
  6495  03A2  0865               	movf	_esp_read_data_index,w
  6496  03A3  3EA8               	addlw	(low (_esp_read_data| 0))& (0+255)
  6497  03A4  0086               	movwf	6
  6498  03A5  0187               	clrf	7
  6499  03A6  0827               	movf	??_ESP_read,w
  6500  03A7  0081               	movwf	1
  6501                           
  6502                           ;esp1.c: 34:     if (esp_read_data[esp_read_data_index] == 0x0a) {
  6503  03A8  0865               	movf	_esp_read_data_index,w
  6504  03A9  3EA8               	addlw	(low (_esp_read_data| 0))& (0+255)
  6505  03AA  0086               	movwf	6
  6506  03AB  300A               	movlw	10
  6507  03AC  0601               	xorwf	1,w
  6508  03AD  1D03               	btfss	3,2
  6509  03AE  2BBE               	goto	l3335
  6510                           
  6511                           ;esp1.c: 36:         if (esp_read_data_index <= 1) {
  6512  03AF  3002               	movlw	2
  6513  03B0  0265               	subwf	_esp_read_data_index,w	;volatile
  6514  03B1  1803               	skipnc
  6515  03B2  2BB5               	goto	l3325
  6516                           
  6517                           ;esp1.c: 37:             ret = ESP_EOL;
  6518  03B3  3003               	movlw	3
  6519  03B4  2BBB               	goto	L5
  6520  03B5                     l3325:	
  6521                           ;esp1.c: 38:         } else {
  6522                           
  6523                           
  6524                           ;esp1.c: 39:             esp_read_data[(esp_read_data_index-1)] = 0x00;
  6525  03B5  0865               	movf	_esp_read_data_index,w
  6526  03B6  3EA7               	addlw	(low ((_esp_read_data| 0+255)))& (0+255)
  6527  03B7  0086               	movwf	6
  6528  03B8  0187               	clrf	7
  6529  03B9  0181               	clrf	1
  6530                           
  6531                           ;esp1.c: 40:             ret = ESP_process_message();
  6532  03BA  21E9               	fcall	_ESP_process_message
  6533  03BB                     L5:	
  6534  03BB  00A8               	movwf	ESP_read@ret
  6535                           
  6536                           ;esp1.c: 43:         esp_read_data_index = 0;
  6537  03BC  01E5               	clrf	_esp_read_data_index	;volatile
  6538                           
  6539                           ;esp1.c: 44:         return ret;
  6540  03BD  0008               	return
  6541  03BE                     l3335:	
  6542                           
  6543                           ;esp1.c: 47:     esp_read_data_index++;
  6544  03BE  0AE5               	incf	_esp_read_data_index,f	;volatile
  6545                           
  6546                           ;esp1.c: 48:     if (esp_read_data_index >= 24)
  6547  03BF  3018               	movlw	24
  6548  03C0  0265               	subwf	_esp_read_data_index,w	;volatile
  6549  03C1  1803               	btfsc	3,0
  6550                           
  6551                           ;esp1.c: 49:         esp_read_data_index = 0;
  6552  03C2  01E5               	clrf	_esp_read_data_index	;volatile
  6553                           
  6554                           ;esp1.c: 51:     return ESP_OTHER;
  6555  03C3  3400               	retlw	0
  6556  03C4                     __end_of_ESP_read:	
  6557                           
  6558                           	psect	text41
  6559  0554                     __ptext41:	
  6560 ;; *************** function _EUSART_Read *****************
  6561 ;; Defined at:
  6562 ;;		line 128 in file "mcc_generated_files/eusart.c"
  6563 ;; Parameters:    Size  Location     Type
  6564 ;;		None
  6565 ;; Auto vars:     Size  Location     Type
  6566 ;;  readValue       1    2[COMMON] unsigned char 
  6567 ;; Return value:  Size  Location     Type
  6568 ;;                  1    wreg      unsigned char 
  6569 ;; Registers used:
  6570 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6571 ;; Tracked objects:
  6572 ;;		On entry : 0/0
  6573 ;;		On exit  : 1F/1
  6574 ;;		Unchanged: 0/0
  6575 ;; Data sizes:     COMMON   BANK0   BANK1
  6576 ;;      Params:         0       0       0
  6577 ;;      Locals:         1       0       0
  6578 ;;      Temps:          0       0       0
  6579 ;;      Totals:         1       0       0
  6580 ;;Total ram usage:        1 bytes
  6581 ;; Hardware stack levels used:    1
  6582 ;; Hardware stack levels required when called:    4
  6583 ;; This function calls:
  6584 ;;		Nothing
  6585 ;; This function is called by:
  6586 ;;		__gets
  6587 ;;		_ESP_read
  6588 ;;		_ESP_config
  6589 ;; This function uses a non-reentrant model
  6590 ;;
  6591                           
  6592                           
  6593                           ;psect for function _EUSART_Read
  6594  0554                     _EUSART_Read:	
  6595  0554                     l2293:	
  6596                           ;mcc_generated_files/eusart.c: 132:     while(0 == eusartRxCount)
  6597                           
  6598                           ;incstack = 0
  6599                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  6600                           
  6601                           
  6602                           ;mcc_generated_files/eusart.c: 132:     while(0 == eusartRxCount)
  6603  0554  0020               	movlb	0	; select bank0
  6604  0555  0868               	movf	_eusartRxCount,w	;volatile
  6605  0556  1903               	btfsc	3,2
  6606  0557  2D54               	goto	l2293
  6607                           
  6608                           ;mcc_generated_files/eusart.c: 136:     readValue = eusartRxBuffer[eusartRxTail++];
  6609  0558  0869               	movf	_eusartRxTail,w
  6610  0559  3EA0               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  6611  055A  0086               	movwf	6
  6612  055B  0187               	clrf	7
  6613  055C  0801               	movf	1,w
  6614  055D  00F2               	movwf	EUSART_Read@readValue
  6615  055E  0AE9               	incf	_eusartRxTail,f	;volatile
  6616                           
  6617                           ;mcc_generated_files/eusart.c: 137:     if(sizeof(eusartRxBuffer) <= eusartRxTail)
  6618  055F  3008               	movlw	8
  6619  0560  0269               	subwf	_eusartRxTail,w
  6620  0561  1803               	btfsc	3,0
  6621                           
  6622                           ;mcc_generated_files/eusart.c: 138:     {;mcc_generated_files/eusart.c: 139:         eus
      +                          artRxTail = 0;
  6623  0562  01E9               	clrf	_eusartRxTail	;volatile
  6624                           
  6625                           ;mcc_generated_files/eusart.c: 141:     PIE1bits.RCIE = 0;
  6626  0563  0021               	movlb	1	; select bank1
  6627  0564  1291               	bcf	17,5	;volatile
  6628                           
  6629                           ;mcc_generated_files/eusart.c: 142:     eusartRxCount--;
  6630  0565  0020               	movlb	0	; select bank0
  6631  0566  03E8               	decf	_eusartRxCount,f	;volatile
  6632                           
  6633                           ;mcc_generated_files/eusart.c: 143:     PIE1bits.RCIE = 1;
  6634  0567  0021               	movlb	1	; select bank1
  6635  0568  1691               	bsf	17,5	;volatile
  6636                           
  6637                           ;mcc_generated_files/eusart.c: 145:     return readValue;
  6638  0569  0872               	movf	EUSART_Read@readValue,w
  6639  056A  0008               	return
  6640  056B                     __end_of_EUSART_Read:	
  6641                           
  6642                           	psect	text42
  6643  01E9                     __ptext42:	
  6644 ;; *************** function _ESP_process_message *****************
  6645 ;; Defined at:
  6646 ;;		line 55 in file "esp1.c"
  6647 ;; Parameters:    Size  Location     Type
  6648 ;;		None
  6649 ;; Auto vars:     Size  Location     Type
  6650 ;;  aux             1    6[BANK0 ] PTR unsigned char 
  6651 ;;		 -> NULL(0), esp_read_data(24), 
  6652 ;; Return value:  Size  Location     Type
  6653 ;;                  1    wreg      unsigned char 
  6654 ;; Registers used:
  6655 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6656 ;; Tracked objects:
  6657 ;;		On entry : 1F/0
  6658 ;;		On exit  : 1F/0
  6659 ;;		Unchanged: 0/0
  6660 ;; Data sizes:     COMMON   BANK0   BANK1
  6661 ;;      Params:         0       0       0
  6662 ;;      Locals:         0       1       0
  6663 ;;      Temps:          0       0       0
  6664 ;;      Totals:         0       1       0
  6665 ;;Total ram usage:        1 bytes
  6666 ;; Hardware stack levels used:    1
  6667 ;; Hardware stack levels required when called:    6
  6668 ;; This function calls:
  6669 ;;		_strstr
  6670 ;; This function is called by:
  6671 ;;		_ESP_read
  6672 ;; This function uses a non-reentrant model
  6673 ;;
  6674                           
  6675                           
  6676                           ;psect for function _ESP_process_message
  6677  01E9                     _ESP_process_message:	
  6678                           
  6679                           ;esp1.c: 56:     unsigned char *aux;;esp1.c: 58:     aux = strstr(esp_read_data,"SEND OK
      +                          ");
  6680                           
  6681                           ;incstack = 0
  6682                           ; Regs used in _ESP_process_message: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6683  01E9  30EF               	movlw	low (STR_1| (0+32768))
  6684  01EA  00A4               	movwf	strstr@n
  6685  01EB  3086               	movlw	high (STR_1| (0+32768))
  6686  01EC  00A5               	movwf	strstr@n+1
  6687  01ED  30A8               	movlw	(low (_esp_read_data| 0))& (0+255)
  6688  01EE  2322               	fcall	_strstr
  6689  01EF  00A6               	movwf	ESP_process_message@aux
  6690                           
  6691                           ;esp1.c: 59:     if (aux) return ESP_SEND_OK;
  6692  01F0  0826               	movf	ESP_process_message@aux,w
  6693  01F1  1D03               	btfss	3,2
  6694  01F2  3401               	retlw	1
  6695                           
  6696                           ;esp1.c: 61:     aux = strstr(esp_read_data,"OK");
  6697  01F3  30F4               	movlw	low ((STR_1+5)| (0+32768))
  6698  01F4  00A4               	movwf	strstr@n
  6699  01F5  3086               	movlw	high ((STR_1+5)| (0+32768))
  6700  01F6  00A5               	movwf	strstr@n+1
  6701  01F7  30A8               	movlw	(low (_esp_read_data| 0))& (0+255)
  6702  01F8  2322               	fcall	_strstr
  6703  01F9  00A6               	movwf	ESP_process_message@aux
  6704                           
  6705                           ;esp1.c: 62:     if (aux) return ESP_OK;
  6706  01FA  0826               	movf	ESP_process_message@aux,w
  6707  01FB  1D03               	btfss	3,2
  6708  01FC  3402               	retlw	2
  6709                           
  6710                           ;esp1.c: 64:     aux = strstr(esp_read_data,"SEND FAIL");
  6711  01FD  30C9               	movlw	low (STR_3| (0+32768))
  6712  01FE  00A4               	movwf	strstr@n
  6713  01FF  3086               	movlw	high (STR_3| (0+32768))
  6714  0200  00A5               	movwf	strstr@n+1
  6715  0201  30A8               	movlw	(low (_esp_read_data| 0))& (0+255)
  6716  0202  2322               	fcall	_strstr
  6717  0203  00A6               	movwf	ESP_process_message@aux
  6718                           
  6719                           ;esp1.c: 65:     if (aux) return ESP_SEND_FAIL;
  6720  0204  0826               	movf	ESP_process_message@aux,w
  6721  0205  1D03               	btfss	3,2
  6722  0206  3407               	retlw	7
  6723                           
  6724                           ;esp1.c: 67:     aux = strstr(esp_read_data,"ERROR");
  6725  0207  3023               	movlw	low (STR_4| (0+32768))
  6726  0208  00A4               	movwf	strstr@n
  6727  0209  3087               	movlw	high (STR_4| (0+32768))
  6728  020A  00A5               	movwf	strstr@n+1
  6729  020B  30A8               	movlw	(low (_esp_read_data| 0))& (0+255)
  6730  020C  2322               	fcall	_strstr
  6731  020D  00A6               	movwf	ESP_process_message@aux
  6732                           
  6733                           ;esp1.c: 68:     if (aux) return ESP_ERROR;
  6734  020E  0826               	movf	ESP_process_message@aux,w
  6735  020F  1D03               	btfss	3,2
  6736  0210  3409               	retlw	9
  6737                           
  6738                           ;esp1.c: 70:     aux = strstr(esp_read_data,"+IPD");
  6739  0211  3052               	movlw	low (STR_5| (0+32768))
  6740  0212  00A4               	movwf	strstr@n
  6741  0213  3087               	movlw	high (STR_5| (0+32768))
  6742  0214  00A5               	movwf	strstr@n+1
  6743  0215  30A8               	movlw	(low (_esp_read_data| 0))& (0+255)
  6744  0216  2322               	fcall	_strstr
  6745  0217  00A6               	movwf	ESP_process_message@aux
  6746                           
  6747                           ;esp1.c: 71:     if (aux) return ESP_RX;
  6748  0218  0826               	movf	ESP_process_message@aux,w
  6749  0219  1D03               	btfss	3,2
  6750  021A  3404               	retlw	4
  6751                           
  6752                           ;esp1.c: 73:     aux = strstr(esp_read_data,"CONNECT");
  6753  021B  30F7               	movlw	low (STR_6| (0+32768))
  6754  021C  00A4               	movwf	strstr@n
  6755  021D  3086               	movlw	high (STR_6| (0+32768))
  6756  021E  00A5               	movwf	strstr@n+1
  6757  021F  30A8               	movlw	(low (_esp_read_data| 0))& (0+255)
  6758  0220  2322               	fcall	_strstr
  6759  0221  00A6               	movwf	ESP_process_message@aux
  6760                           
  6761                           ;esp1.c: 74:     if (aux) return ESP_CONNECT;
  6762  0222  0826               	movf	ESP_process_message@aux,w
  6763  0223  1D03               	btfss	3,2
  6764  0224  3406               	retlw	6
  6765                           
  6766                           ;esp1.c: 76:     aux = strstr(esp_read_data,"CLOSED");
  6767  0225  3015               	movlw	low (STR_7| (0+32768))
  6768  0226  00A4               	movwf	strstr@n
  6769  0227  3087               	movlw	high (STR_7| (0+32768))
  6770  0228  00A5               	movwf	strstr@n+1
  6771  0229  30A8               	movlw	(low (_esp_read_data| 0))& (0+255)
  6772  022A  2322               	fcall	_strstr
  6773  022B  00A6               	movwf	ESP_process_message@aux
  6774                           
  6775                           ;esp1.c: 77:     if (aux) return ESP_CLOSED;
  6776  022C  0826               	movf	ESP_process_message@aux,w
  6777  022D  1D03               	btfss	3,2
  6778  022E  3408               	retlw	8
  6779                           
  6780                           ;esp1.c: 79:     return ESP_OTHER;
  6781  022F  3400               	retlw	0
  6782  0230                     __end_of_ESP_process_message:	
  6783                           
  6784                           	psect	text43
  6785  0322                     __ptext43:	
  6786 ;; *************** function _strstr *****************
  6787 ;; Defined at:
  6788 ;;		line 143 in file "/pkg/microchip/xc8/v2.00/pic/sources/c99/common/strstr.c"
  6789 ;; Parameters:    Size  Location     Type
  6790 ;;  h               1    wreg     PTR const unsigned char 
  6791 ;;		 -> NULL(0), esp_read_data(24), 
  6792 ;;  n               2    4[BANK0 ] PTR const unsigned char 
  6793 ;;		 -> STR_15(2), STR_7(7), STR_6(8), STR_5(5), 
  6794 ;;		 -> STR_4(6), STR_3(10), STR_2(3), STR_1(8), 
  6795 ;; Auto vars:     Size  Location     Type
  6796 ;;  h               1    9[COMMON] PTR const unsigned char 
  6797 ;;		 -> NULL(0), esp_read_data(24), 
  6798 ;;  nl              2    7[COMMON] unsigned int 
  6799 ;; Return value:  Size  Location     Type
  6800 ;;                  1    wreg      PTR unsigned char 
  6801 ;; Registers used:
  6802 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6803 ;; Tracked objects:
  6804 ;;		On entry : 1F/0
  6805 ;;		On exit  : 1F/0
  6806 ;;		Unchanged: 0/0
  6807 ;; Data sizes:     COMMON   BANK0   BANK1
  6808 ;;      Params:         0       2       0
  6809 ;;      Locals:         3       0       0
  6810 ;;      Temps:          0       0       0
  6811 ;;      Totals:         3       2       0
  6812 ;;Total ram usage:        5 bytes
  6813 ;; Hardware stack levels used:    1
  6814 ;; Hardware stack levels required when called:    5
  6815 ;; This function calls:
  6816 ;;		_strchr
  6817 ;;		_strlen
  6818 ;;		_strncmp
  6819 ;; This function is called by:
  6820 ;;		_ESP_process_message
  6821 ;;		_ESP_process_rx_data
  6822 ;; This function uses a non-reentrant model
  6823 ;;
  6824                           
  6825                           
  6826                           ;psect for function _strstr
  6827  0322                     _strstr:	
  6828                           
  6829                           ;incstack = 0
  6830                           ; Regs used in _strstr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6831                           ;strstr@h stored from wreg
  6832  0322  00F9               	movwf	strstr@h
  6833  0323  0824               	movf	strstr@n,w
  6834  0324  0425               	iorwf	strstr@n+1,w
  6835  0325  1903               	btfsc	3,2
  6836  0326  3400               	retlw	0
  6837  0327  0825               	movf	strstr@n+1,w
  6838  0328  00F3               	movwf	strlen@s+1
  6839  0329  0824               	movf	strstr@n,w
  6840  032A  00F2               	movwf	strlen@s
  6841  032B  25AD               	fcall	_strlen
  6842  032C  0873               	movf	?_strlen+1,w
  6843  032D  00F8               	movwf	strstr@nl+1
  6844  032E  0872               	movf	?_strlen,w
  6845  032F  00F7               	movwf	strstr@nl
  6846  0330                     l3249:	
  6847  0330  0879               	movf	strstr@h,w
  6848  0331  1903               	btfsc	3,2
  6849  0332  3400               	retlw	0
  6850  0333  0879               	movf	strstr@h,w
  6851  0334  0086               	movwf	6
  6852  0335  0187               	clrf	7
  6853  0336  0801               	movf	1,w
  6854  0337  1903               	btfsc	3,2
  6855  0338  3400               	retlw	0
  6856  0339  0825               	movf	strstr@n+1,w
  6857  033A  00F3               	movwf	strncmp@_r+1
  6858  033B  0824               	movf	strstr@n,w
  6859  033C  00F2               	movwf	strncmp@_r
  6860  033D  0878               	movf	strstr@nl+1,w
  6861  033E  00F5               	movwf	strncmp@n+1
  6862  033F  0877               	movf	strstr@nl,w
  6863  0340  00F4               	movwf	strncmp@n
  6864  0341  0879               	movf	strstr@h,w
  6865  0342  2230               	fcall	_strncmp
  6866  0343  0872               	movf	?_strncmp,w
  6867  0344  0473               	iorwf	?_strncmp+1,w
  6868  0345  1D03               	btfss	3,2
  6869  0346  2B49               	goto	l3247
  6870  0347  0879               	movf	strstr@h,w
  6871  0348  0008               	return
  6872  0349                     l3247:	
  6873  0349  0824               	movf	strstr@n,w
  6874  034A  0084               	movwf	4
  6875  034B  0825               	movf	strstr@n+1,w
  6876  034C  0085               	movwf	5
  6877  034D  0800               	movf	0,w	;code access
  6878  034E  00F2               	movwf	strchr@c
  6879  034F  01F3               	clrf	strchr@c+1
  6880  0350  0879               	movf	strstr@h,w
  6881  0351  3E01               	addlw	1
  6882  0352  2628               	fcall	_strchr
  6883  0353  00F9               	movwf	strstr@h
  6884  0354  2B30               	goto	l3249
  6885  0355                     __end_of_strstr:	
  6886                           
  6887                           	psect	text44
  6888  0230                     __ptext44:	
  6889 ;; *************** function _strncmp *****************
  6890 ;; Defined at:
  6891 ;;		line 3 in file "/pkg/microchip/xc8/v2.00/pic/sources/c99/common/strncmp.c"
  6892 ;; Parameters:    Size  Location     Type
  6893 ;;  _l              1    wreg     PTR const unsigned char 
  6894 ;;		 -> NULL(0), esp_read_data(24), 
  6895 ;;  _r              2    2[COMMON] PTR const unsigned char 
  6896 ;;		 -> STR_15(2), STR_7(7), STR_6(8), STR_5(5), 
  6897 ;;		 -> STR_4(6), STR_3(10), STR_2(3), STR_1(8), 
  6898 ;;  n               2    4[COMMON] unsigned int 
  6899 ;; Auto vars:     Size  Location     Type
  6900 ;;  _l              1    0[BANK0 ] PTR const unsigned char 
  6901 ;;		 -> NULL(0), esp_read_data(24), 
  6902 ;;  r               2    1[BANK0 ] PTR const unsigned char 
  6903 ;;		 -> STR_15(2), STR_7(7), STR_6(8), STR_5(5), 
  6904 ;;		 -> STR_4(6), STR_3(10), STR_2(3), STR_1(8), 
  6905 ;;  l               1    3[BANK0 ] PTR const unsigned char 
  6906 ;;		 -> NULL(0), esp_read_data(24), 
  6907 ;; Return value:  Size  Location     Type
  6908 ;;                  2    2[COMMON] int 
  6909 ;; Registers used:
  6910 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  6911 ;; Tracked objects:
  6912 ;;		On entry : 1F/0
  6913 ;;		On exit  : 1F/0
  6914 ;;		Unchanged: 0/0
  6915 ;; Data sizes:     COMMON   BANK0   BANK1
  6916 ;;      Params:         4       0       0
  6917 ;;      Locals:         0       4       0
  6918 ;;      Temps:          1       0       0
  6919 ;;      Totals:         5       4       0
  6920 ;;Total ram usage:        9 bytes
  6921 ;; Hardware stack levels used:    1
  6922 ;; Hardware stack levels required when called:    4
  6923 ;; This function calls:
  6924 ;;		Nothing
  6925 ;; This function is called by:
  6926 ;;		_strstr
  6927 ;; This function uses a non-reentrant model
  6928 ;;
  6929                           
  6930                           
  6931                           ;psect for function _strncmp
  6932  0230                     _strncmp:	
  6933                           
  6934                           ;incstack = 0
  6935                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
  6936                           ;strncmp@_l stored from wreg
  6937  0230  00A0               	movwf	strncmp@_l
  6938  0231  00A3               	movwf	strncmp@l
  6939  0232  0873               	movf	strncmp@_r+1,w
  6940  0233  00A2               	movwf	strncmp@r+1
  6941  0234  0872               	movf	strncmp@_r,w
  6942  0235  00A1               	movwf	strncmp@r
  6943  0236  226F               	fcall	PL24	;call to abstracted procedure
  6944  0237  0F74               	incfsz	strncmp@n,w
  6945  0238  2A57               	goto	l3211
  6946  0239  0A75               	incf	strncmp@n+1,w
  6947  023A  1D03               	btfss	3,2
  6948  023B  2A57               	goto	l3211
  6949  023C  01F2               	clrf	?_strncmp
  6950  023D  01F3               	clrf	?_strncmp+1
  6951  023E  0008               	return
  6952  023F                     l3213:	
  6953  023F  0821               	movf	strncmp@r,w
  6954  0240  0084               	movwf	4
  6955  0241  0822               	movf	strncmp@r+1,w
  6956  0242  0085               	movwf	5
  6957  0243  0012               	moviw fsr0++
  6958  0244  1903               	btfsc	3,2
  6959  0245  2A5D               	goto	l3219
  6960  0246  0874               	movf	strncmp@n,w
  6961  0247  0475               	iorwf	strncmp@n+1,w
  6962  0248  1903               	btfsc	3,2
  6963  0249  2A5D               	goto	l3219
  6964  024A  2268               	fcall	PL14	;call to abstracted procedure
  6965  024B  0823               	movf	strncmp@l,w
  6966  024C  0086               	movwf	6
  6967  024D  0187               	clrf	7
  6968  024E  0801               	movf	1,w
  6969  024F  0676               	xorwf	??_strncmp,w
  6970  0250  1D03               	btfss	3,2
  6971  0251  2A5D               	goto	l3219
  6972  0252  0AA3               	incf	strncmp@l,f
  6973  0253  0AA1               	incf	strncmp@r,f
  6974  0254  1903               	skipnz
  6975  0255  0AA2               	incf	strncmp@r+1,f
  6976  0256  226F               	fcall	PL24	;call to abstracted procedure
  6977  0257                     l3211:	
  6978  0257  0823               	movf	strncmp@l,w
  6979  0258  0086               	movwf	6
  6980  0259  0187               	clrf	7
  6981  025A  0801               	movf	1,w
  6982  025B  1D03               	btfss	3,2
  6983  025C  2A3F               	goto	l3213
  6984  025D                     l3219:	
  6985  025D  0823               	movf	strncmp@l,w
  6986  025E  0086               	movwf	6
  6987  025F  0187               	clrf	7
  6988  0260  0801               	movf	1,w
  6989  0261  00F2               	movwf	?_strncmp
  6990  0262  01F3               	clrf	?_strncmp+1
  6991  0263  2268               	fcall	PL14	;call to abstracted procedure
  6992  0264  02F2               	subwf	?_strncmp,f
  6993  0265  1C03               	skipc
  6994  0266  03F3               	decf	?_strncmp+1,f
  6995  0267  0008               	return
  6996  0268                     __end_of_strncmp:	
  6997  0268                     PL14:	
  6998  0268  0821               	movf	strncmp@r,w
  6999  0269  0084               	movwf	4
  7000  026A  0822               	movf	strncmp@r+1,w
  7001  026B  0085               	movwf	5
  7002  026C  0800               	movf	0,w	;code access
  7003  026D  00F6               	movwf	??_strncmp
  7004  026E  0008               	return
  7005  026F                     __end_ofPL14:	
  7006  026F                     PL24:	
  7007  026F  3001               	movlw	1
  7008  0270  02F4               	subwf	strncmp@n,f
  7009  0271  3000               	movlw	0
  7010  0272  3BF5               	subwfb	strncmp@n+1,f
  7011  0273  0008               	return
  7012  0274                     __end_ofPL24:	
  7013                           
  7014                           	psect	text45
  7015  05AD                     __ptext45:	
  7016 ;; *************** function _strlen *****************
  7017 ;; Defined at:
  7018 ;;		line 12 in file "/pkg/microchip/xc8/v2.00/pic/sources/c99/common/strlen.c"
  7019 ;; Parameters:    Size  Location     Type
  7020 ;;  s               2    2[COMMON] PTR const unsigned char 
  7021 ;;		 -> STR_15(2), STR_7(7), STR_6(8), STR_5(5), 
  7022 ;;		 -> STR_4(6), STR_3(10), STR_2(3), STR_1(8), 
  7023 ;; Auto vars:     Size  Location     Type
  7024 ;;  a               2    5[COMMON] PTR const unsigned char 
  7025 ;;		 -> STR_15(2), STR_7(7), STR_6(8), STR_5(5), 
  7026 ;;		 -> STR_4(6), STR_3(10), STR_2(3), STR_1(8), 
  7027 ;; Return value:  Size  Location     Type
  7028 ;;                  2    2[COMMON] unsigned int 
  7029 ;; Registers used:
  7030 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7031 ;; Tracked objects:
  7032 ;;		On entry : 1F/0
  7033 ;;		On exit  : 1F/0
  7034 ;;		Unchanged: 1F/0
  7035 ;; Data sizes:     COMMON   BANK0   BANK1
  7036 ;;      Params:         2       0       0
  7037 ;;      Locals:         2       0       0
  7038 ;;      Temps:          1       0       0
  7039 ;;      Totals:         5       0       0
  7040 ;;Total ram usage:        5 bytes
  7041 ;; Hardware stack levels used:    1
  7042 ;; Hardware stack levels required when called:    4
  7043 ;; This function calls:
  7044 ;;		Nothing
  7045 ;; This function is called by:
  7046 ;;		_strstr
  7047 ;; This function uses a non-reentrant model
  7048 ;;
  7049                           
  7050                           
  7051                           ;psect for function _strlen
  7052  05AD                     _strlen:	
  7053                           
  7054                           ;incstack = 0
  7055                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  7056  05AD  0873               	movf	strlen@s+1,w
  7057  05AE  00F6               	movwf	strlen@a+1
  7058  05AF  0872               	movf	strlen@s,w
  7059  05B0  00F5               	movwf	strlen@a
  7060  05B1                     l3193:	
  7061  05B1  0872               	movf	strlen@s,w
  7062  05B2  0084               	movwf	4
  7063  05B3  0873               	movf	strlen@s+1,w
  7064  05B4  0085               	movwf	5
  7065  05B5  0012               	moviw fsr0++
  7066  05B6  1903               	btfsc	3,2
  7067  05B7  2DBC               	goto	l3195
  7068  05B8  0AF2               	incf	strlen@s,f
  7069  05B9  1903               	skipnz
  7070  05BA  0AF3               	incf	strlen@s+1,f
  7071  05BB  2DB1               	goto	l3193
  7072  05BC                     l3195:	
  7073  05BC  0875               	movf	strlen@a,w
  7074  05BD  0272               	subwf	strlen@s,w
  7075  05BE  00F2               	movwf	?_strlen
  7076  05BF  0876               	movf	strlen@a+1,w
  7077  05C0  3B73               	subwfb	strlen@s+1,w
  7078  05C1  00F3               	movwf	?_strlen+1
  7079  05C2  0008               	return
  7080  05C3                     __end_of_strlen:	
  7081                           
  7082                           	psect	text46
  7083  0628                     __ptext46:	
  7084 ;; *************** function _strchr *****************
  7085 ;; Defined at:
  7086 ;;		line 7 in file "/pkg/microchip/xc8/v2.00/pic/sources/c99/common/strchr.c"
  7087 ;; Parameters:    Size  Location     Type
  7088 ;;  s               1    wreg     PTR const unsigned char 
  7089 ;;		 -> NULL(0), esp_read_data(24), 
  7090 ;;  c               2    2[COMMON] int 
  7091 ;; Auto vars:     Size  Location     Type
  7092 ;;  s               1    4[COMMON] PTR const unsigned char 
  7093 ;;		 -> NULL(0), esp_read_data(24), 
  7094 ;; Return value:  Size  Location     Type
  7095 ;;                  1    wreg      PTR unsigned char 
  7096 ;; Registers used:
  7097 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7098 ;; Tracked objects:
  7099 ;;		On entry : 1F/0
  7100 ;;		On exit  : 1F/0
  7101 ;;		Unchanged: 1F/0
  7102 ;; Data sizes:     COMMON   BANK0   BANK1
  7103 ;;      Params:         2       0       0
  7104 ;;      Locals:         1       0       0
  7105 ;;      Temps:          0       0       0
  7106 ;;      Totals:         3       0       0
  7107 ;;Total ram usage:        3 bytes
  7108 ;; Hardware stack levels used:    1
  7109 ;; Hardware stack levels required when called:    4
  7110 ;; This function calls:
  7111 ;;		Nothing
  7112 ;; This function is called by:
  7113 ;;		_strstr
  7114 ;; This function uses a non-reentrant model
  7115 ;;
  7116                           
  7117                           
  7118                           ;psect for function _strchr
  7119  0628                     _strchr:	
  7120                           
  7121                           ;incstack = 0
  7122                           ; Regs used in _strchr: [wreg+fsr1l+fsr1h+status,2+status,0]
  7123                           ;strchr@s stored from wreg
  7124  0628  00F4               	movwf	strchr@s
  7125  0629                     l1227:	
  7126  0629  0874               	movf	strchr@s,w
  7127  062A  0086               	movwf	6
  7128  062B  0187               	clrf	7
  7129  062C  0801               	movf	1,w
  7130  062D  0672               	xorwf	strchr@c,w
  7131  062E  1D03               	skipz
  7132  062F  2E32               	goto	l3231
  7133  0630  0874               	movf	strchr@s,w
  7134  0631  0008               	return
  7135  0632                     l3231:	
  7136  0632  0874               	movf	strchr@s,w
  7137  0633  0086               	movwf	6
  7138  0634  0187               	clrf	7
  7139  0635  0AF4               	incf	strchr@s,f
  7140  0636  0801               	movf	1,w
  7141  0637  1903               	btfsc	3,2
  7142  0638  3400               	retlw	0
  7143  0639  2E29               	goto	l1227
  7144  063A                     __end_of_strchr:	
  7145                           
  7146                           	psect	text47
  7147  0788                     __ptext47:	
  7148 ;; *************** function _TMR1_StopTimer *****************
  7149 ;; Defined at:
  7150 ;;		line 99 in file "mcc_generated_files/tmr1.c"
  7151 ;; Parameters:    Size  Location     Type
  7152 ;;		None
  7153 ;; Auto vars:     Size  Location     Type
  7154 ;;		None
  7155 ;; Return value:  Size  Location     Type
  7156 ;;                  1    wreg      void 
  7157 ;; Registers used:
  7158 ;;		None
  7159 ;; Tracked objects:
  7160 ;;		On entry : 1F/0
  7161 ;;		On exit  : 1F/0
  7162 ;;		Unchanged: 0/0
  7163 ;; Data sizes:     COMMON   BANK0   BANK1
  7164 ;;      Params:         0       0       0
  7165 ;;      Locals:         0       0       0
  7166 ;;      Temps:          0       0       0
  7167 ;;      Totals:         0       0       0
  7168 ;;Total ram usage:        0 bytes
  7169 ;; Hardware stack levels used:    1
  7170 ;; Hardware stack levels required when called:    4
  7171 ;; This function calls:
  7172 ;;		Nothing
  7173 ;; This function is called by:
  7174 ;;		_logger_initialize
  7175 ;;		_process_message
  7176 ;; This function uses a non-reentrant model
  7177 ;;
  7178                           
  7179                           
  7180                           ;psect for function _TMR1_StopTimer
  7181  0788                     _TMR1_StopTimer:	
  7182                           
  7183                           ;mcc_generated_files/tmr1.c: 102:     T1CONbits.TMR1ON = 0;
  7184                           
  7185                           ;incstack = 0
  7186                           ; Regs used in _TMR1_StopTimer: []
  7187  0788  1018               	bcf	24,0	;volatile
  7188  0789  0008               	return
  7189  078A                     __end_of_TMR1_StopTimer:	
  7190                           
  7191                           	psect	text48
  7192  078A                     __ptext48:	
  7193 ;; *************** function _TMR1_StartTimer *****************
  7194 ;; Defined at:
  7195 ;;		line 93 in file "mcc_generated_files/tmr1.c"
  7196 ;; Parameters:    Size  Location     Type
  7197 ;;		None
  7198 ;; Auto vars:     Size  Location     Type
  7199 ;;		None
  7200 ;; Return value:  Size  Location     Type
  7201 ;;                  1    wreg      void 
  7202 ;; Registers used:
  7203 ;;		None
  7204 ;; Tracked objects:
  7205 ;;		On entry : 1F/0
  7206 ;;		On exit  : 1F/0
  7207 ;;		Unchanged: 0/0
  7208 ;; Data sizes:     COMMON   BANK0   BANK1
  7209 ;;      Params:         0       0       0
  7210 ;;      Locals:         0       0       0
  7211 ;;      Temps:          0       0       0
  7212 ;;      Totals:         0       0       0
  7213 ;;Total ram usage:        0 bytes
  7214 ;; Hardware stack levels used:    1
  7215 ;; Hardware stack levels required when called:    4
  7216 ;; This function calls:
  7217 ;;		Nothing
  7218 ;; This function is called by:
  7219 ;;		_process_message
  7220 ;; This function uses a non-reentrant model
  7221 ;;
  7222                           
  7223                           
  7224                           ;psect for function _TMR1_StartTimer
  7225  078A                     _TMR1_StartTimer:	
  7226                           
  7227                           ;mcc_generated_files/tmr1.c: 96:     T1CONbits.TMR1ON = 1;
  7228                           
  7229                           ;incstack = 0
  7230                           ; Regs used in _TMR1_StartTimer: []
  7231  078A  1418               	bsf	24,0	;volatile
  7232  078B  0008               	return
  7233  078C                     __end_of_TMR1_StartTimer:	
  7234                           
  7235                           	psect	text49
  7236  077C                     __ptext49:	
  7237 ;; *************** function _ADC_StartConversion *****************
  7238 ;; Defined at:
  7239 ;;		line 93 in file "mcc_generated_files/adc.c"
  7240 ;; Parameters:    Size  Location     Type
  7241 ;;		None
  7242 ;; Auto vars:     Size  Location     Type
  7243 ;;		None
  7244 ;; Return value:  Size  Location     Type
  7245 ;;                  1    wreg      void 
  7246 ;; Registers used:
  7247 ;;		None
  7248 ;; Tracked objects:
  7249 ;;		On entry : 1F/0
  7250 ;;		On exit  : 1F/1
  7251 ;;		Unchanged: 0/0
  7252 ;; Data sizes:     COMMON   BANK0   BANK1
  7253 ;;      Params:         0       0       0
  7254 ;;      Locals:         0       0       0
  7255 ;;      Temps:          0       0       0
  7256 ;;      Totals:         0       0       0
  7257 ;;Total ram usage:        0 bytes
  7258 ;; Hardware stack levels used:    1
  7259 ;; Hardware stack levels required when called:    4
  7260 ;; This function calls:
  7261 ;;		Nothing
  7262 ;; This function is called by:
  7263 ;;		_process_message
  7264 ;; This function uses a non-reentrant model
  7265 ;;
  7266                           
  7267                           
  7268                           ;psect for function _ADC_StartConversion
  7269  077C                     _ADC_StartConversion:	
  7270  077C                     l2565:	
  7271                           ;incstack = 0
  7272                           ; Regs used in _ADC_StartConversion: []
  7273                           
  7274                           
  7275                           ;mcc_generated_files/adc.c: 96:     ADCON0bits.GO_nDONE = 1;
  7276  077C  0021               	movlb	1	; select bank1
  7277  077D  149D               	bsf	29,1	;volatile
  7278  077E  0008               	return
  7279  077F                     __end_of_ADC_StartConversion:	
  7280                           
  7281                           	psect	text50
  7282  06FF                     __ptext50:	
  7283 ;; *************** function _ESP_initialize *****************
  7284 ;; Defined at:
  7285 ;;		line 18 in file "esp1.c"
  7286 ;; Parameters:    Size  Location     Type
  7287 ;;		None
  7288 ;; Auto vars:     Size  Location     Type
  7289 ;;		None
  7290 ;; Return value:  Size  Location     Type
  7291 ;;                  1    wreg      void 
  7292 ;; Registers used:
  7293 ;;		wreg, status,2, status,0, pclath, cstack
  7294 ;; Tracked objects:
  7295 ;;		On entry : 1F/1
  7296 ;;		On exit  : 1F/0
  7297 ;;		Unchanged: 0/0
  7298 ;; Data sizes:     COMMON   BANK0   BANK1
  7299 ;;      Params:         0       0       0
  7300 ;;      Locals:         0       0       0
  7301 ;;      Temps:          0       0       0
  7302 ;;      Totals:         0       0       0
  7303 ;;Total ram usage:        0 bytes
  7304 ;; Hardware stack levels used:    1
  7305 ;; Hardware stack levels required when called:    5
  7306 ;; This function calls:
  7307 ;;		_ESP_Set_application_handler
  7308 ;; This function is called by:
  7309 ;;		_main
  7310 ;; This function uses a non-reentrant model
  7311 ;;
  7312                           
  7313                           
  7314                           ;psect for function _ESP_initialize
  7315  06FF                     _ESP_initialize:	
  7316                           
  7317                           ;esp1.c: 20:     esp_channel = 0;
  7318                           
  7319                           ;incstack = 0
  7320                           ; Regs used in _ESP_initialize: [wreg+status,2+status,0+pclath+cstack]
  7321  06FF  0020               	movlb	0	; select bank0
  7322  0700  01E4               	clrf	_esp_channel	;volatile
  7323                           
  7324                           ;esp1.c: 21:     ESP_wait_exception = ESP_OTHER;
  7325  0701  01E7               	clrf	_ESP_wait_exception	;volatile
  7326                           
  7327                           ;esp1.c: 24:     ESP_Set_application_handler(ESP_default_application_handler);
  7328  0702  308E               	movlw	low _ESP_default_application_handler
  7329  0703  00F2               	movwf	ESP_Set_application_handler@applicationHandler
  7330  0704  3007               	movlw	high _ESP_default_application_handler
  7331  0705  00F3               	movwf	ESP_Set_application_handler@applicationHandler+1
  7332  0706  2F57               	ljmp	l2823
  7333  0707                     __end_of_ESP_initialize:	
  7334                           
  7335                           	psect	text51
  7336  0757                     __ptext51:	
  7337 ;; *************** function _ESP_Set_application_handler *****************
  7338 ;; Defined at:
  7339 ;;		line 224 in file "esp1.c"
  7340 ;; Parameters:    Size  Location     Type
  7341 ;;  applicationH    2    2[COMMON] PTR FTN(unsigned char ,)
  7342 ;;		 -> ESP_default_application_handler(1), process_message(1), 
  7343 ;; Auto vars:     Size  Location     Type
  7344 ;;		None
  7345 ;; Return value:  Size  Location     Type
  7346 ;;                  1    wreg      void 
  7347 ;; Registers used:
  7348 ;;		wreg
  7349 ;; Tracked objects:
  7350 ;;		On entry : 1F/0
  7351 ;;		On exit  : 1F/0
  7352 ;;		Unchanged: 0/0
  7353 ;; Data sizes:     COMMON   BANK0   BANK1
  7354 ;;      Params:         2       0       0
  7355 ;;      Locals:         0       0       0
  7356 ;;      Temps:          0       0       0
  7357 ;;      Totals:         2       0       0
  7358 ;;Total ram usage:        2 bytes
  7359 ;; Hardware stack levels used:    1
  7360 ;; Hardware stack levels required when called:    4
  7361 ;; This function calls:
  7362 ;;		Nothing
  7363 ;; This function is called by:
  7364 ;;		_ESP_initialize
  7365 ;;		_logger_initialize
  7366 ;; This function uses a non-reentrant model
  7367 ;;
  7368                           
  7369                           
  7370                           ;psect for function _ESP_Set_application_handler
  7371  0757                     _ESP_Set_application_handler:	
  7372  0757                     l2823:	
  7373                           ;incstack = 0
  7374                           ; Regs used in _ESP_Set_application_handler: [wreg]
  7375                           
  7376                           
  7377                           ;esp1.c: 224: void ESP_Set_application_handler(void (* applicationHandler)(unsigned char
      +                          ));esp1.c: 225: {;esp1.c: 226:     ESP_external_message_handler = applicationHandler;
  7378  0757  0873               	movf	ESP_Set_application_handler@applicationHandler+1,w
  7379  0758  00D6               	movwf	_ESP_external_message_handler+1
  7380  0759  0872               	movf	ESP_Set_application_handler@applicationHandler,w
  7381  075A  00D5               	movwf	_ESP_external_message_handler
  7382  075B  0008               	return
  7383  075C                     __end_of_ESP_Set_application_handler:	
  7384                           
  7385                           	psect	intentry
  7386  0004                     __pintentry:	
  7387 ;; *************** function _INTERRUPT_InterruptManager *****************
  7388 ;; Defined at:
  7389 ;;		line 55 in file "mcc_generated_files/interrupt_manager.c"
  7390 ;; Parameters:    Size  Location     Type
  7391 ;;		None
  7392 ;; Auto vars:     Size  Location     Type
  7393 ;;		None
  7394 ;; Return value:  Size  Location     Type
  7395 ;;                  1    wreg      void 
  7396 ;; Registers used:
  7397 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7398 ;; Tracked objects:
  7399 ;;		On entry : 0/0
  7400 ;;		On exit  : 0/0
  7401 ;;		Unchanged: 0/0
  7402 ;; Data sizes:     COMMON   BANK0   BANK1
  7403 ;;      Params:         0       0       0
  7404 ;;      Locals:         0       0       0
  7405 ;;      Temps:          0       0       0
  7406 ;;      Totals:         0       0       0
  7407 ;;Total ram usage:        0 bytes
  7408 ;; Hardware stack levels used:    1
  7409 ;; Hardware stack levels required when called:    3
  7410 ;; This function calls:
  7411 ;;		Absolute function
  7412 ;;		_ADC_GetConversionResult
  7413 ;;		_ADC_ISR
  7414 ;;		_EUSART_Receive_ISR
  7415 ;;		_EUSART_Transmit_ISR
  7416 ;;		_PIN_MANAGER_IOC
  7417 ;;		_TMR1_ISR
  7418 ;; This function is called by:
  7419 ;;		Interrupt level 1
  7420 ;; This function uses a non-reentrant model
  7421 ;;
  7422                           
  7423  0004                     _INTERRUPT_InterruptManager:	
  7424                           
  7425                           ;incstack = 0
  7426  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7427                           
  7428                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  7429  0005  3180               	pagesel	$
  7430                           
  7431                           ;mcc_generated_files/interrupt_manager.c: 58:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
  7432  0006  198B               	btfsc	11,3	;volatile
  7433  0007  1C0B               	btfss	11,0	;volatile
  7434  0008  280B               	goto	i1l74
  7435                           
  7436                           ;mcc_generated_files/interrupt_manager.c: 59:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 60:         PIN_MANAGER_IOC();
  7437  0009  276C               	fcall	_PIN_MANAGER_IOC
  7438                           
  7439                           ;mcc_generated_files/interrupt_manager.c: 61:     }
  7440  000A  283C               	goto	i1l86
  7441  000B                     i1l74:	
  7442                           ;mcc_generated_files/interrupt_manager.c: 62:     else if(INTCONbits.PEIE == 1)
  7443                           
  7444  000B  1F0B               	btfss	11,6	;volatile
  7445  000C  283C               	goto	i1l86
  7446                           
  7447                           ;mcc_generated_files/interrupt_manager.c: 63:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 64:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  7448  000D  0021               	movlb	1	; select bank1
  7449  000E  1C11               	btfss	17,0	;volatile
  7450  000F  2815               	goto	i1l77
  7451  0010  0020               	movlb	0	; select bank0
  7452  0011  1C11               	btfss	17,0	;volatile
  7453  0012  2815               	goto	i1l77
  7454                           
  7455                           ;mcc_generated_files/interrupt_manager.c: 65:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 66:             TMR1_ISR();
  7456  0013  263A               	fcall	_TMR1_ISR
  7457                           
  7458                           ;mcc_generated_files/interrupt_manager.c: 67:         }
  7459  0014  283C               	goto	i1l86
  7460  0015                     i1l77:	
  7461                           ;mcc_generated_files/interrupt_manager.c: 68:         else if(PIE1bits.ADIE == 1 && PIR1
      +                          bits.ADIF == 1)
  7462                           
  7463  0015  0021               	movlb	1	; select bank1
  7464  0016  1F11               	btfss	17,6	;volatile
  7465  0017  2825               	goto	i1l79
  7466  0018  0020               	movlb	0	; select bank0
  7467  0019  1F11               	btfss	17,6	;volatile
  7468  001A  2825               	goto	i1l79
  7469                           
  7470                           ;mcc_generated_files/interrupt_manager.c: 69:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 70:             ADC_value = ADC_GetConversionResult();
  7471  001B  26E6               	fcall	_ADC_GetConversionResult
  7472  001C  0871               	movf	?_ADC_GetConversionResult+1,w
  7473  001D  0020               	movlb	0	; select bank0
  7474  001E  00DC               	movwf	_ADC_value+1	;volatile
  7475  001F  0870               	movf	?_ADC_GetConversionResult,w
  7476  0020  00DB               	movwf	_ADC_value	;volatile
  7477                           
  7478                           ;mcc_generated_files/interrupt_manager.c: 78:             ADC_state = ADC_READY;
  7479  0021  3001               	movlw	1
  7480  0022  00EC               	movwf	_ADC_state	;volatile
  7481                           
  7482                           ;mcc_generated_files/interrupt_manager.c: 80:             ADC_ISR();
  7483  0023  278C               	fcall	_ADC_ISR
  7484                           
  7485                           ;mcc_generated_files/interrupt_manager.c: 81:         }
  7486  0024  283C               	goto	i1l86
  7487  0025                     i1l79:	
  7488                           ;mcc_generated_files/interrupt_manager.c: 82:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
  7489                           
  7490  0025  0021               	movlb	1	; select bank1
  7491  0026  1E91               	btfss	17,5	;volatile
  7492  0027  2831               	goto	i1l81
  7493  0028  0020               	movlb	0	; select bank0
  7494  0029  1E91               	btfss	17,5	;volatile
  7495  002A  2831               	goto	i1l81
  7496                           
  7497                           ;mcc_generated_files/interrupt_manager.c: 83:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 84:             EUSART_RxDefaultInterruptHandler();
  7498  002B  085E               	movf	_EUSART_RxDefaultInterruptHandler+1,w
  7499  002C  008A               	movwf	10
  7500  002D  085D               	movf	_EUSART_RxDefaultInterruptHandler,w
  7501  002E  000A               	callw
  7502  002F  3180               	pagesel	$
  7503                           
  7504                           ;mcc_generated_files/interrupt_manager.c: 85:         }
  7505  0030  283C               	goto	i1l86
  7506  0031                     i1l81:	
  7507                           ;mcc_generated_files/interrupt_manager.c: 86:         else if(PIE1bits.TXIE == 1 && PIR1
      +                          bits.TXIF == 1)
  7508                           
  7509  0031  0021               	movlb	1	; select bank1
  7510  0032  1E11               	btfss	17,4	;volatile
  7511  0033  283C               	goto	i1l86
  7512  0034  0020               	movlb	0	; select bank0
  7513  0035  1E11               	btfss	17,4	;volatile
  7514  0036  283C               	goto	i1l86
  7515                           
  7516                           ;mcc_generated_files/interrupt_manager.c: 87:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 88:             EUSART_TxDefaultInterruptHandler();
  7517  0037  0860               	movf	_EUSART_TxDefaultInterruptHandler+1,w
  7518  0038  008A               	movwf	10
  7519  0039  085F               	movf	_EUSART_TxDefaultInterruptHandler,w
  7520  003A  000A               	callw
  7521  003B  3180               	pagesel	$
  7522  003C                     i1l86:	
  7523                           ;mcc_generated_files/interrupt_manager.c: 89:         }
  7524                           
  7525  003C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7526  003D  0009               	retfie
  7527  003E                     __end_of_INTERRUPT_InterruptManager:	
  7528                           
  7529                           	psect	text53
  7530  063A                     __ptext53:	
  7531 ;; *************** function _TMR1_ISR *****************
  7532 ;; Defined at:
  7533 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  7534 ;; Parameters:    Size  Location     Type
  7535 ;;		None
  7536 ;; Auto vars:     Size  Location     Type
  7537 ;;		None
  7538 ;; Return value:  Size  Location     Type
  7539 ;;                  1    wreg      void 
  7540 ;; Registers used:
  7541 ;;		wreg, status,2, status,0, pclath, cstack
  7542 ;; Tracked objects:
  7543 ;;		On entry : 1F/0
  7544 ;;		On exit  : 0/0
  7545 ;;		Unchanged: 0/0
  7546 ;; Data sizes:     COMMON   BANK0   BANK1
  7547 ;;      Params:         0       0       0
  7548 ;;      Locals:         0       0       0
  7549 ;;      Temps:          0       0       0
  7550 ;;      Totals:         0       0       0
  7551 ;;Total ram usage:        0 bytes
  7552 ;; Hardware stack levels used:    1
  7553 ;; Hardware stack levels required when called:    2
  7554 ;; This function calls:
  7555 ;;		Absolute function
  7556 ;;		_TMR1_DefaultInterruptHandler
  7557 ;;		_TMR1_WriteTimer
  7558 ;;		__TMR1_Ready
  7559 ;; This function is called by:
  7560 ;;		_INTERRUPT_InterruptManager
  7561 ;; This function uses a non-reentrant model
  7562 ;;
  7563                           
  7564                           
  7565                           ;psect for function _TMR1_ISR
  7566  063A                     _TMR1_ISR:	
  7567                           
  7568                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  7569                           
  7570                           ;incstack = 0
  7571                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  7572  063A  1011               	bcf	17,0	;volatile
  7573                           
  7574                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  7575  063B  085A               	movf	_timer1ReloadVal+1,w	;volatile
  7576  063C  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  7577  063D  0859               	movf	_timer1ReloadVal,w	;volatile
  7578  063E  00F0               	movwf	TMR1_WriteTimer@timerVal
  7579  063F  2666               	fcall	_TMR1_WriteTimer
  7580                           
  7581                           ;mcc_generated_files/tmr1.c: 164:     if(TMR1_InterruptHandler)
  7582  0640  0857               	movf	_TMR1_InterruptHandler,w
  7583  0641  0458               	iorwf	_TMR1_InterruptHandler+1,w
  7584  0642  1903               	btfsc	3,2
  7585  0643  0008               	return
  7586                           
  7587                           ;mcc_generated_files/tmr1.c: 165:     {;mcc_generated_files/tmr1.c: 166:         TMR1_In
      +                          terruptHandler();
  7588  0644  0858               	movf	_TMR1_InterruptHandler+1,w
  7589  0645  008A               	movwf	10
  7590  0646  0857               	movf	_TMR1_InterruptHandler,w
  7591  0647  000A               	callw
  7592  0648  3186               	pagesel	$
  7593  0649  0008               	return
  7594  064A                     __end_of_TMR1_ISR:	
  7595                           
  7596                           	psect	text54
  7597  078F                     __ptext54:	
  7598 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  7599 ;; Defined at:
  7600 ;;		line 175 in file "mcc_generated_files/tmr1.c"
  7601 ;; Parameters:    Size  Location     Type
  7602 ;;		None
  7603 ;; Auto vars:     Size  Location     Type
  7604 ;;		None
  7605 ;; Return value:  Size  Location     Type
  7606 ;;                  1    wreg      void 
  7607 ;; Registers used:
  7608 ;;		None
  7609 ;; Tracked objects:
  7610 ;;		On entry : 1F/0
  7611 ;;		On exit  : 1F/0
  7612 ;;		Unchanged: 1F/0
  7613 ;; Data sizes:     COMMON   BANK0   BANK1
  7614 ;;      Params:         0       0       0
  7615 ;;      Locals:         0       0       0
  7616 ;;      Temps:          0       0       0
  7617 ;;      Totals:         0       0       0
  7618 ;;Total ram usage:        0 bytes
  7619 ;; Hardware stack levels used:    1
  7620 ;; This function calls:
  7621 ;;		Nothing
  7622 ;; This function is called by:
  7623 ;;		_TMR1_Initialize
  7624 ;;		_TMR1_ISR
  7625 ;; This function uses a non-reentrant model
  7626 ;;
  7627                           
  7628                           
  7629                           ;psect for function _TMR1_DefaultInterruptHandler
  7630  078F                     _TMR1_DefaultInterruptHandler:	
  7631                           
  7632                           ;incstack = 0
  7633                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  7634  078F  0008               	return
  7635  0790                     __end_of_TMR1_DefaultInterruptHandler:	
  7636                           
  7637                           	psect	text55
  7638  0768                     __ptext55:	
  7639 ;; *************** function __TMR1_Ready *****************
  7640 ;; Defined at:
  7641 ;;		line 153 in file "logger.c"
  7642 ;; Parameters:    Size  Location     Type
  7643 ;;		None
  7644 ;; Auto vars:     Size  Location     Type
  7645 ;;		None
  7646 ;; Return value:  Size  Location     Type
  7647 ;;                  1    wreg      void 
  7648 ;; Registers used:
  7649 ;;		wreg, status,2, status,0, pclath, cstack
  7650 ;; Tracked objects:
  7651 ;;		On entry : 1F/0
  7652 ;;		On exit  : 1E/0
  7653 ;;		Unchanged: 0/0
  7654 ;; Data sizes:     COMMON   BANK0   BANK1
  7655 ;;      Params:         0       0       0
  7656 ;;      Locals:         0       0       0
  7657 ;;      Temps:          0       0       0
  7658 ;;      Totals:         0       0       0
  7659 ;;Total ram usage:        0 bytes
  7660 ;; Hardware stack levels used:    1
  7661 ;; Hardware stack levels required when called:    1
  7662 ;; This function calls:
  7663 ;;		i1_ADC_StartConversion
  7664 ;; This function is called by:
  7665 ;;		_logger_initialize
  7666 ;;		_TMR1_ISR
  7667 ;; This function uses a non-reentrant model
  7668 ;;
  7669                           
  7670                           
  7671                           ;psect for function __TMR1_Ready
  7672  0768                     __TMR1_Ready:	
  7673                           
  7674                           ;logger.c: 155:     if (TMR1_state == TMR1_RUNNING) {
  7675                           
  7676                           ;incstack = 0
  7677                           ; Regs used in __TMR1_Ready: [wreg+status,2+status,0+pclath+cstack]
  7678  0768  0B62               	decfsz	_TMR1_state,w	;volatile
  7679  0769  0008               	return
  7680                           
  7681                           ;logger.c: 156:         ADC_StartConversion();
  7682  076A  277F               	fcall	i1_ADC_StartConversion
  7683  076B  0008               	return
  7684  076C                     __end_of__TMR1_Ready:	
  7685                           
  7686                           	psect	text56
  7687  077F                     __ptext56:	
  7688 ;; *************** function i1_ADC_StartConversion *****************
  7689 ;; Defined at:
  7690 ;;		line 93 in file "mcc_generated_files/adc.c"
  7691 ;; Parameters:    Size  Location     Type
  7692 ;;		None
  7693 ;; Auto vars:     Size  Location     Type
  7694 ;;		None
  7695 ;; Return value:  Size  Location     Type
  7696 ;;                  1    wreg      void 
  7697 ;; Registers used:
  7698 ;;		None
  7699 ;; Tracked objects:
  7700 ;;		On entry : 1F/0
  7701 ;;		On exit  : 1F/1
  7702 ;;		Unchanged: 0/0
  7703 ;; Data sizes:     COMMON   BANK0   BANK1
  7704 ;;      Params:         0       0       0
  7705 ;;      Locals:         0       0       0
  7706 ;;      Temps:          0       0       0
  7707 ;;      Totals:         0       0       0
  7708 ;;Total ram usage:        0 bytes
  7709 ;; Hardware stack levels used:    1
  7710 ;; This function calls:
  7711 ;;		Nothing
  7712 ;; This function is called by:
  7713 ;;		__TMR1_Ready
  7714 ;; This function uses a non-reentrant model
  7715 ;;
  7716                           
  7717                           
  7718                           ;psect for function i1_ADC_StartConversion
  7719  077F                     i1_ADC_StartConversion:	
  7720                           
  7721                           ;mcc_generated_files/adc.c: 96:     ADCON0bits.GO_nDONE = 1;
  7722                           
  7723                           ;incstack = 0
  7724                           ; Regs used in i1_ADC_StartConversion: []
  7725  077F  0021               	movlb	1	; select bank1
  7726  0780  149D               	bsf	29,1	;volatile
  7727  0781  0008               	return
  7728  0782                     __end_ofi1_ADC_StartConversion:	
  7729                           
  7730                           	psect	text57
  7731  0666                     __ptext57:	
  7732 ;; *************** function _TMR1_WriteTimer *****************
  7733 ;; Defined at:
  7734 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  7735 ;; Parameters:    Size  Location     Type
  7736 ;;  timerVal        2    0[COMMON] unsigned short 
  7737 ;; Auto vars:     Size  Location     Type
  7738 ;;		None
  7739 ;; Return value:  Size  Location     Type
  7740 ;;                  1    wreg      void 
  7741 ;; Registers used:
  7742 ;;		wreg
  7743 ;; Tracked objects:
  7744 ;;		On entry : 1F/0
  7745 ;;		On exit  : 1F/0
  7746 ;;		Unchanged: 0/0
  7747 ;; Data sizes:     COMMON   BANK0   BANK1
  7748 ;;      Params:         2       0       0
  7749 ;;      Locals:         0       0       0
  7750 ;;      Temps:          0       0       0
  7751 ;;      Totals:         2       0       0
  7752 ;;Total ram usage:        2 bytes
  7753 ;; Hardware stack levels used:    1
  7754 ;; This function calls:
  7755 ;;		Nothing
  7756 ;; This function is called by:
  7757 ;;		_TMR1_ISR
  7758 ;; This function uses a non-reentrant model
  7759 ;;
  7760                           
  7761                           
  7762                           ;psect for function _TMR1_WriteTimer
  7763  0666                     _TMR1_WriteTimer:	
  7764                           
  7765                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  7766                           
  7767                           ;incstack = 0
  7768                           ; Regs used in _TMR1_WriteTimer: [wreg]
  7769  0666  1D18               	btfss	24,2	;volatile
  7770  0667  2E6F               	goto	i1l2777
  7771                           
  7772                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  7773  0668  1018               	bcf	24,0	;volatile
  7774                           
  7775                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (timerVal >> 8);
  7776  0669  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  7777  066A  0097               	movwf	23	;volatile
  7778                           
  7779                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = timerVal;
  7780  066B  0870               	movf	TMR1_WriteTimer@timerVal,w
  7781  066C  0096               	movwf	22	;volatile
  7782                           
  7783                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  7784  066D  1418               	bsf	24,0	;volatile
  7785                           
  7786                           ;mcc_generated_files/tmr1.c: 133:     }
  7787  066E  0008               	return
  7788  066F                     i1l2777:	
  7789                           
  7790                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (timerVal >> 8);
  7791  066F  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  7792  0670  0097               	movwf	23	;volatile
  7793                           
  7794                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = timerVal;
  7795  0671  0870               	movf	TMR1_WriteTimer@timerVal,w
  7796  0672  0096               	movwf	22	;volatile
  7797  0673  0008               	return
  7798  0674                     __end_of_TMR1_WriteTimer:	
  7799                           
  7800                           	psect	text58
  7801  076C                     __ptext58:	
  7802 ;; *************** function _PIN_MANAGER_IOC *****************
  7803 ;; Defined at:
  7804 ;;		line 115 in file "mcc_generated_files/pin_manager.c"
  7805 ;; Parameters:    Size  Location     Type
  7806 ;;		None
  7807 ;; Auto vars:     Size  Location     Type
  7808 ;;		None
  7809 ;; Return value:  Size  Location     Type
  7810 ;;                  1    wreg      void 
  7811 ;; Registers used:
  7812 ;;		wreg, status,2, status,0, pclath, cstack
  7813 ;; Tracked objects:
  7814 ;;		On entry : 0/0
  7815 ;;		On exit  : 1F/7
  7816 ;;		Unchanged: 0/0
  7817 ;; Data sizes:     COMMON   BANK0   BANK1
  7818 ;;      Params:         0       0       0
  7819 ;;      Locals:         0       0       0
  7820 ;;      Temps:          0       0       0
  7821 ;;      Totals:         0       0       0
  7822 ;;Total ram usage:        0 bytes
  7823 ;; Hardware stack levels used:    1
  7824 ;; Hardware stack levels required when called:    2
  7825 ;; This function calls:
  7826 ;;		_IOCAF4_ISR
  7827 ;; This function is called by:
  7828 ;;		_INTERRUPT_InterruptManager
  7829 ;; This function uses a non-reentrant model
  7830 ;;
  7831                           
  7832                           
  7833                           ;psect for function _PIN_MANAGER_IOC
  7834  076C                     _PIN_MANAGER_IOC:	
  7835                           
  7836                           ;mcc_generated_files/pin_manager.c: 118:     if(IOCAFbits.IOCAF4 == 1)
  7837                           
  7838                           ;incstack = 0
  7839                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
  7840  076C  0027               	movlb	7	; select bank7
  7841  076D  1E13               	btfss	19,4	;volatile
  7842  076E  0008               	return
  7843                           
  7844                           ;mcc_generated_files/pin_manager.c: 119:     {;mcc_generated_files/pin_manager.c: 120:  
      +                                 IOCAF4_ISR();
  7845  076F  2E8E               	ljmp	i1l2779
  7846  0770                     __end_of_PIN_MANAGER_IOC:	
  7847                           
  7848                           	psect	text59
  7849  068E                     __ptext59:	
  7850 ;; *************** function _IOCAF4_ISR *****************
  7851 ;; Defined at:
  7852 ;;		line 127 in file "mcc_generated_files/pin_manager.c"
  7853 ;; Parameters:    Size  Location     Type
  7854 ;;		None
  7855 ;; Auto vars:     Size  Location     Type
  7856 ;;		None
  7857 ;; Return value:  Size  Location     Type
  7858 ;;                  1    wreg      void 
  7859 ;; Registers used:
  7860 ;;		wreg, status,2, status,0, pclath, cstack
  7861 ;; Tracked objects:
  7862 ;;		On entry : 1F/7
  7863 ;;		On exit  : 1F/7
  7864 ;;		Unchanged: 0/0
  7865 ;; Data sizes:     COMMON   BANK0   BANK1
  7866 ;;      Params:         0       0       0
  7867 ;;      Locals:         0       0       0
  7868 ;;      Temps:          0       0       0
  7869 ;;      Totals:         0       0       0
  7870 ;;Total ram usage:        0 bytes
  7871 ;; Hardware stack levels used:    1
  7872 ;; Hardware stack levels required when called:    1
  7873 ;; This function calls:
  7874 ;;		Absolute function
  7875 ;;		_IOCAF4_DefaultInterruptHandler
  7876 ;;		__IOC_Ready
  7877 ;; This function is called by:
  7878 ;;		_PIN_MANAGER_IOC
  7879 ;; This function uses a non-reentrant model
  7880 ;;
  7881                           
  7882                           
  7883                           ;psect for function _IOCAF4_ISR
  7884  068E                     _IOCAF4_ISR:	
  7885  068E                     i1l2779:	
  7886                           ;incstack = 0
  7887                           ; Regs used in _IOCAF4_ISR: [wreg+status,2+status,0+pclath+cstack]
  7888                           
  7889                           
  7890                           ;mcc_generated_files/pin_manager.c: 132:     if(IOCAF4_InterruptHandler)
  7891  068E  0020               	movlb	0	; select bank0
  7892  068F  086D               	movf	_IOCAF4_InterruptHandler,w
  7893  0690  046E               	iorwf	_IOCAF4_InterruptHandler+1,w
  7894  0691  1903               	btfsc	3,2
  7895  0692  2E98               	goto	i1l2783
  7896                           
  7897                           ;mcc_generated_files/pin_manager.c: 133:     {;mcc_generated_files/pin_manager.c: 134:  
      +                                 IOCAF4_InterruptHandler();
  7898  0693  086E               	movf	_IOCAF4_InterruptHandler+1,w
  7899  0694  008A               	movwf	10
  7900  0695  086D               	movf	_IOCAF4_InterruptHandler,w
  7901  0696  000A               	callw
  7902  0697  3186               	pagesel	$
  7903  0698                     i1l2783:	
  7904                           
  7905                           ;mcc_generated_files/pin_manager.c: 136:     IOCAFbits.IOCAF4 = 0;
  7906  0698  0027               	movlb	7	; select bank7
  7907  0699  1213               	bcf	19,4	;volatile
  7908  069A  0008               	return
  7909  069B                     __end_of_IOCAF4_ISR:	
  7910                           
  7911                           	psect	text60
  7912  0790                     __ptext60:	
  7913 ;; *************** function _IOCAF4_DefaultInterruptHandler *****************
  7914 ;; Defined at:
  7915 ;;		line 149 in file "mcc_generated_files/pin_manager.c"
  7916 ;; Parameters:    Size  Location     Type
  7917 ;;		None
  7918 ;; Auto vars:     Size  Location     Type
  7919 ;;		None
  7920 ;; Return value:  Size  Location     Type
  7921 ;;                  1    wreg      void 
  7922 ;; Registers used:
  7923 ;;		None
  7924 ;; Tracked objects:
  7925 ;;		On entry : 1F/0
  7926 ;;		On exit  : 1F/0
  7927 ;;		Unchanged: 1F/0
  7928 ;; Data sizes:     COMMON   BANK0   BANK1
  7929 ;;      Params:         0       0       0
  7930 ;;      Locals:         0       0       0
  7931 ;;      Temps:          0       0       0
  7932 ;;      Totals:         0       0       0
  7933 ;;Total ram usage:        0 bytes
  7934 ;; Hardware stack levels used:    1
  7935 ;; This function calls:
  7936 ;;		Nothing
  7937 ;; This function is called by:
  7938 ;;		_PIN_MANAGER_Initialize
  7939 ;;		_IOCAF4_ISR
  7940 ;; This function uses a non-reentrant model
  7941 ;;
  7942                           
  7943                           
  7944                           ;psect for function _IOCAF4_DefaultInterruptHandler
  7945  0790                     _IOCAF4_DefaultInterruptHandler:	
  7946                           
  7947                           ;incstack = 0
  7948                           ; Regs used in _IOCAF4_DefaultInterruptHandler: []
  7949  0790  0008               	return
  7950  0791                     __end_of_IOCAF4_DefaultInterruptHandler:	
  7951                           
  7952                           	psect	text61
  7953  071C                     __ptext61:	
  7954 ;; *************** function __IOC_Ready *****************
  7955 ;; Defined at:
  7956 ;;		line 160 in file "logger.c"
  7957 ;; Parameters:    Size  Location     Type
  7958 ;;		None
  7959 ;; Auto vars:     Size  Location     Type
  7960 ;;		None
  7961 ;; Return value:  Size  Location     Type
  7962 ;;                  1    wreg      void 
  7963 ;; Registers used:
  7964 ;;		wreg, status,2
  7965 ;; Tracked objects:
  7966 ;;		On entry : 1F/0
  7967 ;;		On exit  : 1F/0
  7968 ;;		Unchanged: 0/0
  7969 ;; Data sizes:     COMMON   BANK0   BANK1
  7970 ;;      Params:         0       0       0
  7971 ;;      Locals:         0       0       0
  7972 ;;      Temps:          0       0       0
  7973 ;;      Totals:         0       0       0
  7974 ;;Total ram usage:        0 bytes
  7975 ;; Hardware stack levels used:    1
  7976 ;; This function calls:
  7977 ;;		Nothing
  7978 ;; This function is called by:
  7979 ;;		_logger_initialize
  7980 ;;		_IOCAF4_ISR
  7981 ;; This function uses a non-reentrant model
  7982 ;;
  7983                           
  7984                           
  7985                           ;psect for function __IOC_Ready
  7986  071C                     __IOC_Ready:	
  7987                           
  7988                           ;logger.c: 163:     IOC_value = PORTAbits.RA4;
  7989                           
  7990                           ;incstack = 0
  7991                           ; Regs used in __IOC_Ready: [wreg+status,2]
  7992  071C  3000               	movlw	0
  7993  071D  1A0C               	btfsc	12,4	;volatile
  7994  071E  3001               	movlw	1
  7995  071F  00E1               	movwf	_IOC_value	;volatile
  7996                           
  7997                           ;logger.c: 164:     IOC_state = IOC_READY;
  7998  0720  3001               	movlw	1
  7999  0721  00E6               	movwf	_IOC_state	;volatile
  8000  0722  0008               	return
  8001  0723                     __end_of__IOC_Ready:	
  8002                           
  8003                           	psect	text62
  8004  05C3                     __ptext62:	
  8005 ;; *************** function _EUSART_Transmit_ISR *****************
  8006 ;; Defined at:
  8007 ;;		line 172 in file "mcc_generated_files/eusart.c"
  8008 ;; Parameters:    Size  Location     Type
  8009 ;;		None
  8010 ;; Auto vars:     Size  Location     Type
  8011 ;;		None
  8012 ;; Return value:  Size  Location     Type
  8013 ;;                  1    wreg      void 
  8014 ;; Registers used:
  8015 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8016 ;; Tracked objects:
  8017 ;;		On entry : 1F/0
  8018 ;;		On exit  : 1E/0
  8019 ;;		Unchanged: 0/0
  8020 ;; Data sizes:     COMMON   BANK0   BANK1
  8021 ;;      Params:         0       0       0
  8022 ;;      Locals:         0       0       0
  8023 ;;      Temps:          0       0       0
  8024 ;;      Totals:         0       0       0
  8025 ;;Total ram usage:        0 bytes
  8026 ;; Hardware stack levels used:    1
  8027 ;; This function calls:
  8028 ;;		Nothing
  8029 ;; This function is called by:
  8030 ;;		_EUSART_Initialize
  8031 ;;		_INTERRUPT_InterruptManager
  8032 ;; This function uses a non-reentrant model
  8033 ;;
  8034                           
  8035                           
  8036                           ;psect for function _EUSART_Transmit_ISR
  8037  05C3                     _EUSART_Transmit_ISR:	
  8038                           
  8039                           ;mcc_generated_files/eusart.c: 176:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  8040                           
  8041                           ;incstack = 0
  8042                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  8043  05C3  3008               	movlw	8
  8044  05C4  027A               	subwf	_eusartTxBufferRemaining,w
  8045  05C5  1803               	skipnc
  8046  05C6  2DD6               	goto	i1l165
  8047                           
  8048                           ;mcc_generated_files/eusart.c: 177:     {;mcc_generated_files/eusart.c: 178:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
  8049  05C7  086B               	movf	_eusartTxTail,w
  8050  05C8  3E4D               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  8051  05C9  0086               	movwf	6
  8052  05CA  0187               	clrf	7
  8053  05CB  0801               	movf	1,w
  8054  05CC  0023               	movlb	3	; select bank3
  8055  05CD  009A               	movwf	26	;volatile
  8056  05CE  0020               	movlb	0	; select bank0
  8057  05CF  0AEB               	incf	_eusartTxTail,f	;volatile
  8058                           
  8059                           ;mcc_generated_files/eusart.c: 179:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  8060  05D0  3008               	movlw	8
  8061  05D1  026B               	subwf	_eusartTxTail,w
  8062  05D2  1803               	btfsc	3,0
  8063                           
  8064                           ;mcc_generated_files/eusart.c: 180:         {;mcc_generated_files/eusart.c: 181:        
      +                               eusartTxTail = 0;
  8065  05D3  01EB               	clrf	_eusartTxTail	;volatile
  8066                           
  8067                           ;mcc_generated_files/eusart.c: 183:         eusartTxBufferRemaining++;
  8068  05D4  0AFA               	incf	_eusartTxBufferRemaining,f	;volatile
  8069                           
  8070                           ;mcc_generated_files/eusart.c: 184:     }
  8071  05D5  0008               	return
  8072  05D6                     i1l165:	
  8073                           ;mcc_generated_files/eusart.c: 185:     else
  8074                           
  8075                           
  8076                           ;mcc_generated_files/eusart.c: 186:     {;mcc_generated_files/eusart.c: 187:         PIE
      +                          1bits.TXIE = 0;
  8077  05D6  0021               	movlb	1	; select bank1
  8078  05D7  1211               	bcf	17,4	;volatile
  8079  05D8  0008               	return
  8080  05D9                     __end_of_EUSART_Transmit_ISR:	
  8081                           
  8082                           	psect	text63
  8083  05D9                     __ptext63:	
  8084 ;; *************** function _EUSART_Receive_ISR *****************
  8085 ;; Defined at:
  8086 ;;		line 191 in file "mcc_generated_files/eusart.c"
  8087 ;; Parameters:    Size  Location     Type
  8088 ;;		None
  8089 ;; Auto vars:     Size  Location     Type
  8090 ;;		None
  8091 ;; Return value:  Size  Location     Type
  8092 ;;                  1    wreg      void 
  8093 ;; Registers used:
  8094 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8095 ;; Tracked objects:
  8096 ;;		On entry : 1F/0
  8097 ;;		On exit  : 1F/0
  8098 ;;		Unchanged: 0/0
  8099 ;; Data sizes:     COMMON   BANK0   BANK1
  8100 ;;      Params:         0       0       0
  8101 ;;      Locals:         0       0       0
  8102 ;;      Temps:          0       0       0
  8103 ;;      Totals:         0       0       0
  8104 ;;Total ram usage:        0 bytes
  8105 ;; Hardware stack levels used:    1
  8106 ;; This function calls:
  8107 ;;		Nothing
  8108 ;; This function is called by:
  8109 ;;		_EUSART_Initialize
  8110 ;;		_INTERRUPT_InterruptManager
  8111 ;; This function uses a non-reentrant model
  8112 ;;
  8113                           
  8114                           
  8115                           ;psect for function _EUSART_Receive_ISR
  8116  05D9                     _EUSART_Receive_ISR:	
  8117                           
  8118                           ;mcc_generated_files/eusart.c: 194:     if(1 == RCSTAbits.OERR)
  8119                           
  8120                           ;incstack = 0
  8121                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  8122  05D9  0023               	movlb	3	; select bank3
  8123  05DA  1C9D               	btfss	29,1	;volatile
  8124  05DB  2DDE               	goto	i1l2925
  8125                           
  8126                           ;mcc_generated_files/eusart.c: 195:     {;mcc_generated_files/eusart.c: 198:         RCS
      +                          TAbits.CREN = 0;
  8127  05DC  121D               	bcf	29,4	;volatile
  8128                           
  8129                           ;mcc_generated_files/eusart.c: 199:         RCSTAbits.CREN = 1;
  8130  05DD  161D               	bsf	29,4	;volatile
  8131  05DE                     i1l2925:	
  8132                           
  8133                           ;mcc_generated_files/eusart.c: 203:     eusartRxBuffer[eusartRxHead++] = RCREG;
  8134  05DE  0020               	movlb	0	; select bank0
  8135  05DF  086A               	movf	_eusartRxHead,w
  8136  05E0  3EA0               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  8137  05E1  0086               	movwf	6
  8138  05E2  0187               	clrf	7
  8139  05E3  0023               	movlb	3	; select bank3
  8140  05E4  0819               	movf	25,w	;volatile
  8141  05E5  0081               	movwf	1
  8142  05E6  0020               	movlb	0	; select bank0
  8143  05E7  0AEA               	incf	_eusartRxHead,f	;volatile
  8144                           
  8145                           ;mcc_generated_files/eusart.c: 204:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  8146  05E8  3008               	movlw	8
  8147  05E9  026A               	subwf	_eusartRxHead,w
  8148  05EA  1803               	btfsc	3,0
  8149                           
  8150                           ;mcc_generated_files/eusart.c: 205:     {;mcc_generated_files/eusart.c: 206:         eus
      +                          artRxHead = 0;
  8151  05EB  01EA               	clrf	_eusartRxHead	;volatile
  8152                           
  8153                           ;mcc_generated_files/eusart.c: 208:     eusartRxCount++;
  8154  05EC  0AE8               	incf	_eusartRxCount,f	;volatile
  8155  05ED  0008               	return
  8156  05EE                     __end_of_EUSART_Receive_ISR:	
  8157                           
  8158                           	psect	text64
  8159  078C                     __ptext64:	
  8160 ;; *************** function _ADC_ISR *****************
  8161 ;; Defined at:
  8162 ;;		line 140 in file "mcc_generated_files/adc.c"
  8163 ;; Parameters:    Size  Location     Type
  8164 ;;		None
  8165 ;; Auto vars:     Size  Location     Type
  8166 ;;		None
  8167 ;; Return value:  Size  Location     Type
  8168 ;;                  1    wreg      void 
  8169 ;; Registers used:
  8170 ;;		None
  8171 ;; Tracked objects:
  8172 ;;		On entry : 1F/0
  8173 ;;		On exit  : 1F/0
  8174 ;;		Unchanged: 0/0
  8175 ;; Data sizes:     COMMON   BANK0   BANK1
  8176 ;;      Params:         0       0       0
  8177 ;;      Locals:         0       0       0
  8178 ;;      Temps:          0       0       0
  8179 ;;      Totals:         0       0       0
  8180 ;;Total ram usage:        0 bytes
  8181 ;; Hardware stack levels used:    1
  8182 ;; This function calls:
  8183 ;;		Nothing
  8184 ;; This function is called by:
  8185 ;;		_INTERRUPT_InterruptManager
  8186 ;; This function uses a non-reentrant model
  8187 ;;
  8188                           
  8189                           
  8190                           ;psect for function _ADC_ISR
  8191  078C                     _ADC_ISR:	
  8192                           
  8193                           ;mcc_generated_files/adc.c: 143:     PIR1bits.ADIF = 0;
  8194                           
  8195                           ;incstack = 0
  8196                           ; Regs used in _ADC_ISR: []
  8197  078C  1311               	bcf	17,6	;volatile
  8198  078D  0008               	return
  8199  078E                     __end_of_ADC_ISR:	
  8200                           
  8201                           	psect	text65
  8202  06E6                     __ptext65:	
  8203 ;; *************** function _ADC_GetConversionResult *****************
  8204 ;; Defined at:
  8205 ;;		line 106 in file "mcc_generated_files/adc.c"
  8206 ;; Parameters:    Size  Location     Type
  8207 ;;		None
  8208 ;; Auto vars:     Size  Location     Type
  8209 ;;		None
  8210 ;; Return value:  Size  Location     Type
  8211 ;;                  2    0[COMMON] unsigned short 
  8212 ;; Registers used:
  8213 ;;		wreg
  8214 ;; Tracked objects:
  8215 ;;		On entry : 1F/0
  8216 ;;		On exit  : 1F/1
  8217 ;;		Unchanged: 0/0
  8218 ;; Data sizes:     COMMON   BANK0   BANK1
  8219 ;;      Params:         2       0       0
  8220 ;;      Locals:         0       0       0
  8221 ;;      Temps:          0       0       0
  8222 ;;      Totals:         2       0       0
  8223 ;;Total ram usage:        2 bytes
  8224 ;; Hardware stack levels used:    1
  8225 ;; This function calls:
  8226 ;;		Nothing
  8227 ;; This function is called by:
  8228 ;;		_INTERRUPT_InterruptManager
  8229 ;; This function uses a non-reentrant model
  8230 ;;
  8231                           
  8232                           
  8233                           ;psect for function _ADC_GetConversionResult
  8234  06E6                     _ADC_GetConversionResult:	
  8235                           
  8236                           ;mcc_generated_files/adc.c: 109:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  8237                           
  8238                           ;incstack = 0
  8239                           ; Regs used in _ADC_GetConversionResult: [wreg]
  8240  06E6  0021               	movlb	1	; select bank1
  8241  06E7  081C               	movf	28,w	;volatile
  8242  06E8  00F1               	movwf	?_ADC_GetConversionResult+1
  8243  06E9  01F0               	clrf	?_ADC_GetConversionResult
  8244  06EA  081B               	movf	27,w	;volatile
  8245  06EB  07F0               	addwf	?_ADC_GetConversionResult,f
  8246  06EC  1803               	skipnc
  8247  06ED  0AF1               	incf	?_ADC_GetConversionResult+1,f
  8248  06EE  0008               	return
  8249  06EF                     __end_of_ADC_GetConversionResult:	
  8250  007E                     btemp	set	126	;btemp
  8251  007E                     int$flags	set	126
  8252  007E                     wtemp0	set	126


Data Sizes:
    Strings     222
    Constant    0
    Data        0
    BSS         66
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     45      79
    BANK1            32      0      32

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_15(CODE[2]), STR_7(CODE[7]), STR_6(CODE[8]), STR_5(CODE[5]), 
		 -> STR_4(CODE[6]), STR_3(CODE[10]), STR_2(CODE[3]), STR_1(CODE[8]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_15(CODE[2]), STR_7(CODE[7]), STR_6(CODE[8]), STR_5(CODE[5]), 
		 -> STR_4(CODE[6]), STR_3(CODE[10]), STR_2(CODE[3]), STR_1(CODE[8]), 

    strncmp@_l	PTR const unsigned char  size(1) Largest target is 24
		 -> NULL(NULL[0]), esp_read_data(BANK1[24]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 24
		 -> NULL(NULL[0]), esp_read_data(BANK1[24]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_15(CODE[2]), STR_7(CODE[7]), STR_6(CODE[8]), STR_5(CODE[5]), 
		 -> STR_4(CODE[6]), STR_3(CODE[10]), STR_2(CODE[3]), STR_1(CODE[8]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_15(CODE[2]), STR_7(CODE[7]), STR_6(CODE[8]), STR_5(CODE[5]), 
		 -> STR_4(CODE[6]), STR_3(CODE[10]), STR_2(CODE[3]), STR_1(CODE[8]), 

    strchr@s	PTR const unsigned char  size(1) Largest target is 24
		 -> NULL(NULL[0]), esp_read_data(BANK1[24]), 

    sp__strchr	PTR unsigned char  size(1) Largest target is 24
		 -> NULL(NULL[0]), esp_read_data(BANK1[24]), 

    strstr@h	PTR const unsigned char  size(1) Largest target is 24
		 -> NULL(NULL[0]), esp_read_data(BANK1[24]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_15(CODE[2]), STR_7(CODE[7]), STR_6(CODE[8]), STR_5(CODE[5]), 
		 -> STR_4(CODE[6]), STR_3(CODE[10]), STR_2(CODE[3]), STR_1(CODE[8]), 

    ESP_Set_application_handler@applicationHandler	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> ESP_default_application_handler(), process_message(), 

    ESP_write@pt	PTR unsigned char  size(2) Largest target is 7
		 -> STR_24(CODE[3]), STR_23(CODE[3]), STR_22(CODE[7]), STR_21(CODE[7]), 
		 -> read_analog@mess(BANK0[6]), STR_20(CODE[4]), 

    ESP_external_message_handler	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> ESP_default_application_handler(), process_message(), Absolute function(), 

    ESP_process_rx_data@index	PTR unsigned char  size(1) Largest target is 24
		 -> NULL(NULL[0]), esp_read_data(BANK1[24]), 

    ESP_config@pass	PTR unsigned char  size(1) Largest target is 14
		 -> read_wifi_settings@pass(BANK0[14]), 

    ESP_config@wifi	PTR unsigned char  size(1) Largest target is 10
		 -> read_wifi_settings@wifi(BANK0[10]), 

    sp__strstr	PTR unsigned char  size(1) Largest target is 24
		 -> NULL(NULL[0]), esp_read_data(BANK1[24]), 

    ESP_process_message@aux	PTR unsigned char  size(1) Largest target is 24
		 -> NULL(NULL[0]), esp_read_data(BANK1[24]), 

    _gets@pt	PTR unsigned char  size(1) Largest target is 16
		 -> config_wifi_settings@line(BANK0[16]), 

    _sprintf@mess	PTR unsigned char  size(1) Largest target is 6
		 -> read_analog@mess(BANK0[6]), 

    write@pt	PTR unsigned char  size(2) Largest target is 14
		 -> read_wifi_settings@pass(BANK0[14]), read_wifi_settings@wifi(BANK0[10]), STR_24(CODE[3]), STR_23(CODE[3]), 
		 -> STR_22(CODE[7]), STR_21(CODE[7]), read_analog@mess(BANK0[6]), STR_20(CODE[4]), 
		 -> ESP_write@res(BANK0[1]), ESP_write@aux(BANK0[1]), 

    _puts@pt	PTR unsigned char  size(2) Largest target is 22
		 -> STR_29(CODE[13]), STR_28(CODE[22]), STR_27(CODE[13]), STR_26(CODE[18]), 
		 -> STR_25(CODE[13]), STR_19(CODE[3]), STR_18(CODE[3]), STR_17(CODE[2]), 
		 -> STR_16(CODE[12]), STR_14(CODE[20]), STR_13(CODE[14]), STR_12(CODE[4]), 
		 -> STR_11(CODE[4]), STR_10(CODE[11]), STR_9(CODE[14]), STR_8(CODE[5]), 

    IOCAF4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> _IOC_Ready(), IOCAF4_DefaultInterruptHandler(), 

    IOCAF4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> _IOC_Ready(), IOCAF4_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> _TMR1_Ready(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> _TMR1_Ready(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Transmit_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 


Critical Paths under _main in COMMON

    _read_analog->___lmul
    __sprintf->___lwdiv
    _logger_initialize->_ADC_SelectChannel
    _logger_initialize->_ESP_Set_application_handler
    _logger_initialize->_IOCAF4_SetInterruptHandler
    _logger_initialize->_TMR1_SetInterruptHandler
    _config_wifi_settings->__puts
    __gets->_EUSART_Read
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCAF4_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _ESP_process_rx_data->_strstr
    _ESP_write->___awdiv
    _write->_EUSART_Write
    __puts->_EUSART_Write
    _ESP_process_message->_strstr
    _strstr->_strlen
    _strstr->_strncmp
    _ESP_initialize->_ESP_Set_application_handler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_ADC_GetConversionResult
    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->_read_wifi_settings
    _read_wifi_settings->_ESP_config
    _ESP_config->_ESP_wait_for
    _read_analog->_ESP_write
    _process_ioc->_ESP_write
    _ESP_message_handler->_ESP_process_rx_data
    _ESP_process_rx_data->_process_message
    _process_message->_ESP_write
    _toggle_format->_ESP_write
    _ESP_write->_ESP_wait_for
    _ESP_wait_for->_ESP_read
    _ESP_read->_ESP_process_message
    _ESP_process_message->_strstr
    _strstr->_strncmp

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   70460
                     _ESP_initialize
                _ESP_message_handler
                 _EUSART_is_rx_ready
                  _SYSTEM_Initialize
               _config_wifi_settings
                  _logger_initialize
                        _process_ioc
                    _process_message
                        _read_analog
                 _read_wifi_settings
 ---------------------------------------------------------------------------------
 (1) _read_wifi_settings                                  28    28      0    6459
                                             17 BANK0     28    28      0
                    _DATAEE_ReadByte
                         _ESP_config
 ---------------------------------------------------------------------------------
 (2) _ESP_config                                           6     3      3    5887
                                             11 BANK0      6     3      3
                       _ESP_wait_for
                        _EUSART_Read
                 _EUSART_is_rx_ready
                              __puts
                              _write
 ---------------------------------------------------------------------------------
 (3) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _read_analog                                         16    16      0   13126
                                             16 BANK0     16    16      0
                       _ESP_wait_for
                          _ESP_write
                             ___lmul
                           __sprintf
 ---------------------------------------------------------------------------------
 (2) __sprintf                                             5     3      2    1873
                                              0 BANK0      5     3      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     615
                                              2 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     244
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _process_ioc                                          0     0      0   10633
                       _ESP_wait_for
                          _ESP_write
 ---------------------------------------------------------------------------------
 (1) _logger_initialize                                    0     0      0     544
                  _ADC_SelectChannel
        _ESP_Set_application_handler
         _IOCAF4_SetInterruptHandler
           _TMR1_SetInterruptHandler
                     _TMR1_StopTimer
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _config_wifi_settings                                19    19      0    2534
                                              0 BANK0     19    19      0
                   _DATAEE_WriteByte
                              __gets
                              __puts
 ---------------------------------------------------------------------------------
 (2) __gets                                                5     4      1     399
                                              3 COMMON     5     4      1
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     3     2      1     372
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     544
                     _ADC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR1_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
         _IOCAF4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _IOCAF4_SetInterruptHandler                           2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     196
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ESP_message_handler                                  6     6      0   20785
                                             21 BANK0      3     3      0
                _ESP_process_rx_data
                           _ESP_read
 ---------------------------------------------------------------------------------
 (2) _ESP_process_rx_data                                  2     2      0   18117
                                             19 BANK0      2     2      0
                   Absolute function *
    _ESP_default_application_handler *
                    _process_message *
                             _strstr
 ---------------------------------------------------------------------------------
 (1) _process_message                                      3     2      1   15661
                                             16 BANK0      3     2      1
                _ADC_StartConversion
                          _ESP_write
                    _TMR1_StartTimer
                     _TMR1_StopTimer
                      _toggle_format
 ---------------------------------------------------------------------------------
 (2) _toggle_format                                        0     0      0    7748
                          _ESP_write
 ---------------------------------------------------------------------------------
 (2) _ESP_write                                            5     2      3    7748
                                             11 BANK0      5     2      3
                       _ESP_wait_for
                            ___awdiv
                            ___lbmod
                              __puts
                              _write
 ---------------------------------------------------------------------------------
 (3) _write                                                6     3      3    1198
                                              3 COMMON     6     3      3
                       _EUSART_Write
                 _EUSART_is_tx_ready
 ---------------------------------------------------------------------------------
 (3) __puts                                                6     4      2    1350
                                              3 COMMON     6     4      2
                       _EUSART_Write
                 _EUSART_is_tx_ready
 ---------------------------------------------------------------------------------
 (4) _EUSART_is_tx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      44
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              5     4      1     235
                                              2 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) _ESP_wait_for                                         2     2      0    2885
                                              9 BANK0      2     2      0
                           _ESP_read
 ---------------------------------------------------------------------------------
 (4) _ESP_read                                             2     2      0    2634
                                              7 BANK0      2     2      0
                _ESP_process_message
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          1     1      0      24
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _ESP_process_message                                  1     1      0    2573
                                              6 BANK0      1     1      0
                             _strstr
 ---------------------------------------------------------------------------------
 (6) _strstr                                               5     3      2    2335
                                              7 COMMON     3     3      0
                                              4 BANK0      2     0      2
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (7) _strncmp                                              9     5      4     541
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (7) _strlen                                               5     3      2     220
                                              2 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (7) _strchr                                               3     1      2     250
                                              2 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ESP_default_application_handler                      1     0      1      53
                                             16 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ESP_initialize                                       0     0      0     174
        _ESP_Set_application_handler
 ---------------------------------------------------------------------------------
 (2) _ESP_Set_application_handler                          2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          0     0      0     229
                   Absolute function *
            _ADC_GetConversionResult
                            _ADC_ISR
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR1_ISR                                            0     0      0     229
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                        __TMR1_Ready *
 ---------------------------------------------------------------------------------
 (13) __TMR1_Ready                                         0     0      0       0
              i1_ADC_StartConversion
 ---------------------------------------------------------------------------------
 (14) i1_ADC_StartConversion                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR1_WriteTimer                                     2     0      2     229
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (13) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _PIN_MANAGER_IOC                                     0     0      0       0
                         _IOCAF4_ISR
 ---------------------------------------------------------------------------------
 (13) _IOCAF4_ISR                                          0     0      0       0
                   Absolute function *
     _IOCAF4_DefaultInterruptHandler *
                         __IOC_Ready *
 ---------------------------------------------------------------------------------
 (14) __IOC_Ready                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _IOCAF4_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ADC_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ADC_GetConversionResult                             2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ESP_initialize
     _ESP_Set_application_handler
   _ESP_message_handler
     _ESP_process_rx_data
       Absolute function(Fake) *
       _ESP_default_application_handler *
       _process_message *
         _ADC_StartConversion
         _ESP_write
           _ESP_wait_for
             _ESP_read
               _ESP_process_message
                 _strstr
                   _strchr
                   _strlen
                   _strncmp
               _EUSART_Read
           ___awdiv
           ___lbmod
           __puts
             _EUSART_Write
             _EUSART_is_tx_ready
           _write
             _EUSART_Write
             _EUSART_is_tx_ready
         _TMR1_StartTimer
         _TMR1_StopTimer
         _toggle_format
           _ESP_write
             _ESP_wait_for
               _ESP_read
                 _ESP_process_message
                   _strstr
                     _strchr
                     _strlen
                     _strncmp
                 _EUSART_Read
             ___awdiv
             ___lbmod
             __puts
               _EUSART_Write
               _EUSART_is_tx_ready
             _write
               _EUSART_Write
               _EUSART_is_tx_ready
       _strstr *
         _strchr
         _strlen
         _strncmp
     _ESP_read
       _ESP_process_message
         _strstr
           _strchr
           _strlen
           _strncmp
       _EUSART_Read
   _EUSART_is_rx_ready
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCAF4_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize
   _config_wifi_settings
     _DATAEE_WriteByte
     __gets
       _EUSART_Read
     __puts
       _EUSART_Write
       _EUSART_is_tx_ready
   _logger_initialize
     _ADC_SelectChannel
     _ESP_Set_application_handler
     _IOCAF4_SetInterruptHandler
     _TMR1_SetInterruptHandler
     _TMR1_StopTimer
   _process_ioc
     _ESP_wait_for
       _ESP_read
         _ESP_process_message
           _strstr
             _strchr
             _strlen
             _strncmp
         _EUSART_Read
     _ESP_write
       _ESP_wait_for
         _ESP_read
           _ESP_process_message
             _strstr
               _strchr
               _strlen
               _strncmp
           _EUSART_Read
       ___awdiv
       ___lbmod
       __puts
         _EUSART_Write
         _EUSART_is_tx_ready
       _write
         _EUSART_Write
         _EUSART_is_tx_ready
   _process_message
     _ADC_StartConversion
     _ESP_write
       _ESP_wait_for
         _ESP_read
           _ESP_process_message
             _strstr
               _strchr
               _strlen
               _strncmp
           _EUSART_Read
       ___awdiv
       ___lbmod
       __puts
         _EUSART_Write
         _EUSART_is_tx_ready
       _write
         _EUSART_Write
         _EUSART_is_tx_ready
     _TMR1_StartTimer
     _TMR1_StopTimer
     _toggle_format
       _ESP_write
         _ESP_wait_for
           _ESP_read
             _ESP_process_message
               _strstr
                 _strchr
                 _strlen
                 _strncmp
             _EUSART_Read
         ___awdiv
         ___lbmod
         __puts
           _EUSART_Write
           _EUSART_is_tx_ready
         _write
           _EUSART_Write
           _EUSART_is_tx_ready
   _read_analog
     _ESP_wait_for
       _ESP_read
         _ESP_process_message
           _strstr
             _strchr
             _strlen
             _strncmp
         _EUSART_Read
     _ESP_write
       _ESP_wait_for
         _ESP_read
           _ESP_process_message
             _strstr
               _strchr
               _strlen
               _strncmp
           _EUSART_Read
       ___awdiv
       ___lbmod
       __puts
         _EUSART_Write
         _EUSART_is_tx_ready
       _write
         _EUSART_Write
         _EUSART_is_tx_ready
     ___lmul
     __sprintf
       ___lwdiv
       ___lwmod
   _read_wifi_settings
     _DATAEE_ReadByte
     _ESP_config
       _ESP_wait_for
         _ESP_read
           _ESP_process_message
             _strstr
               _strchr
               _strlen
               _strncmp
           _EUSART_Read
       _EUSART_Read
       _EUSART_is_rx_ready
       __puts
         _EUSART_Write
         _EUSART_is_tx_ready
       _write
         _EUSART_Write
         _EUSART_is_tx_ready

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADC_GetConversionResult *
   _ADC_ISR *
   _EUSART_Receive_ISR *
   _EUSART_Transmit_ISR *
   _PIN_MANAGER_IOC *
     _IOCAF4_ISR
       Absolute function(Fake) *
       _IOCAF4_DefaultInterruptHandler *
       __IOC_Ready *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     __TMR1_Ready *
       i1_ADC_StartConversion

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      7B       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     2D      4F       6       98.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0      20       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      7B       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Aug  8 15:21:45 2018

                ?_EUSART_SetRxInterruptHandler 0072                                    __CFG_CP$OFF 0000  
                                           PL2 01C9                                             PL4 04E7  
                                           PL6 01D5                                             PL8 00F6  
                                 ___awdiv@sign 0077                                            PL10 01DD  
                                          PL20 014F                                            PL12 0148  
                                          PL22 00FE                                            PL14 0268  
                                          PL24 026F                                            PL16 01E3  
                                          PL18 031D                                            l211 06D9  
                                          l159 04C9                                            l369 0471  
                                          l478 040A                                            l591 02CB  
                                          l585 02ED                                            l498 0407  
                                          l588 02C8                                            l782 037E  
                                          l679 04B5                                   __CFG_CPD$OFF 0000  
                              _timer1ReloadVal 0059                                __end_of_ADC_ISR 078E  
                                 __CFG_BORV$LO 0000                                            wreg 0009  
                                 __CFG_IESO$ON 0000                                   ?_EUSART_Read 0070  
                                 __CFG_LVP$OFF 0000                                 ?_toggle_format 0070  
                                         l1227 0629                                           l3009 00EC  
                                         l3211 0257                                           l3213 023F  
                                         l2501 02A3                                           l3231 0632  
                                         l2431 04DA                                           l2423 04D9  
                                         l2505 02A7                                           l2425 04DE  
                                         l2441 0525                                           l3219 025D  
                                         l2435 0529                                           l3411 060E  
                                         l2293 0554                                           l3325 03B5  
                                         l2509 02AF                                           l2525 0550  
                                         l2517 0540                                           l3405 0602  
                                         l3421 02BD                                           l3247 0349  
                                         l3335 03BE                                           l3431 02C5  
                                         l3423 02BE                                           l3511 0302  
                                         l3193 05B1                                           l3249 0330  
                                         l2393 04D6                                           l3417 02B5  
                                         l3601 0482                                           l3195 05BC  
                                         l2483 0287                                           l2379 04BF  
                                         l3371 0103                                           l3427 02C1  
                                         l3419 02BC                                           l3531 03E9  
                                         l2643 0371                                           l2635 0362  
                                         l2565 077C                                           l2493 0294  
                                         l2477 027E                                           l3437 02CE  
                                         l3533 03EA                                           l3525 0309  
                                         l3509 02F6                                           l2823 0757  
                                         l3359 0419                                           l3535 03EF  
                                         l2815 04A1                                           l2647 0375  
                                         l2663 0440                                           l3527 0315  
                                         l3369 0424                                           l3393 0131  
                                         l2817 0489                                           l3465 006B  
                                         l3539 03F1                                           l2659 0434  
                                         l2667 0444                                           l3467 0071  
                                         l3469 050C                                           l3645 03F9  
                                         l2685 03C4                                           l3557 0169  
                                         l3647 02D6                                           l3575 058E  
                                         l3591 0477                                           l2883 0388  
                                         l3595 047B                                           l3587 0472  
                                         l2983 00C9                                           l2985 00D3  
                                         l2969 00C1                                           l2995 00E3  
                                         STR_1 06EF                                           STR_2 06F4  
                                         STR_3 06C9                                           STR_4 0723  
                                         STR_5 0752                                           STR_6 06F7  
                                         STR_7 0715                                           STR_8 074D  
                                         STR_9 064A                                           _LATA 010C  
                                         u1415 0543                                           _LATC 010E  
                                         u2315 0186                                           u1535 043A  
                                         u1385 029C                                           u1495 036A  
                                         u2387 0057                                           u2397 0064  
                                         i1l81 0031                                           i1l74 000B  
                                         i1l77 0015                                           i1l86 003C  
                                         i1l79 0025                                           _PLLR 04D6  
                                         _WPUA 020C                                           _WPUC 020E  
                                 __CFG_WRT$OFF 0000                                  __CFG_FCMEN$ON 0000  
                                         _main 0469                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                  ?_ESP_config 002B                                  __CFG_BOREN$ON 0000  
                                   __IOC_Ready 071C                                           start 003E  
                   ??_TMR1_SetInterruptHandler 0074                                  __CFG_MCLRE$ON 0000  
                          __end_of__TMR1_Ready 076C                                 ESP_config@pass 002C  
                               ESP_config@wifi 0030                             _ESP_wait_exception 0067  
                          read_wifi_settings@i 004B                      __size_of_DATAEE_WriteByte 001B  
                                __CFG_PLLEN$ON 0000                                  ?_EUSART_Write 0070  
                  __size_of_read_wifi_settings 002F                 __size_of_OSCILLATOR_Initialize 000A  
                          __size_of_IOCAF4_ISR 000D                  __end_of_OSCILLATOR_Initialize 06DD  
                           __size_of_ESP_write 0045                                          ?_main 0070  
                              __end_of___awdiv 02B4                                          STR_10 06B3  
                                        STR_11 0764                                          STR_12 0760  
                                        STR_20 075C                                          STR_21 070E  
                                        STR_13 0658                                          STR_22 0707  
                                        STR_14 05EE                                          STR_15 0784  
                                        STR_23 0770                                          STR_24 0773  
                                        STR_16 069B                                          STR_17 0782  
                                        STR_25 0674                                  __CFG_WDTE$OFF 0000  
                                        STR_18 0761                                          STR_26 0616  
                                        STR_19 0761                                          STR_27 0681  
                                        STR_28 056B                                          STR_29 0681  
                              __end_of___lbmod 0554                                _TMR1_StartTimer 078A  
                              ___awdiv@divisor 0072                                          _T1CON 0018  
                              __end_of___lwdiv 037A                             ESP_config@len_pass 002D  
                                        i1l165 05D6                                __end_of___lwmod 0449  
                           ESP_config@len_wifi 002B                                ___awdiv@counter 0076  
                 ?_ESP_Set_application_handler 0072                                          _RCREG 0199  
                                        _RCSTA 019D                               __end_of_ESP_read 03C4  
                                        _TMR1H 0017                                          _TMR1L 0016  
                                        _TRISA 008C                                          _TRISC 008E  
                       ?i1_ADC_StartConversion 0070                                          _TXREG 019A  
                                        _TXSTA 019E               __size_of_ADC_GetConversionResult 0009  
                                 ?_read_analog 0070                            ___lmul@multiplicand 0076  
                             __end_of_TMR1_ISR 064A                                          __gets 0487  
                              _DATAEE_ReadByte 06BE                        __end_of_PIN_MANAGER_IOC 0770  
                                        __puts 04D9                                 _WDT_Initialize 0779  
                                        _write 0524                        __end_of_TMR1_Initialize 05AD  
                                        pclath 000A                                          status 0003  
                                        wtemp0 007E                     __size_of_logger_initialize 0019  
                              __end_of_strncmp 0268                                _TMR1_WriteTimer 0666  
                              __initialization 003F                                   __end_of_main 0487  
                               ??_EUSART_Write 0072                                      ??_ADC_ISR 0070  
                  ?_INTERRUPT_InterruptManager 0070                 ??_EUSART_SetRxInterruptHandler 0074  
                                       ??_main 007A                            __size_of_ESP_config 005C  
                      _IOCAF4_InterruptHandler 006D                                   __gets@length 0073  
                       __end_of_WDT_Initialize 077C                   __end_of_config_wifi_settings 00F6  
                ??_ESP_Set_application_handler 0074                                ??_toggle_format 007A  
                                       ?__gets 0073                                         ?__puts 0073  
                                       _ADCON0 009D                                         _ADCON1 009E  
                                       _ADRESH 009C                                         _ADRESL 009B  
                                       _EEADRL 0191                                         _EEDATL 0193  
                                       _EECON2 0196                               ___awdiv@dividend 0074  
                                       _APFCON 011D                                         _ANSELA 018C  
                                       _ANSELC 018E                     __end_of_EUSART_is_rx_ready 0779  
                                       _BORCON 0116                                         _T1GCON 0019  
                                       ?_write 0073                        TMR1_WriteTimer@timerVal 0070  
                                       i1l2925 05DE                                         i1l2783 0698  
                                       i1l2777 066F                                         i1l2779 068E  
                   __end_of_EUSART_is_tx_ready 0788                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                  __TMR1_Ready 0768                                         _WDTCON 0097  
                            __end_of_ESP_write 0148                                    ?__IOC_Ready 0070  
                               __CFG_PWRTE$OFF 0000                               ??_ESP_initialize 0074  
         __end_of_TMR1_DefaultInterruptHandler 0790          __size_of_TMR1_DefaultInterruptHandler 0001  
                                _esp_read_data 00A8                   _TMR1_DefaultInterruptHandler 078F  
                             __end_of__sprintf 01C9                                         ___lmul 037A  
                      __end_of_TMR1_StartTimer 078C                                      ??___awdiv 0076  
                               __CFG_STVREN$ON 0000                                      ??___lbmod 0073  
                                    ??___lwdiv 0076                                      ??___lwmod 0076  
                          _EUSART_Transmit_ISR 05C3                               ___awdiv@quotient 0078  
                                       _strchr 0628                        __end_of_DATAEE_ReadByte 06C9  
                                       _strlen 05AD                                         _strstr 0322  
                              ?_WDT_Initialize 0070                       ESP_process_rx_data@index 0033  
   IOCAF4_SetInterruptHandler@InterruptHandler 0072       TMR1_SetInterruptHandler@InterruptHandler 0072  
                             ?_PIN_MANAGER_IOC 0070                                         write@i 0078  
                      __end_of_TMR1_WriteTimer 0674                                      ??_strncmp 0076  
                                 ??_IOCAF4_ISR 0070                           ?_EUSART_Transmit_ISR 0070  
                                 ?_process_ioc 0070                               ?_TMR1_Initialize 0070  
                         __size_of_EUSART_Read 0017                              _SYSTEM_Initialize 072F  
                              ___lbmod@divisor 0072                        __end_of__initialization 004D  
                                ?_ESP_wait_for 0070                                ___lbmod@counter 0075  
                           read_analog@adc_val 003E                             ?_SYSTEM_Initialize 0070  
         __size_of_ESP_Set_application_handler 0005           __end_of_EUSART_SetTxInterruptHandler 0747  
        __size_of_EUSART_SetTxInterruptHandler 0006                   _EUSART_SetTxInterruptHandler 0741  
                                    ?_ESP_read 0070                   __size_of_ADC_StartConversion 0003  
                                  ESP_read@ret 0028                                 __pcstackCOMMON 0070  
                          ??_SYSTEM_Initialize 0074                                  __end_of__gets 04A3  
                                    ?_TMR1_ISR 0070                  ?_TMR1_DefaultInterruptHandler 0070  
                                __end_of__puts 04E7                               _DATAEE_WriteByte 04A3  
       __end_of_IOCAF4_DefaultInterruptHandler 0791        __size_of_IOCAF4_DefaultInterruptHandler 0001  
               _IOCAF4_DefaultInterruptHandler 0790                                  __end_of_write 053C  
                                   __end_ofPL2 01D5                                     __end_ofPL4 04F3  
                                   __end_ofPL6 01DD                                     __end_ofPL8 00FE  
                           __end_of_IOCAF4_ISR 069B                        _ADC_GetConversionResult 06E6  
                               _OPTION_REGbits 0095                            __size_of__IOC_Ready 0007  
                     __size_of_process_message 003A                                        ??__gets 0074  
                                  ESP_write@pt 002B                                        ??__puts 0075  
                        read_wifi_settings@add 004C                           __size_of_read_analog 004D  
                    __end_of_SYSTEM_Initialize 0735                          ??_EUSART_Transmit_ISR 0070  
                                      ??_write 0076                                     __pbssBANK0 004D  
                                   __pbssBANK1 00A0                                 ??_ESP_wait_for 007A  
                         __end_of_EUSART_Write 04D9                                   ??_ESP_config 002E  
                  __size_of_EUSART_Receive_ISR 0015                                     ??_ESP_read 0027  
                                   __pmaintext 0469                           _config_wifi_settings 00AC  
                ?_EUSART_SetTxInterruptHandler 0072               _EUSART_TxDefaultInterruptHandler 005F  
                                      ?___lmul 0072                   __size_of_ESP_process_message 0047  
                 __size_of_ESP_message_handler 0022                               ?_TMR1_StartTimer 0070  
                                   ??_TMR1_ISR 0072                                     __pintentry 0004  
                 __size_of_ESP_process_rx_data 0018                                        _ADC_ISR 078C  
                                      _BAUDCON 019F                                 ___lmul@product 0020  
                      ??i1_ADC_StartConversion 0070                        __size_of_ADC_Initialize 0009  
                                      ?_strchr 0072                                        ?_strlen 0072  
                      __size_of_TMR1_StopTimer 0002                                        ?_strstr 0024  
                             ?_DATAEE_ReadByte 0070                                  _eusartRxCount 0068  
                           __end_of_ESP_config 00AC                                        _OSCTUNE 0098  
                                    ?__sprintf 0020                               ?_TMR1_WriteTimer 0070  
                         DATAEE_WriteByte@bAdd 0073                          ?_config_wifi_settings 0070  
                                    _ADC_value 005B                                      _ADC_state 006C  
                   __end_of_read_wifi_settings 031D                                        ___awdiv 0274  
                              __size_of___lmul 0025                                        ___lbmod 053C  
                                      ___lwdiv 0355                                        ___lwmod 0429  
                    ??_ADC_GetConversionResult 0072                                        __ptext1 02EE  
                                      __ptext2 0050                                        __ptext3 0776  
                                      __ptext4 06BE                                        __ptext5 0154  
                                      __ptext6 01A1                                        __ptext7 0429  
                                      __ptext8 0355                                        __ptext9 037A  
               ??_TMR1_DefaultInterruptHandler 0070                                __size_of_strchr 0012  
                              __size_of_strlen 0016                                      _T1CONbits 0018  
                       ESP_process_message@aux 0026                                __size_of_strstr 0033  
                        _OSCILLATOR_Initialize 06D3              __size_of_TMR1_SetInterruptHandler 0006  
                     ??_PIN_MANAGER_Initialize 0074                      ?_TMR1_SetInterruptHandler 0072  
                                    _IOCAFbits 0393                                      _IOCANbits 0392  
                                    _IOCAPbits 0391                    config_wifi_settings@address 0031  
                   __size_of_SYSTEM_Initialize 0006                                        clrloop0 072A  
                                   ??__sprintf 0079                                        _strncmp 0230  
                       ESP_message_handler@ret 0037                           end_of_initialization 004D  
                                 ?__TMR1_Ready 0070                              ??_process_message 0031  
                         __size_of_process_ioc 0016                                   ??__IOC_Ready 0070  
                            _EUSART_Initialize 03C4                                      _IOC_value 0061  
                                    _IOC_state 0066                             ?_EUSART_Initialize 0070  
                                    _ESP_write 0103                                      _RCSTAbits 019D  
                           _EUSART_is_rx_ready 0776                             _EUSART_is_tx_ready 0786  
                                 __sprintf@aux 0022                                   __sprintf@val 0020  
                                      strchr@c 0072                                        strchr@s 0074  
                                      strlen@a 0075                                        strlen@s 0072  
                        config_wifi_settings@i 0030                            ??_EUSART_Initialize 0074  
                                      write@pt 0073                               ??_WDT_Initialize 0072  
               ??_EUSART_SetTxInterruptHandler 0074                           __end_of_ESP_wait_for 0429  
                                      strstr@h 0079                                        strstr@n 0024  
                                    _PORTAbits 000C                            ?_EUSART_is_rx_ready 0070  
                          ?_EUSART_is_tx_ready 0070                               __CFG_FOSC$INTOSC 0000  
                             ___lbmod@dividend 0074                             __end_of__IOC_Ready 0723  
                        __size_of_EUSART_Write 001B                            _ADC_StartConversion 077C  
                 ??_IOCAF4_SetInterruptHandler 0074                          __end_of_toggle_format 0616  
                     __end_of_DATAEE_WriteByte 04BE                                    ___lbmod@rem 0076  
                    __end_of_EUSART_Initialize 03E6                           ??_EUSART_is_rx_ready 0072  
                         ??_EUSART_is_tx_ready 0072                         ??_config_wifi_settings 0079  
                                   ?_ESP_write 002B                           ?_ADC_StartConversion 0070  
                            __size_of_ESP_read 0025                   _ESP_external_message_handler 0055  
                               __end_of___lmul 039F  ESP_Set_application_handler@applicationHandler 0072  
                                 _EUSART_Write 04BE                              __size_of_TMR1_ISR 0010  
                               _ADC_Initialize 06DD            __size_of_IOCAF4_SetInterruptHandler 0006  
                               _TMR1_StopTimer 0788                         ?_OSCILLATOR_Initialize 0070  
          __end_of_ESP_Set_application_handler 075C                    _ESP_Set_application_handler 0757  
                       ESP_process_rx_data@aux 0034                                 __end_of_strchr 063A  
                               __end_of_strlen 05C3                                 __end_of_strstr 0355  
                                  __end_ofPL10 01E3                                    __end_ofPL20 0154  
                                  __end_ofPL12 014F                                    __end_ofPL22 0103  
                                  __end_ofPL14 026F                                    __end_ofPL24 0274  
                                  __end_ofPL16 01E9                                    __end_ofPL18 0322  
                          start_initialization 003F                __size_of_PIN_MANAGER_Initialize 0020  
                                ??_EUSART_Read 0072                     read_wifi_settings@len_pass 004A  
                   read_wifi_settings@len_wifi 0049                            _ESP_process_message 01E9  
                          _ESP_message_handler 03E6   EUSART_SetRxInterruptHandler@interruptHandler 0072  
 EUSART_SetTxInterruptHandler@interruptHandler 0072                            _ESP_process_rx_data 050C  
                                  __gets@index 0077                            DATAEE_ReadByte@bAdd 0072  
                     __size_of_PIN_MANAGER_IOC 0004                                ESP_wait_for@ret 002A  
                        ??_ADC_StartConversion 0072                       __size_of_TMR1_Initialize 0016  
                         ?_ESP_process_message 0070                                       ??___lmul 007A  
                         ?_ESP_message_handler 0070                                   ESP_write@aux 002F  
                                 ESP_write@res 002E                         __end_of_ADC_Initialize 06E6  
                       __end_of_TMR1_StopTimer 078A                           ?_ESP_process_rx_data 0070  
                       read_wifi_settings@pass 0031                                       ?_ADC_ISR 0070  
                       read_wifi_settings@wifi 003F                                       ??_strchr 0074  
                                     ??_strlen 0074                        __size_of_ESP_initialize 0008  
                                     ??_strstr 0077                 __size_ofi1_ADC_StartConversion 0003  
                __end_ofi1_ADC_StartConversion 0782                    __end_of_EUSART_Transmit_ISR 05D9  
                                ??_read_analog 0030                                    __pbssCOMMON 007A  
                                    ___latbits 0000        __end_of_ESP_default_application_handler 078F  
     __size_of_ESP_default_application_handler 0001               ?_ESP_default_application_handler 0030  
            ??_ESP_default_application_handler 007A                _ESP_default_application_handler 078E  
                                __pcstackBANK0 0020                     __end_of_EUSART_Receive_ISR 05EE  
                   __size_of_EUSART_Initialize 0022                              __size_of__sprintf 0028  
             _EUSART_RxDefaultInterruptHandler 005D                            __end_of_EUSART_Read 056B  
                              read_analog@aux1 0034                                      __pnvBANK0 006D  
                              read_analog@mess 0038                           __size_of__TMR1_Ready 0004  
                             ___lwdiv@dividend 0074                         _PIN_MANAGER_Initialize 0449  
                                  ??_ESP_write 007A                          ??_ESP_process_message 007A  
                         EUSART_Read@readValue 0072                          ??_ESP_message_handler 0035  
                        __size_of_ESP_wait_for 0021                              _ADC_SelectChannel 06A7  
             __end_of_TMR1_SetInterruptHandler 073B                                       ?___awdiv 0072  
                                     ?___lbmod 0072                          ??_ESP_process_rx_data 007A  
                                     ?___lwdiv 0072                                       ?___lwmod 0072  
                              ?_ADC_Initialize 0070                                   _eusartRxHead 006A  
                              ?_TMR1_StopTimer 0070                             ?_ADC_SelectChannel 0070  
                                 _eusartTxHead 007B                                   _eusartRxTail 0069  
                                 _eusartTxTail 006B                   ??_INTERRUPT_InterruptManager 0072  
                      _eusartTxBufferRemaining 007A                       __size_of_TMR1_StartTimer 0002  
                          ??_ADC_SelectChannel 0072                                _process_message 02B4  
                           _read_wifi_settings 02EE             __end_of_IOCAF4_SetInterruptHandler 0741  
                   _IOCAF4_SetInterruptHandler 073B                                 __size_of__gets 001C  
                             ___lwdiv@quotient 0076                                 __size_of__puts 000E  
                     __size_of_DATAEE_ReadByte 000B                                       ?_strncmp 0072  
                               __size_of_write 0018                            __end_of_read_analog 01A1  
                               _eusartRxBuffer 00A0                            ?_read_wifi_settings 0070  
                               _eusartTxBuffer 004D                                   _ESP_wait_for 0408  
                                     _LATAbits 010C                                      clear_ram0 0729  
                                  __puts@index 0078                                       _PIE1bits 0091  
                    __end_of_ADC_SelectChannel 06B3                       __size_of_TMR1_WriteTimer 000E  
          __size_of_INTERRUPT_InterruptManager 003A                                       _ESP_read 039F  
                                  write@lenght 0075                                       _PIR1bits 0011  
                                     _TMR1_ISR 063A                              ??_PIN_MANAGER_IOC 0070  
                         ??_read_wifi_settings 007A                              ??_TMR1_Initialize 0074  
                             __size_of_ADC_ISR 0002                                     _ADCON0bits 009D  
                     ADC_SelectChannel@channel 0073                          DATAEE_WriteByte@bData 0072  
                                  _EUSART_Read 0554                              ___lmul@multiplier 0072  
                                ??_process_ioc 007A                              ?_DATAEE_WriteByte 0072  
                           ??_DATAEE_WriteByte 0073                                    _esp_channel 0064  
                                   _EECON1bits 0195                       ?_ADC_GetConversionResult 0070  
                      ??_OSCILLATOR_Initialize 0072                               __size_of___awdiv 0040  
                             __size_of___lbmod 0018                               __size_of___lwdiv 0025  
                      __end_of_process_message 02EE                               __size_of___lwmod 0020  
                     _TMR1_SetInterruptHandler 0735                                 _ESP_initialize 06FF  
                                     __gets@pt 0076                          _TMR1_InterruptHandler 0057  
                                  _read_analog 0154                            _esp_read_data_index 0065  
                              ___lwdiv@divisor 0072                                ___lwdiv@counter 0078  
                                     __ptext10 0581                                       __ptext11 04F3  
                                     __ptext20 0449                                       __ptext12 06A7  
                                     __ptext21 073B                                       __ptext13 00AC  
                                     __ptext30 02B4                                       __ptext22 06D3  
                                     __ptext14 0487                                       __ptext31 0602  
                                     __ptext23 03C4                                       __ptext15 04A3  
                                     __ptext40 039F                                       __ptext32 0103  
                                     __ptext24 0741                                       __ptext16 072F  
                                     __ptext41 0554                                       __ptext33 0524  
                                     __ptext25 0747                                       __ptext17 0779  
                                     __ptext50 06FF                                       __ptext42 01E9  
                                     __ptext34 04D9                                       __ptext26 06DD  
                                     __ptext18 0597                                       __ptext51 0757  
                                     __ptext43 0322                                       __ptext35 0786  
                                     __ptext27 03E6                                       __ptext19 0735  
                                     __ptext60 0790                                       __ptext44 0230  
                                     __ptext36 04BE                                       __ptext28 050C  
                                     __ptext61 071C                                       __ptext53 063A  
                                     __ptext45 05AD                                       __ptext37 053C  
                                     __ptext29 078E                                       __ptext62 05C3  
                                     __ptext54 078F                                       __ptext46 0628  
                                     __ptext38 0274                                       __ptext63 05D9  
                                     __ptext55 0768                                       __ptext47 0788  
                                     __ptext39 0408                                       __ptext64 078C  
                                     __ptext56 077F                                       __ptext48 078A  
                                     __ptext65 06E6                                       __ptext57 0666  
                                     __ptext49 077C                                       __ptext58 076C  
                                     __ptext59 068E                                       __puts@pt 0073  
                       process_message@message 0030                                       __sprintf 01A1  
                            ??_TMR1_StartTimer 0072                                     _IOCAF4_ISR 068E  
                  DATAEE_WriteByte@GIEBitValue 0074                               __size_of_strncmp 0038  
                               _message_format 0063                    __size_of_EUSART_is_rx_ready 0003  
                                __size_of_main 001E                                ESP_write@length 002D  
                  __size_of_EUSART_is_tx_ready 0002                              ??_DATAEE_ReadByte 0072  
                   __size_of_ADC_SelectChannel 000C                            __end_of_process_ioc 0597  
                     config_wifi_settings@line 0020                  __size_of_config_wifi_settings 004A  
                                     int$flags 007E                         __size_of_toggle_format 0014  
                       __end_of_ESP_initialize 0707             __end_of_INTERRUPT_InterruptManager 003E  
                   _INTERRUPT_InterruptManager 0004                              ??_TMR1_WriteTimer 0072  
                                   _INTCONbits 000B                                 __pstringtext10 06C9  
                               __pstringtext11 06EF                                 __pstringtext20 0760  
                               __pstringtext12 06F7                                 __pstringtext21 0764  
                               __pstringtext13 0707                                 __pstringtext22 0770  
                               __pstringtext14 070E                                 __pstringtext23 0773  
                               __pstringtext15 0715                                 __pstringtext24 0782  
                               __pstringtext16 0723                                 __pstringtext25 0784  
                               __pstringtext17 074D                                 __pstringtext26 0000  
                               __pstringtext18 0752                                 __pstringtext19 075C  
          ESP_default_application_handler@data 0030                        __size_of_WDT_Initialize 0003  
                                     intlevel1 0000                    __end_of_ADC_StartConversion 077F  
                             ___lwmod@dividend 0074                        ?_PIN_MANAGER_Initialize 0070  
              __end_of_ADC_GetConversionResult 06EF                              __CFG_CLKOUTEN$OFF 0000  
                                   _ESP_config 0050                                      strncmp@_l 0020  
                                    strncmp@_r 0072                               ??_ADC_Initialize 0072  
         __end_of_EUSART_SetRxInterruptHandler 074D          __size_of_EUSART_SetRxInterruptHandler 0006  
                 _EUSART_SetRxInterruptHandler 0747                              _logger_initialize 04F3  
                             ??_TMR1_StopTimer 0072                        config_wifi_settings@len 0032  
                           ?_logger_initialize 0070                             _EUSART_Receive_ISR 05D9  
                              ?_ESP_initialize 0070                               ?_process_message 0030  
                                __sprintf@mess 0024                                  __pstringtext1 056B  
                                __pstringtext2 05EE                                  __pstringtext3 0616  
                                __pstringtext4 064A                                  __pstringtext5 0658  
                                __pstringtext6 0674                                  __pstringtext7 0681  
                                __pstringtext8 069B                                  __pstringtext9 06B3  
                          ??_logger_initialize 0074                            ?_EUSART_Receive_ISR 0070  
                              ___lwmod@divisor 0072                                ___lwmod@counter 0076  
                                     strncmp@l 0023                                       strncmp@n 0074  
                                     strncmp@r 0021                           ESP_wait_for@esp_mess 0029  
                        i1_ADC_StartConversion 077F                    ?_IOCAF4_SetInterruptHandler 0072  
                                     strstr@nl 0077                                  _toggle_format 0602  
                                  ?_IOCAF4_ISR 0070                             EUSART_Write@txData 0072  
                 __size_of_EUSART_Transmit_ISR 0016                                     _TMR1_state 0062  
               __end_of_PIN_MANAGER_Initialize 0469                                    _process_ioc 0581  
                                ??__TMR1_Ready 0070               ??_IOCAF4_DefaultInterruptHandler 0070  
              ?_IOCAF4_DefaultInterruptHandler 0070                    __end_of_ESP_process_message 0230  
                  __end_of_ESP_message_handler 0408                                _PIN_MANAGER_IOC 076C  
                    __end_of_logger_initialize 050C                           ??_EUSART_Receive_ISR 0070  
                  __end_of_ESP_process_rx_data 0524                                _TMR1_Initialize 0597  
