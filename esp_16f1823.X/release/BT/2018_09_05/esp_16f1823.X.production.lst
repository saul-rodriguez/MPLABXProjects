

Microchip Technology PIC PRO Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Sep  5 12:27:07 2018

Microchip Technology Omniscient Code Generator v2.00 (PRO mode) build 20180527130849
     1                           	processor	16F1823
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	stringtext12,global,class=STRCODE,delta=2
    17                           	psect	stringtext13,global,class=STRCODE,delta=2
    18                           	psect	stringtext14,global,class=STRCODE,delta=2
    19                           	psect	stringtext15,global,class=STRCODE,delta=2
    20                           	psect	stringtext16,global,class=STRCODE,delta=2
    21                           	psect	stringtext17,global,class=STRCODE,delta=2
    22                           	psect	stringtext18,global,class=STRCODE,delta=2
    23                           	psect	stringtext19,global,class=STRCODE,delta=2
    24                           	psect	stringtext20,global,class=STRCODE,delta=2
    25                           	psect	stringtext21,global,class=STRCODE,delta=2
    26                           	psect	stringtext22,global,class=STRCODE,delta=2
    27                           	psect	stringtext23,global,class=STRCODE,delta=2
    28                           	psect	stringtext24,global,class=STRCODE,delta=2
    29                           	psect	stringtext25,global,class=STRCODE,delta=2
    30                           	psect	stringtext26,global,class=STRCODE,delta=2
    31                           	psect	cinit,global,class=CODE,merge=1,delta=2
    32                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    33                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    34                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    35                           	psect	clrtext,global,class=CODE,delta=2
    36                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    37                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    38                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    39                           	psect	text1,local,class=CODE,merge=1,delta=2
    40                           	psect	text2,local,class=CODE,merge=1,delta=2
    41                           	psect	text3,local,class=CODE,merge=1,delta=2
    42                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text7,local,class=CODE,merge=1,delta=2
    46                           	psect	text8,local,class=CODE,merge=1,delta=2
    47                           	psect	text9,local,class=CODE,merge=1,delta=2
    48                           	psect	text10,local,class=CODE,merge=1,delta=2
    49                           	psect	text11,local,class=CODE,merge=1,delta=2
    50                           	psect	text12,local,class=CODE,merge=1,delta=2
    51                           	psect	swtext1,local,class=CONST,delta=2
    52                           	psect	text13,local,class=CODE,merge=1,delta=2
    53                           	psect	text14,local,class=CODE,merge=1,delta=2
    54                           	psect	text15,local,class=CODE,merge=1,delta=2
    55                           	psect	text16,local,class=CODE,merge=1,delta=2
    56                           	psect	text17,local,class=CODE,merge=1,delta=2
    57                           	psect	text18,local,class=CODE,merge=1,delta=2
    58                           	psect	text19,local,class=CODE,merge=1,delta=2
    59                           	psect	text20,local,class=CODE,merge=1,delta=2
    60                           	psect	text21,local,class=CODE,merge=1,delta=2
    61                           	psect	text22,local,class=CODE,merge=1,delta=2
    62                           	psect	text23,local,class=CODE,merge=1,delta=2
    63                           	psect	text24,local,class=CODE,merge=1,delta=2
    64                           	psect	text25,local,class=CODE,merge=1,delta=2
    65                           	psect	text26,local,class=CODE,merge=1,delta=2
    66                           	psect	text27,local,class=CODE,merge=1,delta=2
    67                           	psect	text28,local,class=CODE,merge=1,delta=2
    68                           	psect	text29,local,class=CODE,merge=1,delta=2
    69                           	psect	text30,local,class=CODE,merge=1,delta=2
    70                           	psect	text31,local,class=CODE,merge=1,delta=2
    71                           	psect	text32,local,class=CODE,merge=1,delta=2
    72                           	psect	intentry,global,class=CODE,delta=2
    73                           	psect	text34,local,class=CODE,merge=1,delta=2
    74                           	psect	text35,local,class=CODE,merge=1,delta=2
    75                           	psect	text36,local,class=CODE,merge=1,delta=2
    76                           	psect	text37,local,class=CODE,merge=1,delta=2
    77                           	psect	text38,local,class=CODE,merge=1,delta=2
    78                           	psect	text39,local,class=CODE,merge=1,delta=2
    79                           	psect	text40,local,class=CODE,merge=1,delta=2
    80                           	psect	text41,local,class=CODE,merge=1,delta=2
    81                           	psect	text42,local,class=CODE,merge=1,delta=2
    82                           	psect	text43,local,class=CODE,merge=1,delta=2
    83                           	psect	text44,local,class=CODE,merge=1,delta=2
    84                           	psect	text45,local,class=CODE,merge=1,delta=2
    85                           	psect	text46,local,class=CODE,merge=1,delta=2
    86                           	psect	pa_nodes0,global,class=CODE,delta=2
    87                           	dabs	1,0x7E,2
    88  0000                     
    89                           ; Version 2.00
    90                           ; Generated 27/05/2018 GMT
    91                           ; 
    92                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    93                           ; All rights reserved.
    94                           ; 
    95                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    96                           ; 
    97                           ; Redistribution and use in source and binary forms, with or without modification, are
    98                           ; permitted provided that the following conditions are met:
    99                           ; 
   100                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   101                           ;        conditions and the following disclaimer.
   102                           ; 
   103                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   104                           ;        of conditions and the following disclaimer in the documentation and/or other
   105                           ;        materials provided with the distribution.
   106                           ; 
   107                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   108                           ;        software without specific prior written permission.
   109                           ; 
   110                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   111                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   112                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   113                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   114                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   115                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   116                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   117                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   118                           ; 
   119                           ; 
   120                           ; Code-generator required, PIC16F1823 Definitions
   121                           ; 
   122                           ; SFR Addresses
   123  0000                     	;# 
   124  0001                     	;# 
   125  0002                     	;# 
   126  0003                     	;# 
   127  0004                     	;# 
   128  0005                     	;# 
   129  0006                     	;# 
   130  0007                     	;# 
   131  0008                     	;# 
   132  0009                     	;# 
   133  000A                     	;# 
   134  000B                     	;# 
   135  000C                     	;# 
   136  000E                     	;# 
   137  0011                     	;# 
   138  0012                     	;# 
   139  0015                     	;# 
   140  0016                     	;# 
   141  0016                     	;# 
   142  0017                     	;# 
   143  0018                     	;# 
   144  0019                     	;# 
   145  001A                     	;# 
   146  001B                     	;# 
   147  001C                     	;# 
   148  001E                     	;# 
   149  001F                     	;# 
   150  008C                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0095                     	;# 
   155  0096                     	;# 
   156  0097                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009A                     	;# 
   160  009B                     	;# 
   161  009B                     	;# 
   162  009C                     	;# 
   163  009D                     	;# 
   164  009E                     	;# 
   165  010C                     	;# 
   166  010E                     	;# 
   167  0111                     	;# 
   168  0112                     	;# 
   169  0113                     	;# 
   170  0114                     	;# 
   171  0115                     	;# 
   172  0116                     	;# 
   173  0117                     	;# 
   174  0118                     	;# 
   175  0119                     	;# 
   176  011A                     	;# 
   177  011B                     	;# 
   178  011D                     	;# 
   179  011D                     	;# 
   180  018C                     	;# 
   181  018E                     	;# 
   182  0191                     	;# 
   183  0191                     	;# 
   184  0192                     	;# 
   185  0193                     	;# 
   186  0193                     	;# 
   187  0193                     	;# 
   188  0194                     	;# 
   189  0195                     	;# 
   190  0196                     	;# 
   191  0199                     	;# 
   192  019A                     	;# 
   193  019B                     	;# 
   194  019B                     	;# 
   195  019B                     	;# 
   196  019B                     	;# 
   197  019C                     	;# 
   198  019C                     	;# 
   199  019D                     	;# 
   200  019E                     	;# 
   201  019F                     	;# 
   202  020C                     	;# 
   203  020E                     	;# 
   204  0211                     	;# 
   205  0211                     	;# 
   206  0212                     	;# 
   207  0212                     	;# 
   208  0213                     	;# 
   209  0213                     	;# 
   210  0214                     	;# 
   211  0214                     	;# 
   212  0215                     	;# 
   213  0215                     	;# 
   214  0215                     	;# 
   215  0216                     	;# 
   216  0216                     	;# 
   217  0217                     	;# 
   218  0217                     	;# 
   219  0291                     	;# 
   220  0291                     	;# 
   221  0292                     	;# 
   222  0293                     	;# 
   223  0294                     	;# 
   224  0295                     	;# 
   225  0295                     	;# 
   226  0296                     	;# 
   227  0391                     	;# 
   228  0392                     	;# 
   229  0393                     	;# 
   230  039A                     	;# 
   231  039C                     	;# 
   232  039D                     	;# 
   233  039E                     	;# 
   234  039F                     	;# 
   235  0FE4                     	;# 
   236  0FE5                     	;# 
   237  0FE6                     	;# 
   238  0FE7                     	;# 
   239  0FE8                     	;# 
   240  0FE9                     	;# 
   241  0FEA                     	;# 
   242  0FEB                     	;# 
   243  0FED                     	;# 
   244  0FEE                     	;# 
   245  0FEF                     	;# 
   246  0000                     	;# 
   247  0001                     	;# 
   248  0002                     	;# 
   249  0003                     	;# 
   250  0004                     	;# 
   251  0005                     	;# 
   252  0006                     	;# 
   253  0007                     	;# 
   254  0008                     	;# 
   255  0009                     	;# 
   256  000A                     	;# 
   257  000B                     	;# 
   258  000C                     	;# 
   259  000E                     	;# 
   260  0011                     	;# 
   261  0012                     	;# 
   262  0015                     	;# 
   263  0016                     	;# 
   264  0016                     	;# 
   265  0017                     	;# 
   266  0018                     	;# 
   267  0019                     	;# 
   268  001A                     	;# 
   269  001B                     	;# 
   270  001C                     	;# 
   271  001E                     	;# 
   272  001F                     	;# 
   273  008C                     	;# 
   274  008E                     	;# 
   275  0091                     	;# 
   276  0092                     	;# 
   277  0095                     	;# 
   278  0096                     	;# 
   279  0097                     	;# 
   280  0098                     	;# 
   281  0099                     	;# 
   282  009A                     	;# 
   283  009B                     	;# 
   284  009B                     	;# 
   285  009C                     	;# 
   286  009D                     	;# 
   287  009E                     	;# 
   288  010C                     	;# 
   289  010E                     	;# 
   290  0111                     	;# 
   291  0112                     	;# 
   292  0113                     	;# 
   293  0114                     	;# 
   294  0115                     	;# 
   295  0116                     	;# 
   296  0117                     	;# 
   297  0118                     	;# 
   298  0119                     	;# 
   299  011A                     	;# 
   300  011B                     	;# 
   301  011D                     	;# 
   302  011D                     	;# 
   303  018C                     	;# 
   304  018E                     	;# 
   305  0191                     	;# 
   306  0191                     	;# 
   307  0192                     	;# 
   308  0193                     	;# 
   309  0193                     	;# 
   310  0193                     	;# 
   311  0194                     	;# 
   312  0195                     	;# 
   313  0196                     	;# 
   314  0199                     	;# 
   315  019A                     	;# 
   316  019B                     	;# 
   317  019B                     	;# 
   318  019B                     	;# 
   319  019B                     	;# 
   320  019C                     	;# 
   321  019C                     	;# 
   322  019D                     	;# 
   323  019E                     	;# 
   324  019F                     	;# 
   325  020C                     	;# 
   326  020E                     	;# 
   327  0211                     	;# 
   328  0211                     	;# 
   329  0212                     	;# 
   330  0212                     	;# 
   331  0213                     	;# 
   332  0213                     	;# 
   333  0214                     	;# 
   334  0214                     	;# 
   335  0215                     	;# 
   336  0215                     	;# 
   337  0215                     	;# 
   338  0216                     	;# 
   339  0216                     	;# 
   340  0217                     	;# 
   341  0217                     	;# 
   342  0291                     	;# 
   343  0291                     	;# 
   344  0292                     	;# 
   345  0293                     	;# 
   346  0294                     	;# 
   347  0295                     	;# 
   348  0295                     	;# 
   349  0296                     	;# 
   350  0391                     	;# 
   351  0392                     	;# 
   352  0393                     	;# 
   353  039A                     	;# 
   354  039C                     	;# 
   355  039D                     	;# 
   356  039E                     	;# 
   357  039F                     	;# 
   358  0FE4                     	;# 
   359  0FE5                     	;# 
   360  0FE6                     	;# 
   361  0FE7                     	;# 
   362  0FE8                     	;# 
   363  0FE9                     	;# 
   364  0FEA                     	;# 
   365  0FEB                     	;# 
   366  0FED                     	;# 
   367  0FEE                     	;# 
   368  0FEF                     	;# 
   369  0000                     	;# 
   370  0001                     	;# 
   371  0002                     	;# 
   372  0003                     	;# 
   373  0004                     	;# 
   374  0005                     	;# 
   375  0006                     	;# 
   376  0007                     	;# 
   377  0008                     	;# 
   378  0009                     	;# 
   379  000A                     	;# 
   380  000B                     	;# 
   381  000C                     	;# 
   382  000E                     	;# 
   383  0011                     	;# 
   384  0012                     	;# 
   385  0015                     	;# 
   386  0016                     	;# 
   387  0016                     	;# 
   388  0017                     	;# 
   389  0018                     	;# 
   390  0019                     	;# 
   391  001A                     	;# 
   392  001B                     	;# 
   393  001C                     	;# 
   394  001E                     	;# 
   395  001F                     	;# 
   396  008C                     	;# 
   397  008E                     	;# 
   398  0091                     	;# 
   399  0092                     	;# 
   400  0095                     	;# 
   401  0096                     	;# 
   402  0097                     	;# 
   403  0098                     	;# 
   404  0099                     	;# 
   405  009A                     	;# 
   406  009B                     	;# 
   407  009B                     	;# 
   408  009C                     	;# 
   409  009D                     	;# 
   410  009E                     	;# 
   411  010C                     	;# 
   412  010E                     	;# 
   413  0111                     	;# 
   414  0112                     	;# 
   415  0113                     	;# 
   416  0114                     	;# 
   417  0115                     	;# 
   418  0116                     	;# 
   419  0117                     	;# 
   420  0118                     	;# 
   421  0119                     	;# 
   422  011A                     	;# 
   423  011B                     	;# 
   424  011D                     	;# 
   425  011D                     	;# 
   426  018C                     	;# 
   427  018E                     	;# 
   428  0191                     	;# 
   429  0191                     	;# 
   430  0192                     	;# 
   431  0193                     	;# 
   432  0193                     	;# 
   433  0193                     	;# 
   434  0194                     	;# 
   435  0195                     	;# 
   436  0196                     	;# 
   437  0199                     	;# 
   438  019A                     	;# 
   439  019B                     	;# 
   440  019B                     	;# 
   441  019B                     	;# 
   442  019B                     	;# 
   443  019C                     	;# 
   444  019C                     	;# 
   445  019D                     	;# 
   446  019E                     	;# 
   447  019F                     	;# 
   448  020C                     	;# 
   449  020E                     	;# 
   450  0211                     	;# 
   451  0211                     	;# 
   452  0212                     	;# 
   453  0212                     	;# 
   454  0213                     	;# 
   455  0213                     	;# 
   456  0214                     	;# 
   457  0214                     	;# 
   458  0215                     	;# 
   459  0215                     	;# 
   460  0215                     	;# 
   461  0216                     	;# 
   462  0216                     	;# 
   463  0217                     	;# 
   464  0217                     	;# 
   465  0291                     	;# 
   466  0291                     	;# 
   467  0292                     	;# 
   468  0293                     	;# 
   469  0294                     	;# 
   470  0295                     	;# 
   471  0295                     	;# 
   472  0296                     	;# 
   473  0391                     	;# 
   474  0392                     	;# 
   475  0393                     	;# 
   476  039A                     	;# 
   477  039C                     	;# 
   478  039D                     	;# 
   479  039E                     	;# 
   480  039F                     	;# 
   481  0FE4                     	;# 
   482  0FE5                     	;# 
   483  0FE6                     	;# 
   484  0FE7                     	;# 
   485  0FE8                     	;# 
   486  0FE9                     	;# 
   487  0FEA                     	;# 
   488  0FEB                     	;# 
   489  0FED                     	;# 
   490  0FEE                     	;# 
   491  0FEF                     	;# 
   492  0000                     	;# 
   493  0001                     	;# 
   494  0002                     	;# 
   495  0003                     	;# 
   496  0004                     	;# 
   497  0005                     	;# 
   498  0006                     	;# 
   499  0007                     	;# 
   500  0008                     	;# 
   501  0009                     	;# 
   502  000A                     	;# 
   503  000B                     	;# 
   504  000C                     	;# 
   505  000E                     	;# 
   506  0011                     	;# 
   507  0012                     	;# 
   508  0015                     	;# 
   509  0016                     	;# 
   510  0016                     	;# 
   511  0017                     	;# 
   512  0018                     	;# 
   513  0019                     	;# 
   514  001A                     	;# 
   515  001B                     	;# 
   516  001C                     	;# 
   517  001E                     	;# 
   518  001F                     	;# 
   519  008C                     	;# 
   520  008E                     	;# 
   521  0091                     	;# 
   522  0092                     	;# 
   523  0095                     	;# 
   524  0096                     	;# 
   525  0097                     	;# 
   526  0098                     	;# 
   527  0099                     	;# 
   528  009A                     	;# 
   529  009B                     	;# 
   530  009B                     	;# 
   531  009C                     	;# 
   532  009D                     	;# 
   533  009E                     	;# 
   534  010C                     	;# 
   535  010E                     	;# 
   536  0111                     	;# 
   537  0112                     	;# 
   538  0113                     	;# 
   539  0114                     	;# 
   540  0115                     	;# 
   541  0116                     	;# 
   542  0117                     	;# 
   543  0118                     	;# 
   544  0119                     	;# 
   545  011A                     	;# 
   546  011B                     	;# 
   547  011D                     	;# 
   548  011D                     	;# 
   549  018C                     	;# 
   550  018E                     	;# 
   551  0191                     	;# 
   552  0191                     	;# 
   553  0192                     	;# 
   554  0193                     	;# 
   555  0193                     	;# 
   556  0193                     	;# 
   557  0194                     	;# 
   558  0195                     	;# 
   559  0196                     	;# 
   560  0199                     	;# 
   561  019A                     	;# 
   562  019B                     	;# 
   563  019B                     	;# 
   564  019B                     	;# 
   565  019B                     	;# 
   566  019C                     	;# 
   567  019C                     	;# 
   568  019D                     	;# 
   569  019E                     	;# 
   570  019F                     	;# 
   571  020C                     	;# 
   572  020E                     	;# 
   573  0211                     	;# 
   574  0211                     	;# 
   575  0212                     	;# 
   576  0212                     	;# 
   577  0213                     	;# 
   578  0213                     	;# 
   579  0214                     	;# 
   580  0214                     	;# 
   581  0215                     	;# 
   582  0215                     	;# 
   583  0215                     	;# 
   584  0216                     	;# 
   585  0216                     	;# 
   586  0217                     	;# 
   587  0217                     	;# 
   588  0291                     	;# 
   589  0291                     	;# 
   590  0292                     	;# 
   591  0293                     	;# 
   592  0294                     	;# 
   593  0295                     	;# 
   594  0295                     	;# 
   595  0296                     	;# 
   596  0391                     	;# 
   597  0392                     	;# 
   598  0393                     	;# 
   599  039A                     	;# 
   600  039C                     	;# 
   601  039D                     	;# 
   602  039E                     	;# 
   603  039F                     	;# 
   604  0FE4                     	;# 
   605  0FE5                     	;# 
   606  0FE6                     	;# 
   607  0FE7                     	;# 
   608  0FE8                     	;# 
   609  0FE9                     	;# 
   610  0FEA                     	;# 
   611  0FEB                     	;# 
   612  0FED                     	;# 
   613  0FEE                     	;# 
   614  0FEF                     	;# 
   615  0000                     	;# 
   616  0001                     	;# 
   617  0002                     	;# 
   618  0003                     	;# 
   619  0004                     	;# 
   620  0005                     	;# 
   621  0006                     	;# 
   622  0007                     	;# 
   623  0008                     	;# 
   624  0009                     	;# 
   625  000A                     	;# 
   626  000B                     	;# 
   627  000C                     	;# 
   628  000E                     	;# 
   629  0011                     	;# 
   630  0012                     	;# 
   631  0015                     	;# 
   632  0016                     	;# 
   633  0016                     	;# 
   634  0017                     	;# 
   635  0018                     	;# 
   636  0019                     	;# 
   637  001A                     	;# 
   638  001B                     	;# 
   639  001C                     	;# 
   640  001E                     	;# 
   641  001F                     	;# 
   642  008C                     	;# 
   643  008E                     	;# 
   644  0091                     	;# 
   645  0092                     	;# 
   646  0095                     	;# 
   647  0096                     	;# 
   648  0097                     	;# 
   649  0098                     	;# 
   650  0099                     	;# 
   651  009A                     	;# 
   652  009B                     	;# 
   653  009B                     	;# 
   654  009C                     	;# 
   655  009D                     	;# 
   656  009E                     	;# 
   657  010C                     	;# 
   658  010E                     	;# 
   659  0111                     	;# 
   660  0112                     	;# 
   661  0113                     	;# 
   662  0114                     	;# 
   663  0115                     	;# 
   664  0116                     	;# 
   665  0117                     	;# 
   666  0118                     	;# 
   667  0119                     	;# 
   668  011A                     	;# 
   669  011B                     	;# 
   670  011D                     	;# 
   671  011D                     	;# 
   672  018C                     	;# 
   673  018E                     	;# 
   674  0191                     	;# 
   675  0191                     	;# 
   676  0192                     	;# 
   677  0193                     	;# 
   678  0193                     	;# 
   679  0193                     	;# 
   680  0194                     	;# 
   681  0195                     	;# 
   682  0196                     	;# 
   683  0199                     	;# 
   684  019A                     	;# 
   685  019B                     	;# 
   686  019B                     	;# 
   687  019B                     	;# 
   688  019B                     	;# 
   689  019C                     	;# 
   690  019C                     	;# 
   691  019D                     	;# 
   692  019E                     	;# 
   693  019F                     	;# 
   694  020C                     	;# 
   695  020E                     	;# 
   696  0211                     	;# 
   697  0211                     	;# 
   698  0212                     	;# 
   699  0212                     	;# 
   700  0213                     	;# 
   701  0213                     	;# 
   702  0214                     	;# 
   703  0214                     	;# 
   704  0215                     	;# 
   705  0215                     	;# 
   706  0215                     	;# 
   707  0216                     	;# 
   708  0216                     	;# 
   709  0217                     	;# 
   710  0217                     	;# 
   711  0291                     	;# 
   712  0291                     	;# 
   713  0292                     	;# 
   714  0293                     	;# 
   715  0294                     	;# 
   716  0295                     	;# 
   717  0295                     	;# 
   718  0296                     	;# 
   719  0391                     	;# 
   720  0392                     	;# 
   721  0393                     	;# 
   722  039A                     	;# 
   723  039C                     	;# 
   724  039D                     	;# 
   725  039E                     	;# 
   726  039F                     	;# 
   727  0FE4                     	;# 
   728  0FE5                     	;# 
   729  0FE6                     	;# 
   730  0FE7                     	;# 
   731  0FE8                     	;# 
   732  0FE9                     	;# 
   733  0FEA                     	;# 
   734  0FEB                     	;# 
   735  0FED                     	;# 
   736  0FEE                     	;# 
   737  0FEF                     	;# 
   738  0000                     	;# 
   739  0001                     	;# 
   740  0002                     	;# 
   741  0003                     	;# 
   742  0004                     	;# 
   743  0005                     	;# 
   744  0006                     	;# 
   745  0007                     	;# 
   746  0008                     	;# 
   747  0009                     	;# 
   748  000A                     	;# 
   749  000B                     	;# 
   750  000C                     	;# 
   751  000E                     	;# 
   752  0011                     	;# 
   753  0012                     	;# 
   754  0015                     	;# 
   755  0016                     	;# 
   756  0016                     	;# 
   757  0017                     	;# 
   758  0018                     	;# 
   759  0019                     	;# 
   760  001A                     	;# 
   761  001B                     	;# 
   762  001C                     	;# 
   763  001E                     	;# 
   764  001F                     	;# 
   765  008C                     	;# 
   766  008E                     	;# 
   767  0091                     	;# 
   768  0092                     	;# 
   769  0095                     	;# 
   770  0096                     	;# 
   771  0097                     	;# 
   772  0098                     	;# 
   773  0099                     	;# 
   774  009A                     	;# 
   775  009B                     	;# 
   776  009B                     	;# 
   777  009C                     	;# 
   778  009D                     	;# 
   779  009E                     	;# 
   780  010C                     	;# 
   781  010E                     	;# 
   782  0111                     	;# 
   783  0112                     	;# 
   784  0113                     	;# 
   785  0114                     	;# 
   786  0115                     	;# 
   787  0116                     	;# 
   788  0117                     	;# 
   789  0118                     	;# 
   790  0119                     	;# 
   791  011A                     	;# 
   792  011B                     	;# 
   793  011D                     	;# 
   794  011D                     	;# 
   795  018C                     	;# 
   796  018E                     	;# 
   797  0191                     	;# 
   798  0191                     	;# 
   799  0192                     	;# 
   800  0193                     	;# 
   801  0193                     	;# 
   802  0193                     	;# 
   803  0194                     	;# 
   804  0195                     	;# 
   805  0196                     	;# 
   806  0199                     	;# 
   807  019A                     	;# 
   808  019B                     	;# 
   809  019B                     	;# 
   810  019B                     	;# 
   811  019B                     	;# 
   812  019C                     	;# 
   813  019C                     	;# 
   814  019D                     	;# 
   815  019E                     	;# 
   816  019F                     	;# 
   817  020C                     	;# 
   818  020E                     	;# 
   819  0211                     	;# 
   820  0211                     	;# 
   821  0212                     	;# 
   822  0212                     	;# 
   823  0213                     	;# 
   824  0213                     	;# 
   825  0214                     	;# 
   826  0214                     	;# 
   827  0215                     	;# 
   828  0215                     	;# 
   829  0215                     	;# 
   830  0216                     	;# 
   831  0216                     	;# 
   832  0217                     	;# 
   833  0217                     	;# 
   834  0291                     	;# 
   835  0291                     	;# 
   836  0292                     	;# 
   837  0293                     	;# 
   838  0294                     	;# 
   839  0295                     	;# 
   840  0295                     	;# 
   841  0296                     	;# 
   842  0391                     	;# 
   843  0392                     	;# 
   844  0393                     	;# 
   845  039A                     	;# 
   846  039C                     	;# 
   847  039D                     	;# 
   848  039E                     	;# 
   849  039F                     	;# 
   850  0FE4                     	;# 
   851  0FE5                     	;# 
   852  0FE6                     	;# 
   853  0FE7                     	;# 
   854  0FE8                     	;# 
   855  0FE9                     	;# 
   856  0FEA                     	;# 
   857  0FEB                     	;# 
   858  0FED                     	;# 
   859  0FEE                     	;# 
   860  0FEF                     	;# 
   861  0000                     	;# 
   862  0001                     	;# 
   863  0002                     	;# 
   864  0003                     	;# 
   865  0004                     	;# 
   866  0005                     	;# 
   867  0006                     	;# 
   868  0007                     	;# 
   869  0008                     	;# 
   870  0009                     	;# 
   871  000A                     	;# 
   872  000B                     	;# 
   873  000C                     	;# 
   874  000E                     	;# 
   875  0011                     	;# 
   876  0012                     	;# 
   877  0015                     	;# 
   878  0016                     	;# 
   879  0016                     	;# 
   880  0017                     	;# 
   881  0018                     	;# 
   882  0019                     	;# 
   883  001A                     	;# 
   884  001B                     	;# 
   885  001C                     	;# 
   886  001E                     	;# 
   887  001F                     	;# 
   888  008C                     	;# 
   889  008E                     	;# 
   890  0091                     	;# 
   891  0092                     	;# 
   892  0095                     	;# 
   893  0096                     	;# 
   894  0097                     	;# 
   895  0098                     	;# 
   896  0099                     	;# 
   897  009A                     	;# 
   898  009B                     	;# 
   899  009B                     	;# 
   900  009C                     	;# 
   901  009D                     	;# 
   902  009E                     	;# 
   903  010C                     	;# 
   904  010E                     	;# 
   905  0111                     	;# 
   906  0112                     	;# 
   907  0113                     	;# 
   908  0114                     	;# 
   909  0115                     	;# 
   910  0116                     	;# 
   911  0117                     	;# 
   912  0118                     	;# 
   913  0119                     	;# 
   914  011A                     	;# 
   915  011B                     	;# 
   916  011D                     	;# 
   917  011D                     	;# 
   918  018C                     	;# 
   919  018E                     	;# 
   920  0191                     	;# 
   921  0191                     	;# 
   922  0192                     	;# 
   923  0193                     	;# 
   924  0193                     	;# 
   925  0193                     	;# 
   926  0194                     	;# 
   927  0195                     	;# 
   928  0196                     	;# 
   929  0199                     	;# 
   930  019A                     	;# 
   931  019B                     	;# 
   932  019B                     	;# 
   933  019B                     	;# 
   934  019B                     	;# 
   935  019C                     	;# 
   936  019C                     	;# 
   937  019D                     	;# 
   938  019E                     	;# 
   939  019F                     	;# 
   940  020C                     	;# 
   941  020E                     	;# 
   942  0211                     	;# 
   943  0211                     	;# 
   944  0212                     	;# 
   945  0212                     	;# 
   946  0213                     	;# 
   947  0213                     	;# 
   948  0214                     	;# 
   949  0214                     	;# 
   950  0215                     	;# 
   951  0215                     	;# 
   952  0215                     	;# 
   953  0216                     	;# 
   954  0216                     	;# 
   955  0217                     	;# 
   956  0217                     	;# 
   957  0291                     	;# 
   958  0291                     	;# 
   959  0292                     	;# 
   960  0293                     	;# 
   961  0294                     	;# 
   962  0295                     	;# 
   963  0295                     	;# 
   964  0296                     	;# 
   965  0391                     	;# 
   966  0392                     	;# 
   967  0393                     	;# 
   968  039A                     	;# 
   969  039C                     	;# 
   970  039D                     	;# 
   971  039E                     	;# 
   972  039F                     	;# 
   973  0FE4                     	;# 
   974  0FE5                     	;# 
   975  0FE6                     	;# 
   976  0FE7                     	;# 
   977  0FE8                     	;# 
   978  0FE9                     	;# 
   979  0FEA                     	;# 
   980  0FEB                     	;# 
   981  0FED                     	;# 
   982  0FEE                     	;# 
   983  0FEF                     	;# 
   984  0000                     	;# 
   985  0001                     	;# 
   986  0002                     	;# 
   987  0003                     	;# 
   988  0004                     	;# 
   989  0005                     	;# 
   990  0006                     	;# 
   991  0007                     	;# 
   992  0008                     	;# 
   993  0009                     	;# 
   994  000A                     	;# 
   995  000B                     	;# 
   996  000C                     	;# 
   997  000E                     	;# 
   998  0011                     	;# 
   999  0012                     	;# 
  1000  0015                     	;# 
  1001  0016                     	;# 
  1002  0016                     	;# 
  1003  0017                     	;# 
  1004  0018                     	;# 
  1005  0019                     	;# 
  1006  001A                     	;# 
  1007  001B                     	;# 
  1008  001C                     	;# 
  1009  001E                     	;# 
  1010  001F                     	;# 
  1011  008C                     	;# 
  1012  008E                     	;# 
  1013  0091                     	;# 
  1014  0092                     	;# 
  1015  0095                     	;# 
  1016  0096                     	;# 
  1017  0097                     	;# 
  1018  0098                     	;# 
  1019  0099                     	;# 
  1020  009A                     	;# 
  1021  009B                     	;# 
  1022  009B                     	;# 
  1023  009C                     	;# 
  1024  009D                     	;# 
  1025  009E                     	;# 
  1026  010C                     	;# 
  1027  010E                     	;# 
  1028  0111                     	;# 
  1029  0112                     	;# 
  1030  0113                     	;# 
  1031  0114                     	;# 
  1032  0115                     	;# 
  1033  0116                     	;# 
  1034  0117                     	;# 
  1035  0118                     	;# 
  1036  0119                     	;# 
  1037  011A                     	;# 
  1038  011B                     	;# 
  1039  011D                     	;# 
  1040  011D                     	;# 
  1041  018C                     	;# 
  1042  018E                     	;# 
  1043  0191                     	;# 
  1044  0191                     	;# 
  1045  0192                     	;# 
  1046  0193                     	;# 
  1047  0193                     	;# 
  1048  0193                     	;# 
  1049  0194                     	;# 
  1050  0195                     	;# 
  1051  0196                     	;# 
  1052  0199                     	;# 
  1053  019A                     	;# 
  1054  019B                     	;# 
  1055  019B                     	;# 
  1056  019B                     	;# 
  1057  019B                     	;# 
  1058  019C                     	;# 
  1059  019C                     	;# 
  1060  019D                     	;# 
  1061  019E                     	;# 
  1062  019F                     	;# 
  1063  020C                     	;# 
  1064  020E                     	;# 
  1065  0211                     	;# 
  1066  0211                     	;# 
  1067  0212                     	;# 
  1068  0212                     	;# 
  1069  0213                     	;# 
  1070  0213                     	;# 
  1071  0214                     	;# 
  1072  0214                     	;# 
  1073  0215                     	;# 
  1074  0215                     	;# 
  1075  0215                     	;# 
  1076  0216                     	;# 
  1077  0216                     	;# 
  1078  0217                     	;# 
  1079  0217                     	;# 
  1080  0291                     	;# 
  1081  0291                     	;# 
  1082  0292                     	;# 
  1083  0293                     	;# 
  1084  0294                     	;# 
  1085  0295                     	;# 
  1086  0295                     	;# 
  1087  0296                     	;# 
  1088  0391                     	;# 
  1089  0392                     	;# 
  1090  0393                     	;# 
  1091  039A                     	;# 
  1092  039C                     	;# 
  1093  039D                     	;# 
  1094  039E                     	;# 
  1095  039F                     	;# 
  1096  0FE4                     	;# 
  1097  0FE5                     	;# 
  1098  0FE6                     	;# 
  1099  0FE7                     	;# 
  1100  0FE8                     	;# 
  1101  0FE9                     	;# 
  1102  0FEA                     	;# 
  1103  0FEB                     	;# 
  1104  0FED                     	;# 
  1105  0FEE                     	;# 
  1106  0FEF                     	;# 
  1107  0000                     	;# 
  1108  0001                     	;# 
  1109  0002                     	;# 
  1110  0003                     	;# 
  1111  0004                     	;# 
  1112  0005                     	;# 
  1113  0006                     	;# 
  1114  0007                     	;# 
  1115  0008                     	;# 
  1116  0009                     	;# 
  1117  000A                     	;# 
  1118  000B                     	;# 
  1119  000C                     	;# 
  1120  000E                     	;# 
  1121  0011                     	;# 
  1122  0012                     	;# 
  1123  0015                     	;# 
  1124  0016                     	;# 
  1125  0016                     	;# 
  1126  0017                     	;# 
  1127  0018                     	;# 
  1128  0019                     	;# 
  1129  001A                     	;# 
  1130  001B                     	;# 
  1131  001C                     	;# 
  1132  001E                     	;# 
  1133  001F                     	;# 
  1134  008C                     	;# 
  1135  008E                     	;# 
  1136  0091                     	;# 
  1137  0092                     	;# 
  1138  0095                     	;# 
  1139  0096                     	;# 
  1140  0097                     	;# 
  1141  0098                     	;# 
  1142  0099                     	;# 
  1143  009A                     	;# 
  1144  009B                     	;# 
  1145  009B                     	;# 
  1146  009C                     	;# 
  1147  009D                     	;# 
  1148  009E                     	;# 
  1149  010C                     	;# 
  1150  010E                     	;# 
  1151  0111                     	;# 
  1152  0112                     	;# 
  1153  0113                     	;# 
  1154  0114                     	;# 
  1155  0115                     	;# 
  1156  0116                     	;# 
  1157  0117                     	;# 
  1158  0118                     	;# 
  1159  0119                     	;# 
  1160  011A                     	;# 
  1161  011B                     	;# 
  1162  011D                     	;# 
  1163  011D                     	;# 
  1164  018C                     	;# 
  1165  018E                     	;# 
  1166  0191                     	;# 
  1167  0191                     	;# 
  1168  0192                     	;# 
  1169  0193                     	;# 
  1170  0193                     	;# 
  1171  0193                     	;# 
  1172  0194                     	;# 
  1173  0195                     	;# 
  1174  0196                     	;# 
  1175  0199                     	;# 
  1176  019A                     	;# 
  1177  019B                     	;# 
  1178  019B                     	;# 
  1179  019B                     	;# 
  1180  019B                     	;# 
  1181  019C                     	;# 
  1182  019C                     	;# 
  1183  019D                     	;# 
  1184  019E                     	;# 
  1185  019F                     	;# 
  1186  020C                     	;# 
  1187  020E                     	;# 
  1188  0211                     	;# 
  1189  0211                     	;# 
  1190  0212                     	;# 
  1191  0212                     	;# 
  1192  0213                     	;# 
  1193  0213                     	;# 
  1194  0214                     	;# 
  1195  0214                     	;# 
  1196  0215                     	;# 
  1197  0215                     	;# 
  1198  0215                     	;# 
  1199  0216                     	;# 
  1200  0216                     	;# 
  1201  0217                     	;# 
  1202  0217                     	;# 
  1203  0291                     	;# 
  1204  0291                     	;# 
  1205  0292                     	;# 
  1206  0293                     	;# 
  1207  0294                     	;# 
  1208  0295                     	;# 
  1209  0295                     	;# 
  1210  0296                     	;# 
  1211  0391                     	;# 
  1212  0392                     	;# 
  1213  0393                     	;# 
  1214  039A                     	;# 
  1215  039C                     	;# 
  1216  039D                     	;# 
  1217  039E                     	;# 
  1218  039F                     	;# 
  1219  0FE4                     	;# 
  1220  0FE5                     	;# 
  1221  0FE6                     	;# 
  1222  0FE7                     	;# 
  1223  0FE8                     	;# 
  1224  0FE9                     	;# 
  1225  0FEA                     	;# 
  1226  0FEB                     	;# 
  1227  0FED                     	;# 
  1228  0FEE                     	;# 
  1229  0FEF                     	;# 
  1230  0000                     	;# 
  1231  0001                     	;# 
  1232  0002                     	;# 
  1233  0003                     	;# 
  1234  0004                     	;# 
  1235  0005                     	;# 
  1236  0006                     	;# 
  1237  0007                     	;# 
  1238  0008                     	;# 
  1239  0009                     	;# 
  1240  000A                     	;# 
  1241  000B                     	;# 
  1242  000C                     	;# 
  1243  000E                     	;# 
  1244  0011                     	;# 
  1245  0012                     	;# 
  1246  0015                     	;# 
  1247  0016                     	;# 
  1248  0016                     	;# 
  1249  0017                     	;# 
  1250  0018                     	;# 
  1251  0019                     	;# 
  1252  001A                     	;# 
  1253  001B                     	;# 
  1254  001C                     	;# 
  1255  001E                     	;# 
  1256  001F                     	;# 
  1257  008C                     	;# 
  1258  008E                     	;# 
  1259  0091                     	;# 
  1260  0092                     	;# 
  1261  0095                     	;# 
  1262  0096                     	;# 
  1263  0097                     	;# 
  1264  0098                     	;# 
  1265  0099                     	;# 
  1266  009A                     	;# 
  1267  009B                     	;# 
  1268  009B                     	;# 
  1269  009C                     	;# 
  1270  009D                     	;# 
  1271  009E                     	;# 
  1272  010C                     	;# 
  1273  010E                     	;# 
  1274  0111                     	;# 
  1275  0112                     	;# 
  1276  0113                     	;# 
  1277  0114                     	;# 
  1278  0115                     	;# 
  1279  0116                     	;# 
  1280  0117                     	;# 
  1281  0118                     	;# 
  1282  0119                     	;# 
  1283  011A                     	;# 
  1284  011B                     	;# 
  1285  011D                     	;# 
  1286  011D                     	;# 
  1287  018C                     	;# 
  1288  018E                     	;# 
  1289  0191                     	;# 
  1290  0191                     	;# 
  1291  0192                     	;# 
  1292  0193                     	;# 
  1293  0193                     	;# 
  1294  0193                     	;# 
  1295  0194                     	;# 
  1296  0195                     	;# 
  1297  0196                     	;# 
  1298  0199                     	;# 
  1299  019A                     	;# 
  1300  019B                     	;# 
  1301  019B                     	;# 
  1302  019B                     	;# 
  1303  019B                     	;# 
  1304  019C                     	;# 
  1305  019C                     	;# 
  1306  019D                     	;# 
  1307  019E                     	;# 
  1308  019F                     	;# 
  1309  020C                     	;# 
  1310  020E                     	;# 
  1311  0211                     	;# 
  1312  0211                     	;# 
  1313  0212                     	;# 
  1314  0212                     	;# 
  1315  0213                     	;# 
  1316  0213                     	;# 
  1317  0214                     	;# 
  1318  0214                     	;# 
  1319  0215                     	;# 
  1320  0215                     	;# 
  1321  0215                     	;# 
  1322  0216                     	;# 
  1323  0216                     	;# 
  1324  0217                     	;# 
  1325  0217                     	;# 
  1326  0291                     	;# 
  1327  0291                     	;# 
  1328  0292                     	;# 
  1329  0293                     	;# 
  1330  0294                     	;# 
  1331  0295                     	;# 
  1332  0295                     	;# 
  1333  0296                     	;# 
  1334  0391                     	;# 
  1335  0392                     	;# 
  1336  0393                     	;# 
  1337  039A                     	;# 
  1338  039C                     	;# 
  1339  039D                     	;# 
  1340  039E                     	;# 
  1341  039F                     	;# 
  1342  0FE4                     	;# 
  1343  0FE5                     	;# 
  1344  0FE6                     	;# 
  1345  0FE7                     	;# 
  1346  0FE8                     	;# 
  1347  0FE9                     	;# 
  1348  0FEA                     	;# 
  1349  0FEB                     	;# 
  1350  0FED                     	;# 
  1351  0FEE                     	;# 
  1352  0FEF                     	;# 
  1353  0000                     	;# 
  1354  0001                     	;# 
  1355  0002                     	;# 
  1356  0003                     	;# 
  1357  0004                     	;# 
  1358  0005                     	;# 
  1359  0006                     	;# 
  1360  0007                     	;# 
  1361  0008                     	;# 
  1362  0009                     	;# 
  1363  000A                     	;# 
  1364  000B                     	;# 
  1365  000C                     	;# 
  1366  000E                     	;# 
  1367  0011                     	;# 
  1368  0012                     	;# 
  1369  0015                     	;# 
  1370  0016                     	;# 
  1371  0016                     	;# 
  1372  0017                     	;# 
  1373  0018                     	;# 
  1374  0019                     	;# 
  1375  001A                     	;# 
  1376  001B                     	;# 
  1377  001C                     	;# 
  1378  001E                     	;# 
  1379  001F                     	;# 
  1380  008C                     	;# 
  1381  008E                     	;# 
  1382  0091                     	;# 
  1383  0092                     	;# 
  1384  0095                     	;# 
  1385  0096                     	;# 
  1386  0097                     	;# 
  1387  0098                     	;# 
  1388  0099                     	;# 
  1389  009A                     	;# 
  1390  009B                     	;# 
  1391  009B                     	;# 
  1392  009C                     	;# 
  1393  009D                     	;# 
  1394  009E                     	;# 
  1395  010C                     	;# 
  1396  010E                     	;# 
  1397  0111                     	;# 
  1398  0112                     	;# 
  1399  0113                     	;# 
  1400  0114                     	;# 
  1401  0115                     	;# 
  1402  0116                     	;# 
  1403  0117                     	;# 
  1404  0118                     	;# 
  1405  0119                     	;# 
  1406  011A                     	;# 
  1407  011B                     	;# 
  1408  011D                     	;# 
  1409  011D                     	;# 
  1410  018C                     	;# 
  1411  018E                     	;# 
  1412  0191                     	;# 
  1413  0191                     	;# 
  1414  0192                     	;# 
  1415  0193                     	;# 
  1416  0193                     	;# 
  1417  0193                     	;# 
  1418  0194                     	;# 
  1419  0195                     	;# 
  1420  0196                     	;# 
  1421  0199                     	;# 
  1422  019A                     	;# 
  1423  019B                     	;# 
  1424  019B                     	;# 
  1425  019B                     	;# 
  1426  019B                     	;# 
  1427  019C                     	;# 
  1428  019C                     	;# 
  1429  019D                     	;# 
  1430  019E                     	;# 
  1431  019F                     	;# 
  1432  020C                     	;# 
  1433  020E                     	;# 
  1434  0211                     	;# 
  1435  0211                     	;# 
  1436  0212                     	;# 
  1437  0212                     	;# 
  1438  0213                     	;# 
  1439  0213                     	;# 
  1440  0214                     	;# 
  1441  0214                     	;# 
  1442  0215                     	;# 
  1443  0215                     	;# 
  1444  0215                     	;# 
  1445  0216                     	;# 
  1446  0216                     	;# 
  1447  0217                     	;# 
  1448  0217                     	;# 
  1449  0291                     	;# 
  1450  0291                     	;# 
  1451  0292                     	;# 
  1452  0293                     	;# 
  1453  0294                     	;# 
  1454  0295                     	;# 
  1455  0295                     	;# 
  1456  0296                     	;# 
  1457  0391                     	;# 
  1458  0392                     	;# 
  1459  0393                     	;# 
  1460  039A                     	;# 
  1461  039C                     	;# 
  1462  039D                     	;# 
  1463  039E                     	;# 
  1464  039F                     	;# 
  1465  0FE4                     	;# 
  1466  0FE5                     	;# 
  1467  0FE6                     	;# 
  1468  0FE7                     	;# 
  1469  0FE8                     	;# 
  1470  0FE9                     	;# 
  1471  0FEA                     	;# 
  1472  0FEB                     	;# 
  1473  0FED                     	;# 
  1474  0FEE                     	;# 
  1475  0FEF                     	;# 
  1476  0000                     	;# 
  1477  0001                     	;# 
  1478  0002                     	;# 
  1479  0003                     	;# 
  1480  0004                     	;# 
  1481  0005                     	;# 
  1482  0006                     	;# 
  1483  0007                     	;# 
  1484  0008                     	;# 
  1485  0009                     	;# 
  1486  000A                     	;# 
  1487  000B                     	;# 
  1488  000C                     	;# 
  1489  000E                     	;# 
  1490  0011                     	;# 
  1491  0012                     	;# 
  1492  0015                     	;# 
  1493  0016                     	;# 
  1494  0016                     	;# 
  1495  0017                     	;# 
  1496  0018                     	;# 
  1497  0019                     	;# 
  1498  001A                     	;# 
  1499  001B                     	;# 
  1500  001C                     	;# 
  1501  001E                     	;# 
  1502  001F                     	;# 
  1503  008C                     	;# 
  1504  008E                     	;# 
  1505  0091                     	;# 
  1506  0092                     	;# 
  1507  0095                     	;# 
  1508  0096                     	;# 
  1509  0097                     	;# 
  1510  0098                     	;# 
  1511  0099                     	;# 
  1512  009A                     	;# 
  1513  009B                     	;# 
  1514  009B                     	;# 
  1515  009C                     	;# 
  1516  009D                     	;# 
  1517  009E                     	;# 
  1518  010C                     	;# 
  1519  010E                     	;# 
  1520  0111                     	;# 
  1521  0112                     	;# 
  1522  0113                     	;# 
  1523  0114                     	;# 
  1524  0115                     	;# 
  1525  0116                     	;# 
  1526  0117                     	;# 
  1527  0118                     	;# 
  1528  0119                     	;# 
  1529  011A                     	;# 
  1530  011B                     	;# 
  1531  011D                     	;# 
  1532  011D                     	;# 
  1533  018C                     	;# 
  1534  018E                     	;# 
  1535  0191                     	;# 
  1536  0191                     	;# 
  1537  0192                     	;# 
  1538  0193                     	;# 
  1539  0193                     	;# 
  1540  0193                     	;# 
  1541  0194                     	;# 
  1542  0195                     	;# 
  1543  0196                     	;# 
  1544  0199                     	;# 
  1545  019A                     	;# 
  1546  019B                     	;# 
  1547  019B                     	;# 
  1548  019B                     	;# 
  1549  019B                     	;# 
  1550  019C                     	;# 
  1551  019C                     	;# 
  1552  019D                     	;# 
  1553  019E                     	;# 
  1554  019F                     	;# 
  1555  020C                     	;# 
  1556  020E                     	;# 
  1557  0211                     	;# 
  1558  0211                     	;# 
  1559  0212                     	;# 
  1560  0212                     	;# 
  1561  0213                     	;# 
  1562  0213                     	;# 
  1563  0214                     	;# 
  1564  0214                     	;# 
  1565  0215                     	;# 
  1566  0215                     	;# 
  1567  0215                     	;# 
  1568  0216                     	;# 
  1569  0216                     	;# 
  1570  0217                     	;# 
  1571  0217                     	;# 
  1572  0291                     	;# 
  1573  0291                     	;# 
  1574  0292                     	;# 
  1575  0293                     	;# 
  1576  0294                     	;# 
  1577  0295                     	;# 
  1578  0295                     	;# 
  1579  0296                     	;# 
  1580  0391                     	;# 
  1581  0392                     	;# 
  1582  0393                     	;# 
  1583  039A                     	;# 
  1584  039C                     	;# 
  1585  039D                     	;# 
  1586  039E                     	;# 
  1587  039F                     	;# 
  1588  0FE4                     	;# 
  1589  0FE5                     	;# 
  1590  0FE6                     	;# 
  1591  0FE7                     	;# 
  1592  0FE8                     	;# 
  1593  0FE9                     	;# 
  1594  0FEA                     	;# 
  1595  0FEB                     	;# 
  1596  0FED                     	;# 
  1597  0FEE                     	;# 
  1598  0FEF                     	;# 
  1599                           
  1600 ;; Function _ESP_default_application_handler is unused but had its address taken
  1601  0000                     
  1602                           	psect	nvBANK0
  1603  0067                     __pnvBANK0:	
  1604  0067                     _IOCAF4_InterruptHandler:	
  1605  0067                     	ds	2
  1606  000C                     _PORTAbits	set	12
  1607  0018                     _T1CONbits	set	24
  1608  0018                     _T1CON	set	24
  1609  0016                     _TMR1L	set	22
  1610  0017                     _TMR1H	set	23
  1611  0019                     _T1GCON	set	25
  1612  000B                     _INTCONbits	set	11
  1613  0011                     _PIR1bits	set	17
  1614  0095                     _OPTION_REGbits	set	149
  1615  008E                     _TRISC	set	142
  1616  008C                     _TRISA	set	140
  1617  0097                     _WDTCON	set	151
  1618  0098                     _OSCTUNE	set	152
  1619  0099                     _OSCCON	set	153
  1620  009D                     _ADCON0bits	set	157
  1621  0091                     _PIE1bits	set	145
  1622  009C                     _ADRESH	set	156
  1623  009B                     _ADRESL	set	155
  1624  009E                     _ADCON1	set	158
  1625  009D                     _ADCON0	set	157
  1626  04D6                     _PLLR	set	1238
  1627  010C                     _LATAbits	set	268
  1628  011D                     _APFCON	set	285
  1629  010E                     _LATC	set	270
  1630  010C                     _LATA	set	268
  1631  0116                     _BORCON	set	278
  1632  018C                     _ANSELA	set	396
  1633  018E                     _ANSELC	set	398
  1634  0199                     _RCREG	set	409
  1635  019D                     _RCSTAbits	set	413
  1636  019A                     _TXREG	set	410
  1637  019C                     _SPBRGH	set	412
  1638  019B                     _SPBRGL	set	411
  1639  019E                     _TXSTA	set	414
  1640  019D                     _RCSTA	set	413
  1641  019F                     _BAUDCON	set	415
  1642  020E                     _WPUC	set	526
  1643  020C                     _WPUA	set	524
  1644  0391                     _IOCAPbits	set	913
  1645  0392                     _IOCANbits	set	914
  1646  0393                     _IOCAFbits	set	915
  1647                           
  1648                           	psect	stringtext1
  1649  029A                     __pstringtext1:	
  1650  029A                     STR_28:	
  1651  029A  3465               	retlw	101	;'e'
  1652  029B  346E               	retlw	110	;'n'
  1653  029C  3474               	retlw	116	;'t'
  1654  029D  3465               	retlw	101	;'e'
  1655  029E  3472               	retlw	114	;'r'
  1656  029F  3420               	retlw	32	;' '
  1657  02A0  3477               	retlw	119	;'w'
  1658  02A1  346C               	retlw	108	;'l'
  1659  02A2  3461               	retlw	97	;'a'
  1660  02A3  346E               	retlw	110	;'n'
  1661  02A4  3420               	retlw	32	;' '
  1662  02A5  3470               	retlw	112	;'p'
  1663  02A6  3461               	retlw	97	;'a'
  1664  02A7  3473               	retlw	115	;'s'
  1665  02A8  3473               	retlw	115	;'s'
  1666  02A9  3477               	retlw	119	;'w'
  1667  02AA  346F               	retlw	111	;'o'
  1668  02AB  3472               	retlw	114	;'r'
  1669  02AC  3464               	retlw	100	;'d'
  1670  02AD  343A               	retlw	58	;':'
  1671  02AE  340A               	retlw	10
  1672  02AF  3400               	retlw	0
  1673                           
  1674                           	psect	stringtext2
  1675  0307                     __pstringtext2:	
  1676  0307                     STR_14:	
  1677  0307  3441               	retlw	65	;'A'
  1678  0308  3454               	retlw	84	;'T'
  1679  0309  342B               	retlw	43	;'+'
  1680  030A  3443               	retlw	67	;'C'
  1681  030B  3449               	retlw	73	;'I'
  1682  030C  3450               	retlw	80	;'P'
  1683  030D  3453               	retlw	83	;'S'
  1684  030E  3445               	retlw	69	;'E'
  1685  030F  3452               	retlw	82	;'R'
  1686  0310  3456               	retlw	86	;'V'
  1687  0311  3445               	retlw	69	;'E'
  1688  0312  3452               	retlw	82	;'R'
  1689  0313  343D               	retlw	61	;'='
  1690  0314  3431               	retlw	49	;'1'
  1691  0315  342C               	retlw	44	;','
  1692  0316  3438               	retlw	56	;'8'
  1693  0317  3430               	retlw	48	;'0'
  1694  0318  340D               	retlw	13
  1695  0319  340A               	retlw	10
  1696  031A  3400               	retlw	0
  1697                           
  1698                           	psect	stringtext3
  1699  032E                     __pstringtext3:	
  1700  032E                     STR_26:	
  1701  032E  3465               	retlw	101	;'e'
  1702  032F  346E               	retlw	110	;'n'
  1703  0330  3474               	retlw	116	;'t'
  1704  0331  3465               	retlw	101	;'e'
  1705  0332  3472               	retlw	114	;'r'
  1706  0333  3420               	retlw	32	;' '
  1707  0334  3477               	retlw	119	;'w'
  1708  0335  346C               	retlw	108	;'l'
  1709  0336  3461               	retlw	97	;'a'
  1710  0337  346E               	retlw	110	;'n'
  1711  0338  3420               	retlw	32	;' '
  1712  0339  346E               	retlw	110	;'n'
  1713  033A  3461               	retlw	97	;'a'
  1714  033B  346D               	retlw	109	;'m'
  1715  033C  3465               	retlw	101	;'e'
  1716  033D  343A               	retlw	58	;':'
  1717  033E  340A               	retlw	10
  1718  033F  3400               	retlw	0
  1719                           
  1720                           	psect	stringtext4
  1721  0360                     __pstringtext4:	
  1722  0360                     STR_9:	
  1723  0360  3441               	retlw	65	;'A'
  1724  0361  3454               	retlw	84	;'T'
  1725  0362  342B               	retlw	43	;'+'
  1726  0363  3443               	retlw	67	;'C'
  1727  0364  3457               	retlw	87	;'W'
  1728  0365  344D               	retlw	77	;'M'
  1729  0366  344F               	retlw	79	;'O'
  1730  0367  3444               	retlw	68	;'D'
  1731  0368  3445               	retlw	69	;'E'
  1732  0369  343D               	retlw	61	;'='
  1733  036A  3431               	retlw	49	;'1'
  1734  036B  340D               	retlw	13
  1735  036C  340A               	retlw	10
  1736  036D  3400               	retlw	0
  1737                           
  1738                           	psect	stringtext5
  1739  036E                     __pstringtext5:	
  1740  036E                     STR_13:	
  1741  036E  3441               	retlw	65	;'A'
  1742  036F  3454               	retlw	84	;'T'
  1743  0370  342B               	retlw	43	;'+'
  1744  0371  3443               	retlw	67	;'C'
  1745  0372  3449               	retlw	73	;'I'
  1746  0373  3450               	retlw	80	;'P'
  1747  0374  344D               	retlw	77	;'M'
  1748  0375  3455               	retlw	85	;'U'
  1749  0376  3458               	retlw	88	;'X'
  1750  0377  343D               	retlw	61	;'='
  1751  0378  3431               	retlw	49	;'1'
  1752  0379  340D               	retlw	13
  1753  037A  340A               	retlw	10
  1754  037B  3400               	retlw	0
  1755                           
  1756                           	psect	stringtext6
  1757  0398                     __pstringtext6:	
  1758  0398                     STR_25:	
  1759  0398  344C               	retlw	76	;'L'
  1760  0399  346F               	retlw	111	;'o'
  1761  039A  3467               	retlw	103	;'g'
  1762  039B  3467               	retlw	103	;'g'
  1763  039C  3465               	retlw	101	;'e'
  1764  039D  3472               	retlw	114	;'r'
  1765  039E  3420               	retlw	32	;' '
  1766  039F  3456               	retlw	86	;'V'
  1767  03A0  3431               	retlw	49	;'1'
  1768  03A1  342E               	retlw	46	;'.'
  1769  03A2  3430               	retlw	48	;'0'
  1770  03A3  340A               	retlw	10
  1771  03A4  3400               	retlw	0
  1772                           
  1773                           	psect	stringtext7
  1774  03A5                     __pstringtext7:	
  1775  03A5                     STR_27:	
  1776  03A5  3462               	retlw	98	;'b'
  1777  03A6  3475               	retlw	117	;'u'
  1778  03A7  3466               	retlw	102	;'f'
  1779  03A8  3466               	retlw	102	;'f'
  1780  03A9  3465               	retlw	101	;'e'
  1781  03AA  3472               	retlw	114	;'r'
  1782  03AB  3420               	retlw	32	;' '
  1783  03AC  3465               	retlw	101	;'e'
  1784  03AD  3472               	retlw	114	;'r'
  1785  03AE  3472               	retlw	114	;'r'
  1786  03AF  346F               	retlw	111	;'o'
  1787  03B0  3472               	retlw	114	;'r'
  1788  03B1  3400               	retlw	0
  1789                           
  1790                           	psect	stringtext8
  1791  03BF                     __pstringtext8:	
  1792  03BF                     STR_16:	
  1793  03BF  3441               	retlw	65	;'A'
  1794  03C0  3454               	retlw	84	;'T'
  1795  03C1  342B               	retlw	43	;'+'
  1796  03C2  3443               	retlw	67	;'C'
  1797  03C3  3449               	retlw	73	;'I'
  1798  03C4  3450               	retlw	80	;'P'
  1799  03C5  3453               	retlw	83	;'S'
  1800  03C6  3445               	retlw	69	;'E'
  1801  03C7  344E               	retlw	78	;'N'
  1802  03C8  3444               	retlw	68	;'D'
  1803  03C9  343D               	retlw	61	;'='
  1804  03CA  3400               	retlw	0
  1805                           
  1806                           	psect	stringtext9
  1807  03D7                     __pstringtext9:	
  1808  03D7                     STR_10:	
  1809  03D7  3441               	retlw	65	;'A'
  1810  03D8  3454               	retlw	84	;'T'
  1811  03D9  342B               	retlw	43	;'+'
  1812  03DA  3443               	retlw	67	;'C'
  1813  03DB  3457               	retlw	87	;'W'
  1814  03DC  344A               	retlw	74	;'J'
  1815  03DD  3441               	retlw	65	;'A'
  1816  03DE  3450               	retlw	80	;'P'
  1817  03DF  343D               	retlw	61	;'='
  1818  03E0  3422               	retlw	34	;'"'
  1819  03E1  3400               	retlw	0
  1820                           
  1821                           	psect	stringtext10
  1822  03E2                     __pstringtext10:	
  1823  03E2                     STR_3:	
  1824  03E2  3453               	retlw	83	;'S'
  1825  03E3  3445               	retlw	69	;'E'
  1826  03E4  344E               	retlw	78	;'N'
  1827  03E5  3444               	retlw	68	;'D'
  1828  03E6  3420               	retlw	32	;' '
  1829  03E7  3446               	retlw	70	;'F'
  1830  03E8  3441               	retlw	65	;'A'
  1831  03E9  3449               	retlw	73	;'I'
  1832  03EA  344C               	retlw	76	;'L'
  1833  03EB  3400               	retlw	0
  1834                           
  1835                           	psect	stringtext11
  1836  0408                     __pstringtext11:	
  1837  0408                     STR_1:	
  1838  0408  3453               	retlw	83	;'S'
  1839  0409  3445               	retlw	69	;'E'
  1840  040A  344E               	retlw	78	;'N'
  1841  040B  3444               	retlw	68	;'D'
  1842  040C  3420               	retlw	32	;' '
  1843  040D  344F               	retlw	79	;'O'
  1844  040E  344B               	retlw	75	;'K'
  1845  040F  3400               	retlw	0
  1846                           
  1847                           	psect	stringtext12
  1848  0410                     __pstringtext12:	
  1849  0410                     STR_6:	
  1850  0410  3443               	retlw	67	;'C'
  1851  0411  344F               	retlw	79	;'O'
  1852  0412  344E               	retlw	78	;'N'
  1853  0413  344E               	retlw	78	;'N'
  1854  0414  3445               	retlw	69	;'E'
  1855  0415  3443               	retlw	67	;'C'
  1856  0416  3454               	retlw	84	;'T'
  1857  0417  3400               	retlw	0
  1858                           
  1859                           	psect	stringtext13
  1860  0418                     __pstringtext13:	
  1861  0418                     STR_22:	
  1862  0418  3462               	retlw	98	;'b'
  1863  0419  346D               	retlw	109	;'m'
  1864  041A  346F               	retlw	111	;'o'
  1865  041B  3464               	retlw	100	;'d'
  1866  041C  3465               	retlw	101	;'e'
  1867  041D  340A               	retlw	10
  1868  041E  3400               	retlw	0
  1869                           
  1870                           	psect	stringtext14
  1871  041F                     __pstringtext14:	
  1872  041F                     STR_21:	
  1873  041F  3474               	retlw	116	;'t'
  1874  0420  346D               	retlw	109	;'m'
  1875  0421  346F               	retlw	111	;'o'
  1876  0422  3464               	retlw	100	;'d'
  1877  0423  3465               	retlw	101	;'e'
  1878  0424  340A               	retlw	10
  1879  0425  3400               	retlw	0
  1880                           
  1881                           	psect	stringtext15
  1882  0426                     __pstringtext15:	
  1883  0426                     STR_7:	
  1884  0426  3443               	retlw	67	;'C'
  1885  0427  344C               	retlw	76	;'L'
  1886  0428  344F               	retlw	79	;'O'
  1887  0429  3453               	retlw	83	;'S'
  1888  042A  3445               	retlw	69	;'E'
  1889  042B  3444               	retlw	68	;'D'
  1890  042C  3400               	retlw	0
  1891                           
  1892                           	psect	stringtext16
  1893  043B                     __pstringtext16:	
  1894  043B                     STR_4:	
  1895  043B  3445               	retlw	69	;'E'
  1896  043C  3452               	retlw	82	;'R'
  1897  043D  3452               	retlw	82	;'R'
  1898  043E  344F               	retlw	79	;'O'
  1899  043F  3452               	retlw	82	;'R'
  1900  0440  3400               	retlw	0
  1901                           
  1902                           	psect	stringtext17
  1903  0465                     __pstringtext17:	
  1904  0465                     STR_8:	
  1905  0465  3441               	retlw	65	;'A'
  1906  0466  3454               	retlw	84	;'T'
  1907  0467  340D               	retlw	13
  1908  0468  340A               	retlw	10
  1909  0469  3400               	retlw	0
  1910                           
  1911                           	psect	stringtext18
  1912  046A                     __pstringtext18:	
  1913  046A                     STR_5:	
  1914  046A  342B               	retlw	43	;'+'
  1915  046B  3449               	retlw	73	;'I'
  1916  046C  3450               	retlw	80	;'P'
  1917  046D  3444               	retlw	68	;'D'
  1918  046E  3400               	retlw	0
  1919                           
  1920                           	psect	stringtext19
  1921  0474                     __pstringtext19:	
  1922  0474                     STR_20:	
  1923  0474  344F               	retlw	79	;'O'
  1924  0475  346B               	retlw	107	;'k'
  1925  0476  340A               	retlw	10
  1926  0477  3400               	retlw	0
  1927                           
  1928                           	psect	stringtext20
  1929  0478                     __pstringtext20:	
  1930  0478                     STR_12:	
  1931  0478  3422               	retlw	34	;'"'
  1932  0479  340D               	retlw	13
  1933  047A  340A               	retlw	10
  1934  047B  3400               	retlw	0
  1935                           
  1936                           	psect	stringtext21
  1937  047C                     __pstringtext21:	
  1938  047C                     STR_11:	
  1939  047C  3422               	retlw	34	;'"'
  1940  047D  342C               	retlw	44	;','
  1941  047E  3422               	retlw	34	;'"'
  1942  047F  3400               	retlw	0
  1943                           
  1944                           	psect	stringtext22
  1945  0484                     __pstringtext22:	
  1946  0484                     STR_23:	
  1947  0484  3443               	retlw	67	;'C'
  1948  0485  3448               	retlw	72	;'H'
  1949  0486  3400               	retlw	0
  1950                           
  1951                           	psect	stringtext23
  1952  0487                     __pstringtext23:	
  1953  0487                     STR_24:	
  1954  0487  3443               	retlw	67	;'C'
  1955  0488  344C               	retlw	76	;'L'
  1956  0489  3400               	retlw	0
  1957                           
  1958                           	psect	stringtext24
  1959  0493                     __pstringtext24:	
  1960  0493                     STR_17:	
  1961  0493  342C               	retlw	44	;','
  1962  0494  3400               	retlw	0
  1963                           
  1964                           	psect	stringtext25
  1965  0495                     __pstringtext25:	
  1966  0495                     STR_15:	
  1967  0495  343A               	retlw	58	;':'
  1968  0496  3400               	retlw	0
  1969                           
  1970                           	psect	stringtext26
  1971  0000                     __pstringtext26:	
  1972  0479                     
  1973                           ; #config settings
  1974  0000                     
  1975                           	psect	cinit
  1976  003F                     start_initialization:	
  1977  003F                     __initialization:	
  1978  003F  3020               	movlw	low __pbssBANK0
  1979                           
  1980                           ; Clear objects allocated to COMMON
  1981  0040  01FA               	clrf	__pbssCOMMON& (0+127)
  1982  0041  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  1983                           
  1984                           ; Clear objects allocated to BANK0
  1985  0042  0084               	movwf	4
  1986  0043  3000               	movlw	high __pbssBANK0
  1987  0044  0085               	movwf	5
  1988  0045  3030               	movlw	48
  1989  0046  2441               	fcall	clear_ram0
  1990                           
  1991                           ; Clear objects allocated to BANK1
  1992  0047  30A0               	movlw	low __pbssBANK1
  1993  0048  0084               	movwf	4
  1994  0049  3000               	movlw	high __pbssBANK1
  1995  004A  0085               	movwf	5
  1996  004B  3020               	movlw	32
  1997  004C  2441               	fcall	clear_ram0
  1998  004D                     end_of_initialization:	
  1999                           ;End of C runtime variable initialization code
  2000                           
  2001  004D                     __end_of__initialization:	
  2002  004D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2003  004E  0020               	movlb	0
  2004  004F  290F               	ljmp	_main	;jump to C main() function
  2005                           
  2006                           	psect	bssCOMMON
  2007  007A                     __pbssCOMMON:	
  2008  007A                     _eusartTxBufferRemaining:	
  2009  007A                     	ds	1
  2010  007B                     _eusartTxHead:	
  2011  007B                     	ds	1
  2012                           
  2013                           	psect	bssBANK0
  2014  0020                     __pbssBANK0:	
  2015  0020                     _eusartRxBuffer:	
  2016  0020                     	ds	8
  2017  0028                     _TMR1_InterruptHandler:	
  2018  0028                     	ds	2
  2019  002A                     _timer1ReloadVal:	
  2020  002A                     	ds	2
  2021  002C                     _ADC_value:	
  2022  002C                     	ds	2
  2023  002E                     _EUSART_RxDefaultInterruptHandler:	
  2024  002E                     	ds	2
  2025  0030                     _EUSART_TxDefaultInterruptHandler:	
  2026  0030                     	ds	2
  2027  0032                     _WIFI_tx_buf_ind:	
  2028  0032                     	ds	1
  2029  0033                     _IOC_value:	
  2030  0033                     	ds	1
  2031  0034                     _TMR1_state:	
  2032  0034                     	ds	1
  2033  0035                     _ADC_count:	
  2034  0035                     	ds	1
  2035  0036                     _message_format:	
  2036  0036                     	ds	1
  2037  0037                     _ESP_wait_exception:	
  2038  0037                     	ds	1
  2039  0038                     _esp_channel:	
  2040  0038                     	ds	1
  2041  0039                     _esp_read_data_index:	
  2042  0039                     	ds	1
  2043  003A                     _IOC_state:	
  2044  003A                     	ds	1
  2045  003B                     _eusartRxCount:	
  2046  003B                     	ds	1
  2047  003C                     _eusartRxTail:	
  2048  003C                     	ds	1
  2049  003D                     _eusartRxHead:	
  2050  003D                     	ds	1
  2051  003E                     _eusartTxTail:	
  2052  003E                     	ds	1
  2053  003F                     _ADC_state:	
  2054  003F                     	ds	1
  2055  0040                     _WIFI_tx_buf:	
  2056  0040                     	ds	16
  2057                           
  2058                           	psect	bssBANK1
  2059  00A0                     __pbssBANK1:	
  2060  00A0                     _eusartTxBuffer:	
  2061  00A0                     	ds	16
  2062  00B0                     _esp_read_data:	
  2063  00B0                     	ds	16
  2064                           
  2065                           	psect	clrtext
  2066  0441                     clear_ram0:	
  2067                           ;	Called with FSR0 containing the base address, and
  2068                           ;	WREG with the size to clear
  2069                           
  2070  0441  0064               	clrwdt	;clear the watchdog before getting into this loop
  2071  0442                     clrloop0:	
  2072  0442  0180               	clrf	0	;clear RAM location pointed to by FSR
  2073  0443  3101               	addfsr 0,1
  2074  0444  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2075  0445  2C42               	goto	clrloop0	;have we reached the end yet?
  2076  0446  3400               	retlw	0	;all done for this memory range, return
  2077                           
  2078                           	psect	cstackCOMMON
  2079  0070                     __pcstackCOMMON:	
  2080  0070                     ?_PIN_MANAGER_IOC:	
  2081  0070                     ??_PIN_MANAGER_IOC:	
  2082                           ; 1 bytes @ 0x0
  2083                           
  2084  0070                     ?_TMR1_ISR:	
  2085                           ; 1 bytes @ 0x0
  2086                           
  2087  0070                     ?_EUSART_Receive_ISR:	
  2088                           ; 1 bytes @ 0x0
  2089                           
  2090  0070                     ??_EUSART_Receive_ISR:	
  2091                           ; 1 bytes @ 0x0
  2092                           
  2093  0070                     ?_EUSART_Transmit_ISR:	
  2094                           ; 1 bytes @ 0x0
  2095                           
  2096  0070                     ??_EUSART_Transmit_ISR:	
  2097                           ; 1 bytes @ 0x0
  2098                           
  2099  0070                     ?_PIN_MANAGER_Initialize:	
  2100                           ; 1 bytes @ 0x0
  2101                           
  2102  0070                     ?_OSCILLATOR_Initialize:	
  2103                           ; 1 bytes @ 0x0
  2104                           
  2105  0070                     ?_WDT_Initialize:	
  2106                           ; 1 bytes @ 0x0
  2107                           
  2108  0070                     ?_TMR1_Initialize:	
  2109                           ; 1 bytes @ 0x0
  2110                           
  2111  0070                     ?_TMR1_DefaultInterruptHandler:	
  2112                           ; 1 bytes @ 0x0
  2113                           
  2114  0070                     ??_TMR1_DefaultInterruptHandler:	
  2115                           ; 1 bytes @ 0x0
  2116                           
  2117  0070                     ?_IOCAF4_DefaultInterruptHandler:	
  2118                           ; 1 bytes @ 0x0
  2119                           
  2120  0070                     ??_IOCAF4_DefaultInterruptHandler:	
  2121                           ; 1 bytes @ 0x0
  2122                           
  2123  0070                     ?_IOCAF4_ISR:	
  2124                           ; 1 bytes @ 0x0
  2125                           
  2126  0070                     ??_IOCAF4_ISR:	
  2127                           ; 1 bytes @ 0x0
  2128                           
  2129  0070                     ?_logger_initialize:	
  2130                           ; 1 bytes @ 0x0
  2131                           
  2132  0070                     ?_bt_message_handler:	
  2133                           ; 1 bytes @ 0x0
  2134                           
  2135  0070                     ?_read_analog:	
  2136                           ; 1 bytes @ 0x0
  2137                           
  2138  0070                     ?_process_ioc:	
  2139                           ; 1 bytes @ 0x0
  2140                           
  2141  0070                     ?__TMR1_Ready:	
  2142                           ; 1 bytes @ 0x0
  2143                           
  2144  0070                     ??__TMR1_Ready:	
  2145                           ; 1 bytes @ 0x0
  2146                           
  2147  0070                     ?__IOC_Ready:	
  2148                           ; 1 bytes @ 0x0
  2149                           
  2150  0070                     ??__IOC_Ready:	
  2151                           ; 1 bytes @ 0x0
  2152                           
  2153  0070                     ?_toggle_format:	
  2154                           ; 1 bytes @ 0x0
  2155                           
  2156  0070                     ?_ADC_Initialize:	
  2157                           ; 1 bytes @ 0x0
  2158                           
  2159  0070                     ?_ADC_SelectChannel:	
  2160                           ; 1 bytes @ 0x0
  2161                           
  2162  0070                     ?_ADC_StartConversion:	
  2163                           ; 1 bytes @ 0x0
  2164                           
  2165  0070                     ?_ADC_ISR:	
  2166                           ; 1 bytes @ 0x0
  2167                           
  2168  0070                     ??_ADC_ISR:	
  2169                           ; 1 bytes @ 0x0
  2170                           
  2171  0070                     ?_INTERRUPT_InterruptManager:	
  2172                           ; 1 bytes @ 0x0
  2173                           
  2174  0070                     ?_EUSART_Initialize:	
  2175                           ; 1 bytes @ 0x0
  2176                           
  2177  0070                     ?_EUSART_is_tx_ready:	
  2178                           ; 1 bytes @ 0x0
  2179                           
  2180  0070                     ?_EUSART_is_rx_ready:	
  2181                           ; 1 bytes @ 0x0
  2182                           
  2183  0070                     ?_EUSART_Read:	
  2184                           ; 1 bytes @ 0x0
  2185                           
  2186  0070                     ?_EUSART_Write:	
  2187                           ; 1 bytes @ 0x0
  2188                           
  2189  0070                     ?_SYSTEM_Initialize:	
  2190                           ; 1 bytes @ 0x0
  2191                           
  2192  0070                     ?_TMR1_StartTimer:	
  2193                           ; 1 bytes @ 0x0
  2194                           
  2195  0070                     ?_TMR1_StopTimer:	
  2196                           ; 1 bytes @ 0x0
  2197                           
  2198  0070                     ?_TMR1_WriteTimer:	
  2199                           ; 1 bytes @ 0x0
  2200                           
  2201  0070                     ?_main:	
  2202                           ; 1 bytes @ 0x0
  2203                           
  2204  0070                     ?i1_ADC_StartConversion:	
  2205                           ; 1 bytes @ 0x0
  2206                           
  2207  0070                     ??i1_ADC_StartConversion:	
  2208                           ; 1 bytes @ 0x0
  2209                           
  2210  0070                     ?_ADC_GetConversionResult:	
  2211                           ; 1 bytes @ 0x0
  2212                           
  2213  0070                     TMR1_WriteTimer@timerVal:	
  2214                           ; 2 bytes @ 0x0
  2215                           
  2216                           
  2217                           ; 2 bytes @ 0x0
  2218  0070                     	ds	2
  2219  0072                     ??_TMR1_ISR:	
  2220  0072                     ?_EUSART_SetRxInterruptHandler:	
  2221                           ; 1 bytes @ 0x2
  2222                           
  2223  0072                     ?_EUSART_SetTxInterruptHandler:	
  2224                           ; 1 bytes @ 0x2
  2225                           
  2226  0072                     ??_OSCILLATOR_Initialize:	
  2227                           ; 1 bytes @ 0x2
  2228                           
  2229  0072                     ??_WDT_Initialize:	
  2230                           ; 1 bytes @ 0x2
  2231                           
  2232  0072                     ?_TMR1_SetInterruptHandler:	
  2233                           ; 1 bytes @ 0x2
  2234                           
  2235  0072                     ?_IOCAF4_SetInterruptHandler:	
  2236                           ; 1 bytes @ 0x2
  2237                           
  2238  0072                     ?_ESP_Set_application_handler:	
  2239                           ; 1 bytes @ 0x2
  2240                           
  2241  0072                     ??_ADC_Initialize:	
  2242                           ; 1 bytes @ 0x2
  2243                           
  2244  0072                     ??_ADC_SelectChannel:	
  2245                           ; 1 bytes @ 0x2
  2246                           
  2247  0072                     ??_ADC_StartConversion:	
  2248                           ; 1 bytes @ 0x2
  2249                           
  2250  0072                     ??_ADC_GetConversionResult:	
  2251                           ; 1 bytes @ 0x2
  2252                           
  2253  0072                     ??_INTERRUPT_InterruptManager:	
  2254                           ; 1 bytes @ 0x2
  2255                           
  2256  0072                     ??_EUSART_is_tx_ready:	
  2257                           ; 1 bytes @ 0x2
  2258                           
  2259  0072                     ??_EUSART_is_rx_ready:	
  2260                           ; 1 bytes @ 0x2
  2261                           
  2262  0072                     ??_EUSART_Read:	
  2263                           ; 1 bytes @ 0x2
  2264                           
  2265  0072                     ??_EUSART_Write:	
  2266                           ; 1 bytes @ 0x2
  2267                           
  2268  0072                     ??_TMR1_StartTimer:	
  2269                           ; 1 bytes @ 0x2
  2270                           
  2271  0072                     ??_TMR1_StopTimer:	
  2272                           ; 1 bytes @ 0x2
  2273                           
  2274  0072                     ??_TMR1_WriteTimer:	
  2275                           ; 1 bytes @ 0x2
  2276                           
  2277  0072                     ?___lwdiv:	
  2278                           ; 1 bytes @ 0x2
  2279                           
  2280  0072                     ?___lwmod:	
  2281                           ; 2 bytes @ 0x2
  2282                           
  2283  0072                     ?___lmul:	
  2284                           ; 2 bytes @ 0x2
  2285                           
  2286  0072                     EUSART_Read@readValue:	
  2287                           ; 4 bytes @ 0x2
  2288                           
  2289  0072                     EUSART_Write@txData:	
  2290                           ; 1 bytes @ 0x2
  2291                           
  2292  0072                     EUSART_SetTxInterruptHandler@interruptHandler:	
  2293                           ; 1 bytes @ 0x2
  2294                           
  2295  0072                     EUSART_SetRxInterruptHandler@interruptHandler:	
  2296                           ; 2 bytes @ 0x2
  2297                           
  2298  0072                     TMR1_SetInterruptHandler@InterruptHandler:	
  2299                           ; 2 bytes @ 0x2
  2300                           
  2301  0072                     IOCAF4_SetInterruptHandler@InterruptHandler:	
  2302                           ; 2 bytes @ 0x2
  2303                           
  2304  0072                     ESP_Set_application_handler@applicationHandler:	
  2305                           ; 2 bytes @ 0x2
  2306                           
  2307  0072                     ___lwdiv@divisor:	
  2308                           ; 2 bytes @ 0x2
  2309                           
  2310  0072                     ___lwmod@divisor:	
  2311                           ; 2 bytes @ 0x2
  2312                           
  2313  0072                     ___lmul@multiplier:	
  2314                           ; 2 bytes @ 0x2
  2315                           
  2316                           
  2317                           ; 4 bytes @ 0x2
  2318  0072                     	ds	1
  2319  0073                     ?__puts:	
  2320  0073                     ?_write:	
  2321                           ; 1 bytes @ 0x3
  2322                           
  2323  0073                     ADC_SelectChannel@channel:	
  2324                           ; 1 bytes @ 0x3
  2325                           
  2326  0073                     write@lenght:	
  2327                           ; 1 bytes @ 0x3
  2328                           
  2329  0073                     __puts@pt:	
  2330                           ; 1 bytes @ 0x3
  2331                           
  2332                           
  2333                           ; 2 bytes @ 0x3
  2334  0073                     	ds	1
  2335  0074                     ??_EUSART_SetRxInterruptHandler:	
  2336  0074                     ??_EUSART_SetTxInterruptHandler:	
  2337                           ; 1 bytes @ 0x4
  2338                           
  2339  0074                     ??_PIN_MANAGER_Initialize:	
  2340                           ; 1 bytes @ 0x4
  2341                           
  2342  0074                     ??_TMR1_Initialize:	
  2343                           ; 1 bytes @ 0x4
  2344                           
  2345  0074                     ??_TMR1_SetInterruptHandler:	
  2346                           ; 1 bytes @ 0x4
  2347                           
  2348  0074                     ??_IOCAF4_SetInterruptHandler:	
  2349                           ; 1 bytes @ 0x4
  2350                           
  2351  0074                     ??_logger_initialize:	
  2352                           ; 1 bytes @ 0x4
  2353                           
  2354  0074                     ??_ESP_Set_application_handler:	
  2355                           ; 1 bytes @ 0x4
  2356                           
  2357  0074                     ??_EUSART_Initialize:	
  2358                           ; 1 bytes @ 0x4
  2359                           
  2360  0074                     ??_SYSTEM_Initialize:	
  2361                           ; 1 bytes @ 0x4
  2362                           
  2363  0074                     ??_write:	
  2364                           ; 1 bytes @ 0x4
  2365                           
  2366  0074                     ___lwdiv@dividend:	
  2367                           ; 1 bytes @ 0x4
  2368                           
  2369  0074                     ___lwmod@dividend:	
  2370                           ; 2 bytes @ 0x4
  2371                           
  2372                           
  2373                           ; 2 bytes @ 0x4
  2374  0074                     	ds	1
  2375  0075                     ??__puts:	
  2376  0075                     write@i:	
  2377                           ; 1 bytes @ 0x5
  2378                           
  2379                           
  2380                           ; 1 bytes @ 0x5
  2381  0075                     	ds	1
  2382  0076                     ??___lwdiv:	
  2383  0076                     ??___lwmod:	
  2384                           ; 1 bytes @ 0x6
  2385                           
  2386  0076                     write@pt:	
  2387                           ; 1 bytes @ 0x6
  2388                           
  2389  0076                     ___lwmod@counter:	
  2390                           ; 1 bytes @ 0x6
  2391                           
  2392  0076                     ___lwdiv@quotient:	
  2393                           ; 1 bytes @ 0x6
  2394                           
  2395  0076                     ___lmul@multiplicand:	
  2396                           ; 2 bytes @ 0x6
  2397                           
  2398                           
  2399                           ; 4 bytes @ 0x6
  2400  0076                     	ds	2
  2401  0078                     __puts@index:	
  2402  0078                     ___lwdiv@counter:	
  2403                           ; 1 bytes @ 0x8
  2404                           
  2405                           
  2406                           ; 1 bytes @ 0x8
  2407  0078                     	ds	1
  2408  0079                     ??_process_ioc:	
  2409  0079                     ?_process_message:	
  2410                           ; 1 bytes @ 0x9
  2411                           
  2412  0079                     ??_toggle_format:	
  2413                           ; 1 bytes @ 0x9
  2414                           
  2415  0079                     ??__sprintf:	
  2416                           ; 1 bytes @ 0x9
  2417                           
  2418  0079                     process_message@message:	
  2419                           ; 1 bytes @ 0x9
  2420                           
  2421                           
  2422                           ; 1 bytes @ 0x9
  2423  0079                     	ds	1
  2424  007A                     ??_bt_message_handler:	
  2425  007A                     ??___lmul:	
  2426                           ; 1 bytes @ 0xA
  2427                           
  2428                           
  2429                           	psect	cstackBANK0
  2430  0050                     __pcstackBANK0:	
  2431                           ; 1 bytes @ 0xA
  2432                           
  2433  0050                     ??_process_message:	
  2434  0050                     ?__sprintf:	
  2435                           ; 1 bytes @ 0x0
  2436                           
  2437  0050                     __sprintf@val:	
  2438                           ; 1 bytes @ 0x0
  2439                           
  2440  0050                     ___lmul@product:	
  2441                           ; 2 bytes @ 0x0
  2442                           
  2443                           
  2444                           ; 4 bytes @ 0x0
  2445  0050                     	ds	2
  2446  0052                     bt_message_handler@message:	
  2447  0052                     __sprintf@aux:	
  2448                           ; 1 bytes @ 0x2
  2449                           
  2450                           
  2451                           ; 2 bytes @ 0x2
  2452  0052                     	ds	2
  2453  0054                     __sprintf@mess:	
  2454                           
  2455                           ; 1 bytes @ 0x4
  2456  0054                     	ds	1
  2457  0055                     ??_read_analog:	
  2458                           
  2459                           ; 1 bytes @ 0x5
  2460  0055                     	ds	4
  2461  0059                     read_analog@mess:	
  2462                           
  2463                           ; 6 bytes @ 0x9
  2464  0059                     	ds	6
  2465  005F                     read_analog@aux1:	
  2466                           
  2467                           ; 4 bytes @ 0xF
  2468  005F                     	ds	4
  2469  0063                     read_analog@adc_val:	
  2470                           
  2471                           ; 2 bytes @ 0x13
  2472  0063                     	ds	2
  2473  0065                     ??_main:	
  2474                           
  2475                           ; 1 bytes @ 0x15
  2476  0065                     	ds	2
  2477                           
  2478                           	psect	maintext
  2479  010F                     __pmaintext:	
  2480 ;;
  2481 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2482 ;;
  2483 ;; *************** function _main *****************
  2484 ;; Defined at:
  2485 ;;		line 51 in file "main.c"
  2486 ;; Parameters:    Size  Location     Type
  2487 ;;		None
  2488 ;; Auto vars:     Size  Location     Type
  2489 ;;		None
  2490 ;; Return value:  Size  Location     Type
  2491 ;;                  1    wreg      void 
  2492 ;; Registers used:
  2493 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2494 ;; Tracked objects:
  2495 ;;		On entry : B1F/0
  2496 ;;		On exit  : 0/0
  2497 ;;		Unchanged: 0/0
  2498 ;; Data sizes:     COMMON   BANK0   BANK1
  2499 ;;      Params:         0       0       0
  2500 ;;      Locals:         0       0       0
  2501 ;;      Temps:          0       2       0
  2502 ;;      Totals:         0       2       0
  2503 ;;Total ram usage:        2 bytes
  2504 ;; Hardware stack levels required when called:    9
  2505 ;; This function calls:
  2506 ;;		_EUSART_is_rx_ready
  2507 ;;		_SYSTEM_Initialize
  2508 ;;		_bt_message_handler
  2509 ;;		_logger_initialize
  2510 ;;		_process_ioc
  2511 ;;		_read_analog
  2512 ;; This function is called by:
  2513 ;;		Startup code after reset
  2514 ;; This function uses a non-reentrant model
  2515 ;;
  2516                           
  2517                           
  2518                           ;psect for function _main
  2519  010F                     _main:	
  2520                           
  2521                           ;main.c: 54:     SYSTEM_Initialize();
  2522                           
  2523                           ;incstack = 0
  2524                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2525  010F  2447               	fcall	_SYSTEM_Initialize
  2526                           
  2527                           ;main.c: 60:     logger_initialize();
  2528  0110  2262               	fcall	_logger_initialize
  2529                           
  2530                           ;main.c: 67:     (INTCONbits.GIE = 1);
  2531  0111  178B               	bsf	11,7	;volatile
  2532                           
  2533                           ;main.c: 73:     (INTCONbits.PEIE = 1);
  2534  0112  170B               	bsf	11,6	;volatile
  2535  0113  0022               	movlb	2	; select bank2
  2536  0114  168C               	bsf	12,5	;volatile
  2537                           
  2538                           ;main.c: 79:     _delay((unsigned long)((200)*(32000000/4000.0)));
  2539  0115  3009               	movlw	9
  2540  0116  0020               	movlb	0	; select bank0
  2541  0117  00E6               	movwf	??_main+1
  2542  0118  301E               	movlw	30
  2543  0119  00E5               	movwf	??_main
  2544  011A  30E4               	movlw	228
  2545  011B                     u1047:	
  2546  011B  0B89               	decfsz	9,f
  2547  011C  291B               	goto	u1047
  2548  011D  0BE5               	decfsz	??_main,f
  2549  011E  291B               	goto	u1047
  2550  011F  0BE6               	decfsz	??_main+1,f
  2551  0120  291B               	goto	u1047
  2552  0121  0000               	nop
  2553  0122  0022               	movlb	2	; select bank2
  2554  0123  128C               	bcf	12,5	;volatile
  2555                           
  2556                           ;main.c: 81:     _delay((unsigned long)((200)*(32000000/4000.0)));
  2557  0124  3009               	movlw	9
  2558  0125  0020               	movlb	0	; select bank0
  2559  0126  00E6               	movwf	??_main+1
  2560  0127  301E               	movlw	30
  2561  0128  00E5               	movwf	??_main
  2562  0129  30E4               	movlw	228
  2563  012A                     u1057:	
  2564  012A  0B89               	decfsz	9,f
  2565  012B  292A               	goto	u1057
  2566  012C  0BE5               	decfsz	??_main,f
  2567  012D  292A               	goto	u1057
  2568  012E  0BE6               	decfsz	??_main+1,f
  2569  012F  292A               	goto	u1057
  2570  0130  0000               	nop
  2571  0131                     l2426:	
  2572                           
  2573                           ;main.c: 95:     {;main.c: 98:         if (EUSART_is_rx_ready()) {
  2574  0131  2490               	fcall	_EUSART_is_rx_ready
  2575  0132  3A00               	xorlw	0
  2576  0133  1903               	skipnz
  2577  0134  2936               	goto	l2430
  2578                           
  2579                           ;main.c: 100:                 bt_message_handler();
  2580  0135  246F               	fcall	_bt_message_handler
  2581  0136                     l2430:	
  2582                           
  2583                           ;main.c: 106:         if (ADC_state == ADC_READY) {
  2584  0136  0020               	movlb	0	; select bank0
  2585  0137  0B3F               	decfsz	_ADC_state,w	;volatile
  2586  0138  293A               	goto	l2434
  2587                           
  2588                           ;main.c: 107:             read_analog();
  2589  0139  20BC               	fcall	_read_analog
  2590  013A                     l2434:	
  2591                           
  2592                           ;main.c: 110:         if (IOC_state == IOC_READY) {
  2593  013A  0020               	movlb	0	; select bank0
  2594  013B  0B3A               	decfsz	_IOC_state,w	;volatile
  2595  013C  293E               	goto	l418
  2596                           
  2597                           ;main.c: 111:             process_ioc();
  2598  013D  237C               	fcall	_process_ioc
  2599  013E                     l418:	
  2600                           ;main.c: 112:         }
  2601                           
  2602  013E  0064               	clrwdt	;# 
  2603  013F  2931               	goto	l2426
  2604  0140                     __end_of_main:	
  2605                           
  2606                           	psect	text1
  2607  00BC                     __ptext1:	
  2608 ;; *************** function _read_analog *****************
  2609 ;; Defined at:
  2610 ;;		line 97 in file "logger.c"
  2611 ;; Parameters:    Size  Location     Type
  2612 ;;		None
  2613 ;; Auto vars:     Size  Location     Type
  2614 ;;  mess            6    9[BANK0 ] unsigned char [6]
  2615 ;;  aux1            4   15[BANK0 ] unsigned long 
  2616 ;;  adc_val         2   19[BANK0 ] unsigned short 
  2617 ;; Return value:  Size  Location     Type
  2618 ;;                  1    wreg      void 
  2619 ;; Registers used:
  2620 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2621 ;; Tracked objects:
  2622 ;;		On entry : 1F/0
  2623 ;;		On exit  : 1E/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMMON   BANK0   BANK1
  2626 ;;      Params:         0       0       0
  2627 ;;      Locals:         0      12       0
  2628 ;;      Temps:          0       4       0
  2629 ;;      Totals:         0      16       0
  2630 ;;Total ram usage:       16 bytes
  2631 ;; Hardware stack levels used:    1
  2632 ;; Hardware stack levels required when called:    6
  2633 ;; This function calls:
  2634 ;;		___lmul
  2635 ;;		__sprintf
  2636 ;;		_write
  2637 ;; This function is called by:
  2638 ;;		_main
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642                           
  2643                           ;psect for function _read_analog
  2644  00BC                     _read_analog:	
  2645                           
  2646                           ;logger.c: 99:     unsigned short adc_val;;logger.c: 101:     unsigned long aux1;;logger
      +                          .c: 102:     unsigned char mess[6];;logger.c: 104:     adc_val = ADC_value;
  2647                           
  2648                           ;incstack = 0
  2649                           ; Regs used in _read_analog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2650  00BC  082D               	movf	_ADC_value+1,w	;volatile
  2651  00BD  00E4               	movwf	read_analog@adc_val+1
  2652  00BE  082C               	movf	_ADC_value,w	;volatile
  2653  00BF  00E3               	movwf	read_analog@adc_val
  2654                           
  2655                           ;logger.c: 105:     ADC_state = ADC_IDLE;
  2656  00C0  01BF               	clrf	_ADC_state	;volatile
  2657                           
  2658                           ;logger.c: 107:     if (message_format == MESSAGE_BINARY) {
  2659  00C1  0836               	movf	_message_format,w	;volatile
  2660  00C2  1D03               	btfss	3,2
  2661  00C3  28DC               	goto	l2402
  2662                           
  2663                           ;logger.c: 108:        WIFI_tx_buf[WIFI_tx_buf_ind++] = (unsigned char)(adc_val & 0xff);
  2664  00C4  0832               	movf	_WIFI_tx_buf_ind,w
  2665  00C5  3E40               	addlw	(low (_WIFI_tx_buf| 0))& (0+255)
  2666  00C6  0086               	movwf	6
  2667  00C7  0187               	clrf	7
  2668  00C8  0863               	movf	read_analog@adc_val,w
  2669  00C9  0081               	movwf	1
  2670  00CA  0AB2               	incf	_WIFI_tx_buf_ind,f	;volatile
  2671                           
  2672                           ;logger.c: 109:        WIFI_tx_buf[WIFI_tx_buf_ind++] = (unsigned char)((adc_val >> 8) &
      +                           0xff);
  2673  00CB  0832               	movf	_WIFI_tx_buf_ind,w
  2674  00CC  3E40               	addlw	(low (_WIFI_tx_buf| 0))& (0+255)
  2675  00CD  0086               	movwf	6
  2676  00CE  0864               	movf	read_analog@adc_val+1,w
  2677  00CF  0081               	movwf	1
  2678  00D0  0AB2               	incf	_WIFI_tx_buf_ind,f	;volatile
  2679                           
  2680                           ;logger.c: 111:        if (WIFI_tx_buf_ind == 16) {
  2681  00D1  3010               	movlw	16
  2682  00D2  0632               	xorwf	_WIFI_tx_buf_ind,w	;volatile
  2683  00D3  1D03               	btfss	3,2
  2684  00D4  0008               	return
  2685                           
  2686                           ;logger.c: 113:                 write(WIFI_tx_buf,16);
  2687  00D5  3010               	movlw	16
  2688  00D6  00F3               	movwf	write@lenght
  2689  00D7  3040               	movlw	(low (_WIFI_tx_buf| 0))& (0+255)
  2690  00D8  231B               	fcall	_write
  2691                           
  2692                           ;logger.c: 118:             WIFI_tx_buf_ind = 0;
  2693  00D9  0020               	movlb	0	; select bank0
  2694  00DA  01B2               	clrf	_WIFI_tx_buf_ind	;volatile
  2695  00DB  0008               	return
  2696  00DC                     l2402:	
  2697                           
  2698                           ;logger.c: 122:         aux1 = (unsigned long)adc_val*3300UL;
  2699  00DC  0863               	movf	read_analog@adc_val,w
  2700  00DD  00F2               	movwf	___lmul@multiplier
  2701  00DE  0864               	movf	read_analog@adc_val+1,w
  2702  00DF  00F3               	movwf	___lmul@multiplier+1
  2703  00E0  300C               	movlw	12
  2704  00E1  01F4               	clrf	___lmul@multiplier+2
  2705  00E2  01F5               	clrf	___lmul@multiplier+3
  2706  00E3  01F9               	clrf	___lmul@multiplicand+3
  2707  00E4  01F8               	clrf	___lmul@multiplicand+2
  2708  00E5  00F7               	movwf	___lmul@multiplicand+1
  2709  00E6  30E4               	movlw	228
  2710  00E7  00F6               	movwf	___lmul@multiplicand
  2711  00E8  21B9               	fcall	___lmul
  2712  00E9  0875               	movf	?___lmul+3,w
  2713  00EA  00E2               	movwf	read_analog@aux1+3
  2714  00EB  0874               	movf	?___lmul+2,w
  2715  00EC  00E1               	movwf	read_analog@aux1+2
  2716  00ED  0873               	movf	?___lmul+1,w
  2717  00EE  00E0               	movwf	read_analog@aux1+1
  2718  00EF  0872               	movf	?___lmul,w
  2719  00F0  00DF               	movwf	read_analog@aux1
  2720                           
  2721                           ;logger.c: 123:         adc_val = (unsigned short)(aux1 >> 10);
  2722  00F1  00D5               	movwf	??_read_analog
  2723  00F2  0860               	movf	read_analog@aux1+1,w
  2724  00F3  00D6               	movwf	??_read_analog+1
  2725  00F4  0861               	movf	read_analog@aux1+2,w
  2726  00F5  00D7               	movwf	??_read_analog+2
  2727  00F6  0862               	movf	read_analog@aux1+3,w
  2728  00F7  00D8               	movwf	??_read_analog+3
  2729  00F8  300A               	movlw	10
  2730  00F9                     u1005:	
  2731  00F9  36D8               	lsrf	??_read_analog+3,f
  2732  00FA  0CD7               	rrf	??_read_analog+2,f
  2733  00FB  0CD6               	rrf	??_read_analog+1,f
  2734  00FC  0CD5               	rrf	??_read_analog,f
  2735  00FD  0B89               	decfsz	9,f
  2736  00FE  28F9               	goto	u1005
  2737  00FF  0856               	movf	??_read_analog+1,w
  2738  0100  00E4               	movwf	read_analog@adc_val+1
  2739  0101  0855               	movf	??_read_analog,w
  2740  0102  00E3               	movwf	read_analog@adc_val
  2741                           
  2742                           ;logger.c: 125:         _sprintf(mess,adc_val);
  2743  0103  0864               	movf	read_analog@adc_val+1,w
  2744  0104  00D1               	movwf	__sprintf@val+1
  2745  0105  0863               	movf	read_analog@adc_val,w
  2746  0106  00D0               	movwf	__sprintf@val
  2747  0107  3059               	movlw	(low (read_analog@mess| 0))& (0+255)
  2748  0108  2050               	fcall	__sprintf
  2749                           
  2750                           ;logger.c: 126:         mess[5] = '\n';
  2751  0109  300A               	movlw	10
  2752  010A  00DE               	movwf	read_analog@mess+5
  2753                           
  2754                           ;logger.c: 128:             write(mess,6);
  2755  010B  3006               	movlw	6
  2756  010C  00F3               	movwf	write@lenght
  2757  010D  3059               	movlw	(low (read_analog@mess| 0))& (0+255)
  2758  010E  2B1B               	ljmp	_write
  2759  010F                     __end_of_read_analog:	
  2760                           
  2761                           	psect	text2
  2762  031B                     __ptext2:	
  2763 ;; *************** function _write *****************
  2764 ;; Defined at:
  2765 ;;		line 15 in file "comm.c"
  2766 ;; Parameters:    Size  Location     Type
  2767 ;;  pt              1    wreg     PTR unsigned char 
  2768 ;;		 -> read_wifi_settings@pass(14), read_wifi_settings@wifi(10), read_analog@mess(6), WIFI_tx_buf(16), 
  2769 ;;		 -> ESP_write@res(1), ESP_write@aux(1), 
  2770 ;;  lenght          1    3[COMMON] unsigned char 
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;  pt              1    6[COMMON] PTR unsigned char 
  2773 ;;		 -> read_wifi_settings@pass(14), read_wifi_settings@wifi(10), read_analog@mess(6), WIFI_tx_buf(16), 
  2774 ;;		 -> ESP_write@res(1), ESP_write@aux(1), 
  2775 ;;  i               1    5[COMMON] unsigned char 
  2776 ;; Return value:  Size  Location     Type
  2777 ;;                  1    wreg      void 
  2778 ;; Registers used:
  2779 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2780 ;; Tracked objects:
  2781 ;;		On entry : 1F/0
  2782 ;;		On exit  : 1E/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMMON   BANK0   BANK1
  2785 ;;      Params:         1       0       0
  2786 ;;      Locals:         2       0       0
  2787 ;;      Temps:          1       0       0
  2788 ;;      Totals:         4       0       0
  2789 ;;Total ram usage:        4 bytes
  2790 ;; Hardware stack levels used:    1
  2791 ;; Hardware stack levels required when called:    5
  2792 ;; This function calls:
  2793 ;;		_EUSART_Write
  2794 ;;		_EUSART_is_tx_ready
  2795 ;; This function is called by:
  2796 ;;		_read_analog
  2797 ;; This function uses a non-reentrant model
  2798 ;;
  2799                           
  2800                           
  2801                           ;psect for function _write
  2802  031B                     _write:	
  2803                           
  2804                           ;incstack = 0
  2805                           ; Regs used in _write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2806                           ;write@pt stored from wreg
  2807  031B  00F6               	movwf	write@pt
  2808                           
  2809                           ;comm.c: 15: void write(unsigned char *pt, unsigned char lenght);comm.c: 16: {;comm.c: 1
      +                          7:     unsigned char i;;comm.c: 19:     for (i=0; i<lenght; i++) {
  2810  031C  01F5               	clrf	write@i
  2811  031D                     l2032:	
  2812  031D  0873               	movf	write@lenght,w
  2813  031E  0275               	subwf	write@i,w
  2814  031F  1803               	btfsc	3,0
  2815  0320  0008               	return
  2816  0321                     l2026:	
  2817  0321  2497               	fcall	_EUSART_is_tx_ready
  2818  0322  3A00               	xorlw	0
  2819  0323  1903               	skipnz
  2820  0324  2B21               	goto	l2026
  2821                           
  2822                           ;comm.c: 21:         EUSART_Write(pt[i]);
  2823  0325  0875               	movf	write@i,w
  2824  0326  0776               	addwf	write@pt,w
  2825  0327  00F4               	movwf	??_write
  2826  0328  0086               	movwf	6
  2827  0329  0187               	clrf	7
  2828  032A  0801               	movf	1,w
  2829  032B  227F               	fcall	_EUSART_Write
  2830                           
  2831                           ;comm.c: 22:     }
  2832  032C  0AF5               	incf	write@i,f
  2833  032D  2B1D               	goto	l2032
  2834  032E                     __end_of_write:	
  2835                           
  2836                           	psect	text3
  2837  0050                     __ptext3:	
  2838 ;; *************** function __sprintf *****************
  2839 ;; Defined at:
  2840 ;;		line 25 in file "comm.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;  mess            1    wreg     PTR unsigned char 
  2843 ;;		 -> read_analog@mess(6), 
  2844 ;;  val             2    0[BANK0 ] unsigned short 
  2845 ;; Auto vars:     Size  Location     Type
  2846 ;;  mess            1    4[BANK0 ] PTR unsigned char 
  2847 ;;		 -> read_analog@mess(6), 
  2848 ;;  aux             2    2[BANK0 ] unsigned short 
  2849 ;; Return value:  Size  Location     Type
  2850 ;;                  1    wreg      void 
  2851 ;; Registers used:
  2852 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2853 ;; Tracked objects:
  2854 ;;		On entry : 1F/0
  2855 ;;		On exit  : 1F/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMMON   BANK0   BANK1
  2858 ;;      Params:         0       2       0
  2859 ;;      Locals:         0       3       0
  2860 ;;      Temps:          0       0       0
  2861 ;;      Totals:         0       5       0
  2862 ;;Total ram usage:        5 bytes
  2863 ;; Hardware stack levels used:    1
  2864 ;; Hardware stack levels required when called:    5
  2865 ;; This function calls:
  2866 ;;		___lwdiv
  2867 ;;		___lwmod
  2868 ;; This function is called by:
  2869 ;;		_read_analog
  2870 ;; This function uses a non-reentrant model
  2871 ;;
  2872                           
  2873                           
  2874                           ;psect for function __sprintf
  2875  0050                     __sprintf:	
  2876                           
  2877                           ;incstack = 0
  2878                           ; Regs used in __sprintf: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2879                           ;__sprintf@mess stored from wreg
  2880  0050  00D4               	movwf	__sprintf@mess
  2881                           
  2882                           ;comm.c: 25: void _sprintf(char *mess, unsigned short val);comm.c: 26: {;comm.c: 27:   u
      +                          nsigned short aux;;comm.c: 31:   aux = val%10;
  2883  0051  300A               	movlw	10
  2884  0052  00F2               	movwf	___lwmod@divisor
  2885  0053  01F3               	clrf	___lwmod@divisor+1
  2886  0054  0851               	movf	__sprintf@val+1,w
  2887  0055  00F5               	movwf	___lwmod@dividend+1
  2888  0056  0850               	movf	__sprintf@val,w
  2889  0057  00F4               	movwf	___lwmod@dividend
  2890  0058  2222               	fcall	___lwmod
  2891  0059  0873               	movf	?___lwmod+1,w
  2892  005A  00D3               	movwf	__sprintf@aux+1
  2893  005B  0872               	movf	?___lwmod,w
  2894  005C  00D2               	movwf	__sprintf@aux
  2895                           
  2896                           ;comm.c: 32:   val /= 10;
  2897  005D  300A               	movlw	10
  2898  005E  00F2               	movwf	___lwdiv@divisor
  2899  005F  01F3               	clrf	___lwdiv@divisor+1
  2900  0060  0851               	movf	__sprintf@val+1,w
  2901  0061  00F5               	movwf	___lwdiv@dividend+1
  2902  0062  0850               	movf	__sprintf@val,w
  2903  0063  00F4               	movwf	___lwdiv@dividend
  2904  0064  2194               	fcall	___lwdiv
  2905  0065  0873               	movf	?___lwdiv+1,w
  2906  0066  00D1               	movwf	__sprintf@val+1
  2907  0067  0872               	movf	?___lwdiv,w
  2908  0068  00D0               	movwf	__sprintf@val
  2909                           
  2910                           ;comm.c: 34:   mess[5] = 0x00;
  2911  0069  0854               	movf	__sprintf@mess,w
  2912  006A  3E05               	addlw	5
  2913  006B  0086               	movwf	6
  2914  006C  0187               	clrf	7
  2915  006D  0181               	clrf	1
  2916                           
  2917                           ;comm.c: 36:   mess[4] = (unsigned char)aux+'0';
  2918  006E  0854               	movf	__sprintf@mess,w
  2919  006F  3E04               	addlw	4
  2920  0070  0086               	movwf	6
  2921  0071  0852               	movf	__sprintf@aux,w
  2922  0072  3E30               	addlw	48
  2923  0073  0081               	movwf	1
  2924                           
  2925                           ;comm.c: 38:   aux = val%10;
  2926  0074  300A               	movlw	10
  2927  0075  00F2               	movwf	___lwmod@divisor
  2928  0076  01F3               	clrf	___lwmod@divisor+1
  2929  0077  0851               	movf	__sprintf@val+1,w
  2930  0078  00F5               	movwf	___lwmod@dividend+1
  2931  0079  0850               	movf	__sprintf@val,w
  2932  007A  00F4               	movwf	___lwmod@dividend
  2933  007B  2222               	fcall	___lwmod
  2934  007C  0873               	movf	?___lwmod+1,w
  2935  007D  00D3               	movwf	__sprintf@aux+1
  2936  007E  0872               	movf	?___lwmod,w
  2937  007F  00D2               	movwf	__sprintf@aux
  2938                           
  2939                           ;comm.c: 39:   val /= 10;
  2940  0080  300A               	movlw	10
  2941  0081  00F2               	movwf	___lwdiv@divisor
  2942  0082  01F3               	clrf	___lwdiv@divisor+1
  2943  0083  0851               	movf	__sprintf@val+1,w
  2944  0084  00F5               	movwf	___lwdiv@dividend+1
  2945  0085  0850               	movf	__sprintf@val,w
  2946  0086  00F4               	movwf	___lwdiv@dividend
  2947  0087  2194               	fcall	___lwdiv
  2948  0088  0873               	movf	?___lwdiv+1,w
  2949  0089  00D1               	movwf	__sprintf@val+1
  2950  008A  0872               	movf	?___lwdiv,w
  2951  008B  00D0               	movwf	__sprintf@val
  2952                           
  2953                           ;comm.c: 41:   mess[3] = (unsigned char)aux+'0';
  2954  008C  0854               	movf	__sprintf@mess,w
  2955  008D  3E03               	addlw	3
  2956  008E  0086               	movwf	6
  2957  008F  0187               	clrf	7
  2958  0090  0852               	movf	__sprintf@aux,w
  2959  0091  3E30               	addlw	48
  2960  0092  0081               	movwf	1
  2961                           
  2962                           ;comm.c: 43:   aux = val%10;
  2963  0093  300A               	movlw	10
  2964  0094  00F2               	movwf	___lwmod@divisor
  2965  0095  01F3               	clrf	___lwmod@divisor+1
  2966  0096  0851               	movf	__sprintf@val+1,w
  2967  0097  00F5               	movwf	___lwmod@dividend+1
  2968  0098  0850               	movf	__sprintf@val,w
  2969  0099  00F4               	movwf	___lwmod@dividend
  2970  009A  2222               	fcall	___lwmod
  2971  009B  0873               	movf	?___lwmod+1,w
  2972  009C  00D3               	movwf	__sprintf@aux+1
  2973  009D  0872               	movf	?___lwmod,w
  2974  009E  00D2               	movwf	__sprintf@aux
  2975                           
  2976                           ;comm.c: 44:   val /= 10;
  2977  009F  300A               	movlw	10
  2978  00A0  00F2               	movwf	___lwdiv@divisor
  2979  00A1  01F3               	clrf	___lwdiv@divisor+1
  2980  00A2  0851               	movf	__sprintf@val+1,w
  2981  00A3  00F5               	movwf	___lwdiv@dividend+1
  2982  00A4  0850               	movf	__sprintf@val,w
  2983  00A5  00F4               	movwf	___lwdiv@dividend
  2984  00A6  2194               	fcall	___lwdiv
  2985  00A7  0873               	movf	?___lwdiv+1,w
  2986  00A8  00D1               	movwf	__sprintf@val+1
  2987  00A9  0872               	movf	?___lwdiv,w
  2988  00AA  00D0               	movwf	__sprintf@val
  2989                           
  2990                           ;comm.c: 46:   mess[2] = (unsigned char)aux+'0';
  2991  00AB  0854               	movf	__sprintf@mess,w
  2992  00AC  3E02               	addlw	2
  2993  00AD  0086               	movwf	6
  2994  00AE  0187               	clrf	7
  2995  00AF  0852               	movf	__sprintf@aux,w
  2996  00B0  3E30               	addlw	48
  2997  00B1  0081               	movwf	1
  2998                           
  2999                           ;comm.c: 47:   mess[1] = '.';
  3000  00B2  0A54               	incf	__sprintf@mess,w
  3001  00B3  0086               	movwf	6
  3002  00B4  302E               	movlw	46
  3003  00B5  0081               	movwf	1
  3004                           
  3005                           ;comm.c: 48:   mess[0] = (unsigned char)val+'0';
  3006  00B6  0854               	movf	__sprintf@mess,w
  3007  00B7  0086               	movwf	6
  3008  00B8  0850               	movf	__sprintf@val,w
  3009  00B9  3E30               	addlw	48
  3010  00BA  0081               	movwf	1
  3011  00BB  0008               	return
  3012  00BC                     __end_of__sprintf:	
  3013                           
  3014                           	psect	text4
  3015  0222                     __ptext4:	
  3016 ;; *************** function ___lwmod *****************
  3017 ;; Defined at:
  3018 ;;		line 5 in file "/opt/microchip/xc8/v2.00/pic/sources/c99/common/lwmod.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;  divisor         2    2[COMMON] unsigned int 
  3021 ;;  dividend        2    4[COMMON] unsigned int 
  3022 ;; Auto vars:     Size  Location     Type
  3023 ;;  counter         1    6[COMMON] unsigned char 
  3024 ;; Return value:  Size  Location     Type
  3025 ;;                  2    2[COMMON] unsigned int 
  3026 ;; Registers used:
  3027 ;;		wreg, status,2, status,0
  3028 ;; Tracked objects:
  3029 ;;		On entry : 1F/0
  3030 ;;		On exit  : 1F/0
  3031 ;;		Unchanged: 1F/0
  3032 ;; Data sizes:     COMMON   BANK0   BANK1
  3033 ;;      Params:         4       0       0
  3034 ;;      Locals:         1       0       0
  3035 ;;      Temps:          0       0       0
  3036 ;;      Totals:         5       0       0
  3037 ;;Total ram usage:        5 bytes
  3038 ;; Hardware stack levels used:    1
  3039 ;; Hardware stack levels required when called:    4
  3040 ;; This function calls:
  3041 ;;		Nothing
  3042 ;; This function is called by:
  3043 ;;		__sprintf
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           
  3048                           ;psect for function ___lwmod
  3049  0222                     ___lwmod:	
  3050                           
  3051                           ;incstack = 0
  3052                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3053  0222  0872               	movf	___lwmod@divisor,w
  3054  0223  0473               	iorwf	___lwmod@divisor+1,w
  3055  0224  1903               	btfsc	3,2
  3056  0225  2A3D               	goto	l1884
  3057  0226  01F6               	clrf	___lwmod@counter
  3058  0227                     L1:	
  3059  0227  0AF6               	incf	___lwmod@counter,f
  3060  0228  1BF3               	btfsc	___lwmod@divisor+1,7
  3061  0229  2A2D               	goto	l1876
  3062  022A  35F2               	lslf	___lwmod@divisor,f
  3063  022B  0DF3               	rlf	___lwmod@divisor+1,f
  3064  022C  2A27               	goto	L1
  3065  022D                     l1876:	
  3066  022D  0873               	movf	___lwmod@divisor+1,w
  3067  022E  0275               	subwf	___lwmod@dividend+1,w
  3068  022F  1D03               	skipz
  3069  0230  2A33               	goto	u605
  3070  0231  0872               	movf	___lwmod@divisor,w
  3071  0232  0274               	subwf	___lwmod@dividend,w
  3072  0233                     u605:	
  3073  0233  1C03               	skipc
  3074  0234  2A39               	goto	l1880
  3075  0235  0872               	movf	___lwmod@divisor,w
  3076  0236  02F4               	subwf	___lwmod@dividend,f
  3077  0237  0873               	movf	___lwmod@divisor+1,w
  3078  0238  3BF5               	subwfb	___lwmod@dividend+1,f
  3079  0239                     l1880:	
  3080  0239  36F3               	lsrf	___lwmod@divisor+1,f
  3081  023A  0CF2               	rrf	___lwmod@divisor,f
  3082  023B  0BF6               	decfsz	___lwmod@counter,f
  3083  023C  2A2D               	goto	l1876
  3084  023D                     l1884:	
  3085  023D  0875               	movf	___lwmod@dividend+1,w
  3086  023E  00F3               	movwf	?___lwmod+1
  3087  023F  0874               	movf	___lwmod@dividend,w
  3088  0240  00F2               	movwf	?___lwmod
  3089  0241  0008               	return
  3090  0242                     __end_of___lwmod:	
  3091                           
  3092                           	psect	text5
  3093  0194                     __ptext5:	
  3094 ;; *************** function ___lwdiv *****************
  3095 ;; Defined at:
  3096 ;;		line 5 in file "/opt/microchip/xc8/v2.00/pic/sources/c99/common/lwdiv.c"
  3097 ;; Parameters:    Size  Location     Type
  3098 ;;  divisor         2    2[COMMON] unsigned int 
  3099 ;;  dividend        2    4[COMMON] unsigned int 
  3100 ;; Auto vars:     Size  Location     Type
  3101 ;;  quotient        2    6[COMMON] unsigned int 
  3102 ;;  counter         1    8[COMMON] unsigned char 
  3103 ;; Return value:  Size  Location     Type
  3104 ;;                  2    2[COMMON] unsigned int 
  3105 ;; Registers used:
  3106 ;;		wreg, status,2, status,0
  3107 ;; Tracked objects:
  3108 ;;		On entry : 1F/0
  3109 ;;		On exit  : 1F/0
  3110 ;;		Unchanged: 1F/0
  3111 ;; Data sizes:     COMMON   BANK0   BANK1
  3112 ;;      Params:         4       0       0
  3113 ;;      Locals:         3       0       0
  3114 ;;      Temps:          0       0       0
  3115 ;;      Totals:         7       0       0
  3116 ;;Total ram usage:        7 bytes
  3117 ;; Hardware stack levels used:    1
  3118 ;; Hardware stack levels required when called:    4
  3119 ;; This function calls:
  3120 ;;		Nothing
  3121 ;; This function is called by:
  3122 ;;		__sprintf
  3123 ;; This function uses a non-reentrant model
  3124 ;;
  3125                           
  3126                           
  3127                           ;psect for function ___lwdiv
  3128  0194                     ___lwdiv:	
  3129                           
  3130                           ;incstack = 0
  3131                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3132  0194  01F6               	clrf	___lwdiv@quotient
  3133  0195  01F7               	clrf	___lwdiv@quotient+1
  3134  0196  0872               	movf	___lwdiv@divisor,w
  3135  0197  0473               	iorwf	___lwdiv@divisor+1,w
  3136  0198  1903               	btfsc	3,2
  3137  0199  29B4               	goto	l1864
  3138  019A  01F8               	clrf	___lwdiv@counter
  3139  019B                     L2:	
  3140  019B  0AF8               	incf	___lwdiv@counter,f
  3141  019C  1BF3               	btfsc	___lwdiv@divisor+1,7
  3142  019D  29A1               	goto	l1852
  3143  019E  35F2               	lslf	___lwdiv@divisor,f
  3144  019F  0DF3               	rlf	___lwdiv@divisor+1,f
  3145  01A0  299B               	goto	L2
  3146  01A1                     l1852:	
  3147  01A1  35F6               	lslf	___lwdiv@quotient,f
  3148  01A2  0DF7               	rlf	___lwdiv@quotient+1,f
  3149  01A3  0873               	movf	___lwdiv@divisor+1,w
  3150  01A4  0275               	subwf	___lwdiv@dividend+1,w
  3151  01A5  1D03               	skipz
  3152  01A6  29A9               	goto	u565
  3153  01A7  0872               	movf	___lwdiv@divisor,w
  3154  01A8  0274               	subwf	___lwdiv@dividend,w
  3155  01A9                     u565:	
  3156  01A9  1C03               	skipc
  3157  01AA  29B0               	goto	l1860
  3158  01AB  0872               	movf	___lwdiv@divisor,w
  3159  01AC  02F4               	subwf	___lwdiv@dividend,f
  3160  01AD  0873               	movf	___lwdiv@divisor+1,w
  3161  01AE  3BF5               	subwfb	___lwdiv@dividend+1,f
  3162  01AF  1476               	bsf	___lwdiv@quotient,0
  3163  01B0                     l1860:	
  3164  01B0  36F3               	lsrf	___lwdiv@divisor+1,f
  3165  01B1  0CF2               	rrf	___lwdiv@divisor,f
  3166  01B2  0BF8               	decfsz	___lwdiv@counter,f
  3167  01B3  29A1               	goto	l1852
  3168  01B4                     l1864:	
  3169  01B4  0877               	movf	___lwdiv@quotient+1,w
  3170  01B5  00F3               	movwf	?___lwdiv+1
  3171  01B6  0876               	movf	___lwdiv@quotient,w
  3172  01B7  00F2               	movwf	?___lwdiv
  3173  01B8  0008               	return
  3174  01B9                     __end_of___lwdiv:	
  3175                           
  3176                           	psect	text6
  3177  01B9                     __ptext6:	
  3178 ;; *************** function ___lmul *****************
  3179 ;; Defined at:
  3180 ;;		line 15 in file "/opt/microchip/xc8/v2.00/pic/sources/c99/common/Umul32.c"
  3181 ;; Parameters:    Size  Location     Type
  3182 ;;  multiplier      4    2[COMMON] unsigned long 
  3183 ;;  multiplicand    4    6[COMMON] unsigned long 
  3184 ;; Auto vars:     Size  Location     Type
  3185 ;;  product         4    0[BANK0 ] unsigned long 
  3186 ;; Return value:  Size  Location     Type
  3187 ;;                  4    2[COMMON] unsigned long 
  3188 ;; Registers used:
  3189 ;;		wreg, status,2, status,0
  3190 ;; Tracked objects:
  3191 ;;		On entry : 1F/0
  3192 ;;		On exit  : 1F/0
  3193 ;;		Unchanged: 0/0
  3194 ;; Data sizes:     COMMON   BANK0   BANK1
  3195 ;;      Params:         8       0       0
  3196 ;;      Locals:         0       4       0
  3197 ;;      Temps:          0       0       0
  3198 ;;      Totals:         8       4       0
  3199 ;;Total ram usage:       12 bytes
  3200 ;; Hardware stack levels used:    1
  3201 ;; Hardware stack levels required when called:    4
  3202 ;; This function calls:
  3203 ;;		Nothing
  3204 ;; This function is called by:
  3205 ;;		_read_analog
  3206 ;; This function uses a non-reentrant model
  3207 ;;
  3208                           
  3209                           
  3210                           ;psect for function ___lmul
  3211  01B9                     ___lmul:	
  3212                           
  3213                           ;incstack = 0
  3214                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3215  01B9  01D0               	clrf	___lmul@product
  3216  01BA  01D1               	clrf	___lmul@product+1
  3217  01BB  01D2               	clrf	___lmul@product+2
  3218  01BC  01D3               	clrf	___lmul@product+3
  3219  01BD                     l783:	
  3220  01BD  1C72               	btfss	___lmul@multiplier,0
  3221  01BE  29C7               	goto	l2094
  3222  01BF  0876               	movf	___lmul@multiplicand,w
  3223  01C0  07D0               	addwf	___lmul@product,f
  3224  01C1  0877               	movf	___lmul@multiplicand+1,w
  3225  01C2  3DD1               	addwfc	___lmul@product+1,f
  3226  01C3  0878               	movf	___lmul@multiplicand+2,w
  3227  01C4  3DD2               	addwfc	___lmul@product+2,f
  3228  01C5  0879               	movf	___lmul@multiplicand+3,w
  3229  01C6  3DD3               	addwfc	___lmul@product+3,f
  3230  01C7                     l2094:	
  3231  01C7  35F6               	lslf	___lmul@multiplicand,f
  3232  01C8  0DF7               	rlf	___lmul@multiplicand+1,f
  3233  01C9  0DF8               	rlf	___lmul@multiplicand+2,f
  3234  01CA  0DF9               	rlf	___lmul@multiplicand+3,f
  3235  01CB  36F5               	lsrf	___lmul@multiplier+3,f
  3236  01CC  0CF4               	rrf	___lmul@multiplier+2,f
  3237  01CD  0CF3               	rrf	___lmul@multiplier+1,f
  3238  01CE  0CF2               	rrf	___lmul@multiplier,f
  3239  01CF  0875               	movf	___lmul@multiplier+3,w
  3240  01D0  0474               	iorwf	___lmul@multiplier+2,w
  3241  01D1  0473               	iorwf	___lmul@multiplier+1,w
  3242  01D2  0472               	iorwf	___lmul@multiplier,w
  3243  01D3  1D03               	skipz
  3244  01D4  29BD               	goto	l783
  3245  01D5  0853               	movf	___lmul@product+3,w
  3246  01D6  00F5               	movwf	?___lmul+3
  3247  01D7  0852               	movf	___lmul@product+2,w
  3248  01D8  00F4               	movwf	?___lmul+2
  3249  01D9  0851               	movf	___lmul@product+1,w
  3250  01DA  00F3               	movwf	?___lmul+1
  3251  01DB  0850               	movf	___lmul@product,w
  3252  01DC  00F2               	movwf	?___lmul
  3253  01DD  0008               	return
  3254  01DE                     __end_of___lmul:	
  3255                           
  3256                           	psect	text7
  3257  037C                     __ptext7:	
  3258 ;; *************** function _process_ioc *****************
  3259 ;; Defined at:
  3260 ;;		line 174 in file "logger.c"
  3261 ;; Parameters:    Size  Location     Type
  3262 ;;		None
  3263 ;; Auto vars:     Size  Location     Type
  3264 ;;		None
  3265 ;; Return value:  Size  Location     Type
  3266 ;;                  1    wreg      void 
  3267 ;; Registers used:
  3268 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3269 ;; Tracked objects:
  3270 ;;		On entry : 1F/0
  3271 ;;		On exit  : 1E/0
  3272 ;;		Unchanged: 0/0
  3273 ;; Data sizes:     COMMON   BANK0   BANK1
  3274 ;;      Params:         0       0       0
  3275 ;;      Locals:         0       0       0
  3276 ;;      Temps:          0       0       0
  3277 ;;      Totals:         0       0       0
  3278 ;;Total ram usage:        0 bytes
  3279 ;; Hardware stack levels used:    1
  3280 ;; Hardware stack levels required when called:    6
  3281 ;; This function calls:
  3282 ;;		__puts
  3283 ;; This function is called by:
  3284 ;;		_main
  3285 ;; This function uses a non-reentrant model
  3286 ;;
  3287                           
  3288                           
  3289                           ;psect for function _process_ioc
  3290  037C                     _process_ioc:	
  3291                           
  3292                           ;logger.c: 176:     IOC_state = IOC_IDLE;
  3293                           
  3294                           ;incstack = 0
  3295                           ; Regs used in _process_ioc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3296  037C  01BA               	clrf	_IOC_state	;volatile
  3297                           
  3298                           ;logger.c: 177:      if (IOC_value) {
  3299  037D  0833               	movf	_IOC_value,w	;volatile
  3300  037E  1903               	btfsc	3,2
  3301  037F  2B85               	goto	l2212
  3302                           
  3303                           ;logger.c: 179:             _puts("CH");
  3304  0380  3084               	movlw	low (STR_23| (0+32768))
  3305  0381  00F3               	movwf	__puts@pt
  3306  0382  3084               	movlw	high (STR_23| (0+32768))
  3307  0383  00F4               	movwf	__puts@pt+1
  3308  0384  29DE               	ljmp	l1804
  3309  0385                     l2212:	
  3310                           ;logger.c: 184:     } else {
  3311                           
  3312                           
  3313                           ;logger.c: 186:             _puts("CL");
  3314  0385  3087               	movlw	low (STR_24| (0+32768))
  3315  0386  00F3               	movwf	__puts@pt
  3316  0387  3084               	movlw	high (STR_24| (0+32768))
  3317  0388  00F4               	movwf	__puts@pt+1
  3318  0389  29DE               	ljmp	l1804
  3319  038A                     __end_of_process_ioc:	
  3320                           
  3321                           	psect	text8
  3322  0262                     __ptext8:	
  3323 ;; *************** function _logger_initialize *****************
  3324 ;; Defined at:
  3325 ;;		line 20 in file "logger.c"
  3326 ;; Parameters:    Size  Location     Type
  3327 ;;		None
  3328 ;; Auto vars:     Size  Location     Type
  3329 ;;		None
  3330 ;; Return value:  Size  Location     Type
  3331 ;;                  1    wreg      void 
  3332 ;; Registers used:
  3333 ;;		wreg, status,2, status,0, pclath, cstack
  3334 ;; Tracked objects:
  3335 ;;		On entry : 1F/1
  3336 ;;		On exit  : 1F/0
  3337 ;;		Unchanged: 0/0
  3338 ;; Data sizes:     COMMON   BANK0   BANK1
  3339 ;;      Params:         0       0       0
  3340 ;;      Locals:         0       0       0
  3341 ;;      Temps:          0       0       0
  3342 ;;      Totals:         0       0       0
  3343 ;;Total ram usage:        0 bytes
  3344 ;; Hardware stack levels used:    1
  3345 ;; Hardware stack levels required when called:    5
  3346 ;; This function calls:
  3347 ;;		_ADC_SelectChannel
  3348 ;;		_ESP_Set_application_handler
  3349 ;;		_IOCAF4_SetInterruptHandler
  3350 ;;		_TMR1_SetInterruptHandler
  3351 ;;		_TMR1_StopTimer
  3352 ;; This function is called by:
  3353 ;;		_main
  3354 ;; This function uses a non-reentrant model
  3355 ;;
  3356                           
  3357                           
  3358                           ;psect for function _logger_initialize
  3359  0262                     _logger_initialize:	
  3360                           
  3361                           ;logger.c: 22:     message_format = MESSAGE_BINARY;
  3362                           
  3363                           ;incstack = 0
  3364                           ; Regs used in _logger_initialize: [wreg+status,2+status,0+pclath+cstack]
  3365  0262  0020               	movlb	0	; select bank0
  3366  0263  01B6               	clrf	_message_format	;volatile
  3367                           
  3368                           ;logger.c: 24:     ADC_SelectChannel(channel_AN2);
  3369  0264  3002               	movlw	2
  3370  0265  23CB               	fcall	_ADC_SelectChannel
  3371                           
  3372                           ;logger.c: 25:     ADC_state = ADC_IDLE;
  3373  0266  0020               	movlb	0	; select bank0
  3374  0267  01BF               	clrf	_ADC_state	;volatile
  3375                           
  3376                           ;logger.c: 26:     ADC_value = 0;
  3377  0268  01AC               	clrf	_ADC_value	;volatile
  3378  0269  01AD               	clrf	_ADC_value+1	;volatile
  3379                           
  3380                           ;logger.c: 27:     ADC_count = 0;
  3381  026A  01B5               	clrf	_ADC_count	;volatile
  3382                           
  3383                           ;logger.c: 29:     TMR1_StopTimer();
  3384  026B  2499               	fcall	_TMR1_StopTimer
  3385                           
  3386                           ;logger.c: 30:     TMR1_state = TMR1_STOP;
  3387  026C  01B4               	clrf	_TMR1_state	;volatile
  3388                           
  3389                           ;logger.c: 31:     TMR1_SetInterruptHandler(_TMR1_Ready);
  3390  026D  302D               	movlw	low __TMR1_Ready
  3391  026E  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  3392  026F  3004               	movlw	high __TMR1_Ready
  3393  0270  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  3394  0271  244D               	fcall	_TMR1_SetInterruptHandler
  3395                           
  3396                           ;logger.c: 33:     IOCAF4_SetInterruptHandler(_IOC_Ready);
  3397  0272  3034               	movlw	low __IOC_Ready
  3398  0273  00F2               	movwf	IOCAF4_SetInterruptHandler@InterruptHandler
  3399  0274  3004               	movlw	high __IOC_Ready
  3400  0275  00F3               	movwf	IOCAF4_SetInterruptHandler@InterruptHandler+1
  3401  0276  2453               	fcall	_IOCAF4_SetInterruptHandler
  3402                           
  3403                           ;logger.c: 34:     IOC_state = IOC_IDLE;
  3404  0277  01BA               	clrf	_IOC_state	;volatile
  3405                           
  3406                           ;logger.c: 35:     IOC_value = 1;
  3407  0278  3001               	movlw	1
  3408  0279  00B3               	movwf	_IOC_value	;volatile
  3409                           
  3410                           ;logger.c: 37:     ESP_Set_application_handler(process_message);
  3411  027A  3040               	movlw	low _process_message
  3412  027B  00F2               	movwf	ESP_Set_application_handler@applicationHandler
  3413  027C  3001               	movlw	high _process_message
  3414  027D  00F3               	movwf	ESP_Set_application_handler@applicationHandler+1
  3415  027E  2CA1               	ljmp	l553
  3416  027F                     __end_of_logger_initialize:	
  3417                           
  3418                           	psect	text9
  3419  04A1                     __ptext9:	
  3420 ;; *************** function _ESP_Set_application_handler *****************
  3421 ;; Defined at:
  3422 ;;		line 224 in file "esp1.c"
  3423 ;; Parameters:    Size  Location     Type
  3424 ;;  applicationH    2    2[COMMON] PTR FTN(unsigned char ,)
  3425 ;;		 -> process_message(1), ESP_default_application_handler(1), 
  3426 ;; Auto vars:     Size  Location     Type
  3427 ;;		None
  3428 ;; Return value:  Size  Location     Type
  3429 ;;                  1    wreg      void 
  3430 ;; Registers used:
  3431 ;;		None
  3432 ;; Tracked objects:
  3433 ;;		On entry : 1F/0
  3434 ;;		On exit  : 1F/0
  3435 ;;		Unchanged: 1F/0
  3436 ;; Data sizes:     COMMON   BANK0   BANK1
  3437 ;;      Params:         2       0       0
  3438 ;;      Locals:         0       0       0
  3439 ;;      Temps:          0       0       0
  3440 ;;      Totals:         2       0       0
  3441 ;;Total ram usage:        2 bytes
  3442 ;; Hardware stack levels used:    1
  3443 ;; Hardware stack levels required when called:    4
  3444 ;; This function calls:
  3445 ;;		Nothing
  3446 ;; This function is called by:
  3447 ;;		_logger_initialize
  3448 ;; This function uses a non-reentrant model
  3449 ;;
  3450                           
  3451                           
  3452                           ;psect for function _ESP_Set_application_handler
  3453  04A1                     _ESP_Set_application_handler:	
  3454  04A1                     l553:	
  3455                           ;incstack = 0
  3456                           ; Regs used in _ESP_Set_application_handler: []
  3457                           
  3458  04A1  0008               	return
  3459  04A2                     __end_of_ESP_Set_application_handler:	
  3460                           
  3461                           	psect	text10
  3462  03CB                     __ptext10:	
  3463 ;; *************** function _ADC_SelectChannel *****************
  3464 ;; Defined at:
  3465 ;;		line 85 in file "mcc_generated_files/adc.c"
  3466 ;; Parameters:    Size  Location     Type
  3467 ;;  channel         1    wreg     enum E2157
  3468 ;; Auto vars:     Size  Location     Type
  3469 ;;  channel         1    3[COMMON] enum E2157
  3470 ;; Return value:  Size  Location     Type
  3471 ;;                  1    wreg      void 
  3472 ;; Registers used:
  3473 ;;		wreg, status,2, status,0
  3474 ;; Tracked objects:
  3475 ;;		On entry : 1F/0
  3476 ;;		On exit  : 1F/1
  3477 ;;		Unchanged: 0/0
  3478 ;; Data sizes:     COMMON   BANK0   BANK1
  3479 ;;      Params:         0       0       0
  3480 ;;      Locals:         1       0       0
  3481 ;;      Temps:          1       0       0
  3482 ;;      Totals:         2       0       0
  3483 ;;Total ram usage:        2 bytes
  3484 ;; Hardware stack levels used:    1
  3485 ;; Hardware stack levels required when called:    4
  3486 ;; This function calls:
  3487 ;;		Nothing
  3488 ;; This function is called by:
  3489 ;;		_logger_initialize
  3490 ;; This function uses a non-reentrant model
  3491 ;;
  3492                           
  3493                           
  3494                           ;psect for function _ADC_SelectChannel
  3495  03CB                     _ADC_SelectChannel:	
  3496                           
  3497                           ;incstack = 0
  3498                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
  3499                           ;ADC_SelectChannel@channel stored from wreg
  3500  03CB  00F3               	movwf	ADC_SelectChannel@channel
  3501                           
  3502                           ;mcc_generated_files/adc.c: 85: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 86: {;mcc_generated_files/adc.c: 88:     ADCON0bits.CHS = channel;
  3503  03CC  00F2               	movwf	??_ADC_SelectChannel
  3504  03CD  0DF2               	rlf	??_ADC_SelectChannel,f
  3505  03CE  0DF2               	rlf	??_ADC_SelectChannel,f
  3506  03CF  0021               	movlb	1	; select bank1
  3507  03D0  081D               	movf	29,w	;volatile
  3508  03D1  0672               	xorwf	??_ADC_SelectChannel,w
  3509  03D2  3983               	andlw	-125
  3510  03D3  0672               	xorwf	??_ADC_SelectChannel,w
  3511  03D4  009D               	movwf	29	;volatile
  3512                           
  3513                           ;mcc_generated_files/adc.c: 90:     ADCON0bits.ADON = 1;
  3514  03D5  141D               	bsf	29,0	;volatile
  3515  03D6  0008               	return
  3516  03D7                     __end_of_ADC_SelectChannel:	
  3517                           
  3518                           	psect	text11
  3519  046F                     __ptext11:	
  3520 ;; *************** function _bt_message_handler *****************
  3521 ;; Defined at:
  3522 ;;		line 40 in file "logger.c"
  3523 ;; Parameters:    Size  Location     Type
  3524 ;;		None
  3525 ;; Auto vars:     Size  Location     Type
  3526 ;;  message         1    2[BANK0 ] unsigned char 
  3527 ;; Return value:  Size  Location     Type
  3528 ;;                  1    wreg      void 
  3529 ;; Registers used:
  3530 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3531 ;; Tracked objects:
  3532 ;;		On entry : 1F/0
  3533 ;;		On exit  : 1C/0
  3534 ;;		Unchanged: 0/0
  3535 ;; Data sizes:     COMMON   BANK0   BANK1
  3536 ;;      Params:         0       0       0
  3537 ;;      Locals:         0       1       0
  3538 ;;      Temps:          0       0       0
  3539 ;;      Totals:         0       1       0
  3540 ;;Total ram usage:        1 bytes
  3541 ;; Hardware stack levels used:    1
  3542 ;; Hardware stack levels required when called:    8
  3543 ;; This function calls:
  3544 ;;		_EUSART_Read
  3545 ;;		_process_message
  3546 ;; This function is called by:
  3547 ;;		_main
  3548 ;; This function uses a non-reentrant model
  3549 ;;
  3550                           
  3551                           
  3552                           ;psect for function _bt_message_handler
  3553  046F                     _bt_message_handler:	
  3554                           
  3555                           ;logger.c: 42:     unsigned char message;;logger.c: 43:     message = EUSART_Read();
  3556                           
  3557                           ;incstack = 0
  3558                           ; Regs used in _bt_message_handler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3559  046F  22B0               	fcall	_EUSART_Read
  3560  0470  0020               	movlb	0	; select bank0
  3561  0471  00D2               	movwf	bt_message_handler@message
  3562                           
  3563                           ;logger.c: 44:     process_message(message);
  3564  0472  00F9               	movwf	process_message@message
  3565  0473  2940               	ljmp	l2326
  3566  0474                     __end_of_bt_message_handler:	
  3567                           
  3568                           	psect	text12
  3569  0140                     __ptext12:	
  3570 ;; *************** function _process_message *****************
  3571 ;; Defined at:
  3572 ;;		line 47 in file "logger.c"
  3573 ;; Parameters:    Size  Location     Type
  3574 ;;  message         1    9[COMMON] unsigned char 
  3575 ;; Auto vars:     Size  Location     Type
  3576 ;;		None
  3577 ;; Return value:  Size  Location     Type
  3578 ;;                  1    wreg      void 
  3579 ;; Registers used:
  3580 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3581 ;; Tracked objects:
  3582 ;;		On entry : 1F/0
  3583 ;;		On exit  : 1C/0
  3584 ;;		Unchanged: 0/0
  3585 ;; Data sizes:     COMMON   BANK0   BANK1
  3586 ;;      Params:         1       0       0
  3587 ;;      Locals:         0       0       0
  3588 ;;      Temps:          0       2       0
  3589 ;;      Totals:         1       2       0
  3590 ;;Total ram usage:        3 bytes
  3591 ;; Hardware stack levels used:    1
  3592 ;; Hardware stack levels required when called:    7
  3593 ;; This function calls:
  3594 ;;		_ADC_StartConversion
  3595 ;;		_TMR1_StartTimer
  3596 ;;		_TMR1_StopTimer
  3597 ;;		__puts
  3598 ;;		_toggle_format
  3599 ;; This function is called by:
  3600 ;;		_logger_initialize
  3601 ;;		_bt_message_handler
  3602 ;; This function uses a non-reentrant model
  3603 ;;
  3604                           
  3605                           
  3606                           ;psect for function _process_message
  3607  0140                     _process_message:	
  3608  0140                     l2326:	
  3609                           ;incstack = 0
  3610                           ; Regs used in _process_message: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3611                           
  3612                           
  3613                           ;logger.c: 47: void process_message(unsigned char message);logger.c: 48: {;logger.c: 51:
      +                               switch (message) {
  3614  0140  2958               	goto	l2348
  3615  0141                     l2328:	
  3616                           
  3617                           ;logger.c: 54:                 _puts("Ok\n");
  3618  0141  3074               	movlw	low (STR_20| (0+32768))
  3619  0142  00F3               	movwf	__puts@pt
  3620  0143  3084               	movlw	high (STR_20| (0+32768))
  3621  0144  00F4               	movwf	__puts@pt+1
  3622  0145  29DE               	ljmp	l1804
  3623  0146                     l2330:	
  3624                           ;logger.c: 58:             break;
  3625                           
  3626                           
  3627                           ;logger.c: 61:             ADC_StartConversion();
  3628  0146  2C8A               	ljmp	l1814
  3629  0147                     l2332:	
  3630                           ;logger.c: 62:             break;
  3631                           
  3632                           
  3633                           ;logger.c: 65:             toggle_format();
  3634  0147  2B40               	ljmp	l1828
  3635  0148                     l2334:	
  3636                           ;logger.c: 66:             break;
  3637                           
  3638                           
  3639                           ;logger.c: 69:             if (TMR1_state == TMR1_RUNNING)
  3640  0148  0B34               	decfsz	_TMR1_state,w	;volatile
  3641  0149  294B               	goto	l2338
  3642  014A  0008               	return
  3643  014B                     l2338:	
  3644                           
  3645                           ;logger.c: 71:             TMR1_StartTimer();
  3646  014B  249B               	fcall	_TMR1_StartTimer
  3647                           
  3648                           ;logger.c: 72:             TMR1_state = TMR1_RUNNING;
  3649  014C  3001               	movlw	1
  3650  014D  00B4               	movwf	_TMR1_state	;volatile
  3651                           
  3652                           ;logger.c: 74:             break;
  3653  014E  0008               	return
  3654  014F                     l2342:	
  3655                           
  3656                           ;logger.c: 78:             TMR1_StopTimer();
  3657  014F  2499               	fcall	_TMR1_StopTimer
  3658                           
  3659                           ;logger.c: 79:             TMR1_state = TMR1_STOP;
  3660  0150  01B4               	clrf	_TMR1_state	;volatile
  3661                           
  3662                           ;logger.c: 80:             break;
  3663  0151  0008               	return
  3664  0152                     l638:	
  3665                           ;logger.c: 84:             do { LATAbits.LATA5 = 0; } while(0);
  3666                           
  3667  0152  0022               	movlb	2	; select bank2
  3668  0153  128C               	bcf	12,5	;volatile
  3669  0154  0008               	return
  3670  0155                     l641:	
  3671                           ;logger.c: 89:             do { LATAbits.LATA5 = 1; } while(0);
  3672                           
  3673  0155  0022               	movlb	2	; select bank2
  3674  0156  168C               	bsf	12,5	;volatile
  3675  0157  0008               	return
  3676  0158                     l2348:	
  3677  0158  0879               	movf	process_message@message,w
  3678  0159  00D0               	movwf	??_process_message
  3679  015A  01D1               	clrf	??_process_message+1
  3680                           
  3681                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3682                           ; Switch size 1, requested type "speed"
  3683                           ; Number of cases is 1, Range of values is 0 to 0
  3684                           ; switch strategies available:
  3685                           ; Name         Instructions Cycles
  3686                           ; simple_byte            4     3 (average)
  3687                           ; direct_byte            8     6 (fixed)
  3688                           ; jumptable            260     6 (fixed)
  3689                           ;	Chosen strategy is simple_byte
  3690  015B  0851               	movf	??_process_message+1,w
  3691  015C  3A00               	xorlw	0	; case 0
  3692  015D  1903               	skipnz
  3693  015E  2960               	goto	l2478
  3694  015F  296D               	goto	l635
  3695  0160                     l2478:	
  3696                           
  3697                           ; Switch size 1, requested type "speed"
  3698                           ; Number of cases is 7, Range of values is 79 to 116
  3699                           ; switch strategies available:
  3700                           ; Name         Instructions Cycles
  3701                           ; direct_byte           85     9 (fixed)
  3702                           ; simple_byte           22    12 (average)
  3703                           ; jumptable            263     9 (fixed)
  3704                           ;	Chosen strategy is direct_byte
  3705  0160  0850               	movf	??_process_message,w
  3706  0161  3EB1               	addlw	-79
  3707  0162  1C03               	skipc
  3708  0163  0008               	return
  3709  0164  0084               	movwf	4
  3710  0165  3026               	movlw	38
  3711  0166  0204               	subwf	4,w
  3712  0167  1803               	skipnc
  3713  0168  0008               	return
  3714  0169  306E               	movlw	low S2480
  3715  016A  3181               	movlp	high S2480
  3716  016B  0704               	addwf	4,w
  3717  016C  0082               	movwf	2
  3718  016D                     l635:	
  3719  016D  0008               	return
  3720  016E                     __end_of_process_message:	
  3721                           
  3722                           	psect	swtext1
  3723  016E                     __pswtext1:	
  3724  016E                     S2480:	
  3725  016E  2955               	ljmp	l641
  3726  016F  296D               	ljmp	l635
  3727  0170  296D               	ljmp	l635
  3728  0171  296D               	ljmp	l635
  3729  0172  294F               	ljmp	l2342
  3730  0173  2947               	ljmp	l2332
  3731  0174  296D               	ljmp	l635
  3732  0175  296D               	ljmp	l635
  3733  0176  296D               	ljmp	l635
  3734  0177  296D               	ljmp	l635
  3735  0178  296D               	ljmp	l635
  3736  0179  296D               	ljmp	l635
  3737  017A  296D               	ljmp	l635
  3738  017B  296D               	ljmp	l635
  3739  017C  296D               	ljmp	l635
  3740  017D  296D               	ljmp	l635
  3741  017E  296D               	ljmp	l635
  3742  017F  296D               	ljmp	l635
  3743  0180  2946               	ljmp	l2330
  3744  0181  296D               	ljmp	l635
  3745  0182  296D               	ljmp	l635
  3746  0183  296D               	ljmp	l635
  3747  0184  296D               	ljmp	l635
  3748  0185  296D               	ljmp	l635
  3749  0186  296D               	ljmp	l635
  3750  0187  296D               	ljmp	l635
  3751  0188  296D               	ljmp	l635
  3752  0189  296D               	ljmp	l635
  3753  018A  296D               	ljmp	l635
  3754  018B  296D               	ljmp	l635
  3755  018C  296D               	ljmp	l635
  3756  018D  296D               	ljmp	l635
  3757  018E  2952               	ljmp	l638
  3758  018F  296D               	ljmp	l635
  3759  0190  296D               	ljmp	l635
  3760  0191  296D               	ljmp	l635
  3761  0192  2948               	ljmp	l2334
  3762  0193  2941               	ljmp	l2328
  3763                           
  3764                           	psect	text13
  3765  0340                     __ptext13:	
  3766 ;; *************** function _toggle_format *****************
  3767 ;; Defined at:
  3768 ;;		line 139 in file "logger.c"
  3769 ;; Parameters:    Size  Location     Type
  3770 ;;		None
  3771 ;; Auto vars:     Size  Location     Type
  3772 ;;		None
  3773 ;; Return value:  Size  Location     Type
  3774 ;;                  1    wreg      void 
  3775 ;; Registers used:
  3776 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3777 ;; Tracked objects:
  3778 ;;		On entry : 1F/0
  3779 ;;		On exit  : 1E/0
  3780 ;;		Unchanged: 0/0
  3781 ;; Data sizes:     COMMON   BANK0   BANK1
  3782 ;;      Params:         0       0       0
  3783 ;;      Locals:         0       0       0
  3784 ;;      Temps:          0       0       0
  3785 ;;      Totals:         0       0       0
  3786 ;;Total ram usage:        0 bytes
  3787 ;; Hardware stack levels used:    1
  3788 ;; Hardware stack levels required when called:    6
  3789 ;; This function calls:
  3790 ;;		__puts
  3791 ;; This function is called by:
  3792 ;;		_process_message
  3793 ;; This function uses a non-reentrant model
  3794 ;;
  3795                           
  3796                           
  3797                           ;psect for function _toggle_format
  3798  0340                     _toggle_format:	
  3799  0340                     l1828:	
  3800                           ;incstack = 0
  3801                           ; Regs used in _toggle_format: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3802                           
  3803                           
  3804                           ;logger.c: 141:     if (message_format == MESSAGE_BINARY) {
  3805  0340  0836               	movf	_message_format,w	;volatile
  3806  0341  1D03               	btfss	3,2
  3807  0342  2B4A               	goto	l1834
  3808                           
  3809                           ;logger.c: 142:         message_format = MESSAGE_TEXT;
  3810  0343  3001               	movlw	1
  3811  0344  00B6               	movwf	_message_format	;volatile
  3812                           
  3813                           ;logger.c: 144:             _puts("tmode\n");
  3814  0345  301F               	movlw	low (STR_21| (0+32768))
  3815  0346  00F3               	movwf	__puts@pt
  3816  0347  3084               	movlw	high (STR_21| (0+32768))
  3817  0348  00F4               	movwf	__puts@pt+1
  3818  0349  29DE               	ljmp	l1804
  3819  034A                     l1834:	
  3820                           ;logger.c: 148:     } else {
  3821                           
  3822                           
  3823                           ;logger.c: 149:         message_format = MESSAGE_BINARY;
  3824  034A  01B6               	clrf	_message_format	;volatile
  3825                           
  3826                           ;logger.c: 151:             _puts("bmode\n");
  3827  034B  3018               	movlw	low (STR_22| (0+32768))
  3828  034C  00F3               	movwf	__puts@pt
  3829  034D  3084               	movlw	high (STR_22| (0+32768))
  3830  034E  00F4               	movwf	__puts@pt+1
  3831  034F  29DE               	ljmp	l1804
  3832  0350                     __end_of_toggle_format:	
  3833                           
  3834                           	psect	text14
  3835  01DE                     __ptext14:	
  3836 ;; *************** function __puts *****************
  3837 ;; Defined at:
  3838 ;;		line 5 in file "comm.c"
  3839 ;; Parameters:    Size  Location     Type
  3840 ;;  pt              2    3[COMMON] PTR unsigned char 
  3841 ;;		 -> STR_29(13), STR_28(22), STR_27(13), STR_26(18), 
  3842 ;;		 -> STR_25(13), STR_24(3), STR_23(3), STR_22(7), 
  3843 ;;		 -> STR_21(7), STR_20(4), STR_19(3), STR_18(3), 
  3844 ;;		 -> STR_17(2), STR_16(12), STR_14(20), STR_13(14), 
  3845 ;;		 -> STR_12(4), STR_11(4), STR_10(11), STR_9(14), 
  3846 ;;		 -> STR_8(5), 
  3847 ;; Auto vars:     Size  Location     Type
  3848 ;;  index           1    8[COMMON] unsigned char 
  3849 ;; Return value:  Size  Location     Type
  3850 ;;                  1    wreg      void 
  3851 ;; Registers used:
  3852 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3853 ;; Tracked objects:
  3854 ;;		On entry : 1F/0
  3855 ;;		On exit  : 1E/0
  3856 ;;		Unchanged: 0/0
  3857 ;; Data sizes:     COMMON   BANK0   BANK1
  3858 ;;      Params:         2       0       0
  3859 ;;      Locals:         1       0       0
  3860 ;;      Temps:          3       0       0
  3861 ;;      Totals:         6       0       0
  3862 ;;Total ram usage:        6 bytes
  3863 ;; Hardware stack levels used:    1
  3864 ;; Hardware stack levels required when called:    5
  3865 ;; This function calls:
  3866 ;;		_EUSART_Write
  3867 ;;		_EUSART_is_tx_ready
  3868 ;; This function is called by:
  3869 ;;		_process_message
  3870 ;;		_toggle_format
  3871 ;;		_process_ioc
  3872 ;; This function uses a non-reentrant model
  3873 ;;
  3874                           
  3875                           
  3876                           ;psect for function __puts
  3877  01DE                     __puts:	
  3878  01DE                     l1804:	
  3879                           ;incstack = 0
  3880                           ; Regs used in __puts: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3881                           
  3882                           
  3883                           ;comm.c: 5: void _puts(char *pt);comm.c: 6: {;comm.c: 7:     unsigned char index;;comm.c
      +                          : 8:     index = 0;
  3884  01DE  01F8               	clrf	__puts@index
  3885  01DF                     l1812:	
  3886                           ;comm.c: 9:     while(pt[index]) {
  3887                           
  3888                           
  3889                           ;comm.c: 9:     while(pt[index]) {
  3890  01DF  0874               	movf	__puts@pt+1,w
  3891  01E0  00F6               	movwf	??__puts+1
  3892  01E1  0873               	movf	__puts@pt,w
  3893  01E2  00F5               	movwf	??__puts
  3894  01E3  0878               	movf	__puts@index,w
  3895  01E4  0775               	addwf	??__puts,w
  3896  01E5  0084               	movwf	4
  3897  01E6  0876               	movf	??__puts+1,w
  3898  01E7  1803               	skipnc
  3899  01E8  0A76               	incf	??__puts+1,w
  3900  01E9  0085               	movwf	5
  3901  01EA  0012               	moviw fsr0++
  3902  01EB  1903               	btfsc	3,2
  3903  01EC  0008               	return
  3904  01ED                     l1806:	
  3905  01ED  2497               	fcall	_EUSART_is_tx_ready
  3906  01EE  3A00               	xorlw	0
  3907  01EF  1903               	skipnz
  3908  01F0  29ED               	goto	l1806
  3909                           
  3910                           ;comm.c: 11:         EUSART_Write(pt[index++]);
  3911  01F1  0874               	movf	__puts@pt+1,w
  3912  01F2  00F6               	movwf	??__puts+1
  3913  01F3  0873               	movf	__puts@pt,w
  3914  01F4  00F5               	movwf	??__puts
  3915  01F5  0878               	movf	__puts@index,w
  3916  01F6  0775               	addwf	??__puts,w
  3917  01F7  0084               	movwf	4
  3918  01F8  0876               	movf	??__puts+1,w
  3919  01F9  1803               	skipnc
  3920  01FA  0A76               	incf	??__puts+1,w
  3921  01FB  0085               	movwf	5
  3922  01FC  0800               	movf	0,w	;code access
  3923  01FD  227F               	fcall	_EUSART_Write
  3924  01FE  0AF8               	incf	__puts@index,f
  3925  01FF  29DF               	goto	l1812
  3926  0200                     __end_of__puts:	
  3927                           
  3928                           	psect	text15
  3929  0497                     __ptext15:	
  3930 ;; *************** function _EUSART_is_tx_ready *****************
  3931 ;; Defined at:
  3932 ;;		line 113 in file "mcc_generated_files/eusart.c"
  3933 ;; Parameters:    Size  Location     Type
  3934 ;;		None
  3935 ;; Auto vars:     Size  Location     Type
  3936 ;;		None
  3937 ;; Return value:  Size  Location     Type
  3938 ;;                  1    wreg      unsigned char 
  3939 ;; Registers used:
  3940 ;;		wreg
  3941 ;; Tracked objects:
  3942 ;;		On entry : 0/0
  3943 ;;		On exit  : 0/0
  3944 ;;		Unchanged: 0/0
  3945 ;; Data sizes:     COMMON   BANK0   BANK1
  3946 ;;      Params:         0       0       0
  3947 ;;      Locals:         0       0       0
  3948 ;;      Temps:          0       0       0
  3949 ;;      Totals:         0       0       0
  3950 ;;Total ram usage:        0 bytes
  3951 ;; Hardware stack levels used:    1
  3952 ;; Hardware stack levels required when called:    4
  3953 ;; This function calls:
  3954 ;;		Nothing
  3955 ;; This function is called by:
  3956 ;;		__puts
  3957 ;;		_write
  3958 ;; This function uses a non-reentrant model
  3959 ;;
  3960                           
  3961                           
  3962                           ;psect for function _EUSART_is_tx_ready
  3963  0497                     _EUSART_is_tx_ready:	
  3964                           
  3965                           ;mcc_generated_files/eusart.c: 115:     return eusartTxBufferRemaining;
  3966                           
  3967                           ;incstack = 0
  3968                           ; Regs used in _EUSART_is_tx_ready: [wreg]
  3969  0497  087A               	movf	_eusartTxBufferRemaining,w	;volatile
  3970  0498  0008               	return
  3971  0499                     __end_of_EUSART_is_tx_ready:	
  3972                           
  3973                           	psect	text16
  3974  027F                     __ptext16:	
  3975 ;; *************** function _EUSART_Write *****************
  3976 ;; Defined at:
  3977 ;;		line 148 in file "mcc_generated_files/eusart.c"
  3978 ;; Parameters:    Size  Location     Type
  3979 ;;  txData          1    wreg     unsigned char 
  3980 ;; Auto vars:     Size  Location     Type
  3981 ;;  txData          1    2[COMMON] unsigned char 
  3982 ;; Return value:  Size  Location     Type
  3983 ;;                  1    wreg      void 
  3984 ;; Registers used:
  3985 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3986 ;; Tracked objects:
  3987 ;;		On entry : 0/0
  3988 ;;		On exit  : 1F/1
  3989 ;;		Unchanged: 0/0
  3990 ;; Data sizes:     COMMON   BANK0   BANK1
  3991 ;;      Params:         0       0       0
  3992 ;;      Locals:         1       0       0
  3993 ;;      Temps:          0       0       0
  3994 ;;      Totals:         1       0       0
  3995 ;;Total ram usage:        1 bytes
  3996 ;; Hardware stack levels used:    1
  3997 ;; Hardware stack levels required when called:    4
  3998 ;; This function calls:
  3999 ;;		Nothing
  4000 ;; This function is called by:
  4001 ;;		__puts
  4002 ;;		_write
  4003 ;; This function uses a non-reentrant model
  4004 ;;
  4005                           
  4006                           
  4007                           ;psect for function _EUSART_Write
  4008  027F                     _EUSART_Write:	
  4009                           
  4010                           ;incstack = 0
  4011                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  4012                           ;EUSART_Write@txData stored from wreg
  4013  027F  00F2               	movwf	EUSART_Write@txData
  4014  0280                     l1788:	
  4015                           ;mcc_generated_files/eusart.c: 148: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 149: {;mcc_generated_files/eusart.c: 150:     while(0 == eusartTxBufferRemai
      +                          ning)
  4016                           
  4017                           
  4018                           ;mcc_generated_files/eusart.c: 150:     while(0 == eusartTxBufferRemaining)
  4019  0280  087A               	movf	_eusartTxBufferRemaining,w	;volatile
  4020  0281  1903               	btfsc	3,2
  4021  0282  2A80               	goto	l1788
  4022                           
  4023                           ;mcc_generated_files/eusart.c: 154:     if(0 == PIE1bits.TXIE)
  4024  0283  0021               	movlb	1	; select bank1
  4025  0284  1A11               	btfsc	17,4	;volatile
  4026  0285  2A8A               	goto	l159
  4027                           
  4028                           ;mcc_generated_files/eusart.c: 155:     {;mcc_generated_files/eusart.c: 156:         TXR
      +                          EG = txData;
  4029  0286  0872               	movf	EUSART_Write@txData,w
  4030  0287  0023               	movlb	3	; select bank3
  4031  0288  009A               	movwf	26	;volatile
  4032                           
  4033                           ;mcc_generated_files/eusart.c: 157:     }
  4034  0289  2A97               	goto	l1802
  4035  028A                     l159:	
  4036                           ;mcc_generated_files/eusart.c: 158:     else
  4037                           
  4038                           
  4039                           ;mcc_generated_files/eusart.c: 159:     {;mcc_generated_files/eusart.c: 160:         PIE
      +                          1bits.TXIE = 0;
  4040  028A  1211               	bcf	17,4	;volatile
  4041                           
  4042                           ;mcc_generated_files/eusart.c: 161:         eusartTxBuffer[eusartTxHead++] = txData;
  4043  028B  087B               	movf	_eusartTxHead,w
  4044  028C  3EA0               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  4045  028D  0086               	movwf	6
  4046  028E  0187               	clrf	7
  4047  028F  0872               	movf	EUSART_Write@txData,w
  4048  0290  0081               	movwf	1
  4049  0291  0AFB               	incf	_eusartTxHead,f	;volatile
  4050                           
  4051                           ;mcc_generated_files/eusart.c: 162:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  4052  0292  3010               	movlw	16
  4053  0293  027B               	subwf	_eusartTxHead,w
  4054  0294  1803               	btfsc	3,0
  4055                           
  4056                           ;mcc_generated_files/eusart.c: 163:         {;mcc_generated_files/eusart.c: 164:        
      +                               eusartTxHead = 0;
  4057  0295  01FB               	clrf	_eusartTxHead	;volatile
  4058                           
  4059                           ;mcc_generated_files/eusart.c: 166:         eusartTxBufferRemaining--;
  4060  0296  03FA               	decf	_eusartTxBufferRemaining,f	;volatile
  4061  0297                     l1802:	
  4062                           
  4063                           ;mcc_generated_files/eusart.c: 168:     PIE1bits.TXIE = 1;
  4064  0297  0021               	movlb	1	; select bank1
  4065  0298  1611               	bsf	17,4	;volatile
  4066  0299  0008               	return
  4067  029A                     __end_of_EUSART_Write:	
  4068                           
  4069                           	psect	text17
  4070  0499                     __ptext17:	
  4071 ;; *************** function _TMR1_StopTimer *****************
  4072 ;; Defined at:
  4073 ;;		line 99 in file "mcc_generated_files/tmr1.c"
  4074 ;; Parameters:    Size  Location     Type
  4075 ;;		None
  4076 ;; Auto vars:     Size  Location     Type
  4077 ;;		None
  4078 ;; Return value:  Size  Location     Type
  4079 ;;                  1    wreg      void 
  4080 ;; Registers used:
  4081 ;;		None
  4082 ;; Tracked objects:
  4083 ;;		On entry : 1F/0
  4084 ;;		On exit  : 1F/0
  4085 ;;		Unchanged: 0/0
  4086 ;; Data sizes:     COMMON   BANK0   BANK1
  4087 ;;      Params:         0       0       0
  4088 ;;      Locals:         0       0       0
  4089 ;;      Temps:          0       0       0
  4090 ;;      Totals:         0       0       0
  4091 ;;Total ram usage:        0 bytes
  4092 ;; Hardware stack levels used:    1
  4093 ;; Hardware stack levels required when called:    4
  4094 ;; This function calls:
  4095 ;;		Nothing
  4096 ;; This function is called by:
  4097 ;;		_logger_initialize
  4098 ;;		_process_message
  4099 ;; This function uses a non-reentrant model
  4100 ;;
  4101                           
  4102                           
  4103                           ;psect for function _TMR1_StopTimer
  4104  0499                     _TMR1_StopTimer:	
  4105                           
  4106                           ;mcc_generated_files/tmr1.c: 102:     T1CONbits.TMR1ON = 0;
  4107                           
  4108                           ;incstack = 0
  4109                           ; Regs used in _TMR1_StopTimer: []
  4110  0499  1018               	bcf	24,0	;volatile
  4111  049A  0008               	return
  4112  049B                     __end_of_TMR1_StopTimer:	
  4113                           
  4114                           	psect	text18
  4115  049B                     __ptext18:	
  4116 ;; *************** function _TMR1_StartTimer *****************
  4117 ;; Defined at:
  4118 ;;		line 93 in file "mcc_generated_files/tmr1.c"
  4119 ;; Parameters:    Size  Location     Type
  4120 ;;		None
  4121 ;; Auto vars:     Size  Location     Type
  4122 ;;		None
  4123 ;; Return value:  Size  Location     Type
  4124 ;;                  1    wreg      void 
  4125 ;; Registers used:
  4126 ;;		None
  4127 ;; Tracked objects:
  4128 ;;		On entry : 1F/0
  4129 ;;		On exit  : 1F/0
  4130 ;;		Unchanged: 0/0
  4131 ;; Data sizes:     COMMON   BANK0   BANK1
  4132 ;;      Params:         0       0       0
  4133 ;;      Locals:         0       0       0
  4134 ;;      Temps:          0       0       0
  4135 ;;      Totals:         0       0       0
  4136 ;;Total ram usage:        0 bytes
  4137 ;; Hardware stack levels used:    1
  4138 ;; Hardware stack levels required when called:    4
  4139 ;; This function calls:
  4140 ;;		Nothing
  4141 ;; This function is called by:
  4142 ;;		_process_message
  4143 ;; This function uses a non-reentrant model
  4144 ;;
  4145                           
  4146                           
  4147                           ;psect for function _TMR1_StartTimer
  4148  049B                     _TMR1_StartTimer:	
  4149                           
  4150                           ;mcc_generated_files/tmr1.c: 96:     T1CONbits.TMR1ON = 1;
  4151                           
  4152                           ;incstack = 0
  4153                           ; Regs used in _TMR1_StartTimer: []
  4154  049B  1418               	bsf	24,0	;volatile
  4155  049C  0008               	return
  4156  049D                     __end_of_TMR1_StartTimer:	
  4157                           
  4158                           	psect	text19
  4159  048A                     __ptext19:	
  4160 ;; *************** function _ADC_StartConversion *****************
  4161 ;; Defined at:
  4162 ;;		line 93 in file "mcc_generated_files/adc.c"
  4163 ;; Parameters:    Size  Location     Type
  4164 ;;		None
  4165 ;; Auto vars:     Size  Location     Type
  4166 ;;		None
  4167 ;; Return value:  Size  Location     Type
  4168 ;;                  1    wreg      void 
  4169 ;; Registers used:
  4170 ;;		None
  4171 ;; Tracked objects:
  4172 ;;		On entry : 1F/0
  4173 ;;		On exit  : 1F/1
  4174 ;;		Unchanged: 0/0
  4175 ;; Data sizes:     COMMON   BANK0   BANK1
  4176 ;;      Params:         0       0       0
  4177 ;;      Locals:         0       0       0
  4178 ;;      Temps:          0       0       0
  4179 ;;      Totals:         0       0       0
  4180 ;;Total ram usage:        0 bytes
  4181 ;; Hardware stack levels used:    1
  4182 ;; Hardware stack levels required when called:    4
  4183 ;; This function calls:
  4184 ;;		Nothing
  4185 ;; This function is called by:
  4186 ;;		_process_message
  4187 ;; This function uses a non-reentrant model
  4188 ;;
  4189                           
  4190                           
  4191                           ;psect for function _ADC_StartConversion
  4192  048A                     _ADC_StartConversion:	
  4193  048A                     l1814:	
  4194                           ;incstack = 0
  4195                           ; Regs used in _ADC_StartConversion: []
  4196                           
  4197                           
  4198                           ;mcc_generated_files/adc.c: 96:     ADCON0bits.GO_nDONE = 1;
  4199  048A  0021               	movlb	1	; select bank1
  4200  048B  149D               	bsf	29,1	;volatile
  4201  048C  0008               	return
  4202  048D                     __end_of_ADC_StartConversion:	
  4203                           
  4204                           	psect	text20
  4205  02B0                     __ptext20:	
  4206 ;; *************** function _EUSART_Read *****************
  4207 ;; Defined at:
  4208 ;;		line 128 in file "mcc_generated_files/eusart.c"
  4209 ;; Parameters:    Size  Location     Type
  4210 ;;		None
  4211 ;; Auto vars:     Size  Location     Type
  4212 ;;  readValue       1    2[COMMON] unsigned char 
  4213 ;; Return value:  Size  Location     Type
  4214 ;;                  1    wreg      unsigned char 
  4215 ;; Registers used:
  4216 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4217 ;; Tracked objects:
  4218 ;;		On entry : 1F/0
  4219 ;;		On exit  : 1F/1
  4220 ;;		Unchanged: 0/0
  4221 ;; Data sizes:     COMMON   BANK0   BANK1
  4222 ;;      Params:         0       0       0
  4223 ;;      Locals:         1       0       0
  4224 ;;      Temps:          0       0       0
  4225 ;;      Totals:         1       0       0
  4226 ;;Total ram usage:        1 bytes
  4227 ;; Hardware stack levels used:    1
  4228 ;; Hardware stack levels required when called:    4
  4229 ;; This function calls:
  4230 ;;		Nothing
  4231 ;; This function is called by:
  4232 ;;		_bt_message_handler
  4233 ;; This function uses a non-reentrant model
  4234 ;;
  4235                           
  4236                           
  4237                           ;psect for function _EUSART_Read
  4238  02B0                     _EUSART_Read:	
  4239  02B0                     l1934:	
  4240                           ;mcc_generated_files/eusart.c: 132:     while(0 == eusartRxCount)
  4241                           
  4242                           ;incstack = 0
  4243                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  4244                           
  4245                           
  4246                           ;mcc_generated_files/eusart.c: 132:     while(0 == eusartRxCount)
  4247  02B0  083B               	movf	_eusartRxCount,w	;volatile
  4248  02B1  1903               	btfsc	3,2
  4249  02B2  2AB0               	goto	l1934
  4250                           
  4251                           ;mcc_generated_files/eusart.c: 136:     readValue = eusartRxBuffer[eusartRxTail++];
  4252  02B3  083C               	movf	_eusartRxTail,w
  4253  02B4  3E20               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  4254  02B5  0086               	movwf	6
  4255  02B6  0187               	clrf	7
  4256  02B7  0801               	movf	1,w
  4257  02B8  00F2               	movwf	EUSART_Read@readValue
  4258  02B9  0ABC               	incf	_eusartRxTail,f	;volatile
  4259                           
  4260                           ;mcc_generated_files/eusart.c: 137:     if(sizeof(eusartRxBuffer) <= eusartRxTail)
  4261  02BA  3008               	movlw	8
  4262  02BB  023C               	subwf	_eusartRxTail,w
  4263  02BC  1803               	btfsc	3,0
  4264                           
  4265                           ;mcc_generated_files/eusart.c: 138:     {;mcc_generated_files/eusart.c: 139:         eus
      +                          artRxTail = 0;
  4266  02BD  01BC               	clrf	_eusartRxTail	;volatile
  4267                           
  4268                           ;mcc_generated_files/eusart.c: 141:     PIE1bits.RCIE = 0;
  4269  02BE  0021               	movlb	1	; select bank1
  4270  02BF  1291               	bcf	17,5	;volatile
  4271                           
  4272                           ;mcc_generated_files/eusart.c: 142:     eusartRxCount--;
  4273  02C0  0020               	movlb	0	; select bank0
  4274  02C1  03BB               	decf	_eusartRxCount,f	;volatile
  4275                           
  4276                           ;mcc_generated_files/eusart.c: 143:     PIE1bits.RCIE = 1;
  4277  02C2  0021               	movlb	1	; select bank1
  4278  02C3  1691               	bsf	17,5	;volatile
  4279                           
  4280                           ;mcc_generated_files/eusart.c: 145:     return readValue;
  4281  02C4  0872               	movf	EUSART_Read@readValue,w
  4282  02C5  0008               	return
  4283  02C6                     __end_of_EUSART_Read:	
  4284                           
  4285                           	psect	text21
  4286  0447                     __ptext21:	
  4287 ;; *************** function _SYSTEM_Initialize *****************
  4288 ;; Defined at:
  4289 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4290 ;; Parameters:    Size  Location     Type
  4291 ;;		None
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;		None
  4294 ;; Return value:  Size  Location     Type
  4295 ;;                  1    wreg      void 
  4296 ;; Registers used:
  4297 ;;		wreg, status,2, status,0, pclath, cstack
  4298 ;; Tracked objects:
  4299 ;;		On entry : B1F/0
  4300 ;;		On exit  : 1F/1
  4301 ;;		Unchanged: 0/0
  4302 ;; Data sizes:     COMMON   BANK0   BANK1
  4303 ;;      Params:         0       0       0
  4304 ;;      Locals:         0       0       0
  4305 ;;      Temps:          0       0       0
  4306 ;;      Totals:         0       0       0
  4307 ;;Total ram usage:        0 bytes
  4308 ;; Hardware stack levels used:    1
  4309 ;; Hardware stack levels required when called:    6
  4310 ;; This function calls:
  4311 ;;		_ADC_Initialize
  4312 ;;		_EUSART_Initialize
  4313 ;;		_OSCILLATOR_Initialize
  4314 ;;		_PIN_MANAGER_Initialize
  4315 ;;		_TMR1_Initialize
  4316 ;;		_WDT_Initialize
  4317 ;; This function is called by:
  4318 ;;		_main
  4319 ;; This function uses a non-reentrant model
  4320 ;;
  4321                           
  4322                           
  4323                           ;psect for function _SYSTEM_Initialize
  4324  0447                     _SYSTEM_Initialize:	
  4325                           
  4326                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  4327                           
  4328                           ;incstack = 0
  4329                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4330  0447  2242               	fcall	_PIN_MANAGER_Initialize
  4331                           
  4332                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  4333  0448  23EC               	fcall	_OSCILLATOR_Initialize
  4334                           
  4335                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  4336  0449  248D               	fcall	_WDT_Initialize
  4337                           
  4338                           ;mcc_generated_files/mcc.c: 56:     TMR1_Initialize();
  4339  044A  22C6               	fcall	_TMR1_Initialize
  4340                           
  4341                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  4342  044B  23F6               	fcall	_ADC_Initialize
  4343                           
  4344                           ;mcc_generated_files/mcc.c: 58:     EUSART_Initialize();
  4345  044C  2A00               	ljmp	l1902
  4346  044D                     __end_of_SYSTEM_Initialize:	
  4347                           
  4348                           	psect	text22
  4349  048D                     __ptext22:	
  4350 ;; *************** function _WDT_Initialize *****************
  4351 ;; Defined at:
  4352 ;;		line 75 in file "mcc_generated_files/mcc.c"
  4353 ;; Parameters:    Size  Location     Type
  4354 ;;		None
  4355 ;; Auto vars:     Size  Location     Type
  4356 ;;		None
  4357 ;; Return value:  Size  Location     Type
  4358 ;;                  1    wreg      void 
  4359 ;; Registers used:
  4360 ;;		wreg
  4361 ;; Tracked objects:
  4362 ;;		On entry : 1F/1
  4363 ;;		On exit  : 1F/1
  4364 ;;		Unchanged: 0/0
  4365 ;; Data sizes:     COMMON   BANK0   BANK1
  4366 ;;      Params:         0       0       0
  4367 ;;      Locals:         0       0       0
  4368 ;;      Temps:          0       0       0
  4369 ;;      Totals:         0       0       0
  4370 ;;Total ram usage:        0 bytes
  4371 ;; Hardware stack levels used:    1
  4372 ;; Hardware stack levels required when called:    4
  4373 ;; This function calls:
  4374 ;;		Nothing
  4375 ;; This function is called by:
  4376 ;;		_SYSTEM_Initialize
  4377 ;; This function uses a non-reentrant model
  4378 ;;
  4379                           
  4380                           
  4381                           ;psect for function _WDT_Initialize
  4382  048D                     _WDT_Initialize:	
  4383                           
  4384                           ;mcc_generated_files/mcc.c: 78:     WDTCON = 0x16;
  4385                           
  4386                           ;incstack = 0
  4387                           ; Regs used in _WDT_Initialize: [wreg]
  4388  048D  3016               	movlw	22
  4389  048E  0097               	movwf	23	;volatile
  4390  048F  0008               	return
  4391  0490                     __end_of_WDT_Initialize:	
  4392                           
  4393                           	psect	text23
  4394  02C6                     __ptext23:	
  4395 ;; *************** function _TMR1_Initialize *****************
  4396 ;; Defined at:
  4397 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  4398 ;; Parameters:    Size  Location     Type
  4399 ;;		None
  4400 ;; Auto vars:     Size  Location     Type
  4401 ;;		None
  4402 ;; Return value:  Size  Location     Type
  4403 ;;                  1    wreg      void 
  4404 ;; Registers used:
  4405 ;;		wreg, status,2, status,0, pclath, cstack
  4406 ;; Tracked objects:
  4407 ;;		On entry : 1F/1
  4408 ;;		On exit  : 1F/0
  4409 ;;		Unchanged: 0/0
  4410 ;; Data sizes:     COMMON   BANK0   BANK1
  4411 ;;      Params:         0       0       0
  4412 ;;      Locals:         0       0       0
  4413 ;;      Temps:          0       0       0
  4414 ;;      Totals:         0       0       0
  4415 ;;Total ram usage:        0 bytes
  4416 ;; Hardware stack levels used:    1
  4417 ;; Hardware stack levels required when called:    5
  4418 ;; This function calls:
  4419 ;;		_TMR1_SetInterruptHandler
  4420 ;; This function is called by:
  4421 ;;		_SYSTEM_Initialize
  4422 ;; This function uses a non-reentrant model
  4423 ;;
  4424                           
  4425                           
  4426                           ;psect for function _TMR1_Initialize
  4427  02C6                     _TMR1_Initialize:	
  4428                           
  4429                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  4430                           
  4431                           ;incstack = 0
  4432                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4433  02C6  0020               	movlb	0	; select bank0
  4434  02C7  0199               	clrf	25	;volatile
  4435                           
  4436                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x63;
  4437  02C8  3063               	movlw	99
  4438  02C9  0097               	movwf	23	;volatile
  4439                           
  4440                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xC0;
  4441  02CA  30C0               	movlw	192
  4442  02CB  0096               	movwf	22	;volatile
  4443                           
  4444                           ;mcc_generated_files/tmr1.c: 78:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  4445  02CC  0817               	movf	23,w	;volatile
  4446  02CD  00AB               	movwf	_timer1ReloadVal+1	;volatile
  4447  02CE  01AA               	clrf	_timer1ReloadVal	;volatile
  4448  02CF  0816               	movf	22,w	;volatile
  4449  02D0  04AA               	iorwf	_timer1ReloadVal,f	;volatile
  4450                           
  4451                           ;mcc_generated_files/tmr1.c: 81:     PIR1bits.TMR1IF = 0;
  4452  02D1  1011               	bcf	17,0	;volatile
  4453                           
  4454                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  4455  02D2  0021               	movlb	1	; select bank1
  4456  02D3  1411               	bsf	17,0	;volatile
  4457                           
  4458                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  4459  02D4  30A2               	movlw	low _TMR1_DefaultInterruptHandler
  4460  02D5  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  4461  02D6  3004               	movlw	high _TMR1_DefaultInterruptHandler
  4462  02D7  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  4463  02D8  244D               	fcall	_TMR1_SetInterruptHandler
  4464                           
  4465                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x11;
  4466  02D9  3011               	movlw	17
  4467  02DA  0098               	movwf	24	;volatile
  4468  02DB  0008               	return
  4469  02DC                     __end_of_TMR1_Initialize:	
  4470                           
  4471                           	psect	text24
  4472  044D                     __ptext24:	
  4473 ;; *************** function _TMR1_SetInterruptHandler *****************
  4474 ;; Defined at:
  4475 ;;		line 171 in file "mcc_generated_files/tmr1.c"
  4476 ;; Parameters:    Size  Location     Type
  4477 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  4478 ;;		 -> _TMR1_Ready(1), TMR1_DefaultInterruptHandler(1), 
  4479 ;; Auto vars:     Size  Location     Type
  4480 ;;		None
  4481 ;; Return value:  Size  Location     Type
  4482 ;;                  1    wreg      void 
  4483 ;; Registers used:
  4484 ;;		wreg
  4485 ;; Tracked objects:
  4486 ;;		On entry : 1E/0
  4487 ;;		On exit  : 1F/0
  4488 ;;		Unchanged: 0/0
  4489 ;; Data sizes:     COMMON   BANK0   BANK1
  4490 ;;      Params:         2       0       0
  4491 ;;      Locals:         0       0       0
  4492 ;;      Temps:          0       0       0
  4493 ;;      Totals:         2       0       0
  4494 ;;Total ram usage:        2 bytes
  4495 ;; Hardware stack levels used:    1
  4496 ;; Hardware stack levels required when called:    4
  4497 ;; This function calls:
  4498 ;;		Nothing
  4499 ;; This function is called by:
  4500 ;;		_TMR1_Initialize
  4501 ;;		_logger_initialize
  4502 ;; This function uses a non-reentrant model
  4503 ;;
  4504                           
  4505                           
  4506                           ;psect for function _TMR1_SetInterruptHandler
  4507  044D                     _TMR1_SetInterruptHandler:	
  4508                           
  4509                           ;mcc_generated_files/tmr1.c: 172:     TMR1_InterruptHandler = InterruptHandler;
  4510                           
  4511                           ;incstack = 0
  4512                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  4513  044D  0873               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  4514  044E  0020               	movlb	0	; select bank0
  4515  044F  00A9               	movwf	_TMR1_InterruptHandler+1
  4516  0450  0872               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  4517  0451  00A8               	movwf	_TMR1_InterruptHandler
  4518  0452  0008               	return
  4519  0453                     __end_of_TMR1_SetInterruptHandler:	
  4520                           
  4521                           	psect	text25
  4522  0242                     __ptext25:	
  4523 ;; *************** function _PIN_MANAGER_Initialize *****************
  4524 ;; Defined at:
  4525 ;;		line 59 in file "mcc_generated_files/pin_manager.c"
  4526 ;; Parameters:    Size  Location     Type
  4527 ;;		None
  4528 ;; Auto vars:     Size  Location     Type
  4529 ;;		None
  4530 ;; Return value:  Size  Location     Type
  4531 ;;                  1    wreg      void 
  4532 ;; Registers used:
  4533 ;;		wreg, status,2, status,0, pclath, cstack
  4534 ;; Tracked objects:
  4535 ;;		On entry : B1F/0
  4536 ;;		On exit  : 1F/0
  4537 ;;		Unchanged: 0/0
  4538 ;; Data sizes:     COMMON   BANK0   BANK1
  4539 ;;      Params:         0       0       0
  4540 ;;      Locals:         0       0       0
  4541 ;;      Temps:          0       0       0
  4542 ;;      Totals:         0       0       0
  4543 ;;Total ram usage:        0 bytes
  4544 ;; Hardware stack levels used:    1
  4545 ;; Hardware stack levels required when called:    5
  4546 ;; This function calls:
  4547 ;;		_IOCAF4_SetInterruptHandler
  4548 ;; This function is called by:
  4549 ;;		_SYSTEM_Initialize
  4550 ;; This function uses a non-reentrant model
  4551 ;;
  4552                           
  4553                           
  4554                           ;psect for function _PIN_MANAGER_Initialize
  4555  0242                     _PIN_MANAGER_Initialize:	
  4556                           
  4557                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
  4558                           
  4559                           ;incstack = 0
  4560                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4561  0242  0022               	movlb	2	; select bank2
  4562  0243  018C               	clrf	12	;volatile
  4563                           
  4564                           ;mcc_generated_files/pin_manager.c: 65:     LATC = 0x00;
  4565  0244  018E               	clrf	14	;volatile
  4566                           
  4567                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x1F;
  4568  0245  301F               	movlw	31
  4569  0246  0021               	movlb	1	; select bank1
  4570  0247  008C               	movwf	12	;volatile
  4571                           
  4572                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0x2F;
  4573  0248  302F               	movlw	47
  4574  0249  008E               	movwf	14	;volatile
  4575                           
  4576                           ;mcc_generated_files/pin_manager.c: 76:     ANSELC = 0x0F;
  4577  024A  300F               	movlw	15
  4578  024B  0023               	movlb	3	; select bank3
  4579  024C  008E               	movwf	14	;volatile
  4580                           
  4581                           ;mcc_generated_files/pin_manager.c: 77:     ANSELA = 0x07;
  4582  024D  3007               	movlw	7
  4583  024E  008C               	movwf	12	;volatile
  4584                           
  4585                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x10;
  4586  024F  3010               	movlw	16
  4587  0250  0024               	movlb	4	; select bank4
  4588  0251  008C               	movwf	12	;volatile
  4589                           
  4590                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
  4591  0252  018E               	clrf	14	;volatile
  4592                           
  4593                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 0;
  4594  0253  0021               	movlb	1	; select bank1
  4595  0254  1395               	bcf	21,7	;volatile
  4596                           
  4597                           ;mcc_generated_files/pin_manager.c: 93:     APFCON = 0x00;
  4598  0255  0022               	movlb	2	; select bank2
  4599  0256  019D               	clrf	29	;volatile
  4600                           
  4601                           ;mcc_generated_files/pin_manager.c: 99:     IOCAFbits.IOCAF4 = 0;
  4602  0257  0027               	movlb	7	; select bank7
  4603  0258  1213               	bcf	19,4	;volatile
  4604                           
  4605                           ;mcc_generated_files/pin_manager.c: 101:     IOCANbits.IOCAN4 = 1;
  4606  0259  1612               	bsf	18,4	;volatile
  4607                           
  4608                           ;mcc_generated_files/pin_manager.c: 103:     IOCAPbits.IOCAP4 = 1;
  4609  025A  1611               	bsf	17,4	;volatile
  4610                           
  4611                           ;mcc_generated_files/pin_manager.c: 108:     IOCAF4_SetInterruptHandler(IOCAF4_DefaultIn
      +                          terruptHandler);
  4612  025B  30A3               	movlw	low _IOCAF4_DefaultInterruptHandler
  4613  025C  00F2               	movwf	IOCAF4_SetInterruptHandler@InterruptHandler
  4614  025D  3004               	movlw	high _IOCAF4_DefaultInterruptHandler
  4615  025E  00F3               	movwf	IOCAF4_SetInterruptHandler@InterruptHandler+1
  4616  025F  2453               	fcall	_IOCAF4_SetInterruptHandler
  4617                           
  4618                           ;mcc_generated_files/pin_manager.c: 111:     INTCONbits.IOCIE = 1;
  4619  0260  158B               	bsf	11,3	;volatile
  4620  0261  0008               	return
  4621  0262                     __end_of_PIN_MANAGER_Initialize:	
  4622                           
  4623                           	psect	text26
  4624  0453                     __ptext26:	
  4625 ;; *************** function _IOCAF4_SetInterruptHandler *****************
  4626 ;; Defined at:
  4627 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
  4628 ;; Parameters:    Size  Location     Type
  4629 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  4630 ;;		 -> _IOC_Ready(1), IOCAF4_DefaultInterruptHandler(1), 
  4631 ;; Auto vars:     Size  Location     Type
  4632 ;;		None
  4633 ;; Return value:  Size  Location     Type
  4634 ;;                  1    wreg      void 
  4635 ;; Registers used:
  4636 ;;		wreg
  4637 ;; Tracked objects:
  4638 ;;		On entry : 18/0
  4639 ;;		On exit  : 1F/0
  4640 ;;		Unchanged: 0/0
  4641 ;; Data sizes:     COMMON   BANK0   BANK1
  4642 ;;      Params:         2       0       0
  4643 ;;      Locals:         0       0       0
  4644 ;;      Temps:          0       0       0
  4645 ;;      Totals:         2       0       0
  4646 ;;Total ram usage:        2 bytes
  4647 ;; Hardware stack levels used:    1
  4648 ;; Hardware stack levels required when called:    4
  4649 ;; This function calls:
  4650 ;;		Nothing
  4651 ;; This function is called by:
  4652 ;;		_PIN_MANAGER_Initialize
  4653 ;;		_logger_initialize
  4654 ;; This function uses a non-reentrant model
  4655 ;;
  4656                           
  4657                           
  4658                           ;psect for function _IOCAF4_SetInterruptHandler
  4659  0453                     _IOCAF4_SetInterruptHandler:	
  4660                           
  4661                           ;mcc_generated_files/pin_manager.c: 143:     IOCAF4_InterruptHandler = InterruptHandler;
  4662                           
  4663                           ;incstack = 0
  4664                           ; Regs used in _IOCAF4_SetInterruptHandler: [wreg]
  4665  0453  0873               	movf	IOCAF4_SetInterruptHandler@InterruptHandler+1,w
  4666  0454  0020               	movlb	0	; select bank0
  4667  0455  00E8               	movwf	_IOCAF4_InterruptHandler+1
  4668  0456  0872               	movf	IOCAF4_SetInterruptHandler@InterruptHandler,w
  4669  0457  00E7               	movwf	_IOCAF4_InterruptHandler
  4670  0458  0008               	return
  4671  0459                     __end_of_IOCAF4_SetInterruptHandler:	
  4672                           
  4673                           	psect	text27
  4674  03EC                     __ptext27:	
  4675 ;; *************** function _OSCILLATOR_Initialize *****************
  4676 ;; Defined at:
  4677 ;;		line 61 in file "mcc_generated_files/mcc.c"
  4678 ;; Parameters:    Size  Location     Type
  4679 ;;		None
  4680 ;; Auto vars:     Size  Location     Type
  4681 ;;		None
  4682 ;; Return value:  Size  Location     Type
  4683 ;;                  1    wreg      void 
  4684 ;; Registers used:
  4685 ;;		wreg, status,2
  4686 ;; Tracked objects:
  4687 ;;		On entry : 1F/0
  4688 ;;		On exit  : 1F/1
  4689 ;;		Unchanged: 0/0
  4690 ;; Data sizes:     COMMON   BANK0   BANK1
  4691 ;;      Params:         0       0       0
  4692 ;;      Locals:         0       0       0
  4693 ;;      Temps:          0       0       0
  4694 ;;      Totals:         0       0       0
  4695 ;;Total ram usage:        0 bytes
  4696 ;; Hardware stack levels used:    1
  4697 ;; Hardware stack levels required when called:    4
  4698 ;; This function calls:
  4699 ;;		Nothing
  4700 ;; This function is called by:
  4701 ;;		_SYSTEM_Initialize
  4702 ;; This function uses a non-reentrant model
  4703 ;;
  4704                           
  4705                           
  4706                           ;psect for function _OSCILLATOR_Initialize
  4707  03EC                     _OSCILLATOR_Initialize:	
  4708                           
  4709                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  4710                           
  4711                           ;incstack = 0
  4712                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4713  03EC  3070               	movlw	112
  4714  03ED  0021               	movlb	1	; select bank1
  4715  03EE  0099               	movwf	25	;volatile
  4716                           
  4717                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  4718  03EF  0198               	clrf	24	;volatile
  4719                           
  4720                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  4721  03F0  0022               	movlb	2	; select bank2
  4722  03F1  0196               	clrf	22	;volatile
  4723  03F2                     l211:	
  4724                           ;mcc_generated_files/mcc.c: 71:     {;mcc_generated_files/mcc.c: 72:     }
  4725                           
  4726                           
  4727                           ;mcc_generated_files/mcc.c: 70:     while(PLLR == 0)
  4728  03F2  0021               	movlb	1	; select bank1
  4729  03F3  1B1A               	btfsc	26,6	;volatile
  4730  03F4  0008               	return
  4731  03F5  2BF2               	goto	l211
  4732  03F6                     __end_of_OSCILLATOR_Initialize:	
  4733                           
  4734                           	psect	text28
  4735  0200                     __ptext28:	
  4736 ;; *************** function _EUSART_Initialize *****************
  4737 ;; Defined at:
  4738 ;;		line 75 in file "mcc_generated_files/eusart.c"
  4739 ;; Parameters:    Size  Location     Type
  4740 ;;		None
  4741 ;; Auto vars:     Size  Location     Type
  4742 ;;		None
  4743 ;; Return value:  Size  Location     Type
  4744 ;;                  1    wreg      void 
  4745 ;; Registers used:
  4746 ;;		wreg, status,2, status,0, pclath, cstack
  4747 ;; Tracked objects:
  4748 ;;		On entry : 1F/1
  4749 ;;		On exit  : 1F/1
  4750 ;;		Unchanged: 0/0
  4751 ;; Data sizes:     COMMON   BANK0   BANK1
  4752 ;;      Params:         0       0       0
  4753 ;;      Locals:         0       0       0
  4754 ;;      Temps:          0       0       0
  4755 ;;      Totals:         0       0       0
  4756 ;;Total ram usage:        0 bytes
  4757 ;; Hardware stack levels used:    1
  4758 ;; Hardware stack levels required when called:    5
  4759 ;; This function calls:
  4760 ;;		_EUSART_SetRxInterruptHandler
  4761 ;;		_EUSART_SetTxInterruptHandler
  4762 ;; This function is called by:
  4763 ;;		_SYSTEM_Initialize
  4764 ;; This function uses a non-reentrant model
  4765 ;;
  4766                           
  4767                           
  4768                           ;psect for function _EUSART_Initialize
  4769  0200                     _EUSART_Initialize:	
  4770  0200                     l1902:	
  4771                           ;incstack = 0
  4772                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4773                           
  4774                           
  4775                           ;mcc_generated_files/eusart.c: 78:     PIE1bits.RCIE = 0;
  4776  0200  1291               	bcf	17,5	;volatile
  4777                           
  4778                           ;mcc_generated_files/eusart.c: 79:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  4779  0201  30F2               	movlw	low _EUSART_Receive_ISR
  4780  0202  00F2               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  4781  0203  3002               	movlw	high _EUSART_Receive_ISR
  4782  0204  00F3               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  4783  0205  245F               	fcall	_EUSART_SetRxInterruptHandler
  4784                           
  4785                           ;mcc_generated_files/eusart.c: 80:     PIE1bits.TXIE = 0;
  4786  0206  0021               	movlb	1	; select bank1
  4787  0207  1211               	bcf	17,4	;volatile
  4788                           
  4789                           ;mcc_generated_files/eusart.c: 81:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  4790  0208  30DC               	movlw	low _EUSART_Transmit_ISR
  4791  0209  00F2               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  4792  020A  3002               	movlw	high _EUSART_Transmit_ISR
  4793  020B  00F3               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  4794  020C  2459               	fcall	_EUSART_SetTxInterruptHandler
  4795                           
  4796                           ;mcc_generated_files/eusart.c: 85:     BAUDCON = 0x08;
  4797  020D  3008               	movlw	8
  4798  020E  0023               	movlb	3	; select bank3
  4799  020F  009F               	movwf	31	;volatile
  4800                           
  4801                           ;mcc_generated_files/eusart.c: 88:     RCSTA = 0x90;
  4802  0210  3090               	movlw	144
  4803  0211  009D               	movwf	29	;volatile
  4804                           
  4805                           ;mcc_generated_files/eusart.c: 91:     TXSTA = 0x24;
  4806  0212  3024               	movlw	36
  4807  0213  009E               	movwf	30	;volatile
  4808                           
  4809                           ;mcc_generated_files/eusart.c: 94:     SPBRGL = 0x44;
  4810  0214  3044               	movlw	68
  4811  0215  009B               	movwf	27	;volatile
  4812                           
  4813                           ;mcc_generated_files/eusart.c: 97:     SPBRGH = 0x00;
  4814  0216  019C               	clrf	28	;volatile
  4815                           
  4816                           ;mcc_generated_files/eusart.c: 101:     eusartTxHead = 0;
  4817  0217  01FB               	clrf	_eusartTxHead	;volatile
  4818                           
  4819                           ;mcc_generated_files/eusart.c: 102:     eusartTxTail = 0;
  4820  0218  0020               	movlb	0	; select bank0
  4821  0219  01BE               	clrf	_eusartTxTail	;volatile
  4822                           
  4823                           ;mcc_generated_files/eusart.c: 103:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  4824  021A  3010               	movlw	16
  4825  021B  00FA               	movwf	_eusartTxBufferRemaining	;volatile
  4826                           
  4827                           ;mcc_generated_files/eusart.c: 105:     eusartRxHead = 0;
  4828  021C  01BD               	clrf	_eusartRxHead	;volatile
  4829                           
  4830                           ;mcc_generated_files/eusart.c: 106:     eusartRxTail = 0;
  4831  021D  01BC               	clrf	_eusartRxTail	;volatile
  4832                           
  4833                           ;mcc_generated_files/eusart.c: 107:     eusartRxCount = 0;
  4834  021E  01BB               	clrf	_eusartRxCount	;volatile
  4835                           
  4836                           ;mcc_generated_files/eusart.c: 110:     PIE1bits.RCIE = 1;
  4837  021F  0021               	movlb	1	; select bank1
  4838  0220  1691               	bsf	17,5	;volatile
  4839  0221  0008               	return
  4840  0222                     __end_of_EUSART_Initialize:	
  4841                           
  4842                           	psect	text29
  4843  0459                     __ptext29:	
  4844 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  4845 ;; Defined at:
  4846 ;;		line 211 in file "mcc_generated_files/eusart.c"
  4847 ;; Parameters:    Size  Location     Type
  4848 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  4849 ;;		 -> EUSART_Transmit_ISR(1), 
  4850 ;; Auto vars:     Size  Location     Type
  4851 ;;		None
  4852 ;; Return value:  Size  Location     Type
  4853 ;;                  1    wreg      void 
  4854 ;; Registers used:
  4855 ;;		wreg
  4856 ;; Tracked objects:
  4857 ;;		On entry : 1F/1
  4858 ;;		On exit  : 1F/0
  4859 ;;		Unchanged: 0/0
  4860 ;; Data sizes:     COMMON   BANK0   BANK1
  4861 ;;      Params:         2       0       0
  4862 ;;      Locals:         0       0       0
  4863 ;;      Temps:          0       0       0
  4864 ;;      Totals:         2       0       0
  4865 ;;Total ram usage:        2 bytes
  4866 ;; Hardware stack levels used:    1
  4867 ;; Hardware stack levels required when called:    4
  4868 ;; This function calls:
  4869 ;;		Nothing
  4870 ;; This function is called by:
  4871 ;;		_EUSART_Initialize
  4872 ;; This function uses a non-reentrant model
  4873 ;;
  4874                           
  4875                           
  4876                           ;psect for function _EUSART_SetTxInterruptHandler
  4877  0459                     _EUSART_SetTxInterruptHandler:	
  4878                           
  4879                           ;mcc_generated_files/eusart.c: 212:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  4880                           
  4881                           ;incstack = 0
  4882                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  4883  0459  0873               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  4884  045A  0020               	movlb	0	; select bank0
  4885  045B  00B1               	movwf	_EUSART_TxDefaultInterruptHandler+1
  4886  045C  0872               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  4887  045D  00B0               	movwf	_EUSART_TxDefaultInterruptHandler
  4888  045E  0008               	return
  4889  045F                     __end_of_EUSART_SetTxInterruptHandler:	
  4890                           
  4891                           	psect	text30
  4892  045F                     __ptext30:	
  4893 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  4894 ;; Defined at:
  4895 ;;		line 215 in file "mcc_generated_files/eusart.c"
  4896 ;; Parameters:    Size  Location     Type
  4897 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  4898 ;;		 -> EUSART_Receive_ISR(1), 
  4899 ;; Auto vars:     Size  Location     Type
  4900 ;;		None
  4901 ;; Return value:  Size  Location     Type
  4902 ;;                  1    wreg      void 
  4903 ;; Registers used:
  4904 ;;		wreg
  4905 ;; Tracked objects:
  4906 ;;		On entry : 1F/1
  4907 ;;		On exit  : 1F/0
  4908 ;;		Unchanged: 0/0
  4909 ;; Data sizes:     COMMON   BANK0   BANK1
  4910 ;;      Params:         2       0       0
  4911 ;;      Locals:         0       0       0
  4912 ;;      Temps:          0       0       0
  4913 ;;      Totals:         2       0       0
  4914 ;;Total ram usage:        2 bytes
  4915 ;; Hardware stack levels used:    1
  4916 ;; Hardware stack levels required when called:    4
  4917 ;; This function calls:
  4918 ;;		Nothing
  4919 ;; This function is called by:
  4920 ;;		_EUSART_Initialize
  4921 ;; This function uses a non-reentrant model
  4922 ;;
  4923                           
  4924                           
  4925                           ;psect for function _EUSART_SetRxInterruptHandler
  4926  045F                     _EUSART_SetRxInterruptHandler:	
  4927                           
  4928                           ;mcc_generated_files/eusart.c: 216:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  4929                           
  4930                           ;incstack = 0
  4931                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  4932  045F  0873               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  4933  0460  0020               	movlb	0	; select bank0
  4934  0461  00AF               	movwf	_EUSART_RxDefaultInterruptHandler+1
  4935  0462  0872               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  4936  0463  00AE               	movwf	_EUSART_RxDefaultInterruptHandler
  4937  0464  0008               	return
  4938  0465                     __end_of_EUSART_SetRxInterruptHandler:	
  4939                           
  4940                           	psect	text31
  4941  03F6                     __ptext31:	
  4942 ;; *************** function _ADC_Initialize *****************
  4943 ;; Defined at:
  4944 ;;		line 65 in file "mcc_generated_files/adc.c"
  4945 ;; Parameters:    Size  Location     Type
  4946 ;;		None
  4947 ;; Auto vars:     Size  Location     Type
  4948 ;;		None
  4949 ;; Return value:  Size  Location     Type
  4950 ;;                  1    wreg      void 
  4951 ;; Registers used:
  4952 ;;		wreg, status,2
  4953 ;; Tracked objects:
  4954 ;;		On entry : 1F/0
  4955 ;;		On exit  : 1F/1
  4956 ;;		Unchanged: 0/0
  4957 ;; Data sizes:     COMMON   BANK0   BANK1
  4958 ;;      Params:         0       0       0
  4959 ;;      Locals:         0       0       0
  4960 ;;      Temps:          0       0       0
  4961 ;;      Totals:         0       0       0
  4962 ;;Total ram usage:        0 bytes
  4963 ;; Hardware stack levels used:    1
  4964 ;; Hardware stack levels required when called:    4
  4965 ;; This function calls:
  4966 ;;		Nothing
  4967 ;; This function is called by:
  4968 ;;		_SYSTEM_Initialize
  4969 ;; This function uses a non-reentrant model
  4970 ;;
  4971                           
  4972                           
  4973                           ;psect for function _ADC_Initialize
  4974  03F6                     _ADC_Initialize:	
  4975                           
  4976                           ;mcc_generated_files/adc.c: 70:     ADCON0 = 0x01;
  4977                           
  4978                           ;incstack = 0
  4979                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  4980  03F6  3001               	movlw	1
  4981  03F7  0021               	movlb	1	; select bank1
  4982  03F8  009D               	movwf	29	;volatile
  4983                           
  4984                           ;mcc_generated_files/adc.c: 73:     ADCON1 = 0xF0;
  4985  03F9  30F0               	movlw	240
  4986  03FA  009E               	movwf	30	;volatile
  4987                           
  4988                           ;mcc_generated_files/adc.c: 76:     ADRESL = 0x00;
  4989  03FB  019B               	clrf	27	;volatile
  4990                           
  4991                           ;mcc_generated_files/adc.c: 79:     ADRESH = 0x00;
  4992  03FC  019C               	clrf	28	;volatile
  4993                           
  4994                           ;mcc_generated_files/adc.c: 82:     PIE1bits.ADIE = 1;
  4995  03FD  1711               	bsf	17,6	;volatile
  4996  03FE  0008               	return
  4997  03FF                     __end_of_ADC_Initialize:	
  4998                           
  4999                           	psect	text32
  5000  0490                     __ptext32:	
  5001 ;; *************** function _EUSART_is_rx_ready *****************
  5002 ;; Defined at:
  5003 ;;		line 118 in file "mcc_generated_files/eusart.c"
  5004 ;; Parameters:    Size  Location     Type
  5005 ;;		None
  5006 ;; Auto vars:     Size  Location     Type
  5007 ;;		None
  5008 ;; Return value:  Size  Location     Type
  5009 ;;                  1    wreg      unsigned char 
  5010 ;; Registers used:
  5011 ;;		wreg
  5012 ;; Tracked objects:
  5013 ;;		On entry : 0/2
  5014 ;;		On exit  : 1F/0
  5015 ;;		Unchanged: 0/0
  5016 ;; Data sizes:     COMMON   BANK0   BANK1
  5017 ;;      Params:         0       0       0
  5018 ;;      Locals:         0       0       0
  5019 ;;      Temps:          0       0       0
  5020 ;;      Totals:         0       0       0
  5021 ;;Total ram usage:        0 bytes
  5022 ;; Hardware stack levels used:    1
  5023 ;; Hardware stack levels required when called:    4
  5024 ;; This function calls:
  5025 ;;		Nothing
  5026 ;; This function is called by:
  5027 ;;		_main
  5028 ;; This function uses a non-reentrant model
  5029 ;;
  5030                           
  5031                           
  5032                           ;psect for function _EUSART_is_rx_ready
  5033  0490                     _EUSART_is_rx_ready:	
  5034                           
  5035                           ;mcc_generated_files/eusart.c: 120:     return eusartRxCount;
  5036                           
  5037                           ;incstack = 0
  5038                           ; Regs used in _EUSART_is_rx_ready: [wreg]
  5039  0490  0020               	movlb	0	; select bank0
  5040  0491  083B               	movf	_eusartRxCount,w	;volatile
  5041  0492  0008               	return
  5042  0493                     __end_of_EUSART_is_rx_ready:	
  5043                           
  5044                           	psect	intentry
  5045  0004                     __pintentry:	
  5046 ;; *************** function _INTERRUPT_InterruptManager *****************
  5047 ;; Defined at:
  5048 ;;		line 55 in file "mcc_generated_files/interrupt_manager.c"
  5049 ;; Parameters:    Size  Location     Type
  5050 ;;		None
  5051 ;; Auto vars:     Size  Location     Type
  5052 ;;		None
  5053 ;; Return value:  Size  Location     Type
  5054 ;;                  1    wreg      void 
  5055 ;; Registers used:
  5056 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5057 ;; Tracked objects:
  5058 ;;		On entry : 0/0
  5059 ;;		On exit  : 0/0
  5060 ;;		Unchanged: 0/0
  5061 ;; Data sizes:     COMMON   BANK0   BANK1
  5062 ;;      Params:         0       0       0
  5063 ;;      Locals:         0       0       0
  5064 ;;      Temps:          0       0       0
  5065 ;;      Totals:         0       0       0
  5066 ;;Total ram usage:        0 bytes
  5067 ;; Hardware stack levels used:    1
  5068 ;; Hardware stack levels required when called:    3
  5069 ;; This function calls:
  5070 ;;		Absolute function
  5071 ;;		_ADC_GetConversionResult
  5072 ;;		_ADC_ISR
  5073 ;;		_EUSART_Receive_ISR
  5074 ;;		_EUSART_Transmit_ISR
  5075 ;;		_PIN_MANAGER_IOC
  5076 ;;		_TMR1_ISR
  5077 ;; This function is called by:
  5078 ;;		Interrupt level 1
  5079 ;; This function uses a non-reentrant model
  5080 ;;
  5081                           
  5082  0004                     _INTERRUPT_InterruptManager:	
  5083                           
  5084                           ;incstack = 0
  5085  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  5086                           
  5087                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  5088  0005  3180               	pagesel	$
  5089                           
  5090                           ;mcc_generated_files/interrupt_manager.c: 58:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
  5091  0006  198B               	btfsc	11,3	;volatile
  5092  0007  1C0B               	btfss	11,0	;volatile
  5093  0008  280B               	goto	i1l74
  5094                           
  5095                           ;mcc_generated_files/interrupt_manager.c: 59:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 60:         PIN_MANAGER_IOC();
  5096  0009  2480               	fcall	_PIN_MANAGER_IOC
  5097                           
  5098                           ;mcc_generated_files/interrupt_manager.c: 61:     }
  5099  000A  283C               	goto	i1l86
  5100  000B                     i1l74:	
  5101                           ;mcc_generated_files/interrupt_manager.c: 62:     else if(INTCONbits.PEIE == 1)
  5102                           
  5103  000B  1F0B               	btfss	11,6	;volatile
  5104  000C  283C               	goto	i1l86
  5105                           
  5106                           ;mcc_generated_files/interrupt_manager.c: 63:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 64:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  5107  000D  0021               	movlb	1	; select bank1
  5108  000E  1C11               	btfss	17,0	;volatile
  5109  000F  2815               	goto	i1l77
  5110  0010  0020               	movlb	0	; select bank0
  5111  0011  1C11               	btfss	17,0	;volatile
  5112  0012  2815               	goto	i1l77
  5113                           
  5114                           ;mcc_generated_files/interrupt_manager.c: 65:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 66:             TMR1_ISR();
  5115  0013  2350               	fcall	_TMR1_ISR
  5116                           
  5117                           ;mcc_generated_files/interrupt_manager.c: 67:         }
  5118  0014  283C               	goto	i1l86
  5119  0015                     i1l77:	
  5120                           ;mcc_generated_files/interrupt_manager.c: 68:         else if(PIE1bits.ADIE == 1 && PIR1
      +                          bits.ADIF == 1)
  5121                           
  5122  0015  0021               	movlb	1	; select bank1
  5123  0016  1F11               	btfss	17,6	;volatile
  5124  0017  2825               	goto	i1l79
  5125  0018  0020               	movlb	0	; select bank0
  5126  0019  1F11               	btfss	17,6	;volatile
  5127  001A  2825               	goto	i1l79
  5128                           
  5129                           ;mcc_generated_files/interrupt_manager.c: 69:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 70:             ADC_value = ADC_GetConversionResult();
  5130  001B  23FF               	fcall	_ADC_GetConversionResult
  5131  001C  0871               	movf	?_ADC_GetConversionResult+1,w
  5132  001D  0020               	movlb	0	; select bank0
  5133  001E  00AD               	movwf	_ADC_value+1	;volatile
  5134  001F  0870               	movf	?_ADC_GetConversionResult,w
  5135  0020  00AC               	movwf	_ADC_value	;volatile
  5136                           
  5137                           ;mcc_generated_files/interrupt_manager.c: 71:             ADC_state = ADC_READY;
  5138  0021  3001               	movlw	1
  5139  0022  00BF               	movwf	_ADC_state	;volatile
  5140                           
  5141                           ;mcc_generated_files/interrupt_manager.c: 73:             ADC_ISR();
  5142  0023  249F               	fcall	_ADC_ISR
  5143                           
  5144                           ;mcc_generated_files/interrupt_manager.c: 74:         }
  5145  0024  283C               	goto	i1l86
  5146  0025                     i1l79:	
  5147                           ;mcc_generated_files/interrupt_manager.c: 75:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
  5148                           
  5149  0025  0021               	movlb	1	; select bank1
  5150  0026  1E91               	btfss	17,5	;volatile
  5151  0027  2831               	goto	i1l81
  5152  0028  0020               	movlb	0	; select bank0
  5153  0029  1E91               	btfss	17,5	;volatile
  5154  002A  2831               	goto	i1l81
  5155                           
  5156                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             EUSART_RxDefaultInterruptHandler();
  5157  002B  082F               	movf	_EUSART_RxDefaultInterruptHandler+1,w
  5158  002C  008A               	movwf	10
  5159  002D  082E               	movf	_EUSART_RxDefaultInterruptHandler,w
  5160  002E  000A               	callw
  5161  002F  3180               	pagesel	$
  5162                           
  5163                           ;mcc_generated_files/interrupt_manager.c: 78:         }
  5164  0030  283C               	goto	i1l86
  5165  0031                     i1l81:	
  5166                           ;mcc_generated_files/interrupt_manager.c: 79:         else if(PIE1bits.TXIE == 1 && PIR1
      +                          bits.TXIF == 1)
  5167                           
  5168  0031  0021               	movlb	1	; select bank1
  5169  0032  1E11               	btfss	17,4	;volatile
  5170  0033  283C               	goto	i1l86
  5171  0034  0020               	movlb	0	; select bank0
  5172  0035  1E11               	btfss	17,4	;volatile
  5173  0036  283C               	goto	i1l86
  5174                           
  5175                           ;mcc_generated_files/interrupt_manager.c: 80:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 81:             EUSART_TxDefaultInterruptHandler();
  5176  0037  0831               	movf	_EUSART_TxDefaultInterruptHandler+1,w
  5177  0038  008A               	movwf	10
  5178  0039  0830               	movf	_EUSART_TxDefaultInterruptHandler,w
  5179  003A  000A               	callw
  5180  003B  3180               	pagesel	$
  5181  003C                     i1l86:	
  5182                           ;mcc_generated_files/interrupt_manager.c: 82:         }
  5183                           
  5184  003C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  5185  003D  0009               	retfie
  5186  003E                     __end_of_INTERRUPT_InterruptManager:	
  5187                           
  5188                           	psect	text34
  5189  0350                     __ptext34:	
  5190 ;; *************** function _TMR1_ISR *****************
  5191 ;; Defined at:
  5192 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  5193 ;; Parameters:    Size  Location     Type
  5194 ;;		None
  5195 ;; Auto vars:     Size  Location     Type
  5196 ;;		None
  5197 ;; Return value:  Size  Location     Type
  5198 ;;                  1    wreg      void 
  5199 ;; Registers used:
  5200 ;;		wreg, status,2, status,0, pclath, cstack
  5201 ;; Tracked objects:
  5202 ;;		On entry : 1F/0
  5203 ;;		On exit  : 0/0
  5204 ;;		Unchanged: 0/0
  5205 ;; Data sizes:     COMMON   BANK0   BANK1
  5206 ;;      Params:         0       0       0
  5207 ;;      Locals:         0       0       0
  5208 ;;      Temps:          0       0       0
  5209 ;;      Totals:         0       0       0
  5210 ;;Total ram usage:        0 bytes
  5211 ;; Hardware stack levels used:    1
  5212 ;; Hardware stack levels required when called:    2
  5213 ;; This function calls:
  5214 ;;		Absolute function
  5215 ;;		_TMR1_DefaultInterruptHandler
  5216 ;;		_TMR1_WriteTimer
  5217 ;;		__TMR1_Ready
  5218 ;; This function is called by:
  5219 ;;		_INTERRUPT_InterruptManager
  5220 ;; This function uses a non-reentrant model
  5221 ;;
  5222                           
  5223                           
  5224                           ;psect for function _TMR1_ISR
  5225  0350                     _TMR1_ISR:	
  5226                           
  5227                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  5228                           
  5229                           ;incstack = 0
  5230                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  5231  0350  1011               	bcf	17,0	;volatile
  5232                           
  5233                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  5234  0351  082B               	movf	_timer1ReloadVal+1,w	;volatile
  5235  0352  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  5236  0353  082A               	movf	_timer1ReloadVal,w	;volatile
  5237  0354  00F0               	movwf	TMR1_WriteTimer@timerVal
  5238  0355  238A               	fcall	_TMR1_WriteTimer
  5239                           
  5240                           ;mcc_generated_files/tmr1.c: 164:     if(TMR1_InterruptHandler)
  5241  0356  0828               	movf	_TMR1_InterruptHandler,w
  5242  0357  0429               	iorwf	_TMR1_InterruptHandler+1,w
  5243  0358  1903               	btfsc	3,2
  5244  0359  0008               	return
  5245                           
  5246                           ;mcc_generated_files/tmr1.c: 165:     {;mcc_generated_files/tmr1.c: 166:         TMR1_In
      +                          terruptHandler();
  5247  035A  0829               	movf	_TMR1_InterruptHandler+1,w
  5248  035B  008A               	movwf	10
  5249  035C  0828               	movf	_TMR1_InterruptHandler,w
  5250  035D  000A               	callw
  5251  035E  3183               	pagesel	$
  5252  035F  0008               	return
  5253  0360                     __end_of_TMR1_ISR:	
  5254                           
  5255                           	psect	text35
  5256  04A2                     __ptext35:	
  5257 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  5258 ;; Defined at:
  5259 ;;		line 175 in file "mcc_generated_files/tmr1.c"
  5260 ;; Parameters:    Size  Location     Type
  5261 ;;		None
  5262 ;; Auto vars:     Size  Location     Type
  5263 ;;		None
  5264 ;; Return value:  Size  Location     Type
  5265 ;;                  1    wreg      void 
  5266 ;; Registers used:
  5267 ;;		None
  5268 ;; Tracked objects:
  5269 ;;		On entry : 1F/0
  5270 ;;		On exit  : 1F/0
  5271 ;;		Unchanged: 1F/0
  5272 ;; Data sizes:     COMMON   BANK0   BANK1
  5273 ;;      Params:         0       0       0
  5274 ;;      Locals:         0       0       0
  5275 ;;      Temps:          0       0       0
  5276 ;;      Totals:         0       0       0
  5277 ;;Total ram usage:        0 bytes
  5278 ;; Hardware stack levels used:    1
  5279 ;; This function calls:
  5280 ;;		Nothing
  5281 ;; This function is called by:
  5282 ;;		_TMR1_Initialize
  5283 ;;		_TMR1_ISR
  5284 ;; This function uses a non-reentrant model
  5285 ;;
  5286                           
  5287                           
  5288                           ;psect for function _TMR1_DefaultInterruptHandler
  5289  04A2                     _TMR1_DefaultInterruptHandler:	
  5290                           
  5291                           ;incstack = 0
  5292                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  5293  04A2  0008               	return
  5294  04A3                     __end_of_TMR1_DefaultInterruptHandler:	
  5295                           
  5296                           	psect	text36
  5297  042D                     __ptext36:	
  5298 ;; *************** function __TMR1_Ready *****************
  5299 ;; Defined at:
  5300 ;;		line 158 in file "logger.c"
  5301 ;; Parameters:    Size  Location     Type
  5302 ;;		None
  5303 ;; Auto vars:     Size  Location     Type
  5304 ;;		None
  5305 ;; Return value:  Size  Location     Type
  5306 ;;                  1    wreg      void 
  5307 ;; Registers used:
  5308 ;;		wreg, status,2, status,0, pclath, cstack
  5309 ;; Tracked objects:
  5310 ;;		On entry : 1F/0
  5311 ;;		On exit  : 1E/0
  5312 ;;		Unchanged: 0/0
  5313 ;; Data sizes:     COMMON   BANK0   BANK1
  5314 ;;      Params:         0       0       0
  5315 ;;      Locals:         0       0       0
  5316 ;;      Temps:          0       0       0
  5317 ;;      Totals:         0       0       0
  5318 ;;Total ram usage:        0 bytes
  5319 ;; Hardware stack levels used:    1
  5320 ;; Hardware stack levels required when called:    1
  5321 ;; This function calls:
  5322 ;;		i1_ADC_StartConversion
  5323 ;; This function is called by:
  5324 ;;		_logger_initialize
  5325 ;;		_TMR1_ISR
  5326 ;; This function uses a non-reentrant model
  5327 ;;
  5328                           
  5329                           
  5330                           ;psect for function __TMR1_Ready
  5331  042D                     __TMR1_Ready:	
  5332                           
  5333                           ;logger.c: 160:     if (TMR1_state == TMR1_RUNNING) {
  5334                           
  5335                           ;incstack = 0
  5336                           ; Regs used in __TMR1_Ready: [wreg+status,2+status,0+pclath+cstack]
  5337  042D  0B34               	decfsz	_TMR1_state,w	;volatile
  5338  042E  0008               	return
  5339                           
  5340                           ;logger.c: 161:         ADCON0bits.ADON = 0;
  5341  042F  0021               	movlb	1	; select bank1
  5342  0430  101D               	bcf	29,0	;volatile
  5343                           
  5344                           ;logger.c: 162:         ADCON0bits.ADON = 1;
  5345  0431  141D               	bsf	29,0	;volatile
  5346                           
  5347                           ;logger.c: 163:         ADC_StartConversion();
  5348  0432  249D               	fcall	i1_ADC_StartConversion
  5349  0433  0008               	return
  5350  0434                     __end_of__TMR1_Ready:	
  5351                           
  5352                           	psect	text37
  5353  049D                     __ptext37:	
  5354 ;; *************** function i1_ADC_StartConversion *****************
  5355 ;; Defined at:
  5356 ;;		line 93 in file "mcc_generated_files/adc.c"
  5357 ;; Parameters:    Size  Location     Type
  5358 ;;		None
  5359 ;; Auto vars:     Size  Location     Type
  5360 ;;		None
  5361 ;; Return value:  Size  Location     Type
  5362 ;;                  1    wreg      void 
  5363 ;; Registers used:
  5364 ;;		None
  5365 ;; Tracked objects:
  5366 ;;		On entry : 1F/1
  5367 ;;		On exit  : 1F/1
  5368 ;;		Unchanged: 0/0
  5369 ;; Data sizes:     COMMON   BANK0   BANK1
  5370 ;;      Params:         0       0       0
  5371 ;;      Locals:         0       0       0
  5372 ;;      Temps:          0       0       0
  5373 ;;      Totals:         0       0       0
  5374 ;;Total ram usage:        0 bytes
  5375 ;; Hardware stack levels used:    1
  5376 ;; This function calls:
  5377 ;;		Nothing
  5378 ;; This function is called by:
  5379 ;;		__TMR1_Ready
  5380 ;; This function uses a non-reentrant model
  5381 ;;
  5382                           
  5383                           
  5384                           ;psect for function i1_ADC_StartConversion
  5385  049D                     i1_ADC_StartConversion:	
  5386                           
  5387                           ;mcc_generated_files/adc.c: 96:     ADCON0bits.GO_nDONE = 1;
  5388                           
  5389                           ;incstack = 0
  5390                           ; Regs used in i1_ADC_StartConversion: []
  5391  049D  149D               	bsf	29,1	;volatile
  5392  049E  0008               	return
  5393  049F                     __end_ofi1_ADC_StartConversion:	
  5394                           
  5395                           	psect	text38
  5396  038A                     __ptext38:	
  5397 ;; *************** function _TMR1_WriteTimer *****************
  5398 ;; Defined at:
  5399 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  5400 ;; Parameters:    Size  Location     Type
  5401 ;;  timerVal        2    0[COMMON] unsigned short 
  5402 ;; Auto vars:     Size  Location     Type
  5403 ;;		None
  5404 ;; Return value:  Size  Location     Type
  5405 ;;                  1    wreg      void 
  5406 ;; Registers used:
  5407 ;;		wreg
  5408 ;; Tracked objects:
  5409 ;;		On entry : 1F/0
  5410 ;;		On exit  : 1F/0
  5411 ;;		Unchanged: 0/0
  5412 ;; Data sizes:     COMMON   BANK0   BANK1
  5413 ;;      Params:         2       0       0
  5414 ;;      Locals:         0       0       0
  5415 ;;      Temps:          0       0       0
  5416 ;;      Totals:         2       0       0
  5417 ;;Total ram usage:        2 bytes
  5418 ;; Hardware stack levels used:    1
  5419 ;; This function calls:
  5420 ;;		Nothing
  5421 ;; This function is called by:
  5422 ;;		_TMR1_ISR
  5423 ;; This function uses a non-reentrant model
  5424 ;;
  5425                           
  5426                           
  5427                           ;psect for function _TMR1_WriteTimer
  5428  038A                     _TMR1_WriteTimer:	
  5429                           
  5430                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  5431                           
  5432                           ;incstack = 0
  5433                           ; Regs used in _TMR1_WriteTimer: [wreg]
  5434  038A  1D18               	btfss	24,2	;volatile
  5435  038B  2B93               	goto	i1l2016
  5436                           
  5437                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  5438  038C  1018               	bcf	24,0	;volatile
  5439                           
  5440                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (timerVal >> 8);
  5441  038D  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  5442  038E  0097               	movwf	23	;volatile
  5443                           
  5444                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = timerVal;
  5445  038F  0870               	movf	TMR1_WriteTimer@timerVal,w
  5446  0390  0096               	movwf	22	;volatile
  5447                           
  5448                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  5449  0391  1418               	bsf	24,0	;volatile
  5450                           
  5451                           ;mcc_generated_files/tmr1.c: 133:     }
  5452  0392  0008               	return
  5453  0393                     i1l2016:	
  5454                           
  5455                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (timerVal >> 8);
  5456  0393  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  5457  0394  0097               	movwf	23	;volatile
  5458                           
  5459                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = timerVal;
  5460  0395  0870               	movf	TMR1_WriteTimer@timerVal,w
  5461  0396  0096               	movwf	22	;volatile
  5462  0397  0008               	return
  5463  0398                     __end_of_TMR1_WriteTimer:	
  5464                           
  5465                           	psect	text39
  5466  0480                     __ptext39:	
  5467 ;; *************** function _PIN_MANAGER_IOC *****************
  5468 ;; Defined at:
  5469 ;;		line 115 in file "mcc_generated_files/pin_manager.c"
  5470 ;; Parameters:    Size  Location     Type
  5471 ;;		None
  5472 ;; Auto vars:     Size  Location     Type
  5473 ;;		None
  5474 ;; Return value:  Size  Location     Type
  5475 ;;                  1    wreg      void 
  5476 ;; Registers used:
  5477 ;;		wreg, status,2, status,0, pclath, cstack
  5478 ;; Tracked objects:
  5479 ;;		On entry : 0/0
  5480 ;;		On exit  : 1F/7
  5481 ;;		Unchanged: 0/0
  5482 ;; Data sizes:     COMMON   BANK0   BANK1
  5483 ;;      Params:         0       0       0
  5484 ;;      Locals:         0       0       0
  5485 ;;      Temps:          0       0       0
  5486 ;;      Totals:         0       0       0
  5487 ;;Total ram usage:        0 bytes
  5488 ;; Hardware stack levels used:    1
  5489 ;; Hardware stack levels required when called:    2
  5490 ;; This function calls:
  5491 ;;		_IOCAF4_ISR
  5492 ;; This function is called by:
  5493 ;;		_INTERRUPT_InterruptManager
  5494 ;; This function uses a non-reentrant model
  5495 ;;
  5496                           
  5497                           
  5498                           ;psect for function _PIN_MANAGER_IOC
  5499  0480                     _PIN_MANAGER_IOC:	
  5500                           
  5501                           ;mcc_generated_files/pin_manager.c: 118:     if(IOCAFbits.IOCAF4 == 1)
  5502                           
  5503                           ;incstack = 0
  5504                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
  5505  0480  0027               	movlb	7	; select bank7
  5506  0481  1E13               	btfss	19,4	;volatile
  5507  0482  0008               	return
  5508                           
  5509                           ;mcc_generated_files/pin_manager.c: 119:     {;mcc_generated_files/pin_manager.c: 120:  
      +                                 IOCAF4_ISR();
  5510  0483  2BB2               	ljmp	i1l2018
  5511  0484                     __end_of_PIN_MANAGER_IOC:	
  5512                           
  5513                           	psect	text40
  5514  03B2                     __ptext40:	
  5515 ;; *************** function _IOCAF4_ISR *****************
  5516 ;; Defined at:
  5517 ;;		line 127 in file "mcc_generated_files/pin_manager.c"
  5518 ;; Parameters:    Size  Location     Type
  5519 ;;		None
  5520 ;; Auto vars:     Size  Location     Type
  5521 ;;		None
  5522 ;; Return value:  Size  Location     Type
  5523 ;;                  1    wreg      void 
  5524 ;; Registers used:
  5525 ;;		wreg, status,2, status,0, pclath, cstack
  5526 ;; Tracked objects:
  5527 ;;		On entry : 1F/7
  5528 ;;		On exit  : 1F/7
  5529 ;;		Unchanged: 0/0
  5530 ;; Data sizes:     COMMON   BANK0   BANK1
  5531 ;;      Params:         0       0       0
  5532 ;;      Locals:         0       0       0
  5533 ;;      Temps:          0       0       0
  5534 ;;      Totals:         0       0       0
  5535 ;;Total ram usage:        0 bytes
  5536 ;; Hardware stack levels used:    1
  5537 ;; Hardware stack levels required when called:    1
  5538 ;; This function calls:
  5539 ;;		Absolute function
  5540 ;;		_IOCAF4_DefaultInterruptHandler
  5541 ;;		__IOC_Ready
  5542 ;; This function is called by:
  5543 ;;		_PIN_MANAGER_IOC
  5544 ;; This function uses a non-reentrant model
  5545 ;;
  5546                           
  5547                           
  5548                           ;psect for function _IOCAF4_ISR
  5549  03B2                     _IOCAF4_ISR:	
  5550  03B2                     i1l2018:	
  5551                           ;incstack = 0
  5552                           ; Regs used in _IOCAF4_ISR: [wreg+status,2+status,0+pclath+cstack]
  5553                           
  5554                           
  5555                           ;mcc_generated_files/pin_manager.c: 132:     if(IOCAF4_InterruptHandler)
  5556  03B2  0020               	movlb	0	; select bank0
  5557  03B3  0867               	movf	_IOCAF4_InterruptHandler,w
  5558  03B4  0468               	iorwf	_IOCAF4_InterruptHandler+1,w
  5559  03B5  1903               	btfsc	3,2
  5560  03B6  2BBC               	goto	i1l2022
  5561                           
  5562                           ;mcc_generated_files/pin_manager.c: 133:     {;mcc_generated_files/pin_manager.c: 134:  
      +                                 IOCAF4_InterruptHandler();
  5563  03B7  0868               	movf	_IOCAF4_InterruptHandler+1,w
  5564  03B8  008A               	movwf	10
  5565  03B9  0867               	movf	_IOCAF4_InterruptHandler,w
  5566  03BA  000A               	callw
  5567  03BB  3183               	pagesel	$
  5568  03BC                     i1l2022:	
  5569                           
  5570                           ;mcc_generated_files/pin_manager.c: 136:     IOCAFbits.IOCAF4 = 0;
  5571  03BC  0027               	movlb	7	; select bank7
  5572  03BD  1213               	bcf	19,4	;volatile
  5573  03BE  0008               	return
  5574  03BF                     __end_of_IOCAF4_ISR:	
  5575                           
  5576                           	psect	text41
  5577  04A3                     __ptext41:	
  5578 ;; *************** function _IOCAF4_DefaultInterruptHandler *****************
  5579 ;; Defined at:
  5580 ;;		line 149 in file "mcc_generated_files/pin_manager.c"
  5581 ;; Parameters:    Size  Location     Type
  5582 ;;		None
  5583 ;; Auto vars:     Size  Location     Type
  5584 ;;		None
  5585 ;; Return value:  Size  Location     Type
  5586 ;;                  1    wreg      void 
  5587 ;; Registers used:
  5588 ;;		None
  5589 ;; Tracked objects:
  5590 ;;		On entry : 1F/0
  5591 ;;		On exit  : 1F/0
  5592 ;;		Unchanged: 1F/0
  5593 ;; Data sizes:     COMMON   BANK0   BANK1
  5594 ;;      Params:         0       0       0
  5595 ;;      Locals:         0       0       0
  5596 ;;      Temps:          0       0       0
  5597 ;;      Totals:         0       0       0
  5598 ;;Total ram usage:        0 bytes
  5599 ;; Hardware stack levels used:    1
  5600 ;; This function calls:
  5601 ;;		Nothing
  5602 ;; This function is called by:
  5603 ;;		_PIN_MANAGER_Initialize
  5604 ;;		_IOCAF4_ISR
  5605 ;; This function uses a non-reentrant model
  5606 ;;
  5607                           
  5608                           
  5609                           ;psect for function _IOCAF4_DefaultInterruptHandler
  5610  04A3                     _IOCAF4_DefaultInterruptHandler:	
  5611                           
  5612                           ;incstack = 0
  5613                           ; Regs used in _IOCAF4_DefaultInterruptHandler: []
  5614  04A3  0008               	return
  5615  04A4                     __end_of_IOCAF4_DefaultInterruptHandler:	
  5616                           
  5617                           	psect	text42
  5618  0434                     __ptext42:	
  5619 ;; *************** function __IOC_Ready *****************
  5620 ;; Defined at:
  5621 ;;		line 167 in file "logger.c"
  5622 ;; Parameters:    Size  Location     Type
  5623 ;;		None
  5624 ;; Auto vars:     Size  Location     Type
  5625 ;;		None
  5626 ;; Return value:  Size  Location     Type
  5627 ;;                  1    wreg      void 
  5628 ;; Registers used:
  5629 ;;		wreg, status,2
  5630 ;; Tracked objects:
  5631 ;;		On entry : 1F/0
  5632 ;;		On exit  : 1F/0
  5633 ;;		Unchanged: 0/0
  5634 ;; Data sizes:     COMMON   BANK0   BANK1
  5635 ;;      Params:         0       0       0
  5636 ;;      Locals:         0       0       0
  5637 ;;      Temps:          0       0       0
  5638 ;;      Totals:         0       0       0
  5639 ;;Total ram usage:        0 bytes
  5640 ;; Hardware stack levels used:    1
  5641 ;; This function calls:
  5642 ;;		Nothing
  5643 ;; This function is called by:
  5644 ;;		_logger_initialize
  5645 ;;		_IOCAF4_ISR
  5646 ;; This function uses a non-reentrant model
  5647 ;;
  5648                           
  5649                           
  5650                           ;psect for function __IOC_Ready
  5651  0434                     __IOC_Ready:	
  5652                           
  5653                           ;logger.c: 170:     IOC_value = PORTAbits.RA4;
  5654                           
  5655                           ;incstack = 0
  5656                           ; Regs used in __IOC_Ready: [wreg+status,2]
  5657  0434  3000               	movlw	0
  5658  0435  1A0C               	btfsc	12,4	;volatile
  5659  0436  3001               	movlw	1
  5660  0437  00B3               	movwf	_IOC_value	;volatile
  5661                           
  5662                           ;logger.c: 171:     IOC_state = IOC_READY;
  5663  0438  3001               	movlw	1
  5664  0439  00BA               	movwf	_IOC_state	;volatile
  5665  043A  0008               	return
  5666  043B                     __end_of__IOC_Ready:	
  5667                           
  5668                           	psect	text43
  5669  02DC                     __ptext43:	
  5670 ;; *************** function _EUSART_Transmit_ISR *****************
  5671 ;; Defined at:
  5672 ;;		line 172 in file "mcc_generated_files/eusart.c"
  5673 ;; Parameters:    Size  Location     Type
  5674 ;;		None
  5675 ;; Auto vars:     Size  Location     Type
  5676 ;;		None
  5677 ;; Return value:  Size  Location     Type
  5678 ;;                  1    wreg      void 
  5679 ;; Registers used:
  5680 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5681 ;; Tracked objects:
  5682 ;;		On entry : 1F/0
  5683 ;;		On exit  : 1E/0
  5684 ;;		Unchanged: 0/0
  5685 ;; Data sizes:     COMMON   BANK0   BANK1
  5686 ;;      Params:         0       0       0
  5687 ;;      Locals:         0       0       0
  5688 ;;      Temps:          0       0       0
  5689 ;;      Totals:         0       0       0
  5690 ;;Total ram usage:        0 bytes
  5691 ;; Hardware stack levels used:    1
  5692 ;; This function calls:
  5693 ;;		Nothing
  5694 ;; This function is called by:
  5695 ;;		_EUSART_Initialize
  5696 ;;		_INTERRUPT_InterruptManager
  5697 ;; This function uses a non-reentrant model
  5698 ;;
  5699                           
  5700                           
  5701                           ;psect for function _EUSART_Transmit_ISR
  5702  02DC                     _EUSART_Transmit_ISR:	
  5703                           
  5704                           ;mcc_generated_files/eusart.c: 176:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  5705                           
  5706                           ;incstack = 0
  5707                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  5708  02DC  3010               	movlw	16
  5709  02DD  027A               	subwf	_eusartTxBufferRemaining,w
  5710  02DE  1803               	skipnc
  5711  02DF  2AEF               	goto	i1l165
  5712                           
  5713                           ;mcc_generated_files/eusart.c: 177:     {;mcc_generated_files/eusart.c: 178:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
  5714  02E0  083E               	movf	_eusartTxTail,w
  5715  02E1  3EA0               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  5716  02E2  0086               	movwf	6
  5717  02E3  0187               	clrf	7
  5718  02E4  0801               	movf	1,w
  5719  02E5  0023               	movlb	3	; select bank3
  5720  02E6  009A               	movwf	26	;volatile
  5721  02E7  0020               	movlb	0	; select bank0
  5722  02E8  0ABE               	incf	_eusartTxTail,f	;volatile
  5723                           
  5724                           ;mcc_generated_files/eusart.c: 179:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  5725  02E9  3010               	movlw	16
  5726  02EA  023E               	subwf	_eusartTxTail,w
  5727  02EB  1803               	btfsc	3,0
  5728                           
  5729                           ;mcc_generated_files/eusart.c: 180:         {;mcc_generated_files/eusart.c: 181:        
      +                               eusartTxTail = 0;
  5730  02EC  01BE               	clrf	_eusartTxTail	;volatile
  5731                           
  5732                           ;mcc_generated_files/eusart.c: 183:         eusartTxBufferRemaining++;
  5733  02ED  0AFA               	incf	_eusartTxBufferRemaining,f	;volatile
  5734                           
  5735                           ;mcc_generated_files/eusart.c: 184:     }
  5736  02EE  0008               	return
  5737  02EF                     i1l165:	
  5738                           ;mcc_generated_files/eusart.c: 185:     else
  5739                           
  5740                           
  5741                           ;mcc_generated_files/eusart.c: 186:     {;mcc_generated_files/eusart.c: 187:         PIE
      +                          1bits.TXIE = 0;
  5742  02EF  0021               	movlb	1	; select bank1
  5743  02F0  1211               	bcf	17,4	;volatile
  5744  02F1  0008               	return
  5745  02F2                     __end_of_EUSART_Transmit_ISR:	
  5746                           
  5747                           	psect	text44
  5748  02F2                     __ptext44:	
  5749 ;; *************** function _EUSART_Receive_ISR *****************
  5750 ;; Defined at:
  5751 ;;		line 191 in file "mcc_generated_files/eusart.c"
  5752 ;; Parameters:    Size  Location     Type
  5753 ;;		None
  5754 ;; Auto vars:     Size  Location     Type
  5755 ;;		None
  5756 ;; Return value:  Size  Location     Type
  5757 ;;                  1    wreg      void 
  5758 ;; Registers used:
  5759 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5760 ;; Tracked objects:
  5761 ;;		On entry : 1F/0
  5762 ;;		On exit  : 1F/0
  5763 ;;		Unchanged: 0/0
  5764 ;; Data sizes:     COMMON   BANK0   BANK1
  5765 ;;      Params:         0       0       0
  5766 ;;      Locals:         0       0       0
  5767 ;;      Temps:          0       0       0
  5768 ;;      Totals:         0       0       0
  5769 ;;Total ram usage:        0 bytes
  5770 ;; Hardware stack levels used:    1
  5771 ;; This function calls:
  5772 ;;		Nothing
  5773 ;; This function is called by:
  5774 ;;		_EUSART_Initialize
  5775 ;;		_INTERRUPT_InterruptManager
  5776 ;; This function uses a non-reentrant model
  5777 ;;
  5778                           
  5779                           
  5780                           ;psect for function _EUSART_Receive_ISR
  5781  02F2                     _EUSART_Receive_ISR:	
  5782                           
  5783                           ;mcc_generated_files/eusart.c: 194:     if(1 == RCSTAbits.OERR)
  5784                           
  5785                           ;incstack = 0
  5786                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  5787  02F2  0023               	movlb	3	; select bank3
  5788  02F3  1C9D               	btfss	29,1	;volatile
  5789  02F4  2AF7               	goto	i1l2140
  5790                           
  5791                           ;mcc_generated_files/eusart.c: 195:     {;mcc_generated_files/eusart.c: 198:         RCS
      +                          TAbits.CREN = 0;
  5792  02F5  121D               	bcf	29,4	;volatile
  5793                           
  5794                           ;mcc_generated_files/eusart.c: 199:         RCSTAbits.CREN = 1;
  5795  02F6  161D               	bsf	29,4	;volatile
  5796  02F7                     i1l2140:	
  5797                           
  5798                           ;mcc_generated_files/eusart.c: 203:     eusartRxBuffer[eusartRxHead++] = RCREG;
  5799  02F7  0020               	movlb	0	; select bank0
  5800  02F8  083D               	movf	_eusartRxHead,w
  5801  02F9  3E20               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  5802  02FA  0086               	movwf	6
  5803  02FB  0187               	clrf	7
  5804  02FC  0023               	movlb	3	; select bank3
  5805  02FD  0819               	movf	25,w	;volatile
  5806  02FE  0081               	movwf	1
  5807  02FF  0020               	movlb	0	; select bank0
  5808  0300  0ABD               	incf	_eusartRxHead,f	;volatile
  5809                           
  5810                           ;mcc_generated_files/eusart.c: 204:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  5811  0301  3008               	movlw	8
  5812  0302  023D               	subwf	_eusartRxHead,w
  5813  0303  1803               	btfsc	3,0
  5814                           
  5815                           ;mcc_generated_files/eusart.c: 205:     {;mcc_generated_files/eusart.c: 206:         eus
      +                          artRxHead = 0;
  5816  0304  01BD               	clrf	_eusartRxHead	;volatile
  5817                           
  5818                           ;mcc_generated_files/eusart.c: 208:     eusartRxCount++;
  5819  0305  0ABB               	incf	_eusartRxCount,f	;volatile
  5820  0306  0008               	return
  5821  0307                     __end_of_EUSART_Receive_ISR:	
  5822                           
  5823                           	psect	text45
  5824  049F                     __ptext45:	
  5825 ;; *************** function _ADC_ISR *****************
  5826 ;; Defined at:
  5827 ;;		line 140 in file "mcc_generated_files/adc.c"
  5828 ;; Parameters:    Size  Location     Type
  5829 ;;		None
  5830 ;; Auto vars:     Size  Location     Type
  5831 ;;		None
  5832 ;; Return value:  Size  Location     Type
  5833 ;;                  1    wreg      void 
  5834 ;; Registers used:
  5835 ;;		None
  5836 ;; Tracked objects:
  5837 ;;		On entry : 1F/0
  5838 ;;		On exit  : 1F/0
  5839 ;;		Unchanged: 0/0
  5840 ;; Data sizes:     COMMON   BANK0   BANK1
  5841 ;;      Params:         0       0       0
  5842 ;;      Locals:         0       0       0
  5843 ;;      Temps:          0       0       0
  5844 ;;      Totals:         0       0       0
  5845 ;;Total ram usage:        0 bytes
  5846 ;; Hardware stack levels used:    1
  5847 ;; This function calls:
  5848 ;;		Nothing
  5849 ;; This function is called by:
  5850 ;;		_INTERRUPT_InterruptManager
  5851 ;; This function uses a non-reentrant model
  5852 ;;
  5853                           
  5854                           
  5855                           ;psect for function _ADC_ISR
  5856  049F                     _ADC_ISR:	
  5857                           
  5858                           ;mcc_generated_files/adc.c: 143:     PIR1bits.ADIF = 0;
  5859                           
  5860                           ;incstack = 0
  5861                           ; Regs used in _ADC_ISR: []
  5862  049F  1311               	bcf	17,6	;volatile
  5863  04A0  0008               	return
  5864  04A1                     __end_of_ADC_ISR:	
  5865                           
  5866                           	psect	text46
  5867  03FF                     __ptext46:	
  5868 ;; *************** function _ADC_GetConversionResult *****************
  5869 ;; Defined at:
  5870 ;;		line 106 in file "mcc_generated_files/adc.c"
  5871 ;; Parameters:    Size  Location     Type
  5872 ;;		None
  5873 ;; Auto vars:     Size  Location     Type
  5874 ;;		None
  5875 ;; Return value:  Size  Location     Type
  5876 ;;                  2    0[COMMON] unsigned short 
  5877 ;; Registers used:
  5878 ;;		wreg
  5879 ;; Tracked objects:
  5880 ;;		On entry : 1F/0
  5881 ;;		On exit  : 1F/1
  5882 ;;		Unchanged: 0/0
  5883 ;; Data sizes:     COMMON   BANK0   BANK1
  5884 ;;      Params:         2       0       0
  5885 ;;      Locals:         0       0       0
  5886 ;;      Temps:          0       0       0
  5887 ;;      Totals:         2       0       0
  5888 ;;Total ram usage:        2 bytes
  5889 ;; Hardware stack levels used:    1
  5890 ;; This function calls:
  5891 ;;		Nothing
  5892 ;; This function is called by:
  5893 ;;		_INTERRUPT_InterruptManager
  5894 ;; This function uses a non-reentrant model
  5895 ;;
  5896                           
  5897                           
  5898                           ;psect for function _ADC_GetConversionResult
  5899  03FF                     _ADC_GetConversionResult:	
  5900                           
  5901                           ;mcc_generated_files/adc.c: 109:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  5902                           
  5903                           ;incstack = 0
  5904                           ; Regs used in _ADC_GetConversionResult: [wreg]
  5905  03FF  0021               	movlb	1	; select bank1
  5906  0400  081C               	movf	28,w	;volatile
  5907  0401  00F1               	movwf	?_ADC_GetConversionResult+1
  5908  0402  01F0               	clrf	?_ADC_GetConversionResult
  5909  0403  081B               	movf	27,w	;volatile
  5910  0404  07F0               	addwf	?_ADC_GetConversionResult,f
  5911  0405  1803               	skipnc
  5912  0406  0AF1               	incf	?_ADC_GetConversionResult+1,f
  5913  0407  0008               	return
  5914  0408                     __end_of_ADC_GetConversionResult:	
  5915  007E                     btemp	set	126	;btemp
  5916  007E                     int$flags	set	126
  5917  007E                     wtemp0	set	126


Data Sizes:
    Strings     222
    Constant    0
    Data        0
    BSS         82
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     23      73
    BANK1            32      0      32

Pointer List with Targets:

    sp__strchr	PTR unsigned char  size(1) Largest target is 16
		 -> NULL(NULL[0]), esp_read_data(BANK1[16]), 

    ESP_Set_application_handler@applicationHandler	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> process_message(), ESP_default_application_handler(), 

    ESP_external_message_handler	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> process_message(), ESP_default_application_handler(), Absolute function(), 

    sp__strstr	PTR unsigned char  size(1) Largest target is 16
		 -> NULL(NULL[0]), esp_read_data(BANK1[16]), 

    _sprintf@mess	PTR unsigned char  size(1) Largest target is 6
		 -> read_analog@mess(BANK0[6]), 

    write@pt	PTR unsigned char  size(1) Largest target is 16
		 -> read_wifi_settings@pass(COMMON[14]), read_wifi_settings@wifi(COMMON[10]), read_analog@mess(BANK0[6]), WIFI_tx_buf(BANK0[16]), 
		 -> ESP_write@res(COMMON[1]), ESP_write@aux(COMMON[1]), 

    _puts@pt	PTR unsigned char  size(2) Largest target is 22
		 -> STR_29(CODE[13]), STR_28(CODE[22]), STR_27(CODE[13]), STR_26(CODE[18]), 
		 -> STR_25(CODE[13]), STR_24(CODE[3]), STR_23(CODE[3]), STR_22(CODE[7]), 
		 -> STR_21(CODE[7]), STR_20(CODE[4]), STR_19(CODE[3]), STR_18(CODE[3]), 
		 -> STR_17(CODE[2]), STR_16(CODE[12]), STR_14(CODE[20]), STR_13(CODE[14]), 
		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[11]), STR_9(CODE[14]), 
		 -> STR_8(CODE[5]), 

    IOCAF4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> _IOC_Ready(), IOCAF4_DefaultInterruptHandler(), 

    IOCAF4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> _IOC_Ready(), IOCAF4_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> _TMR1_Ready(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> _TMR1_Ready(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Transmit_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 


Critical Paths under _main in COMMON

    _read_analog->___lmul
    _write->_EUSART_Write
    __sprintf->___lwdiv
    _process_ioc->__puts
    _logger_initialize->_ADC_SelectChannel
    _logger_initialize->_ESP_Set_application_handler
    _logger_initialize->_IOCAF4_SetInterruptHandler
    _logger_initialize->_TMR1_SetInterruptHandler
    _bt_message_handler->_process_message
    _process_message->__puts
    _toggle_format->__puts
    __puts->_EUSART_Write
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCAF4_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_ADC_GetConversionResult
    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->_read_analog
    _read_analog->__sprintf
    _bt_message_handler->_process_message

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    9287
                                             21 BANK0      2     2      0
                 _EUSART_is_rx_ready
                  _SYSTEM_Initialize
                 _bt_message_handler
                  _logger_initialize
                        _process_ioc
                        _read_analog
 ---------------------------------------------------------------------------------
 (1) _read_analog                                         16    16      0    3446
                                              5 BANK0     16    16      0
                             ___lmul
                           __sprintf
                              _write
 ---------------------------------------------------------------------------------
 (2) _write                                                4     3      1    1024
                                              3 COMMON     4     3      1
                       _EUSART_Write
                 _EUSART_is_tx_ready
 ---------------------------------------------------------------------------------
 (2) __sprintf                                             5     3      2    1873
                                              0 BANK0      5     3      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     615
                                              2 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     244
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _process_ioc                                          0     0      0    1522
                              __puts
 ---------------------------------------------------------------------------------
 (1) _logger_initialize                                    0     0      0     520
                  _ADC_SelectChannel
        _ESP_Set_application_handler
         _IOCAF4_SetInterruptHandler
           _TMR1_SetInterruptHandler
                     _TMR1_StopTimer
 ---------------------------------------------------------------------------------
 (2) _ESP_Set_application_handler                          2     0      2     150
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _bt_message_handler                                   1     1      0    3255
                                              2 BANK0      1     1      0
                        _EUSART_Read
                    _process_message
 ---------------------------------------------------------------------------------
 (2) _process_message                                      3     2      1    3197
                                              9 COMMON     1     0      1
                                              0 BANK0      2     2      0
                _ADC_StartConversion
                    _TMR1_StartTimer
                     _TMR1_StopTimer
                              __puts
                      _toggle_format
 ---------------------------------------------------------------------------------
 (3) _toggle_format                                        0     0      0    1522
                              __puts
 ---------------------------------------------------------------------------------
 (2) __puts                                                6     4      2    1522
                                              3 COMMON     6     4      2
                       _EUSART_Write
                 _EUSART_is_tx_ready
 ---------------------------------------------------------------------------------
 (3) _EUSART_is_tx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      44
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read                                          1     1      0      24
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     544
                     _ADC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR1_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
         _IOCAF4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _IOCAF4_SetInterruptHandler                           2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     196
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0     229
                   Absolute function *
            _ADC_GetConversionResult
                            _ADC_ISR
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR1_ISR                                             0     0      0     229
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                        __TMR1_Ready *
 ---------------------------------------------------------------------------------
 (8) __TMR1_Ready                                          0     0      0       0
              i1_ADC_StartConversion
 ---------------------------------------------------------------------------------
 (9) i1_ADC_StartConversion                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR1_WriteTimer                                      2     0      2     229
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (8) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _PIN_MANAGER_IOC                                      0     0      0       0
                         _IOCAF4_ISR
 ---------------------------------------------------------------------------------
 (8) _IOCAF4_ISR                                           0     0      0       0
                   Absolute function *
     _IOCAF4_DefaultInterruptHandler *
                         __IOC_Ready *
 ---------------------------------------------------------------------------------
 (9) __IOC_Ready                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _IOCAF4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ADC_GetConversionResult                              2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_is_rx_ready
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCAF4_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize
   _bt_message_handler
     _EUSART_Read
     _process_message
       _ADC_StartConversion
       _TMR1_StartTimer
       _TMR1_StopTimer
       __puts
         _EUSART_Write
         _EUSART_is_tx_ready
       _toggle_format
         __puts
           _EUSART_Write
           _EUSART_is_tx_ready
   _logger_initialize
     _ADC_SelectChannel
     _ESP_Set_application_handler
     _IOCAF4_SetInterruptHandler
     _TMR1_SetInterruptHandler
     _TMR1_StopTimer
   _process_ioc
     __puts
       _EUSART_Write
       _EUSART_is_tx_ready
   _read_analog
     ___lmul
     __sprintf
       ___lwdiv
       ___lwmod
     _write
       _EUSART_Write
       _EUSART_is_tx_ready

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADC_GetConversionResult *
   _ADC_ISR *
   _EUSART_Receive_ISR *
   _EUSART_Transmit_ISR *
   _PIN_MANAGER_IOC *
     _IOCAF4_ISR
       Absolute function(Fake) *
       _IOCAF4_DefaultInterruptHandler *
       __IOC_Ready *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     __TMR1_Ready *
       i1_ADC_StartConversion

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      75       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     17      49       6       91.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0      20       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      75       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Sep  5 12:27:07 2018

                ?_EUSART_SetRxInterruptHandler 0072                                              pc 0002  
                                  __CFG_CP$OFF 0000                                            l211 03F2  
                                          l159 028A                                            l418 013E  
                                          l641 0155                                            l553 04A1  
                                          l635 016D                                            l638 0152  
                                          l783 01BD                                   __CFG_CPD$OFF 0000  
                                          u605 0233                                            u565 01A9  
                              _timer1ReloadVal 002A                                __end_of_ADC_ISR 04A1  
                                 __CFG_BORV$LO 0000                                            wreg 0009  
                                 __CFG_IESO$ON 0000                                           S2480 016E  
                                 ?_EUSART_Read 0070                                   __CFG_LVP$OFF 0000  
                               ?_toggle_format 0070                                           l2032 031D  
                                         l2026 0321                                           l2212 0385  
                                         l2330 0146                                           l2402 00DC  
                                         l2332 0147                                           l2342 014F  
                                         l2334 0148                                           l2326 0140  
                                         l2094 01C7                                           l2430 0136  
                                         l2328 0141                                           l1802 0297  
                                         l2338 014B                                           l2434 013A  
                                         l2426 0131                                           l1812 01DF  
                                         l1804 01DE                                           l2348 0158  
                                         l1902 0200                                           l1814 048A  
                                         l1806 01ED                                           l1834 034A  
                                         l1828 0340                                           l1860 01B0  
                                         l1852 01A1                                           l1934 02B0  
                                         l2478 0160                                           l1864 01B4  
                                         l1880 0239                                           l1788 0280  
                                         l1876 022D                                           l1884 023D  
                                         STR_1 0408                                           STR_3 03E2  
                                         STR_4 043B                                           STR_5 046A  
                                         STR_6 0410                                           STR_7 0426  
                                         STR_8 0465                                           STR_9 0360  
                                         u1005 00F9                                           u1047 011B  
                                         u1057 012A                                           _LATA 010C  
                                         _LATC 010E                                           i1l81 0031  
                                         i1l74 000B                                           i1l77 0015  
                                         i1l86 003C                                           i1l79 0025  
                                         _PLLR 04D6                                           _WPUA 020C  
                                         _WPUC 020E                                   __CFG_WRT$OFF 0000  
                                __CFG_FCMEN$ON 0000                                           _main 010F  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                  __CFG_BOREN$ON 0000  
                                   __IOC_Ready 0434                                           start 003E  
                   ??_TMR1_SetInterruptHandler 0074                                  __CFG_MCLRE$ON 0000  
                          __end_of__TMR1_Ready 0434                             _ESP_wait_exception 0037  
                                __CFG_PLLEN$ON 0000                                  ?_EUSART_Write 0070  
               __size_of_OSCILLATOR_Initialize 000A                            __size_of_IOCAF4_ISR 000D  
                __end_of_OSCILLATOR_Initialize 03F6                                          ?_main 0070  
                                        STR_10 03D7                                          STR_11 047C  
                                        STR_12 0478                                          STR_20 0474  
                                        STR_21 041F                                          STR_13 036E  
                                        STR_22 0418                                          STR_14 0307  
                                        STR_15 0495                                          STR_23 0484  
                                        STR_24 0487                                          STR_16 03BF  
                                        STR_17 0493                                          STR_25 0398  
                                __CFG_WDTE$OFF 0000                                          STR_26 032E  
                                        STR_27 03A5                                          STR_28 029A  
                              _TMR1_StartTimer 049B                                          _T1CON 0018  
                              __end_of___lwdiv 01B9                                          i1l165 02EF  
                              __end_of___lwmod 0242                   ?_ESP_Set_application_handler 0072  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        _TMR1H 0017                                          _TMR1L 0016  
                                        _TRISA 008C                                          _TRISC 008E  
                       ?i1_ADC_StartConversion 0070                                          _TXREG 019A  
                   __end_of_bt_message_handler 0474                                          _TXSTA 019E  
             __size_of_ADC_GetConversionResult 0009                                   ?_read_analog 0070  
                          ___lmul@multiplicand 0076                               __end_of_TMR1_ISR 0360  
                      __end_of_PIN_MANAGER_IOC 0484                                          __puts 01DE  
                               _WDT_Initialize 048D                                          _write 031B  
                      __end_of_TMR1_Initialize 02DC                                          pclath 000A  
                                        status 0003                                          wtemp0 007E  
                   __size_of_logger_initialize 001D                                _TMR1_WriteTimer 038A  
                              __initialization 003F                                   __end_of_main 0140  
                               ??_EUSART_Write 0072                                      ??_ADC_ISR 0070  
                  ?_INTERRUPT_InterruptManager 0070                 ??_EUSART_SetRxInterruptHandler 0074  
                                       ??_main 0065                        _IOCAF4_InterruptHandler 0067  
                       __end_of_WDT_Initialize 0490                  ??_ESP_Set_application_handler 0074  
                              ??_toggle_format 0079                                         ?__puts 0073  
                                       _ADCON0 009D                                         _ADCON1 009E  
                                       _ADRESH 009C                                         _ADRESL 009B  
                                       _APFCON 011D                                         _ANSELA 018C  
                                       _ANSELC 018E                     __end_of_EUSART_is_rx_ready 0493  
                                       _BORCON 0116                                         _T1GCON 0019  
                                       ?_write 0073                        TMR1_WriteTimer@timerVal 0070  
                                       i1l2022 03BC                                         i1l2016 0393  
                                       i1l2018 03B2                                         i1l2140 02F7  
                   __end_of_EUSART_is_tx_ready 0499                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                  __TMR1_Ready 042D                                         _WDTCON 0097  
                                  ?__IOC_Ready 0070                                 __CFG_PWRTE$OFF 0000  
         __end_of_TMR1_DefaultInterruptHandler 04A3          __size_of_TMR1_DefaultInterruptHandler 0001  
                                _esp_read_data 00B0                   _TMR1_DefaultInterruptHandler 04A2  
                             __end_of__sprintf 00BC                                         ___lmul 01B9  
                      __end_of_TMR1_StartTimer 049D                                 __CFG_STVREN$ON 0000  
                                    ??___lwdiv 0076                                      ??___lwmod 0076  
                          _EUSART_Transmit_ISR 02DC                                ?_WDT_Initialize 0070  
   IOCAF4_SetInterruptHandler@InterruptHandler 0072       TMR1_SetInterruptHandler@InterruptHandler 0072  
                             ?_PIN_MANAGER_IOC 0070                                         write@i 0075  
                      __end_of_TMR1_WriteTimer 0398                                   ??_IOCAF4_ISR 0070  
                         ?_EUSART_Transmit_ISR 0070                                   ?_process_ioc 0070  
                             ?_TMR1_Initialize 0070                           __size_of_EUSART_Read 0016  
                            _SYSTEM_Initialize 0447                        __end_of__initialization 004D  
                           read_analog@adc_val 0063                             ?_SYSTEM_Initialize 0070  
         __size_of_ESP_Set_application_handler 0001           __end_of_EUSART_SetTxInterruptHandler 045F  
        __size_of_EUSART_SetTxInterruptHandler 0006                   _EUSART_SetTxInterruptHandler 0459  
                 __size_of_ADC_StartConversion 0003                                 __pcstackCOMMON 0070  
                          ??_SYSTEM_Initialize 0074                                      ?_TMR1_ISR 0070  
                ?_TMR1_DefaultInterruptHandler 0070                                  __end_of__puts 0200  
       __end_of_IOCAF4_DefaultInterruptHandler 04A4        __size_of_IOCAF4_DefaultInterruptHandler 0001  
               _IOCAF4_DefaultInterruptHandler 04A3                                  __end_of_write 032E  
                           __end_of_IOCAF4_ISR 03BF                        _ADC_GetConversionResult 03FF  
                               _OPTION_REGbits 0095                            __size_of__IOC_Ready 0007  
                     __size_of_process_message 002E                                        ??__puts 0075  
                         __size_of_read_analog 0053                      __end_of_SYSTEM_Initialize 044D  
                        ??_EUSART_Transmit_ISR 0070                                        ??_write 0074  
                                   __pbssBANK0 0020                                     __pbssBANK1 00A0  
                         __end_of_EUSART_Write 029A                    __size_of_EUSART_Receive_ISR 0015  
                                   __pmaintext 010F                  ?_EUSART_SetTxInterruptHandler 0072  
             _EUSART_TxDefaultInterruptHandler 0030                                        ?___lmul 0072  
                             ?_TMR1_StartTimer 0070                                     ??_TMR1_ISR 0072  
                                   __pintentry 0004                                        _ADC_ISR 049F  
                                      _BAUDCON 019F                                 ___lmul@product 0050  
                      ??i1_ADC_StartConversion 0070                        __size_of_ADC_Initialize 0009  
                      __size_of_TMR1_StopTimer 0002                                  _eusartRxCount 003B  
                                      _OSCTUNE 0098                                      ?__sprintf 0050  
                             ?_TMR1_WriteTimer 0070                             _bt_message_handler 046F  
                                    _ADC_count 0035                                      _ADC_value 002C  
                          ?_bt_message_handler 0070                                      _ADC_state 003F  
                              __size_of___lmul 0025                                        ___lwdiv 0194  
                                      ___lwmod 0222                      ??_ADC_GetConversionResult 0072  
                                      __ptext1 00BC                                        __ptext2 031B  
                                      __ptext3 0050                                        __ptext4 0222  
                                      __ptext5 0194                                        __ptext6 01B9  
                                      __ptext7 037C                                        __ptext8 0262  
                                      __ptext9 04A1                 ??_TMR1_DefaultInterruptHandler 0070  
                                    _T1CONbits 0018                          _OSCILLATOR_Initialize 03EC  
            __size_of_TMR1_SetInterruptHandler 0006                       ??_PIN_MANAGER_Initialize 0074  
                    ?_TMR1_SetInterruptHandler 0072                                      _IOCAFbits 0393  
                                    _IOCANbits 0392                                      _IOCAPbits 0391  
                         ??_bt_message_handler 007A                     __size_of_SYSTEM_Initialize 0006  
                                      clrloop0 0442                                     ??__sprintf 0079  
                         end_of_initialization 004D                                   ?__TMR1_Ready 0070  
                            ??_process_message 0050                           __size_of_process_ioc 000E  
                                 ??__IOC_Ready 0070                              _EUSART_Initialize 0200  
                                    _IOC_value 0033                                      _IOC_state 003A  
                           ?_EUSART_Initialize 0070                                      _RCSTAbits 019D  
                           _EUSART_is_rx_ready 0490                             _EUSART_is_tx_ready 0497  
                                 __sprintf@aux 0052                                   __sprintf@val 0050  
                          ??_EUSART_Initialize 0074                                        write@pt 0076  
                             ??_WDT_Initialize 0072                 ??_EUSART_SetTxInterruptHandler 0074  
                                    _PORTAbits 000C                            ?_EUSART_is_rx_ready 0070  
                          ?_EUSART_is_tx_ready 0070                               __CFG_FOSC$INTOSC 0000  
                           __end_of__IOC_Ready 043B                          __size_of_EUSART_Write 001B  
                          _ADC_StartConversion 048A                   ??_IOCAF4_SetInterruptHandler 0074  
                        __end_of_toggle_format 0350                      __end_of_EUSART_Initialize 0222  
                         ??_EUSART_is_rx_ready 0072                           ??_EUSART_is_tx_ready 0072  
                         ?_ADC_StartConversion 0070                                 __end_of___lmul 01DE  
ESP_Set_application_handler@applicationHandler 0072                                   _EUSART_Write 027F  
                            __size_of_TMR1_ISR 0010                                 _ADC_Initialize 03F6  
          __size_of_IOCAF4_SetInterruptHandler 0006                                 _TMR1_StopTimer 0499  
                       ?_OSCILLATOR_Initialize 0070            __end_of_ESP_Set_application_handler 04A2  
                  _ESP_Set_application_handler 04A1                            start_initialization 003F  
              __size_of_PIN_MANAGER_Initialize 0020                                  ??_EUSART_Read 0072  
 EUSART_SetRxInterruptHandler@interruptHandler 0072   EUSART_SetTxInterruptHandler@interruptHandler 0072  
                     __size_of_PIN_MANAGER_IOC 0004                          ??_ADC_StartConversion 0072  
                     __size_of_TMR1_Initialize 0016                                       ??___lmul 007A  
                       __end_of_ADC_Initialize 03FF                         __end_of_TMR1_StopTimer 049B  
                                     ?_ADC_ISR 0070                 __size_ofi1_ADC_StartConversion 0002  
                __end_ofi1_ADC_StartConversion 049F                    __end_of_EUSART_Transmit_ISR 02F2  
                                ??_read_analog 0055                                    __pbssCOMMON 007A  
                                    ___latbits 0000                _ESP_default_application_handler 0000  
                                __pcstackBANK0 0050                                _WIFI_tx_buf_ind 0032  
                   __end_of_EUSART_Receive_ISR 0307                     __size_of_EUSART_Initialize 0022  
                            __size_of__sprintf 006C               _EUSART_RxDefaultInterruptHandler 002E  
                          __end_of_EUSART_Read 02C6                                read_analog@aux1 005F  
                                    __pnvBANK0 0067                                read_analog@mess 0059  
                         __size_of__TMR1_Ready 0007                               ___lwdiv@dividend 0074  
                       _PIN_MANAGER_Initialize 0242                           EUSART_Read@readValue 0072  
                            _ADC_SelectChannel 03CB               __end_of_TMR1_SetInterruptHandler 0453  
                                     ?___lwdiv 0072                                       ?___lwmod 0072  
                              ?_ADC_Initialize 0070                                   _eusartRxHead 003D  
                              ?_TMR1_StopTimer 0070                             ?_ADC_SelectChannel 0070  
                                 _eusartTxHead 007B                                   _eusartRxTail 003C  
                                 _eusartTxTail 003E                   ??_INTERRUPT_InterruptManager 0072  
                                    __pswtext1 016E                        _eusartTxBufferRemaining 007A  
                     __size_of_TMR1_StartTimer 0002                            ??_ADC_SelectChannel 0072  
                              _process_message 0140             __end_of_IOCAF4_SetInterruptHandler 0459  
                   _IOCAF4_SetInterruptHandler 0453                               ___lwdiv@quotient 0076  
                               __size_of__puts 0022                                 __size_of_write 0013  
                          __end_of_read_analog 010F                                 _eusartRxBuffer 0020  
                               _eusartTxBuffer 00A0                                       _LATAbits 010C  
                                    clear_ram0 0441                                    __puts@index 0078  
                                     _PIE1bits 0091                      __end_of_ADC_SelectChannel 03D7  
                     __size_of_TMR1_WriteTimer 000E            __size_of_INTERRUPT_InterruptManager 003A  
                                  write@lenght 0073                                       _PIR1bits 0011  
                                     _TMR1_ISR 0350                              ??_PIN_MANAGER_IOC 0070  
                            ??_TMR1_Initialize 0074                               __size_of_ADC_ISR 0002  
                                   _ADCON0bits 009D                       ADC_SelectChannel@channel 0073  
                  __size_of_bt_message_handler 0005                                    _EUSART_Read 02B0  
                            ___lmul@multiplier 0072                                  ??_process_ioc 0079  
                                  _esp_channel 0038                       ?_ADC_GetConversionResult 0070  
                      ??_OSCILLATOR_Initialize 0072                               __size_of___lwdiv 0025  
                      __end_of_process_message 016E                               __size_of___lwmod 0020  
                     _TMR1_SetInterruptHandler 044D                          _TMR1_InterruptHandler 0028  
                                  _read_analog 00BC                            _esp_read_data_index 0039  
                              ___lwdiv@divisor 0072                                ___lwdiv@counter 0078  
                                     __ptext10 03CB                                       __ptext11 046F  
                                     __ptext20 02B0                                       __ptext12 0140  
                                     __ptext21 0447                                       __ptext13 0340  
                                     __ptext30 045F                                       __ptext22 048D  
                                     __ptext14 01DE                                       __ptext31 03F6  
                                     __ptext23 02C6                                       __ptext15 0497  
                                     __ptext40 03B2                                       __ptext32 0490  
                                     __ptext24 044D                                       __ptext16 027F  
                                     __ptext41 04A3                                       __ptext25 0242  
                                     __ptext17 0499                                       __ptext42 0434  
                                     __ptext34 0350                                       __ptext26 0453  
                                     __ptext18 049B                                       __ptext43 02DC  
                                     __ptext35 04A2                                       __ptext27 03EC  
                                     __ptext19 048A                                       __ptext44 02F2  
                                     __ptext36 042D                                       __ptext28 0200  
                                     __ptext45 049F                                       __ptext37 049D  
                                     __ptext29 0459                                       __ptext46 03FF  
                                     __ptext38 038A                                       __ptext39 0480  
                                     __puts@pt 0073                         process_message@message 0079  
                                     __sprintf 0050                              ??_TMR1_StartTimer 0072  
                                   _IOCAF4_ISR 03B2                                 _message_format 0036  
                  __size_of_EUSART_is_rx_ready 0003                                  __size_of_main 0031  
                  __size_of_EUSART_is_tx_ready 0002                     __size_of_ADC_SelectChannel 000C  
                          __end_of_process_ioc 038A                                       int$flags 007E  
                       __size_of_toggle_format 0010             __end_of_INTERRUPT_InterruptManager 003E  
                   _INTERRUPT_InterruptManager 0004                              ??_TMR1_WriteTimer 0072  
                                   _INTCONbits 000B                                 __pstringtext10 03E2  
                               __pstringtext11 0408                                 __pstringtext20 0478  
                               __pstringtext12 0410                                 __pstringtext21 047C  
                               __pstringtext13 0418                                 __pstringtext22 0484  
                               __pstringtext14 041F                                 __pstringtext23 0487  
                               __pstringtext15 0426                                 __pstringtext24 0493  
                               __pstringtext16 043B                                 __pstringtext25 0495  
                               __pstringtext17 0465                                 __pstringtext26 0000  
                               __pstringtext18 046A                                 __pstringtext19 0474  
                      __size_of_WDT_Initialize 0003                                       intlevel1 0000  
                  __end_of_ADC_StartConversion 048D                               ___lwmod@dividend 0074  
                      ?_PIN_MANAGER_Initialize 0070                __end_of_ADC_GetConversionResult 0408  
                            __CFG_CLKOUTEN$OFF 0000                               ??_ADC_Initialize 0072  
         __end_of_EUSART_SetRxInterruptHandler 0465          __size_of_EUSART_SetRxInterruptHandler 0006  
                 _EUSART_SetRxInterruptHandler 045F                              _logger_initialize 0262  
                             ??_TMR1_StopTimer 0072                             ?_logger_initialize 0070  
                           _EUSART_Receive_ISR 02F2                               ?_process_message 0079  
                                __sprintf@mess 0054                                  __pstringtext1 029A  
                                __pstringtext2 0307                                  __pstringtext3 032E  
                                __pstringtext4 0360                                  __pstringtext5 036E  
                                __pstringtext6 0398                                  __pstringtext7 03A5  
                                __pstringtext8 03BF                                  __pstringtext9 03D7  
                          ??_logger_initialize 0074                            ?_EUSART_Receive_ISR 0070  
                              ___lwmod@divisor 0072                                ___lwmod@counter 0076  
                        i1_ADC_StartConversion 049D                    ?_IOCAF4_SetInterruptHandler 0072  
                                _toggle_format 0340                                    _WIFI_tx_buf 0040  
                                  ?_IOCAF4_ISR 0070                             EUSART_Write@txData 0072  
                 __size_of_EUSART_Transmit_ISR 0016                                     _TMR1_state 0034  
               __end_of_PIN_MANAGER_Initialize 0262                                    _process_ioc 037C  
                    bt_message_handler@message 0052                                  ??__TMR1_Ready 0070  
             ??_IOCAF4_DefaultInterruptHandler 0070                ?_IOCAF4_DefaultInterruptHandler 0070  
                              _PIN_MANAGER_IOC 0480                      __end_of_logger_initialize 027F  
                         ??_EUSART_Receive_ISR 0070                                _TMR1_Initialize 02C6  
