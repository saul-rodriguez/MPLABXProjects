

Microchip Technology PIC PRO Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Sep  5 13:14:19 2018

Microchip Technology Omniscient Code Generator v2.00 (PRO mode) build 20180527130849
     1                           	processor	12LF1822
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	stringtext12,global,class=STRCODE,delta=2
    17                           	psect	stringtext13,global,class=STRCODE,delta=2
    18                           	psect	stringtext14,global,class=STRCODE,delta=2
    19                           	psect	stringtext15,global,class=STRCODE,delta=2
    20                           	psect	stringtext16,global,class=STRCODE,delta=2
    21                           	psect	stringtext17,global,class=STRCODE,delta=2
    22                           	psect	stringtext18,global,class=STRCODE,delta=2
    23                           	psect	stringtext19,global,class=STRCODE,delta=2
    24                           	psect	stringtext20,global,class=STRCODE,delta=2
    25                           	psect	stringtext21,global,class=STRCODE,delta=2
    26                           	psect	stringtext22,global,class=STRCODE,delta=2
    27                           	psect	stringtext23,global,class=STRCODE,delta=2
    28                           	psect	stringtext24,global,class=STRCODE,delta=2
    29                           	psect	stringtext25,global,class=STRCODE,delta=2
    30                           	psect	stringtext26,global,class=STRCODE,delta=2
    31                           	psect	cinit,global,class=CODE,merge=1,delta=2
    32                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    33                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    34                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    35                           	psect	clrtext,global,class=CODE,delta=2
    36                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    37                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    38                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    39                           	psect	text1,local,class=CODE,merge=1,delta=2
    40                           	psect	text2,local,class=CODE,merge=1,delta=2
    41                           	psect	text3,local,class=CODE,merge=1,delta=2
    42                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text7,local,class=CODE,merge=1,delta=2
    46                           	psect	text8,local,class=CODE,merge=1,delta=2
    47                           	psect	text9,local,class=CODE,merge=1,delta=2
    48                           	psect	text10,local,class=CODE,merge=1,delta=2
    49                           	psect	text11,local,class=CODE,merge=1,delta=2
    50                           	psect	text12,local,class=CODE,merge=1,delta=2
    51                           	psect	swtext1,local,class=CONST,delta=2
    52                           	psect	text13,local,class=CODE,merge=1,delta=2
    53                           	psect	text14,local,class=CODE,merge=1,delta=2
    54                           	psect	text15,local,class=CODE,merge=1,delta=2
    55                           	psect	text16,local,class=CODE,merge=1,delta=2
    56                           	psect	text17,local,class=CODE,merge=1,delta=2
    57                           	psect	text18,local,class=CODE,merge=1,delta=2
    58                           	psect	text19,local,class=CODE,merge=1,delta=2
    59                           	psect	text20,local,class=CODE,merge=1,delta=2
    60                           	psect	text21,local,class=CODE,merge=1,delta=2
    61                           	psect	text22,local,class=CODE,merge=1,delta=2
    62                           	psect	text23,local,class=CODE,merge=1,delta=2
    63                           	psect	text24,local,class=CODE,merge=1,delta=2
    64                           	psect	text25,local,class=CODE,merge=1,delta=2
    65                           	psect	text26,local,class=CODE,merge=1,delta=2
    66                           	psect	text27,local,class=CODE,merge=1,delta=2
    67                           	psect	text28,local,class=CODE,merge=1,delta=2
    68                           	psect	text29,local,class=CODE,merge=1,delta=2
    69                           	psect	text30,local,class=CODE,merge=1,delta=2
    70                           	psect	text31,local,class=CODE,merge=1,delta=2
    71                           	psect	text32,local,class=CODE,merge=1,delta=2
    72                           	psect	intentry,global,class=CODE,delta=2
    73                           	psect	text34,local,class=CODE,merge=1,delta=2
    74                           	psect	text35,local,class=CODE,merge=1,delta=2
    75                           	psect	text36,local,class=CODE,merge=1,delta=2
    76                           	psect	text37,local,class=CODE,merge=1,delta=2
    77                           	psect	text38,local,class=CODE,merge=1,delta=2
    78                           	psect	text39,local,class=CODE,merge=1,delta=2
    79                           	psect	text40,local,class=CODE,merge=1,delta=2
    80                           	psect	text41,local,class=CODE,merge=1,delta=2
    81                           	psect	text42,local,class=CODE,merge=1,delta=2
    82                           	psect	text43,local,class=CODE,merge=1,delta=2
    83                           	psect	text44,local,class=CODE,merge=1,delta=2
    84                           	psect	text45,local,class=CODE,merge=1,delta=2
    85                           	psect	text46,local,class=CODE,merge=1,delta=2
    86                           	psect	pa_nodes0,global,class=CODE,delta=2
    87                           	dabs	1,0x7E,2
    88  0000                     
    89                           ; Version 2.00
    90                           ; Generated 27/05/2018 GMT
    91                           ; 
    92                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    93                           ; All rights reserved.
    94                           ; 
    95                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    96                           ; 
    97                           ; Redistribution and use in source and binary forms, with or without modification, are
    98                           ; permitted provided that the following conditions are met:
    99                           ; 
   100                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   101                           ;        conditions and the following disclaimer.
   102                           ; 
   103                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   104                           ;        of conditions and the following disclaimer in the documentation and/or other
   105                           ;        materials provided with the distribution.
   106                           ; 
   107                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   108                           ;        software without specific prior written permission.
   109                           ; 
   110                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   111                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   112                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   113                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   114                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   115                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   116                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   117                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   118                           ; 
   119                           ; 
   120                           ; Code-generator required, PIC12LF1822 Definitions
   121                           ; 
   122                           ; SFR Addresses
   123  0000                     	;# 
   124  0001                     	;# 
   125  0002                     	;# 
   126  0003                     	;# 
   127  0004                     	;# 
   128  0005                     	;# 
   129  0006                     	;# 
   130  0007                     	;# 
   131  0008                     	;# 
   132  0009                     	;# 
   133  000A                     	;# 
   134  000B                     	;# 
   135  000C                     	;# 
   136  0011                     	;# 
   137  0012                     	;# 
   138  0015                     	;# 
   139  0016                     	;# 
   140  0016                     	;# 
   141  0017                     	;# 
   142  0018                     	;# 
   143  0019                     	;# 
   144  001A                     	;# 
   145  001B                     	;# 
   146  001C                     	;# 
   147  001E                     	;# 
   148  001F                     	;# 
   149  008C                     	;# 
   150  0091                     	;# 
   151  0092                     	;# 
   152  0095                     	;# 
   153  0096                     	;# 
   154  0097                     	;# 
   155  0098                     	;# 
   156  0099                     	;# 
   157  009A                     	;# 
   158  009B                     	;# 
   159  009B                     	;# 
   160  009C                     	;# 
   161  009D                     	;# 
   162  009E                     	;# 
   163  010C                     	;# 
   164  0111                     	;# 
   165  0112                     	;# 
   166  0115                     	;# 
   167  0116                     	;# 
   168  0117                     	;# 
   169  0118                     	;# 
   170  0119                     	;# 
   171  011A                     	;# 
   172  011B                     	;# 
   173  011D                     	;# 
   174  011D                     	;# 
   175  018C                     	;# 
   176  0191                     	;# 
   177  0191                     	;# 
   178  0192                     	;# 
   179  0193                     	;# 
   180  0193                     	;# 
   181  0193                     	;# 
   182  0194                     	;# 
   183  0195                     	;# 
   184  0196                     	;# 
   185  0199                     	;# 
   186  019A                     	;# 
   187  019B                     	;# 
   188  019B                     	;# 
   189  019B                     	;# 
   190  019B                     	;# 
   191  019C                     	;# 
   192  019C                     	;# 
   193  019D                     	;# 
   194  019E                     	;# 
   195  019F                     	;# 
   196  020C                     	;# 
   197  0211                     	;# 
   198  0211                     	;# 
   199  0212                     	;# 
   200  0212                     	;# 
   201  0213                     	;# 
   202  0213                     	;# 
   203  0214                     	;# 
   204  0214                     	;# 
   205  0215                     	;# 
   206  0215                     	;# 
   207  0215                     	;# 
   208  0216                     	;# 
   209  0216                     	;# 
   210  0217                     	;# 
   211  0217                     	;# 
   212  0291                     	;# 
   213  0291                     	;# 
   214  0292                     	;# 
   215  0293                     	;# 
   216  0294                     	;# 
   217  0295                     	;# 
   218  0295                     	;# 
   219  0296                     	;# 
   220  0391                     	;# 
   221  0392                     	;# 
   222  0393                     	;# 
   223  039A                     	;# 
   224  039C                     	;# 
   225  039D                     	;# 
   226  039E                     	;# 
   227  039F                     	;# 
   228  0FE4                     	;# 
   229  0FE5                     	;# 
   230  0FE6                     	;# 
   231  0FE7                     	;# 
   232  0FE8                     	;# 
   233  0FE9                     	;# 
   234  0FEA                     	;# 
   235  0FEB                     	;# 
   236  0FED                     	;# 
   237  0FEE                     	;# 
   238  0FEF                     	;# 
   239  0000                     	;# 
   240  0001                     	;# 
   241  0002                     	;# 
   242  0003                     	;# 
   243  0004                     	;# 
   244  0005                     	;# 
   245  0006                     	;# 
   246  0007                     	;# 
   247  0008                     	;# 
   248  0009                     	;# 
   249  000A                     	;# 
   250  000B                     	;# 
   251  000C                     	;# 
   252  0011                     	;# 
   253  0012                     	;# 
   254  0015                     	;# 
   255  0016                     	;# 
   256  0016                     	;# 
   257  0017                     	;# 
   258  0018                     	;# 
   259  0019                     	;# 
   260  001A                     	;# 
   261  001B                     	;# 
   262  001C                     	;# 
   263  001E                     	;# 
   264  001F                     	;# 
   265  008C                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0095                     	;# 
   269  0096                     	;# 
   270  0097                     	;# 
   271  0098                     	;# 
   272  0099                     	;# 
   273  009A                     	;# 
   274  009B                     	;# 
   275  009B                     	;# 
   276  009C                     	;# 
   277  009D                     	;# 
   278  009E                     	;# 
   279  010C                     	;# 
   280  0111                     	;# 
   281  0112                     	;# 
   282  0115                     	;# 
   283  0116                     	;# 
   284  0117                     	;# 
   285  0118                     	;# 
   286  0119                     	;# 
   287  011A                     	;# 
   288  011B                     	;# 
   289  011D                     	;# 
   290  011D                     	;# 
   291  018C                     	;# 
   292  0191                     	;# 
   293  0191                     	;# 
   294  0192                     	;# 
   295  0193                     	;# 
   296  0193                     	;# 
   297  0193                     	;# 
   298  0194                     	;# 
   299  0195                     	;# 
   300  0196                     	;# 
   301  0199                     	;# 
   302  019A                     	;# 
   303  019B                     	;# 
   304  019B                     	;# 
   305  019B                     	;# 
   306  019B                     	;# 
   307  019C                     	;# 
   308  019C                     	;# 
   309  019D                     	;# 
   310  019E                     	;# 
   311  019F                     	;# 
   312  020C                     	;# 
   313  0211                     	;# 
   314  0211                     	;# 
   315  0212                     	;# 
   316  0212                     	;# 
   317  0213                     	;# 
   318  0213                     	;# 
   319  0214                     	;# 
   320  0214                     	;# 
   321  0215                     	;# 
   322  0215                     	;# 
   323  0215                     	;# 
   324  0216                     	;# 
   325  0216                     	;# 
   326  0217                     	;# 
   327  0217                     	;# 
   328  0291                     	;# 
   329  0291                     	;# 
   330  0292                     	;# 
   331  0293                     	;# 
   332  0294                     	;# 
   333  0295                     	;# 
   334  0295                     	;# 
   335  0296                     	;# 
   336  0391                     	;# 
   337  0392                     	;# 
   338  0393                     	;# 
   339  039A                     	;# 
   340  039C                     	;# 
   341  039D                     	;# 
   342  039E                     	;# 
   343  039F                     	;# 
   344  0FE4                     	;# 
   345  0FE5                     	;# 
   346  0FE6                     	;# 
   347  0FE7                     	;# 
   348  0FE8                     	;# 
   349  0FE9                     	;# 
   350  0FEA                     	;# 
   351  0FEB                     	;# 
   352  0FED                     	;# 
   353  0FEE                     	;# 
   354  0FEF                     	;# 
   355  0000                     	;# 
   356  0001                     	;# 
   357  0002                     	;# 
   358  0003                     	;# 
   359  0004                     	;# 
   360  0005                     	;# 
   361  0006                     	;# 
   362  0007                     	;# 
   363  0008                     	;# 
   364  0009                     	;# 
   365  000A                     	;# 
   366  000B                     	;# 
   367  000C                     	;# 
   368  0011                     	;# 
   369  0012                     	;# 
   370  0015                     	;# 
   371  0016                     	;# 
   372  0016                     	;# 
   373  0017                     	;# 
   374  0018                     	;# 
   375  0019                     	;# 
   376  001A                     	;# 
   377  001B                     	;# 
   378  001C                     	;# 
   379  001E                     	;# 
   380  001F                     	;# 
   381  008C                     	;# 
   382  0091                     	;# 
   383  0092                     	;# 
   384  0095                     	;# 
   385  0096                     	;# 
   386  0097                     	;# 
   387  0098                     	;# 
   388  0099                     	;# 
   389  009A                     	;# 
   390  009B                     	;# 
   391  009B                     	;# 
   392  009C                     	;# 
   393  009D                     	;# 
   394  009E                     	;# 
   395  010C                     	;# 
   396  0111                     	;# 
   397  0112                     	;# 
   398  0115                     	;# 
   399  0116                     	;# 
   400  0117                     	;# 
   401  0118                     	;# 
   402  0119                     	;# 
   403  011A                     	;# 
   404  011B                     	;# 
   405  011D                     	;# 
   406  011D                     	;# 
   407  018C                     	;# 
   408  0191                     	;# 
   409  0191                     	;# 
   410  0192                     	;# 
   411  0193                     	;# 
   412  0193                     	;# 
   413  0193                     	;# 
   414  0194                     	;# 
   415  0195                     	;# 
   416  0196                     	;# 
   417  0199                     	;# 
   418  019A                     	;# 
   419  019B                     	;# 
   420  019B                     	;# 
   421  019B                     	;# 
   422  019B                     	;# 
   423  019C                     	;# 
   424  019C                     	;# 
   425  019D                     	;# 
   426  019E                     	;# 
   427  019F                     	;# 
   428  020C                     	;# 
   429  0211                     	;# 
   430  0211                     	;# 
   431  0212                     	;# 
   432  0212                     	;# 
   433  0213                     	;# 
   434  0213                     	;# 
   435  0214                     	;# 
   436  0214                     	;# 
   437  0215                     	;# 
   438  0215                     	;# 
   439  0215                     	;# 
   440  0216                     	;# 
   441  0216                     	;# 
   442  0217                     	;# 
   443  0217                     	;# 
   444  0291                     	;# 
   445  0291                     	;# 
   446  0292                     	;# 
   447  0293                     	;# 
   448  0294                     	;# 
   449  0295                     	;# 
   450  0295                     	;# 
   451  0296                     	;# 
   452  0391                     	;# 
   453  0392                     	;# 
   454  0393                     	;# 
   455  039A                     	;# 
   456  039C                     	;# 
   457  039D                     	;# 
   458  039E                     	;# 
   459  039F                     	;# 
   460  0FE4                     	;# 
   461  0FE5                     	;# 
   462  0FE6                     	;# 
   463  0FE7                     	;# 
   464  0FE8                     	;# 
   465  0FE9                     	;# 
   466  0FEA                     	;# 
   467  0FEB                     	;# 
   468  0FED                     	;# 
   469  0FEE                     	;# 
   470  0FEF                     	;# 
   471  0000                     	;# 
   472  0001                     	;# 
   473  0002                     	;# 
   474  0003                     	;# 
   475  0004                     	;# 
   476  0005                     	;# 
   477  0006                     	;# 
   478  0007                     	;# 
   479  0008                     	;# 
   480  0009                     	;# 
   481  000A                     	;# 
   482  000B                     	;# 
   483  000C                     	;# 
   484  0011                     	;# 
   485  0012                     	;# 
   486  0015                     	;# 
   487  0016                     	;# 
   488  0016                     	;# 
   489  0017                     	;# 
   490  0018                     	;# 
   491  0019                     	;# 
   492  001A                     	;# 
   493  001B                     	;# 
   494  001C                     	;# 
   495  001E                     	;# 
   496  001F                     	;# 
   497  008C                     	;# 
   498  0091                     	;# 
   499  0092                     	;# 
   500  0095                     	;# 
   501  0096                     	;# 
   502  0097                     	;# 
   503  0098                     	;# 
   504  0099                     	;# 
   505  009A                     	;# 
   506  009B                     	;# 
   507  009B                     	;# 
   508  009C                     	;# 
   509  009D                     	;# 
   510  009E                     	;# 
   511  010C                     	;# 
   512  0111                     	;# 
   513  0112                     	;# 
   514  0115                     	;# 
   515  0116                     	;# 
   516  0117                     	;# 
   517  0118                     	;# 
   518  0119                     	;# 
   519  011A                     	;# 
   520  011B                     	;# 
   521  011D                     	;# 
   522  011D                     	;# 
   523  018C                     	;# 
   524  0191                     	;# 
   525  0191                     	;# 
   526  0192                     	;# 
   527  0193                     	;# 
   528  0193                     	;# 
   529  0193                     	;# 
   530  0194                     	;# 
   531  0195                     	;# 
   532  0196                     	;# 
   533  0199                     	;# 
   534  019A                     	;# 
   535  019B                     	;# 
   536  019B                     	;# 
   537  019B                     	;# 
   538  019B                     	;# 
   539  019C                     	;# 
   540  019C                     	;# 
   541  019D                     	;# 
   542  019E                     	;# 
   543  019F                     	;# 
   544  020C                     	;# 
   545  0211                     	;# 
   546  0211                     	;# 
   547  0212                     	;# 
   548  0212                     	;# 
   549  0213                     	;# 
   550  0213                     	;# 
   551  0214                     	;# 
   552  0214                     	;# 
   553  0215                     	;# 
   554  0215                     	;# 
   555  0215                     	;# 
   556  0216                     	;# 
   557  0216                     	;# 
   558  0217                     	;# 
   559  0217                     	;# 
   560  0291                     	;# 
   561  0291                     	;# 
   562  0292                     	;# 
   563  0293                     	;# 
   564  0294                     	;# 
   565  0295                     	;# 
   566  0295                     	;# 
   567  0296                     	;# 
   568  0391                     	;# 
   569  0392                     	;# 
   570  0393                     	;# 
   571  039A                     	;# 
   572  039C                     	;# 
   573  039D                     	;# 
   574  039E                     	;# 
   575  039F                     	;# 
   576  0FE4                     	;# 
   577  0FE5                     	;# 
   578  0FE6                     	;# 
   579  0FE7                     	;# 
   580  0FE8                     	;# 
   581  0FE9                     	;# 
   582  0FEA                     	;# 
   583  0FEB                     	;# 
   584  0FED                     	;# 
   585  0FEE                     	;# 
   586  0FEF                     	;# 
   587  0000                     	;# 
   588  0001                     	;# 
   589  0002                     	;# 
   590  0003                     	;# 
   591  0004                     	;# 
   592  0005                     	;# 
   593  0006                     	;# 
   594  0007                     	;# 
   595  0008                     	;# 
   596  0009                     	;# 
   597  000A                     	;# 
   598  000B                     	;# 
   599  000C                     	;# 
   600  0011                     	;# 
   601  0012                     	;# 
   602  0015                     	;# 
   603  0016                     	;# 
   604  0016                     	;# 
   605  0017                     	;# 
   606  0018                     	;# 
   607  0019                     	;# 
   608  001A                     	;# 
   609  001B                     	;# 
   610  001C                     	;# 
   611  001E                     	;# 
   612  001F                     	;# 
   613  008C                     	;# 
   614  0091                     	;# 
   615  0092                     	;# 
   616  0095                     	;# 
   617  0096                     	;# 
   618  0097                     	;# 
   619  0098                     	;# 
   620  0099                     	;# 
   621  009A                     	;# 
   622  009B                     	;# 
   623  009B                     	;# 
   624  009C                     	;# 
   625  009D                     	;# 
   626  009E                     	;# 
   627  010C                     	;# 
   628  0111                     	;# 
   629  0112                     	;# 
   630  0115                     	;# 
   631  0116                     	;# 
   632  0117                     	;# 
   633  0118                     	;# 
   634  0119                     	;# 
   635  011A                     	;# 
   636  011B                     	;# 
   637  011D                     	;# 
   638  011D                     	;# 
   639  018C                     	;# 
   640  0191                     	;# 
   641  0191                     	;# 
   642  0192                     	;# 
   643  0193                     	;# 
   644  0193                     	;# 
   645  0193                     	;# 
   646  0194                     	;# 
   647  0195                     	;# 
   648  0196                     	;# 
   649  0199                     	;# 
   650  019A                     	;# 
   651  019B                     	;# 
   652  019B                     	;# 
   653  019B                     	;# 
   654  019B                     	;# 
   655  019C                     	;# 
   656  019C                     	;# 
   657  019D                     	;# 
   658  019E                     	;# 
   659  019F                     	;# 
   660  020C                     	;# 
   661  0211                     	;# 
   662  0211                     	;# 
   663  0212                     	;# 
   664  0212                     	;# 
   665  0213                     	;# 
   666  0213                     	;# 
   667  0214                     	;# 
   668  0214                     	;# 
   669  0215                     	;# 
   670  0215                     	;# 
   671  0215                     	;# 
   672  0216                     	;# 
   673  0216                     	;# 
   674  0217                     	;# 
   675  0217                     	;# 
   676  0291                     	;# 
   677  0291                     	;# 
   678  0292                     	;# 
   679  0293                     	;# 
   680  0294                     	;# 
   681  0295                     	;# 
   682  0295                     	;# 
   683  0296                     	;# 
   684  0391                     	;# 
   685  0392                     	;# 
   686  0393                     	;# 
   687  039A                     	;# 
   688  039C                     	;# 
   689  039D                     	;# 
   690  039E                     	;# 
   691  039F                     	;# 
   692  0FE4                     	;# 
   693  0FE5                     	;# 
   694  0FE6                     	;# 
   695  0FE7                     	;# 
   696  0FE8                     	;# 
   697  0FE9                     	;# 
   698  0FEA                     	;# 
   699  0FEB                     	;# 
   700  0FED                     	;# 
   701  0FEE                     	;# 
   702  0FEF                     	;# 
   703  0000                     	;# 
   704  0001                     	;# 
   705  0002                     	;# 
   706  0003                     	;# 
   707  0004                     	;# 
   708  0005                     	;# 
   709  0006                     	;# 
   710  0007                     	;# 
   711  0008                     	;# 
   712  0009                     	;# 
   713  000A                     	;# 
   714  000B                     	;# 
   715  000C                     	;# 
   716  0011                     	;# 
   717  0012                     	;# 
   718  0015                     	;# 
   719  0016                     	;# 
   720  0016                     	;# 
   721  0017                     	;# 
   722  0018                     	;# 
   723  0019                     	;# 
   724  001A                     	;# 
   725  001B                     	;# 
   726  001C                     	;# 
   727  001E                     	;# 
   728  001F                     	;# 
   729  008C                     	;# 
   730  0091                     	;# 
   731  0092                     	;# 
   732  0095                     	;# 
   733  0096                     	;# 
   734  0097                     	;# 
   735  0098                     	;# 
   736  0099                     	;# 
   737  009A                     	;# 
   738  009B                     	;# 
   739  009B                     	;# 
   740  009C                     	;# 
   741  009D                     	;# 
   742  009E                     	;# 
   743  010C                     	;# 
   744  0111                     	;# 
   745  0112                     	;# 
   746  0115                     	;# 
   747  0116                     	;# 
   748  0117                     	;# 
   749  0118                     	;# 
   750  0119                     	;# 
   751  011A                     	;# 
   752  011B                     	;# 
   753  011D                     	;# 
   754  011D                     	;# 
   755  018C                     	;# 
   756  0191                     	;# 
   757  0191                     	;# 
   758  0192                     	;# 
   759  0193                     	;# 
   760  0193                     	;# 
   761  0193                     	;# 
   762  0194                     	;# 
   763  0195                     	;# 
   764  0196                     	;# 
   765  0199                     	;# 
   766  019A                     	;# 
   767  019B                     	;# 
   768  019B                     	;# 
   769  019B                     	;# 
   770  019B                     	;# 
   771  019C                     	;# 
   772  019C                     	;# 
   773  019D                     	;# 
   774  019E                     	;# 
   775  019F                     	;# 
   776  020C                     	;# 
   777  0211                     	;# 
   778  0211                     	;# 
   779  0212                     	;# 
   780  0212                     	;# 
   781  0213                     	;# 
   782  0213                     	;# 
   783  0214                     	;# 
   784  0214                     	;# 
   785  0215                     	;# 
   786  0215                     	;# 
   787  0215                     	;# 
   788  0216                     	;# 
   789  0216                     	;# 
   790  0217                     	;# 
   791  0217                     	;# 
   792  0291                     	;# 
   793  0291                     	;# 
   794  0292                     	;# 
   795  0293                     	;# 
   796  0294                     	;# 
   797  0295                     	;# 
   798  0295                     	;# 
   799  0296                     	;# 
   800  0391                     	;# 
   801  0392                     	;# 
   802  0393                     	;# 
   803  039A                     	;# 
   804  039C                     	;# 
   805  039D                     	;# 
   806  039E                     	;# 
   807  039F                     	;# 
   808  0FE4                     	;# 
   809  0FE5                     	;# 
   810  0FE6                     	;# 
   811  0FE7                     	;# 
   812  0FE8                     	;# 
   813  0FE9                     	;# 
   814  0FEA                     	;# 
   815  0FEB                     	;# 
   816  0FED                     	;# 
   817  0FEE                     	;# 
   818  0FEF                     	;# 
   819  0000                     	;# 
   820  0001                     	;# 
   821  0002                     	;# 
   822  0003                     	;# 
   823  0004                     	;# 
   824  0005                     	;# 
   825  0006                     	;# 
   826  0007                     	;# 
   827  0008                     	;# 
   828  0009                     	;# 
   829  000A                     	;# 
   830  000B                     	;# 
   831  000C                     	;# 
   832  0011                     	;# 
   833  0012                     	;# 
   834  0015                     	;# 
   835  0016                     	;# 
   836  0016                     	;# 
   837  0017                     	;# 
   838  0018                     	;# 
   839  0019                     	;# 
   840  001A                     	;# 
   841  001B                     	;# 
   842  001C                     	;# 
   843  001E                     	;# 
   844  001F                     	;# 
   845  008C                     	;# 
   846  0091                     	;# 
   847  0092                     	;# 
   848  0095                     	;# 
   849  0096                     	;# 
   850  0097                     	;# 
   851  0098                     	;# 
   852  0099                     	;# 
   853  009A                     	;# 
   854  009B                     	;# 
   855  009B                     	;# 
   856  009C                     	;# 
   857  009D                     	;# 
   858  009E                     	;# 
   859  010C                     	;# 
   860  0111                     	;# 
   861  0112                     	;# 
   862  0115                     	;# 
   863  0116                     	;# 
   864  0117                     	;# 
   865  0118                     	;# 
   866  0119                     	;# 
   867  011A                     	;# 
   868  011B                     	;# 
   869  011D                     	;# 
   870  011D                     	;# 
   871  018C                     	;# 
   872  0191                     	;# 
   873  0191                     	;# 
   874  0192                     	;# 
   875  0193                     	;# 
   876  0193                     	;# 
   877  0193                     	;# 
   878  0194                     	;# 
   879  0195                     	;# 
   880  0196                     	;# 
   881  0199                     	;# 
   882  019A                     	;# 
   883  019B                     	;# 
   884  019B                     	;# 
   885  019B                     	;# 
   886  019B                     	;# 
   887  019C                     	;# 
   888  019C                     	;# 
   889  019D                     	;# 
   890  019E                     	;# 
   891  019F                     	;# 
   892  020C                     	;# 
   893  0211                     	;# 
   894  0211                     	;# 
   895  0212                     	;# 
   896  0212                     	;# 
   897  0213                     	;# 
   898  0213                     	;# 
   899  0214                     	;# 
   900  0214                     	;# 
   901  0215                     	;# 
   902  0215                     	;# 
   903  0215                     	;# 
   904  0216                     	;# 
   905  0216                     	;# 
   906  0217                     	;# 
   907  0217                     	;# 
   908  0291                     	;# 
   909  0291                     	;# 
   910  0292                     	;# 
   911  0293                     	;# 
   912  0294                     	;# 
   913  0295                     	;# 
   914  0295                     	;# 
   915  0296                     	;# 
   916  0391                     	;# 
   917  0392                     	;# 
   918  0393                     	;# 
   919  039A                     	;# 
   920  039C                     	;# 
   921  039D                     	;# 
   922  039E                     	;# 
   923  039F                     	;# 
   924  0FE4                     	;# 
   925  0FE5                     	;# 
   926  0FE6                     	;# 
   927  0FE7                     	;# 
   928  0FE8                     	;# 
   929  0FE9                     	;# 
   930  0FEA                     	;# 
   931  0FEB                     	;# 
   932  0FED                     	;# 
   933  0FEE                     	;# 
   934  0FEF                     	;# 
   935  0000                     	;# 
   936  0001                     	;# 
   937  0002                     	;# 
   938  0003                     	;# 
   939  0004                     	;# 
   940  0005                     	;# 
   941  0006                     	;# 
   942  0007                     	;# 
   943  0008                     	;# 
   944  0009                     	;# 
   945  000A                     	;# 
   946  000B                     	;# 
   947  000C                     	;# 
   948  0011                     	;# 
   949  0012                     	;# 
   950  0015                     	;# 
   951  0016                     	;# 
   952  0016                     	;# 
   953  0017                     	;# 
   954  0018                     	;# 
   955  0019                     	;# 
   956  001A                     	;# 
   957  001B                     	;# 
   958  001C                     	;# 
   959  001E                     	;# 
   960  001F                     	;# 
   961  008C                     	;# 
   962  0091                     	;# 
   963  0092                     	;# 
   964  0095                     	;# 
   965  0096                     	;# 
   966  0097                     	;# 
   967  0098                     	;# 
   968  0099                     	;# 
   969  009A                     	;# 
   970  009B                     	;# 
   971  009B                     	;# 
   972  009C                     	;# 
   973  009D                     	;# 
   974  009E                     	;# 
   975  010C                     	;# 
   976  0111                     	;# 
   977  0112                     	;# 
   978  0115                     	;# 
   979  0116                     	;# 
   980  0117                     	;# 
   981  0118                     	;# 
   982  0119                     	;# 
   983  011A                     	;# 
   984  011B                     	;# 
   985  011D                     	;# 
   986  011D                     	;# 
   987  018C                     	;# 
   988  0191                     	;# 
   989  0191                     	;# 
   990  0192                     	;# 
   991  0193                     	;# 
   992  0193                     	;# 
   993  0193                     	;# 
   994  0194                     	;# 
   995  0195                     	;# 
   996  0196                     	;# 
   997  0199                     	;# 
   998  019A                     	;# 
   999  019B                     	;# 
  1000  019B                     	;# 
  1001  019B                     	;# 
  1002  019B                     	;# 
  1003  019C                     	;# 
  1004  019C                     	;# 
  1005  019D                     	;# 
  1006  019E                     	;# 
  1007  019F                     	;# 
  1008  020C                     	;# 
  1009  0211                     	;# 
  1010  0211                     	;# 
  1011  0212                     	;# 
  1012  0212                     	;# 
  1013  0213                     	;# 
  1014  0213                     	;# 
  1015  0214                     	;# 
  1016  0214                     	;# 
  1017  0215                     	;# 
  1018  0215                     	;# 
  1019  0215                     	;# 
  1020  0216                     	;# 
  1021  0216                     	;# 
  1022  0217                     	;# 
  1023  0217                     	;# 
  1024  0291                     	;# 
  1025  0291                     	;# 
  1026  0292                     	;# 
  1027  0293                     	;# 
  1028  0294                     	;# 
  1029  0295                     	;# 
  1030  0295                     	;# 
  1031  0296                     	;# 
  1032  0391                     	;# 
  1033  0392                     	;# 
  1034  0393                     	;# 
  1035  039A                     	;# 
  1036  039C                     	;# 
  1037  039D                     	;# 
  1038  039E                     	;# 
  1039  039F                     	;# 
  1040  0FE4                     	;# 
  1041  0FE5                     	;# 
  1042  0FE6                     	;# 
  1043  0FE7                     	;# 
  1044  0FE8                     	;# 
  1045  0FE9                     	;# 
  1046  0FEA                     	;# 
  1047  0FEB                     	;# 
  1048  0FED                     	;# 
  1049  0FEE                     	;# 
  1050  0FEF                     	;# 
  1051  0000                     	;# 
  1052  0001                     	;# 
  1053  0002                     	;# 
  1054  0003                     	;# 
  1055  0004                     	;# 
  1056  0005                     	;# 
  1057  0006                     	;# 
  1058  0007                     	;# 
  1059  0008                     	;# 
  1060  0009                     	;# 
  1061  000A                     	;# 
  1062  000B                     	;# 
  1063  000C                     	;# 
  1064  0011                     	;# 
  1065  0012                     	;# 
  1066  0015                     	;# 
  1067  0016                     	;# 
  1068  0016                     	;# 
  1069  0017                     	;# 
  1070  0018                     	;# 
  1071  0019                     	;# 
  1072  001A                     	;# 
  1073  001B                     	;# 
  1074  001C                     	;# 
  1075  001E                     	;# 
  1076  001F                     	;# 
  1077  008C                     	;# 
  1078  0091                     	;# 
  1079  0092                     	;# 
  1080  0095                     	;# 
  1081  0096                     	;# 
  1082  0097                     	;# 
  1083  0098                     	;# 
  1084  0099                     	;# 
  1085  009A                     	;# 
  1086  009B                     	;# 
  1087  009B                     	;# 
  1088  009C                     	;# 
  1089  009D                     	;# 
  1090  009E                     	;# 
  1091  010C                     	;# 
  1092  0111                     	;# 
  1093  0112                     	;# 
  1094  0115                     	;# 
  1095  0116                     	;# 
  1096  0117                     	;# 
  1097  0118                     	;# 
  1098  0119                     	;# 
  1099  011A                     	;# 
  1100  011B                     	;# 
  1101  011D                     	;# 
  1102  011D                     	;# 
  1103  018C                     	;# 
  1104  0191                     	;# 
  1105  0191                     	;# 
  1106  0192                     	;# 
  1107  0193                     	;# 
  1108  0193                     	;# 
  1109  0193                     	;# 
  1110  0194                     	;# 
  1111  0195                     	;# 
  1112  0196                     	;# 
  1113  0199                     	;# 
  1114  019A                     	;# 
  1115  019B                     	;# 
  1116  019B                     	;# 
  1117  019B                     	;# 
  1118  019B                     	;# 
  1119  019C                     	;# 
  1120  019C                     	;# 
  1121  019D                     	;# 
  1122  019E                     	;# 
  1123  019F                     	;# 
  1124  020C                     	;# 
  1125  0211                     	;# 
  1126  0211                     	;# 
  1127  0212                     	;# 
  1128  0212                     	;# 
  1129  0213                     	;# 
  1130  0213                     	;# 
  1131  0214                     	;# 
  1132  0214                     	;# 
  1133  0215                     	;# 
  1134  0215                     	;# 
  1135  0215                     	;# 
  1136  0216                     	;# 
  1137  0216                     	;# 
  1138  0217                     	;# 
  1139  0217                     	;# 
  1140  0291                     	;# 
  1141  0291                     	;# 
  1142  0292                     	;# 
  1143  0293                     	;# 
  1144  0294                     	;# 
  1145  0295                     	;# 
  1146  0295                     	;# 
  1147  0296                     	;# 
  1148  0391                     	;# 
  1149  0392                     	;# 
  1150  0393                     	;# 
  1151  039A                     	;# 
  1152  039C                     	;# 
  1153  039D                     	;# 
  1154  039E                     	;# 
  1155  039F                     	;# 
  1156  0FE4                     	;# 
  1157  0FE5                     	;# 
  1158  0FE6                     	;# 
  1159  0FE7                     	;# 
  1160  0FE8                     	;# 
  1161  0FE9                     	;# 
  1162  0FEA                     	;# 
  1163  0FEB                     	;# 
  1164  0FED                     	;# 
  1165  0FEE                     	;# 
  1166  0FEF                     	;# 
  1167  0000                     	;# 
  1168  0001                     	;# 
  1169  0002                     	;# 
  1170  0003                     	;# 
  1171  0004                     	;# 
  1172  0005                     	;# 
  1173  0006                     	;# 
  1174  0007                     	;# 
  1175  0008                     	;# 
  1176  0009                     	;# 
  1177  000A                     	;# 
  1178  000B                     	;# 
  1179  000C                     	;# 
  1180  0011                     	;# 
  1181  0012                     	;# 
  1182  0015                     	;# 
  1183  0016                     	;# 
  1184  0016                     	;# 
  1185  0017                     	;# 
  1186  0018                     	;# 
  1187  0019                     	;# 
  1188  001A                     	;# 
  1189  001B                     	;# 
  1190  001C                     	;# 
  1191  001E                     	;# 
  1192  001F                     	;# 
  1193  008C                     	;# 
  1194  0091                     	;# 
  1195  0092                     	;# 
  1196  0095                     	;# 
  1197  0096                     	;# 
  1198  0097                     	;# 
  1199  0098                     	;# 
  1200  0099                     	;# 
  1201  009A                     	;# 
  1202  009B                     	;# 
  1203  009B                     	;# 
  1204  009C                     	;# 
  1205  009D                     	;# 
  1206  009E                     	;# 
  1207  010C                     	;# 
  1208  0111                     	;# 
  1209  0112                     	;# 
  1210  0115                     	;# 
  1211  0116                     	;# 
  1212  0117                     	;# 
  1213  0118                     	;# 
  1214  0119                     	;# 
  1215  011A                     	;# 
  1216  011B                     	;# 
  1217  011D                     	;# 
  1218  011D                     	;# 
  1219  018C                     	;# 
  1220  0191                     	;# 
  1221  0191                     	;# 
  1222  0192                     	;# 
  1223  0193                     	;# 
  1224  0193                     	;# 
  1225  0193                     	;# 
  1226  0194                     	;# 
  1227  0195                     	;# 
  1228  0196                     	;# 
  1229  0199                     	;# 
  1230  019A                     	;# 
  1231  019B                     	;# 
  1232  019B                     	;# 
  1233  019B                     	;# 
  1234  019B                     	;# 
  1235  019C                     	;# 
  1236  019C                     	;# 
  1237  019D                     	;# 
  1238  019E                     	;# 
  1239  019F                     	;# 
  1240  020C                     	;# 
  1241  0211                     	;# 
  1242  0211                     	;# 
  1243  0212                     	;# 
  1244  0212                     	;# 
  1245  0213                     	;# 
  1246  0213                     	;# 
  1247  0214                     	;# 
  1248  0214                     	;# 
  1249  0215                     	;# 
  1250  0215                     	;# 
  1251  0215                     	;# 
  1252  0216                     	;# 
  1253  0216                     	;# 
  1254  0217                     	;# 
  1255  0217                     	;# 
  1256  0291                     	;# 
  1257  0291                     	;# 
  1258  0292                     	;# 
  1259  0293                     	;# 
  1260  0294                     	;# 
  1261  0295                     	;# 
  1262  0295                     	;# 
  1263  0296                     	;# 
  1264  0391                     	;# 
  1265  0392                     	;# 
  1266  0393                     	;# 
  1267  039A                     	;# 
  1268  039C                     	;# 
  1269  039D                     	;# 
  1270  039E                     	;# 
  1271  039F                     	;# 
  1272  0FE4                     	;# 
  1273  0FE5                     	;# 
  1274  0FE6                     	;# 
  1275  0FE7                     	;# 
  1276  0FE8                     	;# 
  1277  0FE9                     	;# 
  1278  0FEA                     	;# 
  1279  0FEB                     	;# 
  1280  0FED                     	;# 
  1281  0FEE                     	;# 
  1282  0FEF                     	;# 
  1283  0000                     	;# 
  1284  0001                     	;# 
  1285  0002                     	;# 
  1286  0003                     	;# 
  1287  0004                     	;# 
  1288  0005                     	;# 
  1289  0006                     	;# 
  1290  0007                     	;# 
  1291  0008                     	;# 
  1292  0009                     	;# 
  1293  000A                     	;# 
  1294  000B                     	;# 
  1295  000C                     	;# 
  1296  0011                     	;# 
  1297  0012                     	;# 
  1298  0015                     	;# 
  1299  0016                     	;# 
  1300  0016                     	;# 
  1301  0017                     	;# 
  1302  0018                     	;# 
  1303  0019                     	;# 
  1304  001A                     	;# 
  1305  001B                     	;# 
  1306  001C                     	;# 
  1307  001E                     	;# 
  1308  001F                     	;# 
  1309  008C                     	;# 
  1310  0091                     	;# 
  1311  0092                     	;# 
  1312  0095                     	;# 
  1313  0096                     	;# 
  1314  0097                     	;# 
  1315  0098                     	;# 
  1316  0099                     	;# 
  1317  009A                     	;# 
  1318  009B                     	;# 
  1319  009B                     	;# 
  1320  009C                     	;# 
  1321  009D                     	;# 
  1322  009E                     	;# 
  1323  010C                     	;# 
  1324  0111                     	;# 
  1325  0112                     	;# 
  1326  0115                     	;# 
  1327  0116                     	;# 
  1328  0117                     	;# 
  1329  0118                     	;# 
  1330  0119                     	;# 
  1331  011A                     	;# 
  1332  011B                     	;# 
  1333  011D                     	;# 
  1334  011D                     	;# 
  1335  018C                     	;# 
  1336  0191                     	;# 
  1337  0191                     	;# 
  1338  0192                     	;# 
  1339  0193                     	;# 
  1340  0193                     	;# 
  1341  0193                     	;# 
  1342  0194                     	;# 
  1343  0195                     	;# 
  1344  0196                     	;# 
  1345  0199                     	;# 
  1346  019A                     	;# 
  1347  019B                     	;# 
  1348  019B                     	;# 
  1349  019B                     	;# 
  1350  019B                     	;# 
  1351  019C                     	;# 
  1352  019C                     	;# 
  1353  019D                     	;# 
  1354  019E                     	;# 
  1355  019F                     	;# 
  1356  020C                     	;# 
  1357  0211                     	;# 
  1358  0211                     	;# 
  1359  0212                     	;# 
  1360  0212                     	;# 
  1361  0213                     	;# 
  1362  0213                     	;# 
  1363  0214                     	;# 
  1364  0214                     	;# 
  1365  0215                     	;# 
  1366  0215                     	;# 
  1367  0215                     	;# 
  1368  0216                     	;# 
  1369  0216                     	;# 
  1370  0217                     	;# 
  1371  0217                     	;# 
  1372  0291                     	;# 
  1373  0291                     	;# 
  1374  0292                     	;# 
  1375  0293                     	;# 
  1376  0294                     	;# 
  1377  0295                     	;# 
  1378  0295                     	;# 
  1379  0296                     	;# 
  1380  0391                     	;# 
  1381  0392                     	;# 
  1382  0393                     	;# 
  1383  039A                     	;# 
  1384  039C                     	;# 
  1385  039D                     	;# 
  1386  039E                     	;# 
  1387  039F                     	;# 
  1388  0FE4                     	;# 
  1389  0FE5                     	;# 
  1390  0FE6                     	;# 
  1391  0FE7                     	;# 
  1392  0FE8                     	;# 
  1393  0FE9                     	;# 
  1394  0FEA                     	;# 
  1395  0FEB                     	;# 
  1396  0FED                     	;# 
  1397  0FEE                     	;# 
  1398  0FEF                     	;# 
  1399                           
  1400 ;; Function _ESP_default_application_handler is unused but had its address taken
  1401  0000                     
  1402                           	psect	nvBANK0
  1403  0067                     __pnvBANK0:	
  1404  0067                     _IOCAF4_InterruptHandler:	
  1405  0067                     	ds	2
  1406  000C                     _PORTAbits	set	12
  1407  0018                     _T1CONbits	set	24
  1408  0018                     _T1CON	set	24
  1409  0016                     _TMR1L	set	22
  1410  0017                     _TMR1H	set	23
  1411  0019                     _T1GCON	set	25
  1412  0011                     _PIR1bits	set	17
  1413  000B                     _INTCONbits	set	11
  1414  009D                     _ADCON0bits	set	157
  1415  009C                     _ADRESH	set	156
  1416  009B                     _ADRESL	set	155
  1417  009E                     _ADCON1	set	158
  1418  009D                     _ADCON0	set	157
  1419  0091                     _PIE1bits	set	145
  1420  0097                     _WDTCON	set	151
  1421  0098                     _OSCTUNE	set	152
  1422  0099                     _OSCCON	set	153
  1423  0095                     _OPTION_REGbits	set	149
  1424  008C                     _TRISA	set	140
  1425  04D6                     _PLLR	set	1238
  1426  010C                     _LATAbits	set	268
  1427  0116                     _BORCON	set	278
  1428  011D                     _APFCON	set	285
  1429  010C                     _LATA	set	268
  1430  0199                     _RCREG	set	409
  1431  019D                     _RCSTAbits	set	413
  1432  019A                     _TXREG	set	410
  1433  019C                     _SPBRGH	set	412
  1434  019B                     _SPBRGL	set	411
  1435  019E                     _TXSTA	set	414
  1436  019D                     _RCSTA	set	413
  1437  019F                     _BAUDCON	set	415
  1438  018C                     _ANSELA	set	396
  1439  020C                     _WPUA	set	524
  1440  0391                     _IOCAPbits	set	913
  1441  0392                     _IOCANbits	set	914
  1442  0393                     _IOCAFbits	set	915
  1443                           
  1444                           	psect	stringtext1
  1445  0294                     __pstringtext1:	
  1446  0294                     STR_9:	
  1447  0294  3465               	retlw	101	;'e'
  1448  0295  346E               	retlw	110	;'n'
  1449  0296  3474               	retlw	116	;'t'
  1450  0297  3465               	retlw	101	;'e'
  1451  0298  3472               	retlw	114	;'r'
  1452  0299  3420               	retlw	32	;' '
  1453  029A  3477               	retlw	119	;'w'
  1454  029B  346C               	retlw	108	;'l'
  1455  029C  3461               	retlw	97	;'a'
  1456  029D  346E               	retlw	110	;'n'
  1457  029E  3420               	retlw	32	;' '
  1458  029F  3470               	retlw	112	;'p'
  1459  02A0  3461               	retlw	97	;'a'
  1460  02A1  3473               	retlw	115	;'s'
  1461  02A2  3473               	retlw	115	;'s'
  1462  02A3  3477               	retlw	119	;'w'
  1463  02A4  346F               	retlw	111	;'o'
  1464  02A5  3472               	retlw	114	;'r'
  1465  02A6  3464               	retlw	100	;'d'
  1466  02A7  343A               	retlw	58	;':'
  1467  02A8  340A               	retlw	10
  1468  02A9  3400               	retlw	0
  1469                           
  1470                           	psect	stringtext2
  1471  0301                     __pstringtext2:	
  1472  0301                     STR_24:	
  1473  0301  3441               	retlw	65	;'A'
  1474  0302  3454               	retlw	84	;'T'
  1475  0303  342B               	retlw	43	;'+'
  1476  0304  3443               	retlw	67	;'C'
  1477  0305  3449               	retlw	73	;'I'
  1478  0306  3450               	retlw	80	;'P'
  1479  0307  3453               	retlw	83	;'S'
  1480  0308  3445               	retlw	69	;'E'
  1481  0309  3452               	retlw	82	;'R'
  1482  030A  3456               	retlw	86	;'V'
  1483  030B  3445               	retlw	69	;'E'
  1484  030C  3452               	retlw	82	;'R'
  1485  030D  343D               	retlw	61	;'='
  1486  030E  3431               	retlw	49	;'1'
  1487  030F  342C               	retlw	44	;','
  1488  0310  3438               	retlw	56	;'8'
  1489  0311  3430               	retlw	48	;'0'
  1490  0312  340D               	retlw	13
  1491  0313  340A               	retlw	10
  1492  0314  3400               	retlw	0
  1493                           
  1494                           	psect	stringtext3
  1495  0328                     __pstringtext3:	
  1496  0328                     STR_7:	
  1497  0328  3465               	retlw	101	;'e'
  1498  0329  346E               	retlw	110	;'n'
  1499  032A  3474               	retlw	116	;'t'
  1500  032B  3465               	retlw	101	;'e'
  1501  032C  3472               	retlw	114	;'r'
  1502  032D  3420               	retlw	32	;' '
  1503  032E  3477               	retlw	119	;'w'
  1504  032F  346C               	retlw	108	;'l'
  1505  0330  3461               	retlw	97	;'a'
  1506  0331  346E               	retlw	110	;'n'
  1507  0332  3420               	retlw	32	;' '
  1508  0333  346E               	retlw	110	;'n'
  1509  0334  3461               	retlw	97	;'a'
  1510  0335  346D               	retlw	109	;'m'
  1511  0336  3465               	retlw	101	;'e'
  1512  0337  343A               	retlw	58	;':'
  1513  0338  340A               	retlw	10
  1514  0339  3400               	retlw	0
  1515                           
  1516                           	psect	stringtext4
  1517  035A                     __pstringtext4:	
  1518  035A                     STR_19:	
  1519  035A  3441               	retlw	65	;'A'
  1520  035B  3454               	retlw	84	;'T'
  1521  035C  342B               	retlw	43	;'+'
  1522  035D  3443               	retlw	67	;'C'
  1523  035E  3457               	retlw	87	;'W'
  1524  035F  344D               	retlw	77	;'M'
  1525  0360  344F               	retlw	79	;'O'
  1526  0361  3444               	retlw	68	;'D'
  1527  0362  3445               	retlw	69	;'E'
  1528  0363  343D               	retlw	61	;'='
  1529  0364  3431               	retlw	49	;'1'
  1530  0365  340D               	retlw	13
  1531  0366  340A               	retlw	10
  1532  0367  3400               	retlw	0
  1533                           
  1534                           	psect	stringtext5
  1535  0368                     __pstringtext5:	
  1536  0368                     STR_23:	
  1537  0368  3441               	retlw	65	;'A'
  1538  0369  3454               	retlw	84	;'T'
  1539  036A  342B               	retlw	43	;'+'
  1540  036B  3443               	retlw	67	;'C'
  1541  036C  3449               	retlw	73	;'I'
  1542  036D  3450               	retlw	80	;'P'
  1543  036E  344D               	retlw	77	;'M'
  1544  036F  3455               	retlw	85	;'U'
  1545  0370  3458               	retlw	88	;'X'
  1546  0371  343D               	retlw	61	;'='
  1547  0372  3431               	retlw	49	;'1'
  1548  0373  340D               	retlw	13
  1549  0374  340A               	retlw	10
  1550  0375  3400               	retlw	0
  1551                           
  1552                           	psect	stringtext6
  1553  0392                     __pstringtext6:	
  1554  0392                     STR_6:	
  1555  0392  344C               	retlw	76	;'L'
  1556  0393  346F               	retlw	111	;'o'
  1557  0394  3467               	retlw	103	;'g'
  1558  0395  3467               	retlw	103	;'g'
  1559  0396  3465               	retlw	101	;'e'
  1560  0397  3472               	retlw	114	;'r'
  1561  0398  3420               	retlw	32	;' '
  1562  0399  3456               	retlw	86	;'V'
  1563  039A  3431               	retlw	49	;'1'
  1564  039B  342E               	retlw	46	;'.'
  1565  039C  3430               	retlw	48	;'0'
  1566  039D  340A               	retlw	10
  1567  039E  3400               	retlw	0
  1568                           
  1569                           	psect	stringtext7
  1570  039F                     __pstringtext7:	
  1571  039F                     STR_8:	
  1572  039F  3462               	retlw	98	;'b'
  1573  03A0  3475               	retlw	117	;'u'
  1574  03A1  3466               	retlw	102	;'f'
  1575  03A2  3466               	retlw	102	;'f'
  1576  03A3  3465               	retlw	101	;'e'
  1577  03A4  3472               	retlw	114	;'r'
  1578  03A5  3420               	retlw	32	;' '
  1579  03A6  3465               	retlw	101	;'e'
  1580  03A7  3472               	retlw	114	;'r'
  1581  03A8  3472               	retlw	114	;'r'
  1582  03A9  346F               	retlw	111	;'o'
  1583  03AA  3472               	retlw	114	;'r'
  1584  03AB  3400               	retlw	0
  1585                           
  1586                           	psect	stringtext8
  1587  03B9                     __pstringtext8:	
  1588  03B9                     STR_26:	
  1589  03B9  3441               	retlw	65	;'A'
  1590  03BA  3454               	retlw	84	;'T'
  1591  03BB  342B               	retlw	43	;'+'
  1592  03BC  3443               	retlw	67	;'C'
  1593  03BD  3449               	retlw	73	;'I'
  1594  03BE  3450               	retlw	80	;'P'
  1595  03BF  3453               	retlw	83	;'S'
  1596  03C0  3445               	retlw	69	;'E'
  1597  03C1  344E               	retlw	78	;'N'
  1598  03C2  3444               	retlw	68	;'D'
  1599  03C3  343D               	retlw	61	;'='
  1600  03C4  3400               	retlw	0
  1601                           
  1602                           	psect	stringtext9
  1603  03D1                     __pstringtext9:	
  1604  03D1                     STR_20:	
  1605  03D1  3441               	retlw	65	;'A'
  1606  03D2  3454               	retlw	84	;'T'
  1607  03D3  342B               	retlw	43	;'+'
  1608  03D4  3443               	retlw	67	;'C'
  1609  03D5  3457               	retlw	87	;'W'
  1610  03D6  344A               	retlw	74	;'J'
  1611  03D7  3441               	retlw	65	;'A'
  1612  03D8  3450               	retlw	80	;'P'
  1613  03D9  343D               	retlw	61	;'='
  1614  03DA  3422               	retlw	34	;'"'
  1615  03DB  3400               	retlw	0
  1616                           
  1617                           	psect	stringtext10
  1618  03DC                     __pstringtext10:	
  1619  03DC                     STR_13:	
  1620  03DC  3453               	retlw	83	;'S'
  1621  03DD  3445               	retlw	69	;'E'
  1622  03DE  344E               	retlw	78	;'N'
  1623  03DF  3444               	retlw	68	;'D'
  1624  03E0  3420               	retlw	32	;' '
  1625  03E1  3446               	retlw	70	;'F'
  1626  03E2  3441               	retlw	65	;'A'
  1627  03E3  3449               	retlw	73	;'I'
  1628  03E4  344C               	retlw	76	;'L'
  1629  03E5  3400               	retlw	0
  1630                           
  1631                           	psect	stringtext11
  1632  0402                     __pstringtext11:	
  1633  0402                     STR_11:	
  1634  0402  3453               	retlw	83	;'S'
  1635  0403  3445               	retlw	69	;'E'
  1636  0404  344E               	retlw	78	;'N'
  1637  0405  3444               	retlw	68	;'D'
  1638  0406  3420               	retlw	32	;' '
  1639  0407  344F               	retlw	79	;'O'
  1640  0408  344B               	retlw	75	;'K'
  1641  0409  3400               	retlw	0
  1642                           
  1643                           	psect	stringtext12
  1644  040A                     __pstringtext12:	
  1645  040A                     STR_16:	
  1646  040A  3443               	retlw	67	;'C'
  1647  040B  344F               	retlw	79	;'O'
  1648  040C  344E               	retlw	78	;'N'
  1649  040D  344E               	retlw	78	;'N'
  1650  040E  3445               	retlw	69	;'E'
  1651  040F  3443               	retlw	67	;'C'
  1652  0410  3454               	retlw	84	;'T'
  1653  0411  3400               	retlw	0
  1654                           
  1655                           	psect	stringtext13
  1656  0412                     __pstringtext13:	
  1657  0412                     STR_17:	
  1658  0412  3443               	retlw	67	;'C'
  1659  0413  344C               	retlw	76	;'L'
  1660  0414  344F               	retlw	79	;'O'
  1661  0415  3453               	retlw	83	;'S'
  1662  0416  3445               	retlw	69	;'E'
  1663  0417  3444               	retlw	68	;'D'
  1664  0418  3400               	retlw	0
  1665                           
  1666                           	psect	stringtext14
  1667  0419                     __pstringtext14:	
  1668  0419                     STR_3:	
  1669  0419  3462               	retlw	98	;'b'
  1670  041A  346D               	retlw	109	;'m'
  1671  041B  346F               	retlw	111	;'o'
  1672  041C  3464               	retlw	100	;'d'
  1673  041D  3465               	retlw	101	;'e'
  1674  041E  340A               	retlw	10
  1675  041F  3400               	retlw	0
  1676                           
  1677                           	psect	stringtext15
  1678  0420                     __pstringtext15:	
  1679  0420                     STR_2:	
  1680  0420  3474               	retlw	116	;'t'
  1681  0421  346D               	retlw	109	;'m'
  1682  0422  346F               	retlw	111	;'o'
  1683  0423  3464               	retlw	100	;'d'
  1684  0424  3465               	retlw	101	;'e'
  1685  0425  340A               	retlw	10
  1686  0426  3400               	retlw	0
  1687                           
  1688                           	psect	stringtext16
  1689  0435                     __pstringtext16:	
  1690  0435                     STR_14:	
  1691  0435  3445               	retlw	69	;'E'
  1692  0436  3452               	retlw	82	;'R'
  1693  0437  3452               	retlw	82	;'R'
  1694  0438  344F               	retlw	79	;'O'
  1695  0439  3452               	retlw	82	;'R'
  1696  043A  3400               	retlw	0
  1697                           
  1698                           	psect	stringtext17
  1699  045F                     __pstringtext17:	
  1700  045F                     STR_18:	
  1701  045F  3441               	retlw	65	;'A'
  1702  0460  3454               	retlw	84	;'T'
  1703  0461  340D               	retlw	13
  1704  0462  340A               	retlw	10
  1705  0463  3400               	retlw	0
  1706                           
  1707                           	psect	stringtext18
  1708  0464                     __pstringtext18:	
  1709  0464                     STR_15:	
  1710  0464  342B               	retlw	43	;'+'
  1711  0465  3449               	retlw	73	;'I'
  1712  0466  3450               	retlw	80	;'P'
  1713  0467  3444               	retlw	68	;'D'
  1714  0468  3400               	retlw	0
  1715                           
  1716                           	psect	stringtext19
  1717  046E                     __pstringtext19:	
  1718  046E                     STR_22:	
  1719  046E  3422               	retlw	34	;'"'
  1720  046F  340D               	retlw	13
  1721  0470  340A               	retlw	10
  1722  0471  3400               	retlw	0
  1723                           
  1724                           	psect	stringtext20
  1725  0472                     __pstringtext20:	
  1726  0472                     STR_21:	
  1727  0472  3422               	retlw	34	;'"'
  1728  0473  342C               	retlw	44	;','
  1729  0474  3422               	retlw	34	;'"'
  1730  0475  3400               	retlw	0
  1731                           
  1732                           	psect	stringtext21
  1733  0476                     __pstringtext21:	
  1734  0476                     STR_1:	
  1735  0476  344F               	retlw	79	;'O'
  1736  0477  346B               	retlw	107	;'k'
  1737  0478  340A               	retlw	10
  1738  0479  3400               	retlw	0
  1739                           
  1740                           	psect	stringtext22
  1741  047E                     __pstringtext22:	
  1742  047E                     STR_4:	
  1743  047E  3443               	retlw	67	;'C'
  1744  047F  3448               	retlw	72	;'H'
  1745  0480  3400               	retlw	0
  1746                           
  1747                           	psect	stringtext23
  1748  0481                     __pstringtext23:	
  1749  0481                     STR_5:	
  1750  0481  3443               	retlw	67	;'C'
  1751  0482  344C               	retlw	76	;'L'
  1752  0483  3400               	retlw	0
  1753                           
  1754                           	psect	stringtext24
  1755  048D                     __pstringtext24:	
  1756  048D                     STR_27:	
  1757  048D  342C               	retlw	44	;','
  1758  048E  3400               	retlw	0
  1759                           
  1760                           	psect	stringtext25
  1761  048F                     __pstringtext25:	
  1762  048F                     STR_25:	
  1763  048F  343A               	retlw	58	;':'
  1764  0490  3400               	retlw	0
  1765                           
  1766                           	psect	stringtext26
  1767  0000                     __pstringtext26:	
  1768  046F                     
  1769                           ; #config settings
  1770  0000                     
  1771                           	psect	cinit
  1772  003F                     start_initialization:	
  1773  003F                     __initialization:	
  1774  003F  3020               	movlw	low __pbssBANK0
  1775                           
  1776                           ; Clear objects allocated to COMMON
  1777  0040  01FA               	clrf	__pbssCOMMON& (0+127)
  1778  0041  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  1779                           
  1780                           ; Clear objects allocated to BANK0
  1781  0042  0084               	movwf	4
  1782  0043  3000               	movlw	high __pbssBANK0
  1783  0044  0085               	movwf	5
  1784  0045  3030               	movlw	48
  1785  0046  243B               	fcall	clear_ram0
  1786                           
  1787                           ; Clear objects allocated to BANK1
  1788  0047  30A0               	movlw	low __pbssBANK1
  1789  0048  0084               	movwf	4
  1790  0049  3000               	movlw	high __pbssBANK1
  1791  004A  0085               	movwf	5
  1792  004B  3020               	movlw	32
  1793  004C  243B               	fcall	clear_ram0
  1794  004D                     end_of_initialization:	
  1795                           ;End of C runtime variable initialization code
  1796                           
  1797  004D                     __end_of__initialization:	
  1798  004D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1799  004E  0020               	movlb	0
  1800  004F  290F               	ljmp	_main	;jump to C main() function
  1801                           
  1802                           	psect	bssCOMMON
  1803  007A                     __pbssCOMMON:	
  1804  007A                     _eusartTxBufferRemaining:	
  1805  007A                     	ds	1
  1806  007B                     _eusartTxHead:	
  1807  007B                     	ds	1
  1808                           
  1809                           	psect	bssBANK0
  1810  0020                     __pbssBANK0:	
  1811  0020                     _eusartRxBuffer:	
  1812  0020                     	ds	8
  1813  0028                     _TMR1_InterruptHandler:	
  1814  0028                     	ds	2
  1815  002A                     _timer1ReloadVal:	
  1816  002A                     	ds	2
  1817  002C                     _ADC_value:	
  1818  002C                     	ds	2
  1819  002E                     _EUSART_RxDefaultInterruptHandler:	
  1820  002E                     	ds	2
  1821  0030                     _EUSART_TxDefaultInterruptHandler:	
  1822  0030                     	ds	2
  1823  0032                     _ESP_wait_exception:	
  1824  0032                     	ds	1
  1825  0033                     _esp_channel:	
  1826  0033                     	ds	1
  1827  0034                     _esp_read_data_index:	
  1828  0034                     	ds	1
  1829  0035                     _WIFI_tx_buf_ind:	
  1830  0035                     	ds	1
  1831  0036                     _IOC_value:	
  1832  0036                     	ds	1
  1833  0037                     _TMR1_state:	
  1834  0037                     	ds	1
  1835  0038                     _ADC_count:	
  1836  0038                     	ds	1
  1837  0039                     _message_format:	
  1838  0039                     	ds	1
  1839  003A                     _IOC_state:	
  1840  003A                     	ds	1
  1841  003B                     _eusartRxCount:	
  1842  003B                     	ds	1
  1843  003C                     _eusartRxTail:	
  1844  003C                     	ds	1
  1845  003D                     _eusartRxHead:	
  1846  003D                     	ds	1
  1847  003E                     _eusartTxTail:	
  1848  003E                     	ds	1
  1849  003F                     _ADC_state:	
  1850  003F                     	ds	1
  1851  0040                     _WIFI_tx_buf:	
  1852  0040                     	ds	16
  1853                           
  1854                           	psect	bssBANK1
  1855  00A0                     __pbssBANK1:	
  1856  00A0                     _eusartTxBuffer:	
  1857  00A0                     	ds	16
  1858  00B0                     _esp_read_data:	
  1859  00B0                     	ds	16
  1860                           
  1861                           	psect	clrtext
  1862  043B                     clear_ram0:	
  1863                           ;	Called with FSR0 containing the base address, and
  1864                           ;	WREG with the size to clear
  1865                           
  1866  043B  0064               	clrwdt	;clear the watchdog before getting into this loop
  1867  043C                     clrloop0:	
  1868  043C  0180               	clrf	0	;clear RAM location pointed to by FSR
  1869  043D  3101               	addfsr 0,1
  1870  043E  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1871  043F  2C3C               	goto	clrloop0	;have we reached the end yet?
  1872  0440  3400               	retlw	0	;all done for this memory range, return
  1873                           
  1874                           	psect	cstackCOMMON
  1875  0070                     __pcstackCOMMON:	
  1876  0070                     ?_IOCAF4_DefaultInterruptHandler:	
  1877  0070                     ??_IOCAF4_DefaultInterruptHandler:	
  1878                           ; 1 bytes @ 0x0
  1879                           
  1880  0070                     ?_IOCAF4_ISR:	
  1881                           ; 1 bytes @ 0x0
  1882                           
  1883  0070                     ??_IOCAF4_ISR:	
  1884                           ; 1 bytes @ 0x0
  1885                           
  1886  0070                     ?_OSCILLATOR_Initialize:	
  1887                           ; 1 bytes @ 0x0
  1888                           
  1889  0070                     ?_WDT_Initialize:	
  1890                           ; 1 bytes @ 0x0
  1891                           
  1892  0070                     ?_TMR1_Initialize:	
  1893                           ; 1 bytes @ 0x0
  1894                           
  1895  0070                     ?_ADC_Initialize:	
  1896                           ; 1 bytes @ 0x0
  1897                           
  1898  0070                     ?_EUSART_Initialize:	
  1899                           ; 1 bytes @ 0x0
  1900                           
  1901  0070                     ?_TMR1_ISR:	
  1902                           ; 1 bytes @ 0x0
  1903                           
  1904  0070                     ?_ADC_ISR:	
  1905                           ; 1 bytes @ 0x0
  1906                           
  1907  0070                     ??_ADC_ISR:	
  1908                           ; 1 bytes @ 0x0
  1909                           
  1910  0070                     ?_TMR1_DefaultInterruptHandler:	
  1911                           ; 1 bytes @ 0x0
  1912                           
  1913  0070                     ??_TMR1_DefaultInterruptHandler:	
  1914                           ; 1 bytes @ 0x0
  1915                           
  1916  0070                     ?_EUSART_Receive_ISR:	
  1917                           ; 1 bytes @ 0x0
  1918                           
  1919  0070                     ??_EUSART_Receive_ISR:	
  1920                           ; 1 bytes @ 0x0
  1921                           
  1922  0070                     ?_EUSART_Transmit_ISR:	
  1923                           ; 1 bytes @ 0x0
  1924                           
  1925  0070                     ??_EUSART_Transmit_ISR:	
  1926                           ; 1 bytes @ 0x0
  1927                           
  1928  0070                     ?_logger_initialize:	
  1929                           ; 1 bytes @ 0x0
  1930                           
  1931  0070                     ?_bt_message_handler:	
  1932                           ; 1 bytes @ 0x0
  1933                           
  1934  0070                     ?_read_analog:	
  1935                           ; 1 bytes @ 0x0
  1936                           
  1937  0070                     ?_process_ioc:	
  1938                           ; 1 bytes @ 0x0
  1939                           
  1940  0070                     ?__TMR1_Ready:	
  1941                           ; 1 bytes @ 0x0
  1942                           
  1943  0070                     ??__TMR1_Ready:	
  1944                           ; 1 bytes @ 0x0
  1945                           
  1946  0070                     ?__IOC_Ready:	
  1947                           ; 1 bytes @ 0x0
  1948                           
  1949  0070                     ??__IOC_Ready:	
  1950                           ; 1 bytes @ 0x0
  1951                           
  1952  0070                     ?_toggle_format:	
  1953                           ; 1 bytes @ 0x0
  1954                           
  1955  0070                     ?_PIN_MANAGER_Initialize:	
  1956                           ; 1 bytes @ 0x0
  1957                           
  1958  0070                     ?_PIN_MANAGER_IOC:	
  1959                           ; 1 bytes @ 0x0
  1960                           
  1961  0070                     ??_PIN_MANAGER_IOC:	
  1962                           ; 1 bytes @ 0x0
  1963                           
  1964  0070                     ?_SYSTEM_Initialize:	
  1965                           ; 1 bytes @ 0x0
  1966                           
  1967  0070                     ?_INTERRUPT_InterruptManager:	
  1968                           ; 1 bytes @ 0x0
  1969                           
  1970  0070                     ?_ADC_SelectChannel:	
  1971                           ; 1 bytes @ 0x0
  1972                           
  1973  0070                     ?_ADC_StartConversion:	
  1974                           ; 1 bytes @ 0x0
  1975                           
  1976  0070                     ?_TMR1_StartTimer:	
  1977                           ; 1 bytes @ 0x0
  1978                           
  1979  0070                     ?_TMR1_StopTimer:	
  1980                           ; 1 bytes @ 0x0
  1981                           
  1982  0070                     ?_TMR1_WriteTimer:	
  1983                           ; 1 bytes @ 0x0
  1984                           
  1985  0070                     ?_EUSART_is_tx_ready:	
  1986                           ; 1 bytes @ 0x0
  1987                           
  1988  0070                     ?_EUSART_is_rx_ready:	
  1989                           ; 1 bytes @ 0x0
  1990                           
  1991  0070                     ?_EUSART_Read:	
  1992                           ; 1 bytes @ 0x0
  1993                           
  1994  0070                     ?_EUSART_Write:	
  1995                           ; 1 bytes @ 0x0
  1996                           
  1997  0070                     ?_main:	
  1998                           ; 1 bytes @ 0x0
  1999                           
  2000  0070                     ?i1_ADC_StartConversion:	
  2001                           ; 1 bytes @ 0x0
  2002                           
  2003  0070                     ??i1_ADC_StartConversion:	
  2004                           ; 1 bytes @ 0x0
  2005                           
  2006  0070                     ?_ADC_GetConversionResult:	
  2007                           ; 1 bytes @ 0x0
  2008                           
  2009  0070                     TMR1_WriteTimer@timerVal:	
  2010                           ; 2 bytes @ 0x0
  2011                           
  2012                           
  2013                           ; 2 bytes @ 0x0
  2014  0070                     	ds	2
  2015  0072                     ?_IOCAF4_SetInterruptHandler:	
  2016  0072                     ??_OSCILLATOR_Initialize:	
  2017                           ; 1 bytes @ 0x2
  2018                           
  2019  0072                     ??_WDT_Initialize:	
  2020                           ; 1 bytes @ 0x2
  2021                           
  2022  0072                     ??_ADC_Initialize:	
  2023                           ; 1 bytes @ 0x2
  2024                           
  2025  0072                     ??_TMR1_ISR:	
  2026                           ; 1 bytes @ 0x2
  2027                           
  2028  0072                     ??_ADC_GetConversionResult:	
  2029                           ; 1 bytes @ 0x2
  2030                           
  2031  0072                     ?_TMR1_SetInterruptHandler:	
  2032                           ; 1 bytes @ 0x2
  2033                           
  2034  0072                     ?_EUSART_SetRxInterruptHandler:	
  2035                           ; 1 bytes @ 0x2
  2036                           
  2037  0072                     ?_EUSART_SetTxInterruptHandler:	
  2038                           ; 1 bytes @ 0x2
  2039                           
  2040  0072                     ?_ESP_Set_application_handler:	
  2041                           ; 1 bytes @ 0x2
  2042                           
  2043  0072                     ??_INTERRUPT_InterruptManager:	
  2044                           ; 1 bytes @ 0x2
  2045                           
  2046  0072                     ??_ADC_SelectChannel:	
  2047                           ; 1 bytes @ 0x2
  2048                           
  2049  0072                     ??_ADC_StartConversion:	
  2050                           ; 1 bytes @ 0x2
  2051                           
  2052  0072                     ??_TMR1_StartTimer:	
  2053                           ; 1 bytes @ 0x2
  2054                           
  2055  0072                     ??_TMR1_StopTimer:	
  2056                           ; 1 bytes @ 0x2
  2057                           
  2058  0072                     ??_TMR1_WriteTimer:	
  2059                           ; 1 bytes @ 0x2
  2060                           
  2061  0072                     ??_EUSART_is_tx_ready:	
  2062                           ; 1 bytes @ 0x2
  2063                           
  2064  0072                     ??_EUSART_is_rx_ready:	
  2065                           ; 1 bytes @ 0x2
  2066                           
  2067  0072                     ??_EUSART_Read:	
  2068                           ; 1 bytes @ 0x2
  2069                           
  2070  0072                     ??_EUSART_Write:	
  2071                           ; 1 bytes @ 0x2
  2072                           
  2073  0072                     ?___lwdiv:	
  2074                           ; 1 bytes @ 0x2
  2075                           
  2076  0072                     ?___lwmod:	
  2077                           ; 2 bytes @ 0x2
  2078                           
  2079  0072                     ?___lmul:	
  2080                           ; 2 bytes @ 0x2
  2081                           
  2082  0072                     EUSART_Read@readValue:	
  2083                           ; 4 bytes @ 0x2
  2084                           
  2085  0072                     EUSART_Write@txData:	
  2086                           ; 1 bytes @ 0x2
  2087                           
  2088  0072                     IOCAF4_SetInterruptHandler@InterruptHandler:	
  2089                           ; 1 bytes @ 0x2
  2090                           
  2091  0072                     TMR1_SetInterruptHandler@InterruptHandler:	
  2092                           ; 2 bytes @ 0x2
  2093                           
  2094  0072                     EUSART_SetTxInterruptHandler@interruptHandler:	
  2095                           ; 2 bytes @ 0x2
  2096                           
  2097  0072                     EUSART_SetRxInterruptHandler@interruptHandler:	
  2098                           ; 2 bytes @ 0x2
  2099                           
  2100  0072                     ESP_Set_application_handler@applicationHandler:	
  2101                           ; 2 bytes @ 0x2
  2102                           
  2103  0072                     ___lwdiv@divisor:	
  2104                           ; 2 bytes @ 0x2
  2105                           
  2106  0072                     ___lwmod@divisor:	
  2107                           ; 2 bytes @ 0x2
  2108                           
  2109  0072                     ___lmul@multiplier:	
  2110                           ; 2 bytes @ 0x2
  2111                           
  2112                           
  2113                           ; 4 bytes @ 0x2
  2114  0072                     	ds	1
  2115  0073                     ?__puts:	
  2116  0073                     ?_write:	
  2117                           ; 1 bytes @ 0x3
  2118                           
  2119  0073                     ADC_SelectChannel@channel:	
  2120                           ; 1 bytes @ 0x3
  2121                           
  2122  0073                     write@lenght:	
  2123                           ; 1 bytes @ 0x3
  2124                           
  2125  0073                     __puts@pt:	
  2126                           ; 1 bytes @ 0x3
  2127                           
  2128                           
  2129                           ; 2 bytes @ 0x3
  2130  0073                     	ds	1
  2131  0074                     ??_IOCAF4_SetInterruptHandler:	
  2132  0074                     ??_TMR1_Initialize:	
  2133                           ; 1 bytes @ 0x4
  2134                           
  2135  0074                     ??_EUSART_Initialize:	
  2136                           ; 1 bytes @ 0x4
  2137                           
  2138  0074                     ??_TMR1_SetInterruptHandler:	
  2139                           ; 1 bytes @ 0x4
  2140                           
  2141  0074                     ??_EUSART_SetRxInterruptHandler:	
  2142                           ; 1 bytes @ 0x4
  2143                           
  2144  0074                     ??_EUSART_SetTxInterruptHandler:	
  2145                           ; 1 bytes @ 0x4
  2146                           
  2147  0074                     ??_logger_initialize:	
  2148                           ; 1 bytes @ 0x4
  2149                           
  2150  0074                     ??_ESP_Set_application_handler:	
  2151                           ; 1 bytes @ 0x4
  2152                           
  2153  0074                     ??_PIN_MANAGER_Initialize:	
  2154                           ; 1 bytes @ 0x4
  2155                           
  2156  0074                     ??_SYSTEM_Initialize:	
  2157                           ; 1 bytes @ 0x4
  2158                           
  2159  0074                     ??_write:	
  2160                           ; 1 bytes @ 0x4
  2161                           
  2162  0074                     ___lwdiv@dividend:	
  2163                           ; 1 bytes @ 0x4
  2164                           
  2165  0074                     ___lwmod@dividend:	
  2166                           ; 2 bytes @ 0x4
  2167                           
  2168                           
  2169                           ; 2 bytes @ 0x4
  2170  0074                     	ds	1
  2171  0075                     ??__puts:	
  2172  0075                     write@i:	
  2173                           ; 1 bytes @ 0x5
  2174                           
  2175                           
  2176                           ; 1 bytes @ 0x5
  2177  0075                     	ds	1
  2178  0076                     ??___lwdiv:	
  2179  0076                     ??___lwmod:	
  2180                           ; 1 bytes @ 0x6
  2181                           
  2182  0076                     write@pt:	
  2183                           ; 1 bytes @ 0x6
  2184                           
  2185  0076                     ___lwmod@counter:	
  2186                           ; 1 bytes @ 0x6
  2187                           
  2188  0076                     ___lwdiv@quotient:	
  2189                           ; 1 bytes @ 0x6
  2190                           
  2191  0076                     ___lmul@multiplicand:	
  2192                           ; 2 bytes @ 0x6
  2193                           
  2194                           
  2195                           ; 4 bytes @ 0x6
  2196  0076                     	ds	2
  2197  0078                     __puts@index:	
  2198  0078                     ___lwdiv@counter:	
  2199                           ; 1 bytes @ 0x8
  2200                           
  2201                           
  2202                           ; 1 bytes @ 0x8
  2203  0078                     	ds	1
  2204  0079                     ??_process_ioc:	
  2205  0079                     ?_process_message:	
  2206                           ; 1 bytes @ 0x9
  2207                           
  2208  0079                     ??_toggle_format:	
  2209                           ; 1 bytes @ 0x9
  2210                           
  2211  0079                     ??__sprintf:	
  2212                           ; 1 bytes @ 0x9
  2213                           
  2214  0079                     process_message@message:	
  2215                           ; 1 bytes @ 0x9
  2216                           
  2217                           
  2218                           ; 1 bytes @ 0x9
  2219  0079                     	ds	1
  2220  007A                     ??_bt_message_handler:	
  2221  007A                     ??___lmul:	
  2222                           ; 1 bytes @ 0xA
  2223                           
  2224                           
  2225                           	psect	cstackBANK0
  2226  0050                     __pcstackBANK0:	
  2227                           ; 1 bytes @ 0xA
  2228                           
  2229  0050                     ??_process_message:	
  2230  0050                     ?__sprintf:	
  2231                           ; 1 bytes @ 0x0
  2232                           
  2233  0050                     __sprintf@val:	
  2234                           ; 1 bytes @ 0x0
  2235                           
  2236  0050                     ___lmul@product:	
  2237                           ; 2 bytes @ 0x0
  2238                           
  2239                           
  2240                           ; 4 bytes @ 0x0
  2241  0050                     	ds	2
  2242  0052                     bt_message_handler@message:	
  2243  0052                     __sprintf@aux:	
  2244                           ; 1 bytes @ 0x2
  2245                           
  2246                           
  2247                           ; 2 bytes @ 0x2
  2248  0052                     	ds	2
  2249  0054                     __sprintf@mess:	
  2250                           
  2251                           ; 1 bytes @ 0x4
  2252  0054                     	ds	1
  2253  0055                     ??_read_analog:	
  2254                           
  2255                           ; 1 bytes @ 0x5
  2256  0055                     	ds	4
  2257  0059                     read_analog@mess:	
  2258                           
  2259                           ; 6 bytes @ 0x9
  2260  0059                     	ds	6
  2261  005F                     read_analog@aux1:	
  2262                           
  2263                           ; 4 bytes @ 0xF
  2264  005F                     	ds	4
  2265  0063                     read_analog@adc_val:	
  2266                           
  2267                           ; 2 bytes @ 0x13
  2268  0063                     	ds	2
  2269  0065                     ??_main:	
  2270                           
  2271                           ; 1 bytes @ 0x15
  2272  0065                     	ds	2
  2273                           
  2274                           	psect	maintext
  2275  010F                     __pmaintext:	
  2276 ;;
  2277 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2278 ;;
  2279 ;; *************** function _main *****************
  2280 ;; Defined at:
  2281 ;;		line 51 in file "main.c"
  2282 ;; Parameters:    Size  Location     Type
  2283 ;;		None
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;		None
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  1    wreg      void 
  2288 ;; Registers used:
  2289 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2290 ;; Tracked objects:
  2291 ;;		On entry : B1F/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMMON   BANK0   BANK1
  2295 ;;      Params:         0       0       0
  2296 ;;      Locals:         0       0       0
  2297 ;;      Temps:          0       2       0
  2298 ;;      Totals:         0       2       0
  2299 ;;Total ram usage:        2 bytes
  2300 ;; Hardware stack levels required when called:    9
  2301 ;; This function calls:
  2302 ;;		_EUSART_is_rx_ready
  2303 ;;		_SYSTEM_Initialize
  2304 ;;		_bt_message_handler
  2305 ;;		_logger_initialize
  2306 ;;		_process_ioc
  2307 ;;		_read_analog
  2308 ;; This function is called by:
  2309 ;;		Startup code after reset
  2310 ;; This function uses a non-reentrant model
  2311 ;;
  2312                           
  2313                           
  2314                           ;psect for function _main
  2315  010F                     _main:	
  2316                           
  2317                           ;main.c: 54:     SYSTEM_Initialize();
  2318                           
  2319                           ;incstack = 0
  2320                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2321  010F  2441               	fcall	_SYSTEM_Initialize
  2322                           
  2323                           ;main.c: 60:     logger_initialize();
  2324  0110  2242               	fcall	_logger_initialize
  2325                           
  2326                           ;main.c: 67:     (INTCONbits.GIE = 1);
  2327  0111  178B               	bsf	11,7	;volatile
  2328                           
  2329                           ;main.c: 73:     (INTCONbits.PEIE = 1);
  2330  0112  170B               	bsf	11,6	;volatile
  2331  0113  0022               	movlb	2	; select bank2
  2332  0114  168C               	bsf	12,5	;volatile
  2333                           
  2334                           ;main.c: 79:     _delay((unsigned long)((200)*(32000000/4000.0)));
  2335  0115  3009               	movlw	9
  2336  0116  0020               	movlb	0	; select bank0
  2337  0117  00E6               	movwf	??_main+1
  2338  0118  301E               	movlw	30
  2339  0119  00E5               	movwf	??_main
  2340  011A  30E4               	movlw	228
  2341  011B                     u1047:	
  2342  011B  0B89               	decfsz	9,f
  2343  011C  291B               	goto	u1047
  2344  011D  0BE5               	decfsz	??_main,f
  2345  011E  291B               	goto	u1047
  2346  011F  0BE6               	decfsz	??_main+1,f
  2347  0120  291B               	goto	u1047
  2348  0121  0000               	nop
  2349  0122  0022               	movlb	2	; select bank2
  2350  0123  128C               	bcf	12,5	;volatile
  2351                           
  2352                           ;main.c: 81:     _delay((unsigned long)((200)*(32000000/4000.0)));
  2353  0124  3009               	movlw	9
  2354  0125  0020               	movlb	0	; select bank0
  2355  0126  00E6               	movwf	??_main+1
  2356  0127  301E               	movlw	30
  2357  0128  00E5               	movwf	??_main
  2358  0129  30E4               	movlw	228
  2359  012A                     u1057:	
  2360  012A  0B89               	decfsz	9,f
  2361  012B  292A               	goto	u1057
  2362  012C  0BE5               	decfsz	??_main,f
  2363  012D  292A               	goto	u1057
  2364  012E  0BE6               	decfsz	??_main+1,f
  2365  012F  292A               	goto	u1057
  2366  0130  0000               	nop
  2367  0131                     l2356:	
  2368                           
  2369                           ;main.c: 95:     {;main.c: 98:         if (EUSART_is_rx_ready()) {
  2370  0131  248A               	fcall	_EUSART_is_rx_ready
  2371  0132  3A00               	xorlw	0
  2372  0133  1903               	skipnz
  2373  0134  2936               	goto	l2360
  2374                           
  2375                           ;main.c: 100:                 bt_message_handler();
  2376  0135  2469               	fcall	_bt_message_handler
  2377  0136                     l2360:	
  2378                           
  2379                           ;main.c: 106:         if (ADC_state == ADC_READY) {
  2380  0136  0020               	movlb	0	; select bank0
  2381  0137  0B3F               	decfsz	_ADC_state,w	;volatile
  2382  0138  293A               	goto	l2364
  2383                           
  2384                           ;main.c: 107:             read_analog();
  2385  0139  20BC               	fcall	_read_analog
  2386  013A                     l2364:	
  2387                           
  2388                           ;main.c: 110:         if (IOC_state == IOC_READY) {
  2389  013A  0020               	movlb	0	; select bank0
  2390  013B  0B3A               	decfsz	_IOC_state,w	;volatile
  2391  013C  293E               	goto	l360
  2392                           
  2393                           ;main.c: 111:             process_ioc();
  2394  013D  2376               	fcall	_process_ioc
  2395  013E                     l360:	
  2396                           ;main.c: 112:         }
  2397                           
  2398  013E  0064               	clrwdt	;# 
  2399  013F  2931               	goto	l2356
  2400  0140                     __end_of_main:	
  2401                           
  2402                           	psect	text1
  2403  00BC                     __ptext1:	
  2404 ;; *************** function _read_analog *****************
  2405 ;; Defined at:
  2406 ;;		line 97 in file "logger.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;		None
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;  mess            6    9[BANK0 ] unsigned char [6]
  2411 ;;  aux1            4   15[BANK0 ] unsigned long 
  2412 ;;  adc_val         2   19[BANK0 ] unsigned short 
  2413 ;; Return value:  Size  Location     Type
  2414 ;;                  1    wreg      void 
  2415 ;; Registers used:
  2416 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2417 ;; Tracked objects:
  2418 ;;		On entry : 1F/0
  2419 ;;		On exit  : 1E/0
  2420 ;;		Unchanged: 0/0
  2421 ;; Data sizes:     COMMON   BANK0   BANK1
  2422 ;;      Params:         0       0       0
  2423 ;;      Locals:         0      12       0
  2424 ;;      Temps:          0       4       0
  2425 ;;      Totals:         0      16       0
  2426 ;;Total ram usage:       16 bytes
  2427 ;; Hardware stack levels used:    1
  2428 ;; Hardware stack levels required when called:    6
  2429 ;; This function calls:
  2430 ;;		___lmul
  2431 ;;		__sprintf
  2432 ;;		_write
  2433 ;; This function is called by:
  2434 ;;		_main
  2435 ;; This function uses a non-reentrant model
  2436 ;;
  2437                           
  2438                           
  2439                           ;psect for function _read_analog
  2440  00BC                     _read_analog:	
  2441                           
  2442                           ;logger.c: 99:     unsigned short adc_val;;logger.c: 101:     unsigned long aux1;;logger
      +                          .c: 102:     unsigned char mess[6];;logger.c: 104:     adc_val = ADC_value;
  2443                           
  2444                           ;incstack = 0
  2445                           ; Regs used in _read_analog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2446  00BC  082D               	movf	_ADC_value+1,w	;volatile
  2447  00BD  00E4               	movwf	read_analog@adc_val+1
  2448  00BE  082C               	movf	_ADC_value,w	;volatile
  2449  00BF  00E3               	movwf	read_analog@adc_val
  2450                           
  2451                           ;logger.c: 105:     ADC_state = ADC_IDLE;
  2452  00C0  01BF               	clrf	_ADC_state	;volatile
  2453                           
  2454                           ;logger.c: 107:     if (message_format == MESSAGE_BINARY) {
  2455  00C1  0839               	movf	_message_format,w	;volatile
  2456  00C2  1D03               	btfss	3,2
  2457  00C3  28DC               	goto	l2332
  2458                           
  2459                           ;logger.c: 108:        WIFI_tx_buf[WIFI_tx_buf_ind++] = (unsigned char)(adc_val & 0xff);
  2460  00C4  0835               	movf	_WIFI_tx_buf_ind,w
  2461  00C5  3E40               	addlw	(low (_WIFI_tx_buf| 0))& (0+255)
  2462  00C6  0086               	movwf	6
  2463  00C7  0187               	clrf	7
  2464  00C8  0863               	movf	read_analog@adc_val,w
  2465  00C9  0081               	movwf	1
  2466  00CA  0AB5               	incf	_WIFI_tx_buf_ind,f	;volatile
  2467                           
  2468                           ;logger.c: 109:        WIFI_tx_buf[WIFI_tx_buf_ind++] = (unsigned char)((adc_val >> 8) &
      +                           0xff);
  2469  00CB  0835               	movf	_WIFI_tx_buf_ind,w
  2470  00CC  3E40               	addlw	(low (_WIFI_tx_buf| 0))& (0+255)
  2471  00CD  0086               	movwf	6
  2472  00CE  0864               	movf	read_analog@adc_val+1,w
  2473  00CF  0081               	movwf	1
  2474  00D0  0AB5               	incf	_WIFI_tx_buf_ind,f	;volatile
  2475                           
  2476                           ;logger.c: 111:        if (WIFI_tx_buf_ind == 16) {
  2477  00D1  3010               	movlw	16
  2478  00D2  0635               	xorwf	_WIFI_tx_buf_ind,w	;volatile
  2479  00D3  1D03               	btfss	3,2
  2480  00D4  0008               	return
  2481                           
  2482                           ;logger.c: 113:                 write(WIFI_tx_buf,16);
  2483  00D5  3010               	movlw	16
  2484  00D6  00F3               	movwf	write@lenght
  2485  00D7  3040               	movlw	(low (_WIFI_tx_buf| 0))& (0+255)
  2486  00D8  2315               	fcall	_write
  2487                           
  2488                           ;logger.c: 118:             WIFI_tx_buf_ind = 0;
  2489  00D9  0020               	movlb	0	; select bank0
  2490  00DA  01B5               	clrf	_WIFI_tx_buf_ind	;volatile
  2491  00DB  0008               	return
  2492  00DC                     l2332:	
  2493                           
  2494                           ;logger.c: 122:         aux1 = (unsigned long)adc_val*3300UL;
  2495  00DC  0863               	movf	read_analog@adc_val,w
  2496  00DD  00F2               	movwf	___lmul@multiplier
  2497  00DE  0864               	movf	read_analog@adc_val+1,w
  2498  00DF  00F3               	movwf	___lmul@multiplier+1
  2499  00E0  300C               	movlw	12
  2500  00E1  01F4               	clrf	___lmul@multiplier+2
  2501  00E2  01F5               	clrf	___lmul@multiplier+3
  2502  00E3  01F9               	clrf	___lmul@multiplicand+3
  2503  00E4  01F8               	clrf	___lmul@multiplicand+2
  2504  00E5  00F7               	movwf	___lmul@multiplicand+1
  2505  00E6  30E4               	movlw	228
  2506  00E7  00F6               	movwf	___lmul@multiplicand
  2507  00E8  21B9               	fcall	___lmul
  2508  00E9  0875               	movf	?___lmul+3,w
  2509  00EA  00E2               	movwf	read_analog@aux1+3
  2510  00EB  0874               	movf	?___lmul+2,w
  2511  00EC  00E1               	movwf	read_analog@aux1+2
  2512  00ED  0873               	movf	?___lmul+1,w
  2513  00EE  00E0               	movwf	read_analog@aux1+1
  2514  00EF  0872               	movf	?___lmul,w
  2515  00F0  00DF               	movwf	read_analog@aux1
  2516                           
  2517                           ;logger.c: 123:         adc_val = (unsigned short)(aux1 >> 10);
  2518  00F1  00D5               	movwf	??_read_analog
  2519  00F2  0860               	movf	read_analog@aux1+1,w
  2520  00F3  00D6               	movwf	??_read_analog+1
  2521  00F4  0861               	movf	read_analog@aux1+2,w
  2522  00F5  00D7               	movwf	??_read_analog+2
  2523  00F6  0862               	movf	read_analog@aux1+3,w
  2524  00F7  00D8               	movwf	??_read_analog+3
  2525  00F8  300A               	movlw	10
  2526  00F9                     u1005:	
  2527  00F9  36D8               	lsrf	??_read_analog+3,f
  2528  00FA  0CD7               	rrf	??_read_analog+2,f
  2529  00FB  0CD6               	rrf	??_read_analog+1,f
  2530  00FC  0CD5               	rrf	??_read_analog,f
  2531  00FD  0B89               	decfsz	9,f
  2532  00FE  28F9               	goto	u1005
  2533  00FF  0856               	movf	??_read_analog+1,w
  2534  0100  00E4               	movwf	read_analog@adc_val+1
  2535  0101  0855               	movf	??_read_analog,w
  2536  0102  00E3               	movwf	read_analog@adc_val
  2537                           
  2538                           ;logger.c: 125:         _sprintf(mess,adc_val);
  2539  0103  0864               	movf	read_analog@adc_val+1,w
  2540  0104  00D1               	movwf	__sprintf@val+1
  2541  0105  0863               	movf	read_analog@adc_val,w
  2542  0106  00D0               	movwf	__sprintf@val
  2543  0107  3059               	movlw	(low (read_analog@mess| 0))& (0+255)
  2544  0108  2050               	fcall	__sprintf
  2545                           
  2546                           ;logger.c: 126:         mess[5] = '\n';
  2547  0109  300A               	movlw	10
  2548  010A  00DE               	movwf	read_analog@mess+5
  2549                           
  2550                           ;logger.c: 128:             write(mess,6);
  2551  010B  3006               	movlw	6
  2552  010C  00F3               	movwf	write@lenght
  2553  010D  3059               	movlw	(low (read_analog@mess| 0))& (0+255)
  2554  010E  2B15               	ljmp	_write
  2555  010F                     __end_of_read_analog:	
  2556                           
  2557                           	psect	text2
  2558  0315                     __ptext2:	
  2559 ;; *************** function _write *****************
  2560 ;; Defined at:
  2561 ;;		line 15 in file "comm.c"
  2562 ;; Parameters:    Size  Location     Type
  2563 ;;  pt              1    wreg     PTR unsigned char 
  2564 ;;		 -> ESP_write@res(1), ESP_write@aux(1), read_wifi_settings@pass(14), read_wifi_settings@wifi(10), 
  2565 ;;		 -> read_analog@mess(6), WIFI_tx_buf(16), 
  2566 ;;  lenght          1    3[COMMON] unsigned char 
  2567 ;; Auto vars:     Size  Location     Type
  2568 ;;  pt              1    6[COMMON] PTR unsigned char 
  2569 ;;		 -> ESP_write@res(1), ESP_write@aux(1), read_wifi_settings@pass(14), read_wifi_settings@wifi(10), 
  2570 ;;		 -> read_analog@mess(6), WIFI_tx_buf(16), 
  2571 ;;  i               1    5[COMMON] unsigned char 
  2572 ;; Return value:  Size  Location     Type
  2573 ;;                  1    wreg      void 
  2574 ;; Registers used:
  2575 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2576 ;; Tracked objects:
  2577 ;;		On entry : 1F/0
  2578 ;;		On exit  : 1E/0
  2579 ;;		Unchanged: 0/0
  2580 ;; Data sizes:     COMMON   BANK0   BANK1
  2581 ;;      Params:         1       0       0
  2582 ;;      Locals:         2       0       0
  2583 ;;      Temps:          1       0       0
  2584 ;;      Totals:         4       0       0
  2585 ;;Total ram usage:        4 bytes
  2586 ;; Hardware stack levels used:    1
  2587 ;; Hardware stack levels required when called:    5
  2588 ;; This function calls:
  2589 ;;		_EUSART_Write
  2590 ;;		_EUSART_is_tx_ready
  2591 ;; This function is called by:
  2592 ;;		_read_analog
  2593 ;; This function uses a non-reentrant model
  2594 ;;
  2595                           
  2596                           
  2597                           ;psect for function _write
  2598  0315                     _write:	
  2599                           
  2600                           ;incstack = 0
  2601                           ; Regs used in _write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2602                           ;write@pt stored from wreg
  2603  0315  00F6               	movwf	write@pt
  2604                           
  2605                           ;comm.c: 15: void write(unsigned char *pt, unsigned char lenght);comm.c: 16: {;comm.c: 1
      +                          7:     unsigned char i;;comm.c: 19:     for (i=0; i<lenght; i++) {
  2606  0316  01F5               	clrf	write@i
  2607  0317                     l1962:	
  2608  0317  0873               	movf	write@lenght,w
  2609  0318  0275               	subwf	write@i,w
  2610  0319  1803               	btfsc	3,0
  2611  031A  0008               	return
  2612  031B                     l1956:	
  2613  031B  2491               	fcall	_EUSART_is_tx_ready
  2614  031C  3A00               	xorlw	0
  2615  031D  1903               	skipnz
  2616  031E  2B1B               	goto	l1956
  2617                           
  2618                           ;comm.c: 21:         EUSART_Write(pt[i]);
  2619  031F  0875               	movf	write@i,w
  2620  0320  0776               	addwf	write@pt,w
  2621  0321  00F4               	movwf	??_write
  2622  0322  0086               	movwf	6
  2623  0323  0187               	clrf	7
  2624  0324  0801               	movf	1,w
  2625  0325  225F               	fcall	_EUSART_Write
  2626                           
  2627                           ;comm.c: 22:     }
  2628  0326  0AF5               	incf	write@i,f
  2629  0327  2B17               	goto	l1962
  2630  0328                     __end_of_write:	
  2631                           
  2632                           	psect	text3
  2633  0050                     __ptext3:	
  2634 ;; *************** function __sprintf *****************
  2635 ;; Defined at:
  2636 ;;		line 25 in file "comm.c"
  2637 ;; Parameters:    Size  Location     Type
  2638 ;;  mess            1    wreg     PTR unsigned char 
  2639 ;;		 -> read_analog@mess(6), 
  2640 ;;  val             2    0[BANK0 ] unsigned short 
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;  mess            1    4[BANK0 ] PTR unsigned char 
  2643 ;;		 -> read_analog@mess(6), 
  2644 ;;  aux             2    2[BANK0 ] unsigned short 
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  1    wreg      void 
  2647 ;; Registers used:
  2648 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2649 ;; Tracked objects:
  2650 ;;		On entry : 1F/0
  2651 ;;		On exit  : 1F/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMMON   BANK0   BANK1
  2654 ;;      Params:         0       2       0
  2655 ;;      Locals:         0       3       0
  2656 ;;      Temps:          0       0       0
  2657 ;;      Totals:         0       5       0
  2658 ;;Total ram usage:        5 bytes
  2659 ;; Hardware stack levels used:    1
  2660 ;; Hardware stack levels required when called:    5
  2661 ;; This function calls:
  2662 ;;		___lwdiv
  2663 ;;		___lwmod
  2664 ;; This function is called by:
  2665 ;;		_read_analog
  2666 ;; This function uses a non-reentrant model
  2667 ;;
  2668                           
  2669                           
  2670                           ;psect for function __sprintf
  2671  0050                     __sprintf:	
  2672                           
  2673                           ;incstack = 0
  2674                           ; Regs used in __sprintf: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2675                           ;__sprintf@mess stored from wreg
  2676  0050  00D4               	movwf	__sprintf@mess
  2677                           
  2678                           ;comm.c: 25: void _sprintf(char *mess, unsigned short val);comm.c: 26: {;comm.c: 27:   u
      +                          nsigned short aux;;comm.c: 31:   aux = val%10;
  2679  0051  300A               	movlw	10
  2680  0052  00F2               	movwf	___lwmod@divisor
  2681  0053  01F3               	clrf	___lwmod@divisor+1
  2682  0054  0851               	movf	__sprintf@val+1,w
  2683  0055  00F5               	movwf	___lwmod@dividend+1
  2684  0056  0850               	movf	__sprintf@val,w
  2685  0057  00F4               	movwf	___lwmod@dividend
  2686  0058  2222               	fcall	___lwmod
  2687  0059  0873               	movf	?___lwmod+1,w
  2688  005A  00D3               	movwf	__sprintf@aux+1
  2689  005B  0872               	movf	?___lwmod,w
  2690  005C  00D2               	movwf	__sprintf@aux
  2691                           
  2692                           ;comm.c: 32:   val /= 10;
  2693  005D  300A               	movlw	10
  2694  005E  00F2               	movwf	___lwdiv@divisor
  2695  005F  01F3               	clrf	___lwdiv@divisor+1
  2696  0060  0851               	movf	__sprintf@val+1,w
  2697  0061  00F5               	movwf	___lwdiv@dividend+1
  2698  0062  0850               	movf	__sprintf@val,w
  2699  0063  00F4               	movwf	___lwdiv@dividend
  2700  0064  2194               	fcall	___lwdiv
  2701  0065  0873               	movf	?___lwdiv+1,w
  2702  0066  00D1               	movwf	__sprintf@val+1
  2703  0067  0872               	movf	?___lwdiv,w
  2704  0068  00D0               	movwf	__sprintf@val
  2705                           
  2706                           ;comm.c: 34:   mess[5] = 0x00;
  2707  0069  0854               	movf	__sprintf@mess,w
  2708  006A  3E05               	addlw	5
  2709  006B  0086               	movwf	6
  2710  006C  0187               	clrf	7
  2711  006D  0181               	clrf	1
  2712                           
  2713                           ;comm.c: 36:   mess[4] = (unsigned char)aux+'0';
  2714  006E  0854               	movf	__sprintf@mess,w
  2715  006F  3E04               	addlw	4
  2716  0070  0086               	movwf	6
  2717  0071  0852               	movf	__sprintf@aux,w
  2718  0072  3E30               	addlw	48
  2719  0073  0081               	movwf	1
  2720                           
  2721                           ;comm.c: 38:   aux = val%10;
  2722  0074  300A               	movlw	10
  2723  0075  00F2               	movwf	___lwmod@divisor
  2724  0076  01F3               	clrf	___lwmod@divisor+1
  2725  0077  0851               	movf	__sprintf@val+1,w
  2726  0078  00F5               	movwf	___lwmod@dividend+1
  2727  0079  0850               	movf	__sprintf@val,w
  2728  007A  00F4               	movwf	___lwmod@dividend
  2729  007B  2222               	fcall	___lwmod
  2730  007C  0873               	movf	?___lwmod+1,w
  2731  007D  00D3               	movwf	__sprintf@aux+1
  2732  007E  0872               	movf	?___lwmod,w
  2733  007F  00D2               	movwf	__sprintf@aux
  2734                           
  2735                           ;comm.c: 39:   val /= 10;
  2736  0080  300A               	movlw	10
  2737  0081  00F2               	movwf	___lwdiv@divisor
  2738  0082  01F3               	clrf	___lwdiv@divisor+1
  2739  0083  0851               	movf	__sprintf@val+1,w
  2740  0084  00F5               	movwf	___lwdiv@dividend+1
  2741  0085  0850               	movf	__sprintf@val,w
  2742  0086  00F4               	movwf	___lwdiv@dividend
  2743  0087  2194               	fcall	___lwdiv
  2744  0088  0873               	movf	?___lwdiv+1,w
  2745  0089  00D1               	movwf	__sprintf@val+1
  2746  008A  0872               	movf	?___lwdiv,w
  2747  008B  00D0               	movwf	__sprintf@val
  2748                           
  2749                           ;comm.c: 41:   mess[3] = (unsigned char)aux+'0';
  2750  008C  0854               	movf	__sprintf@mess,w
  2751  008D  3E03               	addlw	3
  2752  008E  0086               	movwf	6
  2753  008F  0187               	clrf	7
  2754  0090  0852               	movf	__sprintf@aux,w
  2755  0091  3E30               	addlw	48
  2756  0092  0081               	movwf	1
  2757                           
  2758                           ;comm.c: 43:   aux = val%10;
  2759  0093  300A               	movlw	10
  2760  0094  00F2               	movwf	___lwmod@divisor
  2761  0095  01F3               	clrf	___lwmod@divisor+1
  2762  0096  0851               	movf	__sprintf@val+1,w
  2763  0097  00F5               	movwf	___lwmod@dividend+1
  2764  0098  0850               	movf	__sprintf@val,w
  2765  0099  00F4               	movwf	___lwmod@dividend
  2766  009A  2222               	fcall	___lwmod
  2767  009B  0873               	movf	?___lwmod+1,w
  2768  009C  00D3               	movwf	__sprintf@aux+1
  2769  009D  0872               	movf	?___lwmod,w
  2770  009E  00D2               	movwf	__sprintf@aux
  2771                           
  2772                           ;comm.c: 44:   val /= 10;
  2773  009F  300A               	movlw	10
  2774  00A0  00F2               	movwf	___lwdiv@divisor
  2775  00A1  01F3               	clrf	___lwdiv@divisor+1
  2776  00A2  0851               	movf	__sprintf@val+1,w
  2777  00A3  00F5               	movwf	___lwdiv@dividend+1
  2778  00A4  0850               	movf	__sprintf@val,w
  2779  00A5  00F4               	movwf	___lwdiv@dividend
  2780  00A6  2194               	fcall	___lwdiv
  2781  00A7  0873               	movf	?___lwdiv+1,w
  2782  00A8  00D1               	movwf	__sprintf@val+1
  2783  00A9  0872               	movf	?___lwdiv,w
  2784  00AA  00D0               	movwf	__sprintf@val
  2785                           
  2786                           ;comm.c: 46:   mess[2] = (unsigned char)aux+'0';
  2787  00AB  0854               	movf	__sprintf@mess,w
  2788  00AC  3E02               	addlw	2
  2789  00AD  0086               	movwf	6
  2790  00AE  0187               	clrf	7
  2791  00AF  0852               	movf	__sprintf@aux,w
  2792  00B0  3E30               	addlw	48
  2793  00B1  0081               	movwf	1
  2794                           
  2795                           ;comm.c: 47:   mess[1] = '.';
  2796  00B2  0A54               	incf	__sprintf@mess,w
  2797  00B3  0086               	movwf	6
  2798  00B4  302E               	movlw	46
  2799  00B5  0081               	movwf	1
  2800                           
  2801                           ;comm.c: 48:   mess[0] = (unsigned char)val+'0';
  2802  00B6  0854               	movf	__sprintf@mess,w
  2803  00B7  0086               	movwf	6
  2804  00B8  0850               	movf	__sprintf@val,w
  2805  00B9  3E30               	addlw	48
  2806  00BA  0081               	movwf	1
  2807  00BB  0008               	return
  2808  00BC                     __end_of__sprintf:	
  2809                           
  2810                           	psect	text4
  2811  0222                     __ptext4:	
  2812 ;; *************** function ___lwmod *****************
  2813 ;; Defined at:
  2814 ;;		line 5 in file "/opt/microchip/xc8/v2.00/pic/sources/c99/common/lwmod.c"
  2815 ;; Parameters:    Size  Location     Type
  2816 ;;  divisor         2    2[COMMON] unsigned int 
  2817 ;;  dividend        2    4[COMMON] unsigned int 
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;  counter         1    6[COMMON] unsigned char 
  2820 ;; Return value:  Size  Location     Type
  2821 ;;                  2    2[COMMON] unsigned int 
  2822 ;; Registers used:
  2823 ;;		wreg, status,2, status,0
  2824 ;; Tracked objects:
  2825 ;;		On entry : 1F/0
  2826 ;;		On exit  : 1F/0
  2827 ;;		Unchanged: 1F/0
  2828 ;; Data sizes:     COMMON   BANK0   BANK1
  2829 ;;      Params:         4       0       0
  2830 ;;      Locals:         1       0       0
  2831 ;;      Temps:          0       0       0
  2832 ;;      Totals:         5       0       0
  2833 ;;Total ram usage:        5 bytes
  2834 ;; Hardware stack levels used:    1
  2835 ;; Hardware stack levels required when called:    4
  2836 ;; This function calls:
  2837 ;;		Nothing
  2838 ;; This function is called by:
  2839 ;;		__sprintf
  2840 ;; This function uses a non-reentrant model
  2841 ;;
  2842                           
  2843                           
  2844                           ;psect for function ___lwmod
  2845  0222                     ___lwmod:	
  2846                           
  2847                           ;incstack = 0
  2848                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2849  0222  0872               	movf	___lwmod@divisor,w
  2850  0223  0473               	iorwf	___lwmod@divisor+1,w
  2851  0224  1903               	btfsc	3,2
  2852  0225  2A3D               	goto	l1820
  2853  0226  01F6               	clrf	___lwmod@counter
  2854  0227                     L1:	
  2855  0227  0AF6               	incf	___lwmod@counter,f
  2856  0228  1BF3               	btfsc	___lwmod@divisor+1,7
  2857  0229  2A2D               	goto	l1812
  2858  022A  35F2               	lslf	___lwmod@divisor,f
  2859  022B  0DF3               	rlf	___lwmod@divisor+1,f
  2860  022C  2A27               	goto	L1
  2861  022D                     l1812:	
  2862  022D  0873               	movf	___lwmod@divisor+1,w
  2863  022E  0275               	subwf	___lwmod@dividend+1,w
  2864  022F  1D03               	skipz
  2865  0230  2A33               	goto	u605
  2866  0231  0872               	movf	___lwmod@divisor,w
  2867  0232  0274               	subwf	___lwmod@dividend,w
  2868  0233                     u605:	
  2869  0233  1C03               	skipc
  2870  0234  2A39               	goto	l1816
  2871  0235  0872               	movf	___lwmod@divisor,w
  2872  0236  02F4               	subwf	___lwmod@dividend,f
  2873  0237  0873               	movf	___lwmod@divisor+1,w
  2874  0238  3BF5               	subwfb	___lwmod@dividend+1,f
  2875  0239                     l1816:	
  2876  0239  36F3               	lsrf	___lwmod@divisor+1,f
  2877  023A  0CF2               	rrf	___lwmod@divisor,f
  2878  023B  0BF6               	decfsz	___lwmod@counter,f
  2879  023C  2A2D               	goto	l1812
  2880  023D                     l1820:	
  2881  023D  0875               	movf	___lwmod@dividend+1,w
  2882  023E  00F3               	movwf	?___lwmod+1
  2883  023F  0874               	movf	___lwmod@dividend,w
  2884  0240  00F2               	movwf	?___lwmod
  2885  0241  0008               	return
  2886  0242                     __end_of___lwmod:	
  2887                           
  2888                           	psect	text5
  2889  0194                     __ptext5:	
  2890 ;; *************** function ___lwdiv *****************
  2891 ;; Defined at:
  2892 ;;		line 5 in file "/opt/microchip/xc8/v2.00/pic/sources/c99/common/lwdiv.c"
  2893 ;; Parameters:    Size  Location     Type
  2894 ;;  divisor         2    2[COMMON] unsigned int 
  2895 ;;  dividend        2    4[COMMON] unsigned int 
  2896 ;; Auto vars:     Size  Location     Type
  2897 ;;  quotient        2    6[COMMON] unsigned int 
  2898 ;;  counter         1    8[COMMON] unsigned char 
  2899 ;; Return value:  Size  Location     Type
  2900 ;;                  2    2[COMMON] unsigned int 
  2901 ;; Registers used:
  2902 ;;		wreg, status,2, status,0
  2903 ;; Tracked objects:
  2904 ;;		On entry : 1F/0
  2905 ;;		On exit  : 1F/0
  2906 ;;		Unchanged: 1F/0
  2907 ;; Data sizes:     COMMON   BANK0   BANK1
  2908 ;;      Params:         4       0       0
  2909 ;;      Locals:         3       0       0
  2910 ;;      Temps:          0       0       0
  2911 ;;      Totals:         7       0       0
  2912 ;;Total ram usage:        7 bytes
  2913 ;; Hardware stack levels used:    1
  2914 ;; Hardware stack levels required when called:    4
  2915 ;; This function calls:
  2916 ;;		Nothing
  2917 ;; This function is called by:
  2918 ;;		__sprintf
  2919 ;; This function uses a non-reentrant model
  2920 ;;
  2921                           
  2922                           
  2923                           ;psect for function ___lwdiv
  2924  0194                     ___lwdiv:	
  2925                           
  2926                           ;incstack = 0
  2927                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2928  0194  01F6               	clrf	___lwdiv@quotient
  2929  0195  01F7               	clrf	___lwdiv@quotient+1
  2930  0196  0872               	movf	___lwdiv@divisor,w
  2931  0197  0473               	iorwf	___lwdiv@divisor+1,w
  2932  0198  1903               	btfsc	3,2
  2933  0199  29B4               	goto	l1800
  2934  019A  01F8               	clrf	___lwdiv@counter
  2935  019B                     L2:	
  2936  019B  0AF8               	incf	___lwdiv@counter,f
  2937  019C  1BF3               	btfsc	___lwdiv@divisor+1,7
  2938  019D  29A1               	goto	l1788
  2939  019E  35F2               	lslf	___lwdiv@divisor,f
  2940  019F  0DF3               	rlf	___lwdiv@divisor+1,f
  2941  01A0  299B               	goto	L2
  2942  01A1                     l1788:	
  2943  01A1  35F6               	lslf	___lwdiv@quotient,f
  2944  01A2  0DF7               	rlf	___lwdiv@quotient+1,f
  2945  01A3  0873               	movf	___lwdiv@divisor+1,w
  2946  01A4  0275               	subwf	___lwdiv@dividend+1,w
  2947  01A5  1D03               	skipz
  2948  01A6  29A9               	goto	u565
  2949  01A7  0872               	movf	___lwdiv@divisor,w
  2950  01A8  0274               	subwf	___lwdiv@dividend,w
  2951  01A9                     u565:	
  2952  01A9  1C03               	skipc
  2953  01AA  29B0               	goto	l1796
  2954  01AB  0872               	movf	___lwdiv@divisor,w
  2955  01AC  02F4               	subwf	___lwdiv@dividend,f
  2956  01AD  0873               	movf	___lwdiv@divisor+1,w
  2957  01AE  3BF5               	subwfb	___lwdiv@dividend+1,f
  2958  01AF  1476               	bsf	___lwdiv@quotient,0
  2959  01B0                     l1796:	
  2960  01B0  36F3               	lsrf	___lwdiv@divisor+1,f
  2961  01B1  0CF2               	rrf	___lwdiv@divisor,f
  2962  01B2  0BF8               	decfsz	___lwdiv@counter,f
  2963  01B3  29A1               	goto	l1788
  2964  01B4                     l1800:	
  2965  01B4  0877               	movf	___lwdiv@quotient+1,w
  2966  01B5  00F3               	movwf	?___lwdiv+1
  2967  01B6  0876               	movf	___lwdiv@quotient,w
  2968  01B7  00F2               	movwf	?___lwdiv
  2969  01B8  0008               	return
  2970  01B9                     __end_of___lwdiv:	
  2971                           
  2972                           	psect	text6
  2973  01B9                     __ptext6:	
  2974 ;; *************** function ___lmul *****************
  2975 ;; Defined at:
  2976 ;;		line 15 in file "/opt/microchip/xc8/v2.00/pic/sources/c99/common/Umul32.c"
  2977 ;; Parameters:    Size  Location     Type
  2978 ;;  multiplier      4    2[COMMON] unsigned long 
  2979 ;;  multiplicand    4    6[COMMON] unsigned long 
  2980 ;; Auto vars:     Size  Location     Type
  2981 ;;  product         4    0[BANK0 ] unsigned long 
  2982 ;; Return value:  Size  Location     Type
  2983 ;;                  4    2[COMMON] unsigned long 
  2984 ;; Registers used:
  2985 ;;		wreg, status,2, status,0
  2986 ;; Tracked objects:
  2987 ;;		On entry : 1F/0
  2988 ;;		On exit  : 1F/0
  2989 ;;		Unchanged: 0/0
  2990 ;; Data sizes:     COMMON   BANK0   BANK1
  2991 ;;      Params:         8       0       0
  2992 ;;      Locals:         0       4       0
  2993 ;;      Temps:          0       0       0
  2994 ;;      Totals:         8       4       0
  2995 ;;Total ram usage:       12 bytes
  2996 ;; Hardware stack levels used:    1
  2997 ;; Hardware stack levels required when called:    4
  2998 ;; This function calls:
  2999 ;;		Nothing
  3000 ;; This function is called by:
  3001 ;;		_read_analog
  3002 ;; This function uses a non-reentrant model
  3003 ;;
  3004                           
  3005                           
  3006                           ;psect for function ___lmul
  3007  01B9                     ___lmul:	
  3008                           
  3009                           ;incstack = 0
  3010                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3011  01B9  01D0               	clrf	___lmul@product
  3012  01BA  01D1               	clrf	___lmul@product+1
  3013  01BB  01D2               	clrf	___lmul@product+2
  3014  01BC  01D3               	clrf	___lmul@product+3
  3015  01BD                     l725:	
  3016  01BD  1C72               	btfss	___lmul@multiplier,0
  3017  01BE  29C7               	goto	l2024
  3018  01BF  0876               	movf	___lmul@multiplicand,w
  3019  01C0  07D0               	addwf	___lmul@product,f
  3020  01C1  0877               	movf	___lmul@multiplicand+1,w
  3021  01C2  3DD1               	addwfc	___lmul@product+1,f
  3022  01C3  0878               	movf	___lmul@multiplicand+2,w
  3023  01C4  3DD2               	addwfc	___lmul@product+2,f
  3024  01C5  0879               	movf	___lmul@multiplicand+3,w
  3025  01C6  3DD3               	addwfc	___lmul@product+3,f
  3026  01C7                     l2024:	
  3027  01C7  35F6               	lslf	___lmul@multiplicand,f
  3028  01C8  0DF7               	rlf	___lmul@multiplicand+1,f
  3029  01C9  0DF8               	rlf	___lmul@multiplicand+2,f
  3030  01CA  0DF9               	rlf	___lmul@multiplicand+3,f
  3031  01CB  36F5               	lsrf	___lmul@multiplier+3,f
  3032  01CC  0CF4               	rrf	___lmul@multiplier+2,f
  3033  01CD  0CF3               	rrf	___lmul@multiplier+1,f
  3034  01CE  0CF2               	rrf	___lmul@multiplier,f
  3035  01CF  0875               	movf	___lmul@multiplier+3,w
  3036  01D0  0474               	iorwf	___lmul@multiplier+2,w
  3037  01D1  0473               	iorwf	___lmul@multiplier+1,w
  3038  01D2  0472               	iorwf	___lmul@multiplier,w
  3039  01D3  1D03               	skipz
  3040  01D4  29BD               	goto	l725
  3041  01D5  0853               	movf	___lmul@product+3,w
  3042  01D6  00F5               	movwf	?___lmul+3
  3043  01D7  0852               	movf	___lmul@product+2,w
  3044  01D8  00F4               	movwf	?___lmul+2
  3045  01D9  0851               	movf	___lmul@product+1,w
  3046  01DA  00F3               	movwf	?___lmul+1
  3047  01DB  0850               	movf	___lmul@product,w
  3048  01DC  00F2               	movwf	?___lmul
  3049  01DD  0008               	return
  3050  01DE                     __end_of___lmul:	
  3051                           
  3052                           	psect	text7
  3053  0376                     __ptext7:	
  3054 ;; *************** function _process_ioc *****************
  3055 ;; Defined at:
  3056 ;;		line 174 in file "logger.c"
  3057 ;; Parameters:    Size  Location     Type
  3058 ;;		None
  3059 ;; Auto vars:     Size  Location     Type
  3060 ;;		None
  3061 ;; Return value:  Size  Location     Type
  3062 ;;                  1    wreg      void 
  3063 ;; Registers used:
  3064 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3065 ;; Tracked objects:
  3066 ;;		On entry : 1F/0
  3067 ;;		On exit  : 1E/0
  3068 ;;		Unchanged: 0/0
  3069 ;; Data sizes:     COMMON   BANK0   BANK1
  3070 ;;      Params:         0       0       0
  3071 ;;      Locals:         0       0       0
  3072 ;;      Temps:          0       0       0
  3073 ;;      Totals:         0       0       0
  3074 ;;Total ram usage:        0 bytes
  3075 ;; Hardware stack levels used:    1
  3076 ;; Hardware stack levels required when called:    6
  3077 ;; This function calls:
  3078 ;;		__puts
  3079 ;; This function is called by:
  3080 ;;		_main
  3081 ;; This function uses a non-reentrant model
  3082 ;;
  3083                           
  3084                           
  3085                           ;psect for function _process_ioc
  3086  0376                     _process_ioc:	
  3087                           
  3088                           ;logger.c: 176:     IOC_state = IOC_IDLE;
  3089                           
  3090                           ;incstack = 0
  3091                           ; Regs used in _process_ioc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3092  0376  01BA               	clrf	_IOC_state	;volatile
  3093                           
  3094                           ;logger.c: 177:      if (IOC_value) {
  3095  0377  0836               	movf	_IOC_value,w	;volatile
  3096  0378  1903               	btfsc	3,2
  3097  0379  2B7F               	goto	l2142
  3098                           
  3099                           ;logger.c: 179:             _puts("CH");
  3100  037A  307E               	movlw	low (STR_4| (0+32768))
  3101  037B  00F3               	movwf	__puts@pt
  3102  037C  3084               	movlw	high (STR_4| (0+32768))
  3103  037D  00F4               	movwf	__puts@pt+1
  3104  037E  29DE               	ljmp	l1740
  3105  037F                     l2142:	
  3106                           ;logger.c: 184:     } else {
  3107                           
  3108                           
  3109                           ;logger.c: 186:             _puts("CL");
  3110  037F  3081               	movlw	low (STR_5| (0+32768))
  3111  0380  00F3               	movwf	__puts@pt
  3112  0381  3084               	movlw	high (STR_5| (0+32768))
  3113  0382  00F4               	movwf	__puts@pt+1
  3114  0383  29DE               	ljmp	l1740
  3115  0384                     __end_of_process_ioc:	
  3116                           
  3117                           	psect	text8
  3118  0242                     __ptext8:	
  3119 ;; *************** function _logger_initialize *****************
  3120 ;; Defined at:
  3121 ;;		line 20 in file "logger.c"
  3122 ;; Parameters:    Size  Location     Type
  3123 ;;		None
  3124 ;; Auto vars:     Size  Location     Type
  3125 ;;		None
  3126 ;; Return value:  Size  Location     Type
  3127 ;;                  1    wreg      void 
  3128 ;; Registers used:
  3129 ;;		wreg, status,2, status,0, pclath, cstack
  3130 ;; Tracked objects:
  3131 ;;		On entry : 1F/1
  3132 ;;		On exit  : 1F/0
  3133 ;;		Unchanged: 0/0
  3134 ;; Data sizes:     COMMON   BANK0   BANK1
  3135 ;;      Params:         0       0       0
  3136 ;;      Locals:         0       0       0
  3137 ;;      Temps:          0       0       0
  3138 ;;      Totals:         0       0       0
  3139 ;;Total ram usage:        0 bytes
  3140 ;; Hardware stack levels used:    1
  3141 ;; Hardware stack levels required when called:    5
  3142 ;; This function calls:
  3143 ;;		_ADC_SelectChannel
  3144 ;;		_ESP_Set_application_handler
  3145 ;;		_IOCAF4_SetInterruptHandler
  3146 ;;		_TMR1_SetInterruptHandler
  3147 ;;		_TMR1_StopTimer
  3148 ;; This function is called by:
  3149 ;;		_main
  3150 ;; This function uses a non-reentrant model
  3151 ;;
  3152                           
  3153                           
  3154                           ;psect for function _logger_initialize
  3155  0242                     _logger_initialize:	
  3156                           
  3157                           ;logger.c: 22:     message_format = MESSAGE_BINARY;
  3158                           
  3159                           ;incstack = 0
  3160                           ; Regs used in _logger_initialize: [wreg+status,2+status,0+pclath+cstack]
  3161  0242  0020               	movlb	0	; select bank0
  3162  0243  01B9               	clrf	_message_format	;volatile
  3163                           
  3164                           ;logger.c: 24:     ADC_SelectChannel(channel_AN2);
  3165  0244  3002               	movlw	2
  3166  0245  23C5               	fcall	_ADC_SelectChannel
  3167                           
  3168                           ;logger.c: 25:     ADC_state = ADC_IDLE;
  3169  0246  0020               	movlb	0	; select bank0
  3170  0247  01BF               	clrf	_ADC_state	;volatile
  3171                           
  3172                           ;logger.c: 26:     ADC_value = 0;
  3173  0248  01AC               	clrf	_ADC_value	;volatile
  3174  0249  01AD               	clrf	_ADC_value+1	;volatile
  3175                           
  3176                           ;logger.c: 27:     ADC_count = 0;
  3177  024A  01B8               	clrf	_ADC_count	;volatile
  3178                           
  3179                           ;logger.c: 29:     TMR1_StopTimer();
  3180  024B  2493               	fcall	_TMR1_StopTimer
  3181                           
  3182                           ;logger.c: 30:     TMR1_state = TMR1_STOP;
  3183  024C  01B7               	clrf	_TMR1_state	;volatile
  3184                           
  3185                           ;logger.c: 31:     TMR1_SetInterruptHandler(_TMR1_Ready);
  3186  024D  3027               	movlw	low __TMR1_Ready
  3187  024E  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  3188  024F  3004               	movlw	high __TMR1_Ready
  3189  0250  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  3190  0251  2447               	fcall	_TMR1_SetInterruptHandler
  3191                           
  3192                           ;logger.c: 33:     IOCAF4_SetInterruptHandler(_IOC_Ready);
  3193  0252  302E               	movlw	low __IOC_Ready
  3194  0253  00F2               	movwf	IOCAF4_SetInterruptHandler@InterruptHandler
  3195  0254  3004               	movlw	high __IOC_Ready
  3196  0255  00F3               	movwf	IOCAF4_SetInterruptHandler@InterruptHandler+1
  3197  0256  244D               	fcall	_IOCAF4_SetInterruptHandler
  3198                           
  3199                           ;logger.c: 34:     IOC_state = IOC_IDLE;
  3200  0257  01BA               	clrf	_IOC_state	;volatile
  3201                           
  3202                           ;logger.c: 35:     IOC_value = 1;
  3203  0258  3001               	movlw	1
  3204  0259  00B6               	movwf	_IOC_value	;volatile
  3205                           
  3206                           ;logger.c: 37:     ESP_Set_application_handler(process_message);
  3207  025A  3040               	movlw	low _process_message
  3208  025B  00F2               	movwf	ESP_Set_application_handler@applicationHandler
  3209  025C  3001               	movlw	high _process_message
  3210  025D  00F3               	movwf	ESP_Set_application_handler@applicationHandler+1
  3211  025E  2C9B               	ljmp	l628
  3212  025F                     __end_of_logger_initialize:	
  3213                           
  3214                           	psect	text9
  3215  049B                     __ptext9:	
  3216 ;; *************** function _ESP_Set_application_handler *****************
  3217 ;; Defined at:
  3218 ;;		line 224 in file "esp1.c"
  3219 ;; Parameters:    Size  Location     Type
  3220 ;;  applicationH    2    2[COMMON] PTR FTN(unsigned char ,)
  3221 ;;		 -> ESP_default_application_handler(1), process_message(1), 
  3222 ;; Auto vars:     Size  Location     Type
  3223 ;;		None
  3224 ;; Return value:  Size  Location     Type
  3225 ;;                  1    wreg      void 
  3226 ;; Registers used:
  3227 ;;		None
  3228 ;; Tracked objects:
  3229 ;;		On entry : 1F/0
  3230 ;;		On exit  : 1F/0
  3231 ;;		Unchanged: 1F/0
  3232 ;; Data sizes:     COMMON   BANK0   BANK1
  3233 ;;      Params:         2       0       0
  3234 ;;      Locals:         0       0       0
  3235 ;;      Temps:          0       0       0
  3236 ;;      Totals:         2       0       0
  3237 ;;Total ram usage:        2 bytes
  3238 ;; Hardware stack levels used:    1
  3239 ;; Hardware stack levels required when called:    4
  3240 ;; This function calls:
  3241 ;;		Nothing
  3242 ;; This function is called by:
  3243 ;;		_logger_initialize
  3244 ;; This function uses a non-reentrant model
  3245 ;;
  3246                           
  3247                           
  3248                           ;psect for function _ESP_Set_application_handler
  3249  049B                     _ESP_Set_application_handler:	
  3250  049B                     l628:	
  3251                           ;incstack = 0
  3252                           ; Regs used in _ESP_Set_application_handler: []
  3253                           
  3254  049B  0008               	return
  3255  049C                     __end_of_ESP_Set_application_handler:	
  3256                           
  3257                           	psect	text10
  3258  03C5                     __ptext10:	
  3259 ;; *************** function _ADC_SelectChannel *****************
  3260 ;; Defined at:
  3261 ;;		line 85 in file "mcc_generated_files/adc.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;  channel         1    wreg     enum E1959
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;  channel         1    3[COMMON] enum E1959
  3266 ;; Return value:  Size  Location     Type
  3267 ;;                  1    wreg      void 
  3268 ;; Registers used:
  3269 ;;		wreg, status,2, status,0
  3270 ;; Tracked objects:
  3271 ;;		On entry : 1F/0
  3272 ;;		On exit  : 1F/1
  3273 ;;		Unchanged: 0/0
  3274 ;; Data sizes:     COMMON   BANK0   BANK1
  3275 ;;      Params:         0       0       0
  3276 ;;      Locals:         1       0       0
  3277 ;;      Temps:          1       0       0
  3278 ;;      Totals:         2       0       0
  3279 ;;Total ram usage:        2 bytes
  3280 ;; Hardware stack levels used:    1
  3281 ;; Hardware stack levels required when called:    4
  3282 ;; This function calls:
  3283 ;;		Nothing
  3284 ;; This function is called by:
  3285 ;;		_logger_initialize
  3286 ;; This function uses a non-reentrant model
  3287 ;;
  3288                           
  3289                           
  3290                           ;psect for function _ADC_SelectChannel
  3291  03C5                     _ADC_SelectChannel:	
  3292                           
  3293                           ;incstack = 0
  3294                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
  3295                           ;ADC_SelectChannel@channel stored from wreg
  3296  03C5  00F3               	movwf	ADC_SelectChannel@channel
  3297                           
  3298                           ;mcc_generated_files/adc.c: 85: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 86: {;mcc_generated_files/adc.c: 88:     ADCON0bits.CHS = channel;
  3299  03C6  00F2               	movwf	??_ADC_SelectChannel
  3300  03C7  0DF2               	rlf	??_ADC_SelectChannel,f
  3301  03C8  0DF2               	rlf	??_ADC_SelectChannel,f
  3302  03C9  0021               	movlb	1	; select bank1
  3303  03CA  081D               	movf	29,w	;volatile
  3304  03CB  0672               	xorwf	??_ADC_SelectChannel,w
  3305  03CC  3983               	andlw	-125
  3306  03CD  0672               	xorwf	??_ADC_SelectChannel,w
  3307  03CE  009D               	movwf	29	;volatile
  3308                           
  3309                           ;mcc_generated_files/adc.c: 90:     ADCON0bits.ADON = 1;
  3310  03CF  141D               	bsf	29,0	;volatile
  3311  03D0  0008               	return
  3312  03D1                     __end_of_ADC_SelectChannel:	
  3313                           
  3314                           	psect	text11
  3315  0469                     __ptext11:	
  3316 ;; *************** function _bt_message_handler *****************
  3317 ;; Defined at:
  3318 ;;		line 40 in file "logger.c"
  3319 ;; Parameters:    Size  Location     Type
  3320 ;;		None
  3321 ;; Auto vars:     Size  Location     Type
  3322 ;;  message         1    2[BANK0 ] unsigned char 
  3323 ;; Return value:  Size  Location     Type
  3324 ;;                  1    wreg      void 
  3325 ;; Registers used:
  3326 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3327 ;; Tracked objects:
  3328 ;;		On entry : 1F/0
  3329 ;;		On exit  : 1C/0
  3330 ;;		Unchanged: 0/0
  3331 ;; Data sizes:     COMMON   BANK0   BANK1
  3332 ;;      Params:         0       0       0
  3333 ;;      Locals:         0       1       0
  3334 ;;      Temps:          0       0       0
  3335 ;;      Totals:         0       1       0
  3336 ;;Total ram usage:        1 bytes
  3337 ;; Hardware stack levels used:    1
  3338 ;; Hardware stack levels required when called:    8
  3339 ;; This function calls:
  3340 ;;		_EUSART_Read
  3341 ;;		_process_message
  3342 ;; This function is called by:
  3343 ;;		_main
  3344 ;; This function uses a non-reentrant model
  3345 ;;
  3346                           
  3347                           
  3348                           ;psect for function _bt_message_handler
  3349  0469                     _bt_message_handler:	
  3350                           
  3351                           ;logger.c: 42:     unsigned char message;;logger.c: 43:     message = EUSART_Read();
  3352                           
  3353                           ;incstack = 0
  3354                           ; Regs used in _bt_message_handler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3355  0469  22AA               	fcall	_EUSART_Read
  3356  046A  0020               	movlb	0	; select bank0
  3357  046B  00D2               	movwf	bt_message_handler@message
  3358                           
  3359                           ;logger.c: 44:     process_message(message);
  3360  046C  00F9               	movwf	process_message@message
  3361  046D  2940               	ljmp	l2256
  3362  046E                     __end_of_bt_message_handler:	
  3363                           
  3364                           	psect	text12
  3365  0140                     __ptext12:	
  3366 ;; *************** function _process_message *****************
  3367 ;; Defined at:
  3368 ;;		line 47 in file "logger.c"
  3369 ;; Parameters:    Size  Location     Type
  3370 ;;  message         1    9[COMMON] unsigned char 
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;		None
  3373 ;; Return value:  Size  Location     Type
  3374 ;;                  1    wreg      void 
  3375 ;; Registers used:
  3376 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3377 ;; Tracked objects:
  3378 ;;		On entry : 1F/0
  3379 ;;		On exit  : 1C/0
  3380 ;;		Unchanged: 0/0
  3381 ;; Data sizes:     COMMON   BANK0   BANK1
  3382 ;;      Params:         1       0       0
  3383 ;;      Locals:         0       0       0
  3384 ;;      Temps:          0       2       0
  3385 ;;      Totals:         1       2       0
  3386 ;;Total ram usage:        3 bytes
  3387 ;; Hardware stack levels used:    1
  3388 ;; Hardware stack levels required when called:    7
  3389 ;; This function calls:
  3390 ;;		_ADC_StartConversion
  3391 ;;		_TMR1_StartTimer
  3392 ;;		_TMR1_StopTimer
  3393 ;;		__puts
  3394 ;;		_toggle_format
  3395 ;; This function is called by:
  3396 ;;		_logger_initialize
  3397 ;;		_bt_message_handler
  3398 ;; This function uses a non-reentrant model
  3399 ;;
  3400                           
  3401                           
  3402                           ;psect for function _process_message
  3403  0140                     _process_message:	
  3404  0140                     l2256:	
  3405                           ;incstack = 0
  3406                           ; Regs used in _process_message: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3407                           
  3408                           
  3409                           ;logger.c: 47: void process_message(unsigned char message);logger.c: 48: {;logger.c: 51:
      +                               switch (message) {
  3410  0140  2958               	goto	l2278
  3411  0141                     l2258:	
  3412                           
  3413                           ;logger.c: 54:                 _puts("Ok\n");
  3414  0141  3076               	movlw	low (STR_1| (0+32768))
  3415  0142  00F3               	movwf	__puts@pt
  3416  0143  3084               	movlw	high (STR_1| (0+32768))
  3417  0144  00F4               	movwf	__puts@pt+1
  3418  0145  29DE               	ljmp	l1740
  3419  0146                     l2260:	
  3420                           ;logger.c: 58:             break;
  3421                           
  3422                           
  3423                           ;logger.c: 61:             ADC_StartConversion();
  3424  0146  2C84               	ljmp	l1752
  3425  0147                     l2262:	
  3426                           ;logger.c: 62:             break;
  3427                           
  3428                           
  3429                           ;logger.c: 65:             toggle_format();
  3430  0147  2B3A               	ljmp	l1764
  3431  0148                     l2264:	
  3432                           ;logger.c: 66:             break;
  3433                           
  3434                           
  3435                           ;logger.c: 69:             if (TMR1_state == TMR1_RUNNING)
  3436  0148  0B37               	decfsz	_TMR1_state,w	;volatile
  3437  0149  294B               	goto	l2268
  3438  014A  0008               	return
  3439  014B                     l2268:	
  3440                           
  3441                           ;logger.c: 71:             TMR1_StartTimer();
  3442  014B  2495               	fcall	_TMR1_StartTimer
  3443                           
  3444                           ;logger.c: 72:             TMR1_state = TMR1_RUNNING;
  3445  014C  3001               	movlw	1
  3446  014D  00B7               	movwf	_TMR1_state	;volatile
  3447                           
  3448                           ;logger.c: 74:             break;
  3449  014E  0008               	return
  3450  014F                     l2272:	
  3451                           
  3452                           ;logger.c: 78:             TMR1_StopTimer();
  3453  014F  2493               	fcall	_TMR1_StopTimer
  3454                           
  3455                           ;logger.c: 79:             TMR1_state = TMR1_STOP;
  3456  0150  01B7               	clrf	_TMR1_state	;volatile
  3457                           
  3458                           ;logger.c: 80:             break;
  3459  0151  0008               	return
  3460  0152                     l486:	
  3461                           ;logger.c: 84:             do { LATAbits.LATA5 = 0; } while(0);
  3462                           
  3463  0152  0022               	movlb	2	; select bank2
  3464  0153  128C               	bcf	12,5	;volatile
  3465  0154  0008               	return
  3466  0155                     l489:	
  3467                           ;logger.c: 89:             do { LATAbits.LATA5 = 1; } while(0);
  3468                           
  3469  0155  0022               	movlb	2	; select bank2
  3470  0156  168C               	bsf	12,5	;volatile
  3471  0157  0008               	return
  3472  0158                     l2278:	
  3473  0158  0879               	movf	process_message@message,w
  3474  0159  00D0               	movwf	??_process_message
  3475  015A  01D1               	clrf	??_process_message+1
  3476                           
  3477                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3478                           ; Switch size 1, requested type "speed"
  3479                           ; Number of cases is 1, Range of values is 0 to 0
  3480                           ; switch strategies available:
  3481                           ; Name         Instructions Cycles
  3482                           ; simple_byte            4     3 (average)
  3483                           ; direct_byte            8     6 (fixed)
  3484                           ; jumptable            260     6 (fixed)
  3485                           ;	Chosen strategy is simple_byte
  3486  015B  0851               	movf	??_process_message+1,w
  3487  015C  3A00               	xorlw	0	; case 0
  3488  015D  1903               	skipnz
  3489  015E  2960               	goto	l2408
  3490  015F  296D               	goto	l483
  3491  0160                     l2408:	
  3492                           
  3493                           ; Switch size 1, requested type "speed"
  3494                           ; Number of cases is 7, Range of values is 79 to 116
  3495                           ; switch strategies available:
  3496                           ; Name         Instructions Cycles
  3497                           ; direct_byte           85     9 (fixed)
  3498                           ; simple_byte           22    12 (average)
  3499                           ; jumptable            263     9 (fixed)
  3500                           ;	Chosen strategy is direct_byte
  3501  0160  0850               	movf	??_process_message,w
  3502  0161  3EB1               	addlw	-79
  3503  0162  1C03               	skipc
  3504  0163  0008               	return
  3505  0164  0084               	movwf	4
  3506  0165  3026               	movlw	38
  3507  0166  0204               	subwf	4,w
  3508  0167  1803               	skipnc
  3509  0168  0008               	return
  3510  0169  306E               	movlw	low S2410
  3511  016A  3181               	movlp	high S2410
  3512  016B  0704               	addwf	4,w
  3513  016C  0082               	movwf	2
  3514  016D                     l483:	
  3515  016D  0008               	return
  3516  016E                     __end_of_process_message:	
  3517                           
  3518                           	psect	swtext1
  3519  016E                     __pswtext1:	
  3520  016E                     S2410:	
  3521  016E  2955               	ljmp	l489
  3522  016F  296D               	ljmp	l483
  3523  0170  296D               	ljmp	l483
  3524  0171  296D               	ljmp	l483
  3525  0172  294F               	ljmp	l2272
  3526  0173  2947               	ljmp	l2262
  3527  0174  296D               	ljmp	l483
  3528  0175  296D               	ljmp	l483
  3529  0176  296D               	ljmp	l483
  3530  0177  296D               	ljmp	l483
  3531  0178  296D               	ljmp	l483
  3532  0179  296D               	ljmp	l483
  3533  017A  296D               	ljmp	l483
  3534  017B  296D               	ljmp	l483
  3535  017C  296D               	ljmp	l483
  3536  017D  296D               	ljmp	l483
  3537  017E  296D               	ljmp	l483
  3538  017F  296D               	ljmp	l483
  3539  0180  2946               	ljmp	l2260
  3540  0181  296D               	ljmp	l483
  3541  0182  296D               	ljmp	l483
  3542  0183  296D               	ljmp	l483
  3543  0184  296D               	ljmp	l483
  3544  0185  296D               	ljmp	l483
  3545  0186  296D               	ljmp	l483
  3546  0187  296D               	ljmp	l483
  3547  0188  296D               	ljmp	l483
  3548  0189  296D               	ljmp	l483
  3549  018A  296D               	ljmp	l483
  3550  018B  296D               	ljmp	l483
  3551  018C  296D               	ljmp	l483
  3552  018D  296D               	ljmp	l483
  3553  018E  2952               	ljmp	l486
  3554  018F  296D               	ljmp	l483
  3555  0190  296D               	ljmp	l483
  3556  0191  296D               	ljmp	l483
  3557  0192  2948               	ljmp	l2264
  3558  0193  2941               	ljmp	l2258
  3559                           
  3560                           	psect	text13
  3561  033A                     __ptext13:	
  3562 ;; *************** function _toggle_format *****************
  3563 ;; Defined at:
  3564 ;;		line 139 in file "logger.c"
  3565 ;; Parameters:    Size  Location     Type
  3566 ;;		None
  3567 ;; Auto vars:     Size  Location     Type
  3568 ;;		None
  3569 ;; Return value:  Size  Location     Type
  3570 ;;                  1    wreg      void 
  3571 ;; Registers used:
  3572 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3573 ;; Tracked objects:
  3574 ;;		On entry : 1F/0
  3575 ;;		On exit  : 1E/0
  3576 ;;		Unchanged: 0/0
  3577 ;; Data sizes:     COMMON   BANK0   BANK1
  3578 ;;      Params:         0       0       0
  3579 ;;      Locals:         0       0       0
  3580 ;;      Temps:          0       0       0
  3581 ;;      Totals:         0       0       0
  3582 ;;Total ram usage:        0 bytes
  3583 ;; Hardware stack levels used:    1
  3584 ;; Hardware stack levels required when called:    6
  3585 ;; This function calls:
  3586 ;;		__puts
  3587 ;; This function is called by:
  3588 ;;		_process_message
  3589 ;; This function uses a non-reentrant model
  3590 ;;
  3591                           
  3592                           
  3593                           ;psect for function _toggle_format
  3594  033A                     _toggle_format:	
  3595  033A                     l1764:	
  3596                           ;incstack = 0
  3597                           ; Regs used in _toggle_format: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3598                           
  3599                           
  3600                           ;logger.c: 141:     if (message_format == MESSAGE_BINARY) {
  3601  033A  0839               	movf	_message_format,w	;volatile
  3602  033B  1D03               	btfss	3,2
  3603  033C  2B44               	goto	l1770
  3604                           
  3605                           ;logger.c: 142:         message_format = MESSAGE_TEXT;
  3606  033D  3001               	movlw	1
  3607  033E  00B9               	movwf	_message_format	;volatile
  3608                           
  3609                           ;logger.c: 144:             _puts("tmode\n");
  3610  033F  3020               	movlw	low (STR_2| (0+32768))
  3611  0340  00F3               	movwf	__puts@pt
  3612  0341  3084               	movlw	high (STR_2| (0+32768))
  3613  0342  00F4               	movwf	__puts@pt+1
  3614  0343  29DE               	ljmp	l1740
  3615  0344                     l1770:	
  3616                           ;logger.c: 148:     } else {
  3617                           
  3618                           
  3619                           ;logger.c: 149:         message_format = MESSAGE_BINARY;
  3620  0344  01B9               	clrf	_message_format	;volatile
  3621                           
  3622                           ;logger.c: 151:             _puts("bmode\n");
  3623  0345  3019               	movlw	low (STR_3| (0+32768))
  3624  0346  00F3               	movwf	__puts@pt
  3625  0347  3084               	movlw	high (STR_3| (0+32768))
  3626  0348  00F4               	movwf	__puts@pt+1
  3627  0349  29DE               	ljmp	l1740
  3628  034A                     __end_of_toggle_format:	
  3629                           
  3630                           	psect	text14
  3631  01DE                     __ptext14:	
  3632 ;; *************** function __puts *****************
  3633 ;; Defined at:
  3634 ;;		line 5 in file "comm.c"
  3635 ;; Parameters:    Size  Location     Type
  3636 ;;  pt              2    3[COMMON] PTR unsigned char 
  3637 ;;		 -> STR_29(3), STR_28(3), STR_27(2), STR_26(12), 
  3638 ;;		 -> STR_24(20), STR_23(14), STR_22(4), STR_21(4), 
  3639 ;;		 -> STR_20(11), STR_19(14), STR_18(5), STR_10(13), 
  3640 ;;		 -> STR_9(22), STR_8(13), STR_7(18), STR_6(13), 
  3641 ;;		 -> STR_5(3), STR_4(3), STR_3(7), STR_2(7), 
  3642 ;;		 -> STR_1(4), 
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;  index           1    8[COMMON] unsigned char 
  3645 ;; Return value:  Size  Location     Type
  3646 ;;                  1    wreg      void 
  3647 ;; Registers used:
  3648 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3649 ;; Tracked objects:
  3650 ;;		On entry : 1F/0
  3651 ;;		On exit  : 1E/0
  3652 ;;		Unchanged: 0/0
  3653 ;; Data sizes:     COMMON   BANK0   BANK1
  3654 ;;      Params:         2       0       0
  3655 ;;      Locals:         1       0       0
  3656 ;;      Temps:          3       0       0
  3657 ;;      Totals:         6       0       0
  3658 ;;Total ram usage:        6 bytes
  3659 ;; Hardware stack levels used:    1
  3660 ;; Hardware stack levels required when called:    5
  3661 ;; This function calls:
  3662 ;;		_EUSART_Write
  3663 ;;		_EUSART_is_tx_ready
  3664 ;; This function is called by:
  3665 ;;		_process_message
  3666 ;;		_toggle_format
  3667 ;;		_process_ioc
  3668 ;; This function uses a non-reentrant model
  3669 ;;
  3670                           
  3671                           
  3672                           ;psect for function __puts
  3673  01DE                     __puts:	
  3674  01DE                     l1740:	
  3675                           ;incstack = 0
  3676                           ; Regs used in __puts: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3677                           
  3678                           
  3679                           ;comm.c: 5: void _puts(char *pt);comm.c: 6: {;comm.c: 7:     unsigned char index;;comm.c
      +                          : 8:     index = 0;
  3680  01DE  01F8               	clrf	__puts@index
  3681  01DF                     l1748:	
  3682                           ;comm.c: 9:     while(pt[index]) {
  3683                           
  3684                           
  3685                           ;comm.c: 9:     while(pt[index]) {
  3686  01DF  0874               	movf	__puts@pt+1,w
  3687  01E0  00F6               	movwf	??__puts+1
  3688  01E1  0873               	movf	__puts@pt,w
  3689  01E2  00F5               	movwf	??__puts
  3690  01E3  0878               	movf	__puts@index,w
  3691  01E4  0775               	addwf	??__puts,w
  3692  01E5  0084               	movwf	4
  3693  01E6  0876               	movf	??__puts+1,w
  3694  01E7  1803               	skipnc
  3695  01E8  0A76               	incf	??__puts+1,w
  3696  01E9  0085               	movwf	5
  3697  01EA  0012               	moviw fsr0++
  3698  01EB  1903               	btfsc	3,2
  3699  01EC  0008               	return
  3700  01ED                     l1742:	
  3701  01ED  2491               	fcall	_EUSART_is_tx_ready
  3702  01EE  3A00               	xorlw	0
  3703  01EF  1903               	skipnz
  3704  01F0  29ED               	goto	l1742
  3705                           
  3706                           ;comm.c: 11:         EUSART_Write(pt[index++]);
  3707  01F1  0874               	movf	__puts@pt+1,w
  3708  01F2  00F6               	movwf	??__puts+1
  3709  01F3  0873               	movf	__puts@pt,w
  3710  01F4  00F5               	movwf	??__puts
  3711  01F5  0878               	movf	__puts@index,w
  3712  01F6  0775               	addwf	??__puts,w
  3713  01F7  0084               	movwf	4
  3714  01F8  0876               	movf	??__puts+1,w
  3715  01F9  1803               	skipnc
  3716  01FA  0A76               	incf	??__puts+1,w
  3717  01FB  0085               	movwf	5
  3718  01FC  0800               	movf	0,w	;code access
  3719  01FD  225F               	fcall	_EUSART_Write
  3720  01FE  0AF8               	incf	__puts@index,f
  3721  01FF  29DF               	goto	l1748
  3722  0200                     __end_of__puts:	
  3723                           
  3724                           	psect	text15
  3725  0491                     __ptext15:	
  3726 ;; *************** function _EUSART_is_tx_ready *****************
  3727 ;; Defined at:
  3728 ;;		line 113 in file "mcc_generated_files/eusart.c"
  3729 ;; Parameters:    Size  Location     Type
  3730 ;;		None
  3731 ;; Auto vars:     Size  Location     Type
  3732 ;;		None
  3733 ;; Return value:  Size  Location     Type
  3734 ;;                  1    wreg      unsigned char 
  3735 ;; Registers used:
  3736 ;;		wreg
  3737 ;; Tracked objects:
  3738 ;;		On entry : 0/0
  3739 ;;		On exit  : 0/0
  3740 ;;		Unchanged: 0/0
  3741 ;; Data sizes:     COMMON   BANK0   BANK1
  3742 ;;      Params:         0       0       0
  3743 ;;      Locals:         0       0       0
  3744 ;;      Temps:          0       0       0
  3745 ;;      Totals:         0       0       0
  3746 ;;Total ram usage:        0 bytes
  3747 ;; Hardware stack levels used:    1
  3748 ;; Hardware stack levels required when called:    4
  3749 ;; This function calls:
  3750 ;;		Nothing
  3751 ;; This function is called by:
  3752 ;;		__puts
  3753 ;;		_write
  3754 ;; This function uses a non-reentrant model
  3755 ;;
  3756                           
  3757                           
  3758                           ;psect for function _EUSART_is_tx_ready
  3759  0491                     _EUSART_is_tx_ready:	
  3760                           
  3761                           ;mcc_generated_files/eusart.c: 115:     return eusartTxBufferRemaining;
  3762                           
  3763                           ;incstack = 0
  3764                           ; Regs used in _EUSART_is_tx_ready: [wreg]
  3765  0491  087A               	movf	_eusartTxBufferRemaining,w	;volatile
  3766  0492  0008               	return
  3767  0493                     __end_of_EUSART_is_tx_ready:	
  3768                           
  3769                           	psect	text16
  3770  025F                     __ptext16:	
  3771 ;; *************** function _EUSART_Write *****************
  3772 ;; Defined at:
  3773 ;;		line 148 in file "mcc_generated_files/eusart.c"
  3774 ;; Parameters:    Size  Location     Type
  3775 ;;  txData          1    wreg     unsigned char 
  3776 ;; Auto vars:     Size  Location     Type
  3777 ;;  txData          1    2[COMMON] unsigned char 
  3778 ;; Return value:  Size  Location     Type
  3779 ;;                  1    wreg      void 
  3780 ;; Registers used:
  3781 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3782 ;; Tracked objects:
  3783 ;;		On entry : 0/0
  3784 ;;		On exit  : 1F/1
  3785 ;;		Unchanged: 0/0
  3786 ;; Data sizes:     COMMON   BANK0   BANK1
  3787 ;;      Params:         0       0       0
  3788 ;;      Locals:         1       0       0
  3789 ;;      Temps:          0       0       0
  3790 ;;      Totals:         1       0       0
  3791 ;;Total ram usage:        1 bytes
  3792 ;; Hardware stack levels used:    1
  3793 ;; Hardware stack levels required when called:    4
  3794 ;; This function calls:
  3795 ;;		Nothing
  3796 ;; This function is called by:
  3797 ;;		__puts
  3798 ;;		_write
  3799 ;; This function uses a non-reentrant model
  3800 ;;
  3801                           
  3802                           
  3803                           ;psect for function _EUSART_Write
  3804  025F                     _EUSART_Write:	
  3805                           
  3806                           ;incstack = 0
  3807                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  3808                           ;EUSART_Write@txData stored from wreg
  3809  025F  00F2               	movwf	EUSART_Write@txData
  3810  0260                     l1724:	
  3811                           ;mcc_generated_files/eusart.c: 148: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 149: {;mcc_generated_files/eusart.c: 150:     while(0 == eusartTxBufferRemai
      +                          ning)
  3812                           
  3813                           
  3814                           ;mcc_generated_files/eusart.c: 150:     while(0 == eusartTxBufferRemaining)
  3815  0260  087A               	movf	_eusartTxBufferRemaining,w	;volatile
  3816  0261  1903               	btfsc	3,2
  3817  0262  2A60               	goto	l1724
  3818                           
  3819                           ;mcc_generated_files/eusart.c: 154:     if(0 == PIE1bits.TXIE)
  3820  0263  0021               	movlb	1	; select bank1
  3821  0264  1A11               	btfsc	17,4	;volatile
  3822  0265  2A6A               	goto	l302
  3823                           
  3824                           ;mcc_generated_files/eusart.c: 155:     {;mcc_generated_files/eusart.c: 156:         TXR
      +                          EG = txData;
  3825  0266  0872               	movf	EUSART_Write@txData,w
  3826  0267  0023               	movlb	3	; select bank3
  3827  0268  009A               	movwf	26	;volatile
  3828                           
  3829                           ;mcc_generated_files/eusart.c: 157:     }
  3830  0269  2A77               	goto	l1738
  3831  026A                     l302:	
  3832                           ;mcc_generated_files/eusart.c: 158:     else
  3833                           
  3834                           
  3835                           ;mcc_generated_files/eusart.c: 159:     {;mcc_generated_files/eusart.c: 160:         PIE
      +                          1bits.TXIE = 0;
  3836  026A  1211               	bcf	17,4	;volatile
  3837                           
  3838                           ;mcc_generated_files/eusart.c: 161:         eusartTxBuffer[eusartTxHead++] = txData;
  3839  026B  087B               	movf	_eusartTxHead,w
  3840  026C  3EA0               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  3841  026D  0086               	movwf	6
  3842  026E  0187               	clrf	7
  3843  026F  0872               	movf	EUSART_Write@txData,w
  3844  0270  0081               	movwf	1
  3845  0271  0AFB               	incf	_eusartTxHead,f	;volatile
  3846                           
  3847                           ;mcc_generated_files/eusart.c: 162:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  3848  0272  3010               	movlw	16
  3849  0273  027B               	subwf	_eusartTxHead,w
  3850  0274  1803               	btfsc	3,0
  3851                           
  3852                           ;mcc_generated_files/eusart.c: 163:         {;mcc_generated_files/eusart.c: 164:        
      +                               eusartTxHead = 0;
  3853  0275  01FB               	clrf	_eusartTxHead	;volatile
  3854                           
  3855                           ;mcc_generated_files/eusart.c: 166:         eusartTxBufferRemaining--;
  3856  0276  03FA               	decf	_eusartTxBufferRemaining,f	;volatile
  3857  0277                     l1738:	
  3858                           
  3859                           ;mcc_generated_files/eusart.c: 168:     PIE1bits.TXIE = 1;
  3860  0277  0021               	movlb	1	; select bank1
  3861  0278  1611               	bsf	17,4	;volatile
  3862  0279  0008               	return
  3863  027A                     __end_of_EUSART_Write:	
  3864                           
  3865                           	psect	text17
  3866  0493                     __ptext17:	
  3867 ;; *************** function _TMR1_StopTimer *****************
  3868 ;; Defined at:
  3869 ;;		line 99 in file "mcc_generated_files/tmr1.c"
  3870 ;; Parameters:    Size  Location     Type
  3871 ;;		None
  3872 ;; Auto vars:     Size  Location     Type
  3873 ;;		None
  3874 ;; Return value:  Size  Location     Type
  3875 ;;                  1    wreg      void 
  3876 ;; Registers used:
  3877 ;;		None
  3878 ;; Tracked objects:
  3879 ;;		On entry : 1F/0
  3880 ;;		On exit  : 1F/0
  3881 ;;		Unchanged: 0/0
  3882 ;; Data sizes:     COMMON   BANK0   BANK1
  3883 ;;      Params:         0       0       0
  3884 ;;      Locals:         0       0       0
  3885 ;;      Temps:          0       0       0
  3886 ;;      Totals:         0       0       0
  3887 ;;Total ram usage:        0 bytes
  3888 ;; Hardware stack levels used:    1
  3889 ;; Hardware stack levels required when called:    4
  3890 ;; This function calls:
  3891 ;;		Nothing
  3892 ;; This function is called by:
  3893 ;;		_logger_initialize
  3894 ;;		_process_message
  3895 ;; This function uses a non-reentrant model
  3896 ;;
  3897                           
  3898                           
  3899                           ;psect for function _TMR1_StopTimer
  3900  0493                     _TMR1_StopTimer:	
  3901                           
  3902                           ;mcc_generated_files/tmr1.c: 102:     T1CONbits.TMR1ON = 0;
  3903                           
  3904                           ;incstack = 0
  3905                           ; Regs used in _TMR1_StopTimer: []
  3906  0493  1018               	bcf	24,0	;volatile
  3907  0494  0008               	return
  3908  0495                     __end_of_TMR1_StopTimer:	
  3909                           
  3910                           	psect	text18
  3911  0495                     __ptext18:	
  3912 ;; *************** function _TMR1_StartTimer *****************
  3913 ;; Defined at:
  3914 ;;		line 93 in file "mcc_generated_files/tmr1.c"
  3915 ;; Parameters:    Size  Location     Type
  3916 ;;		None
  3917 ;; Auto vars:     Size  Location     Type
  3918 ;;		None
  3919 ;; Return value:  Size  Location     Type
  3920 ;;                  1    wreg      void 
  3921 ;; Registers used:
  3922 ;;		None
  3923 ;; Tracked objects:
  3924 ;;		On entry : 1F/0
  3925 ;;		On exit  : 1F/0
  3926 ;;		Unchanged: 0/0
  3927 ;; Data sizes:     COMMON   BANK0   BANK1
  3928 ;;      Params:         0       0       0
  3929 ;;      Locals:         0       0       0
  3930 ;;      Temps:          0       0       0
  3931 ;;      Totals:         0       0       0
  3932 ;;Total ram usage:        0 bytes
  3933 ;; Hardware stack levels used:    1
  3934 ;; Hardware stack levels required when called:    4
  3935 ;; This function calls:
  3936 ;;		Nothing
  3937 ;; This function is called by:
  3938 ;;		_process_message
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941                           
  3942                           
  3943                           ;psect for function _TMR1_StartTimer
  3944  0495                     _TMR1_StartTimer:	
  3945                           
  3946                           ;mcc_generated_files/tmr1.c: 96:     T1CONbits.TMR1ON = 1;
  3947                           
  3948                           ;incstack = 0
  3949                           ; Regs used in _TMR1_StartTimer: []
  3950  0495  1418               	bsf	24,0	;volatile
  3951  0496  0008               	return
  3952  0497                     __end_of_TMR1_StartTimer:	
  3953                           
  3954                           	psect	text19
  3955  0484                     __ptext19:	
  3956 ;; *************** function _ADC_StartConversion *****************
  3957 ;; Defined at:
  3958 ;;		line 93 in file "mcc_generated_files/adc.c"
  3959 ;; Parameters:    Size  Location     Type
  3960 ;;		None
  3961 ;; Auto vars:     Size  Location     Type
  3962 ;;		None
  3963 ;; Return value:  Size  Location     Type
  3964 ;;                  1    wreg      void 
  3965 ;; Registers used:
  3966 ;;		None
  3967 ;; Tracked objects:
  3968 ;;		On entry : 1F/0
  3969 ;;		On exit  : 1F/1
  3970 ;;		Unchanged: 0/0
  3971 ;; Data sizes:     COMMON   BANK0   BANK1
  3972 ;;      Params:         0       0       0
  3973 ;;      Locals:         0       0       0
  3974 ;;      Temps:          0       0       0
  3975 ;;      Totals:         0       0       0
  3976 ;;Total ram usage:        0 bytes
  3977 ;; Hardware stack levels used:    1
  3978 ;; Hardware stack levels required when called:    4
  3979 ;; This function calls:
  3980 ;;		Nothing
  3981 ;; This function is called by:
  3982 ;;		_process_message
  3983 ;; This function uses a non-reentrant model
  3984 ;;
  3985                           
  3986                           
  3987                           ;psect for function _ADC_StartConversion
  3988  0484                     _ADC_StartConversion:	
  3989  0484                     l1752:	
  3990                           ;incstack = 0
  3991                           ; Regs used in _ADC_StartConversion: []
  3992                           
  3993                           
  3994                           ;mcc_generated_files/adc.c: 96:     ADCON0bits.GO_nDONE = 1;
  3995  0484  0021               	movlb	1	; select bank1
  3996  0485  149D               	bsf	29,1	;volatile
  3997  0486  0008               	return
  3998  0487                     __end_of_ADC_StartConversion:	
  3999                           
  4000                           	psect	text20
  4001  02AA                     __ptext20:	
  4002 ;; *************** function _EUSART_Read *****************
  4003 ;; Defined at:
  4004 ;;		line 128 in file "mcc_generated_files/eusart.c"
  4005 ;; Parameters:    Size  Location     Type
  4006 ;;		None
  4007 ;; Auto vars:     Size  Location     Type
  4008 ;;  readValue       1    2[COMMON] unsigned char 
  4009 ;; Return value:  Size  Location     Type
  4010 ;;                  1    wreg      unsigned char 
  4011 ;; Registers used:
  4012 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4013 ;; Tracked objects:
  4014 ;;		On entry : 1F/0
  4015 ;;		On exit  : 1F/1
  4016 ;;		Unchanged: 0/0
  4017 ;; Data sizes:     COMMON   BANK0   BANK1
  4018 ;;      Params:         0       0       0
  4019 ;;      Locals:         1       0       0
  4020 ;;      Temps:          0       0       0
  4021 ;;      Totals:         1       0       0
  4022 ;;Total ram usage:        1 bytes
  4023 ;; Hardware stack levels used:    1
  4024 ;; Hardware stack levels required when called:    4
  4025 ;; This function calls:
  4026 ;;		Nothing
  4027 ;; This function is called by:
  4028 ;;		_bt_message_handler
  4029 ;; This function uses a non-reentrant model
  4030 ;;
  4031                           
  4032                           
  4033                           ;psect for function _EUSART_Read
  4034  02AA                     _EUSART_Read:	
  4035  02AA                     l1934:	
  4036                           ;mcc_generated_files/eusart.c: 132:     while(0 == eusartRxCount)
  4037                           
  4038                           ;incstack = 0
  4039                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  4040                           
  4041                           
  4042                           ;mcc_generated_files/eusart.c: 132:     while(0 == eusartRxCount)
  4043  02AA  083B               	movf	_eusartRxCount,w	;volatile
  4044  02AB  1903               	btfsc	3,2
  4045  02AC  2AAA               	goto	l1934
  4046                           
  4047                           ;mcc_generated_files/eusart.c: 136:     readValue = eusartRxBuffer[eusartRxTail++];
  4048  02AD  083C               	movf	_eusartRxTail,w
  4049  02AE  3E20               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  4050  02AF  0086               	movwf	6
  4051  02B0  0187               	clrf	7
  4052  02B1  0801               	movf	1,w
  4053  02B2  00F2               	movwf	EUSART_Read@readValue
  4054  02B3  0ABC               	incf	_eusartRxTail,f	;volatile
  4055                           
  4056                           ;mcc_generated_files/eusart.c: 137:     if(sizeof(eusartRxBuffer) <= eusartRxTail)
  4057  02B4  3008               	movlw	8
  4058  02B5  023C               	subwf	_eusartRxTail,w
  4059  02B6  1803               	btfsc	3,0
  4060                           
  4061                           ;mcc_generated_files/eusart.c: 138:     {;mcc_generated_files/eusart.c: 139:         eus
      +                          artRxTail = 0;
  4062  02B7  01BC               	clrf	_eusartRxTail	;volatile
  4063                           
  4064                           ;mcc_generated_files/eusart.c: 141:     PIE1bits.RCIE = 0;
  4065  02B8  0021               	movlb	1	; select bank1
  4066  02B9  1291               	bcf	17,5	;volatile
  4067                           
  4068                           ;mcc_generated_files/eusart.c: 142:     eusartRxCount--;
  4069  02BA  0020               	movlb	0	; select bank0
  4070  02BB  03BB               	decf	_eusartRxCount,f	;volatile
  4071                           
  4072                           ;mcc_generated_files/eusart.c: 143:     PIE1bits.RCIE = 1;
  4073  02BC  0021               	movlb	1	; select bank1
  4074  02BD  1691               	bsf	17,5	;volatile
  4075                           
  4076                           ;mcc_generated_files/eusart.c: 145:     return readValue;
  4077  02BE  0872               	movf	EUSART_Read@readValue,w
  4078  02BF  0008               	return
  4079  02C0                     __end_of_EUSART_Read:	
  4080                           
  4081                           	psect	text21
  4082  0441                     __ptext21:	
  4083 ;; *************** function _SYSTEM_Initialize *****************
  4084 ;; Defined at:
  4085 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4086 ;; Parameters:    Size  Location     Type
  4087 ;;		None
  4088 ;; Auto vars:     Size  Location     Type
  4089 ;;		None
  4090 ;; Return value:  Size  Location     Type
  4091 ;;                  1    wreg      void 
  4092 ;; Registers used:
  4093 ;;		wreg, status,2, status,0, pclath, cstack
  4094 ;; Tracked objects:
  4095 ;;		On entry : B1F/0
  4096 ;;		On exit  : 1F/1
  4097 ;;		Unchanged: 0/0
  4098 ;; Data sizes:     COMMON   BANK0   BANK1
  4099 ;;      Params:         0       0       0
  4100 ;;      Locals:         0       0       0
  4101 ;;      Temps:          0       0       0
  4102 ;;      Totals:         0       0       0
  4103 ;;Total ram usage:        0 bytes
  4104 ;; Hardware stack levels used:    1
  4105 ;; Hardware stack levels required when called:    6
  4106 ;; This function calls:
  4107 ;;		_ADC_Initialize
  4108 ;;		_EUSART_Initialize
  4109 ;;		_OSCILLATOR_Initialize
  4110 ;;		_PIN_MANAGER_Initialize
  4111 ;;		_TMR1_Initialize
  4112 ;;		_WDT_Initialize
  4113 ;; This function is called by:
  4114 ;;		_main
  4115 ;; This function uses a non-reentrant model
  4116 ;;
  4117                           
  4118                           
  4119                           ;psect for function _SYSTEM_Initialize
  4120  0441                     _SYSTEM_Initialize:	
  4121                           
  4122                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  4123                           
  4124                           ;incstack = 0
  4125                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4126  0441  227A               	fcall	_PIN_MANAGER_Initialize
  4127                           
  4128                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  4129  0442  23E6               	fcall	_OSCILLATOR_Initialize
  4130                           
  4131                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  4132  0443  2487               	fcall	_WDT_Initialize
  4133                           
  4134                           ;mcc_generated_files/mcc.c: 56:     TMR1_Initialize();
  4135  0444  22C0               	fcall	_TMR1_Initialize
  4136                           
  4137                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  4138  0445  23F0               	fcall	_ADC_Initialize
  4139                           
  4140                           ;mcc_generated_files/mcc.c: 58:     EUSART_Initialize();
  4141  0446  2A00               	ljmp	l1888
  4142  0447                     __end_of_SYSTEM_Initialize:	
  4143                           
  4144                           	psect	text22
  4145  0487                     __ptext22:	
  4146 ;; *************** function _WDT_Initialize *****************
  4147 ;; Defined at:
  4148 ;;		line 75 in file "mcc_generated_files/mcc.c"
  4149 ;; Parameters:    Size  Location     Type
  4150 ;;		None
  4151 ;; Auto vars:     Size  Location     Type
  4152 ;;		None
  4153 ;; Return value:  Size  Location     Type
  4154 ;;                  1    wreg      void 
  4155 ;; Registers used:
  4156 ;;		wreg
  4157 ;; Tracked objects:
  4158 ;;		On entry : 1F/1
  4159 ;;		On exit  : 1F/1
  4160 ;;		Unchanged: 0/0
  4161 ;; Data sizes:     COMMON   BANK0   BANK1
  4162 ;;      Params:         0       0       0
  4163 ;;      Locals:         0       0       0
  4164 ;;      Temps:          0       0       0
  4165 ;;      Totals:         0       0       0
  4166 ;;Total ram usage:        0 bytes
  4167 ;; Hardware stack levels used:    1
  4168 ;; Hardware stack levels required when called:    4
  4169 ;; This function calls:
  4170 ;;		Nothing
  4171 ;; This function is called by:
  4172 ;;		_SYSTEM_Initialize
  4173 ;; This function uses a non-reentrant model
  4174 ;;
  4175                           
  4176                           
  4177                           ;psect for function _WDT_Initialize
  4178  0487                     _WDT_Initialize:	
  4179                           
  4180                           ;mcc_generated_files/mcc.c: 78:     WDTCON = 0x16;
  4181                           
  4182                           ;incstack = 0
  4183                           ; Regs used in _WDT_Initialize: [wreg]
  4184  0487  3016               	movlw	22
  4185  0488  0097               	movwf	23	;volatile
  4186  0489  0008               	return
  4187  048A                     __end_of_WDT_Initialize:	
  4188                           
  4189                           	psect	text23
  4190  02C0                     __ptext23:	
  4191 ;; *************** function _TMR1_Initialize *****************
  4192 ;; Defined at:
  4193 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  4194 ;; Parameters:    Size  Location     Type
  4195 ;;		None
  4196 ;; Auto vars:     Size  Location     Type
  4197 ;;		None
  4198 ;; Return value:  Size  Location     Type
  4199 ;;                  1    wreg      void 
  4200 ;; Registers used:
  4201 ;;		wreg, status,2, status,0, pclath, cstack
  4202 ;; Tracked objects:
  4203 ;;		On entry : 1F/1
  4204 ;;		On exit  : 1F/0
  4205 ;;		Unchanged: 0/0
  4206 ;; Data sizes:     COMMON   BANK0   BANK1
  4207 ;;      Params:         0       0       0
  4208 ;;      Locals:         0       0       0
  4209 ;;      Temps:          0       0       0
  4210 ;;      Totals:         0       0       0
  4211 ;;Total ram usage:        0 bytes
  4212 ;; Hardware stack levels used:    1
  4213 ;; Hardware stack levels required when called:    5
  4214 ;; This function calls:
  4215 ;;		_TMR1_SetInterruptHandler
  4216 ;; This function is called by:
  4217 ;;		_SYSTEM_Initialize
  4218 ;; This function uses a non-reentrant model
  4219 ;;
  4220                           
  4221                           
  4222                           ;psect for function _TMR1_Initialize
  4223  02C0                     _TMR1_Initialize:	
  4224                           
  4225                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  4226                           
  4227                           ;incstack = 0
  4228                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4229  02C0  0020               	movlb	0	; select bank0
  4230  02C1  0199               	clrf	25	;volatile
  4231                           
  4232                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x63;
  4233  02C2  3063               	movlw	99
  4234  02C3  0097               	movwf	23	;volatile
  4235                           
  4236                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xC0;
  4237  02C4  30C0               	movlw	192
  4238  02C5  0096               	movwf	22	;volatile
  4239                           
  4240                           ;mcc_generated_files/tmr1.c: 78:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  4241  02C6  0817               	movf	23,w	;volatile
  4242  02C7  00AB               	movwf	_timer1ReloadVal+1	;volatile
  4243  02C8  01AA               	clrf	_timer1ReloadVal	;volatile
  4244  02C9  0816               	movf	22,w	;volatile
  4245  02CA  04AA               	iorwf	_timer1ReloadVal,f	;volatile
  4246                           
  4247                           ;mcc_generated_files/tmr1.c: 81:     PIR1bits.TMR1IF = 0;
  4248  02CB  1011               	bcf	17,0	;volatile
  4249                           
  4250                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  4251  02CC  0021               	movlb	1	; select bank1
  4252  02CD  1411               	bsf	17,0	;volatile
  4253                           
  4254                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  4255  02CE  309C               	movlw	low _TMR1_DefaultInterruptHandler
  4256  02CF  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  4257  02D0  3004               	movlw	high _TMR1_DefaultInterruptHandler
  4258  02D1  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  4259  02D2  2447               	fcall	_TMR1_SetInterruptHandler
  4260                           
  4261                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x11;
  4262  02D3  3011               	movlw	17
  4263  02D4  0098               	movwf	24	;volatile
  4264  02D5  0008               	return
  4265  02D6                     __end_of_TMR1_Initialize:	
  4266                           
  4267                           	psect	text24
  4268  0447                     __ptext24:	
  4269 ;; *************** function _TMR1_SetInterruptHandler *****************
  4270 ;; Defined at:
  4271 ;;		line 171 in file "mcc_generated_files/tmr1.c"
  4272 ;; Parameters:    Size  Location     Type
  4273 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  4274 ;;		 -> _TMR1_Ready(1), TMR1_DefaultInterruptHandler(1), 
  4275 ;; Auto vars:     Size  Location     Type
  4276 ;;		None
  4277 ;; Return value:  Size  Location     Type
  4278 ;;                  1    wreg      void 
  4279 ;; Registers used:
  4280 ;;		wreg
  4281 ;; Tracked objects:
  4282 ;;		On entry : 1E/0
  4283 ;;		On exit  : 1F/0
  4284 ;;		Unchanged: 0/0
  4285 ;; Data sizes:     COMMON   BANK0   BANK1
  4286 ;;      Params:         2       0       0
  4287 ;;      Locals:         0       0       0
  4288 ;;      Temps:          0       0       0
  4289 ;;      Totals:         2       0       0
  4290 ;;Total ram usage:        2 bytes
  4291 ;; Hardware stack levels used:    1
  4292 ;; Hardware stack levels required when called:    4
  4293 ;; This function calls:
  4294 ;;		Nothing
  4295 ;; This function is called by:
  4296 ;;		_TMR1_Initialize
  4297 ;;		_logger_initialize
  4298 ;; This function uses a non-reentrant model
  4299 ;;
  4300                           
  4301                           
  4302                           ;psect for function _TMR1_SetInterruptHandler
  4303  0447                     _TMR1_SetInterruptHandler:	
  4304                           
  4305                           ;mcc_generated_files/tmr1.c: 172:     TMR1_InterruptHandler = InterruptHandler;
  4306                           
  4307                           ;incstack = 0
  4308                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  4309  0447  0873               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  4310  0448  0020               	movlb	0	; select bank0
  4311  0449  00A9               	movwf	_TMR1_InterruptHandler+1
  4312  044A  0872               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  4313  044B  00A8               	movwf	_TMR1_InterruptHandler
  4314  044C  0008               	return
  4315  044D                     __end_of_TMR1_SetInterruptHandler:	
  4316                           
  4317                           	psect	text25
  4318  027A                     __ptext25:	
  4319 ;; *************** function _PIN_MANAGER_Initialize *****************
  4320 ;; Defined at:
  4321 ;;		line 59 in file "mcc_generated_files/pin_manager.c"
  4322 ;; Parameters:    Size  Location     Type
  4323 ;;		None
  4324 ;; Auto vars:     Size  Location     Type
  4325 ;;		None
  4326 ;; Return value:  Size  Location     Type
  4327 ;;                  1    wreg      void 
  4328 ;; Registers used:
  4329 ;;		wreg, status,2, status,0, pclath, cstack
  4330 ;; Tracked objects:
  4331 ;;		On entry : B1F/0
  4332 ;;		On exit  : 1F/0
  4333 ;;		Unchanged: 0/0
  4334 ;; Data sizes:     COMMON   BANK0   BANK1
  4335 ;;      Params:         0       0       0
  4336 ;;      Locals:         0       0       0
  4337 ;;      Temps:          0       0       0
  4338 ;;      Totals:         0       0       0
  4339 ;;Total ram usage:        0 bytes
  4340 ;; Hardware stack levels used:    1
  4341 ;; Hardware stack levels required when called:    5
  4342 ;; This function calls:
  4343 ;;		_IOCAF4_SetInterruptHandler
  4344 ;; This function is called by:
  4345 ;;		_SYSTEM_Initialize
  4346 ;; This function uses a non-reentrant model
  4347 ;;
  4348                           
  4349                           
  4350                           ;psect for function _PIN_MANAGER_Initialize
  4351  027A                     _PIN_MANAGER_Initialize:	
  4352                           
  4353                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
  4354                           
  4355                           ;incstack = 0
  4356                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4357  027A  0022               	movlb	2	; select bank2
  4358  027B  018C               	clrf	12	;volatile
  4359                           
  4360                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0x1F;
  4361  027C  301F               	movlw	31
  4362  027D  0021               	movlb	1	; select bank1
  4363  027E  008C               	movwf	12	;volatile
  4364                           
  4365                           ;mcc_generated_files/pin_manager.c: 74:     ANSELA = 0x04;
  4366  027F  3004               	movlw	4
  4367  0280  0023               	movlb	3	; select bank3
  4368  0281  008C               	movwf	12	;volatile
  4369                           
  4370                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x10;
  4371  0282  3010               	movlw	16
  4372  0283  0024               	movlb	4	; select bank4
  4373  0284  008C               	movwf	12	;volatile
  4374                           
  4375                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 0;
  4376  0285  0021               	movlb	1	; select bank1
  4377  0286  1395               	bcf	21,7	;volatile
  4378                           
  4379                           ;mcc_generated_files/pin_manager.c: 89:     APFCON = 0x00;
  4380  0287  0022               	movlb	2	; select bank2
  4381  0288  019D               	clrf	29	;volatile
  4382                           
  4383                           ;mcc_generated_files/pin_manager.c: 95:     IOCAFbits.IOCAF4 = 0;
  4384  0289  0027               	movlb	7	; select bank7
  4385  028A  1213               	bcf	19,4	;volatile
  4386                           
  4387                           ;mcc_generated_files/pin_manager.c: 97:     IOCANbits.IOCAN4 = 1;
  4388  028B  1612               	bsf	18,4	;volatile
  4389                           
  4390                           ;mcc_generated_files/pin_manager.c: 99:     IOCAPbits.IOCAP4 = 1;
  4391  028C  1611               	bsf	17,4	;volatile
  4392                           
  4393                           ;mcc_generated_files/pin_manager.c: 104:     IOCAF4_SetInterruptHandler(IOCAF4_DefaultIn
      +                          terruptHandler);
  4394  028D  309D               	movlw	low _IOCAF4_DefaultInterruptHandler
  4395  028E  00F2               	movwf	IOCAF4_SetInterruptHandler@InterruptHandler
  4396  028F  3004               	movlw	high _IOCAF4_DefaultInterruptHandler
  4397  0290  00F3               	movwf	IOCAF4_SetInterruptHandler@InterruptHandler+1
  4398  0291  244D               	fcall	_IOCAF4_SetInterruptHandler
  4399                           
  4400                           ;mcc_generated_files/pin_manager.c: 107:     INTCONbits.IOCIE = 1;
  4401  0292  158B               	bsf	11,3	;volatile
  4402  0293  0008               	return
  4403  0294                     __end_of_PIN_MANAGER_Initialize:	
  4404                           
  4405                           	psect	text26
  4406  044D                     __ptext26:	
  4407 ;; *************** function _IOCAF4_SetInterruptHandler *****************
  4408 ;; Defined at:
  4409 ;;		line 138 in file "mcc_generated_files/pin_manager.c"
  4410 ;; Parameters:    Size  Location     Type
  4411 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  4412 ;;		 -> _IOC_Ready(1), IOCAF4_DefaultInterruptHandler(1), 
  4413 ;; Auto vars:     Size  Location     Type
  4414 ;;		None
  4415 ;; Return value:  Size  Location     Type
  4416 ;;                  1    wreg      void 
  4417 ;; Registers used:
  4418 ;;		wreg
  4419 ;; Tracked objects:
  4420 ;;		On entry : 18/0
  4421 ;;		On exit  : 1F/0
  4422 ;;		Unchanged: 0/0
  4423 ;; Data sizes:     COMMON   BANK0   BANK1
  4424 ;;      Params:         2       0       0
  4425 ;;      Locals:         0       0       0
  4426 ;;      Temps:          0       0       0
  4427 ;;      Totals:         2       0       0
  4428 ;;Total ram usage:        2 bytes
  4429 ;; Hardware stack levels used:    1
  4430 ;; Hardware stack levels required when called:    4
  4431 ;; This function calls:
  4432 ;;		Nothing
  4433 ;; This function is called by:
  4434 ;;		_PIN_MANAGER_Initialize
  4435 ;;		_logger_initialize
  4436 ;; This function uses a non-reentrant model
  4437 ;;
  4438                           
  4439                           
  4440                           ;psect for function _IOCAF4_SetInterruptHandler
  4441  044D                     _IOCAF4_SetInterruptHandler:	
  4442                           
  4443                           ;mcc_generated_files/pin_manager.c: 139:     IOCAF4_InterruptHandler = InterruptHandler;
  4444                           
  4445                           ;incstack = 0
  4446                           ; Regs used in _IOCAF4_SetInterruptHandler: [wreg]
  4447  044D  0873               	movf	IOCAF4_SetInterruptHandler@InterruptHandler+1,w
  4448  044E  0020               	movlb	0	; select bank0
  4449  044F  00E8               	movwf	_IOCAF4_InterruptHandler+1
  4450  0450  0872               	movf	IOCAF4_SetInterruptHandler@InterruptHandler,w
  4451  0451  00E7               	movwf	_IOCAF4_InterruptHandler
  4452  0452  0008               	return
  4453  0453                     __end_of_IOCAF4_SetInterruptHandler:	
  4454                           
  4455                           	psect	text27
  4456  03E6                     __ptext27:	
  4457 ;; *************** function _OSCILLATOR_Initialize *****************
  4458 ;; Defined at:
  4459 ;;		line 61 in file "mcc_generated_files/mcc.c"
  4460 ;; Parameters:    Size  Location     Type
  4461 ;;		None
  4462 ;; Auto vars:     Size  Location     Type
  4463 ;;		None
  4464 ;; Return value:  Size  Location     Type
  4465 ;;                  1    wreg      void 
  4466 ;; Registers used:
  4467 ;;		wreg, status,2
  4468 ;; Tracked objects:
  4469 ;;		On entry : 1F/0
  4470 ;;		On exit  : 1F/1
  4471 ;;		Unchanged: 0/0
  4472 ;; Data sizes:     COMMON   BANK0   BANK1
  4473 ;;      Params:         0       0       0
  4474 ;;      Locals:         0       0       0
  4475 ;;      Temps:          0       0       0
  4476 ;;      Totals:         0       0       0
  4477 ;;Total ram usage:        0 bytes
  4478 ;; Hardware stack levels used:    1
  4479 ;; Hardware stack levels required when called:    4
  4480 ;; This function calls:
  4481 ;;		Nothing
  4482 ;; This function is called by:
  4483 ;;		_SYSTEM_Initialize
  4484 ;; This function uses a non-reentrant model
  4485 ;;
  4486                           
  4487                           
  4488                           ;psect for function _OSCILLATOR_Initialize
  4489  03E6                     _OSCILLATOR_Initialize:	
  4490                           
  4491                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  4492                           
  4493                           ;incstack = 0
  4494                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4495  03E6  3070               	movlw	112
  4496  03E7  0021               	movlb	1	; select bank1
  4497  03E8  0099               	movwf	25	;volatile
  4498                           
  4499                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  4500  03E9  0198               	clrf	24	;volatile
  4501                           
  4502                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  4503  03EA  0022               	movlb	2	; select bank2
  4504  03EB  0196               	clrf	22	;volatile
  4505  03EC                     l77:	
  4506                           ;mcc_generated_files/mcc.c: 71:     {;mcc_generated_files/mcc.c: 72:     }
  4507                           
  4508                           
  4509                           ;mcc_generated_files/mcc.c: 70:     while(PLLR == 0)
  4510  03EC  0021               	movlb	1	; select bank1
  4511  03ED  1B1A               	btfsc	26,6	;volatile
  4512  03EE  0008               	return
  4513  03EF  2BEC               	goto	l77
  4514  03F0                     __end_of_OSCILLATOR_Initialize:	
  4515                           
  4516                           	psect	text28
  4517  0200                     __ptext28:	
  4518 ;; *************** function _EUSART_Initialize *****************
  4519 ;; Defined at:
  4520 ;;		line 75 in file "mcc_generated_files/eusart.c"
  4521 ;; Parameters:    Size  Location     Type
  4522 ;;		None
  4523 ;; Auto vars:     Size  Location     Type
  4524 ;;		None
  4525 ;; Return value:  Size  Location     Type
  4526 ;;                  1    wreg      void 
  4527 ;; Registers used:
  4528 ;;		wreg, status,2, status,0, pclath, cstack
  4529 ;; Tracked objects:
  4530 ;;		On entry : 1F/1
  4531 ;;		On exit  : 1F/1
  4532 ;;		Unchanged: 0/0
  4533 ;; Data sizes:     COMMON   BANK0   BANK1
  4534 ;;      Params:         0       0       0
  4535 ;;      Locals:         0       0       0
  4536 ;;      Temps:          0       0       0
  4537 ;;      Totals:         0       0       0
  4538 ;;Total ram usage:        0 bytes
  4539 ;; Hardware stack levels used:    1
  4540 ;; Hardware stack levels required when called:    5
  4541 ;; This function calls:
  4542 ;;		_EUSART_SetRxInterruptHandler
  4543 ;;		_EUSART_SetTxInterruptHandler
  4544 ;; This function is called by:
  4545 ;;		_SYSTEM_Initialize
  4546 ;; This function uses a non-reentrant model
  4547 ;;
  4548                           
  4549                           
  4550                           ;psect for function _EUSART_Initialize
  4551  0200                     _EUSART_Initialize:	
  4552  0200                     l1888:	
  4553                           ;incstack = 0
  4554                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4555                           
  4556                           
  4557                           ;mcc_generated_files/eusart.c: 78:     PIE1bits.RCIE = 0;
  4558  0200  1291               	bcf	17,5	;volatile
  4559                           
  4560                           ;mcc_generated_files/eusart.c: 79:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  4561  0201  30EC               	movlw	low _EUSART_Receive_ISR
  4562  0202  00F2               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  4563  0203  3002               	movlw	high _EUSART_Receive_ISR
  4564  0204  00F3               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  4565  0205  2459               	fcall	_EUSART_SetRxInterruptHandler
  4566                           
  4567                           ;mcc_generated_files/eusart.c: 80:     PIE1bits.TXIE = 0;
  4568  0206  0021               	movlb	1	; select bank1
  4569  0207  1211               	bcf	17,4	;volatile
  4570                           
  4571                           ;mcc_generated_files/eusart.c: 81:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  4572  0208  30D6               	movlw	low _EUSART_Transmit_ISR
  4573  0209  00F2               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  4574  020A  3002               	movlw	high _EUSART_Transmit_ISR
  4575  020B  00F3               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  4576  020C  2453               	fcall	_EUSART_SetTxInterruptHandler
  4577                           
  4578                           ;mcc_generated_files/eusart.c: 85:     BAUDCON = 0x08;
  4579  020D  3008               	movlw	8
  4580  020E  0023               	movlb	3	; select bank3
  4581  020F  009F               	movwf	31	;volatile
  4582                           
  4583                           ;mcc_generated_files/eusart.c: 88:     RCSTA = 0x90;
  4584  0210  3090               	movlw	144
  4585  0211  009D               	movwf	29	;volatile
  4586                           
  4587                           ;mcc_generated_files/eusart.c: 91:     TXSTA = 0x24;
  4588  0212  3024               	movlw	36
  4589  0213  009E               	movwf	30	;volatile
  4590                           
  4591                           ;mcc_generated_files/eusart.c: 94:     SPBRGL = 0x44;
  4592  0214  3044               	movlw	68
  4593  0215  009B               	movwf	27	;volatile
  4594                           
  4595                           ;mcc_generated_files/eusart.c: 97:     SPBRGH = 0x00;
  4596  0216  019C               	clrf	28	;volatile
  4597                           
  4598                           ;mcc_generated_files/eusart.c: 101:     eusartTxHead = 0;
  4599  0217  01FB               	clrf	_eusartTxHead	;volatile
  4600                           
  4601                           ;mcc_generated_files/eusart.c: 102:     eusartTxTail = 0;
  4602  0218  0020               	movlb	0	; select bank0
  4603  0219  01BE               	clrf	_eusartTxTail	;volatile
  4604                           
  4605                           ;mcc_generated_files/eusart.c: 103:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  4606  021A  3010               	movlw	16
  4607  021B  00FA               	movwf	_eusartTxBufferRemaining	;volatile
  4608                           
  4609                           ;mcc_generated_files/eusart.c: 105:     eusartRxHead = 0;
  4610  021C  01BD               	clrf	_eusartRxHead	;volatile
  4611                           
  4612                           ;mcc_generated_files/eusart.c: 106:     eusartRxTail = 0;
  4613  021D  01BC               	clrf	_eusartRxTail	;volatile
  4614                           
  4615                           ;mcc_generated_files/eusart.c: 107:     eusartRxCount = 0;
  4616  021E  01BB               	clrf	_eusartRxCount	;volatile
  4617                           
  4618                           ;mcc_generated_files/eusart.c: 110:     PIE1bits.RCIE = 1;
  4619  021F  0021               	movlb	1	; select bank1
  4620  0220  1691               	bsf	17,5	;volatile
  4621  0221  0008               	return
  4622  0222                     __end_of_EUSART_Initialize:	
  4623                           
  4624                           	psect	text29
  4625  0453                     __ptext29:	
  4626 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  4627 ;; Defined at:
  4628 ;;		line 211 in file "mcc_generated_files/eusart.c"
  4629 ;; Parameters:    Size  Location     Type
  4630 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  4631 ;;		 -> EUSART_Transmit_ISR(1), 
  4632 ;; Auto vars:     Size  Location     Type
  4633 ;;		None
  4634 ;; Return value:  Size  Location     Type
  4635 ;;                  1    wreg      void 
  4636 ;; Registers used:
  4637 ;;		wreg
  4638 ;; Tracked objects:
  4639 ;;		On entry : 1F/1
  4640 ;;		On exit  : 1F/0
  4641 ;;		Unchanged: 0/0
  4642 ;; Data sizes:     COMMON   BANK0   BANK1
  4643 ;;      Params:         2       0       0
  4644 ;;      Locals:         0       0       0
  4645 ;;      Temps:          0       0       0
  4646 ;;      Totals:         2       0       0
  4647 ;;Total ram usage:        2 bytes
  4648 ;; Hardware stack levels used:    1
  4649 ;; Hardware stack levels required when called:    4
  4650 ;; This function calls:
  4651 ;;		Nothing
  4652 ;; This function is called by:
  4653 ;;		_EUSART_Initialize
  4654 ;; This function uses a non-reentrant model
  4655 ;;
  4656                           
  4657                           
  4658                           ;psect for function _EUSART_SetTxInterruptHandler
  4659  0453                     _EUSART_SetTxInterruptHandler:	
  4660                           
  4661                           ;mcc_generated_files/eusart.c: 212:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  4662                           
  4663                           ;incstack = 0
  4664                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  4665  0453  0873               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  4666  0454  0020               	movlb	0	; select bank0
  4667  0455  00B1               	movwf	_EUSART_TxDefaultInterruptHandler+1
  4668  0456  0872               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  4669  0457  00B0               	movwf	_EUSART_TxDefaultInterruptHandler
  4670  0458  0008               	return
  4671  0459                     __end_of_EUSART_SetTxInterruptHandler:	
  4672                           
  4673                           	psect	text30
  4674  0459                     __ptext30:	
  4675 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  4676 ;; Defined at:
  4677 ;;		line 215 in file "mcc_generated_files/eusart.c"
  4678 ;; Parameters:    Size  Location     Type
  4679 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  4680 ;;		 -> EUSART_Receive_ISR(1), 
  4681 ;; Auto vars:     Size  Location     Type
  4682 ;;		None
  4683 ;; Return value:  Size  Location     Type
  4684 ;;                  1    wreg      void 
  4685 ;; Registers used:
  4686 ;;		wreg
  4687 ;; Tracked objects:
  4688 ;;		On entry : 1F/1
  4689 ;;		On exit  : 1F/0
  4690 ;;		Unchanged: 0/0
  4691 ;; Data sizes:     COMMON   BANK0   BANK1
  4692 ;;      Params:         2       0       0
  4693 ;;      Locals:         0       0       0
  4694 ;;      Temps:          0       0       0
  4695 ;;      Totals:         2       0       0
  4696 ;;Total ram usage:        2 bytes
  4697 ;; Hardware stack levels used:    1
  4698 ;; Hardware stack levels required when called:    4
  4699 ;; This function calls:
  4700 ;;		Nothing
  4701 ;; This function is called by:
  4702 ;;		_EUSART_Initialize
  4703 ;; This function uses a non-reentrant model
  4704 ;;
  4705                           
  4706                           
  4707                           ;psect for function _EUSART_SetRxInterruptHandler
  4708  0459                     _EUSART_SetRxInterruptHandler:	
  4709                           
  4710                           ;mcc_generated_files/eusart.c: 216:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  4711                           
  4712                           ;incstack = 0
  4713                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  4714  0459  0873               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  4715  045A  0020               	movlb	0	; select bank0
  4716  045B  00AF               	movwf	_EUSART_RxDefaultInterruptHandler+1
  4717  045C  0872               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  4718  045D  00AE               	movwf	_EUSART_RxDefaultInterruptHandler
  4719  045E  0008               	return
  4720  045F                     __end_of_EUSART_SetRxInterruptHandler:	
  4721                           
  4722                           	psect	text31
  4723  03F0                     __ptext31:	
  4724 ;; *************** function _ADC_Initialize *****************
  4725 ;; Defined at:
  4726 ;;		line 65 in file "mcc_generated_files/adc.c"
  4727 ;; Parameters:    Size  Location     Type
  4728 ;;		None
  4729 ;; Auto vars:     Size  Location     Type
  4730 ;;		None
  4731 ;; Return value:  Size  Location     Type
  4732 ;;                  1    wreg      void 
  4733 ;; Registers used:
  4734 ;;		wreg, status,2
  4735 ;; Tracked objects:
  4736 ;;		On entry : 1F/0
  4737 ;;		On exit  : 1F/1
  4738 ;;		Unchanged: 0/0
  4739 ;; Data sizes:     COMMON   BANK0   BANK1
  4740 ;;      Params:         0       0       0
  4741 ;;      Locals:         0       0       0
  4742 ;;      Temps:          0       0       0
  4743 ;;      Totals:         0       0       0
  4744 ;;Total ram usage:        0 bytes
  4745 ;; Hardware stack levels used:    1
  4746 ;; Hardware stack levels required when called:    4
  4747 ;; This function calls:
  4748 ;;		Nothing
  4749 ;; This function is called by:
  4750 ;;		_SYSTEM_Initialize
  4751 ;; This function uses a non-reentrant model
  4752 ;;
  4753                           
  4754                           
  4755                           ;psect for function _ADC_Initialize
  4756  03F0                     _ADC_Initialize:	
  4757                           
  4758                           ;mcc_generated_files/adc.c: 70:     ADCON0 = 0x01;
  4759                           
  4760                           ;incstack = 0
  4761                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  4762  03F0  3001               	movlw	1
  4763  03F1  0021               	movlb	1	; select bank1
  4764  03F2  009D               	movwf	29	;volatile
  4765                           
  4766                           ;mcc_generated_files/adc.c: 73:     ADCON1 = 0xF0;
  4767  03F3  30F0               	movlw	240
  4768  03F4  009E               	movwf	30	;volatile
  4769                           
  4770                           ;mcc_generated_files/adc.c: 76:     ADRESL = 0x00;
  4771  03F5  019B               	clrf	27	;volatile
  4772                           
  4773                           ;mcc_generated_files/adc.c: 79:     ADRESH = 0x00;
  4774  03F6  019C               	clrf	28	;volatile
  4775                           
  4776                           ;mcc_generated_files/adc.c: 82:     PIE1bits.ADIE = 1;
  4777  03F7  1711               	bsf	17,6	;volatile
  4778  03F8  0008               	return
  4779  03F9                     __end_of_ADC_Initialize:	
  4780                           
  4781                           	psect	text32
  4782  048A                     __ptext32:	
  4783 ;; *************** function _EUSART_is_rx_ready *****************
  4784 ;; Defined at:
  4785 ;;		line 118 in file "mcc_generated_files/eusart.c"
  4786 ;; Parameters:    Size  Location     Type
  4787 ;;		None
  4788 ;; Auto vars:     Size  Location     Type
  4789 ;;		None
  4790 ;; Return value:  Size  Location     Type
  4791 ;;                  1    wreg      unsigned char 
  4792 ;; Registers used:
  4793 ;;		wreg
  4794 ;; Tracked objects:
  4795 ;;		On entry : 0/2
  4796 ;;		On exit  : 1F/0
  4797 ;;		Unchanged: 0/0
  4798 ;; Data sizes:     COMMON   BANK0   BANK1
  4799 ;;      Params:         0       0       0
  4800 ;;      Locals:         0       0       0
  4801 ;;      Temps:          0       0       0
  4802 ;;      Totals:         0       0       0
  4803 ;;Total ram usage:        0 bytes
  4804 ;; Hardware stack levels used:    1
  4805 ;; Hardware stack levels required when called:    4
  4806 ;; This function calls:
  4807 ;;		Nothing
  4808 ;; This function is called by:
  4809 ;;		_main
  4810 ;; This function uses a non-reentrant model
  4811 ;;
  4812                           
  4813                           
  4814                           ;psect for function _EUSART_is_rx_ready
  4815  048A                     _EUSART_is_rx_ready:	
  4816                           
  4817                           ;mcc_generated_files/eusart.c: 120:     return eusartRxCount;
  4818                           
  4819                           ;incstack = 0
  4820                           ; Regs used in _EUSART_is_rx_ready: [wreg]
  4821  048A  0020               	movlb	0	; select bank0
  4822  048B  083B               	movf	_eusartRxCount,w	;volatile
  4823  048C  0008               	return
  4824  048D                     __end_of_EUSART_is_rx_ready:	
  4825                           
  4826                           	psect	intentry
  4827  0004                     __pintentry:	
  4828 ;; *************** function _INTERRUPT_InterruptManager *****************
  4829 ;; Defined at:
  4830 ;;		line 54 in file "mcc_generated_files/interrupt_manager.c"
  4831 ;; Parameters:    Size  Location     Type
  4832 ;;		None
  4833 ;; Auto vars:     Size  Location     Type
  4834 ;;		None
  4835 ;; Return value:  Size  Location     Type
  4836 ;;                  1    wreg      void 
  4837 ;; Registers used:
  4838 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4839 ;; Tracked objects:
  4840 ;;		On entry : 0/0
  4841 ;;		On exit  : 0/0
  4842 ;;		Unchanged: 0/0
  4843 ;; Data sizes:     COMMON   BANK0   BANK1
  4844 ;;      Params:         0       0       0
  4845 ;;      Locals:         0       0       0
  4846 ;;      Temps:          0       0       0
  4847 ;;      Totals:         0       0       0
  4848 ;;Total ram usage:        0 bytes
  4849 ;; Hardware stack levels used:    1
  4850 ;; Hardware stack levels required when called:    3
  4851 ;; This function calls:
  4852 ;;		Absolute function
  4853 ;;		_ADC_GetConversionResult
  4854 ;;		_ADC_ISR
  4855 ;;		_EUSART_Receive_ISR
  4856 ;;		_EUSART_Transmit_ISR
  4857 ;;		_PIN_MANAGER_IOC
  4858 ;;		_TMR1_ISR
  4859 ;; This function is called by:
  4860 ;;		Interrupt level 1
  4861 ;; This function uses a non-reentrant model
  4862 ;;
  4863                           
  4864  0004                     _INTERRUPT_InterruptManager:	
  4865                           
  4866                           ;incstack = 0
  4867  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4868                           
  4869                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  4870  0005  3180               	pagesel	$
  4871                           
  4872                           ;mcc_generated_files/interrupt_manager.c: 57:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
  4873  0006  198B               	btfsc	11,3	;volatile
  4874  0007  1C0B               	btfss	11,0	;volatile
  4875  0008  280B               	goto	i1l110
  4876                           
  4877                           ;mcc_generated_files/interrupt_manager.c: 58:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 59:         PIN_MANAGER_IOC();
  4878  0009  247A               	fcall	_PIN_MANAGER_IOC
  4879                           
  4880                           ;mcc_generated_files/interrupt_manager.c: 60:     }
  4881  000A  283C               	goto	i1l122
  4882  000B                     i1l110:	
  4883                           ;mcc_generated_files/interrupt_manager.c: 61:     else if(INTCONbits.PEIE == 1)
  4884                           
  4885  000B  1F0B               	btfss	11,6	;volatile
  4886  000C  283C               	goto	i1l122
  4887                           
  4888                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  4889  000D  0021               	movlb	1	; select bank1
  4890  000E  1C11               	btfss	17,0	;volatile
  4891  000F  2815               	goto	i1l113
  4892  0010  0020               	movlb	0	; select bank0
  4893  0011  1C11               	btfss	17,0	;volatile
  4894  0012  2815               	goto	i1l113
  4895                           
  4896                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             TMR1_ISR();
  4897  0013  234A               	fcall	_TMR1_ISR
  4898                           
  4899                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  4900  0014  283C               	goto	i1l122
  4901  0015                     i1l113:	
  4902                           ;mcc_generated_files/interrupt_manager.c: 67:         else if(PIE1bits.ADIE == 1 && PIR1
      +                          bits.ADIF == 1)
  4903                           
  4904  0015  0021               	movlb	1	; select bank1
  4905  0016  1F11               	btfss	17,6	;volatile
  4906  0017  2825               	goto	i1l115
  4907  0018  0020               	movlb	0	; select bank0
  4908  0019  1F11               	btfss	17,6	;volatile
  4909  001A  2825               	goto	i1l115
  4910                           
  4911                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             ADC_value = ADC_GetConversionResult();
  4912  001B  23F9               	fcall	_ADC_GetConversionResult
  4913  001C  0871               	movf	?_ADC_GetConversionResult+1,w
  4914  001D  0020               	movlb	0	; select bank0
  4915  001E  00AD               	movwf	_ADC_value+1	;volatile
  4916  001F  0870               	movf	?_ADC_GetConversionResult,w
  4917  0020  00AC               	movwf	_ADC_value	;volatile
  4918                           
  4919                           ;mcc_generated_files/interrupt_manager.c: 70:             ADC_state = ADC_READY;
  4920  0021  3001               	movlw	1
  4921  0022  00BF               	movwf	_ADC_state	;volatile
  4922                           
  4923                           ;mcc_generated_files/interrupt_manager.c: 72:             ADC_ISR();
  4924  0023  2499               	fcall	_ADC_ISR
  4925                           
  4926                           ;mcc_generated_files/interrupt_manager.c: 73:         }
  4927  0024  283C               	goto	i1l122
  4928  0025                     i1l115:	
  4929                           ;mcc_generated_files/interrupt_manager.c: 74:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
  4930                           
  4931  0025  0021               	movlb	1	; select bank1
  4932  0026  1E91               	btfss	17,5	;volatile
  4933  0027  2831               	goto	i1l117
  4934  0028  0020               	movlb	0	; select bank0
  4935  0029  1E91               	btfss	17,5	;volatile
  4936  002A  2831               	goto	i1l117
  4937                           
  4938                           ;mcc_generated_files/interrupt_manager.c: 75:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 76:             EUSART_RxDefaultInterruptHandler();
  4939  002B  082F               	movf	_EUSART_RxDefaultInterruptHandler+1,w
  4940  002C  008A               	movwf	10
  4941  002D  082E               	movf	_EUSART_RxDefaultInterruptHandler,w
  4942  002E  000A               	callw
  4943  002F  3180               	pagesel	$
  4944                           
  4945                           ;mcc_generated_files/interrupt_manager.c: 77:         }
  4946  0030  283C               	goto	i1l122
  4947  0031                     i1l117:	
  4948                           ;mcc_generated_files/interrupt_manager.c: 78:         else if(PIE1bits.TXIE == 1 && PIR1
      +                          bits.TXIF == 1)
  4949                           
  4950  0031  0021               	movlb	1	; select bank1
  4951  0032  1E11               	btfss	17,4	;volatile
  4952  0033  283C               	goto	i1l122
  4953  0034  0020               	movlb	0	; select bank0
  4954  0035  1E11               	btfss	17,4	;volatile
  4955  0036  283C               	goto	i1l122
  4956                           
  4957                           ;mcc_generated_files/interrupt_manager.c: 79:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 80:             EUSART_TxDefaultInterruptHandler();
  4958  0037  0831               	movf	_EUSART_TxDefaultInterruptHandler+1,w
  4959  0038  008A               	movwf	10
  4960  0039  0830               	movf	_EUSART_TxDefaultInterruptHandler,w
  4961  003A  000A               	callw
  4962  003B  3180               	pagesel	$
  4963  003C                     i1l122:	
  4964                           ;mcc_generated_files/interrupt_manager.c: 81:         }
  4965                           
  4966  003C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4967  003D  0009               	retfie
  4968  003E                     __end_of_INTERRUPT_InterruptManager:	
  4969                           
  4970                           	psect	text34
  4971  034A                     __ptext34:	
  4972 ;; *************** function _TMR1_ISR *****************
  4973 ;; Defined at:
  4974 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  4975 ;; Parameters:    Size  Location     Type
  4976 ;;		None
  4977 ;; Auto vars:     Size  Location     Type
  4978 ;;		None
  4979 ;; Return value:  Size  Location     Type
  4980 ;;                  1    wreg      void 
  4981 ;; Registers used:
  4982 ;;		wreg, status,2, status,0, pclath, cstack
  4983 ;; Tracked objects:
  4984 ;;		On entry : 1F/0
  4985 ;;		On exit  : 0/0
  4986 ;;		Unchanged: 0/0
  4987 ;; Data sizes:     COMMON   BANK0   BANK1
  4988 ;;      Params:         0       0       0
  4989 ;;      Locals:         0       0       0
  4990 ;;      Temps:          0       0       0
  4991 ;;      Totals:         0       0       0
  4992 ;;Total ram usage:        0 bytes
  4993 ;; Hardware stack levels used:    1
  4994 ;; Hardware stack levels required when called:    2
  4995 ;; This function calls:
  4996 ;;		Absolute function
  4997 ;;		_TMR1_DefaultInterruptHandler
  4998 ;;		_TMR1_WriteTimer
  4999 ;;		__TMR1_Ready
  5000 ;; This function is called by:
  5001 ;;		_INTERRUPT_InterruptManager
  5002 ;; This function uses a non-reentrant model
  5003 ;;
  5004                           
  5005                           
  5006                           ;psect for function _TMR1_ISR
  5007  034A                     _TMR1_ISR:	
  5008                           
  5009                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  5010                           
  5011                           ;incstack = 0
  5012                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  5013  034A  1011               	bcf	17,0	;volatile
  5014                           
  5015                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  5016  034B  082B               	movf	_timer1ReloadVal+1,w	;volatile
  5017  034C  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  5018  034D  082A               	movf	_timer1ReloadVal,w	;volatile
  5019  034E  00F0               	movwf	TMR1_WriteTimer@timerVal
  5020  034F  2384               	fcall	_TMR1_WriteTimer
  5021                           
  5022                           ;mcc_generated_files/tmr1.c: 164:     if(TMR1_InterruptHandler)
  5023  0350  0828               	movf	_TMR1_InterruptHandler,w
  5024  0351  0429               	iorwf	_TMR1_InterruptHandler+1,w
  5025  0352  1903               	btfsc	3,2
  5026  0353  0008               	return
  5027                           
  5028                           ;mcc_generated_files/tmr1.c: 165:     {;mcc_generated_files/tmr1.c: 166:         TMR1_In
      +                          terruptHandler();
  5029  0354  0829               	movf	_TMR1_InterruptHandler+1,w
  5030  0355  008A               	movwf	10
  5031  0356  0828               	movf	_TMR1_InterruptHandler,w
  5032  0357  000A               	callw
  5033  0358  3183               	pagesel	$
  5034  0359  0008               	return
  5035  035A                     __end_of_TMR1_ISR:	
  5036                           
  5037                           	psect	text35
  5038  049C                     __ptext35:	
  5039 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  5040 ;; Defined at:
  5041 ;;		line 175 in file "mcc_generated_files/tmr1.c"
  5042 ;; Parameters:    Size  Location     Type
  5043 ;;		None
  5044 ;; Auto vars:     Size  Location     Type
  5045 ;;		None
  5046 ;; Return value:  Size  Location     Type
  5047 ;;                  1    wreg      void 
  5048 ;; Registers used:
  5049 ;;		None
  5050 ;; Tracked objects:
  5051 ;;		On entry : 1F/0
  5052 ;;		On exit  : 1F/0
  5053 ;;		Unchanged: 1F/0
  5054 ;; Data sizes:     COMMON   BANK0   BANK1
  5055 ;;      Params:         0       0       0
  5056 ;;      Locals:         0       0       0
  5057 ;;      Temps:          0       0       0
  5058 ;;      Totals:         0       0       0
  5059 ;;Total ram usage:        0 bytes
  5060 ;; Hardware stack levels used:    1
  5061 ;; This function calls:
  5062 ;;		Nothing
  5063 ;; This function is called by:
  5064 ;;		_TMR1_Initialize
  5065 ;;		_TMR1_ISR
  5066 ;; This function uses a non-reentrant model
  5067 ;;
  5068                           
  5069                           
  5070                           ;psect for function _TMR1_DefaultInterruptHandler
  5071  049C                     _TMR1_DefaultInterruptHandler:	
  5072                           
  5073                           ;incstack = 0
  5074                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  5075  049C  0008               	return
  5076  049D                     __end_of_TMR1_DefaultInterruptHandler:	
  5077                           
  5078                           	psect	text36
  5079  0427                     __ptext36:	
  5080 ;; *************** function __TMR1_Ready *****************
  5081 ;; Defined at:
  5082 ;;		line 158 in file "logger.c"
  5083 ;; Parameters:    Size  Location     Type
  5084 ;;		None
  5085 ;; Auto vars:     Size  Location     Type
  5086 ;;		None
  5087 ;; Return value:  Size  Location     Type
  5088 ;;                  1    wreg      void 
  5089 ;; Registers used:
  5090 ;;		wreg, status,2, status,0, pclath, cstack
  5091 ;; Tracked objects:
  5092 ;;		On entry : 1F/0
  5093 ;;		On exit  : 1E/0
  5094 ;;		Unchanged: 0/0
  5095 ;; Data sizes:     COMMON   BANK0   BANK1
  5096 ;;      Params:         0       0       0
  5097 ;;      Locals:         0       0       0
  5098 ;;      Temps:          0       0       0
  5099 ;;      Totals:         0       0       0
  5100 ;;Total ram usage:        0 bytes
  5101 ;; Hardware stack levels used:    1
  5102 ;; Hardware stack levels required when called:    1
  5103 ;; This function calls:
  5104 ;;		i1_ADC_StartConversion
  5105 ;; This function is called by:
  5106 ;;		_logger_initialize
  5107 ;;		_TMR1_ISR
  5108 ;; This function uses a non-reentrant model
  5109 ;;
  5110                           
  5111                           
  5112                           ;psect for function __TMR1_Ready
  5113  0427                     __TMR1_Ready:	
  5114                           
  5115                           ;logger.c: 160:     if (TMR1_state == TMR1_RUNNING) {
  5116                           
  5117                           ;incstack = 0
  5118                           ; Regs used in __TMR1_Ready: [wreg+status,2+status,0+pclath+cstack]
  5119  0427  0B37               	decfsz	_TMR1_state,w	;volatile
  5120  0428  0008               	return
  5121                           
  5122                           ;logger.c: 161:         ADCON0bits.ADON = 0;
  5123  0429  0021               	movlb	1	; select bank1
  5124  042A  101D               	bcf	29,0	;volatile
  5125                           
  5126                           ;logger.c: 162:         ADCON0bits.ADON = 1;
  5127  042B  141D               	bsf	29,0	;volatile
  5128                           
  5129                           ;logger.c: 163:         ADC_StartConversion();
  5130  042C  2497               	fcall	i1_ADC_StartConversion
  5131  042D  0008               	return
  5132  042E                     __end_of__TMR1_Ready:	
  5133                           
  5134                           	psect	text37
  5135  0497                     __ptext37:	
  5136 ;; *************** function i1_ADC_StartConversion *****************
  5137 ;; Defined at:
  5138 ;;		line 93 in file "mcc_generated_files/adc.c"
  5139 ;; Parameters:    Size  Location     Type
  5140 ;;		None
  5141 ;; Auto vars:     Size  Location     Type
  5142 ;;		None
  5143 ;; Return value:  Size  Location     Type
  5144 ;;                  1    wreg      void 
  5145 ;; Registers used:
  5146 ;;		None
  5147 ;; Tracked objects:
  5148 ;;		On entry : 1F/1
  5149 ;;		On exit  : 1F/1
  5150 ;;		Unchanged: 0/0
  5151 ;; Data sizes:     COMMON   BANK0   BANK1
  5152 ;;      Params:         0       0       0
  5153 ;;      Locals:         0       0       0
  5154 ;;      Temps:          0       0       0
  5155 ;;      Totals:         0       0       0
  5156 ;;Total ram usage:        0 bytes
  5157 ;; Hardware stack levels used:    1
  5158 ;; This function calls:
  5159 ;;		Nothing
  5160 ;; This function is called by:
  5161 ;;		__TMR1_Ready
  5162 ;; This function uses a non-reentrant model
  5163 ;;
  5164                           
  5165                           
  5166                           ;psect for function i1_ADC_StartConversion
  5167  0497                     i1_ADC_StartConversion:	
  5168                           
  5169                           ;mcc_generated_files/adc.c: 96:     ADCON0bits.GO_nDONE = 1;
  5170                           
  5171                           ;incstack = 0
  5172                           ; Regs used in i1_ADC_StartConversion: []
  5173  0497  149D               	bsf	29,1	;volatile
  5174  0498  0008               	return
  5175  0499                     __end_ofi1_ADC_StartConversion:	
  5176                           
  5177                           	psect	text38
  5178  0384                     __ptext38:	
  5179 ;; *************** function _TMR1_WriteTimer *****************
  5180 ;; Defined at:
  5181 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  5182 ;; Parameters:    Size  Location     Type
  5183 ;;  timerVal        2    0[COMMON] unsigned short 
  5184 ;; Auto vars:     Size  Location     Type
  5185 ;;		None
  5186 ;; Return value:  Size  Location     Type
  5187 ;;                  1    wreg      void 
  5188 ;; Registers used:
  5189 ;;		wreg
  5190 ;; Tracked objects:
  5191 ;;		On entry : 1F/0
  5192 ;;		On exit  : 1F/0
  5193 ;;		Unchanged: 0/0
  5194 ;; Data sizes:     COMMON   BANK0   BANK1
  5195 ;;      Params:         2       0       0
  5196 ;;      Locals:         0       0       0
  5197 ;;      Temps:          0       0       0
  5198 ;;      Totals:         2       0       0
  5199 ;;Total ram usage:        2 bytes
  5200 ;; Hardware stack levels used:    1
  5201 ;; This function calls:
  5202 ;;		Nothing
  5203 ;; This function is called by:
  5204 ;;		_TMR1_ISR
  5205 ;; This function uses a non-reentrant model
  5206 ;;
  5207                           
  5208                           
  5209                           ;psect for function _TMR1_WriteTimer
  5210  0384                     _TMR1_WriteTimer:	
  5211                           
  5212                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  5213                           
  5214                           ;incstack = 0
  5215                           ; Regs used in _TMR1_WriteTimer: [wreg]
  5216  0384  1D18               	btfss	24,2	;volatile
  5217  0385  2B8D               	goto	i1l1930
  5218                           
  5219                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  5220  0386  1018               	bcf	24,0	;volatile
  5221                           
  5222                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (timerVal >> 8);
  5223  0387  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  5224  0388  0097               	movwf	23	;volatile
  5225                           
  5226                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = timerVal;
  5227  0389  0870               	movf	TMR1_WriteTimer@timerVal,w
  5228  038A  0096               	movwf	22	;volatile
  5229                           
  5230                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  5231  038B  1418               	bsf	24,0	;volatile
  5232                           
  5233                           ;mcc_generated_files/tmr1.c: 133:     }
  5234  038C  0008               	return
  5235  038D                     i1l1930:	
  5236                           
  5237                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (timerVal >> 8);
  5238  038D  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  5239  038E  0097               	movwf	23	;volatile
  5240                           
  5241                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = timerVal;
  5242  038F  0870               	movf	TMR1_WriteTimer@timerVal,w
  5243  0390  0096               	movwf	22	;volatile
  5244  0391  0008               	return
  5245  0392                     __end_of_TMR1_WriteTimer:	
  5246                           
  5247                           	psect	text39
  5248  047A                     __ptext39:	
  5249 ;; *************** function _PIN_MANAGER_IOC *****************
  5250 ;; Defined at:
  5251 ;;		line 111 in file "mcc_generated_files/pin_manager.c"
  5252 ;; Parameters:    Size  Location     Type
  5253 ;;		None
  5254 ;; Auto vars:     Size  Location     Type
  5255 ;;		None
  5256 ;; Return value:  Size  Location     Type
  5257 ;;                  1    wreg      void 
  5258 ;; Registers used:
  5259 ;;		wreg, status,2, status,0, pclath, cstack
  5260 ;; Tracked objects:
  5261 ;;		On entry : 0/0
  5262 ;;		On exit  : 1F/7
  5263 ;;		Unchanged: 0/0
  5264 ;; Data sizes:     COMMON   BANK0   BANK1
  5265 ;;      Params:         0       0       0
  5266 ;;      Locals:         0       0       0
  5267 ;;      Temps:          0       0       0
  5268 ;;      Totals:         0       0       0
  5269 ;;Total ram usage:        0 bytes
  5270 ;; Hardware stack levels used:    1
  5271 ;; Hardware stack levels required when called:    2
  5272 ;; This function calls:
  5273 ;;		_IOCAF4_ISR
  5274 ;; This function is called by:
  5275 ;;		_INTERRUPT_InterruptManager
  5276 ;; This function uses a non-reentrant model
  5277 ;;
  5278                           
  5279                           
  5280                           ;psect for function _PIN_MANAGER_IOC
  5281  047A                     _PIN_MANAGER_IOC:	
  5282                           
  5283                           ;mcc_generated_files/pin_manager.c: 114:     if(IOCAFbits.IOCAF4 == 1)
  5284                           
  5285                           ;incstack = 0
  5286                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
  5287  047A  0027               	movlb	7	; select bank7
  5288  047B  1E13               	btfss	19,4	;volatile
  5289  047C  0008               	return
  5290                           
  5291                           ;mcc_generated_files/pin_manager.c: 115:     {;mcc_generated_files/pin_manager.c: 116:  
      +                                 IOCAF4_ISR();
  5292  047D  2BAC               	ljmp	i1l1848
  5293  047E                     __end_of_PIN_MANAGER_IOC:	
  5294                           
  5295                           	psect	text40
  5296  03AC                     __ptext40:	
  5297 ;; *************** function _IOCAF4_ISR *****************
  5298 ;; Defined at:
  5299 ;;		line 123 in file "mcc_generated_files/pin_manager.c"
  5300 ;; Parameters:    Size  Location     Type
  5301 ;;		None
  5302 ;; Auto vars:     Size  Location     Type
  5303 ;;		None
  5304 ;; Return value:  Size  Location     Type
  5305 ;;                  1    wreg      void 
  5306 ;; Registers used:
  5307 ;;		wreg, status,2, status,0, pclath, cstack
  5308 ;; Tracked objects:
  5309 ;;		On entry : 1F/7
  5310 ;;		On exit  : 1F/7
  5311 ;;		Unchanged: 0/0
  5312 ;; Data sizes:     COMMON   BANK0   BANK1
  5313 ;;      Params:         0       0       0
  5314 ;;      Locals:         0       0       0
  5315 ;;      Temps:          0       0       0
  5316 ;;      Totals:         0       0       0
  5317 ;;Total ram usage:        0 bytes
  5318 ;; Hardware stack levels used:    1
  5319 ;; Hardware stack levels required when called:    1
  5320 ;; This function calls:
  5321 ;;		Absolute function
  5322 ;;		_IOCAF4_DefaultInterruptHandler
  5323 ;;		__IOC_Ready
  5324 ;; This function is called by:
  5325 ;;		_PIN_MANAGER_IOC
  5326 ;; This function uses a non-reentrant model
  5327 ;;
  5328                           
  5329                           
  5330                           ;psect for function _IOCAF4_ISR
  5331  03AC                     _IOCAF4_ISR:	
  5332  03AC                     i1l1848:	
  5333                           ;incstack = 0
  5334                           ; Regs used in _IOCAF4_ISR: [wreg+status,2+status,0+pclath+cstack]
  5335                           
  5336                           
  5337                           ;mcc_generated_files/pin_manager.c: 128:     if(IOCAF4_InterruptHandler)
  5338  03AC  0020               	movlb	0	; select bank0
  5339  03AD  0867               	movf	_IOCAF4_InterruptHandler,w
  5340  03AE  0468               	iorwf	_IOCAF4_InterruptHandler+1,w
  5341  03AF  1903               	btfsc	3,2
  5342  03B0  2BB6               	goto	i1l1852
  5343                           
  5344                           ;mcc_generated_files/pin_manager.c: 129:     {;mcc_generated_files/pin_manager.c: 130:  
      +                                 IOCAF4_InterruptHandler();
  5345  03B1  0868               	movf	_IOCAF4_InterruptHandler+1,w
  5346  03B2  008A               	movwf	10
  5347  03B3  0867               	movf	_IOCAF4_InterruptHandler,w
  5348  03B4  000A               	callw
  5349  03B5  3183               	pagesel	$
  5350  03B6                     i1l1852:	
  5351                           
  5352                           ;mcc_generated_files/pin_manager.c: 132:     IOCAFbits.IOCAF4 = 0;
  5353  03B6  0027               	movlb	7	; select bank7
  5354  03B7  1213               	bcf	19,4	;volatile
  5355  03B8  0008               	return
  5356  03B9                     __end_of_IOCAF4_ISR:	
  5357                           
  5358                           	psect	text41
  5359  049D                     __ptext41:	
  5360 ;; *************** function _IOCAF4_DefaultInterruptHandler *****************
  5361 ;; Defined at:
  5362 ;;		line 145 in file "mcc_generated_files/pin_manager.c"
  5363 ;; Parameters:    Size  Location     Type
  5364 ;;		None
  5365 ;; Auto vars:     Size  Location     Type
  5366 ;;		None
  5367 ;; Return value:  Size  Location     Type
  5368 ;;                  1    wreg      void 
  5369 ;; Registers used:
  5370 ;;		None
  5371 ;; Tracked objects:
  5372 ;;		On entry : 1F/0
  5373 ;;		On exit  : 1F/0
  5374 ;;		Unchanged: 1F/0
  5375 ;; Data sizes:     COMMON   BANK0   BANK1
  5376 ;;      Params:         0       0       0
  5377 ;;      Locals:         0       0       0
  5378 ;;      Temps:          0       0       0
  5379 ;;      Totals:         0       0       0
  5380 ;;Total ram usage:        0 bytes
  5381 ;; Hardware stack levels used:    1
  5382 ;; This function calls:
  5383 ;;		Nothing
  5384 ;; This function is called by:
  5385 ;;		_PIN_MANAGER_Initialize
  5386 ;;		_IOCAF4_ISR
  5387 ;; This function uses a non-reentrant model
  5388 ;;
  5389                           
  5390                           
  5391                           ;psect for function _IOCAF4_DefaultInterruptHandler
  5392  049D                     _IOCAF4_DefaultInterruptHandler:	
  5393                           
  5394                           ;incstack = 0
  5395                           ; Regs used in _IOCAF4_DefaultInterruptHandler: []
  5396  049D  0008               	return
  5397  049E                     __end_of_IOCAF4_DefaultInterruptHandler:	
  5398                           
  5399                           	psect	text42
  5400  042E                     __ptext42:	
  5401 ;; *************** function __IOC_Ready *****************
  5402 ;; Defined at:
  5403 ;;		line 167 in file "logger.c"
  5404 ;; Parameters:    Size  Location     Type
  5405 ;;		None
  5406 ;; Auto vars:     Size  Location     Type
  5407 ;;		None
  5408 ;; Return value:  Size  Location     Type
  5409 ;;                  1    wreg      void 
  5410 ;; Registers used:
  5411 ;;		wreg, status,2
  5412 ;; Tracked objects:
  5413 ;;		On entry : 1F/0
  5414 ;;		On exit  : 1F/0
  5415 ;;		Unchanged: 0/0
  5416 ;; Data sizes:     COMMON   BANK0   BANK1
  5417 ;;      Params:         0       0       0
  5418 ;;      Locals:         0       0       0
  5419 ;;      Temps:          0       0       0
  5420 ;;      Totals:         0       0       0
  5421 ;;Total ram usage:        0 bytes
  5422 ;; Hardware stack levels used:    1
  5423 ;; This function calls:
  5424 ;;		Nothing
  5425 ;; This function is called by:
  5426 ;;		_logger_initialize
  5427 ;;		_IOCAF4_ISR
  5428 ;; This function uses a non-reentrant model
  5429 ;;
  5430                           
  5431                           
  5432                           ;psect for function __IOC_Ready
  5433  042E                     __IOC_Ready:	
  5434                           
  5435                           ;logger.c: 170:     IOC_value = PORTAbits.RA4;
  5436                           
  5437                           ;incstack = 0
  5438                           ; Regs used in __IOC_Ready: [wreg+status,2]
  5439  042E  3000               	movlw	0
  5440  042F  1A0C               	btfsc	12,4	;volatile
  5441  0430  3001               	movlw	1
  5442  0431  00B6               	movwf	_IOC_value	;volatile
  5443                           
  5444                           ;logger.c: 171:     IOC_state = IOC_READY;
  5445  0432  3001               	movlw	1
  5446  0433  00BA               	movwf	_IOC_state	;volatile
  5447  0434  0008               	return
  5448  0435                     __end_of__IOC_Ready:	
  5449                           
  5450                           	psect	text43
  5451  02D6                     __ptext43:	
  5452 ;; *************** function _EUSART_Transmit_ISR *****************
  5453 ;; Defined at:
  5454 ;;		line 172 in file "mcc_generated_files/eusart.c"
  5455 ;; Parameters:    Size  Location     Type
  5456 ;;		None
  5457 ;; Auto vars:     Size  Location     Type
  5458 ;;		None
  5459 ;; Return value:  Size  Location     Type
  5460 ;;                  1    wreg      void 
  5461 ;; Registers used:
  5462 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5463 ;; Tracked objects:
  5464 ;;		On entry : 1F/0
  5465 ;;		On exit  : 1E/0
  5466 ;;		Unchanged: 0/0
  5467 ;; Data sizes:     COMMON   BANK0   BANK1
  5468 ;;      Params:         0       0       0
  5469 ;;      Locals:         0       0       0
  5470 ;;      Temps:          0       0       0
  5471 ;;      Totals:         0       0       0
  5472 ;;Total ram usage:        0 bytes
  5473 ;; Hardware stack levels used:    1
  5474 ;; This function calls:
  5475 ;;		Nothing
  5476 ;; This function is called by:
  5477 ;;		_EUSART_Initialize
  5478 ;;		_INTERRUPT_InterruptManager
  5479 ;; This function uses a non-reentrant model
  5480 ;;
  5481                           
  5482                           
  5483                           ;psect for function _EUSART_Transmit_ISR
  5484  02D6                     _EUSART_Transmit_ISR:	
  5485                           
  5486                           ;mcc_generated_files/eusart.c: 176:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  5487                           
  5488                           ;incstack = 0
  5489                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  5490  02D6  3010               	movlw	16
  5491  02D7  027A               	subwf	_eusartTxBufferRemaining,w
  5492  02D8  1803               	skipnc
  5493  02D9  2AE9               	goto	i1l308
  5494                           
  5495                           ;mcc_generated_files/eusart.c: 177:     {;mcc_generated_files/eusart.c: 178:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
  5496  02DA  083E               	movf	_eusartTxTail,w
  5497  02DB  3EA0               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  5498  02DC  0086               	movwf	6
  5499  02DD  0187               	clrf	7
  5500  02DE  0801               	movf	1,w
  5501  02DF  0023               	movlb	3	; select bank3
  5502  02E0  009A               	movwf	26	;volatile
  5503  02E1  0020               	movlb	0	; select bank0
  5504  02E2  0ABE               	incf	_eusartTxTail,f	;volatile
  5505                           
  5506                           ;mcc_generated_files/eusart.c: 179:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  5507  02E3  3010               	movlw	16
  5508  02E4  023E               	subwf	_eusartTxTail,w
  5509  02E5  1803               	btfsc	3,0
  5510                           
  5511                           ;mcc_generated_files/eusart.c: 180:         {;mcc_generated_files/eusart.c: 181:        
      +                               eusartTxTail = 0;
  5512  02E6  01BE               	clrf	_eusartTxTail	;volatile
  5513                           
  5514                           ;mcc_generated_files/eusart.c: 183:         eusartTxBufferRemaining++;
  5515  02E7  0AFA               	incf	_eusartTxBufferRemaining,f	;volatile
  5516                           
  5517                           ;mcc_generated_files/eusart.c: 184:     }
  5518  02E8  0008               	return
  5519  02E9                     i1l308:	
  5520                           ;mcc_generated_files/eusart.c: 185:     else
  5521                           
  5522                           
  5523                           ;mcc_generated_files/eusart.c: 186:     {;mcc_generated_files/eusart.c: 187:         PIE
      +                          1bits.TXIE = 0;
  5524  02E9  0021               	movlb	1	; select bank1
  5525  02EA  1211               	bcf	17,4	;volatile
  5526  02EB  0008               	return
  5527  02EC                     __end_of_EUSART_Transmit_ISR:	
  5528                           
  5529                           	psect	text44
  5530  02EC                     __ptext44:	
  5531 ;; *************** function _EUSART_Receive_ISR *****************
  5532 ;; Defined at:
  5533 ;;		line 191 in file "mcc_generated_files/eusart.c"
  5534 ;; Parameters:    Size  Location     Type
  5535 ;;		None
  5536 ;; Auto vars:     Size  Location     Type
  5537 ;;		None
  5538 ;; Return value:  Size  Location     Type
  5539 ;;                  1    wreg      void 
  5540 ;; Registers used:
  5541 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5542 ;; Tracked objects:
  5543 ;;		On entry : 1F/0
  5544 ;;		On exit  : 1F/0
  5545 ;;		Unchanged: 0/0
  5546 ;; Data sizes:     COMMON   BANK0   BANK1
  5547 ;;      Params:         0       0       0
  5548 ;;      Locals:         0       0       0
  5549 ;;      Temps:          0       0       0
  5550 ;;      Totals:         0       0       0
  5551 ;;Total ram usage:        0 bytes
  5552 ;; Hardware stack levels used:    1
  5553 ;; This function calls:
  5554 ;;		Nothing
  5555 ;; This function is called by:
  5556 ;;		_EUSART_Initialize
  5557 ;;		_INTERRUPT_InterruptManager
  5558 ;; This function uses a non-reentrant model
  5559 ;;
  5560                           
  5561                           
  5562                           ;psect for function _EUSART_Receive_ISR
  5563  02EC                     _EUSART_Receive_ISR:	
  5564                           
  5565                           ;mcc_generated_files/eusart.c: 194:     if(1 == RCSTAbits.OERR)
  5566                           
  5567                           ;incstack = 0
  5568                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  5569  02EC  0023               	movlb	3	; select bank3
  5570  02ED  1C9D               	btfss	29,1	;volatile
  5571  02EE  2AF1               	goto	i1l2072
  5572                           
  5573                           ;mcc_generated_files/eusart.c: 195:     {;mcc_generated_files/eusart.c: 198:         RCS
      +                          TAbits.CREN = 0;
  5574  02EF  121D               	bcf	29,4	;volatile
  5575                           
  5576                           ;mcc_generated_files/eusart.c: 199:         RCSTAbits.CREN = 1;
  5577  02F0  161D               	bsf	29,4	;volatile
  5578  02F1                     i1l2072:	
  5579                           
  5580                           ;mcc_generated_files/eusart.c: 203:     eusartRxBuffer[eusartRxHead++] = RCREG;
  5581  02F1  0020               	movlb	0	; select bank0
  5582  02F2  083D               	movf	_eusartRxHead,w
  5583  02F3  3E20               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  5584  02F4  0086               	movwf	6
  5585  02F5  0187               	clrf	7
  5586  02F6  0023               	movlb	3	; select bank3
  5587  02F7  0819               	movf	25,w	;volatile
  5588  02F8  0081               	movwf	1
  5589  02F9  0020               	movlb	0	; select bank0
  5590  02FA  0ABD               	incf	_eusartRxHead,f	;volatile
  5591                           
  5592                           ;mcc_generated_files/eusart.c: 204:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  5593  02FB  3008               	movlw	8
  5594  02FC  023D               	subwf	_eusartRxHead,w
  5595  02FD  1803               	btfsc	3,0
  5596                           
  5597                           ;mcc_generated_files/eusart.c: 205:     {;mcc_generated_files/eusart.c: 206:         eus
      +                          artRxHead = 0;
  5598  02FE  01BD               	clrf	_eusartRxHead	;volatile
  5599                           
  5600                           ;mcc_generated_files/eusart.c: 208:     eusartRxCount++;
  5601  02FF  0ABB               	incf	_eusartRxCount,f	;volatile
  5602  0300  0008               	return
  5603  0301                     __end_of_EUSART_Receive_ISR:	
  5604                           
  5605                           	psect	text45
  5606  0499                     __ptext45:	
  5607 ;; *************** function _ADC_ISR *****************
  5608 ;; Defined at:
  5609 ;;		line 140 in file "mcc_generated_files/adc.c"
  5610 ;; Parameters:    Size  Location     Type
  5611 ;;		None
  5612 ;; Auto vars:     Size  Location     Type
  5613 ;;		None
  5614 ;; Return value:  Size  Location     Type
  5615 ;;                  1    wreg      void 
  5616 ;; Registers used:
  5617 ;;		None
  5618 ;; Tracked objects:
  5619 ;;		On entry : 1F/0
  5620 ;;		On exit  : 1F/0
  5621 ;;		Unchanged: 0/0
  5622 ;; Data sizes:     COMMON   BANK0   BANK1
  5623 ;;      Params:         0       0       0
  5624 ;;      Locals:         0       0       0
  5625 ;;      Temps:          0       0       0
  5626 ;;      Totals:         0       0       0
  5627 ;;Total ram usage:        0 bytes
  5628 ;; Hardware stack levels used:    1
  5629 ;; This function calls:
  5630 ;;		Nothing
  5631 ;; This function is called by:
  5632 ;;		_INTERRUPT_InterruptManager
  5633 ;; This function uses a non-reentrant model
  5634 ;;
  5635                           
  5636                           
  5637                           ;psect for function _ADC_ISR
  5638  0499                     _ADC_ISR:	
  5639                           
  5640                           ;mcc_generated_files/adc.c: 143:     PIR1bits.ADIF = 0;
  5641                           
  5642                           ;incstack = 0
  5643                           ; Regs used in _ADC_ISR: []
  5644  0499  1311               	bcf	17,6	;volatile
  5645  049A  0008               	return
  5646  049B                     __end_of_ADC_ISR:	
  5647                           
  5648                           	psect	text46
  5649  03F9                     __ptext46:	
  5650 ;; *************** function _ADC_GetConversionResult *****************
  5651 ;; Defined at:
  5652 ;;		line 106 in file "mcc_generated_files/adc.c"
  5653 ;; Parameters:    Size  Location     Type
  5654 ;;		None
  5655 ;; Auto vars:     Size  Location     Type
  5656 ;;		None
  5657 ;; Return value:  Size  Location     Type
  5658 ;;                  2    0[COMMON] unsigned short 
  5659 ;; Registers used:
  5660 ;;		wreg
  5661 ;; Tracked objects:
  5662 ;;		On entry : 1F/0
  5663 ;;		On exit  : 1F/1
  5664 ;;		Unchanged: 0/0
  5665 ;; Data sizes:     COMMON   BANK0   BANK1
  5666 ;;      Params:         2       0       0
  5667 ;;      Locals:         0       0       0
  5668 ;;      Temps:          0       0       0
  5669 ;;      Totals:         2       0       0
  5670 ;;Total ram usage:        2 bytes
  5671 ;; Hardware stack levels used:    1
  5672 ;; This function calls:
  5673 ;;		Nothing
  5674 ;; This function is called by:
  5675 ;;		_INTERRUPT_InterruptManager
  5676 ;; This function uses a non-reentrant model
  5677 ;;
  5678                           
  5679                           
  5680                           ;psect for function _ADC_GetConversionResult
  5681  03F9                     _ADC_GetConversionResult:	
  5682                           
  5683                           ;mcc_generated_files/adc.c: 109:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  5684                           
  5685                           ;incstack = 0
  5686                           ; Regs used in _ADC_GetConversionResult: [wreg]
  5687  03F9  0021               	movlb	1	; select bank1
  5688  03FA  081C               	movf	28,w	;volatile
  5689  03FB  00F1               	movwf	?_ADC_GetConversionResult+1
  5690  03FC  01F0               	clrf	?_ADC_GetConversionResult
  5691  03FD  081B               	movf	27,w	;volatile
  5692  03FE  07F0               	addwf	?_ADC_GetConversionResult,f
  5693  03FF  1803               	skipnc
  5694  0400  0AF1               	incf	?_ADC_GetConversionResult+1,f
  5695  0401  0008               	return
  5696  0402                     __end_of_ADC_GetConversionResult:	
  5697  007E                     btemp	set	126	;btemp
  5698  007E                     int$flags	set	126
  5699  007E                     wtemp0	set	126


Data Sizes:
    Strings     222
    Constant    0
    Data        0
    BSS         82
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     23      73
    BANK1            32      0      32

Pointer List with Targets:

    sp__strchr	PTR unsigned char  size(1) Largest target is 16
		 -> NULL(NULL[0]), esp_read_data(BANK1[16]), 

    ESP_Set_application_handler@applicationHandler	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> ESP_default_application_handler(), process_message(), 

    ESP_external_message_handler	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> ESP_default_application_handler(), process_message(), Absolute function(), 

    sp__strstr	PTR unsigned char  size(1) Largest target is 16
		 -> NULL(NULL[0]), esp_read_data(BANK1[16]), 

    _sprintf@mess	PTR unsigned char  size(1) Largest target is 6
		 -> read_analog@mess(BANK0[6]), 

    write@pt	PTR unsigned char  size(1) Largest target is 16
		 -> ESP_write@res(COMMON[1]), ESP_write@aux(COMMON[1]), read_wifi_settings@pass(COMMON[14]), read_wifi_settings@wifi(COMMON[10]), 
		 -> read_analog@mess(BANK0[6]), WIFI_tx_buf(BANK0[16]), 

    _puts@pt	PTR unsigned char  size(2) Largest target is 22
		 -> STR_29(CODE[3]), STR_28(CODE[3]), STR_27(CODE[2]), STR_26(CODE[12]), 
		 -> STR_24(CODE[20]), STR_23(CODE[14]), STR_22(CODE[4]), STR_21(CODE[4]), 
		 -> STR_20(CODE[11]), STR_19(CODE[14]), STR_18(CODE[5]), STR_10(CODE[13]), 
		 -> STR_9(CODE[22]), STR_8(CODE[13]), STR_7(CODE[18]), STR_6(CODE[13]), 
		 -> STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[7]), STR_2(CODE[7]), 
		 -> STR_1(CODE[4]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> _TMR1_Ready(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> _TMR1_Ready(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), Absolute function(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), Absolute function(), 

    IOCAF4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> _IOC_Ready(), IOCAF4_DefaultInterruptHandler(), 

    IOCAF4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> _IOC_Ready(), Absolute function(), IOCAF4_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _read_analog->___lmul
    _write->_EUSART_Write
    __sprintf->___lwdiv
    _process_ioc->__puts
    _logger_initialize->_ADC_SelectChannel
    _logger_initialize->_ESP_Set_application_handler
    _logger_initialize->_IOCAF4_SetInterruptHandler
    _logger_initialize->_TMR1_SetInterruptHandler
    _bt_message_handler->_process_message
    _process_message->__puts
    _toggle_format->__puts
    __puts->_EUSART_Write
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCAF4_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_ADC_GetConversionResult
    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->_read_analog
    _read_analog->__sprintf
    _bt_message_handler->_process_message

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    9242
                                             21 BANK0      2     2      0
                 _EUSART_is_rx_ready
                  _SYSTEM_Initialize
                 _bt_message_handler
                  _logger_initialize
                        _process_ioc
                        _read_analog
 ---------------------------------------------------------------------------------
 (1) _read_analog                                         16    16      0    3446
                                              5 BANK0     16    16      0
                             ___lmul
                           __sprintf
                              _write
 ---------------------------------------------------------------------------------
 (2) _write                                                4     3      1    1024
                                              3 COMMON     4     3      1
                       _EUSART_Write
                 _EUSART_is_tx_ready
 ---------------------------------------------------------------------------------
 (2) __sprintf                                             5     3      2    1873
                                              0 BANK0      5     3      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     615
                                              2 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     244
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _process_ioc                                          0     0      0    1522
                              __puts
 ---------------------------------------------------------------------------------
 (1) _logger_initialize                                    0     0      0     520
                  _ADC_SelectChannel
        _ESP_Set_application_handler
         _IOCAF4_SetInterruptHandler
           _TMR1_SetInterruptHandler
                     _TMR1_StopTimer
 ---------------------------------------------------------------------------------
 (2) _ESP_Set_application_handler                          2     0      2     150
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _bt_message_handler                                   1     1      0    3210
                                              2 BANK0      1     1      0
                        _EUSART_Read
                    _process_message
 ---------------------------------------------------------------------------------
 (2) _process_message                                      3     2      1    3152
                                              9 COMMON     1     0      1
                                              0 BANK0      2     2      0
                _ADC_StartConversion
                    _TMR1_StartTimer
                     _TMR1_StopTimer
                              __puts
                      _toggle_format
 ---------------------------------------------------------------------------------
 (3) _toggle_format                                        0     0      0    1522
                              __puts
 ---------------------------------------------------------------------------------
 (2) __puts                                                6     4      2    1522
                                              3 COMMON     6     4      2
                       _EUSART_Write
                 _EUSART_is_tx_ready
 ---------------------------------------------------------------------------------
 (3) _EUSART_is_tx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      44
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read                                          1     1      0      24
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     544
                     _ADC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR1_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
         _IOCAF4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _IOCAF4_SetInterruptHandler                           2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     196
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0     229
                   Absolute function *
            _ADC_GetConversionResult
                            _ADC_ISR
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR1_ISR                                             0     0      0     229
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                        __TMR1_Ready *
 ---------------------------------------------------------------------------------
 (8) __TMR1_Ready                                          0     0      0       0
              i1_ADC_StartConversion
 ---------------------------------------------------------------------------------
 (9) i1_ADC_StartConversion                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR1_WriteTimer                                      2     0      2     229
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (8) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _PIN_MANAGER_IOC                                      0     0      0       0
                         _IOCAF4_ISR
 ---------------------------------------------------------------------------------
 (8) _IOCAF4_ISR                                           0     0      0       0
                   Absolute function *
     _IOCAF4_DefaultInterruptHandler *
                         __IOC_Ready *
 ---------------------------------------------------------------------------------
 (9) __IOC_Ready                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _IOCAF4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ADC_GetConversionResult                              2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_is_rx_ready
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCAF4_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize
   _bt_message_handler
     _EUSART_Read
     _process_message
       _ADC_StartConversion
       _TMR1_StartTimer
       _TMR1_StopTimer
       __puts
         _EUSART_Write
         _EUSART_is_tx_ready
       _toggle_format
         __puts
           _EUSART_Write
           _EUSART_is_tx_ready
   _logger_initialize
     _ADC_SelectChannel
     _ESP_Set_application_handler
     _IOCAF4_SetInterruptHandler
     _TMR1_SetInterruptHandler
     _TMR1_StopTimer
   _process_ioc
     __puts
       _EUSART_Write
       _EUSART_is_tx_ready
   _read_analog
     ___lmul
     __sprintf
       ___lwdiv
       ___lwmod
     _write
       _EUSART_Write
       _EUSART_is_tx_ready

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADC_GetConversionResult *
   _ADC_ISR *
   _EUSART_Receive_ISR *
   _EUSART_Transmit_ISR *
   _PIN_MANAGER_IOC *
     _IOCAF4_ISR
       Absolute function(Fake) *
       _IOCAF4_DefaultInterruptHandler *
       __IOC_Ready *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     __TMR1_Ready *
       i1_ADC_StartConversion

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      75       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     17      49       6       91.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0      20       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      75       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Sep  5 13:14:19 2018

                ?_EUSART_SetRxInterruptHandler 0072                                              pc 0002  
                                  __CFG_CP$OFF 0000                                             l77 03EC  
                                          l302 026A                                            l360 013E  
                                          l483 016D                                            l628 049B  
                                          l725 01BD                                            l486 0152  
                                          l489 0155                                   __CFG_CPD$OFF 0000  
                                          u605 0233                                            u565 01A9  
                              _timer1ReloadVal 002A                                __end_of_ADC_ISR 049B  
                                 __CFG_BORV$LO 0000                                            wreg 0009  
                                 __CFG_IESO$ON 0000                                           S2410 016E  
                                 ?_EUSART_Read 0070                                   __CFG_LVP$OFF 0000  
                               ?_toggle_format 0070                                           l2024 01C7  
                                         l2142 037F                                           l2260 0146  
                                         l2332 00DC                                           l2262 0147  
                                         l2408 0160                                           l2272 014F  
                                         l2264 0148                                           l2256 0140  
                                         l1800 01B4                                           l2360 0136  
                                         l2258 0141                                           l1724 0260  
                                         l1740 01DE                                           l2268 014B  
                                         l1812 022D                                           l1820 023D  
                                         l2364 013A                                           l2356 0131  
                                         l1742 01ED                                           l2278 0158  
                                         l1752 0484                                           l1816 0239  
                                         l1738 0277                                           l1770 0344  
                                         l1748 01DF                                           l1764 033A  
                                         l1934 02AA                                           l1962 0317  
                                         l1796 01B0                                           l1788 01A1  
                                         l1956 031B                                           l1888 0200  
                                         STR_1 0476                                           STR_2 0420  
                                         STR_3 0419                                           STR_4 047E  
                                         STR_5 0481                                           STR_6 0392  
                                         STR_7 0328                                           STR_8 039F  
                                         STR_9 0294                                           u1005 00F9  
                                         u1047 011B                                           u1057 012A  
                                         _LATA 010C                                           _PLLR 04D6  
                                         _WPUA 020C                                   __CFG_WRT$OFF 0000  
                                __CFG_FCMEN$ON 0000                                           _main 010F  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                  __CFG_BOREN$ON 0000  
                                   __IOC_Ready 042E                                           start 003E  
                   ??_TMR1_SetInterruptHandler 0074                                  __CFG_MCLRE$ON 0000  
                          __end_of__TMR1_Ready 042E                             _ESP_wait_exception 0032  
                                __CFG_PLLEN$ON 0000                                  ?_EUSART_Write 0070  
               __size_of_OSCILLATOR_Initialize 000A                            __size_of_IOCAF4_ISR 000D  
                __end_of_OSCILLATOR_Initialize 03F0                                          ?_main 0070  
                                        STR_11 0402                                          STR_20 03D1  
                                        STR_21 0472                                          STR_13 03DC  
                                        STR_22 046E                                          STR_14 0435  
                                        STR_15 0464                                          STR_23 0368  
                                        STR_16 040A                                          STR_24 0301  
                                        STR_25 048F                                          STR_17 0412  
                                __CFG_WDTE$OFF 0000                                          STR_18 045F  
                                        STR_26 03B9                                          STR_27 048D  
                                        STR_19 035A                                _TMR1_StartTimer 0495  
                                        _T1CON 0018                                __end_of___lwdiv 01B9  
                                        i1l110 000B                                          i1l113 0015  
                                        i1l122 003C                                          i1l115 0025  
                                        i1l117 0031                                          i1l308 02E9  
                              __end_of___lwmod 0242                   ?_ESP_Set_application_handler 0072  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        _TMR1H 0017                                          _TMR1L 0016  
                                        _TRISA 008C                         ?i1_ADC_StartConversion 0070  
                                        _TXREG 019A                     __end_of_bt_message_handler 046E  
                                        _TXSTA 019E               __size_of_ADC_GetConversionResult 0009  
                                 ?_read_analog 0070                            ___lmul@multiplicand 0076  
                             __end_of_TMR1_ISR 035A                        __end_of_PIN_MANAGER_IOC 047E  
                                        __puts 01DE                                 _WDT_Initialize 0487  
                                        _write 0315                        __end_of_TMR1_Initialize 02D6  
                                        pclath 000A                                          status 0003  
                                        wtemp0 007E                     __size_of_logger_initialize 001D  
                              _TMR1_WriteTimer 0384                                __initialization 003F  
                                 __end_of_main 0140                                 ??_EUSART_Write 0072  
                                    ??_ADC_ISR 0070                    ?_INTERRUPT_InterruptManager 0070  
               ??_EUSART_SetRxInterruptHandler 0074                                         ??_main 0065  
                      _IOCAF4_InterruptHandler 0067                         __end_of_WDT_Initialize 048A  
                ??_ESP_Set_application_handler 0074                                ??_toggle_format 0079  
                                       ?__puts 0073                                         _ADCON0 009D  
                                       _ADCON1 009E                                         _ADRESH 009C  
                                       _ADRESL 009B                                         _APFCON 011D  
                                       _ANSELA 018C                     __end_of_EUSART_is_rx_ready 048D  
                                       _BORCON 0116                                         _T1GCON 0019  
                                       ?_write 0073                        TMR1_WriteTimer@timerVal 0070  
                                       i1l2072 02F1                                         i1l1930 038D  
                                       i1l1852 03B6                                         i1l1848 03AC  
                   __end_of_EUSART_is_tx_ready 0493                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                  __TMR1_Ready 0427                                         _WDTCON 0097  
                                  ?__IOC_Ready 0070                                 __CFG_PWRTE$OFF 0000  
         __end_of_TMR1_DefaultInterruptHandler 049D          __size_of_TMR1_DefaultInterruptHandler 0001  
                                _esp_read_data 00B0                   _TMR1_DefaultInterruptHandler 049C  
                             __end_of__sprintf 00BC                                         ___lmul 01B9  
                      __end_of_TMR1_StartTimer 0497                                 __CFG_STVREN$ON 0000  
                                    ??___lwdiv 0076                                      ??___lwmod 0076  
                          _EUSART_Transmit_ISR 02D6                                ?_WDT_Initialize 0070  
     TMR1_SetInterruptHandler@InterruptHandler 0072     IOCAF4_SetInterruptHandler@InterruptHandler 0072  
                             ?_PIN_MANAGER_IOC 0070                                         write@i 0075  
                      __end_of_TMR1_WriteTimer 0392                                   ??_IOCAF4_ISR 0070  
                         ?_EUSART_Transmit_ISR 0070                                   ?_process_ioc 0070  
                             ?_TMR1_Initialize 0070                           __size_of_EUSART_Read 0016  
                            _SYSTEM_Initialize 0441                        __end_of__initialization 004D  
                           read_analog@adc_val 0063                             ?_SYSTEM_Initialize 0070  
         __size_of_ESP_Set_application_handler 0001           __end_of_EUSART_SetTxInterruptHandler 0459  
        __size_of_EUSART_SetTxInterruptHandler 0006                   _EUSART_SetTxInterruptHandler 0453  
                 __size_of_ADC_StartConversion 0003                                 __pcstackCOMMON 0070  
                          ??_SYSTEM_Initialize 0074                                      ?_TMR1_ISR 0070  
                ?_TMR1_DefaultInterruptHandler 0070                                  __end_of__puts 0200  
       __end_of_IOCAF4_DefaultInterruptHandler 049E        __size_of_IOCAF4_DefaultInterruptHandler 0001  
               _IOCAF4_DefaultInterruptHandler 049D                                  __end_of_write 0328  
                           __end_of_IOCAF4_ISR 03B9                        _ADC_GetConversionResult 03F9  
                               _OPTION_REGbits 0095                            __size_of__IOC_Ready 0007  
                     __size_of_process_message 002E                                        ??__puts 0075  
                         __size_of_read_analog 0053                      __end_of_SYSTEM_Initialize 0447  
                        ??_EUSART_Transmit_ISR 0070                                        ??_write 0074  
                                   __pbssBANK0 0020                                     __pbssBANK1 00A0  
                         __end_of_EUSART_Write 027A                    __size_of_EUSART_Receive_ISR 0015  
                                   __pmaintext 010F                  ?_EUSART_SetTxInterruptHandler 0072  
             _EUSART_TxDefaultInterruptHandler 0030                                        ?___lmul 0072  
                             ?_TMR1_StartTimer 0070                                     ??_TMR1_ISR 0072  
                                   __pintentry 0004                                        _ADC_ISR 0499  
                                      _BAUDCON 019F                                 ___lmul@product 0050  
                      ??i1_ADC_StartConversion 0070                        __size_of_ADC_Initialize 0009  
                      __size_of_TMR1_StopTimer 0002                                  _eusartRxCount 003B  
                                      _OSCTUNE 0098                                      ?__sprintf 0050  
                             ?_TMR1_WriteTimer 0070                             _bt_message_handler 0469  
                                    _ADC_count 0038                                      _ADC_value 002C  
                          ?_bt_message_handler 0070                                      _ADC_state 003F  
                              __size_of___lmul 0025                                        ___lwdiv 0194  
                                      ___lwmod 0222                      ??_ADC_GetConversionResult 0072  
                                      __ptext1 00BC                                        __ptext2 0315  
                                      __ptext3 0050                                        __ptext4 0222  
                                      __ptext5 0194                                        __ptext6 01B9  
                                      __ptext7 0376                                        __ptext8 0242  
                                      __ptext9 049B                 ??_TMR1_DefaultInterruptHandler 0070  
                                    _T1CONbits 0018                          _OSCILLATOR_Initialize 03E6  
            __size_of_TMR1_SetInterruptHandler 0006                       ??_PIN_MANAGER_Initialize 0074  
                    ?_TMR1_SetInterruptHandler 0072                                      _IOCAFbits 0393  
                                    _IOCANbits 0392                                      _IOCAPbits 0391  
                         ??_bt_message_handler 007A                     __size_of_SYSTEM_Initialize 0006  
                                      clrloop0 043C                                     ??__sprintf 0079  
                         end_of_initialization 004D                                   ?__TMR1_Ready 0070  
                            ??_process_message 0050                           __size_of_process_ioc 000E  
                                 ??__IOC_Ready 0070                              _EUSART_Initialize 0200  
                                    _IOC_value 0036                                      _IOC_state 003A  
                           ?_EUSART_Initialize 0070                                      _RCSTAbits 019D  
                           _EUSART_is_rx_ready 048A                             _EUSART_is_tx_ready 0491  
                                 __sprintf@aux 0052                                   __sprintf@val 0050  
                          ??_EUSART_Initialize 0074                                        write@pt 0076  
                             ??_WDT_Initialize 0072                 ??_EUSART_SetTxInterruptHandler 0074  
                                    _PORTAbits 000C                            ?_EUSART_is_rx_ready 0070  
                          ?_EUSART_is_tx_ready 0070                               __CFG_FOSC$INTOSC 0000  
                           __end_of__IOC_Ready 0435                          __size_of_EUSART_Write 001B  
                          _ADC_StartConversion 0484                   ??_IOCAF4_SetInterruptHandler 0074  
                        __end_of_toggle_format 034A                      __end_of_EUSART_Initialize 0222  
                         ??_EUSART_is_rx_ready 0072                           ??_EUSART_is_tx_ready 0072  
                         ?_ADC_StartConversion 0070                                 __end_of___lmul 01DE  
ESP_Set_application_handler@applicationHandler 0072                                   _EUSART_Write 025F  
                            __size_of_TMR1_ISR 0010                                 _ADC_Initialize 03F0  
          __size_of_IOCAF4_SetInterruptHandler 0006                                 _TMR1_StopTimer 0493  
                       ?_OSCILLATOR_Initialize 0070            __end_of_ESP_Set_application_handler 049C  
                  _ESP_Set_application_handler 049B                            start_initialization 003F  
              __size_of_PIN_MANAGER_Initialize 001A                                  ??_EUSART_Read 0072  
 EUSART_SetRxInterruptHandler@interruptHandler 0072   EUSART_SetTxInterruptHandler@interruptHandler 0072  
                     __size_of_PIN_MANAGER_IOC 0004                          ??_ADC_StartConversion 0072  
                     __size_of_TMR1_Initialize 0016                                       ??___lmul 007A  
                       __end_of_ADC_Initialize 03F9                         __end_of_TMR1_StopTimer 0495  
                                     ?_ADC_ISR 0070                 __size_ofi1_ADC_StartConversion 0002  
                __end_ofi1_ADC_StartConversion 0499                    __end_of_EUSART_Transmit_ISR 02EC  
                                ??_read_analog 0055                                    __pbssCOMMON 007A  
                                    ___latbits 0000                _ESP_default_application_handler 0000  
                                __pcstackBANK0 0050                                _WIFI_tx_buf_ind 0035  
                   __end_of_EUSART_Receive_ISR 0301                     __size_of_EUSART_Initialize 0022  
                            __size_of__sprintf 006C               _EUSART_RxDefaultInterruptHandler 002E  
                          __end_of_EUSART_Read 02C0                                read_analog@aux1 005F  
                                    __pnvBANK0 0067                                read_analog@mess 0059  
                         __size_of__TMR1_Ready 0007                               ___lwdiv@dividend 0074  
                       _PIN_MANAGER_Initialize 027A                           EUSART_Read@readValue 0072  
                            _ADC_SelectChannel 03C5               __end_of_TMR1_SetInterruptHandler 044D  
                                     ?___lwdiv 0072                                       ?___lwmod 0072  
                              ?_ADC_Initialize 0070                                   _eusartRxHead 003D  
                              ?_TMR1_StopTimer 0070                             ?_ADC_SelectChannel 0070  
                                 _eusartTxHead 007B                                   _eusartRxTail 003C  
                                 _eusartTxTail 003E                   ??_INTERRUPT_InterruptManager 0072  
                                    __pswtext1 016E                        _eusartTxBufferRemaining 007A  
                     __size_of_TMR1_StartTimer 0002                            ??_ADC_SelectChannel 0072  
                              _process_message 0140             __end_of_IOCAF4_SetInterruptHandler 0453  
                   _IOCAF4_SetInterruptHandler 044D                               ___lwdiv@quotient 0076  
                               __size_of__puts 0022                                 __size_of_write 0013  
                          __end_of_read_analog 010F                                 _eusartRxBuffer 0020  
                               _eusartTxBuffer 00A0                                       _LATAbits 010C  
                                    clear_ram0 043B                                    __puts@index 0078  
                                     _PIE1bits 0091                      __end_of_ADC_SelectChannel 03D1  
                     __size_of_TMR1_WriteTimer 000E            __size_of_INTERRUPT_InterruptManager 003A  
                                  write@lenght 0073                                       _PIR1bits 0011  
                                     _TMR1_ISR 034A                              ??_PIN_MANAGER_IOC 0070  
                            ??_TMR1_Initialize 0074                               __size_of_ADC_ISR 0002  
                                   _ADCON0bits 009D                       ADC_SelectChannel@channel 0073  
                  __size_of_bt_message_handler 0005                                    _EUSART_Read 02AA  
                            ___lmul@multiplier 0072                                  ??_process_ioc 0079  
                                  _esp_channel 0033                       ?_ADC_GetConversionResult 0070  
                      ??_OSCILLATOR_Initialize 0072                               __size_of___lwdiv 0025  
                      __end_of_process_message 016E                               __size_of___lwmod 0020  
                     _TMR1_SetInterruptHandler 0447                          _TMR1_InterruptHandler 0028  
                                  _read_analog 00BC                            _esp_read_data_index 0034  
                              ___lwdiv@divisor 0072                                ___lwdiv@counter 0078  
                                     __ptext10 03C5                                       __ptext11 0469  
                                     __ptext20 02AA                                       __ptext12 0140  
                                     __ptext21 0441                                       __ptext13 033A  
                                     __ptext30 0459                                       __ptext22 0487  
                                     __ptext14 01DE                                       __ptext31 03F0  
                                     __ptext23 02C0                                       __ptext15 0491  
                                     __ptext40 03AC                                       __ptext32 048A  
                                     __ptext24 0447                                       __ptext16 025F  
                                     __ptext41 049D                                       __ptext25 027A  
                                     __ptext17 0493                                       __ptext42 042E  
                                     __ptext34 034A                                       __ptext26 044D  
                                     __ptext18 0495                                       __ptext43 02D6  
                                     __ptext35 049C                                       __ptext27 03E6  
                                     __ptext19 0484                                       __ptext44 02EC  
                                     __ptext36 0427                                       __ptext28 0200  
                                     __ptext45 0499                                       __ptext37 0497  
                                     __ptext29 0453                                       __ptext46 03F9  
                                     __ptext38 0384                                       __ptext39 047A  
                                     __puts@pt 0073                         process_message@message 0079  
                                     __sprintf 0050                              ??_TMR1_StartTimer 0072  
                                   _IOCAF4_ISR 03AC                                 _message_format 0039  
                  __size_of_EUSART_is_rx_ready 0003                                  __size_of_main 0031  
                  __size_of_EUSART_is_tx_ready 0002                     __size_of_ADC_SelectChannel 000C  
                          __end_of_process_ioc 0384                                       int$flags 007E  
                       __size_of_toggle_format 0010             __end_of_INTERRUPT_InterruptManager 003E  
                   _INTERRUPT_InterruptManager 0004                              ??_TMR1_WriteTimer 0072  
                                   _INTCONbits 000B                                 __pstringtext10 03DC  
                               __pstringtext11 0402                                 __pstringtext20 0472  
                               __pstringtext12 040A                                 __pstringtext21 0476  
                               __pstringtext13 0412                                 __pstringtext22 047E  
                               __pstringtext14 0419                                 __pstringtext23 0481  
                               __pstringtext15 0420                                 __pstringtext24 048D  
                               __pstringtext16 0435                                 __pstringtext25 048F  
                               __pstringtext17 045F                                 __pstringtext26 0000  
                               __pstringtext18 0464                                 __pstringtext19 046E  
                      __size_of_WDT_Initialize 0003                                       intlevel1 0000  
                  __end_of_ADC_StartConversion 0487                               ___lwmod@dividend 0074  
                      ?_PIN_MANAGER_Initialize 0070                __end_of_ADC_GetConversionResult 0402  
                            __CFG_CLKOUTEN$OFF 0000                               ??_ADC_Initialize 0072  
         __end_of_EUSART_SetRxInterruptHandler 045F          __size_of_EUSART_SetRxInterruptHandler 0006  
                 _EUSART_SetRxInterruptHandler 0459                              _logger_initialize 0242  
                             ??_TMR1_StopTimer 0072                             ?_logger_initialize 0070  
                           _EUSART_Receive_ISR 02EC                               ?_process_message 0079  
                                __sprintf@mess 0054                                  __pstringtext1 0294  
                                __pstringtext2 0301                                  __pstringtext3 0328  
                                __pstringtext4 035A                                  __pstringtext5 0368  
                                __pstringtext6 0392                                  __pstringtext7 039F  
                                __pstringtext8 03B9                                  __pstringtext9 03D1  
                          ??_logger_initialize 0074                            ?_EUSART_Receive_ISR 0070  
                              ___lwmod@divisor 0072                                ___lwmod@counter 0076  
                        i1_ADC_StartConversion 0497                    ?_IOCAF4_SetInterruptHandler 0072  
                                _toggle_format 033A                                    _WIFI_tx_buf 0040  
                                  ?_IOCAF4_ISR 0070                             EUSART_Write@txData 0072  
                 __size_of_EUSART_Transmit_ISR 0016                                     _TMR1_state 0037  
               __end_of_PIN_MANAGER_Initialize 0294                                    _process_ioc 0376  
                    bt_message_handler@message 0052                                  ??__TMR1_Ready 0070  
             ??_IOCAF4_DefaultInterruptHandler 0070                ?_IOCAF4_DefaultInterruptHandler 0070  
                              _PIN_MANAGER_IOC 047A                      __end_of_logger_initialize 025F  
                         ??_EUSART_Receive_ISR 0070                                _TMR1_Initialize 02C0  
