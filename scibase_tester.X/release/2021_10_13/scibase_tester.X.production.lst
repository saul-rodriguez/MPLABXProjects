

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Oct 13 11:13:20 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16LF18456
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext17,global,class=STRCODE,delta=2,noexec
    22                           	psect	stringtext18,global,class=STRCODE,delta=2,noexec
    23                           	psect	stringtext19,global,class=STRCODE,delta=2,noexec
    24                           	psect	cinit,global,class=CODE,merge=1,delta=2
    25                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    26                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    27                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    28                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    29                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,noexec
    30                           	psect	clrtext,global,class=CODE,delta=2
    31                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    32                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    33                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    34                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    35                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    36                           	psect	text1,local,class=CODE,merge=1,delta=2
    37                           	psect	text2,local,class=CODE,merge=1,delta=2
    38                           	psect	text3,local,class=CODE,merge=1,delta=2
    39                           	psect	text4,local,class=CODE,merge=1,delta=2
    40                           	psect	text5,local,class=CODE,merge=1,delta=2
    41                           	psect	text6,local,class=CODE,merge=1,delta=2
    42                           	psect	text7,local,class=CODE,merge=1,delta=2
    43                           	psect	text8,local,class=CODE,merge=1,delta=2
    44                           	psect	text9,local,class=CODE,merge=1,delta=2
    45                           	psect	text10,local,class=CODE,merge=1,delta=2
    46                           	psect	text11,local,class=CODE,merge=1,delta=2
    47                           	psect	text12,local,class=CODE,merge=1,delta=2
    48                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    49                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text16,local,class=CODE,merge=1,delta=2,group=3
    52                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    53                           	psect	text18,local,class=CODE,merge=1,delta=2,group=3
    54                           	psect	text19,local,class=CODE,merge=1,delta=2,group=3
    55                           	psect	text20,local,class=CODE,merge=1,delta=2,group=3
    56                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    57                           	psect	text22,local,class=CODE,merge=1,delta=2,group=3
    58                           	psect	text23,local,class=CODE,merge=1,delta=2,group=3
    59                           	psect	text24,local,class=CODE,merge=1,delta=2,group=3
    60                           	psect	text25,local,class=CODE,merge=1,delta=2,group=3
    61                           	psect	text26,local,class=CODE,merge=1,delta=2,group=3
    62                           	psect	text27,local,class=CODE,merge=1,delta=2,group=3
    63                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    64                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    66                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    67                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    68                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    69                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    70                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    71                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    72                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    73                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    74                           	psect	text39,local,class=CODE,merge=1,delta=2,group=3
    75                           	psect	text40,local,class=CODE,merge=1,delta=2,group=3
    76                           	psect	text41,local,class=CODE,merge=1,delta=2,group=3
    77                           	psect	text42,local,class=CODE,merge=1,delta=2,group=2
    78                           	psect	text43,local,class=CODE,merge=1,delta=2
    79                           	psect	text44,local,class=CODE,merge=1,delta=2
    80                           	psect	text45,local,class=CODE,merge=1,delta=2
    81                           	psect	text46,local,class=CODE,merge=1,delta=2,group=2
    82                           	psect	text47,local,class=CODE,merge=1,delta=2
    83                           	psect	text48,local,class=CODE,merge=1,delta=2
    84                           	psect	text49,local,class=CODE,merge=1,delta=2
    85                           	psect	text50,local,class=CODE,merge=1,delta=2
    86                           	psect	text51,local,class=CODE,merge=1,delta=2
    87                           	psect	text52,local,class=CODE,merge=1,delta=2
    88                           	psect	text53,local,class=CODE,merge=1,delta=2
    89                           	psect	text54,local,class=CODE,merge=1,delta=2
    90                           	psect	text55,local,class=CODE,merge=1,delta=2
    91                           	psect	text56,local,class=CODE,merge=1,delta=2
    92                           	psect	text57,local,class=CODE,merge=1,delta=2
    93                           	psect	text58,local,class=CODE,merge=1,delta=2
    94                           	psect	text59,local,class=CODE,merge=1,delta=2
    95                           	psect	text60,local,class=CODE,merge=1,delta=2
    96                           	psect	intentry,global,class=CODE,delta=2
    97                           	psect	text62,local,class=CODE,merge=1,delta=2
    98                           	psect	text63,local,class=CODE,merge=1,delta=2
    99                           	psect	text64,local,class=CODE,merge=1,delta=2
   100                           	psect	text65,local,class=CODE,merge=1,delta=2
   101                           	psect	text66,local,class=CODE,merge=1,delta=2
   102                           	psect	text67,local,class=CODE,merge=1,delta=2
   103                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   104                           	dabs	1,0x7E,2
   105  0000                     
   106                           ; Version 2.30
   107                           ; Generated 15/09/2020 GMT
   108                           ; 
   109                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   110                           ; All rights reserved.
   111                           ; 
   112                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   113                           ; 
   114                           ; Redistribution and use in source and binary forms, with or without modification, are
   115                           ; permitted provided that the following conditions are met:
   116                           ; 
   117                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   118                           ;        conditions and the following disclaimer.
   119                           ; 
   120                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   121                           ;        of conditions and the following disclaimer in the documentation and/or other
   122                           ;        materials provided with the distribution. Publication is not required when
   123                           ;        this file is used in an embedded application.
   124                           ; 
   125                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   126                           ;        software without specific prior written permission.
   127                           ; 
   128                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   129                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   130                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   131                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   132                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   133                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   134                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   135                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   136                           ; 
   137                           ; 
   138                           ; Code-generator required, PIC16LF18456 Definitions
   139                           ; 
   140                           ; SFR Addresses
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  0010                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0016                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001C                     	;# 
   165  008C                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  010F                     	;# 
   199  0110                     	;# 
   200  0111                     	;# 
   201  0112                     	;# 
   202  0113                     	;# 
   203  0114                     	;# 
   204  0115                     	;# 
   205  0116                     	;# 
   206  0117                     	;# 
   207  0118                     	;# 
   208  0119                     	;# 
   209  0119                     	;# 
   210  0119                     	;# 
   211  011A                     	;# 
   212  011A                     	;# 
   213  011A                     	;# 
   214  011B                     	;# 
   215  011B                     	;# 
   216  011B                     	;# 
   217  011B                     	;# 
   218  011B                     	;# 
   219  011C                     	;# 
   220  011C                     	;# 
   221  011C                     	;# 
   222  011D                     	;# 
   223  011D                     	;# 
   224  011D                     	;# 
   225  011E                     	;# 
   226  011E                     	;# 
   227  011E                     	;# 
   228  011F                     	;# 
   229  011F                     	;# 
   230  011F                     	;# 
   231  011F                     	;# 
   232  011F                     	;# 
   233  018C                     	;# 
   234  018D                     	;# 
   235  018E                     	;# 
   236  018F                     	;# 
   237  0190                     	;# 
   238  0191                     	;# 
   239  0192                     	;# 
   240  0196                     	;# 
   241  0197                     	;# 
   242  0198                     	;# 
   243  0199                     	;# 
   244  019A                     	;# 
   245  019B                     	;# 
   246  019C                     	;# 
   247  020C                     	;# 
   248  020D                     	;# 
   249  020E                     	;# 
   250  020E                     	;# 
   251  020F                     	;# 
   252  020F                     	;# 
   253  0210                     	;# 
   254  0210                     	;# 
   255  0211                     	;# 
   256  0211                     	;# 
   257  0212                     	;# 
   258  0213                     	;# 
   259  0214                     	;# 
   260  0214                     	;# 
   261  0215                     	;# 
   262  0215                     	;# 
   263  0216                     	;# 
   264  0216                     	;# 
   265  0217                     	;# 
   266  0217                     	;# 
   267  0218                     	;# 
   268  0219                     	;# 
   269  021A                     	;# 
   270  021A                     	;# 
   271  021B                     	;# 
   272  021B                     	;# 
   273  021C                     	;# 
   274  021C                     	;# 
   275  021D                     	;# 
   276  021D                     	;# 
   277  021E                     	;# 
   278  021F                     	;# 
   279  028C                     	;# 
   280  028C                     	;# 
   281  028D                     	;# 
   282  028D                     	;# 
   283  028E                     	;# 
   284  028F                     	;# 
   285  0290                     	;# 
   286  0291                     	;# 
   287  0292                     	;# 
   288  0292                     	;# 
   289  0293                     	;# 
   290  0293                     	;# 
   291  0294                     	;# 
   292  0295                     	;# 
   293  0296                     	;# 
   294  0297                     	;# 
   295  0298                     	;# 
   296  0298                     	;# 
   297  0299                     	;# 
   298  0299                     	;# 
   299  029A                     	;# 
   300  029B                     	;# 
   301  029C                     	;# 
   302  029D                     	;# 
   303  029F                     	;# 
   304  030C                     	;# 
   305  030C                     	;# 
   306  030D                     	;# 
   307  030E                     	;# 
   308  030F                     	;# 
   309  0310                     	;# 
   310  0310                     	;# 
   311  0311                     	;# 
   312  0312                     	;# 
   313  0313                     	;# 
   314  0314                     	;# 
   315  0314                     	;# 
   316  0315                     	;# 
   317  0316                     	;# 
   318  0317                     	;# 
   319  0318                     	;# 
   320  0318                     	;# 
   321  0319                     	;# 
   322  031A                     	;# 
   323  031B                     	;# 
   324  031C                     	;# 
   325  031C                     	;# 
   326  031D                     	;# 
   327  031E                     	;# 
   328  031F                     	;# 
   329  038C                     	;# 
   330  038C                     	;# 
   331  038D                     	;# 
   332  038E                     	;# 
   333  0390                     	;# 
   334  0390                     	;# 
   335  0391                     	;# 
   336  0392                     	;# 
   337  048C                     	;# 
   338  048C                     	;# 
   339  048D                     	;# 
   340  048E                     	;# 
   341  048F                     	;# 
   342  048F                     	;# 
   343  0490                     	;# 
   344  0491                     	;# 
   345  0492                     	;# 
   346  0492                     	;# 
   347  0493                     	;# 
   348  0494                     	;# 
   349  0495                     	;# 
   350  0495                     	;# 
   351  0496                     	;# 
   352  0497                     	;# 
   353  0498                     	;# 
   354  0499                     	;# 
   355  049A                     	;# 
   356  049B                     	;# 
   357  049C                     	;# 
   358  049D                     	;# 
   359  050C                     	;# 
   360  050C                     	;# 
   361  050D                     	;# 
   362  050E                     	;# 
   363  050F                     	;# 
   364  050F                     	;# 
   365  0510                     	;# 
   366  0511                     	;# 
   367  0512                     	;# 
   368  0512                     	;# 
   369  0513                     	;# 
   370  0514                     	;# 
   371  0515                     	;# 
   372  0515                     	;# 
   373  0516                     	;# 
   374  0517                     	;# 
   375  0518                     	;# 
   376  0519                     	;# 
   377  051A                     	;# 
   378  051B                     	;# 
   379  051C                     	;# 
   380  051D                     	;# 
   381  058C                     	;# 
   382  058C                     	;# 
   383  058D                     	;# 
   384  058E                     	;# 
   385  058F                     	;# 
   386  058F                     	;# 
   387  0590                     	;# 
   388  0591                     	;# 
   389  0592                     	;# 
   390  0593                     	;# 
   391  059C                     	;# 
   392  059C                     	;# 
   393  059D                     	;# 
   394  059D                     	;# 
   395  059E                     	;# 
   396  059F                     	;# 
   397  060C                     	;# 
   398  060C                     	;# 
   399  060D                     	;# 
   400  060D                     	;# 
   401  060E                     	;# 
   402  060F                     	;# 
   403  0610                     	;# 
   404  0611                     	;# 
   405  0612                     	;# 
   406  0613                     	;# 
   407  0614                     	;# 
   408  0616                     	;# 
   409  0616                     	;# 
   410  0617                     	;# 
   411  0617                     	;# 
   412  0618                     	;# 
   413  0619                     	;# 
   414  061A                     	;# 
   415  061B                     	;# 
   416  061C                     	;# 
   417  061D                     	;# 
   418  061E                     	;# 
   419  068C                     	;# 
   420  068D                     	;# 
   421  068E                     	;# 
   422  068F                     	;# 
   423  0690                     	;# 
   424  0691                     	;# 
   425  0692                     	;# 
   426  0693                     	;# 
   427  0694                     	;# 
   428  070C                     	;# 
   429  070D                     	;# 
   430  070E                     	;# 
   431  070F                     	;# 
   432  0710                     	;# 
   433  0711                     	;# 
   434  0712                     	;# 
   435  0713                     	;# 
   436  0714                     	;# 
   437  0716                     	;# 
   438  0717                     	;# 
   439  0718                     	;# 
   440  0719                     	;# 
   441  071A                     	;# 
   442  071B                     	;# 
   443  071C                     	;# 
   444  071D                     	;# 
   445  071E                     	;# 
   446  0796                     	;# 
   447  0797                     	;# 
   448  0798                     	;# 
   449  0799                     	;# 
   450  079A                     	;# 
   451  079B                     	;# 
   452  079C                     	;# 
   453  079D                     	;# 
   454  080C                     	;# 
   455  080D                     	;# 
   456  080E                     	;# 
   457  080F                     	;# 
   458  0810                     	;# 
   459  0811                     	;# 
   460  0813                     	;# 
   461  0814                     	;# 
   462  081A                     	;# 
   463  081A                     	;# 
   464  081B                     	;# 
   465  081C                     	;# 
   466  081C                     	;# 
   467  081D                     	;# 
   468  081E                     	;# 
   469  081F                     	;# 
   470  088C                     	;# 
   471  088D                     	;# 
   472  088E                     	;# 
   473  088F                     	;# 
   474  0890                     	;# 
   475  0891                     	;# 
   476  0892                     	;# 
   477  0893                     	;# 
   478  0895                     	;# 
   479  0896                     	;# 
   480  0897                     	;# 
   481  0898                     	;# 
   482  0899                     	;# 
   483  089A                     	;# 
   484  089B                     	;# 
   485  090C                     	;# 
   486  090E                     	;# 
   487  090F                     	;# 
   488  091F                     	;# 
   489  098F                     	;# 
   490  098F                     	;# 
   491  0990                     	;# 
   492  0991                     	;# 
   493  0992                     	;# 
   494  0993                     	;# 
   495  0994                     	;# 
   496  0995                     	;# 
   497  0996                     	;# 
   498  0997                     	;# 
   499  0A19                     	;# 
   500  0A19                     	;# 
   501  0A1A                     	;# 
   502  0A1A                     	;# 
   503  0A1B                     	;# 
   504  0A1B                     	;# 
   505  0A1B                     	;# 
   506  0A1C                     	;# 
   507  0A1C                     	;# 
   508  0A1D                     	;# 
   509  0A1D                     	;# 
   510  0A1E                     	;# 
   511  0A1E                     	;# 
   512  0A1F                     	;# 
   513  0A1F                     	;# 
   514  0A1F                     	;# 
   515  1E0F                     	;# 
   516  1E10                     	;# 
   517  1E11                     	;# 
   518  1E12                     	;# 
   519  1E13                     	;# 
   520  1E14                     	;# 
   521  1E15                     	;# 
   522  1E16                     	;# 
   523  1E17                     	;# 
   524  1E18                     	;# 
   525  1E19                     	;# 
   526  1E1A                     	;# 
   527  1E1B                     	;# 
   528  1E1C                     	;# 
   529  1E1D                     	;# 
   530  1E1E                     	;# 
   531  1E1F                     	;# 
   532  1E20                     	;# 
   533  1E21                     	;# 
   534  1E22                     	;# 
   535  1E23                     	;# 
   536  1E24                     	;# 
   537  1E25                     	;# 
   538  1E26                     	;# 
   539  1E27                     	;# 
   540  1E28                     	;# 
   541  1E29                     	;# 
   542  1E2A                     	;# 
   543  1E2B                     	;# 
   544  1E2C                     	;# 
   545  1E2D                     	;# 
   546  1E2E                     	;# 
   547  1E2F                     	;# 
   548  1E30                     	;# 
   549  1E31                     	;# 
   550  1E32                     	;# 
   551  1E33                     	;# 
   552  1E34                     	;# 
   553  1E35                     	;# 
   554  1E36                     	;# 
   555  1E37                     	;# 
   556  1E8F                     	;# 
   557  1E90                     	;# 
   558  1E91                     	;# 
   559  1E92                     	;# 
   560  1E93                     	;# 
   561  1E94                     	;# 
   562  1E95                     	;# 
   563  1E96                     	;# 
   564  1E97                     	;# 
   565  1E9C                     	;# 
   566  1E9D                     	;# 
   567  1E9E                     	;# 
   568  1EA1                     	;# 
   569  1EA2                     	;# 
   570  1EA3                     	;# 
   571  1EA4                     	;# 
   572  1EA5                     	;# 
   573  1EA9                     	;# 
   574  1EAA                     	;# 
   575  1EAB                     	;# 
   576  1EAC                     	;# 
   577  1EB1                     	;# 
   578  1EB2                     	;# 
   579  1EB3                     	;# 
   580  1EB8                     	;# 
   581  1EB9                     	;# 
   582  1EBA                     	;# 
   583  1EBB                     	;# 
   584  1EBC                     	;# 
   585  1EBD                     	;# 
   586  1EBE                     	;# 
   587  1EC3                     	;# 
   588  1EC5                     	;# 
   589  1EC6                     	;# 
   590  1EC7                     	;# 
   591  1EC8                     	;# 
   592  1EC9                     	;# 
   593  1ECA                     	;# 
   594  1ECB                     	;# 
   595  1ECC                     	;# 
   596  1ECD                     	;# 
   597  1ECE                     	;# 
   598  1F10                     	;# 
   599  1F11                     	;# 
   600  1F12                     	;# 
   601  1F13                     	;# 
   602  1F14                     	;# 
   603  1F15                     	;# 
   604  1F16                     	;# 
   605  1F17                     	;# 
   606  1F18                     	;# 
   607  1F19                     	;# 
   608  1F1A                     	;# 
   609  1F1B                     	;# 
   610  1F1C                     	;# 
   611  1F1D                     	;# 
   612  1F1E                     	;# 
   613  1F1F                     	;# 
   614  1F20                     	;# 
   615  1F21                     	;# 
   616  1F22                     	;# 
   617  1F23                     	;# 
   618  1F24                     	;# 
   619  1F25                     	;# 
   620  1F26                     	;# 
   621  1F27                     	;# 
   622  1F38                     	;# 
   623  1F39                     	;# 
   624  1F3A                     	;# 
   625  1F3B                     	;# 
   626  1F3C                     	;# 
   627  1F3D                     	;# 
   628  1F3E                     	;# 
   629  1F3F                     	;# 
   630  1F43                     	;# 
   631  1F44                     	;# 
   632  1F45                     	;# 
   633  1F46                     	;# 
   634  1F47                     	;# 
   635  1F48                     	;# 
   636  1F49                     	;# 
   637  1F4A                     	;# 
   638  1F4E                     	;# 
   639  1F4F                     	;# 
   640  1F50                     	;# 
   641  1F51                     	;# 
   642  1F52                     	;# 
   643  1F53                     	;# 
   644  1F54                     	;# 
   645  1F55                     	;# 
   646  1F65                     	;# 
   647  1F66                     	;# 
   648  1F67                     	;# 
   649  1F68                     	;# 
   650  1F69                     	;# 
   651  1F6A                     	;# 
   652  1F6B                     	;# 
   653  1FE4                     	;# 
   654  1FE5                     	;# 
   655  1FE6                     	;# 
   656  1FE7                     	;# 
   657  1FE8                     	;# 
   658  1FE8                     	;# 
   659  1FE9                     	;# 
   660  1FEA                     	;# 
   661  1FEB                     	;# 
   662  1FED                     	;# 
   663  1FEE                     	;# 
   664  1FEF                     	;# 
   665  0000                     	;# 
   666  0001                     	;# 
   667  0002                     	;# 
   668  0003                     	;# 
   669  0004                     	;# 
   670  0005                     	;# 
   671  0006                     	;# 
   672  0007                     	;# 
   673  0008                     	;# 
   674  0009                     	;# 
   675  000A                     	;# 
   676  000B                     	;# 
   677  000C                     	;# 
   678  000D                     	;# 
   679  000E                     	;# 
   680  0010                     	;# 
   681  0012                     	;# 
   682  0013                     	;# 
   683  0014                     	;# 
   684  0016                     	;# 
   685  0018                     	;# 
   686  0019                     	;# 
   687  001A                     	;# 
   688  001C                     	;# 
   689  008C                     	;# 
   690  008C                     	;# 
   691  008D                     	;# 
   692  008E                     	;# 
   693  008E                     	;# 
   694  008F                     	;# 
   695  0090                     	;# 
   696  0090                     	;# 
   697  0091                     	;# 
   698  0092                     	;# 
   699  0092                     	;# 
   700  0093                     	;# 
   701  0094                     	;# 
   702  0094                     	;# 
   703  0095                     	;# 
   704  0096                     	;# 
   705  0096                     	;# 
   706  0097                     	;# 
   707  0098                     	;# 
   708  0099                     	;# 
   709  009A                     	;# 
   710  009B                     	;# 
   711  009B                     	;# 
   712  009C                     	;# 
   713  009D                     	;# 
   714  009D                     	;# 
   715  009E                     	;# 
   716  009F                     	;# 
   717  010C                     	;# 
   718  010C                     	;# 
   719  010D                     	;# 
   720  010E                     	;# 
   721  010F                     	;# 
   722  010F                     	;# 
   723  0110                     	;# 
   724  0111                     	;# 
   725  0112                     	;# 
   726  0113                     	;# 
   727  0114                     	;# 
   728  0115                     	;# 
   729  0116                     	;# 
   730  0117                     	;# 
   731  0118                     	;# 
   732  0119                     	;# 
   733  0119                     	;# 
   734  0119                     	;# 
   735  011A                     	;# 
   736  011A                     	;# 
   737  011A                     	;# 
   738  011B                     	;# 
   739  011B                     	;# 
   740  011B                     	;# 
   741  011B                     	;# 
   742  011B                     	;# 
   743  011C                     	;# 
   744  011C                     	;# 
   745  011C                     	;# 
   746  011D                     	;# 
   747  011D                     	;# 
   748  011D                     	;# 
   749  011E                     	;# 
   750  011E                     	;# 
   751  011E                     	;# 
   752  011F                     	;# 
   753  011F                     	;# 
   754  011F                     	;# 
   755  011F                     	;# 
   756  011F                     	;# 
   757  018C                     	;# 
   758  018D                     	;# 
   759  018E                     	;# 
   760  018F                     	;# 
   761  0190                     	;# 
   762  0191                     	;# 
   763  0192                     	;# 
   764  0196                     	;# 
   765  0197                     	;# 
   766  0198                     	;# 
   767  0199                     	;# 
   768  019A                     	;# 
   769  019B                     	;# 
   770  019C                     	;# 
   771  020C                     	;# 
   772  020D                     	;# 
   773  020E                     	;# 
   774  020E                     	;# 
   775  020F                     	;# 
   776  020F                     	;# 
   777  0210                     	;# 
   778  0210                     	;# 
   779  0211                     	;# 
   780  0211                     	;# 
   781  0212                     	;# 
   782  0213                     	;# 
   783  0214                     	;# 
   784  0214                     	;# 
   785  0215                     	;# 
   786  0215                     	;# 
   787  0216                     	;# 
   788  0216                     	;# 
   789  0217                     	;# 
   790  0217                     	;# 
   791  0218                     	;# 
   792  0219                     	;# 
   793  021A                     	;# 
   794  021A                     	;# 
   795  021B                     	;# 
   796  021B                     	;# 
   797  021C                     	;# 
   798  021C                     	;# 
   799  021D                     	;# 
   800  021D                     	;# 
   801  021E                     	;# 
   802  021F                     	;# 
   803  028C                     	;# 
   804  028C                     	;# 
   805  028D                     	;# 
   806  028D                     	;# 
   807  028E                     	;# 
   808  028F                     	;# 
   809  0290                     	;# 
   810  0291                     	;# 
   811  0292                     	;# 
   812  0292                     	;# 
   813  0293                     	;# 
   814  0293                     	;# 
   815  0294                     	;# 
   816  0295                     	;# 
   817  0296                     	;# 
   818  0297                     	;# 
   819  0298                     	;# 
   820  0298                     	;# 
   821  0299                     	;# 
   822  0299                     	;# 
   823  029A                     	;# 
   824  029B                     	;# 
   825  029C                     	;# 
   826  029D                     	;# 
   827  029F                     	;# 
   828  030C                     	;# 
   829  030C                     	;# 
   830  030D                     	;# 
   831  030E                     	;# 
   832  030F                     	;# 
   833  0310                     	;# 
   834  0310                     	;# 
   835  0311                     	;# 
   836  0312                     	;# 
   837  0313                     	;# 
   838  0314                     	;# 
   839  0314                     	;# 
   840  0315                     	;# 
   841  0316                     	;# 
   842  0317                     	;# 
   843  0318                     	;# 
   844  0318                     	;# 
   845  0319                     	;# 
   846  031A                     	;# 
   847  031B                     	;# 
   848  031C                     	;# 
   849  031C                     	;# 
   850  031D                     	;# 
   851  031E                     	;# 
   852  031F                     	;# 
   853  038C                     	;# 
   854  038C                     	;# 
   855  038D                     	;# 
   856  038E                     	;# 
   857  0390                     	;# 
   858  0390                     	;# 
   859  0391                     	;# 
   860  0392                     	;# 
   861  048C                     	;# 
   862  048C                     	;# 
   863  048D                     	;# 
   864  048E                     	;# 
   865  048F                     	;# 
   866  048F                     	;# 
   867  0490                     	;# 
   868  0491                     	;# 
   869  0492                     	;# 
   870  0492                     	;# 
   871  0493                     	;# 
   872  0494                     	;# 
   873  0495                     	;# 
   874  0495                     	;# 
   875  0496                     	;# 
   876  0497                     	;# 
   877  0498                     	;# 
   878  0499                     	;# 
   879  049A                     	;# 
   880  049B                     	;# 
   881  049C                     	;# 
   882  049D                     	;# 
   883  050C                     	;# 
   884  050C                     	;# 
   885  050D                     	;# 
   886  050E                     	;# 
   887  050F                     	;# 
   888  050F                     	;# 
   889  0510                     	;# 
   890  0511                     	;# 
   891  0512                     	;# 
   892  0512                     	;# 
   893  0513                     	;# 
   894  0514                     	;# 
   895  0515                     	;# 
   896  0515                     	;# 
   897  0516                     	;# 
   898  0517                     	;# 
   899  0518                     	;# 
   900  0519                     	;# 
   901  051A                     	;# 
   902  051B                     	;# 
   903  051C                     	;# 
   904  051D                     	;# 
   905  058C                     	;# 
   906  058C                     	;# 
   907  058D                     	;# 
   908  058E                     	;# 
   909  058F                     	;# 
   910  058F                     	;# 
   911  0590                     	;# 
   912  0591                     	;# 
   913  0592                     	;# 
   914  0593                     	;# 
   915  059C                     	;# 
   916  059C                     	;# 
   917  059D                     	;# 
   918  059D                     	;# 
   919  059E                     	;# 
   920  059F                     	;# 
   921  060C                     	;# 
   922  060C                     	;# 
   923  060D                     	;# 
   924  060D                     	;# 
   925  060E                     	;# 
   926  060F                     	;# 
   927  0610                     	;# 
   928  0611                     	;# 
   929  0612                     	;# 
   930  0613                     	;# 
   931  0614                     	;# 
   932  0616                     	;# 
   933  0616                     	;# 
   934  0617                     	;# 
   935  0617                     	;# 
   936  0618                     	;# 
   937  0619                     	;# 
   938  061A                     	;# 
   939  061B                     	;# 
   940  061C                     	;# 
   941  061D                     	;# 
   942  061E                     	;# 
   943  068C                     	;# 
   944  068D                     	;# 
   945  068E                     	;# 
   946  068F                     	;# 
   947  0690                     	;# 
   948  0691                     	;# 
   949  0692                     	;# 
   950  0693                     	;# 
   951  0694                     	;# 
   952  070C                     	;# 
   953  070D                     	;# 
   954  070E                     	;# 
   955  070F                     	;# 
   956  0710                     	;# 
   957  0711                     	;# 
   958  0712                     	;# 
   959  0713                     	;# 
   960  0714                     	;# 
   961  0716                     	;# 
   962  0717                     	;# 
   963  0718                     	;# 
   964  0719                     	;# 
   965  071A                     	;# 
   966  071B                     	;# 
   967  071C                     	;# 
   968  071D                     	;# 
   969  071E                     	;# 
   970  0796                     	;# 
   971  0797                     	;# 
   972  0798                     	;# 
   973  0799                     	;# 
   974  079A                     	;# 
   975  079B                     	;# 
   976  079C                     	;# 
   977  079D                     	;# 
   978  080C                     	;# 
   979  080D                     	;# 
   980  080E                     	;# 
   981  080F                     	;# 
   982  0810                     	;# 
   983  0811                     	;# 
   984  0813                     	;# 
   985  0814                     	;# 
   986  081A                     	;# 
   987  081A                     	;# 
   988  081B                     	;# 
   989  081C                     	;# 
   990  081C                     	;# 
   991  081D                     	;# 
   992  081E                     	;# 
   993  081F                     	;# 
   994  088C                     	;# 
   995  088D                     	;# 
   996  088E                     	;# 
   997  088F                     	;# 
   998  0890                     	;# 
   999  0891                     	;# 
  1000  0892                     	;# 
  1001  0893                     	;# 
  1002  0895                     	;# 
  1003  0896                     	;# 
  1004  0897                     	;# 
  1005  0898                     	;# 
  1006  0899                     	;# 
  1007  089A                     	;# 
  1008  089B                     	;# 
  1009  090C                     	;# 
  1010  090E                     	;# 
  1011  090F                     	;# 
  1012  091F                     	;# 
  1013  098F                     	;# 
  1014  098F                     	;# 
  1015  0990                     	;# 
  1016  0991                     	;# 
  1017  0992                     	;# 
  1018  0993                     	;# 
  1019  0994                     	;# 
  1020  0995                     	;# 
  1021  0996                     	;# 
  1022  0997                     	;# 
  1023  0A19                     	;# 
  1024  0A19                     	;# 
  1025  0A1A                     	;# 
  1026  0A1A                     	;# 
  1027  0A1B                     	;# 
  1028  0A1B                     	;# 
  1029  0A1B                     	;# 
  1030  0A1C                     	;# 
  1031  0A1C                     	;# 
  1032  0A1D                     	;# 
  1033  0A1D                     	;# 
  1034  0A1E                     	;# 
  1035  0A1E                     	;# 
  1036  0A1F                     	;# 
  1037  0A1F                     	;# 
  1038  0A1F                     	;# 
  1039  1E0F                     	;# 
  1040  1E10                     	;# 
  1041  1E11                     	;# 
  1042  1E12                     	;# 
  1043  1E13                     	;# 
  1044  1E14                     	;# 
  1045  1E15                     	;# 
  1046  1E16                     	;# 
  1047  1E17                     	;# 
  1048  1E18                     	;# 
  1049  1E19                     	;# 
  1050  1E1A                     	;# 
  1051  1E1B                     	;# 
  1052  1E1C                     	;# 
  1053  1E1D                     	;# 
  1054  1E1E                     	;# 
  1055  1E1F                     	;# 
  1056  1E20                     	;# 
  1057  1E21                     	;# 
  1058  1E22                     	;# 
  1059  1E23                     	;# 
  1060  1E24                     	;# 
  1061  1E25                     	;# 
  1062  1E26                     	;# 
  1063  1E27                     	;# 
  1064  1E28                     	;# 
  1065  1E29                     	;# 
  1066  1E2A                     	;# 
  1067  1E2B                     	;# 
  1068  1E2C                     	;# 
  1069  1E2D                     	;# 
  1070  1E2E                     	;# 
  1071  1E2F                     	;# 
  1072  1E30                     	;# 
  1073  1E31                     	;# 
  1074  1E32                     	;# 
  1075  1E33                     	;# 
  1076  1E34                     	;# 
  1077  1E35                     	;# 
  1078  1E36                     	;# 
  1079  1E37                     	;# 
  1080  1E8F                     	;# 
  1081  1E90                     	;# 
  1082  1E91                     	;# 
  1083  1E92                     	;# 
  1084  1E93                     	;# 
  1085  1E94                     	;# 
  1086  1E95                     	;# 
  1087  1E96                     	;# 
  1088  1E97                     	;# 
  1089  1E9C                     	;# 
  1090  1E9D                     	;# 
  1091  1E9E                     	;# 
  1092  1EA1                     	;# 
  1093  1EA2                     	;# 
  1094  1EA3                     	;# 
  1095  1EA4                     	;# 
  1096  1EA5                     	;# 
  1097  1EA9                     	;# 
  1098  1EAA                     	;# 
  1099  1EAB                     	;# 
  1100  1EAC                     	;# 
  1101  1EB1                     	;# 
  1102  1EB2                     	;# 
  1103  1EB3                     	;# 
  1104  1EB8                     	;# 
  1105  1EB9                     	;# 
  1106  1EBA                     	;# 
  1107  1EBB                     	;# 
  1108  1EBC                     	;# 
  1109  1EBD                     	;# 
  1110  1EBE                     	;# 
  1111  1EC3                     	;# 
  1112  1EC5                     	;# 
  1113  1EC6                     	;# 
  1114  1EC7                     	;# 
  1115  1EC8                     	;# 
  1116  1EC9                     	;# 
  1117  1ECA                     	;# 
  1118  1ECB                     	;# 
  1119  1ECC                     	;# 
  1120  1ECD                     	;# 
  1121  1ECE                     	;# 
  1122  1F10                     	;# 
  1123  1F11                     	;# 
  1124  1F12                     	;# 
  1125  1F13                     	;# 
  1126  1F14                     	;# 
  1127  1F15                     	;# 
  1128  1F16                     	;# 
  1129  1F17                     	;# 
  1130  1F18                     	;# 
  1131  1F19                     	;# 
  1132  1F1A                     	;# 
  1133  1F1B                     	;# 
  1134  1F1C                     	;# 
  1135  1F1D                     	;# 
  1136  1F1E                     	;# 
  1137  1F1F                     	;# 
  1138  1F20                     	;# 
  1139  1F21                     	;# 
  1140  1F22                     	;# 
  1141  1F23                     	;# 
  1142  1F24                     	;# 
  1143  1F25                     	;# 
  1144  1F26                     	;# 
  1145  1F27                     	;# 
  1146  1F38                     	;# 
  1147  1F39                     	;# 
  1148  1F3A                     	;# 
  1149  1F3B                     	;# 
  1150  1F3C                     	;# 
  1151  1F3D                     	;# 
  1152  1F3E                     	;# 
  1153  1F3F                     	;# 
  1154  1F43                     	;# 
  1155  1F44                     	;# 
  1156  1F45                     	;# 
  1157  1F46                     	;# 
  1158  1F47                     	;# 
  1159  1F48                     	;# 
  1160  1F49                     	;# 
  1161  1F4A                     	;# 
  1162  1F4E                     	;# 
  1163  1F4F                     	;# 
  1164  1F50                     	;# 
  1165  1F51                     	;# 
  1166  1F52                     	;# 
  1167  1F53                     	;# 
  1168  1F54                     	;# 
  1169  1F55                     	;# 
  1170  1F65                     	;# 
  1171  1F66                     	;# 
  1172  1F67                     	;# 
  1173  1F68                     	;# 
  1174  1F69                     	;# 
  1175  1F6A                     	;# 
  1176  1F6B                     	;# 
  1177  1FE4                     	;# 
  1178  1FE5                     	;# 
  1179  1FE6                     	;# 
  1180  1FE7                     	;# 
  1181  1FE8                     	;# 
  1182  1FE8                     	;# 
  1183  1FE9                     	;# 
  1184  1FEA                     	;# 
  1185  1FEB                     	;# 
  1186  1FED                     	;# 
  1187  1FEE                     	;# 
  1188  1FEF                     	;# 
  1189  0000                     	;# 
  1190  0001                     	;# 
  1191  0002                     	;# 
  1192  0003                     	;# 
  1193  0004                     	;# 
  1194  0005                     	;# 
  1195  0006                     	;# 
  1196  0007                     	;# 
  1197  0008                     	;# 
  1198  0009                     	;# 
  1199  000A                     	;# 
  1200  000B                     	;# 
  1201  000C                     	;# 
  1202  000D                     	;# 
  1203  000E                     	;# 
  1204  0010                     	;# 
  1205  0012                     	;# 
  1206  0013                     	;# 
  1207  0014                     	;# 
  1208  0016                     	;# 
  1209  0018                     	;# 
  1210  0019                     	;# 
  1211  001A                     	;# 
  1212  001C                     	;# 
  1213  008C                     	;# 
  1214  008C                     	;# 
  1215  008D                     	;# 
  1216  008E                     	;# 
  1217  008E                     	;# 
  1218  008F                     	;# 
  1219  0090                     	;# 
  1220  0090                     	;# 
  1221  0091                     	;# 
  1222  0092                     	;# 
  1223  0092                     	;# 
  1224  0093                     	;# 
  1225  0094                     	;# 
  1226  0094                     	;# 
  1227  0095                     	;# 
  1228  0096                     	;# 
  1229  0096                     	;# 
  1230  0097                     	;# 
  1231  0098                     	;# 
  1232  0099                     	;# 
  1233  009A                     	;# 
  1234  009B                     	;# 
  1235  009B                     	;# 
  1236  009C                     	;# 
  1237  009D                     	;# 
  1238  009D                     	;# 
  1239  009E                     	;# 
  1240  009F                     	;# 
  1241  010C                     	;# 
  1242  010C                     	;# 
  1243  010D                     	;# 
  1244  010E                     	;# 
  1245  010F                     	;# 
  1246  010F                     	;# 
  1247  0110                     	;# 
  1248  0111                     	;# 
  1249  0112                     	;# 
  1250  0113                     	;# 
  1251  0114                     	;# 
  1252  0115                     	;# 
  1253  0116                     	;# 
  1254  0117                     	;# 
  1255  0118                     	;# 
  1256  0119                     	;# 
  1257  0119                     	;# 
  1258  0119                     	;# 
  1259  011A                     	;# 
  1260  011A                     	;# 
  1261  011A                     	;# 
  1262  011B                     	;# 
  1263  011B                     	;# 
  1264  011B                     	;# 
  1265  011B                     	;# 
  1266  011B                     	;# 
  1267  011C                     	;# 
  1268  011C                     	;# 
  1269  011C                     	;# 
  1270  011D                     	;# 
  1271  011D                     	;# 
  1272  011D                     	;# 
  1273  011E                     	;# 
  1274  011E                     	;# 
  1275  011E                     	;# 
  1276  011F                     	;# 
  1277  011F                     	;# 
  1278  011F                     	;# 
  1279  011F                     	;# 
  1280  011F                     	;# 
  1281  018C                     	;# 
  1282  018D                     	;# 
  1283  018E                     	;# 
  1284  018F                     	;# 
  1285  0190                     	;# 
  1286  0191                     	;# 
  1287  0192                     	;# 
  1288  0196                     	;# 
  1289  0197                     	;# 
  1290  0198                     	;# 
  1291  0199                     	;# 
  1292  019A                     	;# 
  1293  019B                     	;# 
  1294  019C                     	;# 
  1295  020C                     	;# 
  1296  020D                     	;# 
  1297  020E                     	;# 
  1298  020E                     	;# 
  1299  020F                     	;# 
  1300  020F                     	;# 
  1301  0210                     	;# 
  1302  0210                     	;# 
  1303  0211                     	;# 
  1304  0211                     	;# 
  1305  0212                     	;# 
  1306  0213                     	;# 
  1307  0214                     	;# 
  1308  0214                     	;# 
  1309  0215                     	;# 
  1310  0215                     	;# 
  1311  0216                     	;# 
  1312  0216                     	;# 
  1313  0217                     	;# 
  1314  0217                     	;# 
  1315  0218                     	;# 
  1316  0219                     	;# 
  1317  021A                     	;# 
  1318  021A                     	;# 
  1319  021B                     	;# 
  1320  021B                     	;# 
  1321  021C                     	;# 
  1322  021C                     	;# 
  1323  021D                     	;# 
  1324  021D                     	;# 
  1325  021E                     	;# 
  1326  021F                     	;# 
  1327  028C                     	;# 
  1328  028C                     	;# 
  1329  028D                     	;# 
  1330  028D                     	;# 
  1331  028E                     	;# 
  1332  028F                     	;# 
  1333  0290                     	;# 
  1334  0291                     	;# 
  1335  0292                     	;# 
  1336  0292                     	;# 
  1337  0293                     	;# 
  1338  0293                     	;# 
  1339  0294                     	;# 
  1340  0295                     	;# 
  1341  0296                     	;# 
  1342  0297                     	;# 
  1343  0298                     	;# 
  1344  0298                     	;# 
  1345  0299                     	;# 
  1346  0299                     	;# 
  1347  029A                     	;# 
  1348  029B                     	;# 
  1349  029C                     	;# 
  1350  029D                     	;# 
  1351  029F                     	;# 
  1352  030C                     	;# 
  1353  030C                     	;# 
  1354  030D                     	;# 
  1355  030E                     	;# 
  1356  030F                     	;# 
  1357  0310                     	;# 
  1358  0310                     	;# 
  1359  0311                     	;# 
  1360  0312                     	;# 
  1361  0313                     	;# 
  1362  0314                     	;# 
  1363  0314                     	;# 
  1364  0315                     	;# 
  1365  0316                     	;# 
  1366  0317                     	;# 
  1367  0318                     	;# 
  1368  0318                     	;# 
  1369  0319                     	;# 
  1370  031A                     	;# 
  1371  031B                     	;# 
  1372  031C                     	;# 
  1373  031C                     	;# 
  1374  031D                     	;# 
  1375  031E                     	;# 
  1376  031F                     	;# 
  1377  038C                     	;# 
  1378  038C                     	;# 
  1379  038D                     	;# 
  1380  038E                     	;# 
  1381  0390                     	;# 
  1382  0390                     	;# 
  1383  0391                     	;# 
  1384  0392                     	;# 
  1385  048C                     	;# 
  1386  048C                     	;# 
  1387  048D                     	;# 
  1388  048E                     	;# 
  1389  048F                     	;# 
  1390  048F                     	;# 
  1391  0490                     	;# 
  1392  0491                     	;# 
  1393  0492                     	;# 
  1394  0492                     	;# 
  1395  0493                     	;# 
  1396  0494                     	;# 
  1397  0495                     	;# 
  1398  0495                     	;# 
  1399  0496                     	;# 
  1400  0497                     	;# 
  1401  0498                     	;# 
  1402  0499                     	;# 
  1403  049A                     	;# 
  1404  049B                     	;# 
  1405  049C                     	;# 
  1406  049D                     	;# 
  1407  050C                     	;# 
  1408  050C                     	;# 
  1409  050D                     	;# 
  1410  050E                     	;# 
  1411  050F                     	;# 
  1412  050F                     	;# 
  1413  0510                     	;# 
  1414  0511                     	;# 
  1415  0512                     	;# 
  1416  0512                     	;# 
  1417  0513                     	;# 
  1418  0514                     	;# 
  1419  0515                     	;# 
  1420  0515                     	;# 
  1421  0516                     	;# 
  1422  0517                     	;# 
  1423  0518                     	;# 
  1424  0519                     	;# 
  1425  051A                     	;# 
  1426  051B                     	;# 
  1427  051C                     	;# 
  1428  051D                     	;# 
  1429  058C                     	;# 
  1430  058C                     	;# 
  1431  058D                     	;# 
  1432  058E                     	;# 
  1433  058F                     	;# 
  1434  058F                     	;# 
  1435  0590                     	;# 
  1436  0591                     	;# 
  1437  0592                     	;# 
  1438  0593                     	;# 
  1439  059C                     	;# 
  1440  059C                     	;# 
  1441  059D                     	;# 
  1442  059D                     	;# 
  1443  059E                     	;# 
  1444  059F                     	;# 
  1445  060C                     	;# 
  1446  060C                     	;# 
  1447  060D                     	;# 
  1448  060D                     	;# 
  1449  060E                     	;# 
  1450  060F                     	;# 
  1451  0610                     	;# 
  1452  0611                     	;# 
  1453  0612                     	;# 
  1454  0613                     	;# 
  1455  0614                     	;# 
  1456  0616                     	;# 
  1457  0616                     	;# 
  1458  0617                     	;# 
  1459  0617                     	;# 
  1460  0618                     	;# 
  1461  0619                     	;# 
  1462  061A                     	;# 
  1463  061B                     	;# 
  1464  061C                     	;# 
  1465  061D                     	;# 
  1466  061E                     	;# 
  1467  068C                     	;# 
  1468  068D                     	;# 
  1469  068E                     	;# 
  1470  068F                     	;# 
  1471  0690                     	;# 
  1472  0691                     	;# 
  1473  0692                     	;# 
  1474  0693                     	;# 
  1475  0694                     	;# 
  1476  070C                     	;# 
  1477  070D                     	;# 
  1478  070E                     	;# 
  1479  070F                     	;# 
  1480  0710                     	;# 
  1481  0711                     	;# 
  1482  0712                     	;# 
  1483  0713                     	;# 
  1484  0714                     	;# 
  1485  0716                     	;# 
  1486  0717                     	;# 
  1487  0718                     	;# 
  1488  0719                     	;# 
  1489  071A                     	;# 
  1490  071B                     	;# 
  1491  071C                     	;# 
  1492  071D                     	;# 
  1493  071E                     	;# 
  1494  0796                     	;# 
  1495  0797                     	;# 
  1496  0798                     	;# 
  1497  0799                     	;# 
  1498  079A                     	;# 
  1499  079B                     	;# 
  1500  079C                     	;# 
  1501  079D                     	;# 
  1502  080C                     	;# 
  1503  080D                     	;# 
  1504  080E                     	;# 
  1505  080F                     	;# 
  1506  0810                     	;# 
  1507  0811                     	;# 
  1508  0813                     	;# 
  1509  0814                     	;# 
  1510  081A                     	;# 
  1511  081A                     	;# 
  1512  081B                     	;# 
  1513  081C                     	;# 
  1514  081C                     	;# 
  1515  081D                     	;# 
  1516  081E                     	;# 
  1517  081F                     	;# 
  1518  088C                     	;# 
  1519  088D                     	;# 
  1520  088E                     	;# 
  1521  088F                     	;# 
  1522  0890                     	;# 
  1523  0891                     	;# 
  1524  0892                     	;# 
  1525  0893                     	;# 
  1526  0895                     	;# 
  1527  0896                     	;# 
  1528  0897                     	;# 
  1529  0898                     	;# 
  1530  0899                     	;# 
  1531  089A                     	;# 
  1532  089B                     	;# 
  1533  090C                     	;# 
  1534  090E                     	;# 
  1535  090F                     	;# 
  1536  091F                     	;# 
  1537  098F                     	;# 
  1538  098F                     	;# 
  1539  0990                     	;# 
  1540  0991                     	;# 
  1541  0992                     	;# 
  1542  0993                     	;# 
  1543  0994                     	;# 
  1544  0995                     	;# 
  1545  0996                     	;# 
  1546  0997                     	;# 
  1547  0A19                     	;# 
  1548  0A19                     	;# 
  1549  0A1A                     	;# 
  1550  0A1A                     	;# 
  1551  0A1B                     	;# 
  1552  0A1B                     	;# 
  1553  0A1B                     	;# 
  1554  0A1C                     	;# 
  1555  0A1C                     	;# 
  1556  0A1D                     	;# 
  1557  0A1D                     	;# 
  1558  0A1E                     	;# 
  1559  0A1E                     	;# 
  1560  0A1F                     	;# 
  1561  0A1F                     	;# 
  1562  0A1F                     	;# 
  1563  1E0F                     	;# 
  1564  1E10                     	;# 
  1565  1E11                     	;# 
  1566  1E12                     	;# 
  1567  1E13                     	;# 
  1568  1E14                     	;# 
  1569  1E15                     	;# 
  1570  1E16                     	;# 
  1571  1E17                     	;# 
  1572  1E18                     	;# 
  1573  1E19                     	;# 
  1574  1E1A                     	;# 
  1575  1E1B                     	;# 
  1576  1E1C                     	;# 
  1577  1E1D                     	;# 
  1578  1E1E                     	;# 
  1579  1E1F                     	;# 
  1580  1E20                     	;# 
  1581  1E21                     	;# 
  1582  1E22                     	;# 
  1583  1E23                     	;# 
  1584  1E24                     	;# 
  1585  1E25                     	;# 
  1586  1E26                     	;# 
  1587  1E27                     	;# 
  1588  1E28                     	;# 
  1589  1E29                     	;# 
  1590  1E2A                     	;# 
  1591  1E2B                     	;# 
  1592  1E2C                     	;# 
  1593  1E2D                     	;# 
  1594  1E2E                     	;# 
  1595  1E2F                     	;# 
  1596  1E30                     	;# 
  1597  1E31                     	;# 
  1598  1E32                     	;# 
  1599  1E33                     	;# 
  1600  1E34                     	;# 
  1601  1E35                     	;# 
  1602  1E36                     	;# 
  1603  1E37                     	;# 
  1604  1E8F                     	;# 
  1605  1E90                     	;# 
  1606  1E91                     	;# 
  1607  1E92                     	;# 
  1608  1E93                     	;# 
  1609  1E94                     	;# 
  1610  1E95                     	;# 
  1611  1E96                     	;# 
  1612  1E97                     	;# 
  1613  1E9C                     	;# 
  1614  1E9D                     	;# 
  1615  1E9E                     	;# 
  1616  1EA1                     	;# 
  1617  1EA2                     	;# 
  1618  1EA3                     	;# 
  1619  1EA4                     	;# 
  1620  1EA5                     	;# 
  1621  1EA9                     	;# 
  1622  1EAA                     	;# 
  1623  1EAB                     	;# 
  1624  1EAC                     	;# 
  1625  1EB1                     	;# 
  1626  1EB2                     	;# 
  1627  1EB3                     	;# 
  1628  1EB8                     	;# 
  1629  1EB9                     	;# 
  1630  1EBA                     	;# 
  1631  1EBB                     	;# 
  1632  1EBC                     	;# 
  1633  1EBD                     	;# 
  1634  1EBE                     	;# 
  1635  1EC3                     	;# 
  1636  1EC5                     	;# 
  1637  1EC6                     	;# 
  1638  1EC7                     	;# 
  1639  1EC8                     	;# 
  1640  1EC9                     	;# 
  1641  1ECA                     	;# 
  1642  1ECB                     	;# 
  1643  1ECC                     	;# 
  1644  1ECD                     	;# 
  1645  1ECE                     	;# 
  1646  1F10                     	;# 
  1647  1F11                     	;# 
  1648  1F12                     	;# 
  1649  1F13                     	;# 
  1650  1F14                     	;# 
  1651  1F15                     	;# 
  1652  1F16                     	;# 
  1653  1F17                     	;# 
  1654  1F18                     	;# 
  1655  1F19                     	;# 
  1656  1F1A                     	;# 
  1657  1F1B                     	;# 
  1658  1F1C                     	;# 
  1659  1F1D                     	;# 
  1660  1F1E                     	;# 
  1661  1F1F                     	;# 
  1662  1F20                     	;# 
  1663  1F21                     	;# 
  1664  1F22                     	;# 
  1665  1F23                     	;# 
  1666  1F24                     	;# 
  1667  1F25                     	;# 
  1668  1F26                     	;# 
  1669  1F27                     	;# 
  1670  1F38                     	;# 
  1671  1F39                     	;# 
  1672  1F3A                     	;# 
  1673  1F3B                     	;# 
  1674  1F3C                     	;# 
  1675  1F3D                     	;# 
  1676  1F3E                     	;# 
  1677  1F3F                     	;# 
  1678  1F43                     	;# 
  1679  1F44                     	;# 
  1680  1F45                     	;# 
  1681  1F46                     	;# 
  1682  1F47                     	;# 
  1683  1F48                     	;# 
  1684  1F49                     	;# 
  1685  1F4A                     	;# 
  1686  1F4E                     	;# 
  1687  1F4F                     	;# 
  1688  1F50                     	;# 
  1689  1F51                     	;# 
  1690  1F52                     	;# 
  1691  1F53                     	;# 
  1692  1F54                     	;# 
  1693  1F55                     	;# 
  1694  1F65                     	;# 
  1695  1F66                     	;# 
  1696  1F67                     	;# 
  1697  1F68                     	;# 
  1698  1F69                     	;# 
  1699  1F6A                     	;# 
  1700  1F6B                     	;# 
  1701  1FE4                     	;# 
  1702  1FE5                     	;# 
  1703  1FE6                     	;# 
  1704  1FE7                     	;# 
  1705  1FE8                     	;# 
  1706  1FE8                     	;# 
  1707  1FE9                     	;# 
  1708  1FEA                     	;# 
  1709  1FEB                     	;# 
  1710  1FED                     	;# 
  1711  1FEE                     	;# 
  1712  1FEF                     	;# 
  1713  0000                     	;# 
  1714  0001                     	;# 
  1715  0002                     	;# 
  1716  0003                     	;# 
  1717  0004                     	;# 
  1718  0005                     	;# 
  1719  0006                     	;# 
  1720  0007                     	;# 
  1721  0008                     	;# 
  1722  0009                     	;# 
  1723  000A                     	;# 
  1724  000B                     	;# 
  1725  000C                     	;# 
  1726  000D                     	;# 
  1727  000E                     	;# 
  1728  0010                     	;# 
  1729  0012                     	;# 
  1730  0013                     	;# 
  1731  0014                     	;# 
  1732  0016                     	;# 
  1733  0018                     	;# 
  1734  0019                     	;# 
  1735  001A                     	;# 
  1736  001C                     	;# 
  1737  008C                     	;# 
  1738  008C                     	;# 
  1739  008D                     	;# 
  1740  008E                     	;# 
  1741  008E                     	;# 
  1742  008F                     	;# 
  1743  0090                     	;# 
  1744  0090                     	;# 
  1745  0091                     	;# 
  1746  0092                     	;# 
  1747  0092                     	;# 
  1748  0093                     	;# 
  1749  0094                     	;# 
  1750  0094                     	;# 
  1751  0095                     	;# 
  1752  0096                     	;# 
  1753  0096                     	;# 
  1754  0097                     	;# 
  1755  0098                     	;# 
  1756  0099                     	;# 
  1757  009A                     	;# 
  1758  009B                     	;# 
  1759  009B                     	;# 
  1760  009C                     	;# 
  1761  009D                     	;# 
  1762  009D                     	;# 
  1763  009E                     	;# 
  1764  009F                     	;# 
  1765  010C                     	;# 
  1766  010C                     	;# 
  1767  010D                     	;# 
  1768  010E                     	;# 
  1769  010F                     	;# 
  1770  010F                     	;# 
  1771  0110                     	;# 
  1772  0111                     	;# 
  1773  0112                     	;# 
  1774  0113                     	;# 
  1775  0114                     	;# 
  1776  0115                     	;# 
  1777  0116                     	;# 
  1778  0117                     	;# 
  1779  0118                     	;# 
  1780  0119                     	;# 
  1781  0119                     	;# 
  1782  0119                     	;# 
  1783  011A                     	;# 
  1784  011A                     	;# 
  1785  011A                     	;# 
  1786  011B                     	;# 
  1787  011B                     	;# 
  1788  011B                     	;# 
  1789  011B                     	;# 
  1790  011B                     	;# 
  1791  011C                     	;# 
  1792  011C                     	;# 
  1793  011C                     	;# 
  1794  011D                     	;# 
  1795  011D                     	;# 
  1796  011D                     	;# 
  1797  011E                     	;# 
  1798  011E                     	;# 
  1799  011E                     	;# 
  1800  011F                     	;# 
  1801  011F                     	;# 
  1802  011F                     	;# 
  1803  011F                     	;# 
  1804  011F                     	;# 
  1805  018C                     	;# 
  1806  018D                     	;# 
  1807  018E                     	;# 
  1808  018F                     	;# 
  1809  0190                     	;# 
  1810  0191                     	;# 
  1811  0192                     	;# 
  1812  0196                     	;# 
  1813  0197                     	;# 
  1814  0198                     	;# 
  1815  0199                     	;# 
  1816  019A                     	;# 
  1817  019B                     	;# 
  1818  019C                     	;# 
  1819  020C                     	;# 
  1820  020D                     	;# 
  1821  020E                     	;# 
  1822  020E                     	;# 
  1823  020F                     	;# 
  1824  020F                     	;# 
  1825  0210                     	;# 
  1826  0210                     	;# 
  1827  0211                     	;# 
  1828  0211                     	;# 
  1829  0212                     	;# 
  1830  0213                     	;# 
  1831  0214                     	;# 
  1832  0214                     	;# 
  1833  0215                     	;# 
  1834  0215                     	;# 
  1835  0216                     	;# 
  1836  0216                     	;# 
  1837  0217                     	;# 
  1838  0217                     	;# 
  1839  0218                     	;# 
  1840  0219                     	;# 
  1841  021A                     	;# 
  1842  021A                     	;# 
  1843  021B                     	;# 
  1844  021B                     	;# 
  1845  021C                     	;# 
  1846  021C                     	;# 
  1847  021D                     	;# 
  1848  021D                     	;# 
  1849  021E                     	;# 
  1850  021F                     	;# 
  1851  028C                     	;# 
  1852  028C                     	;# 
  1853  028D                     	;# 
  1854  028D                     	;# 
  1855  028E                     	;# 
  1856  028F                     	;# 
  1857  0290                     	;# 
  1858  0291                     	;# 
  1859  0292                     	;# 
  1860  0292                     	;# 
  1861  0293                     	;# 
  1862  0293                     	;# 
  1863  0294                     	;# 
  1864  0295                     	;# 
  1865  0296                     	;# 
  1866  0297                     	;# 
  1867  0298                     	;# 
  1868  0298                     	;# 
  1869  0299                     	;# 
  1870  0299                     	;# 
  1871  029A                     	;# 
  1872  029B                     	;# 
  1873  029C                     	;# 
  1874  029D                     	;# 
  1875  029F                     	;# 
  1876  030C                     	;# 
  1877  030C                     	;# 
  1878  030D                     	;# 
  1879  030E                     	;# 
  1880  030F                     	;# 
  1881  0310                     	;# 
  1882  0310                     	;# 
  1883  0311                     	;# 
  1884  0312                     	;# 
  1885  0313                     	;# 
  1886  0314                     	;# 
  1887  0314                     	;# 
  1888  0315                     	;# 
  1889  0316                     	;# 
  1890  0317                     	;# 
  1891  0318                     	;# 
  1892  0318                     	;# 
  1893  0319                     	;# 
  1894  031A                     	;# 
  1895  031B                     	;# 
  1896  031C                     	;# 
  1897  031C                     	;# 
  1898  031D                     	;# 
  1899  031E                     	;# 
  1900  031F                     	;# 
  1901  038C                     	;# 
  1902  038C                     	;# 
  1903  038D                     	;# 
  1904  038E                     	;# 
  1905  0390                     	;# 
  1906  0390                     	;# 
  1907  0391                     	;# 
  1908  0392                     	;# 
  1909  048C                     	;# 
  1910  048C                     	;# 
  1911  048D                     	;# 
  1912  048E                     	;# 
  1913  048F                     	;# 
  1914  048F                     	;# 
  1915  0490                     	;# 
  1916  0491                     	;# 
  1917  0492                     	;# 
  1918  0492                     	;# 
  1919  0493                     	;# 
  1920  0494                     	;# 
  1921  0495                     	;# 
  1922  0495                     	;# 
  1923  0496                     	;# 
  1924  0497                     	;# 
  1925  0498                     	;# 
  1926  0499                     	;# 
  1927  049A                     	;# 
  1928  049B                     	;# 
  1929  049C                     	;# 
  1930  049D                     	;# 
  1931  050C                     	;# 
  1932  050C                     	;# 
  1933  050D                     	;# 
  1934  050E                     	;# 
  1935  050F                     	;# 
  1936  050F                     	;# 
  1937  0510                     	;# 
  1938  0511                     	;# 
  1939  0512                     	;# 
  1940  0512                     	;# 
  1941  0513                     	;# 
  1942  0514                     	;# 
  1943  0515                     	;# 
  1944  0515                     	;# 
  1945  0516                     	;# 
  1946  0517                     	;# 
  1947  0518                     	;# 
  1948  0519                     	;# 
  1949  051A                     	;# 
  1950  051B                     	;# 
  1951  051C                     	;# 
  1952  051D                     	;# 
  1953  058C                     	;# 
  1954  058C                     	;# 
  1955  058D                     	;# 
  1956  058E                     	;# 
  1957  058F                     	;# 
  1958  058F                     	;# 
  1959  0590                     	;# 
  1960  0591                     	;# 
  1961  0592                     	;# 
  1962  0593                     	;# 
  1963  059C                     	;# 
  1964  059C                     	;# 
  1965  059D                     	;# 
  1966  059D                     	;# 
  1967  059E                     	;# 
  1968  059F                     	;# 
  1969  060C                     	;# 
  1970  060C                     	;# 
  1971  060D                     	;# 
  1972  060D                     	;# 
  1973  060E                     	;# 
  1974  060F                     	;# 
  1975  0610                     	;# 
  1976  0611                     	;# 
  1977  0612                     	;# 
  1978  0613                     	;# 
  1979  0614                     	;# 
  1980  0616                     	;# 
  1981  0616                     	;# 
  1982  0617                     	;# 
  1983  0617                     	;# 
  1984  0618                     	;# 
  1985  0619                     	;# 
  1986  061A                     	;# 
  1987  061B                     	;# 
  1988  061C                     	;# 
  1989  061D                     	;# 
  1990  061E                     	;# 
  1991  068C                     	;# 
  1992  068D                     	;# 
  1993  068E                     	;# 
  1994  068F                     	;# 
  1995  0690                     	;# 
  1996  0691                     	;# 
  1997  0692                     	;# 
  1998  0693                     	;# 
  1999  0694                     	;# 
  2000  070C                     	;# 
  2001  070D                     	;# 
  2002  070E                     	;# 
  2003  070F                     	;# 
  2004  0710                     	;# 
  2005  0711                     	;# 
  2006  0712                     	;# 
  2007  0713                     	;# 
  2008  0714                     	;# 
  2009  0716                     	;# 
  2010  0717                     	;# 
  2011  0718                     	;# 
  2012  0719                     	;# 
  2013  071A                     	;# 
  2014  071B                     	;# 
  2015  071C                     	;# 
  2016  071D                     	;# 
  2017  071E                     	;# 
  2018  0796                     	;# 
  2019  0797                     	;# 
  2020  0798                     	;# 
  2021  0799                     	;# 
  2022  079A                     	;# 
  2023  079B                     	;# 
  2024  079C                     	;# 
  2025  079D                     	;# 
  2026  080C                     	;# 
  2027  080D                     	;# 
  2028  080E                     	;# 
  2029  080F                     	;# 
  2030  0810                     	;# 
  2031  0811                     	;# 
  2032  0813                     	;# 
  2033  0814                     	;# 
  2034  081A                     	;# 
  2035  081A                     	;# 
  2036  081B                     	;# 
  2037  081C                     	;# 
  2038  081C                     	;# 
  2039  081D                     	;# 
  2040  081E                     	;# 
  2041  081F                     	;# 
  2042  088C                     	;# 
  2043  088D                     	;# 
  2044  088E                     	;# 
  2045  088F                     	;# 
  2046  0890                     	;# 
  2047  0891                     	;# 
  2048  0892                     	;# 
  2049  0893                     	;# 
  2050  0895                     	;# 
  2051  0896                     	;# 
  2052  0897                     	;# 
  2053  0898                     	;# 
  2054  0899                     	;# 
  2055  089A                     	;# 
  2056  089B                     	;# 
  2057  090C                     	;# 
  2058  090E                     	;# 
  2059  090F                     	;# 
  2060  091F                     	;# 
  2061  098F                     	;# 
  2062  098F                     	;# 
  2063  0990                     	;# 
  2064  0991                     	;# 
  2065  0992                     	;# 
  2066  0993                     	;# 
  2067  0994                     	;# 
  2068  0995                     	;# 
  2069  0996                     	;# 
  2070  0997                     	;# 
  2071  0A19                     	;# 
  2072  0A19                     	;# 
  2073  0A1A                     	;# 
  2074  0A1A                     	;# 
  2075  0A1B                     	;# 
  2076  0A1B                     	;# 
  2077  0A1B                     	;# 
  2078  0A1C                     	;# 
  2079  0A1C                     	;# 
  2080  0A1D                     	;# 
  2081  0A1D                     	;# 
  2082  0A1E                     	;# 
  2083  0A1E                     	;# 
  2084  0A1F                     	;# 
  2085  0A1F                     	;# 
  2086  0A1F                     	;# 
  2087  1E0F                     	;# 
  2088  1E10                     	;# 
  2089  1E11                     	;# 
  2090  1E12                     	;# 
  2091  1E13                     	;# 
  2092  1E14                     	;# 
  2093  1E15                     	;# 
  2094  1E16                     	;# 
  2095  1E17                     	;# 
  2096  1E18                     	;# 
  2097  1E19                     	;# 
  2098  1E1A                     	;# 
  2099  1E1B                     	;# 
  2100  1E1C                     	;# 
  2101  1E1D                     	;# 
  2102  1E1E                     	;# 
  2103  1E1F                     	;# 
  2104  1E20                     	;# 
  2105  1E21                     	;# 
  2106  1E22                     	;# 
  2107  1E23                     	;# 
  2108  1E24                     	;# 
  2109  1E25                     	;# 
  2110  1E26                     	;# 
  2111  1E27                     	;# 
  2112  1E28                     	;# 
  2113  1E29                     	;# 
  2114  1E2A                     	;# 
  2115  1E2B                     	;# 
  2116  1E2C                     	;# 
  2117  1E2D                     	;# 
  2118  1E2E                     	;# 
  2119  1E2F                     	;# 
  2120  1E30                     	;# 
  2121  1E31                     	;# 
  2122  1E32                     	;# 
  2123  1E33                     	;# 
  2124  1E34                     	;# 
  2125  1E35                     	;# 
  2126  1E36                     	;# 
  2127  1E37                     	;# 
  2128  1E8F                     	;# 
  2129  1E90                     	;# 
  2130  1E91                     	;# 
  2131  1E92                     	;# 
  2132  1E93                     	;# 
  2133  1E94                     	;# 
  2134  1E95                     	;# 
  2135  1E96                     	;# 
  2136  1E97                     	;# 
  2137  1E9C                     	;# 
  2138  1E9D                     	;# 
  2139  1E9E                     	;# 
  2140  1EA1                     	;# 
  2141  1EA2                     	;# 
  2142  1EA3                     	;# 
  2143  1EA4                     	;# 
  2144  1EA5                     	;# 
  2145  1EA9                     	;# 
  2146  1EAA                     	;# 
  2147  1EAB                     	;# 
  2148  1EAC                     	;# 
  2149  1EB1                     	;# 
  2150  1EB2                     	;# 
  2151  1EB3                     	;# 
  2152  1EB8                     	;# 
  2153  1EB9                     	;# 
  2154  1EBA                     	;# 
  2155  1EBB                     	;# 
  2156  1EBC                     	;# 
  2157  1EBD                     	;# 
  2158  1EBE                     	;# 
  2159  1EC3                     	;# 
  2160  1EC5                     	;# 
  2161  1EC6                     	;# 
  2162  1EC7                     	;# 
  2163  1EC8                     	;# 
  2164  1EC9                     	;# 
  2165  1ECA                     	;# 
  2166  1ECB                     	;# 
  2167  1ECC                     	;# 
  2168  1ECD                     	;# 
  2169  1ECE                     	;# 
  2170  1F10                     	;# 
  2171  1F11                     	;# 
  2172  1F12                     	;# 
  2173  1F13                     	;# 
  2174  1F14                     	;# 
  2175  1F15                     	;# 
  2176  1F16                     	;# 
  2177  1F17                     	;# 
  2178  1F18                     	;# 
  2179  1F19                     	;# 
  2180  1F1A                     	;# 
  2181  1F1B                     	;# 
  2182  1F1C                     	;# 
  2183  1F1D                     	;# 
  2184  1F1E                     	;# 
  2185  1F1F                     	;# 
  2186  1F20                     	;# 
  2187  1F21                     	;# 
  2188  1F22                     	;# 
  2189  1F23                     	;# 
  2190  1F24                     	;# 
  2191  1F25                     	;# 
  2192  1F26                     	;# 
  2193  1F27                     	;# 
  2194  1F38                     	;# 
  2195  1F39                     	;# 
  2196  1F3A                     	;# 
  2197  1F3B                     	;# 
  2198  1F3C                     	;# 
  2199  1F3D                     	;# 
  2200  1F3E                     	;# 
  2201  1F3F                     	;# 
  2202  1F43                     	;# 
  2203  1F44                     	;# 
  2204  1F45                     	;# 
  2205  1F46                     	;# 
  2206  1F47                     	;# 
  2207  1F48                     	;# 
  2208  1F49                     	;# 
  2209  1F4A                     	;# 
  2210  1F4E                     	;# 
  2211  1F4F                     	;# 
  2212  1F50                     	;# 
  2213  1F51                     	;# 
  2214  1F52                     	;# 
  2215  1F53                     	;# 
  2216  1F54                     	;# 
  2217  1F55                     	;# 
  2218  1F65                     	;# 
  2219  1F66                     	;# 
  2220  1F67                     	;# 
  2221  1F68                     	;# 
  2222  1F69                     	;# 
  2223  1F6A                     	;# 
  2224  1F6B                     	;# 
  2225  1FE4                     	;# 
  2226  1FE5                     	;# 
  2227  1FE6                     	;# 
  2228  1FE7                     	;# 
  2229  1FE8                     	;# 
  2230  1FE8                     	;# 
  2231  1FE9                     	;# 
  2232  1FEA                     	;# 
  2233  1FEB                     	;# 
  2234  1FED                     	;# 
  2235  1FEE                     	;# 
  2236  1FEF                     	;# 
  2237  0000                     	;# 
  2238  0001                     	;# 
  2239  0002                     	;# 
  2240  0003                     	;# 
  2241  0004                     	;# 
  2242  0005                     	;# 
  2243  0006                     	;# 
  2244  0007                     	;# 
  2245  0008                     	;# 
  2246  0009                     	;# 
  2247  000A                     	;# 
  2248  000B                     	;# 
  2249  000C                     	;# 
  2250  000D                     	;# 
  2251  000E                     	;# 
  2252  0010                     	;# 
  2253  0012                     	;# 
  2254  0013                     	;# 
  2255  0014                     	;# 
  2256  0016                     	;# 
  2257  0018                     	;# 
  2258  0019                     	;# 
  2259  001A                     	;# 
  2260  001C                     	;# 
  2261  008C                     	;# 
  2262  008C                     	;# 
  2263  008D                     	;# 
  2264  008E                     	;# 
  2265  008E                     	;# 
  2266  008F                     	;# 
  2267  0090                     	;# 
  2268  0090                     	;# 
  2269  0091                     	;# 
  2270  0092                     	;# 
  2271  0092                     	;# 
  2272  0093                     	;# 
  2273  0094                     	;# 
  2274  0094                     	;# 
  2275  0095                     	;# 
  2276  0096                     	;# 
  2277  0096                     	;# 
  2278  0097                     	;# 
  2279  0098                     	;# 
  2280  0099                     	;# 
  2281  009A                     	;# 
  2282  009B                     	;# 
  2283  009B                     	;# 
  2284  009C                     	;# 
  2285  009D                     	;# 
  2286  009D                     	;# 
  2287  009E                     	;# 
  2288  009F                     	;# 
  2289  010C                     	;# 
  2290  010C                     	;# 
  2291  010D                     	;# 
  2292  010E                     	;# 
  2293  010F                     	;# 
  2294  010F                     	;# 
  2295  0110                     	;# 
  2296  0111                     	;# 
  2297  0112                     	;# 
  2298  0113                     	;# 
  2299  0114                     	;# 
  2300  0115                     	;# 
  2301  0116                     	;# 
  2302  0117                     	;# 
  2303  0118                     	;# 
  2304  0119                     	;# 
  2305  0119                     	;# 
  2306  0119                     	;# 
  2307  011A                     	;# 
  2308  011A                     	;# 
  2309  011A                     	;# 
  2310  011B                     	;# 
  2311  011B                     	;# 
  2312  011B                     	;# 
  2313  011B                     	;# 
  2314  011B                     	;# 
  2315  011C                     	;# 
  2316  011C                     	;# 
  2317  011C                     	;# 
  2318  011D                     	;# 
  2319  011D                     	;# 
  2320  011D                     	;# 
  2321  011E                     	;# 
  2322  011E                     	;# 
  2323  011E                     	;# 
  2324  011F                     	;# 
  2325  011F                     	;# 
  2326  011F                     	;# 
  2327  011F                     	;# 
  2328  011F                     	;# 
  2329  018C                     	;# 
  2330  018D                     	;# 
  2331  018E                     	;# 
  2332  018F                     	;# 
  2333  0190                     	;# 
  2334  0191                     	;# 
  2335  0192                     	;# 
  2336  0196                     	;# 
  2337  0197                     	;# 
  2338  0198                     	;# 
  2339  0199                     	;# 
  2340  019A                     	;# 
  2341  019B                     	;# 
  2342  019C                     	;# 
  2343  020C                     	;# 
  2344  020D                     	;# 
  2345  020E                     	;# 
  2346  020E                     	;# 
  2347  020F                     	;# 
  2348  020F                     	;# 
  2349  0210                     	;# 
  2350  0210                     	;# 
  2351  0211                     	;# 
  2352  0211                     	;# 
  2353  0212                     	;# 
  2354  0213                     	;# 
  2355  0214                     	;# 
  2356  0214                     	;# 
  2357  0215                     	;# 
  2358  0215                     	;# 
  2359  0216                     	;# 
  2360  0216                     	;# 
  2361  0217                     	;# 
  2362  0217                     	;# 
  2363  0218                     	;# 
  2364  0219                     	;# 
  2365  021A                     	;# 
  2366  021A                     	;# 
  2367  021B                     	;# 
  2368  021B                     	;# 
  2369  021C                     	;# 
  2370  021C                     	;# 
  2371  021D                     	;# 
  2372  021D                     	;# 
  2373  021E                     	;# 
  2374  021F                     	;# 
  2375  028C                     	;# 
  2376  028C                     	;# 
  2377  028D                     	;# 
  2378  028D                     	;# 
  2379  028E                     	;# 
  2380  028F                     	;# 
  2381  0290                     	;# 
  2382  0291                     	;# 
  2383  0292                     	;# 
  2384  0292                     	;# 
  2385  0293                     	;# 
  2386  0293                     	;# 
  2387  0294                     	;# 
  2388  0295                     	;# 
  2389  0296                     	;# 
  2390  0297                     	;# 
  2391  0298                     	;# 
  2392  0298                     	;# 
  2393  0299                     	;# 
  2394  0299                     	;# 
  2395  029A                     	;# 
  2396  029B                     	;# 
  2397  029C                     	;# 
  2398  029D                     	;# 
  2399  029F                     	;# 
  2400  030C                     	;# 
  2401  030C                     	;# 
  2402  030D                     	;# 
  2403  030E                     	;# 
  2404  030F                     	;# 
  2405  0310                     	;# 
  2406  0310                     	;# 
  2407  0311                     	;# 
  2408  0312                     	;# 
  2409  0313                     	;# 
  2410  0314                     	;# 
  2411  0314                     	;# 
  2412  0315                     	;# 
  2413  0316                     	;# 
  2414  0317                     	;# 
  2415  0318                     	;# 
  2416  0318                     	;# 
  2417  0319                     	;# 
  2418  031A                     	;# 
  2419  031B                     	;# 
  2420  031C                     	;# 
  2421  031C                     	;# 
  2422  031D                     	;# 
  2423  031E                     	;# 
  2424  031F                     	;# 
  2425  038C                     	;# 
  2426  038C                     	;# 
  2427  038D                     	;# 
  2428  038E                     	;# 
  2429  0390                     	;# 
  2430  0390                     	;# 
  2431  0391                     	;# 
  2432  0392                     	;# 
  2433  048C                     	;# 
  2434  048C                     	;# 
  2435  048D                     	;# 
  2436  048E                     	;# 
  2437  048F                     	;# 
  2438  048F                     	;# 
  2439  0490                     	;# 
  2440  0491                     	;# 
  2441  0492                     	;# 
  2442  0492                     	;# 
  2443  0493                     	;# 
  2444  0494                     	;# 
  2445  0495                     	;# 
  2446  0495                     	;# 
  2447  0496                     	;# 
  2448  0497                     	;# 
  2449  0498                     	;# 
  2450  0499                     	;# 
  2451  049A                     	;# 
  2452  049B                     	;# 
  2453  049C                     	;# 
  2454  049D                     	;# 
  2455  050C                     	;# 
  2456  050C                     	;# 
  2457  050D                     	;# 
  2458  050E                     	;# 
  2459  050F                     	;# 
  2460  050F                     	;# 
  2461  0510                     	;# 
  2462  0511                     	;# 
  2463  0512                     	;# 
  2464  0512                     	;# 
  2465  0513                     	;# 
  2466  0514                     	;# 
  2467  0515                     	;# 
  2468  0515                     	;# 
  2469  0516                     	;# 
  2470  0517                     	;# 
  2471  0518                     	;# 
  2472  0519                     	;# 
  2473  051A                     	;# 
  2474  051B                     	;# 
  2475  051C                     	;# 
  2476  051D                     	;# 
  2477  058C                     	;# 
  2478  058C                     	;# 
  2479  058D                     	;# 
  2480  058E                     	;# 
  2481  058F                     	;# 
  2482  058F                     	;# 
  2483  0590                     	;# 
  2484  0591                     	;# 
  2485  0592                     	;# 
  2486  0593                     	;# 
  2487  059C                     	;# 
  2488  059C                     	;# 
  2489  059D                     	;# 
  2490  059D                     	;# 
  2491  059E                     	;# 
  2492  059F                     	;# 
  2493  060C                     	;# 
  2494  060C                     	;# 
  2495  060D                     	;# 
  2496  060D                     	;# 
  2497  060E                     	;# 
  2498  060F                     	;# 
  2499  0610                     	;# 
  2500  0611                     	;# 
  2501  0612                     	;# 
  2502  0613                     	;# 
  2503  0614                     	;# 
  2504  0616                     	;# 
  2505  0616                     	;# 
  2506  0617                     	;# 
  2507  0617                     	;# 
  2508  0618                     	;# 
  2509  0619                     	;# 
  2510  061A                     	;# 
  2511  061B                     	;# 
  2512  061C                     	;# 
  2513  061D                     	;# 
  2514  061E                     	;# 
  2515  068C                     	;# 
  2516  068D                     	;# 
  2517  068E                     	;# 
  2518  068F                     	;# 
  2519  0690                     	;# 
  2520  0691                     	;# 
  2521  0692                     	;# 
  2522  0693                     	;# 
  2523  0694                     	;# 
  2524  070C                     	;# 
  2525  070D                     	;# 
  2526  070E                     	;# 
  2527  070F                     	;# 
  2528  0710                     	;# 
  2529  0711                     	;# 
  2530  0712                     	;# 
  2531  0713                     	;# 
  2532  0714                     	;# 
  2533  0716                     	;# 
  2534  0717                     	;# 
  2535  0718                     	;# 
  2536  0719                     	;# 
  2537  071A                     	;# 
  2538  071B                     	;# 
  2539  071C                     	;# 
  2540  071D                     	;# 
  2541  071E                     	;# 
  2542  0796                     	;# 
  2543  0797                     	;# 
  2544  0798                     	;# 
  2545  0799                     	;# 
  2546  079A                     	;# 
  2547  079B                     	;# 
  2548  079C                     	;# 
  2549  079D                     	;# 
  2550  080C                     	;# 
  2551  080D                     	;# 
  2552  080E                     	;# 
  2553  080F                     	;# 
  2554  0810                     	;# 
  2555  0811                     	;# 
  2556  0813                     	;# 
  2557  0814                     	;# 
  2558  081A                     	;# 
  2559  081A                     	;# 
  2560  081B                     	;# 
  2561  081C                     	;# 
  2562  081C                     	;# 
  2563  081D                     	;# 
  2564  081E                     	;# 
  2565  081F                     	;# 
  2566  088C                     	;# 
  2567  088D                     	;# 
  2568  088E                     	;# 
  2569  088F                     	;# 
  2570  0890                     	;# 
  2571  0891                     	;# 
  2572  0892                     	;# 
  2573  0893                     	;# 
  2574  0895                     	;# 
  2575  0896                     	;# 
  2576  0897                     	;# 
  2577  0898                     	;# 
  2578  0899                     	;# 
  2579  089A                     	;# 
  2580  089B                     	;# 
  2581  090C                     	;# 
  2582  090E                     	;# 
  2583  090F                     	;# 
  2584  091F                     	;# 
  2585  098F                     	;# 
  2586  098F                     	;# 
  2587  0990                     	;# 
  2588  0991                     	;# 
  2589  0992                     	;# 
  2590  0993                     	;# 
  2591  0994                     	;# 
  2592  0995                     	;# 
  2593  0996                     	;# 
  2594  0997                     	;# 
  2595  0A19                     	;# 
  2596  0A19                     	;# 
  2597  0A1A                     	;# 
  2598  0A1A                     	;# 
  2599  0A1B                     	;# 
  2600  0A1B                     	;# 
  2601  0A1B                     	;# 
  2602  0A1C                     	;# 
  2603  0A1C                     	;# 
  2604  0A1D                     	;# 
  2605  0A1D                     	;# 
  2606  0A1E                     	;# 
  2607  0A1E                     	;# 
  2608  0A1F                     	;# 
  2609  0A1F                     	;# 
  2610  0A1F                     	;# 
  2611  1E0F                     	;# 
  2612  1E10                     	;# 
  2613  1E11                     	;# 
  2614  1E12                     	;# 
  2615  1E13                     	;# 
  2616  1E14                     	;# 
  2617  1E15                     	;# 
  2618  1E16                     	;# 
  2619  1E17                     	;# 
  2620  1E18                     	;# 
  2621  1E19                     	;# 
  2622  1E1A                     	;# 
  2623  1E1B                     	;# 
  2624  1E1C                     	;# 
  2625  1E1D                     	;# 
  2626  1E1E                     	;# 
  2627  1E1F                     	;# 
  2628  1E20                     	;# 
  2629  1E21                     	;# 
  2630  1E22                     	;# 
  2631  1E23                     	;# 
  2632  1E24                     	;# 
  2633  1E25                     	;# 
  2634  1E26                     	;# 
  2635  1E27                     	;# 
  2636  1E28                     	;# 
  2637  1E29                     	;# 
  2638  1E2A                     	;# 
  2639  1E2B                     	;# 
  2640  1E2C                     	;# 
  2641  1E2D                     	;# 
  2642  1E2E                     	;# 
  2643  1E2F                     	;# 
  2644  1E30                     	;# 
  2645  1E31                     	;# 
  2646  1E32                     	;# 
  2647  1E33                     	;# 
  2648  1E34                     	;# 
  2649  1E35                     	;# 
  2650  1E36                     	;# 
  2651  1E37                     	;# 
  2652  1E8F                     	;# 
  2653  1E90                     	;# 
  2654  1E91                     	;# 
  2655  1E92                     	;# 
  2656  1E93                     	;# 
  2657  1E94                     	;# 
  2658  1E95                     	;# 
  2659  1E96                     	;# 
  2660  1E97                     	;# 
  2661  1E9C                     	;# 
  2662  1E9D                     	;# 
  2663  1E9E                     	;# 
  2664  1EA1                     	;# 
  2665  1EA2                     	;# 
  2666  1EA3                     	;# 
  2667  1EA4                     	;# 
  2668  1EA5                     	;# 
  2669  1EA9                     	;# 
  2670  1EAA                     	;# 
  2671  1EAB                     	;# 
  2672  1EAC                     	;# 
  2673  1EB1                     	;# 
  2674  1EB2                     	;# 
  2675  1EB3                     	;# 
  2676  1EB8                     	;# 
  2677  1EB9                     	;# 
  2678  1EBA                     	;# 
  2679  1EBB                     	;# 
  2680  1EBC                     	;# 
  2681  1EBD                     	;# 
  2682  1EBE                     	;# 
  2683  1EC3                     	;# 
  2684  1EC5                     	;# 
  2685  1EC6                     	;# 
  2686  1EC7                     	;# 
  2687  1EC8                     	;# 
  2688  1EC9                     	;# 
  2689  1ECA                     	;# 
  2690  1ECB                     	;# 
  2691  1ECC                     	;# 
  2692  1ECD                     	;# 
  2693  1ECE                     	;# 
  2694  1F10                     	;# 
  2695  1F11                     	;# 
  2696  1F12                     	;# 
  2697  1F13                     	;# 
  2698  1F14                     	;# 
  2699  1F15                     	;# 
  2700  1F16                     	;# 
  2701  1F17                     	;# 
  2702  1F18                     	;# 
  2703  1F19                     	;# 
  2704  1F1A                     	;# 
  2705  1F1B                     	;# 
  2706  1F1C                     	;# 
  2707  1F1D                     	;# 
  2708  1F1E                     	;# 
  2709  1F1F                     	;# 
  2710  1F20                     	;# 
  2711  1F21                     	;# 
  2712  1F22                     	;# 
  2713  1F23                     	;# 
  2714  1F24                     	;# 
  2715  1F25                     	;# 
  2716  1F26                     	;# 
  2717  1F27                     	;# 
  2718  1F38                     	;# 
  2719  1F39                     	;# 
  2720  1F3A                     	;# 
  2721  1F3B                     	;# 
  2722  1F3C                     	;# 
  2723  1F3D                     	;# 
  2724  1F3E                     	;# 
  2725  1F3F                     	;# 
  2726  1F43                     	;# 
  2727  1F44                     	;# 
  2728  1F45                     	;# 
  2729  1F46                     	;# 
  2730  1F47                     	;# 
  2731  1F48                     	;# 
  2732  1F49                     	;# 
  2733  1F4A                     	;# 
  2734  1F4E                     	;# 
  2735  1F4F                     	;# 
  2736  1F50                     	;# 
  2737  1F51                     	;# 
  2738  1F52                     	;# 
  2739  1F53                     	;# 
  2740  1F54                     	;# 
  2741  1F55                     	;# 
  2742  1F65                     	;# 
  2743  1F66                     	;# 
  2744  1F67                     	;# 
  2745  1F68                     	;# 
  2746  1F69                     	;# 
  2747  1F6A                     	;# 
  2748  1F6B                     	;# 
  2749  1FE4                     	;# 
  2750  1FE5                     	;# 
  2751  1FE6                     	;# 
  2752  1FE7                     	;# 
  2753  1FE8                     	;# 
  2754  1FE8                     	;# 
  2755  1FE9                     	;# 
  2756  1FEA                     	;# 
  2757  1FEB                     	;# 
  2758  1FED                     	;# 
  2759  1FEE                     	;# 
  2760  1FEF                     	;# 
  2761  0000                     	;# 
  2762  0001                     	;# 
  2763  0002                     	;# 
  2764  0003                     	;# 
  2765  0004                     	;# 
  2766  0005                     	;# 
  2767  0006                     	;# 
  2768  0007                     	;# 
  2769  0008                     	;# 
  2770  0009                     	;# 
  2771  000A                     	;# 
  2772  000B                     	;# 
  2773  000C                     	;# 
  2774  000D                     	;# 
  2775  000E                     	;# 
  2776  0010                     	;# 
  2777  0012                     	;# 
  2778  0013                     	;# 
  2779  0014                     	;# 
  2780  0016                     	;# 
  2781  0018                     	;# 
  2782  0019                     	;# 
  2783  001A                     	;# 
  2784  001C                     	;# 
  2785  008C                     	;# 
  2786  008C                     	;# 
  2787  008D                     	;# 
  2788  008E                     	;# 
  2789  008E                     	;# 
  2790  008F                     	;# 
  2791  0090                     	;# 
  2792  0090                     	;# 
  2793  0091                     	;# 
  2794  0092                     	;# 
  2795  0092                     	;# 
  2796  0093                     	;# 
  2797  0094                     	;# 
  2798  0094                     	;# 
  2799  0095                     	;# 
  2800  0096                     	;# 
  2801  0096                     	;# 
  2802  0097                     	;# 
  2803  0098                     	;# 
  2804  0099                     	;# 
  2805  009A                     	;# 
  2806  009B                     	;# 
  2807  009B                     	;# 
  2808  009C                     	;# 
  2809  009D                     	;# 
  2810  009D                     	;# 
  2811  009E                     	;# 
  2812  009F                     	;# 
  2813  010C                     	;# 
  2814  010C                     	;# 
  2815  010D                     	;# 
  2816  010E                     	;# 
  2817  010F                     	;# 
  2818  010F                     	;# 
  2819  0110                     	;# 
  2820  0111                     	;# 
  2821  0112                     	;# 
  2822  0113                     	;# 
  2823  0114                     	;# 
  2824  0115                     	;# 
  2825  0116                     	;# 
  2826  0117                     	;# 
  2827  0118                     	;# 
  2828  0119                     	;# 
  2829  0119                     	;# 
  2830  0119                     	;# 
  2831  011A                     	;# 
  2832  011A                     	;# 
  2833  011A                     	;# 
  2834  011B                     	;# 
  2835  011B                     	;# 
  2836  011B                     	;# 
  2837  011B                     	;# 
  2838  011B                     	;# 
  2839  011C                     	;# 
  2840  011C                     	;# 
  2841  011C                     	;# 
  2842  011D                     	;# 
  2843  011D                     	;# 
  2844  011D                     	;# 
  2845  011E                     	;# 
  2846  011E                     	;# 
  2847  011E                     	;# 
  2848  011F                     	;# 
  2849  011F                     	;# 
  2850  011F                     	;# 
  2851  011F                     	;# 
  2852  011F                     	;# 
  2853  018C                     	;# 
  2854  018D                     	;# 
  2855  018E                     	;# 
  2856  018F                     	;# 
  2857  0190                     	;# 
  2858  0191                     	;# 
  2859  0192                     	;# 
  2860  0196                     	;# 
  2861  0197                     	;# 
  2862  0198                     	;# 
  2863  0199                     	;# 
  2864  019A                     	;# 
  2865  019B                     	;# 
  2866  019C                     	;# 
  2867  020C                     	;# 
  2868  020D                     	;# 
  2869  020E                     	;# 
  2870  020E                     	;# 
  2871  020F                     	;# 
  2872  020F                     	;# 
  2873  0210                     	;# 
  2874  0210                     	;# 
  2875  0211                     	;# 
  2876  0211                     	;# 
  2877  0212                     	;# 
  2878  0213                     	;# 
  2879  0214                     	;# 
  2880  0214                     	;# 
  2881  0215                     	;# 
  2882  0215                     	;# 
  2883  0216                     	;# 
  2884  0216                     	;# 
  2885  0217                     	;# 
  2886  0217                     	;# 
  2887  0218                     	;# 
  2888  0219                     	;# 
  2889  021A                     	;# 
  2890  021A                     	;# 
  2891  021B                     	;# 
  2892  021B                     	;# 
  2893  021C                     	;# 
  2894  021C                     	;# 
  2895  021D                     	;# 
  2896  021D                     	;# 
  2897  021E                     	;# 
  2898  021F                     	;# 
  2899  028C                     	;# 
  2900  028C                     	;# 
  2901  028D                     	;# 
  2902  028D                     	;# 
  2903  028E                     	;# 
  2904  028F                     	;# 
  2905  0290                     	;# 
  2906  0291                     	;# 
  2907  0292                     	;# 
  2908  0292                     	;# 
  2909  0293                     	;# 
  2910  0293                     	;# 
  2911  0294                     	;# 
  2912  0295                     	;# 
  2913  0296                     	;# 
  2914  0297                     	;# 
  2915  0298                     	;# 
  2916  0298                     	;# 
  2917  0299                     	;# 
  2918  0299                     	;# 
  2919  029A                     	;# 
  2920  029B                     	;# 
  2921  029C                     	;# 
  2922  029D                     	;# 
  2923  029F                     	;# 
  2924  030C                     	;# 
  2925  030C                     	;# 
  2926  030D                     	;# 
  2927  030E                     	;# 
  2928  030F                     	;# 
  2929  0310                     	;# 
  2930  0310                     	;# 
  2931  0311                     	;# 
  2932  0312                     	;# 
  2933  0313                     	;# 
  2934  0314                     	;# 
  2935  0314                     	;# 
  2936  0315                     	;# 
  2937  0316                     	;# 
  2938  0317                     	;# 
  2939  0318                     	;# 
  2940  0318                     	;# 
  2941  0319                     	;# 
  2942  031A                     	;# 
  2943  031B                     	;# 
  2944  031C                     	;# 
  2945  031C                     	;# 
  2946  031D                     	;# 
  2947  031E                     	;# 
  2948  031F                     	;# 
  2949  038C                     	;# 
  2950  038C                     	;# 
  2951  038D                     	;# 
  2952  038E                     	;# 
  2953  0390                     	;# 
  2954  0390                     	;# 
  2955  0391                     	;# 
  2956  0392                     	;# 
  2957  048C                     	;# 
  2958  048C                     	;# 
  2959  048D                     	;# 
  2960  048E                     	;# 
  2961  048F                     	;# 
  2962  048F                     	;# 
  2963  0490                     	;# 
  2964  0491                     	;# 
  2965  0492                     	;# 
  2966  0492                     	;# 
  2967  0493                     	;# 
  2968  0494                     	;# 
  2969  0495                     	;# 
  2970  0495                     	;# 
  2971  0496                     	;# 
  2972  0497                     	;# 
  2973  0498                     	;# 
  2974  0499                     	;# 
  2975  049A                     	;# 
  2976  049B                     	;# 
  2977  049C                     	;# 
  2978  049D                     	;# 
  2979  050C                     	;# 
  2980  050C                     	;# 
  2981  050D                     	;# 
  2982  050E                     	;# 
  2983  050F                     	;# 
  2984  050F                     	;# 
  2985  0510                     	;# 
  2986  0511                     	;# 
  2987  0512                     	;# 
  2988  0512                     	;# 
  2989  0513                     	;# 
  2990  0514                     	;# 
  2991  0515                     	;# 
  2992  0515                     	;# 
  2993  0516                     	;# 
  2994  0517                     	;# 
  2995  0518                     	;# 
  2996  0519                     	;# 
  2997  051A                     	;# 
  2998  051B                     	;# 
  2999  051C                     	;# 
  3000  051D                     	;# 
  3001  058C                     	;# 
  3002  058C                     	;# 
  3003  058D                     	;# 
  3004  058E                     	;# 
  3005  058F                     	;# 
  3006  058F                     	;# 
  3007  0590                     	;# 
  3008  0591                     	;# 
  3009  0592                     	;# 
  3010  0593                     	;# 
  3011  059C                     	;# 
  3012  059C                     	;# 
  3013  059D                     	;# 
  3014  059D                     	;# 
  3015  059E                     	;# 
  3016  059F                     	;# 
  3017  060C                     	;# 
  3018  060C                     	;# 
  3019  060D                     	;# 
  3020  060D                     	;# 
  3021  060E                     	;# 
  3022  060F                     	;# 
  3023  0610                     	;# 
  3024  0611                     	;# 
  3025  0612                     	;# 
  3026  0613                     	;# 
  3027  0614                     	;# 
  3028  0616                     	;# 
  3029  0616                     	;# 
  3030  0617                     	;# 
  3031  0617                     	;# 
  3032  0618                     	;# 
  3033  0619                     	;# 
  3034  061A                     	;# 
  3035  061B                     	;# 
  3036  061C                     	;# 
  3037  061D                     	;# 
  3038  061E                     	;# 
  3039  068C                     	;# 
  3040  068D                     	;# 
  3041  068E                     	;# 
  3042  068F                     	;# 
  3043  0690                     	;# 
  3044  0691                     	;# 
  3045  0692                     	;# 
  3046  0693                     	;# 
  3047  0694                     	;# 
  3048  070C                     	;# 
  3049  070D                     	;# 
  3050  070E                     	;# 
  3051  070F                     	;# 
  3052  0710                     	;# 
  3053  0711                     	;# 
  3054  0712                     	;# 
  3055  0713                     	;# 
  3056  0714                     	;# 
  3057  0716                     	;# 
  3058  0717                     	;# 
  3059  0718                     	;# 
  3060  0719                     	;# 
  3061  071A                     	;# 
  3062  071B                     	;# 
  3063  071C                     	;# 
  3064  071D                     	;# 
  3065  071E                     	;# 
  3066  0796                     	;# 
  3067  0797                     	;# 
  3068  0798                     	;# 
  3069  0799                     	;# 
  3070  079A                     	;# 
  3071  079B                     	;# 
  3072  079C                     	;# 
  3073  079D                     	;# 
  3074  080C                     	;# 
  3075  080D                     	;# 
  3076  080E                     	;# 
  3077  080F                     	;# 
  3078  0810                     	;# 
  3079  0811                     	;# 
  3080  0813                     	;# 
  3081  0814                     	;# 
  3082  081A                     	;# 
  3083  081A                     	;# 
  3084  081B                     	;# 
  3085  081C                     	;# 
  3086  081C                     	;# 
  3087  081D                     	;# 
  3088  081E                     	;# 
  3089  081F                     	;# 
  3090  088C                     	;# 
  3091  088D                     	;# 
  3092  088E                     	;# 
  3093  088F                     	;# 
  3094  0890                     	;# 
  3095  0891                     	;# 
  3096  0892                     	;# 
  3097  0893                     	;# 
  3098  0895                     	;# 
  3099  0896                     	;# 
  3100  0897                     	;# 
  3101  0898                     	;# 
  3102  0899                     	;# 
  3103  089A                     	;# 
  3104  089B                     	;# 
  3105  090C                     	;# 
  3106  090E                     	;# 
  3107  090F                     	;# 
  3108  091F                     	;# 
  3109  098F                     	;# 
  3110  098F                     	;# 
  3111  0990                     	;# 
  3112  0991                     	;# 
  3113  0992                     	;# 
  3114  0993                     	;# 
  3115  0994                     	;# 
  3116  0995                     	;# 
  3117  0996                     	;# 
  3118  0997                     	;# 
  3119  0A19                     	;# 
  3120  0A19                     	;# 
  3121  0A1A                     	;# 
  3122  0A1A                     	;# 
  3123  0A1B                     	;# 
  3124  0A1B                     	;# 
  3125  0A1B                     	;# 
  3126  0A1C                     	;# 
  3127  0A1C                     	;# 
  3128  0A1D                     	;# 
  3129  0A1D                     	;# 
  3130  0A1E                     	;# 
  3131  0A1E                     	;# 
  3132  0A1F                     	;# 
  3133  0A1F                     	;# 
  3134  0A1F                     	;# 
  3135  1E0F                     	;# 
  3136  1E10                     	;# 
  3137  1E11                     	;# 
  3138  1E12                     	;# 
  3139  1E13                     	;# 
  3140  1E14                     	;# 
  3141  1E15                     	;# 
  3142  1E16                     	;# 
  3143  1E17                     	;# 
  3144  1E18                     	;# 
  3145  1E19                     	;# 
  3146  1E1A                     	;# 
  3147  1E1B                     	;# 
  3148  1E1C                     	;# 
  3149  1E1D                     	;# 
  3150  1E1E                     	;# 
  3151  1E1F                     	;# 
  3152  1E20                     	;# 
  3153  1E21                     	;# 
  3154  1E22                     	;# 
  3155  1E23                     	;# 
  3156  1E24                     	;# 
  3157  1E25                     	;# 
  3158  1E26                     	;# 
  3159  1E27                     	;# 
  3160  1E28                     	;# 
  3161  1E29                     	;# 
  3162  1E2A                     	;# 
  3163  1E2B                     	;# 
  3164  1E2C                     	;# 
  3165  1E2D                     	;# 
  3166  1E2E                     	;# 
  3167  1E2F                     	;# 
  3168  1E30                     	;# 
  3169  1E31                     	;# 
  3170  1E32                     	;# 
  3171  1E33                     	;# 
  3172  1E34                     	;# 
  3173  1E35                     	;# 
  3174  1E36                     	;# 
  3175  1E37                     	;# 
  3176  1E8F                     	;# 
  3177  1E90                     	;# 
  3178  1E91                     	;# 
  3179  1E92                     	;# 
  3180  1E93                     	;# 
  3181  1E94                     	;# 
  3182  1E95                     	;# 
  3183  1E96                     	;# 
  3184  1E97                     	;# 
  3185  1E9C                     	;# 
  3186  1E9D                     	;# 
  3187  1E9E                     	;# 
  3188  1EA1                     	;# 
  3189  1EA2                     	;# 
  3190  1EA3                     	;# 
  3191  1EA4                     	;# 
  3192  1EA5                     	;# 
  3193  1EA9                     	;# 
  3194  1EAA                     	;# 
  3195  1EAB                     	;# 
  3196  1EAC                     	;# 
  3197  1EB1                     	;# 
  3198  1EB2                     	;# 
  3199  1EB3                     	;# 
  3200  1EB8                     	;# 
  3201  1EB9                     	;# 
  3202  1EBA                     	;# 
  3203  1EBB                     	;# 
  3204  1EBC                     	;# 
  3205  1EBD                     	;# 
  3206  1EBE                     	;# 
  3207  1EC3                     	;# 
  3208  1EC5                     	;# 
  3209  1EC6                     	;# 
  3210  1EC7                     	;# 
  3211  1EC8                     	;# 
  3212  1EC9                     	;# 
  3213  1ECA                     	;# 
  3214  1ECB                     	;# 
  3215  1ECC                     	;# 
  3216  1ECD                     	;# 
  3217  1ECE                     	;# 
  3218  1F10                     	;# 
  3219  1F11                     	;# 
  3220  1F12                     	;# 
  3221  1F13                     	;# 
  3222  1F14                     	;# 
  3223  1F15                     	;# 
  3224  1F16                     	;# 
  3225  1F17                     	;# 
  3226  1F18                     	;# 
  3227  1F19                     	;# 
  3228  1F1A                     	;# 
  3229  1F1B                     	;# 
  3230  1F1C                     	;# 
  3231  1F1D                     	;# 
  3232  1F1E                     	;# 
  3233  1F1F                     	;# 
  3234  1F20                     	;# 
  3235  1F21                     	;# 
  3236  1F22                     	;# 
  3237  1F23                     	;# 
  3238  1F24                     	;# 
  3239  1F25                     	;# 
  3240  1F26                     	;# 
  3241  1F27                     	;# 
  3242  1F38                     	;# 
  3243  1F39                     	;# 
  3244  1F3A                     	;# 
  3245  1F3B                     	;# 
  3246  1F3C                     	;# 
  3247  1F3D                     	;# 
  3248  1F3E                     	;# 
  3249  1F3F                     	;# 
  3250  1F43                     	;# 
  3251  1F44                     	;# 
  3252  1F45                     	;# 
  3253  1F46                     	;# 
  3254  1F47                     	;# 
  3255  1F48                     	;# 
  3256  1F49                     	;# 
  3257  1F4A                     	;# 
  3258  1F4E                     	;# 
  3259  1F4F                     	;# 
  3260  1F50                     	;# 
  3261  1F51                     	;# 
  3262  1F52                     	;# 
  3263  1F53                     	;# 
  3264  1F54                     	;# 
  3265  1F55                     	;# 
  3266  1F65                     	;# 
  3267  1F66                     	;# 
  3268  1F67                     	;# 
  3269  1F68                     	;# 
  3270  1F69                     	;# 
  3271  1F6A                     	;# 
  3272  1F6B                     	;# 
  3273  1FE4                     	;# 
  3274  1FE5                     	;# 
  3275  1FE6                     	;# 
  3276  1FE7                     	;# 
  3277  1FE8                     	;# 
  3278  1FE8                     	;# 
  3279  1FE9                     	;# 
  3280  1FEA                     	;# 
  3281  1FEB                     	;# 
  3282  1FED                     	;# 
  3283  1FEE                     	;# 
  3284  1FEF                     	;# 
  3285  0000                     	;# 
  3286  0001                     	;# 
  3287  0002                     	;# 
  3288  0003                     	;# 
  3289  0004                     	;# 
  3290  0005                     	;# 
  3291  0006                     	;# 
  3292  0007                     	;# 
  3293  0008                     	;# 
  3294  0009                     	;# 
  3295  000A                     	;# 
  3296  000B                     	;# 
  3297  000C                     	;# 
  3298  000D                     	;# 
  3299  000E                     	;# 
  3300  0010                     	;# 
  3301  0012                     	;# 
  3302  0013                     	;# 
  3303  0014                     	;# 
  3304  0016                     	;# 
  3305  0018                     	;# 
  3306  0019                     	;# 
  3307  001A                     	;# 
  3308  001C                     	;# 
  3309  008C                     	;# 
  3310  008C                     	;# 
  3311  008D                     	;# 
  3312  008E                     	;# 
  3313  008E                     	;# 
  3314  008F                     	;# 
  3315  0090                     	;# 
  3316  0090                     	;# 
  3317  0091                     	;# 
  3318  0092                     	;# 
  3319  0092                     	;# 
  3320  0093                     	;# 
  3321  0094                     	;# 
  3322  0094                     	;# 
  3323  0095                     	;# 
  3324  0096                     	;# 
  3325  0096                     	;# 
  3326  0097                     	;# 
  3327  0098                     	;# 
  3328  0099                     	;# 
  3329  009A                     	;# 
  3330  009B                     	;# 
  3331  009B                     	;# 
  3332  009C                     	;# 
  3333  009D                     	;# 
  3334  009D                     	;# 
  3335  009E                     	;# 
  3336  009F                     	;# 
  3337  010C                     	;# 
  3338  010C                     	;# 
  3339  010D                     	;# 
  3340  010E                     	;# 
  3341  010F                     	;# 
  3342  010F                     	;# 
  3343  0110                     	;# 
  3344  0111                     	;# 
  3345  0112                     	;# 
  3346  0113                     	;# 
  3347  0114                     	;# 
  3348  0115                     	;# 
  3349  0116                     	;# 
  3350  0117                     	;# 
  3351  0118                     	;# 
  3352  0119                     	;# 
  3353  0119                     	;# 
  3354  0119                     	;# 
  3355  011A                     	;# 
  3356  011A                     	;# 
  3357  011A                     	;# 
  3358  011B                     	;# 
  3359  011B                     	;# 
  3360  011B                     	;# 
  3361  011B                     	;# 
  3362  011B                     	;# 
  3363  011C                     	;# 
  3364  011C                     	;# 
  3365  011C                     	;# 
  3366  011D                     	;# 
  3367  011D                     	;# 
  3368  011D                     	;# 
  3369  011E                     	;# 
  3370  011E                     	;# 
  3371  011E                     	;# 
  3372  011F                     	;# 
  3373  011F                     	;# 
  3374  011F                     	;# 
  3375  011F                     	;# 
  3376  011F                     	;# 
  3377  018C                     	;# 
  3378  018D                     	;# 
  3379  018E                     	;# 
  3380  018F                     	;# 
  3381  0190                     	;# 
  3382  0191                     	;# 
  3383  0192                     	;# 
  3384  0196                     	;# 
  3385  0197                     	;# 
  3386  0198                     	;# 
  3387  0199                     	;# 
  3388  019A                     	;# 
  3389  019B                     	;# 
  3390  019C                     	;# 
  3391  020C                     	;# 
  3392  020D                     	;# 
  3393  020E                     	;# 
  3394  020E                     	;# 
  3395  020F                     	;# 
  3396  020F                     	;# 
  3397  0210                     	;# 
  3398  0210                     	;# 
  3399  0211                     	;# 
  3400  0211                     	;# 
  3401  0212                     	;# 
  3402  0213                     	;# 
  3403  0214                     	;# 
  3404  0214                     	;# 
  3405  0215                     	;# 
  3406  0215                     	;# 
  3407  0216                     	;# 
  3408  0216                     	;# 
  3409  0217                     	;# 
  3410  0217                     	;# 
  3411  0218                     	;# 
  3412  0219                     	;# 
  3413  021A                     	;# 
  3414  021A                     	;# 
  3415  021B                     	;# 
  3416  021B                     	;# 
  3417  021C                     	;# 
  3418  021C                     	;# 
  3419  021D                     	;# 
  3420  021D                     	;# 
  3421  021E                     	;# 
  3422  021F                     	;# 
  3423  028C                     	;# 
  3424  028C                     	;# 
  3425  028D                     	;# 
  3426  028D                     	;# 
  3427  028E                     	;# 
  3428  028F                     	;# 
  3429  0290                     	;# 
  3430  0291                     	;# 
  3431  0292                     	;# 
  3432  0292                     	;# 
  3433  0293                     	;# 
  3434  0293                     	;# 
  3435  0294                     	;# 
  3436  0295                     	;# 
  3437  0296                     	;# 
  3438  0297                     	;# 
  3439  0298                     	;# 
  3440  0298                     	;# 
  3441  0299                     	;# 
  3442  0299                     	;# 
  3443  029A                     	;# 
  3444  029B                     	;# 
  3445  029C                     	;# 
  3446  029D                     	;# 
  3447  029F                     	;# 
  3448  030C                     	;# 
  3449  030C                     	;# 
  3450  030D                     	;# 
  3451  030E                     	;# 
  3452  030F                     	;# 
  3453  0310                     	;# 
  3454  0310                     	;# 
  3455  0311                     	;# 
  3456  0312                     	;# 
  3457  0313                     	;# 
  3458  0314                     	;# 
  3459  0314                     	;# 
  3460  0315                     	;# 
  3461  0316                     	;# 
  3462  0317                     	;# 
  3463  0318                     	;# 
  3464  0318                     	;# 
  3465  0319                     	;# 
  3466  031A                     	;# 
  3467  031B                     	;# 
  3468  031C                     	;# 
  3469  031C                     	;# 
  3470  031D                     	;# 
  3471  031E                     	;# 
  3472  031F                     	;# 
  3473  038C                     	;# 
  3474  038C                     	;# 
  3475  038D                     	;# 
  3476  038E                     	;# 
  3477  0390                     	;# 
  3478  0390                     	;# 
  3479  0391                     	;# 
  3480  0392                     	;# 
  3481  048C                     	;# 
  3482  048C                     	;# 
  3483  048D                     	;# 
  3484  048E                     	;# 
  3485  048F                     	;# 
  3486  048F                     	;# 
  3487  0490                     	;# 
  3488  0491                     	;# 
  3489  0492                     	;# 
  3490  0492                     	;# 
  3491  0493                     	;# 
  3492  0494                     	;# 
  3493  0495                     	;# 
  3494  0495                     	;# 
  3495  0496                     	;# 
  3496  0497                     	;# 
  3497  0498                     	;# 
  3498  0499                     	;# 
  3499  049A                     	;# 
  3500  049B                     	;# 
  3501  049C                     	;# 
  3502  049D                     	;# 
  3503  050C                     	;# 
  3504  050C                     	;# 
  3505  050D                     	;# 
  3506  050E                     	;# 
  3507  050F                     	;# 
  3508  050F                     	;# 
  3509  0510                     	;# 
  3510  0511                     	;# 
  3511  0512                     	;# 
  3512  0512                     	;# 
  3513  0513                     	;# 
  3514  0514                     	;# 
  3515  0515                     	;# 
  3516  0515                     	;# 
  3517  0516                     	;# 
  3518  0517                     	;# 
  3519  0518                     	;# 
  3520  0519                     	;# 
  3521  051A                     	;# 
  3522  051B                     	;# 
  3523  051C                     	;# 
  3524  051D                     	;# 
  3525  058C                     	;# 
  3526  058C                     	;# 
  3527  058D                     	;# 
  3528  058E                     	;# 
  3529  058F                     	;# 
  3530  058F                     	;# 
  3531  0590                     	;# 
  3532  0591                     	;# 
  3533  0592                     	;# 
  3534  0593                     	;# 
  3535  059C                     	;# 
  3536  059C                     	;# 
  3537  059D                     	;# 
  3538  059D                     	;# 
  3539  059E                     	;# 
  3540  059F                     	;# 
  3541  060C                     	;# 
  3542  060C                     	;# 
  3543  060D                     	;# 
  3544  060D                     	;# 
  3545  060E                     	;# 
  3546  060F                     	;# 
  3547  0610                     	;# 
  3548  0611                     	;# 
  3549  0612                     	;# 
  3550  0613                     	;# 
  3551  0614                     	;# 
  3552  0616                     	;# 
  3553  0616                     	;# 
  3554  0617                     	;# 
  3555  0617                     	;# 
  3556  0618                     	;# 
  3557  0619                     	;# 
  3558  061A                     	;# 
  3559  061B                     	;# 
  3560  061C                     	;# 
  3561  061D                     	;# 
  3562  061E                     	;# 
  3563  068C                     	;# 
  3564  068D                     	;# 
  3565  068E                     	;# 
  3566  068F                     	;# 
  3567  0690                     	;# 
  3568  0691                     	;# 
  3569  0692                     	;# 
  3570  0693                     	;# 
  3571  0694                     	;# 
  3572  070C                     	;# 
  3573  070D                     	;# 
  3574  070E                     	;# 
  3575  070F                     	;# 
  3576  0710                     	;# 
  3577  0711                     	;# 
  3578  0712                     	;# 
  3579  0713                     	;# 
  3580  0714                     	;# 
  3581  0716                     	;# 
  3582  0717                     	;# 
  3583  0718                     	;# 
  3584  0719                     	;# 
  3585  071A                     	;# 
  3586  071B                     	;# 
  3587  071C                     	;# 
  3588  071D                     	;# 
  3589  071E                     	;# 
  3590  0796                     	;# 
  3591  0797                     	;# 
  3592  0798                     	;# 
  3593  0799                     	;# 
  3594  079A                     	;# 
  3595  079B                     	;# 
  3596  079C                     	;# 
  3597  079D                     	;# 
  3598  080C                     	;# 
  3599  080D                     	;# 
  3600  080E                     	;# 
  3601  080F                     	;# 
  3602  0810                     	;# 
  3603  0811                     	;# 
  3604  0813                     	;# 
  3605  0814                     	;# 
  3606  081A                     	;# 
  3607  081A                     	;# 
  3608  081B                     	;# 
  3609  081C                     	;# 
  3610  081C                     	;# 
  3611  081D                     	;# 
  3612  081E                     	;# 
  3613  081F                     	;# 
  3614  088C                     	;# 
  3615  088D                     	;# 
  3616  088E                     	;# 
  3617  088F                     	;# 
  3618  0890                     	;# 
  3619  0891                     	;# 
  3620  0892                     	;# 
  3621  0893                     	;# 
  3622  0895                     	;# 
  3623  0896                     	;# 
  3624  0897                     	;# 
  3625  0898                     	;# 
  3626  0899                     	;# 
  3627  089A                     	;# 
  3628  089B                     	;# 
  3629  090C                     	;# 
  3630  090E                     	;# 
  3631  090F                     	;# 
  3632  091F                     	;# 
  3633  098F                     	;# 
  3634  098F                     	;# 
  3635  0990                     	;# 
  3636  0991                     	;# 
  3637  0992                     	;# 
  3638  0993                     	;# 
  3639  0994                     	;# 
  3640  0995                     	;# 
  3641  0996                     	;# 
  3642  0997                     	;# 
  3643  0A19                     	;# 
  3644  0A19                     	;# 
  3645  0A1A                     	;# 
  3646  0A1A                     	;# 
  3647  0A1B                     	;# 
  3648  0A1B                     	;# 
  3649  0A1B                     	;# 
  3650  0A1C                     	;# 
  3651  0A1C                     	;# 
  3652  0A1D                     	;# 
  3653  0A1D                     	;# 
  3654  0A1E                     	;# 
  3655  0A1E                     	;# 
  3656  0A1F                     	;# 
  3657  0A1F                     	;# 
  3658  0A1F                     	;# 
  3659  1E0F                     	;# 
  3660  1E10                     	;# 
  3661  1E11                     	;# 
  3662  1E12                     	;# 
  3663  1E13                     	;# 
  3664  1E14                     	;# 
  3665  1E15                     	;# 
  3666  1E16                     	;# 
  3667  1E17                     	;# 
  3668  1E18                     	;# 
  3669  1E19                     	;# 
  3670  1E1A                     	;# 
  3671  1E1B                     	;# 
  3672  1E1C                     	;# 
  3673  1E1D                     	;# 
  3674  1E1E                     	;# 
  3675  1E1F                     	;# 
  3676  1E20                     	;# 
  3677  1E21                     	;# 
  3678  1E22                     	;# 
  3679  1E23                     	;# 
  3680  1E24                     	;# 
  3681  1E25                     	;# 
  3682  1E26                     	;# 
  3683  1E27                     	;# 
  3684  1E28                     	;# 
  3685  1E29                     	;# 
  3686  1E2A                     	;# 
  3687  1E2B                     	;# 
  3688  1E2C                     	;# 
  3689  1E2D                     	;# 
  3690  1E2E                     	;# 
  3691  1E2F                     	;# 
  3692  1E30                     	;# 
  3693  1E31                     	;# 
  3694  1E32                     	;# 
  3695  1E33                     	;# 
  3696  1E34                     	;# 
  3697  1E35                     	;# 
  3698  1E36                     	;# 
  3699  1E37                     	;# 
  3700  1E8F                     	;# 
  3701  1E90                     	;# 
  3702  1E91                     	;# 
  3703  1E92                     	;# 
  3704  1E93                     	;# 
  3705  1E94                     	;# 
  3706  1E95                     	;# 
  3707  1E96                     	;# 
  3708  1E97                     	;# 
  3709  1E9C                     	;# 
  3710  1E9D                     	;# 
  3711  1E9E                     	;# 
  3712  1EA1                     	;# 
  3713  1EA2                     	;# 
  3714  1EA3                     	;# 
  3715  1EA4                     	;# 
  3716  1EA5                     	;# 
  3717  1EA9                     	;# 
  3718  1EAA                     	;# 
  3719  1EAB                     	;# 
  3720  1EAC                     	;# 
  3721  1EB1                     	;# 
  3722  1EB2                     	;# 
  3723  1EB3                     	;# 
  3724  1EB8                     	;# 
  3725  1EB9                     	;# 
  3726  1EBA                     	;# 
  3727  1EBB                     	;# 
  3728  1EBC                     	;# 
  3729  1EBD                     	;# 
  3730  1EBE                     	;# 
  3731  1EC3                     	;# 
  3732  1EC5                     	;# 
  3733  1EC6                     	;# 
  3734  1EC7                     	;# 
  3735  1EC8                     	;# 
  3736  1EC9                     	;# 
  3737  1ECA                     	;# 
  3738  1ECB                     	;# 
  3739  1ECC                     	;# 
  3740  1ECD                     	;# 
  3741  1ECE                     	;# 
  3742  1F10                     	;# 
  3743  1F11                     	;# 
  3744  1F12                     	;# 
  3745  1F13                     	;# 
  3746  1F14                     	;# 
  3747  1F15                     	;# 
  3748  1F16                     	;# 
  3749  1F17                     	;# 
  3750  1F18                     	;# 
  3751  1F19                     	;# 
  3752  1F1A                     	;# 
  3753  1F1B                     	;# 
  3754  1F1C                     	;# 
  3755  1F1D                     	;# 
  3756  1F1E                     	;# 
  3757  1F1F                     	;# 
  3758  1F20                     	;# 
  3759  1F21                     	;# 
  3760  1F22                     	;# 
  3761  1F23                     	;# 
  3762  1F24                     	;# 
  3763  1F25                     	;# 
  3764  1F26                     	;# 
  3765  1F27                     	;# 
  3766  1F38                     	;# 
  3767  1F39                     	;# 
  3768  1F3A                     	;# 
  3769  1F3B                     	;# 
  3770  1F3C                     	;# 
  3771  1F3D                     	;# 
  3772  1F3E                     	;# 
  3773  1F3F                     	;# 
  3774  1F43                     	;# 
  3775  1F44                     	;# 
  3776  1F45                     	;# 
  3777  1F46                     	;# 
  3778  1F47                     	;# 
  3779  1F48                     	;# 
  3780  1F49                     	;# 
  3781  1F4A                     	;# 
  3782  1F4E                     	;# 
  3783  1F4F                     	;# 
  3784  1F50                     	;# 
  3785  1F51                     	;# 
  3786  1F52                     	;# 
  3787  1F53                     	;# 
  3788  1F54                     	;# 
  3789  1F55                     	;# 
  3790  1F65                     	;# 
  3791  1F66                     	;# 
  3792  1F67                     	;# 
  3793  1F68                     	;# 
  3794  1F69                     	;# 
  3795  1F6A                     	;# 
  3796  1F6B                     	;# 
  3797  1FE4                     	;# 
  3798  1FE5                     	;# 
  3799  1FE6                     	;# 
  3800  1FE7                     	;# 
  3801  1FE8                     	;# 
  3802  1FE8                     	;# 
  3803  1FE9                     	;# 
  3804  1FEA                     	;# 
  3805  1FEB                     	;# 
  3806  1FED                     	;# 
  3807  1FEE                     	;# 
  3808  1FEF                     	;# 
  3809  0000                     	;# 
  3810  0001                     	;# 
  3811  0002                     	;# 
  3812  0003                     	;# 
  3813  0004                     	;# 
  3814  0005                     	;# 
  3815  0006                     	;# 
  3816  0007                     	;# 
  3817  0008                     	;# 
  3818  0009                     	;# 
  3819  000A                     	;# 
  3820  000B                     	;# 
  3821  000C                     	;# 
  3822  000D                     	;# 
  3823  000E                     	;# 
  3824  0010                     	;# 
  3825  0012                     	;# 
  3826  0013                     	;# 
  3827  0014                     	;# 
  3828  0016                     	;# 
  3829  0018                     	;# 
  3830  0019                     	;# 
  3831  001A                     	;# 
  3832  001C                     	;# 
  3833  008C                     	;# 
  3834  008C                     	;# 
  3835  008D                     	;# 
  3836  008E                     	;# 
  3837  008E                     	;# 
  3838  008F                     	;# 
  3839  0090                     	;# 
  3840  0090                     	;# 
  3841  0091                     	;# 
  3842  0092                     	;# 
  3843  0092                     	;# 
  3844  0093                     	;# 
  3845  0094                     	;# 
  3846  0094                     	;# 
  3847  0095                     	;# 
  3848  0096                     	;# 
  3849  0096                     	;# 
  3850  0097                     	;# 
  3851  0098                     	;# 
  3852  0099                     	;# 
  3853  009A                     	;# 
  3854  009B                     	;# 
  3855  009B                     	;# 
  3856  009C                     	;# 
  3857  009D                     	;# 
  3858  009D                     	;# 
  3859  009E                     	;# 
  3860  009F                     	;# 
  3861  010C                     	;# 
  3862  010C                     	;# 
  3863  010D                     	;# 
  3864  010E                     	;# 
  3865  010F                     	;# 
  3866  010F                     	;# 
  3867  0110                     	;# 
  3868  0111                     	;# 
  3869  0112                     	;# 
  3870  0113                     	;# 
  3871  0114                     	;# 
  3872  0115                     	;# 
  3873  0116                     	;# 
  3874  0117                     	;# 
  3875  0118                     	;# 
  3876  0119                     	;# 
  3877  0119                     	;# 
  3878  0119                     	;# 
  3879  011A                     	;# 
  3880  011A                     	;# 
  3881  011A                     	;# 
  3882  011B                     	;# 
  3883  011B                     	;# 
  3884  011B                     	;# 
  3885  011B                     	;# 
  3886  011B                     	;# 
  3887  011C                     	;# 
  3888  011C                     	;# 
  3889  011C                     	;# 
  3890  011D                     	;# 
  3891  011D                     	;# 
  3892  011D                     	;# 
  3893  011E                     	;# 
  3894  011E                     	;# 
  3895  011E                     	;# 
  3896  011F                     	;# 
  3897  011F                     	;# 
  3898  011F                     	;# 
  3899  011F                     	;# 
  3900  011F                     	;# 
  3901  018C                     	;# 
  3902  018D                     	;# 
  3903  018E                     	;# 
  3904  018F                     	;# 
  3905  0190                     	;# 
  3906  0191                     	;# 
  3907  0192                     	;# 
  3908  0196                     	;# 
  3909  0197                     	;# 
  3910  0198                     	;# 
  3911  0199                     	;# 
  3912  019A                     	;# 
  3913  019B                     	;# 
  3914  019C                     	;# 
  3915  020C                     	;# 
  3916  020D                     	;# 
  3917  020E                     	;# 
  3918  020E                     	;# 
  3919  020F                     	;# 
  3920  020F                     	;# 
  3921  0210                     	;# 
  3922  0210                     	;# 
  3923  0211                     	;# 
  3924  0211                     	;# 
  3925  0212                     	;# 
  3926  0213                     	;# 
  3927  0214                     	;# 
  3928  0214                     	;# 
  3929  0215                     	;# 
  3930  0215                     	;# 
  3931  0216                     	;# 
  3932  0216                     	;# 
  3933  0217                     	;# 
  3934  0217                     	;# 
  3935  0218                     	;# 
  3936  0219                     	;# 
  3937  021A                     	;# 
  3938  021A                     	;# 
  3939  021B                     	;# 
  3940  021B                     	;# 
  3941  021C                     	;# 
  3942  021C                     	;# 
  3943  021D                     	;# 
  3944  021D                     	;# 
  3945  021E                     	;# 
  3946  021F                     	;# 
  3947  028C                     	;# 
  3948  028C                     	;# 
  3949  028D                     	;# 
  3950  028D                     	;# 
  3951  028E                     	;# 
  3952  028F                     	;# 
  3953  0290                     	;# 
  3954  0291                     	;# 
  3955  0292                     	;# 
  3956  0292                     	;# 
  3957  0293                     	;# 
  3958  0293                     	;# 
  3959  0294                     	;# 
  3960  0295                     	;# 
  3961  0296                     	;# 
  3962  0297                     	;# 
  3963  0298                     	;# 
  3964  0298                     	;# 
  3965  0299                     	;# 
  3966  0299                     	;# 
  3967  029A                     	;# 
  3968  029B                     	;# 
  3969  029C                     	;# 
  3970  029D                     	;# 
  3971  029F                     	;# 
  3972  030C                     	;# 
  3973  030C                     	;# 
  3974  030D                     	;# 
  3975  030E                     	;# 
  3976  030F                     	;# 
  3977  0310                     	;# 
  3978  0310                     	;# 
  3979  0311                     	;# 
  3980  0312                     	;# 
  3981  0313                     	;# 
  3982  0314                     	;# 
  3983  0314                     	;# 
  3984  0315                     	;# 
  3985  0316                     	;# 
  3986  0317                     	;# 
  3987  0318                     	;# 
  3988  0318                     	;# 
  3989  0319                     	;# 
  3990  031A                     	;# 
  3991  031B                     	;# 
  3992  031C                     	;# 
  3993  031C                     	;# 
  3994  031D                     	;# 
  3995  031E                     	;# 
  3996  031F                     	;# 
  3997  038C                     	;# 
  3998  038C                     	;# 
  3999  038D                     	;# 
  4000  038E                     	;# 
  4001  0390                     	;# 
  4002  0390                     	;# 
  4003  0391                     	;# 
  4004  0392                     	;# 
  4005  048C                     	;# 
  4006  048C                     	;# 
  4007  048D                     	;# 
  4008  048E                     	;# 
  4009  048F                     	;# 
  4010  048F                     	;# 
  4011  0490                     	;# 
  4012  0491                     	;# 
  4013  0492                     	;# 
  4014  0492                     	;# 
  4015  0493                     	;# 
  4016  0494                     	;# 
  4017  0495                     	;# 
  4018  0495                     	;# 
  4019  0496                     	;# 
  4020  0497                     	;# 
  4021  0498                     	;# 
  4022  0499                     	;# 
  4023  049A                     	;# 
  4024  049B                     	;# 
  4025  049C                     	;# 
  4026  049D                     	;# 
  4027  050C                     	;# 
  4028  050C                     	;# 
  4029  050D                     	;# 
  4030  050E                     	;# 
  4031  050F                     	;# 
  4032  050F                     	;# 
  4033  0510                     	;# 
  4034  0511                     	;# 
  4035  0512                     	;# 
  4036  0512                     	;# 
  4037  0513                     	;# 
  4038  0514                     	;# 
  4039  0515                     	;# 
  4040  0515                     	;# 
  4041  0516                     	;# 
  4042  0517                     	;# 
  4043  0518                     	;# 
  4044  0519                     	;# 
  4045  051A                     	;# 
  4046  051B                     	;# 
  4047  051C                     	;# 
  4048  051D                     	;# 
  4049  058C                     	;# 
  4050  058C                     	;# 
  4051  058D                     	;# 
  4052  058E                     	;# 
  4053  058F                     	;# 
  4054  058F                     	;# 
  4055  0590                     	;# 
  4056  0591                     	;# 
  4057  0592                     	;# 
  4058  0593                     	;# 
  4059  059C                     	;# 
  4060  059C                     	;# 
  4061  059D                     	;# 
  4062  059D                     	;# 
  4063  059E                     	;# 
  4064  059F                     	;# 
  4065  060C                     	;# 
  4066  060C                     	;# 
  4067  060D                     	;# 
  4068  060D                     	;# 
  4069  060E                     	;# 
  4070  060F                     	;# 
  4071  0610                     	;# 
  4072  0611                     	;# 
  4073  0612                     	;# 
  4074  0613                     	;# 
  4075  0614                     	;# 
  4076  0616                     	;# 
  4077  0616                     	;# 
  4078  0617                     	;# 
  4079  0617                     	;# 
  4080  0618                     	;# 
  4081  0619                     	;# 
  4082  061A                     	;# 
  4083  061B                     	;# 
  4084  061C                     	;# 
  4085  061D                     	;# 
  4086  061E                     	;# 
  4087  068C                     	;# 
  4088  068D                     	;# 
  4089  068E                     	;# 
  4090  068F                     	;# 
  4091  0690                     	;# 
  4092  0691                     	;# 
  4093  0692                     	;# 
  4094  0693                     	;# 
  4095  0694                     	;# 
  4096  070C                     	;# 
  4097  070D                     	;# 
  4098  070E                     	;# 
  4099  070F                     	;# 
  4100  0710                     	;# 
  4101  0711                     	;# 
  4102  0712                     	;# 
  4103  0713                     	;# 
  4104  0714                     	;# 
  4105  0716                     	;# 
  4106  0717                     	;# 
  4107  0718                     	;# 
  4108  0719                     	;# 
  4109  071A                     	;# 
  4110  071B                     	;# 
  4111  071C                     	;# 
  4112  071D                     	;# 
  4113  071E                     	;# 
  4114  0796                     	;# 
  4115  0797                     	;# 
  4116  0798                     	;# 
  4117  0799                     	;# 
  4118  079A                     	;# 
  4119  079B                     	;# 
  4120  079C                     	;# 
  4121  079D                     	;# 
  4122  080C                     	;# 
  4123  080D                     	;# 
  4124  080E                     	;# 
  4125  080F                     	;# 
  4126  0810                     	;# 
  4127  0811                     	;# 
  4128  0813                     	;# 
  4129  0814                     	;# 
  4130  081A                     	;# 
  4131  081A                     	;# 
  4132  081B                     	;# 
  4133  081C                     	;# 
  4134  081C                     	;# 
  4135  081D                     	;# 
  4136  081E                     	;# 
  4137  081F                     	;# 
  4138  088C                     	;# 
  4139  088D                     	;# 
  4140  088E                     	;# 
  4141  088F                     	;# 
  4142  0890                     	;# 
  4143  0891                     	;# 
  4144  0892                     	;# 
  4145  0893                     	;# 
  4146  0895                     	;# 
  4147  0896                     	;# 
  4148  0897                     	;# 
  4149  0898                     	;# 
  4150  0899                     	;# 
  4151  089A                     	;# 
  4152  089B                     	;# 
  4153  090C                     	;# 
  4154  090E                     	;# 
  4155  090F                     	;# 
  4156  091F                     	;# 
  4157  098F                     	;# 
  4158  098F                     	;# 
  4159  0990                     	;# 
  4160  0991                     	;# 
  4161  0992                     	;# 
  4162  0993                     	;# 
  4163  0994                     	;# 
  4164  0995                     	;# 
  4165  0996                     	;# 
  4166  0997                     	;# 
  4167  0A19                     	;# 
  4168  0A19                     	;# 
  4169  0A1A                     	;# 
  4170  0A1A                     	;# 
  4171  0A1B                     	;# 
  4172  0A1B                     	;# 
  4173  0A1B                     	;# 
  4174  0A1C                     	;# 
  4175  0A1C                     	;# 
  4176  0A1D                     	;# 
  4177  0A1D                     	;# 
  4178  0A1E                     	;# 
  4179  0A1E                     	;# 
  4180  0A1F                     	;# 
  4181  0A1F                     	;# 
  4182  0A1F                     	;# 
  4183  1E0F                     	;# 
  4184  1E10                     	;# 
  4185  1E11                     	;# 
  4186  1E12                     	;# 
  4187  1E13                     	;# 
  4188  1E14                     	;# 
  4189  1E15                     	;# 
  4190  1E16                     	;# 
  4191  1E17                     	;# 
  4192  1E18                     	;# 
  4193  1E19                     	;# 
  4194  1E1A                     	;# 
  4195  1E1B                     	;# 
  4196  1E1C                     	;# 
  4197  1E1D                     	;# 
  4198  1E1E                     	;# 
  4199  1E1F                     	;# 
  4200  1E20                     	;# 
  4201  1E21                     	;# 
  4202  1E22                     	;# 
  4203  1E23                     	;# 
  4204  1E24                     	;# 
  4205  1E25                     	;# 
  4206  1E26                     	;# 
  4207  1E27                     	;# 
  4208  1E28                     	;# 
  4209  1E29                     	;# 
  4210  1E2A                     	;# 
  4211  1E2B                     	;# 
  4212  1E2C                     	;# 
  4213  1E2D                     	;# 
  4214  1E2E                     	;# 
  4215  1E2F                     	;# 
  4216  1E30                     	;# 
  4217  1E31                     	;# 
  4218  1E32                     	;# 
  4219  1E33                     	;# 
  4220  1E34                     	;# 
  4221  1E35                     	;# 
  4222  1E36                     	;# 
  4223  1E37                     	;# 
  4224  1E8F                     	;# 
  4225  1E90                     	;# 
  4226  1E91                     	;# 
  4227  1E92                     	;# 
  4228  1E93                     	;# 
  4229  1E94                     	;# 
  4230  1E95                     	;# 
  4231  1E96                     	;# 
  4232  1E97                     	;# 
  4233  1E9C                     	;# 
  4234  1E9D                     	;# 
  4235  1E9E                     	;# 
  4236  1EA1                     	;# 
  4237  1EA2                     	;# 
  4238  1EA3                     	;# 
  4239  1EA4                     	;# 
  4240  1EA5                     	;# 
  4241  1EA9                     	;# 
  4242  1EAA                     	;# 
  4243  1EAB                     	;# 
  4244  1EAC                     	;# 
  4245  1EB1                     	;# 
  4246  1EB2                     	;# 
  4247  1EB3                     	;# 
  4248  1EB8                     	;# 
  4249  1EB9                     	;# 
  4250  1EBA                     	;# 
  4251  1EBB                     	;# 
  4252  1EBC                     	;# 
  4253  1EBD                     	;# 
  4254  1EBE                     	;# 
  4255  1EC3                     	;# 
  4256  1EC5                     	;# 
  4257  1EC6                     	;# 
  4258  1EC7                     	;# 
  4259  1EC8                     	;# 
  4260  1EC9                     	;# 
  4261  1ECA                     	;# 
  4262  1ECB                     	;# 
  4263  1ECC                     	;# 
  4264  1ECD                     	;# 
  4265  1ECE                     	;# 
  4266  1F10                     	;# 
  4267  1F11                     	;# 
  4268  1F12                     	;# 
  4269  1F13                     	;# 
  4270  1F14                     	;# 
  4271  1F15                     	;# 
  4272  1F16                     	;# 
  4273  1F17                     	;# 
  4274  1F18                     	;# 
  4275  1F19                     	;# 
  4276  1F1A                     	;# 
  4277  1F1B                     	;# 
  4278  1F1C                     	;# 
  4279  1F1D                     	;# 
  4280  1F1E                     	;# 
  4281  1F1F                     	;# 
  4282  1F20                     	;# 
  4283  1F21                     	;# 
  4284  1F22                     	;# 
  4285  1F23                     	;# 
  4286  1F24                     	;# 
  4287  1F25                     	;# 
  4288  1F26                     	;# 
  4289  1F27                     	;# 
  4290  1F38                     	;# 
  4291  1F39                     	;# 
  4292  1F3A                     	;# 
  4293  1F3B                     	;# 
  4294  1F3C                     	;# 
  4295  1F3D                     	;# 
  4296  1F3E                     	;# 
  4297  1F3F                     	;# 
  4298  1F43                     	;# 
  4299  1F44                     	;# 
  4300  1F45                     	;# 
  4301  1F46                     	;# 
  4302  1F47                     	;# 
  4303  1F48                     	;# 
  4304  1F49                     	;# 
  4305  1F4A                     	;# 
  4306  1F4E                     	;# 
  4307  1F4F                     	;# 
  4308  1F50                     	;# 
  4309  1F51                     	;# 
  4310  1F52                     	;# 
  4311  1F53                     	;# 
  4312  1F54                     	;# 
  4313  1F55                     	;# 
  4314  1F65                     	;# 
  4315  1F66                     	;# 
  4316  1F67                     	;# 
  4317  1F68                     	;# 
  4318  1F69                     	;# 
  4319  1F6A                     	;# 
  4320  1F6B                     	;# 
  4321  1FE4                     	;# 
  4322  1FE5                     	;# 
  4323  1FE6                     	;# 
  4324  1FE7                     	;# 
  4325  1FE8                     	;# 
  4326  1FE8                     	;# 
  4327  1FE9                     	;# 
  4328  1FEA                     	;# 
  4329  1FEB                     	;# 
  4330  1FED                     	;# 
  4331  1FEE                     	;# 
  4332  1FEF                     	;# 
  4333  0000                     	;# 
  4334  0001                     	;# 
  4335  0002                     	;# 
  4336  0003                     	;# 
  4337  0004                     	;# 
  4338  0005                     	;# 
  4339  0006                     	;# 
  4340  0007                     	;# 
  4341  0008                     	;# 
  4342  0009                     	;# 
  4343  000A                     	;# 
  4344  000B                     	;# 
  4345  000C                     	;# 
  4346  000D                     	;# 
  4347  000E                     	;# 
  4348  0010                     	;# 
  4349  0012                     	;# 
  4350  0013                     	;# 
  4351  0014                     	;# 
  4352  0016                     	;# 
  4353  0018                     	;# 
  4354  0019                     	;# 
  4355  001A                     	;# 
  4356  001C                     	;# 
  4357  008C                     	;# 
  4358  008C                     	;# 
  4359  008D                     	;# 
  4360  008E                     	;# 
  4361  008E                     	;# 
  4362  008F                     	;# 
  4363  0090                     	;# 
  4364  0090                     	;# 
  4365  0091                     	;# 
  4366  0092                     	;# 
  4367  0092                     	;# 
  4368  0093                     	;# 
  4369  0094                     	;# 
  4370  0094                     	;# 
  4371  0095                     	;# 
  4372  0096                     	;# 
  4373  0096                     	;# 
  4374  0097                     	;# 
  4375  0098                     	;# 
  4376  0099                     	;# 
  4377  009A                     	;# 
  4378  009B                     	;# 
  4379  009B                     	;# 
  4380  009C                     	;# 
  4381  009D                     	;# 
  4382  009D                     	;# 
  4383  009E                     	;# 
  4384  009F                     	;# 
  4385  010C                     	;# 
  4386  010C                     	;# 
  4387  010D                     	;# 
  4388  010E                     	;# 
  4389  010F                     	;# 
  4390  010F                     	;# 
  4391  0110                     	;# 
  4392  0111                     	;# 
  4393  0112                     	;# 
  4394  0113                     	;# 
  4395  0114                     	;# 
  4396  0115                     	;# 
  4397  0116                     	;# 
  4398  0117                     	;# 
  4399  0118                     	;# 
  4400  0119                     	;# 
  4401  0119                     	;# 
  4402  0119                     	;# 
  4403  011A                     	;# 
  4404  011A                     	;# 
  4405  011A                     	;# 
  4406  011B                     	;# 
  4407  011B                     	;# 
  4408  011B                     	;# 
  4409  011B                     	;# 
  4410  011B                     	;# 
  4411  011C                     	;# 
  4412  011C                     	;# 
  4413  011C                     	;# 
  4414  011D                     	;# 
  4415  011D                     	;# 
  4416  011D                     	;# 
  4417  011E                     	;# 
  4418  011E                     	;# 
  4419  011E                     	;# 
  4420  011F                     	;# 
  4421  011F                     	;# 
  4422  011F                     	;# 
  4423  011F                     	;# 
  4424  011F                     	;# 
  4425  018C                     	;# 
  4426  018D                     	;# 
  4427  018E                     	;# 
  4428  018F                     	;# 
  4429  0190                     	;# 
  4430  0191                     	;# 
  4431  0192                     	;# 
  4432  0196                     	;# 
  4433  0197                     	;# 
  4434  0198                     	;# 
  4435  0199                     	;# 
  4436  019A                     	;# 
  4437  019B                     	;# 
  4438  019C                     	;# 
  4439  020C                     	;# 
  4440  020D                     	;# 
  4441  020E                     	;# 
  4442  020E                     	;# 
  4443  020F                     	;# 
  4444  020F                     	;# 
  4445  0210                     	;# 
  4446  0210                     	;# 
  4447  0211                     	;# 
  4448  0211                     	;# 
  4449  0212                     	;# 
  4450  0213                     	;# 
  4451  0214                     	;# 
  4452  0214                     	;# 
  4453  0215                     	;# 
  4454  0215                     	;# 
  4455  0216                     	;# 
  4456  0216                     	;# 
  4457  0217                     	;# 
  4458  0217                     	;# 
  4459  0218                     	;# 
  4460  0219                     	;# 
  4461  021A                     	;# 
  4462  021A                     	;# 
  4463  021B                     	;# 
  4464  021B                     	;# 
  4465  021C                     	;# 
  4466  021C                     	;# 
  4467  021D                     	;# 
  4468  021D                     	;# 
  4469  021E                     	;# 
  4470  021F                     	;# 
  4471  028C                     	;# 
  4472  028C                     	;# 
  4473  028D                     	;# 
  4474  028D                     	;# 
  4475  028E                     	;# 
  4476  028F                     	;# 
  4477  0290                     	;# 
  4478  0291                     	;# 
  4479  0292                     	;# 
  4480  0292                     	;# 
  4481  0293                     	;# 
  4482  0293                     	;# 
  4483  0294                     	;# 
  4484  0295                     	;# 
  4485  0296                     	;# 
  4486  0297                     	;# 
  4487  0298                     	;# 
  4488  0298                     	;# 
  4489  0299                     	;# 
  4490  0299                     	;# 
  4491  029A                     	;# 
  4492  029B                     	;# 
  4493  029C                     	;# 
  4494  029D                     	;# 
  4495  029F                     	;# 
  4496  030C                     	;# 
  4497  030C                     	;# 
  4498  030D                     	;# 
  4499  030E                     	;# 
  4500  030F                     	;# 
  4501  0310                     	;# 
  4502  0310                     	;# 
  4503  0311                     	;# 
  4504  0312                     	;# 
  4505  0313                     	;# 
  4506  0314                     	;# 
  4507  0314                     	;# 
  4508  0315                     	;# 
  4509  0316                     	;# 
  4510  0317                     	;# 
  4511  0318                     	;# 
  4512  0318                     	;# 
  4513  0319                     	;# 
  4514  031A                     	;# 
  4515  031B                     	;# 
  4516  031C                     	;# 
  4517  031C                     	;# 
  4518  031D                     	;# 
  4519  031E                     	;# 
  4520  031F                     	;# 
  4521  038C                     	;# 
  4522  038C                     	;# 
  4523  038D                     	;# 
  4524  038E                     	;# 
  4525  0390                     	;# 
  4526  0390                     	;# 
  4527  0391                     	;# 
  4528  0392                     	;# 
  4529  048C                     	;# 
  4530  048C                     	;# 
  4531  048D                     	;# 
  4532  048E                     	;# 
  4533  048F                     	;# 
  4534  048F                     	;# 
  4535  0490                     	;# 
  4536  0491                     	;# 
  4537  0492                     	;# 
  4538  0492                     	;# 
  4539  0493                     	;# 
  4540  0494                     	;# 
  4541  0495                     	;# 
  4542  0495                     	;# 
  4543  0496                     	;# 
  4544  0497                     	;# 
  4545  0498                     	;# 
  4546  0499                     	;# 
  4547  049A                     	;# 
  4548  049B                     	;# 
  4549  049C                     	;# 
  4550  049D                     	;# 
  4551  050C                     	;# 
  4552  050C                     	;# 
  4553  050D                     	;# 
  4554  050E                     	;# 
  4555  050F                     	;# 
  4556  050F                     	;# 
  4557  0510                     	;# 
  4558  0511                     	;# 
  4559  0512                     	;# 
  4560  0512                     	;# 
  4561  0513                     	;# 
  4562  0514                     	;# 
  4563  0515                     	;# 
  4564  0515                     	;# 
  4565  0516                     	;# 
  4566  0517                     	;# 
  4567  0518                     	;# 
  4568  0519                     	;# 
  4569  051A                     	;# 
  4570  051B                     	;# 
  4571  051C                     	;# 
  4572  051D                     	;# 
  4573  058C                     	;# 
  4574  058C                     	;# 
  4575  058D                     	;# 
  4576  058E                     	;# 
  4577  058F                     	;# 
  4578  058F                     	;# 
  4579  0590                     	;# 
  4580  0591                     	;# 
  4581  0592                     	;# 
  4582  0593                     	;# 
  4583  059C                     	;# 
  4584  059C                     	;# 
  4585  059D                     	;# 
  4586  059D                     	;# 
  4587  059E                     	;# 
  4588  059F                     	;# 
  4589  060C                     	;# 
  4590  060C                     	;# 
  4591  060D                     	;# 
  4592  060D                     	;# 
  4593  060E                     	;# 
  4594  060F                     	;# 
  4595  0610                     	;# 
  4596  0611                     	;# 
  4597  0612                     	;# 
  4598  0613                     	;# 
  4599  0614                     	;# 
  4600  0616                     	;# 
  4601  0616                     	;# 
  4602  0617                     	;# 
  4603  0617                     	;# 
  4604  0618                     	;# 
  4605  0619                     	;# 
  4606  061A                     	;# 
  4607  061B                     	;# 
  4608  061C                     	;# 
  4609  061D                     	;# 
  4610  061E                     	;# 
  4611  068C                     	;# 
  4612  068D                     	;# 
  4613  068E                     	;# 
  4614  068F                     	;# 
  4615  0690                     	;# 
  4616  0691                     	;# 
  4617  0692                     	;# 
  4618  0693                     	;# 
  4619  0694                     	;# 
  4620  070C                     	;# 
  4621  070D                     	;# 
  4622  070E                     	;# 
  4623  070F                     	;# 
  4624  0710                     	;# 
  4625  0711                     	;# 
  4626  0712                     	;# 
  4627  0713                     	;# 
  4628  0714                     	;# 
  4629  0716                     	;# 
  4630  0717                     	;# 
  4631  0718                     	;# 
  4632  0719                     	;# 
  4633  071A                     	;# 
  4634  071B                     	;# 
  4635  071C                     	;# 
  4636  071D                     	;# 
  4637  071E                     	;# 
  4638  0796                     	;# 
  4639  0797                     	;# 
  4640  0798                     	;# 
  4641  0799                     	;# 
  4642  079A                     	;# 
  4643  079B                     	;# 
  4644  079C                     	;# 
  4645  079D                     	;# 
  4646  080C                     	;# 
  4647  080D                     	;# 
  4648  080E                     	;# 
  4649  080F                     	;# 
  4650  0810                     	;# 
  4651  0811                     	;# 
  4652  0813                     	;# 
  4653  0814                     	;# 
  4654  081A                     	;# 
  4655  081A                     	;# 
  4656  081B                     	;# 
  4657  081C                     	;# 
  4658  081C                     	;# 
  4659  081D                     	;# 
  4660  081E                     	;# 
  4661  081F                     	;# 
  4662  088C                     	;# 
  4663  088D                     	;# 
  4664  088E                     	;# 
  4665  088F                     	;# 
  4666  0890                     	;# 
  4667  0891                     	;# 
  4668  0892                     	;# 
  4669  0893                     	;# 
  4670  0895                     	;# 
  4671  0896                     	;# 
  4672  0897                     	;# 
  4673  0898                     	;# 
  4674  0899                     	;# 
  4675  089A                     	;# 
  4676  089B                     	;# 
  4677  090C                     	;# 
  4678  090E                     	;# 
  4679  090F                     	;# 
  4680  091F                     	;# 
  4681  098F                     	;# 
  4682  098F                     	;# 
  4683  0990                     	;# 
  4684  0991                     	;# 
  4685  0992                     	;# 
  4686  0993                     	;# 
  4687  0994                     	;# 
  4688  0995                     	;# 
  4689  0996                     	;# 
  4690  0997                     	;# 
  4691  0A19                     	;# 
  4692  0A19                     	;# 
  4693  0A1A                     	;# 
  4694  0A1A                     	;# 
  4695  0A1B                     	;# 
  4696  0A1B                     	;# 
  4697  0A1B                     	;# 
  4698  0A1C                     	;# 
  4699  0A1C                     	;# 
  4700  0A1D                     	;# 
  4701  0A1D                     	;# 
  4702  0A1E                     	;# 
  4703  0A1E                     	;# 
  4704  0A1F                     	;# 
  4705  0A1F                     	;# 
  4706  0A1F                     	;# 
  4707  1E0F                     	;# 
  4708  1E10                     	;# 
  4709  1E11                     	;# 
  4710  1E12                     	;# 
  4711  1E13                     	;# 
  4712  1E14                     	;# 
  4713  1E15                     	;# 
  4714  1E16                     	;# 
  4715  1E17                     	;# 
  4716  1E18                     	;# 
  4717  1E19                     	;# 
  4718  1E1A                     	;# 
  4719  1E1B                     	;# 
  4720  1E1C                     	;# 
  4721  1E1D                     	;# 
  4722  1E1E                     	;# 
  4723  1E1F                     	;# 
  4724  1E20                     	;# 
  4725  1E21                     	;# 
  4726  1E22                     	;# 
  4727  1E23                     	;# 
  4728  1E24                     	;# 
  4729  1E25                     	;# 
  4730  1E26                     	;# 
  4731  1E27                     	;# 
  4732  1E28                     	;# 
  4733  1E29                     	;# 
  4734  1E2A                     	;# 
  4735  1E2B                     	;# 
  4736  1E2C                     	;# 
  4737  1E2D                     	;# 
  4738  1E2E                     	;# 
  4739  1E2F                     	;# 
  4740  1E30                     	;# 
  4741  1E31                     	;# 
  4742  1E32                     	;# 
  4743  1E33                     	;# 
  4744  1E34                     	;# 
  4745  1E35                     	;# 
  4746  1E36                     	;# 
  4747  1E37                     	;# 
  4748  1E8F                     	;# 
  4749  1E90                     	;# 
  4750  1E91                     	;# 
  4751  1E92                     	;# 
  4752  1E93                     	;# 
  4753  1E94                     	;# 
  4754  1E95                     	;# 
  4755  1E96                     	;# 
  4756  1E97                     	;# 
  4757  1E9C                     	;# 
  4758  1E9D                     	;# 
  4759  1E9E                     	;# 
  4760  1EA1                     	;# 
  4761  1EA2                     	;# 
  4762  1EA3                     	;# 
  4763  1EA4                     	;# 
  4764  1EA5                     	;# 
  4765  1EA9                     	;# 
  4766  1EAA                     	;# 
  4767  1EAB                     	;# 
  4768  1EAC                     	;# 
  4769  1EB1                     	;# 
  4770  1EB2                     	;# 
  4771  1EB3                     	;# 
  4772  1EB8                     	;# 
  4773  1EB9                     	;# 
  4774  1EBA                     	;# 
  4775  1EBB                     	;# 
  4776  1EBC                     	;# 
  4777  1EBD                     	;# 
  4778  1EBE                     	;# 
  4779  1EC3                     	;# 
  4780  1EC5                     	;# 
  4781  1EC6                     	;# 
  4782  1EC7                     	;# 
  4783  1EC8                     	;# 
  4784  1EC9                     	;# 
  4785  1ECA                     	;# 
  4786  1ECB                     	;# 
  4787  1ECC                     	;# 
  4788  1ECD                     	;# 
  4789  1ECE                     	;# 
  4790  1F10                     	;# 
  4791  1F11                     	;# 
  4792  1F12                     	;# 
  4793  1F13                     	;# 
  4794  1F14                     	;# 
  4795  1F15                     	;# 
  4796  1F16                     	;# 
  4797  1F17                     	;# 
  4798  1F18                     	;# 
  4799  1F19                     	;# 
  4800  1F1A                     	;# 
  4801  1F1B                     	;# 
  4802  1F1C                     	;# 
  4803  1F1D                     	;# 
  4804  1F1E                     	;# 
  4805  1F1F                     	;# 
  4806  1F20                     	;# 
  4807  1F21                     	;# 
  4808  1F22                     	;# 
  4809  1F23                     	;# 
  4810  1F24                     	;# 
  4811  1F25                     	;# 
  4812  1F26                     	;# 
  4813  1F27                     	;# 
  4814  1F38                     	;# 
  4815  1F39                     	;# 
  4816  1F3A                     	;# 
  4817  1F3B                     	;# 
  4818  1F3C                     	;# 
  4819  1F3D                     	;# 
  4820  1F3E                     	;# 
  4821  1F3F                     	;# 
  4822  1F43                     	;# 
  4823  1F44                     	;# 
  4824  1F45                     	;# 
  4825  1F46                     	;# 
  4826  1F47                     	;# 
  4827  1F48                     	;# 
  4828  1F49                     	;# 
  4829  1F4A                     	;# 
  4830  1F4E                     	;# 
  4831  1F4F                     	;# 
  4832  1F50                     	;# 
  4833  1F51                     	;# 
  4834  1F52                     	;# 
  4835  1F53                     	;# 
  4836  1F54                     	;# 
  4837  1F55                     	;# 
  4838  1F65                     	;# 
  4839  1F66                     	;# 
  4840  1F67                     	;# 
  4841  1F68                     	;# 
  4842  1F69                     	;# 
  4843  1F6A                     	;# 
  4844  1F6B                     	;# 
  4845  1FE4                     	;# 
  4846  1FE5                     	;# 
  4847  1FE6                     	;# 
  4848  1FE7                     	;# 
  4849  1FE8                     	;# 
  4850  1FE8                     	;# 
  4851  1FE9                     	;# 
  4852  1FEA                     	;# 
  4853  1FEB                     	;# 
  4854  1FED                     	;# 
  4855  1FEE                     	;# 
  4856  1FEF                     	;# 
  4857  0000                     	;# 
  4858  0001                     	;# 
  4859  0002                     	;# 
  4860  0003                     	;# 
  4861  0004                     	;# 
  4862  0005                     	;# 
  4863  0006                     	;# 
  4864  0007                     	;# 
  4865  0008                     	;# 
  4866  0009                     	;# 
  4867  000A                     	;# 
  4868  000B                     	;# 
  4869  000C                     	;# 
  4870  000D                     	;# 
  4871  000E                     	;# 
  4872  0010                     	;# 
  4873  0012                     	;# 
  4874  0013                     	;# 
  4875  0014                     	;# 
  4876  0016                     	;# 
  4877  0018                     	;# 
  4878  0019                     	;# 
  4879  001A                     	;# 
  4880  001C                     	;# 
  4881  008C                     	;# 
  4882  008C                     	;# 
  4883  008D                     	;# 
  4884  008E                     	;# 
  4885  008E                     	;# 
  4886  008F                     	;# 
  4887  0090                     	;# 
  4888  0090                     	;# 
  4889  0091                     	;# 
  4890  0092                     	;# 
  4891  0092                     	;# 
  4892  0093                     	;# 
  4893  0094                     	;# 
  4894  0094                     	;# 
  4895  0095                     	;# 
  4896  0096                     	;# 
  4897  0096                     	;# 
  4898  0097                     	;# 
  4899  0098                     	;# 
  4900  0099                     	;# 
  4901  009A                     	;# 
  4902  009B                     	;# 
  4903  009B                     	;# 
  4904  009C                     	;# 
  4905  009D                     	;# 
  4906  009D                     	;# 
  4907  009E                     	;# 
  4908  009F                     	;# 
  4909  010C                     	;# 
  4910  010C                     	;# 
  4911  010D                     	;# 
  4912  010E                     	;# 
  4913  010F                     	;# 
  4914  010F                     	;# 
  4915  0110                     	;# 
  4916  0111                     	;# 
  4917  0112                     	;# 
  4918  0113                     	;# 
  4919  0114                     	;# 
  4920  0115                     	;# 
  4921  0116                     	;# 
  4922  0117                     	;# 
  4923  0118                     	;# 
  4924  0119                     	;# 
  4925  0119                     	;# 
  4926  0119                     	;# 
  4927  011A                     	;# 
  4928  011A                     	;# 
  4929  011A                     	;# 
  4930  011B                     	;# 
  4931  011B                     	;# 
  4932  011B                     	;# 
  4933  011B                     	;# 
  4934  011B                     	;# 
  4935  011C                     	;# 
  4936  011C                     	;# 
  4937  011C                     	;# 
  4938  011D                     	;# 
  4939  011D                     	;# 
  4940  011D                     	;# 
  4941  011E                     	;# 
  4942  011E                     	;# 
  4943  011E                     	;# 
  4944  011F                     	;# 
  4945  011F                     	;# 
  4946  011F                     	;# 
  4947  011F                     	;# 
  4948  011F                     	;# 
  4949  018C                     	;# 
  4950  018D                     	;# 
  4951  018E                     	;# 
  4952  018F                     	;# 
  4953  0190                     	;# 
  4954  0191                     	;# 
  4955  0192                     	;# 
  4956  0196                     	;# 
  4957  0197                     	;# 
  4958  0198                     	;# 
  4959  0199                     	;# 
  4960  019A                     	;# 
  4961  019B                     	;# 
  4962  019C                     	;# 
  4963  020C                     	;# 
  4964  020D                     	;# 
  4965  020E                     	;# 
  4966  020E                     	;# 
  4967  020F                     	;# 
  4968  020F                     	;# 
  4969  0210                     	;# 
  4970  0210                     	;# 
  4971  0211                     	;# 
  4972  0211                     	;# 
  4973  0212                     	;# 
  4974  0213                     	;# 
  4975  0214                     	;# 
  4976  0214                     	;# 
  4977  0215                     	;# 
  4978  0215                     	;# 
  4979  0216                     	;# 
  4980  0216                     	;# 
  4981  0217                     	;# 
  4982  0217                     	;# 
  4983  0218                     	;# 
  4984  0219                     	;# 
  4985  021A                     	;# 
  4986  021A                     	;# 
  4987  021B                     	;# 
  4988  021B                     	;# 
  4989  021C                     	;# 
  4990  021C                     	;# 
  4991  021D                     	;# 
  4992  021D                     	;# 
  4993  021E                     	;# 
  4994  021F                     	;# 
  4995  028C                     	;# 
  4996  028C                     	;# 
  4997  028D                     	;# 
  4998  028D                     	;# 
  4999  028E                     	;# 
  5000  028F                     	;# 
  5001  0290                     	;# 
  5002  0291                     	;# 
  5003  0292                     	;# 
  5004  0292                     	;# 
  5005  0293                     	;# 
  5006  0293                     	;# 
  5007  0294                     	;# 
  5008  0295                     	;# 
  5009  0296                     	;# 
  5010  0297                     	;# 
  5011  0298                     	;# 
  5012  0298                     	;# 
  5013  0299                     	;# 
  5014  0299                     	;# 
  5015  029A                     	;# 
  5016  029B                     	;# 
  5017  029C                     	;# 
  5018  029D                     	;# 
  5019  029F                     	;# 
  5020  030C                     	;# 
  5021  030C                     	;# 
  5022  030D                     	;# 
  5023  030E                     	;# 
  5024  030F                     	;# 
  5025  0310                     	;# 
  5026  0310                     	;# 
  5027  0311                     	;# 
  5028  0312                     	;# 
  5029  0313                     	;# 
  5030  0314                     	;# 
  5031  0314                     	;# 
  5032  0315                     	;# 
  5033  0316                     	;# 
  5034  0317                     	;# 
  5035  0318                     	;# 
  5036  0318                     	;# 
  5037  0319                     	;# 
  5038  031A                     	;# 
  5039  031B                     	;# 
  5040  031C                     	;# 
  5041  031C                     	;# 
  5042  031D                     	;# 
  5043  031E                     	;# 
  5044  031F                     	;# 
  5045  038C                     	;# 
  5046  038C                     	;# 
  5047  038D                     	;# 
  5048  038E                     	;# 
  5049  0390                     	;# 
  5050  0390                     	;# 
  5051  0391                     	;# 
  5052  0392                     	;# 
  5053  048C                     	;# 
  5054  048C                     	;# 
  5055  048D                     	;# 
  5056  048E                     	;# 
  5057  048F                     	;# 
  5058  048F                     	;# 
  5059  0490                     	;# 
  5060  0491                     	;# 
  5061  0492                     	;# 
  5062  0492                     	;# 
  5063  0493                     	;# 
  5064  0494                     	;# 
  5065  0495                     	;# 
  5066  0495                     	;# 
  5067  0496                     	;# 
  5068  0497                     	;# 
  5069  0498                     	;# 
  5070  0499                     	;# 
  5071  049A                     	;# 
  5072  049B                     	;# 
  5073  049C                     	;# 
  5074  049D                     	;# 
  5075  050C                     	;# 
  5076  050C                     	;# 
  5077  050D                     	;# 
  5078  050E                     	;# 
  5079  050F                     	;# 
  5080  050F                     	;# 
  5081  0510                     	;# 
  5082  0511                     	;# 
  5083  0512                     	;# 
  5084  0512                     	;# 
  5085  0513                     	;# 
  5086  0514                     	;# 
  5087  0515                     	;# 
  5088  0515                     	;# 
  5089  0516                     	;# 
  5090  0517                     	;# 
  5091  0518                     	;# 
  5092  0519                     	;# 
  5093  051A                     	;# 
  5094  051B                     	;# 
  5095  051C                     	;# 
  5096  051D                     	;# 
  5097  058C                     	;# 
  5098  058C                     	;# 
  5099  058D                     	;# 
  5100  058E                     	;# 
  5101  058F                     	;# 
  5102  058F                     	;# 
  5103  0590                     	;# 
  5104  0591                     	;# 
  5105  0592                     	;# 
  5106  0593                     	;# 
  5107  059C                     	;# 
  5108  059C                     	;# 
  5109  059D                     	;# 
  5110  059D                     	;# 
  5111  059E                     	;# 
  5112  059F                     	;# 
  5113  060C                     	;# 
  5114  060C                     	;# 
  5115  060D                     	;# 
  5116  060D                     	;# 
  5117  060E                     	;# 
  5118  060F                     	;# 
  5119  0610                     	;# 
  5120  0611                     	;# 
  5121  0612                     	;# 
  5122  0613                     	;# 
  5123  0614                     	;# 
  5124  0616                     	;# 
  5125  0616                     	;# 
  5126  0617                     	;# 
  5127  0617                     	;# 
  5128  0618                     	;# 
  5129  0619                     	;# 
  5130  061A                     	;# 
  5131  061B                     	;# 
  5132  061C                     	;# 
  5133  061D                     	;# 
  5134  061E                     	;# 
  5135  068C                     	;# 
  5136  068D                     	;# 
  5137  068E                     	;# 
  5138  068F                     	;# 
  5139  0690                     	;# 
  5140  0691                     	;# 
  5141  0692                     	;# 
  5142  0693                     	;# 
  5143  0694                     	;# 
  5144  070C                     	;# 
  5145  070D                     	;# 
  5146  070E                     	;# 
  5147  070F                     	;# 
  5148  0710                     	;# 
  5149  0711                     	;# 
  5150  0712                     	;# 
  5151  0713                     	;# 
  5152  0714                     	;# 
  5153  0716                     	;# 
  5154  0717                     	;# 
  5155  0718                     	;# 
  5156  0719                     	;# 
  5157  071A                     	;# 
  5158  071B                     	;# 
  5159  071C                     	;# 
  5160  071D                     	;# 
  5161  071E                     	;# 
  5162  0796                     	;# 
  5163  0797                     	;# 
  5164  0798                     	;# 
  5165  0799                     	;# 
  5166  079A                     	;# 
  5167  079B                     	;# 
  5168  079C                     	;# 
  5169  079D                     	;# 
  5170  080C                     	;# 
  5171  080D                     	;# 
  5172  080E                     	;# 
  5173  080F                     	;# 
  5174  0810                     	;# 
  5175  0811                     	;# 
  5176  0813                     	;# 
  5177  0814                     	;# 
  5178  081A                     	;# 
  5179  081A                     	;# 
  5180  081B                     	;# 
  5181  081C                     	;# 
  5182  081C                     	;# 
  5183  081D                     	;# 
  5184  081E                     	;# 
  5185  081F                     	;# 
  5186  088C                     	;# 
  5187  088D                     	;# 
  5188  088E                     	;# 
  5189  088F                     	;# 
  5190  0890                     	;# 
  5191  0891                     	;# 
  5192  0892                     	;# 
  5193  0893                     	;# 
  5194  0895                     	;# 
  5195  0896                     	;# 
  5196  0897                     	;# 
  5197  0898                     	;# 
  5198  0899                     	;# 
  5199  089A                     	;# 
  5200  089B                     	;# 
  5201  090C                     	;# 
  5202  090E                     	;# 
  5203  090F                     	;# 
  5204  091F                     	;# 
  5205  098F                     	;# 
  5206  098F                     	;# 
  5207  0990                     	;# 
  5208  0991                     	;# 
  5209  0992                     	;# 
  5210  0993                     	;# 
  5211  0994                     	;# 
  5212  0995                     	;# 
  5213  0996                     	;# 
  5214  0997                     	;# 
  5215  0A19                     	;# 
  5216  0A19                     	;# 
  5217  0A1A                     	;# 
  5218  0A1A                     	;# 
  5219  0A1B                     	;# 
  5220  0A1B                     	;# 
  5221  0A1B                     	;# 
  5222  0A1C                     	;# 
  5223  0A1C                     	;# 
  5224  0A1D                     	;# 
  5225  0A1D                     	;# 
  5226  0A1E                     	;# 
  5227  0A1E                     	;# 
  5228  0A1F                     	;# 
  5229  0A1F                     	;# 
  5230  0A1F                     	;# 
  5231  1E0F                     	;# 
  5232  1E10                     	;# 
  5233  1E11                     	;# 
  5234  1E12                     	;# 
  5235  1E13                     	;# 
  5236  1E14                     	;# 
  5237  1E15                     	;# 
  5238  1E16                     	;# 
  5239  1E17                     	;# 
  5240  1E18                     	;# 
  5241  1E19                     	;# 
  5242  1E1A                     	;# 
  5243  1E1B                     	;# 
  5244  1E1C                     	;# 
  5245  1E1D                     	;# 
  5246  1E1E                     	;# 
  5247  1E1F                     	;# 
  5248  1E20                     	;# 
  5249  1E21                     	;# 
  5250  1E22                     	;# 
  5251  1E23                     	;# 
  5252  1E24                     	;# 
  5253  1E25                     	;# 
  5254  1E26                     	;# 
  5255  1E27                     	;# 
  5256  1E28                     	;# 
  5257  1E29                     	;# 
  5258  1E2A                     	;# 
  5259  1E2B                     	;# 
  5260  1E2C                     	;# 
  5261  1E2D                     	;# 
  5262  1E2E                     	;# 
  5263  1E2F                     	;# 
  5264  1E30                     	;# 
  5265  1E31                     	;# 
  5266  1E32                     	;# 
  5267  1E33                     	;# 
  5268  1E34                     	;# 
  5269  1E35                     	;# 
  5270  1E36                     	;# 
  5271  1E37                     	;# 
  5272  1E8F                     	;# 
  5273  1E90                     	;# 
  5274  1E91                     	;# 
  5275  1E92                     	;# 
  5276  1E93                     	;# 
  5277  1E94                     	;# 
  5278  1E95                     	;# 
  5279  1E96                     	;# 
  5280  1E97                     	;# 
  5281  1E9C                     	;# 
  5282  1E9D                     	;# 
  5283  1E9E                     	;# 
  5284  1EA1                     	;# 
  5285  1EA2                     	;# 
  5286  1EA3                     	;# 
  5287  1EA4                     	;# 
  5288  1EA5                     	;# 
  5289  1EA9                     	;# 
  5290  1EAA                     	;# 
  5291  1EAB                     	;# 
  5292  1EAC                     	;# 
  5293  1EB1                     	;# 
  5294  1EB2                     	;# 
  5295  1EB3                     	;# 
  5296  1EB8                     	;# 
  5297  1EB9                     	;# 
  5298  1EBA                     	;# 
  5299  1EBB                     	;# 
  5300  1EBC                     	;# 
  5301  1EBD                     	;# 
  5302  1EBE                     	;# 
  5303  1EC3                     	;# 
  5304  1EC5                     	;# 
  5305  1EC6                     	;# 
  5306  1EC7                     	;# 
  5307  1EC8                     	;# 
  5308  1EC9                     	;# 
  5309  1ECA                     	;# 
  5310  1ECB                     	;# 
  5311  1ECC                     	;# 
  5312  1ECD                     	;# 
  5313  1ECE                     	;# 
  5314  1F10                     	;# 
  5315  1F11                     	;# 
  5316  1F12                     	;# 
  5317  1F13                     	;# 
  5318  1F14                     	;# 
  5319  1F15                     	;# 
  5320  1F16                     	;# 
  5321  1F17                     	;# 
  5322  1F18                     	;# 
  5323  1F19                     	;# 
  5324  1F1A                     	;# 
  5325  1F1B                     	;# 
  5326  1F1C                     	;# 
  5327  1F1D                     	;# 
  5328  1F1E                     	;# 
  5329  1F1F                     	;# 
  5330  1F20                     	;# 
  5331  1F21                     	;# 
  5332  1F22                     	;# 
  5333  1F23                     	;# 
  5334  1F24                     	;# 
  5335  1F25                     	;# 
  5336  1F26                     	;# 
  5337  1F27                     	;# 
  5338  1F38                     	;# 
  5339  1F39                     	;# 
  5340  1F3A                     	;# 
  5341  1F3B                     	;# 
  5342  1F3C                     	;# 
  5343  1F3D                     	;# 
  5344  1F3E                     	;# 
  5345  1F3F                     	;# 
  5346  1F43                     	;# 
  5347  1F44                     	;# 
  5348  1F45                     	;# 
  5349  1F46                     	;# 
  5350  1F47                     	;# 
  5351  1F48                     	;# 
  5352  1F49                     	;# 
  5353  1F4A                     	;# 
  5354  1F4E                     	;# 
  5355  1F4F                     	;# 
  5356  1F50                     	;# 
  5357  1F51                     	;# 
  5358  1F52                     	;# 
  5359  1F53                     	;# 
  5360  1F54                     	;# 
  5361  1F55                     	;# 
  5362  1F65                     	;# 
  5363  1F66                     	;# 
  5364  1F67                     	;# 
  5365  1F68                     	;# 
  5366  1F69                     	;# 
  5367  1F6A                     	;# 
  5368  1F6B                     	;# 
  5369  1FE4                     	;# 
  5370  1FE5                     	;# 
  5371  1FE6                     	;# 
  5372  1FE7                     	;# 
  5373  1FE8                     	;# 
  5374  1FE8                     	;# 
  5375  1FE9                     	;# 
  5376  1FEA                     	;# 
  5377  1FEB                     	;# 
  5378  1FED                     	;# 
  5379  1FEE                     	;# 
  5380  1FEF                     	;# 
  5381  0000                     	;# 
  5382  0001                     	;# 
  5383  0002                     	;# 
  5384  0003                     	;# 
  5385  0004                     	;# 
  5386  0005                     	;# 
  5387  0006                     	;# 
  5388  0007                     	;# 
  5389  0008                     	;# 
  5390  0009                     	;# 
  5391  000A                     	;# 
  5392  000B                     	;# 
  5393  000C                     	;# 
  5394  000D                     	;# 
  5395  000E                     	;# 
  5396  0010                     	;# 
  5397  0012                     	;# 
  5398  0013                     	;# 
  5399  0014                     	;# 
  5400  0016                     	;# 
  5401  0018                     	;# 
  5402  0019                     	;# 
  5403  001A                     	;# 
  5404  001C                     	;# 
  5405  008C                     	;# 
  5406  008C                     	;# 
  5407  008D                     	;# 
  5408  008E                     	;# 
  5409  008E                     	;# 
  5410  008F                     	;# 
  5411  0090                     	;# 
  5412  0090                     	;# 
  5413  0091                     	;# 
  5414  0092                     	;# 
  5415  0092                     	;# 
  5416  0093                     	;# 
  5417  0094                     	;# 
  5418  0094                     	;# 
  5419  0095                     	;# 
  5420  0096                     	;# 
  5421  0096                     	;# 
  5422  0097                     	;# 
  5423  0098                     	;# 
  5424  0099                     	;# 
  5425  009A                     	;# 
  5426  009B                     	;# 
  5427  009B                     	;# 
  5428  009C                     	;# 
  5429  009D                     	;# 
  5430  009D                     	;# 
  5431  009E                     	;# 
  5432  009F                     	;# 
  5433  010C                     	;# 
  5434  010C                     	;# 
  5435  010D                     	;# 
  5436  010E                     	;# 
  5437  010F                     	;# 
  5438  010F                     	;# 
  5439  0110                     	;# 
  5440  0111                     	;# 
  5441  0112                     	;# 
  5442  0113                     	;# 
  5443  0114                     	;# 
  5444  0115                     	;# 
  5445  0116                     	;# 
  5446  0117                     	;# 
  5447  0118                     	;# 
  5448  0119                     	;# 
  5449  0119                     	;# 
  5450  0119                     	;# 
  5451  011A                     	;# 
  5452  011A                     	;# 
  5453  011A                     	;# 
  5454  011B                     	;# 
  5455  011B                     	;# 
  5456  011B                     	;# 
  5457  011B                     	;# 
  5458  011B                     	;# 
  5459  011C                     	;# 
  5460  011C                     	;# 
  5461  011C                     	;# 
  5462  011D                     	;# 
  5463  011D                     	;# 
  5464  011D                     	;# 
  5465  011E                     	;# 
  5466  011E                     	;# 
  5467  011E                     	;# 
  5468  011F                     	;# 
  5469  011F                     	;# 
  5470  011F                     	;# 
  5471  011F                     	;# 
  5472  011F                     	;# 
  5473  018C                     	;# 
  5474  018D                     	;# 
  5475  018E                     	;# 
  5476  018F                     	;# 
  5477  0190                     	;# 
  5478  0191                     	;# 
  5479  0192                     	;# 
  5480  0196                     	;# 
  5481  0197                     	;# 
  5482  0198                     	;# 
  5483  0199                     	;# 
  5484  019A                     	;# 
  5485  019B                     	;# 
  5486  019C                     	;# 
  5487  020C                     	;# 
  5488  020D                     	;# 
  5489  020E                     	;# 
  5490  020E                     	;# 
  5491  020F                     	;# 
  5492  020F                     	;# 
  5493  0210                     	;# 
  5494  0210                     	;# 
  5495  0211                     	;# 
  5496  0211                     	;# 
  5497  0212                     	;# 
  5498  0213                     	;# 
  5499  0214                     	;# 
  5500  0214                     	;# 
  5501  0215                     	;# 
  5502  0215                     	;# 
  5503  0216                     	;# 
  5504  0216                     	;# 
  5505  0217                     	;# 
  5506  0217                     	;# 
  5507  0218                     	;# 
  5508  0219                     	;# 
  5509  021A                     	;# 
  5510  021A                     	;# 
  5511  021B                     	;# 
  5512  021B                     	;# 
  5513  021C                     	;# 
  5514  021C                     	;# 
  5515  021D                     	;# 
  5516  021D                     	;# 
  5517  021E                     	;# 
  5518  021F                     	;# 
  5519  028C                     	;# 
  5520  028C                     	;# 
  5521  028D                     	;# 
  5522  028D                     	;# 
  5523  028E                     	;# 
  5524  028F                     	;# 
  5525  0290                     	;# 
  5526  0291                     	;# 
  5527  0292                     	;# 
  5528  0292                     	;# 
  5529  0293                     	;# 
  5530  0293                     	;# 
  5531  0294                     	;# 
  5532  0295                     	;# 
  5533  0296                     	;# 
  5534  0297                     	;# 
  5535  0298                     	;# 
  5536  0298                     	;# 
  5537  0299                     	;# 
  5538  0299                     	;# 
  5539  029A                     	;# 
  5540  029B                     	;# 
  5541  029C                     	;# 
  5542  029D                     	;# 
  5543  029F                     	;# 
  5544  030C                     	;# 
  5545  030C                     	;# 
  5546  030D                     	;# 
  5547  030E                     	;# 
  5548  030F                     	;# 
  5549  0310                     	;# 
  5550  0310                     	;# 
  5551  0311                     	;# 
  5552  0312                     	;# 
  5553  0313                     	;# 
  5554  0314                     	;# 
  5555  0314                     	;# 
  5556  0315                     	;# 
  5557  0316                     	;# 
  5558  0317                     	;# 
  5559  0318                     	;# 
  5560  0318                     	;# 
  5561  0319                     	;# 
  5562  031A                     	;# 
  5563  031B                     	;# 
  5564  031C                     	;# 
  5565  031C                     	;# 
  5566  031D                     	;# 
  5567  031E                     	;# 
  5568  031F                     	;# 
  5569  038C                     	;# 
  5570  038C                     	;# 
  5571  038D                     	;# 
  5572  038E                     	;# 
  5573  0390                     	;# 
  5574  0390                     	;# 
  5575  0391                     	;# 
  5576  0392                     	;# 
  5577  048C                     	;# 
  5578  048C                     	;# 
  5579  048D                     	;# 
  5580  048E                     	;# 
  5581  048F                     	;# 
  5582  048F                     	;# 
  5583  0490                     	;# 
  5584  0491                     	;# 
  5585  0492                     	;# 
  5586  0492                     	;# 
  5587  0493                     	;# 
  5588  0494                     	;# 
  5589  0495                     	;# 
  5590  0495                     	;# 
  5591  0496                     	;# 
  5592  0497                     	;# 
  5593  0498                     	;# 
  5594  0499                     	;# 
  5595  049A                     	;# 
  5596  049B                     	;# 
  5597  049C                     	;# 
  5598  049D                     	;# 
  5599  050C                     	;# 
  5600  050C                     	;# 
  5601  050D                     	;# 
  5602  050E                     	;# 
  5603  050F                     	;# 
  5604  050F                     	;# 
  5605  0510                     	;# 
  5606  0511                     	;# 
  5607  0512                     	;# 
  5608  0512                     	;# 
  5609  0513                     	;# 
  5610  0514                     	;# 
  5611  0515                     	;# 
  5612  0515                     	;# 
  5613  0516                     	;# 
  5614  0517                     	;# 
  5615  0518                     	;# 
  5616  0519                     	;# 
  5617  051A                     	;# 
  5618  051B                     	;# 
  5619  051C                     	;# 
  5620  051D                     	;# 
  5621  058C                     	;# 
  5622  058C                     	;# 
  5623  058D                     	;# 
  5624  058E                     	;# 
  5625  058F                     	;# 
  5626  058F                     	;# 
  5627  0590                     	;# 
  5628  0591                     	;# 
  5629  0592                     	;# 
  5630  0593                     	;# 
  5631  059C                     	;# 
  5632  059C                     	;# 
  5633  059D                     	;# 
  5634  059D                     	;# 
  5635  059E                     	;# 
  5636  059F                     	;# 
  5637  060C                     	;# 
  5638  060C                     	;# 
  5639  060D                     	;# 
  5640  060D                     	;# 
  5641  060E                     	;# 
  5642  060F                     	;# 
  5643  0610                     	;# 
  5644  0611                     	;# 
  5645  0612                     	;# 
  5646  0613                     	;# 
  5647  0614                     	;# 
  5648  0616                     	;# 
  5649  0616                     	;# 
  5650  0617                     	;# 
  5651  0617                     	;# 
  5652  0618                     	;# 
  5653  0619                     	;# 
  5654  061A                     	;# 
  5655  061B                     	;# 
  5656  061C                     	;# 
  5657  061D                     	;# 
  5658  061E                     	;# 
  5659  068C                     	;# 
  5660  068D                     	;# 
  5661  068E                     	;# 
  5662  068F                     	;# 
  5663  0690                     	;# 
  5664  0691                     	;# 
  5665  0692                     	;# 
  5666  0693                     	;# 
  5667  0694                     	;# 
  5668  070C                     	;# 
  5669  070D                     	;# 
  5670  070E                     	;# 
  5671  070F                     	;# 
  5672  0710                     	;# 
  5673  0711                     	;# 
  5674  0712                     	;# 
  5675  0713                     	;# 
  5676  0714                     	;# 
  5677  0716                     	;# 
  5678  0717                     	;# 
  5679  0718                     	;# 
  5680  0719                     	;# 
  5681  071A                     	;# 
  5682  071B                     	;# 
  5683  071C                     	;# 
  5684  071D                     	;# 
  5685  071E                     	;# 
  5686  0796                     	;# 
  5687  0797                     	;# 
  5688  0798                     	;# 
  5689  0799                     	;# 
  5690  079A                     	;# 
  5691  079B                     	;# 
  5692  079C                     	;# 
  5693  079D                     	;# 
  5694  080C                     	;# 
  5695  080D                     	;# 
  5696  080E                     	;# 
  5697  080F                     	;# 
  5698  0810                     	;# 
  5699  0811                     	;# 
  5700  0813                     	;# 
  5701  0814                     	;# 
  5702  081A                     	;# 
  5703  081A                     	;# 
  5704  081B                     	;# 
  5705  081C                     	;# 
  5706  081C                     	;# 
  5707  081D                     	;# 
  5708  081E                     	;# 
  5709  081F                     	;# 
  5710  088C                     	;# 
  5711  088D                     	;# 
  5712  088E                     	;# 
  5713  088F                     	;# 
  5714  0890                     	;# 
  5715  0891                     	;# 
  5716  0892                     	;# 
  5717  0893                     	;# 
  5718  0895                     	;# 
  5719  0896                     	;# 
  5720  0897                     	;# 
  5721  0898                     	;# 
  5722  0899                     	;# 
  5723  089A                     	;# 
  5724  089B                     	;# 
  5725  090C                     	;# 
  5726  090E                     	;# 
  5727  090F                     	;# 
  5728  091F                     	;# 
  5729  098F                     	;# 
  5730  098F                     	;# 
  5731  0990                     	;# 
  5732  0991                     	;# 
  5733  0992                     	;# 
  5734  0993                     	;# 
  5735  0994                     	;# 
  5736  0995                     	;# 
  5737  0996                     	;# 
  5738  0997                     	;# 
  5739  0A19                     	;# 
  5740  0A19                     	;# 
  5741  0A1A                     	;# 
  5742  0A1A                     	;# 
  5743  0A1B                     	;# 
  5744  0A1B                     	;# 
  5745  0A1B                     	;# 
  5746  0A1C                     	;# 
  5747  0A1C                     	;# 
  5748  0A1D                     	;# 
  5749  0A1D                     	;# 
  5750  0A1E                     	;# 
  5751  0A1E                     	;# 
  5752  0A1F                     	;# 
  5753  0A1F                     	;# 
  5754  0A1F                     	;# 
  5755  1E0F                     	;# 
  5756  1E10                     	;# 
  5757  1E11                     	;# 
  5758  1E12                     	;# 
  5759  1E13                     	;# 
  5760  1E14                     	;# 
  5761  1E15                     	;# 
  5762  1E16                     	;# 
  5763  1E17                     	;# 
  5764  1E18                     	;# 
  5765  1E19                     	;# 
  5766  1E1A                     	;# 
  5767  1E1B                     	;# 
  5768  1E1C                     	;# 
  5769  1E1D                     	;# 
  5770  1E1E                     	;# 
  5771  1E1F                     	;# 
  5772  1E20                     	;# 
  5773  1E21                     	;# 
  5774  1E22                     	;# 
  5775  1E23                     	;# 
  5776  1E24                     	;# 
  5777  1E25                     	;# 
  5778  1E26                     	;# 
  5779  1E27                     	;# 
  5780  1E28                     	;# 
  5781  1E29                     	;# 
  5782  1E2A                     	;# 
  5783  1E2B                     	;# 
  5784  1E2C                     	;# 
  5785  1E2D                     	;# 
  5786  1E2E                     	;# 
  5787  1E2F                     	;# 
  5788  1E30                     	;# 
  5789  1E31                     	;# 
  5790  1E32                     	;# 
  5791  1E33                     	;# 
  5792  1E34                     	;# 
  5793  1E35                     	;# 
  5794  1E36                     	;# 
  5795  1E37                     	;# 
  5796  1E8F                     	;# 
  5797  1E90                     	;# 
  5798  1E91                     	;# 
  5799  1E92                     	;# 
  5800  1E93                     	;# 
  5801  1E94                     	;# 
  5802  1E95                     	;# 
  5803  1E96                     	;# 
  5804  1E97                     	;# 
  5805  1E9C                     	;# 
  5806  1E9D                     	;# 
  5807  1E9E                     	;# 
  5808  1EA1                     	;# 
  5809  1EA2                     	;# 
  5810  1EA3                     	;# 
  5811  1EA4                     	;# 
  5812  1EA5                     	;# 
  5813  1EA9                     	;# 
  5814  1EAA                     	;# 
  5815  1EAB                     	;# 
  5816  1EAC                     	;# 
  5817  1EB1                     	;# 
  5818  1EB2                     	;# 
  5819  1EB3                     	;# 
  5820  1EB8                     	;# 
  5821  1EB9                     	;# 
  5822  1EBA                     	;# 
  5823  1EBB                     	;# 
  5824  1EBC                     	;# 
  5825  1EBD                     	;# 
  5826  1EBE                     	;# 
  5827  1EC3                     	;# 
  5828  1EC5                     	;# 
  5829  1EC6                     	;# 
  5830  1EC7                     	;# 
  5831  1EC8                     	;# 
  5832  1EC9                     	;# 
  5833  1ECA                     	;# 
  5834  1ECB                     	;# 
  5835  1ECC                     	;# 
  5836  1ECD                     	;# 
  5837  1ECE                     	;# 
  5838  1F10                     	;# 
  5839  1F11                     	;# 
  5840  1F12                     	;# 
  5841  1F13                     	;# 
  5842  1F14                     	;# 
  5843  1F15                     	;# 
  5844  1F16                     	;# 
  5845  1F17                     	;# 
  5846  1F18                     	;# 
  5847  1F19                     	;# 
  5848  1F1A                     	;# 
  5849  1F1B                     	;# 
  5850  1F1C                     	;# 
  5851  1F1D                     	;# 
  5852  1F1E                     	;# 
  5853  1F1F                     	;# 
  5854  1F20                     	;# 
  5855  1F21                     	;# 
  5856  1F22                     	;# 
  5857  1F23                     	;# 
  5858  1F24                     	;# 
  5859  1F25                     	;# 
  5860  1F26                     	;# 
  5861  1F27                     	;# 
  5862  1F38                     	;# 
  5863  1F39                     	;# 
  5864  1F3A                     	;# 
  5865  1F3B                     	;# 
  5866  1F3C                     	;# 
  5867  1F3D                     	;# 
  5868  1F3E                     	;# 
  5869  1F3F                     	;# 
  5870  1F43                     	;# 
  5871  1F44                     	;# 
  5872  1F45                     	;# 
  5873  1F46                     	;# 
  5874  1F47                     	;# 
  5875  1F48                     	;# 
  5876  1F49                     	;# 
  5877  1F4A                     	;# 
  5878  1F4E                     	;# 
  5879  1F4F                     	;# 
  5880  1F50                     	;# 
  5881  1F51                     	;# 
  5882  1F52                     	;# 
  5883  1F53                     	;# 
  5884  1F54                     	;# 
  5885  1F55                     	;# 
  5886  1F65                     	;# 
  5887  1F66                     	;# 
  5888  1F67                     	;# 
  5889  1F68                     	;# 
  5890  1F69                     	;# 
  5891  1F6A                     	;# 
  5892  1F6B                     	;# 
  5893  1FE4                     	;# 
  5894  1FE5                     	;# 
  5895  1FE6                     	;# 
  5896  1FE7                     	;# 
  5897  1FE8                     	;# 
  5898  1FE8                     	;# 
  5899  1FE9                     	;# 
  5900  1FEA                     	;# 
  5901  1FEB                     	;# 
  5902  1FED                     	;# 
  5903  1FEE                     	;# 
  5904  1FEF                     	;# 
  5905                           
  5906                           	psect	stringtext1
  5907  2000                     __pstringtext1:
  5908  2000                     _filt:
  5909  2000  34C7               	retlw	199
  5910  2001  3440               	retlw	64
  5911  2002  3400               	retlw	0
  5912  2003  3400               	retlw	0
  5913  2004  34CF               	retlw	207
  5914  2005  3440               	retlw	64
  5915  2006  3400               	retlw	0
  5916  2007  3400               	retlw	0
  5917  2008  346F               	retlw	111
  5918  2009  3440               	retlw	64
  5919  200A  3400               	retlw	0
  5920  200B  3400               	retlw	0
  5921  200C  343F               	retlw	63
  5922  200D  3440               	retlw	64
  5923  200E  3400               	retlw	0
  5924  200F  3400               	retlw	0
  5925  2010  340F               	retlw	15
  5926  2011  3489               	retlw	137
  5927  2012  3400               	retlw	0
  5928  2013  3400               	retlw	0
  5929  2014  340F               	retlw	15
  5930  2015  3488               	retlw	136
  5931  2016  3400               	retlw	0
  5932  2017  3400               	retlw	0
  5933  2018  340F               	retlw	15
  5934  2019  34A4               	retlw	164
  5935  201A  3400               	retlw	0
  5936  201B  3400               	retlw	0
  5937  201C  340F               	retlw	15
  5938  201D  3409               	retlw	9
  5939  201E  3401               	retlw	1
  5940  201F  3400               	retlw	0
  5941  2020  340F               	retlw	15
  5942  2021  3408               	retlw	8
  5943  2022  3401               	retlw	1
  5944  2023  3400               	retlw	0
  5945  2024  340F               	retlw	15
  5946  2025  3424               	retlw	36
  5947  2026  3401               	retlw	1
  5948  2027  3400               	retlw	0
  5949  2028  340F               	retlw	15
  5950  2029  3432               	retlw	50
  5951  202A  3401               	retlw	1
  5952  202B  3400               	retlw	0
  5953  202C                     __end_of_filt:
  5954                           
  5955                           	psect	stringtext2
  5956  2800                     __pstringtext2:
  5957  2800                     _freqs:
  5958  2800  3400               	retlw	0
  5959  2801  3401               	retlw	1
  5960  2802  3402               	retlw	2
  5961  2803  3403               	retlw	3
  5962  2804  3404               	retlw	4
  5963  2805  3405               	retlw	5
  5964  2806  3406               	retlw	6
  5965  2807  3407               	retlw	7
  5966  2808  3408               	retlw	8
  5967  2809  3409               	retlw	9
  5968  280A  340A               	retlw	10
  5969  280B                     __end_of_freqs:
  5970                           
  5971                           	psect	stringtext3
  5972  280B                     __pstringtext3:
  5973  280B                     _gains:
  5974  280B  3404               	retlw	4
  5975  280C  3424               	retlw	36
  5976  280D  3464               	retlw	100
  5977  280E  346C               	retlw	108
  5978  280F  347C               	retlw	124
  5979  2810  347D               	retlw	125
  5980  2811  347F               	retlw	127
  5981  2812  347B               	retlw	123
  5982  2813                     __end_of_gains:
  5983                           
  5984                           	psect	nvBANK3
  5985  01D1                     __pnvBANK3:
  5986  01D1                     _EUSART1_ErrorHandler:
  5987  01D1                     	ds	2
  5988  01D3                     _EUSART1_OverrunErrorHandler:
  5989  01D3                     	ds	2
  5990  01D5                     _EUSART1_FramingErrorHandler:
  5991  01D5                     	ds	2
  5992  01D7                     _EUSART1_RxDefaultInterruptHandler:
  5993  01D7                     	ds	2
  5994  01D9                     _EUSART1_TxDefaultInterruptHandler:
  5995  01D9                     	ds	2
  5996  01DB                     _eusart1TxBufferRemaining:
  5997  01DB                     	ds	1
  5998  0018                     _LATAbits	set	24
  5999  001A                     _LATCbits	set	26
  6000  000B                     _INTCONbits	set	11
  6001  0014                     _TRISC	set	20
  6002  0013                     _TRISB	set	19
  6003  0012                     _TRISA	set	18
  6004  0016                     _TRISE	set	22
  6005  001A                     _LATC	set	26
  6006  0019                     _LATB	set	25
  6007  0018                     _LATA	set	24
  6008  001C                     _LATE	set	28
  6009  0090                     _ADERRL	set	144
  6010  0091                     _ADERRH	set	145
  6011  009B                     _ADPREVL	set	155
  6012  009C                     _ADPREVH	set	156
  6013  0094                     _ADFLTRL	set	148
  6014  0095                     _ADFLTRH	set	149
  6015  0096                     _ADACCL	set	150
  6016  0097                     _ADACCH	set	151
  6017  0099                     _ADCNT	set	153
  6018  009D                     _ADRESL	set	157
  6019  009E                     _ADRESH	set	158
  6020  009F                     _ADPCH	set	159
  6021  009A                     _ADRPT	set	154
  6022  0098                     _ADACCU	set	152
  6023  0093                     _ADSTPTH	set	147
  6024  0092                     _ADSTPTL	set	146
  6025  008F                     _ADUTHH	set	143
  6026  008E                     _ADUTHL	set	142
  6027  008D                     _ADLTHH	set	141
  6028  008C                     _ADLTHL	set	140
  6029  0112                     _ADCON1bits	set	274
  6030  0115                     _ADSTATbits	set	277
  6031  0113                     _ADCON2bits	set	275
  6032  0114                     _ADCON3bits	set	276
  6033  0111                     _ADCON0bits	set	273
  6034  0111                     _ADCON0	set	273
  6035  0118                     _ADCLK	set	280
  6036  0117                     _ADACT	set	279
  6037  0116                     _ADREF	set	278
  6038  0115                     _ADSTAT	set	277
  6039  0114                     _ADCON3	set	276
  6040  0113                     _ADCON2	set	275
  6041  0112                     _ADCON1	set	274
  6042  0110                     _ADPREH	set	272
  6043  010F                     _ADPREL	set	271
  6044  010E                     _ADCAP	set	270
  6045  010D                     _ADACQH	set	269
  6046  010C                     _ADACQL	set	268
  6047  0119                     _RC1REG	set	281
  6048  011D                     _RC1STAbits	set	285
  6049  011A                     _TX1REG	set	282
  6050  011E                     _TX1STAbits	set	286
  6051  011C                     _SP1BRGH	set	284
  6052  011B                     _SP1BRGL	set	283
  6053  011E                     _TX1STA	set	286
  6054  011D                     _RC1STA	set	285
  6055  011F                     _BAUD1CON	set	287
  6056  070F                     _PIR3bits	set	1807
  6057  0719                     _PIE3bits	set	1817
  6058  079D                     _PMD7	set	1949
  6059  079C                     _PMD6	set	1948
  6060  079B                     _PMD5	set	1947
  6061  079A                     _PMD4	set	1946
  6062  0799                     _PMD3	set	1945
  6063  0798                     _PMD2	set	1944
  6064  0797                     _PMD1	set	1943
  6065  0796                     _PMD0	set	1942
  6066  0895                     _CLKRCON	set	2197
  6067  0896                     _CLKRCLK	set	2198
  6068  0892                     _OSCTUNE	set	2194
  6069  0890                     _OSCSTAT	set	2192
  6070  0893                     _OSCFRQ	set	2195
  6071  0891                     _OSCEN	set	2193
  6072  088F                     _OSCCON3	set	2191
  6073  088D                     _OSCCON1	set	2189
  6074  1ECB                     _RX1DTPPS	set	7883
  6075  1F26                     _RC6PPS	set	7974
  6076  1F25                     _RC5PPS	set	7973
  6077  1F52                     _INLVLC	set	8018
  6078  1F47                     _INLVLB	set	8007
  6079  1F3C                     _INLVLA	set	7996
  6080  1F51                     _SLRCONC	set	8017
  6081  1F46                     _SLRCONB	set	8006
  6082  1F3B                     _SLRCONA	set	7995
  6083  1F50                     _ODCONC	set	8016
  6084  1F45                     _ODCONB	set	8005
  6085  1F3A                     _ODCONA	set	7994
  6086  1F66                     _ODCONE	set	8038
  6087  1F4F                     _WPUC	set	8015
  6088  1F39                     _WPUA	set	7993
  6089  1F44                     _WPUB	set	8004
  6090  1F65                     _WPUE	set	8037
  6091  1F38                     _ANSELA	set	7992
  6092  1F43                     _ANSELB	set	8003
  6093  1F4E                     _ANSELC	set	8014
  6094                           
  6095                           	psect	stringtext4
  6096  202C                     __pstringtext4:
  6097  202C                     STR_6:
  6098  202C  3450               	retlw	80	;'P'
  6099  202D  3449               	retlw	73	;'I'
  6100  202E  344E               	retlw	78	;'N'
  6101  202F  3420               	retlw	32	;' '
  6102  2030  343D               	retlw	61	;'='
  6103  2031  3420               	retlw	32	;' '
  6104  2032  346D               	retlw	109	;'m'
  6105  2033  3465               	retlw	101	;'e'
  6106  2034  3461               	retlw	97	;'a'
  6107  2035  3473               	retlw	115	;'s'
  6108  2036  3475               	retlw	117	;'u'
  6109  2037  3472               	retlw	114	;'r'
  6110  2038  3465               	retlw	101	;'e'
  6111  2039  346D               	retlw	109	;'m'
  6112  203A  3465               	retlw	101	;'e'
  6113  203B  346E               	retlw	110	;'n'
  6114  203C  3474               	retlw	116	;'t'
  6115  203D  3420               	retlw	32	;' '
  6116  203E  3428               	retlw	40	;'('
  6117  203F  3473               	retlw	115	;'s'
  6118  2040  3469               	retlw	105	;'i'
  6119  2041  346D               	retlw	109	;'m'
  6120  2042  3475               	retlw	117	;'u'
  6121  2043  346C               	retlw	108	;'l'
  6122  2044  3461               	retlw	97	;'a'
  6123  2045  3474               	retlw	116	;'t'
  6124  2046  3469               	retlw	105	;'i'
  6125  2047  346F               	retlw	111	;'o'
  6126  2048  346E               	retlw	110	;'n'
  6127  2049  3429               	retlw	41	;')'
  6128  204A  340A               	retlw	10
  6129  204B  3400               	retlw	0
  6130                           
  6131                           	psect	stringtext5
  6132  204C                     __pstringtext5:
  6133  204C                     STR_2:
  6134  204C  342A               	retlw	42	;'*'
  6135  204D  342A               	retlw	42	;'*'
  6136  204E  342A               	retlw	42	;'*'
  6137  204F  342A               	retlw	42	;'*'
  6138  2050  342A               	retlw	42	;'*'
  6139  2051  342A               	retlw	42	;'*'
  6140  2052  342A               	retlw	42	;'*'
  6141  2053  342A               	retlw	42	;'*'
  6142  2054  342A               	retlw	42	;'*'
  6143  2055  342A               	retlw	42	;'*'
  6144  2056  342A               	retlw	42	;'*'
  6145  2057  342A               	retlw	42	;'*'
  6146  2058  342A               	retlw	42	;'*'
  6147  2059  342A               	retlw	42	;'*'
  6148  205A  342A               	retlw	42	;'*'
  6149  205B  342A               	retlw	42	;'*'
  6150  205C  342A               	retlw	42	;'*'
  6151  205D  342A               	retlw	42	;'*'
  6152  205E  342A               	retlw	42	;'*'
  6153  205F  342A               	retlw	42	;'*'
  6154  2060  342A               	retlw	42	;'*'
  6155  2061  342A               	retlw	42	;'*'
  6156  2062  342A               	retlw	42	;'*'
  6157  2063  342A               	retlw	42	;'*'
  6158  2064  342A               	retlw	42	;'*'
  6159  2065  342A               	retlw	42	;'*'
  6160  2066  342A               	retlw	42	;'*'
  6161  2067  342A               	retlw	42	;'*'
  6162  2068  340A               	retlw	10
  6163  2069  3400               	retlw	0
  6164                           
  6165                           	psect	stringtext6
  6166  206A                     __pstringtext6:
  6167  206A                     STR_7:
  6168  206A  3456               	retlw	86	;'V'
  6169  206B  344F               	retlw	79	;'O'
  6170  206C  3455               	retlw	85	;'U'
  6171  206D  3454               	retlw	84	;'T'
  6172  206E  345F               	retlw	95	;'_'
  6173  206F  3453               	retlw	83	;'S'
  6174  2070  3445               	retlw	69	;'E'
  6175  2071  3420               	retlw	32	;' '
  6176  2072  343D               	retlw	61	;'='
  6177  2073  3420               	retlw	32	;' '
  6178  2074  3425               	retlw	37	;'%'
  6179  2075  3433               	retlw	51	;'3'
  6180  2076  342E               	retlw	46	;'.'
  6181  2077  3433               	retlw	51	;'3'
  6182  2078  3466               	retlw	102	;'f'
  6183  2079  3420               	retlw	32	;' '
  6184  207A  3456               	retlw	86	;'V'
  6185  207B  3420               	retlw	32	;' '
  6186  207C  3428               	retlw	40	;'('
  6187  207D  3430               	retlw	48	;'0'
  6188  207E  342E               	retlw	46	;'.'
  6189  207F  3439               	retlw	57	;'9'
  6190  2080  3430               	retlw	48	;'0'
  6191  2081  3430               	retlw	48	;'0'
  6192  2082  3420               	retlw	32	;' '
  6193  2083  3456               	retlw	86	;'V'
  6194  2084  3429               	retlw	41	;')'
  6195  2085  340A               	retlw	10
  6196  2086  3400               	retlw	0
  6197                           
  6198                           	psect	stringtext7
  6199  2087                     __pstringtext7:
  6200  2087                     STR_8:
  6201  2087  3456               	retlw	86	;'V'
  6202  2088  344F               	retlw	79	;'O'
  6203  2089  3455               	retlw	85	;'U'
  6204  208A  3454               	retlw	84	;'T'
  6205  208B  3450               	retlw	80	;'P'
  6206  208C  3420               	retlw	32	;' '
  6207  208D  343D               	retlw	61	;'='
  6208  208E  3420               	retlw	32	;' '
  6209  208F  3425               	retlw	37	;'%'
  6210  2090  3433               	retlw	51	;'3'
  6211  2091  342E               	retlw	46	;'.'
  6212  2092  3433               	retlw	51	;'3'
  6213  2093  3466               	retlw	102	;'f'
  6214  2094  3420               	retlw	32	;' '
  6215  2095  3456               	retlw	86	;'V'
  6216  2096  3420               	retlw	32	;' '
  6217  2097  3428               	retlw	40	;'('
  6218  2098  3431               	retlw	49	;'1'
  6219  2099  342E               	retlw	46	;'.'
  6220  209A  3431               	retlw	49	;'1'
  6221  209B  3436               	retlw	54	;'6'
  6222  209C  3438               	retlw	56	;'8'
  6223  209D  3420               	retlw	32	;' '
  6224  209E  3456               	retlw	86	;'V'
  6225  209F  3429               	retlw	41	;')'
  6226  20A0  340A               	retlw	10
  6227  20A1  3420               	retlw	32	;' '
  6228  20A2  3400               	retlw	0
  6229                           
  6230                           	psect	stringtext8
  6231  20A3                     __pstringtext8:
  6232  20A3                     STR_11:
  6233  20A3  3449               	retlw	73	;'I'
  6234  20A4  344F               	retlw	79	;'O'
  6235  20A5  3455               	retlw	85	;'U'
  6236  20A6  3454               	retlw	84	;'T'
  6237  20A7  344E               	retlw	78	;'N'
  6238  20A8  3420               	retlw	32	;' '
  6239  20A9  343D               	retlw	61	;'='
  6240  20AA  3420               	retlw	32	;' '
  6241  20AB  3425               	retlw	37	;'%'
  6242  20AC  3433               	retlw	51	;'3'
  6243  20AD  342E               	retlw	46	;'.'
  6244  20AE  3433               	retlw	51	;'3'
  6245  20AF  3466               	retlw	102	;'f'
  6246  20B0  3420               	retlw	32	;' '
  6247  20B1  3456               	retlw	86	;'V'
  6248  20B2  3420               	retlw	32	;' '
  6249  20B3  3428               	retlw	40	;'('
  6250  20B4  3431               	retlw	49	;'1'
  6251  20B5  342E               	retlw	46	;'.'
  6252  20B6  3430               	retlw	48	;'0'
  6253  20B7  3430               	retlw	48	;'0'
  6254  20B8  3432               	retlw	50	;'2'
  6255  20B9  3420               	retlw	32	;' '
  6256  20BA  3456               	retlw	86	;'V'
  6257  20BB  3429               	retlw	41	;')'
  6258  20BC  340A               	retlw	10
  6259  20BD  3400               	retlw	0
  6260                           
  6261                           	psect	stringtext9
  6262  20BE                     __pstringtext9:
  6263  20BE                     STR_10:
  6264  20BE  3449               	retlw	73	;'I'
  6265  20BF  344F               	retlw	79	;'O'
  6266  20C0  3455               	retlw	85	;'U'
  6267  20C1  3454               	retlw	84	;'T'
  6268  20C2  3450               	retlw	80	;'P'
  6269  20C3  3420               	retlw	32	;' '
  6270  20C4  343D               	retlw	61	;'='
  6271  20C5  3420               	retlw	32	;' '
  6272  20C6  3425               	retlw	37	;'%'
  6273  20C7  3433               	retlw	51	;'3'
  6274  20C8  342E               	retlw	46	;'.'
  6275  20C9  3433               	retlw	51	;'3'
  6276  20CA  3466               	retlw	102	;'f'
  6277  20CB  3420               	retlw	32	;' '
  6278  20CC  3456               	retlw	86	;'V'
  6279  20CD  3420               	retlw	32	;' '
  6280  20CE  3428               	retlw	40	;'('
  6281  20CF  3431               	retlw	49	;'1'
  6282  20D0  342E               	retlw	46	;'.'
  6283  20D1  3430               	retlw	48	;'0'
  6284  20D2  3430               	retlw	48	;'0'
  6285  20D3  3432               	retlw	50	;'2'
  6286  20D4  3420               	retlw	32	;' '
  6287  20D5  3456               	retlw	86	;'V'
  6288  20D6  3429               	retlw	41	;')'
  6289  20D7  340A               	retlw	10
  6290  20D8  3400               	retlw	0
  6291                           
  6292                           	psect	stringtext10
  6293  20D9                     __pstringtext10:
  6294  20D9                     STR_9:
  6295  20D9  3456               	retlw	86	;'V'
  6296  20DA  344F               	retlw	79	;'O'
  6297  20DB  3455               	retlw	85	;'U'
  6298  20DC  3454               	retlw	84	;'T'
  6299  20DD  344E               	retlw	78	;'N'
  6300  20DE  3420               	retlw	32	;' '
  6301  20DF  343D               	retlw	61	;'='
  6302  20E0  3420               	retlw	32	;' '
  6303  20E1  3425               	retlw	37	;'%'
  6304  20E2  3433               	retlw	51	;'3'
  6305  20E3  342E               	retlw	46	;'.'
  6306  20E4  3433               	retlw	51	;'3'
  6307  20E5  3466               	retlw	102	;'f'
  6308  20E6  3420               	retlw	32	;' '
  6309  20E7  3456               	retlw	86	;'V'
  6310  20E8  3420               	retlw	32	;' '
  6311  20E9  3428               	retlw	40	;'('
  6312  20EA  3431               	retlw	49	;'1'
  6313  20EB  342E               	retlw	46	;'.'
  6314  20EC  3431               	retlw	49	;'1'
  6315  20ED  3436               	retlw	54	;'6'
  6316  20EE  3438               	retlw	56	;'8'
  6317  20EF  3420               	retlw	32	;' '
  6318  20F0  3456               	retlw	86	;'V'
  6319  20F1  3429               	retlw	41	;')'
  6320  20F2  340A               	retlw	10
  6321  20F3  3400               	retlw	0
  6322                           
  6323                           	psect	stringtext11
  6324  20F4                     __pstringtext11:
  6325  20F4                     STR_3:
  6326  20F4  3453               	retlw	83	;'S'
  6327  20F5  3463               	retlw	99	;'c'
  6328  20F6  3469               	retlw	105	;'i'
  6329  20F7  3462               	retlw	98	;'b'
  6330  20F8  3461               	retlw	97	;'a'
  6331  20F9  3473               	retlw	115	;'s'
  6332  20FA  3465               	retlw	101	;'e'
  6333  20FB  3420               	retlw	32	;' '
  6334  20FC  3441               	retlw	65	;'A'
  6335  20FD  3453               	retlw	83	;'S'
  6336  20FE  3449               	retlw	73	;'I'
  6337  20FF  3443               	retlw	67	;'C'
  6338  2100  3420               	retlw	32	;' '
  6339  2101  3454               	retlw	84	;'T'
  6340  2102  3465               	retlw	101	;'e'
  6341  2103  3473               	retlw	115	;'s'
  6342  2104  3474               	retlw	116	;'t'
  6343  2105  3465               	retlw	101	;'e'
  6344  2106  3472               	retlw	114	;'r'
  6345  2107  3420               	retlw	32	;' '
  6346  2108  3456               	retlw	86	;'V'
  6347  2109  3430               	retlw	48	;'0'
  6348  210A  342E               	retlw	46	;'.'
  6349  210B  3431               	retlw	49	;'1'
  6350  210C  340A               	retlw	10
  6351  210D  3400               	retlw	0
  6352                           
  6353                           	psect	stringtext12
  6354  210E                     __pstringtext12:
  6355  210E                     STR_4:
  6356  210E  3444               	retlw	68	;'D'
  6357  210F  3443               	retlw	67	;'C'
  6358  2110  3420               	retlw	32	;' '
  6359  2111  346F               	retlw	111	;'o'
  6360  2112  3470               	retlw	112	;'p'
  6361  2113  3465               	retlw	101	;'e'
  6362  2114  3472               	retlw	114	;'r'
  6363  2115  3461               	retlw	97	;'a'
  6364  2116  3474               	retlw	116	;'t'
  6365  2117  3469               	retlw	105	;'i'
  6366  2118  346E               	retlw	110	;'n'
  6367  2119  3467               	retlw	103	;'g'
  6368  211A  3420               	retlw	32	;' '
  6369  211B  3470               	retlw	112	;'p'
  6370  211C  346F               	retlw	111	;'o'
  6371  211D  3469               	retlw	105	;'i'
  6372  211E  346E               	retlw	110	;'n'
  6373  211F  3474               	retlw	116	;'t'
  6374  2120  3420               	retlw	32	;' '
  6375  2121  3474               	retlw	116	;'t'
  6376  2122  3465               	retlw	101	;'e'
  6377  2123  3473               	retlw	115	;'s'
  6378  2124  3474               	retlw	116	;'t'
  6379  2125  3473               	retlw	115	;'s'
  6380  2126  340A               	retlw	10
  6381  2127  3400               	retlw	0
  6382                           
  6383                           	psect	stringtext13
  6384  2813                     __pstringtext13:
  6385  2813                     STR_12:
  6386  2813  3449               	retlw	73	;'I'
  6387  2814  344E               	retlw	78	;'N'
  6388  2815  3446               	retlw	70	;'F'
  6389  2816  3400               	retlw	0
  6390                           
  6391                           	psect	stringtext14
  6392  2817                     __pstringtext14:
  6393  2817                     STR_16:
  6394  2817  344E               	retlw	78	;'N'
  6395  2818  3441               	retlw	65	;'A'
  6396  2819  344E               	retlw	78	;'N'
  6397  281A  3400               	retlw	0
  6398                           
  6399                           	psect	stringtext15
  6400  281B                     __pstringtext15:
  6401  281B                     STR_13:
  6402  281B  3469               	retlw	105	;'i'
  6403  281C  346E               	retlw	110	;'n'
  6404  281D  3466               	retlw	102	;'f'
  6405  281E  3400               	retlw	0
  6406                           
  6407                           	psect	stringtext16
  6408  281F                     __pstringtext16:
  6409  281F                     STR_17:
  6410  281F  346E               	retlw	110	;'n'
  6411  2820  3461               	retlw	97	;'a'
  6412  2821  346E               	retlw	110	;'n'
  6413  2822  3400               	retlw	0
  6414                           
  6415                           	psect	stringtext17
  6416  2823                     __pstringtext17:
  6417  2823                     STR_20:
  6418  2823  346C               	retlw	108	;'l'
  6419  2824  3466               	retlw	102	;'f'
  6420  2825  3400               	retlw	0
  6421                           
  6422                           	psect	stringtext18
  6423  2826                     __pstringtext18:
  6424  2826                     STR_1:
  6425  2826  344F               	retlw	79	;'O'
  6426  2827  346B               	retlw	107	;'k'
  6427  2828  3400               	retlw	0
  6428                           
  6429                           	psect	stringtext19
  6430  0000                     __pstringtext19:
  6431  204C                     
  6432                           	psect	cinit
  6433  002D                     start_initialization:	
  6434                           ; #config settings
  6435                           
  6436  002D                     __initialization:
  6437                           
  6438                           ; Clear objects allocated to COMMON
  6439  002D  01FC               	clrf	__pbssCOMMON& (0+127)
  6440                           
  6441                           ; Clear objects allocated to BANK2
  6442  002E  0142               	movlb	2	; select bank2
  6443  002F  01EB               	clrf	__pbssBANK2& (0+127)
  6444  0030  01EC               	clrf	(__pbssBANK2+1)& (0+127)
  6445  0031  01ED               	clrf	(__pbssBANK2+2)& (0+127)
  6446  0032  01EE               	clrf	(__pbssBANK2+3)& (0+127)
  6447                           
  6448                           ; Clear objects allocated to BANK3
  6449  0033  30A0               	movlw	low __pbssBANK3
  6450  0034  0084               	movwf	4
  6451  0035  3001               	movlw	high __pbssBANK3
  6452  0036  0085               	movwf	5
  6453  0037  3031               	movlw	49
  6454  0038  31A7  2726  3180   	fcall	clear_ram0
  6455                           
  6456                           ; Clear objects allocated to BANK4
  6457  003B  3020               	movlw	low __pbssBANK4
  6458  003C  0084               	movwf	4
  6459  003D  3002               	movlw	high __pbssBANK4
  6460  003E  0085               	movwf	5
  6461  003F  3050               	movlw	80
  6462  0040  31A7  2726  3180   	fcall	clear_ram0
  6463                           
  6464                           ; Clear objects allocated to BANK5
  6465  0043  30A0               	movlw	low __pbssBANK5
  6466  0044  0084               	movwf	4
  6467  0045  3002               	movlw	high __pbssBANK5
  6468  0046  0085               	movwf	5
  6469  0047  3040               	movlw	64
  6470  0048  31A7  2726  3180   	fcall	clear_ram0
  6471  004B                     end_of_initialization:	
  6472                           ;End of C runtime variable initialization code
  6473                           
  6474  004B                     __end_of__initialization:
  6475  004B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6476  004C  0140               	movlb	0
  6477  004D  319A  2AF9         	ljmp	_main	;jump to C main() function
  6478                           
  6479                           	psect	bssCOMMON
  6480  007C                     __pbssCOMMON:
  6481  007C                     _eusart1RxHead:
  6482  007C                     	ds	1
  6483                           
  6484                           	psect	bssBANK2
  6485  016B                     __pbssBANK2:
  6486  016B                     _eusart1RxCount:
  6487  016B                     	ds	1
  6488  016C                     _eusart1RxTail:
  6489  016C                     	ds	1
  6490  016D                     _eusart1TxTail:
  6491  016D                     	ds	1
  6492  016E                     _eusart1TxHead:
  6493  016E                     	ds	1
  6494                           
  6495                           	psect	bssBANK3
  6496  01A0                     __pbssBANK3:
  6497  01A0                     _eusart1RxStatusBuffer:
  6498  01A0                     	ds	16
  6499  01B0                     _eusart1RxBuffer:
  6500  01B0                     	ds	16
  6501  01C0                     floorf@F527:
  6502  01C0                     	ds	4
  6503  01C4                     ___fpclassifyf@F465:
  6504  01C4                     	ds	4
  6505  01C8                     _nout:
  6506  01C8                     	ds	2
  6507  01CA                     _width:
  6508  01CA                     	ds	2
  6509  01CC                     _prec:
  6510  01CC                     	ds	2
  6511  01CE                     _flags:
  6512  01CE                     	ds	2
  6513  01D0                     _eusart1RxLastError:
  6514  01D0                     	ds	1
  6515                           
  6516                           	psect	bssBANK4
  6517  0220                     __pbssBANK4:
  6518  0220                     _dbuf:
  6519  0220                     	ds	80
  6520                           
  6521                           	psect	bssBANK5
  6522  02A0                     __pbssBANK5:
  6523  02A0                     _eusart1TxBuffer:
  6524  02A0                     	ds	64
  6525                           
  6526                           	psect	clrtext
  6527  2726                     clear_ram0:	
  6528                           ;	Called with FSR0 containing the base address, and
  6529                           ;	WREG with the size to clear
  6530                           
  6531  2726  0064               	clrwdt	;clear the watchdog before getting into this loop
  6532  2727                     clrloop0:
  6533  2727  0180               	clrf	0	;clear RAM location pointed to by FSR
  6534  2728  3101               	addfsr 0,1
  6535  2729  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  6536  272A  2F27               	goto	clrloop0	;have we reached the end yet?
  6537  272B  3400               	retlw	0	;all done for this memory range, return
  6538                           
  6539                           	psect	cstackBANK2
  6540  0120                     __pcstackBANK2:
  6541  0120                     _vfpfcnvrt$2181:
  6542                           
  6543                           ; 2 bytes @ 0x0
  6544  0120                     	ds	2
  6545  0122                     _vfpfcnvrt$2182:
  6546                           
  6547                           ; 2 bytes @ 0x2
  6548  0122                     	ds	2
  6549  0124                     _vfpfcnvrt$2186:
  6550                           
  6551                           ; 2 bytes @ 0x4
  6552  0124                     	ds	2
  6553  0126                     vfpfcnvrt@ct:
  6554                           
  6555                           ; 3 bytes @ 0x6
  6556  0126                     	ds	3
  6557  0129                     vfpfcnvrt@f:
  6558                           
  6559                           ; 4 bytes @ 0x9
  6560  0129                     	ds	4
  6561  012D                     vfpfcnvrt@c:
  6562                           
  6563                           ; 1 bytes @ 0xD
  6564  012D                     	ds	1
  6565  012E                     vfpfcnvrt@fp:
  6566                           
  6567                           ; 1 bytes @ 0xE
  6568  012E                     	ds	1
  6569  012F                     ?_sprintf:
  6570  012F                     sprintf@fmt:	
  6571                           ; 2 bytes @ 0xF
  6572                           
  6573                           
  6574                           ; 2 bytes @ 0xF
  6575  012F                     	ds	6
  6576  0135                     ??_sprintf:
  6577                           
  6578                           ; 1 bytes @ 0x15
  6579  0135                     	ds	1
  6580  0136                     sprintf@ret:
  6581                           
  6582                           ; 2 bytes @ 0x16
  6583  0136                     	ds	2
  6584  0138                     sprintf@s:
  6585                           
  6586                           ; 1 bytes @ 0x18
  6587  0138                     	ds	1
  6588  0139                     sprintf@ap:
  6589                           
  6590                           ; 1 bytes @ 0x19
  6591  0139                     	ds	1
  6592  013A                     sprintf@f:
  6593                           
  6594                           ; 5 bytes @ 0x1A
  6595  013A                     	ds	5
  6596  013F                     ??_ADC_test:
  6597                           
  6598                           ; 1 bytes @ 0x1F
  6599  013F                     	ds	2
  6600  0141                     ADC_test@sbuf:
  6601                           
  6602                           ; 30 bytes @ 0x21
  6603  0141                     	ds	30
  6604  015F                     ADC_test@aux:
  6605                           
  6606                           ; 4 bytes @ 0x3F
  6607  015F                     	ds	4
  6608  0163                     ADC_test@num:
  6609                           
  6610                           ; 1 bytes @ 0x43
  6611  0163                     	ds	1
  6612  0164                     ADC_test@value:
  6613                           
  6614                           ; 2 bytes @ 0x44
  6615  0164                     	ds	2
  6616  0166                     ??_mess_handler:
  6617                           
  6618                           ; 1 bytes @ 0x46
  6619  0166                     	ds	2
  6620  0168                     mess_handler@message:
  6621                           
  6622                           ; 1 bytes @ 0x48
  6623  0168                     	ds	1
  6624  0169                     ??_main:
  6625                           
  6626                           ; 1 bytes @ 0x49
  6627  0169                     	ds	2
  6628                           
  6629                           	psect	cstackBANK1
  6630  00A0                     __pcstackBANK1:
  6631  00A0                     ?_efgtoa:
  6632  00A0                     efgtoa@f:	
  6633                           ; 2 bytes @ 0x0
  6634                           
  6635                           
  6636                           ; 4 bytes @ 0x0
  6637  00A0                     	ds	4
  6638  00A4                     efgtoa@c:
  6639                           
  6640                           ; 1 bytes @ 0x4
  6641  00A4                     	ds	1
  6642  00A5                     ??_efgtoa:
  6643                           
  6644                           ; 1 bytes @ 0x5
  6645  00A5                     	ds	4
  6646  00A9                     _efgtoa$2155:
  6647                           
  6648                           ; 2 bytes @ 0x9
  6649  00A9                     	ds	2
  6650  00AB                     _efgtoa$2156:
  6651                           
  6652                           ; 2 bytes @ 0xB
  6653  00AB                     	ds	2
  6654  00AD                     _efgtoa$2161:
  6655                           
  6656                           ; 2 bytes @ 0xD
  6657  00AD                     	ds	2
  6658  00AF                     _efgtoa$2165:
  6659                           
  6660                           ; 2 bytes @ 0xF
  6661  00AF                     	ds	2
  6662  00B1                     _efgtoa$2166:
  6663                           
  6664                           ; 2 bytes @ 0x11
  6665  00B1                     	ds	2
  6666  00B3                     _efgtoa$2167:
  6667                           
  6668                           ; 2 bytes @ 0x13
  6669  00B3                     	ds	2
  6670  00B5                     efgtoa@t:
  6671                           
  6672                           ; 2 bytes @ 0x15
  6673  00B5                     	ds	2
  6674  00B7                     efgtoa@pp:
  6675                           
  6676                           ; 2 bytes @ 0x17
  6677  00B7                     	ds	2
  6678  00B9                     efgtoa@ne:
  6679                           
  6680                           ; 2 bytes @ 0x19
  6681  00B9                     	ds	2
  6682  00BB                     efgtoa@m:
  6683                           
  6684                           ; 2 bytes @ 0x1B
  6685  00BB                     	ds	2
  6686  00BD                     efgtoa@ou:
  6687                           
  6688                           ; 4 bytes @ 0x1D
  6689  00BD                     	ds	4
  6690  00C1                     efgtoa@d:
  6691                           
  6692                           ; 2 bytes @ 0x21
  6693  00C1                     	ds	2
  6694  00C3                     efgtoa@fp:
  6695                           
  6696                           ; 1 bytes @ 0x23
  6697  00C3                     	ds	1
  6698  00C4                     efgtoa@sign:
  6699                           
  6700                           ; 2 bytes @ 0x24
  6701  00C4                     	ds	2
  6702  00C6                     efgtoa@p:
  6703                           
  6704                           ; 2 bytes @ 0x26
  6705  00C6                     	ds	2
  6706  00C8                     efgtoa@w:
  6707                           
  6708                           ; 2 bytes @ 0x28
  6709  00C8                     	ds	2
  6710  00CA                     efgtoa@nmode:
  6711                           
  6712                           ; 1 bytes @ 0x2A
  6713  00CA                     	ds	1
  6714  00CB                     efgtoa@mode:
  6715                           
  6716                           ; 1 bytes @ 0x2B
  6717  00CB                     	ds	1
  6718  00CC                     efgtoa@h:
  6719                           
  6720                           ; 4 bytes @ 0x2C
  6721  00CC                     	ds	4
  6722  00D0                     efgtoa@l:
  6723                           
  6724                           ; 4 bytes @ 0x30
  6725  00D0                     	ds	4
  6726  00D4                     efgtoa@i:
  6727                           
  6728                           ; 2 bytes @ 0x34
  6729  00D4                     	ds	2
  6730  00D6                     efgtoa@g:
  6731                           
  6732                           ; 4 bytes @ 0x36
  6733  00D6                     	ds	4
  6734  00DA                     efgtoa@e:
  6735                           
  6736                           ; 2 bytes @ 0x3A
  6737  00DA                     	ds	2
  6738  00DC                     efgtoa@n:
  6739                           
  6740                           ; 2 bytes @ 0x3C
  6741  00DC                     	ds	2
  6742  00DE                     efgtoa@u:
  6743                           
  6744                           ; 4 bytes @ 0x3E
  6745  00DE                     	ds	4
  6746  00E2                     ??_vfpfcnvrt:
  6747                           
  6748                           ; 1 bytes @ 0x42
  6749  00E2                     	ds	6
  6750  00E8                     ?_vfprintf:
  6751  00E8                     vfprintf@fmt:	
  6752                           ; 2 bytes @ 0x48
  6753                           
  6754                           
  6755                           ; 2 bytes @ 0x48
  6756  00E8                     	ds	2
  6757  00EA                     vfprintf@ap:
  6758                           
  6759                           ; 1 bytes @ 0x4A
  6760  00EA                     	ds	1
  6761  00EB                     ??_vfprintf:
  6762                           
  6763                           ; 1 bytes @ 0x4B
  6764  00EB                     	ds	2
  6765  00ED                     vfprintf@fp:
  6766                           
  6767                           ; 1 bytes @ 0x4D
  6768  00ED                     	ds	1
  6769  00EE                     vfprintf@cfmt:
  6770                           
  6771                           ; 2 bytes @ 0x4E
  6772  00EE                     	ds	2
  6773                           
  6774                           	psect	cstackCOMMON
  6775  0070                     __pcstackCOMMON:
  6776  0070                     ?_PMD_Initialize:
  6777  0070                     ?_PIN_MANAGER_Initialize:	
  6778                           ; 1 bytes @ 0x0
  6779                           
  6780  0070                     ?_OSCILLATOR_Initialize:	
  6781                           ; 1 bytes @ 0x0
  6782                           
  6783  0070                     ?_ADCC_Initialize:	
  6784                           ; 1 bytes @ 0x0
  6785                           
  6786  0070                     ?_EUSART1_Initialize:	
  6787                           ; 1 bytes @ 0x0
  6788                           
  6789  0070                     ?_CLKREF_Initialize:	
  6790                           ; 1 bytes @ 0x0
  6791                           
  6792  0070                     ?_EUSART1_Receive_ISR:	
  6793                           ; 1 bytes @ 0x0
  6794                           
  6795  0070                     ?_EUSART1_Transmit_ISR:	
  6796                           ; 1 bytes @ 0x0
  6797                           
  6798  0070                     ??_EUSART1_Transmit_ISR:	
  6799                           ; 1 bytes @ 0x0
  6800                           
  6801  0070                     ?_EUSART1_DefaultFramingErrorHandler:	
  6802                           ; 1 bytes @ 0x0
  6803                           
  6804  0070                     ??_EUSART1_DefaultFramingErrorHandler:	
  6805                           ; 1 bytes @ 0x0
  6806                           
  6807  0070                     ?_EUSART1_DefaultOverrunErrorHandler:	
  6808                           ; 1 bytes @ 0x0
  6809                           
  6810  0070                     ??_EUSART1_DefaultOverrunErrorHandler:	
  6811                           ; 1 bytes @ 0x0
  6812                           
  6813  0070                     ?_EUSART1_DefaultErrorHandler:	
  6814                           ; 1 bytes @ 0x0
  6815                           
  6816  0070                     ?_EUSART1_RxDataHandler:	
  6817                           ; 1 bytes @ 0x0
  6818                           
  6819  0070                     ??_EUSART1_RxDataHandler:	
  6820                           ; 1 bytes @ 0x0
  6821                           
  6822  0070                     ?_tester_initialize:	
  6823                           ; 1 bytes @ 0x0
  6824                           
  6825  0070                     ?_mess_handler:	
  6826                           ; 1 bytes @ 0x0
  6827                           
  6828  0070                     ?_sweep:	
  6829                           ; 1 bytes @ 0x0
  6830                           
  6831  0070                     ?_ADC_test:	
  6832                           ; 1 bytes @ 0x0
  6833                           
  6834  0070                     ?_putch:	
  6835                           ; 1 bytes @ 0x0
  6836                           
  6837  0070                     ?_SYSTEM_Initialize:	
  6838                           ; 1 bytes @ 0x0
  6839                           
  6840  0070                     ?_EUSART1_is_tx_ready:	
  6841                           ; 1 bytes @ 0x0
  6842                           
  6843  0070                     ?_EUSART1_is_rx_ready:	
  6844                           ; 1 bytes @ 0x0
  6845                           
  6846  0070                     ?_EUSART1_Read:	
  6847                           ; 1 bytes @ 0x0
  6848                           
  6849  0070                     ?_EUSART1_Write:	
  6850                           ; 1 bytes @ 0x0
  6851                           
  6852  0070                     ?_INTERRUPT_InterruptManager:	
  6853                           ; 1 bytes @ 0x0
  6854                           
  6855  0070                     ?_main:	
  6856                           ; 1 bytes @ 0x0
  6857                           
  6858  0070                     putch@c:	
  6859                           ; 1 bytes @ 0x0
  6860                           
  6861                           
  6862                           ; 1 bytes @ 0x0
  6863  0070                     	ds	1
  6864  0071                     ?___fleq:
  6865  0071                     ??_PMD_Initialize:	
  6866                           ; 1 bit 
  6867                           
  6868  0071                     ??_PIN_MANAGER_Initialize:	
  6869                           ; 1 bytes @ 0x1
  6870                           
  6871  0071                     ??_OSCILLATOR_Initialize:	
  6872                           ; 1 bytes @ 0x1
  6873                           
  6874  0071                     ??_ADCC_Initialize:	
  6875                           ; 1 bytes @ 0x1
  6876                           
  6877  0071                     ??_CLKREF_Initialize:	
  6878                           ; 1 bytes @ 0x1
  6879                           
  6880  0071                     ?_EUSART1_SetRxInterruptHandler:	
  6881                           ; 1 bytes @ 0x1
  6882                           
  6883  0071                     ??_EUSART1_Receive_ISR:	
  6884                           ; 1 bytes @ 0x1
  6885                           
  6886  0071                     ?_EUSART1_SetTxInterruptHandler:	
  6887                           ; 1 bytes @ 0x1
  6888                           
  6889  0071                     ?_EUSART1_SetFramingErrorHandler:	
  6890                           ; 1 bytes @ 0x1
  6891                           
  6892  0071                     ?_EUSART1_SetOverrunErrorHandler:	
  6893                           ; 1 bytes @ 0x1
  6894                           
  6895  0071                     ?_EUSART1_SetErrorHandler:	
  6896                           ; 1 bytes @ 0x1
  6897                           
  6898  0071                     ??_EUSART1_DefaultErrorHandler:	
  6899                           ; 1 bytes @ 0x1
  6900                           
  6901  0071                     ?_calculate_checksum:	
  6902                           ; 1 bytes @ 0x1
  6903                           
  6904  0071                     ?_strcpy:	
  6905                           ; 1 bytes @ 0x1
  6906                           
  6907  0071                     ??_putch:	
  6908                           ; 1 bytes @ 0x1
  6909                           
  6910  0071                     ??_EUSART1_is_tx_ready:	
  6911                           ; 1 bytes @ 0x1
  6912                           
  6913  0071                     ??_EUSART1_is_rx_ready:	
  6914                           ; 1 bytes @ 0x1
  6915                           
  6916  0071                     ??_EUSART1_Read:	
  6917                           ; 1 bytes @ 0x1
  6918                           
  6919  0071                     ??_EUSART1_Write:	
  6920                           ; 1 bytes @ 0x1
  6921                           
  6922  0071                     ??_INTERRUPT_InterruptManager:	
  6923                           ; 1 bytes @ 0x1
  6924                           
  6925  0071                     ?_config:	
  6926                           ; 1 bytes @ 0x1
  6927                           
  6928  0071                     ?_setGain:	
  6929                           ; 1 bytes @ 0x1
  6930                           
  6931  0071                     ?_setFreq:	
  6932                           ; 1 bytes @ 0x1
  6933                           
  6934  0071                     ?_setFilt:	
  6935                           ; 1 bytes @ 0x1
  6936                           
  6937  0071                     ?__Umul8_16:	
  6938                           ; 1 bytes @ 0x1
  6939                           
  6940  0071                     ?_fputc:	
  6941                           ; 2 bytes @ 0x1
  6942                           
  6943  0071                     ?_strlen:	
  6944                           ; 2 bytes @ 0x1
  6945                           
  6946  0071                     ?___fpclassifyf:	
  6947                           ; 2 bytes @ 0x1
  6948                           
  6949  0071                     ?_isupper:	
  6950                           ; 2 bytes @ 0x1
  6951                           
  6952  0071                     ?_isdigit:	
  6953                           ; 2 bytes @ 0x1
  6954                           
  6955  0071                     ?_strncmp:	
  6956                           ; 2 bytes @ 0x1
  6957                           
  6958  0071                     ?_isspace:	
  6959                           ; 2 bytes @ 0x1
  6960                           
  6961  0071                     ?_ADCC_GetSingleConversion:	
  6962                           ; 2 bytes @ 0x1
  6963                           
  6964  0071                     ?___wmul:	
  6965                           ; 2 bytes @ 0x1
  6966                           
  6967  0071                     ?___awdiv:	
  6968                           ; 2 bytes @ 0x1
  6969                           
  6970  0071                     ?___awmod:	
  6971                           ; 2 bytes @ 0x1
  6972                           
  6973  0071                     ?___flneg:	
  6974                           ; 2 bytes @ 0x1
  6975                           
  6976  0071                     ?___fltol:	
  6977                           ; 4 bytes @ 0x1
  6978                           
  6979  0071                     ?___fladd:	
  6980                           ; 4 bytes @ 0x1
  6981                           
  6982  0071                     ?___xxtofl:	
  6983                           ; 4 bytes @ 0x1
  6984                           
  6985  0071                     setGain@gain_index:	
  6986                           ; 4 bytes @ 0x1
  6987                           
  6988  0071                     setFreq@freq_index:	
  6989                           ; 1 bytes @ 0x1
  6990                           
  6991  0071                     setFilt@freq_index:	
  6992                           ; 1 bytes @ 0x1
  6993                           
  6994  0071                     calculate_checksum@num:	
  6995                           ; 1 bytes @ 0x1
  6996                           
  6997  0071                     __Umul8_16@multiplicand:	
  6998                           ; 1 bytes @ 0x1
  6999                           
  7000  0071                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  7001                           ; 1 bytes @ 0x1
  7002                           
  7003  0071                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  7004                           ; 2 bytes @ 0x1
  7005                           
  7006  0071                     EUSART1_SetErrorHandler@interruptHandler:	
  7007                           ; 2 bytes @ 0x1
  7008                           
  7009  0071                     EUSART1_SetTxInterruptHandler@interruptHandler:	
  7010                           ; 2 bytes @ 0x1
  7011                           
  7012  0071                     EUSART1_SetRxInterruptHandler@interruptHandler:	
  7013                           ; 2 bytes @ 0x1
  7014                           
  7015  0071                     ___wmul@multiplier:	
  7016                           ; 2 bytes @ 0x1
  7017                           
  7018  0071                     ___awdiv@divisor:	
  7019                           ; 2 bytes @ 0x1
  7020                           
  7021  0071                     ___awmod@divisor:	
  7022                           ; 2 bytes @ 0x1
  7023                           
  7024  0071                     isdigit@c:	
  7025                           ; 2 bytes @ 0x1
  7026                           
  7027  0071                     isspace@c:	
  7028                           ; 2 bytes @ 0x1
  7029                           
  7030  0071                     isupper@c:	
  7031                           ; 2 bytes @ 0x1
  7032                           
  7033  0071                     fputc@c:	
  7034                           ; 2 bytes @ 0x1
  7035                           
  7036  0071                     strcpy@src:	
  7037                           ; 2 bytes @ 0x1
  7038                           
  7039  0071                     strncmp@_r:	
  7040                           ; 2 bytes @ 0x1
  7041                           
  7042  0071                     ___fleq@ff1:	
  7043                           ; 2 bytes @ 0x1
  7044                           
  7045  0071                     ___flneg@f1:	
  7046                           ; 4 bytes @ 0x1
  7047                           
  7048  0071                     ___fltol@f1:	
  7049                           ; 4 bytes @ 0x1
  7050                           
  7051  0071                     ___fladd@b:	
  7052                           ; 4 bytes @ 0x1
  7053                           
  7054  0071                     ___xxtofl@val:	
  7055                           ; 4 bytes @ 0x1
  7056                           
  7057  0071                     ___fpclassifyf@x:	
  7058                           ; 4 bytes @ 0x1
  7059                           
  7060  0071                     config@conf:	
  7061                           ; 4 bytes @ 0x1
  7062                           
  7063                           
  7064                           ; 6 bytes @ 0x1
  7065  0071                     	ds	1
  7066  0072                     ??_calculate_checksum:
  7067  0072                     ??_setGain:	
  7068                           ; 1 bytes @ 0x2
  7069                           
  7070  0072                     ??_setFreq:	
  7071                           ; 1 bytes @ 0x2
  7072                           
  7073  0072                     ??_setFilt:	
  7074                           ; 1 bytes @ 0x2
  7075                           
  7076  0072                     EUSART1_Read@readValue:	
  7077                           ; 1 bytes @ 0x2
  7078                           
  7079  0072                     EUSART1_Write@txData:	
  7080                           ; 1 bytes @ 0x2
  7081                           
  7082                           
  7083                           ; 1 bytes @ 0x2
  7084  0072                     	ds	1
  7085  0073                     ??_EUSART1_Initialize:
  7086  0073                     ??_EUSART1_SetRxInterruptHandler:	
  7087                           ; 1 bytes @ 0x3
  7088                           
  7089  0073                     ??_EUSART1_SetTxInterruptHandler:	
  7090                           ; 1 bytes @ 0x3
  7091                           
  7092  0073                     ??_EUSART1_SetFramingErrorHandler:	
  7093                           ; 1 bytes @ 0x3
  7094                           
  7095  0073                     ??_EUSART1_SetOverrunErrorHandler:	
  7096                           ; 1 bytes @ 0x3
  7097                           
  7098  0073                     ??_EUSART1_SetErrorHandler:	
  7099                           ; 1 bytes @ 0x3
  7100                           
  7101  0073                     ?__puts:	
  7102                           ; 1 bytes @ 0x3
  7103                           
  7104  0073                     ?_write:	
  7105                           ; 1 bytes @ 0x3
  7106                           
  7107  0073                     ??__Umul8_16:	
  7108                           ; 1 bytes @ 0x3
  7109                           
  7110  0073                     ??_strlen:	
  7111                           ; 1 bytes @ 0x3
  7112                           
  7113  0073                     ??_isupper:	
  7114                           ; 1 bytes @ 0x3
  7115                           
  7116  0073                     ??_strcpy:	
  7117                           ; 1 bytes @ 0x3
  7118                           
  7119  0073                     ??_isdigit:	
  7120                           ; 1 bytes @ 0x3
  7121                           
  7122  0073                     ??_isspace:	
  7123                           ; 1 bytes @ 0x3
  7124                           
  7125  0073                     setGain@aux:	
  7126                           ; 1 bytes @ 0x3
  7127                           
  7128  0073                     setFreq@aux:	
  7129                           ; 1 bytes @ 0x3
  7130                           
  7131  0073                     fputc@fp:	
  7132                           ; 1 bytes @ 0x3
  7133                           
  7134  0073                     __puts@pt:	
  7135                           ; 1 bytes @ 0x3
  7136                           
  7137  0073                     write@pt:	
  7138                           ; 2 bytes @ 0x3
  7139                           
  7140  0073                     ___wmul@multiplicand:	
  7141                           ; 2 bytes @ 0x3
  7142                           
  7143  0073                     ___awdiv@dividend:	
  7144                           ; 2 bytes @ 0x3
  7145                           
  7146  0073                     ___awmod@dividend:	
  7147                           ; 2 bytes @ 0x3
  7148                           
  7149  0073                     strncmp@n:	
  7150                           ; 2 bytes @ 0x3
  7151                           
  7152                           
  7153                           ; 2 bytes @ 0x3
  7154  0073                     	ds	1
  7155  0074                     ??_fputc:
  7156  0074                     ??_SYSTEM_Initialize:	
  7157                           ; 1 bytes @ 0x4
  7158                           
  7159  0074                     ??_ADCC_GetSingleConversion:	
  7160                           ; 1 bytes @ 0x4
  7161                           
  7162  0074                     ADCC_GetSingleConversion@channel:	
  7163                           ; 1 bytes @ 0x4
  7164                           
  7165  0074                     setGain@asic:	
  7166                           ; 1 bytes @ 0x4
  7167                           
  7168  0074                     setFreq@asic:	
  7169                           ; 1 bytes @ 0x4
  7170                           
  7171  0074                     calculate_checksum@data:	
  7172                           ; 1 bytes @ 0x4
  7173                           
  7174  0074                     strlen@a:	
  7175                           ; 1 bytes @ 0x4
  7176                           
  7177  0074                     setFilt@aux:	
  7178                           ; 1 bytes @ 0x4
  7179                           
  7180                           
  7181                           ; 4 bytes @ 0x4
  7182  0074                     	ds	1
  7183  0075                     ??__puts:
  7184  0075                     ??___fpclassifyf:	
  7185                           ; 1 bytes @ 0x5
  7186                           
  7187  0075                     ??_strncmp:	
  7188                           ; 1 bytes @ 0x5
  7189                           
  7190  0075                     ??___wmul:	
  7191                           ; 1 bytes @ 0x5
  7192                           
  7193  0075                     ??___awdiv:	
  7194                           ; 1 bytes @ 0x5
  7195                           
  7196  0075                     ??___awmod:	
  7197                           ; 1 bytes @ 0x5
  7198                           
  7199  0075                     ??___flneg:	
  7200                           ; 1 bytes @ 0x5
  7201                           
  7202  0075                     ??___fltol:	
  7203                           ; 1 bytes @ 0x5
  7204                           
  7205  0075                     ??___xxtofl:	
  7206                           ; 1 bytes @ 0x5
  7207                           
  7208  0075                     calculate_checksum@check:	
  7209                           ; 1 bytes @ 0x5
  7210                           
  7211  0075                     write@lenght:	
  7212                           ; 1 bytes @ 0x5
  7213                           
  7214  0075                     _isspace$2251:	
  7215                           ; 1 bytes @ 0x5
  7216                           
  7217  0075                     strlen@s:	
  7218                           ; 1 bytes @ 0x5
  7219                           
  7220  0075                     ___wmul@product:	
  7221                           ; 1 bytes @ 0x5
  7222                           
  7223  0075                     __Umul8_16@product:	
  7224                           ; 2 bytes @ 0x5
  7225                           
  7226  0075                     strcpy@s:	
  7227                           ; 2 bytes @ 0x5
  7228                           
  7229  0075                     ___fleq@ff2:	
  7230                           ; 2 bytes @ 0x5
  7231                           
  7232  0075                     ___fladd@a:	
  7233                           ; 4 bytes @ 0x5
  7234                           
  7235                           
  7236                           ; 4 bytes @ 0x5
  7237  0075                     	ds	1
  7238  0076                     ??_write:
  7239  0076                     calculate_checksum@i:	
  7240                           ; 1 bytes @ 0x6
  7241                           
  7242  0076                     ___awdiv@counter:	
  7243                           ; 1 bytes @ 0x6
  7244                           
  7245  0076                     ___awmod@counter:	
  7246                           ; 1 bytes @ 0x6
  7247                           
  7248  0076                     strncmp@_l:	
  7249                           ; 1 bytes @ 0x6
  7250                           
  7251                           
  7252                           ; 1 bytes @ 0x6
  7253  0076                     	ds	1
  7254  0077                     ??_config:
  7255  0077                     ?_tolower:	
  7256                           ; 1 bytes @ 0x7
  7257                           
  7258  0077                     ?_atoi:	
  7259                           ; 2 bytes @ 0x7
  7260                           
  7261  0077                     ___awdiv@sign:	
  7262                           ; 2 bytes @ 0x7
  7263                           
  7264  0077                     ___awmod@sign:	
  7265                           ; 1 bytes @ 0x7
  7266                           
  7267  0077                     strcpy@d:	
  7268                           ; 1 bytes @ 0x7
  7269                           
  7270  0077                     __Umul8_16@word_mpld:	
  7271                           ; 1 bytes @ 0x7
  7272                           
  7273  0077                     atoi@s:	
  7274                           ; 2 bytes @ 0x7
  7275                           
  7276  0077                     strncmp@r:	
  7277                           ; 2 bytes @ 0x7
  7278                           
  7279  0077                     tolower@c:	
  7280                           ; 2 bytes @ 0x7
  7281                           
  7282                           
  7283                           ; 2 bytes @ 0x7
  7284  0077                     	ds	1
  7285  0078                     config@i:
  7286  0078                     setFilt@asic:	
  7287                           ; 1 bytes @ 0x8
  7288                           
  7289  0078                     __puts@index:	
  7290                           ; 1 bytes @ 0x8
  7291                           
  7292  0078                     write@i:	
  7293                           ; 1 bytes @ 0x8
  7294                           
  7295  0078                     strcpy@dest:	
  7296                           ; 1 bytes @ 0x8
  7297                           
  7298  0078                     ___awdiv@quotient:	
  7299                           ; 1 bytes @ 0x8
  7300                           
  7301                           
  7302                           ; 2 bytes @ 0x8
  7303  0078                     	ds	1
  7304  0079                     ??_tester_initialize:
  7305  0079                     ??_measure:	
  7306                           ; 1 bytes @ 0x9
  7307                           
  7308  0079                     ?_fputs:	
  7309                           ; 1 bytes @ 0x9
  7310                           
  7311  0079                     __Umul8_16@multiplier:	
  7312                           ; 2 bytes @ 0x9
  7313                           
  7314  0079                     fputs@fp:	
  7315                           ; 1 bytes @ 0x9
  7316                           
  7317  0079                     strncmp@l:	
  7318                           ; 1 bytes @ 0x9
  7319                           
  7320  0079                     _tolower$2315:	
  7321                           ; 1 bytes @ 0x9
  7322                           
  7323                           
  7324                           ; 2 bytes @ 0x9
  7325  0079                     	ds	1
  7326  007A                     ??___flsub:
  7327  007A                     ??_pad:	
  7328                           ; 1 bytes @ 0xA
  7329                           
  7330  007A                     ___fltol@sign1:	
  7331                           ; 1 bytes @ 0xA
  7332                           
  7333                           
  7334                           ; 1 bytes @ 0xA
  7335  007A                     	ds	1
  7336  007B                     ___fltol@exp1:
  7337                           
  7338                           ; 1 bytes @ 0xB
  7339  007B                     	ds	1
  7340                           
  7341                           	psect	cstackBANK0
  7342  0020                     __pcstackBANK0:
  7343  0020                     ?_measure:
  7344  0020                     ??_fputs:	
  7345                           ; 1 bytes @ 0x0
  7346                           
  7347  0020                     ??_tolower:	
  7348                           ; 1 bytes @ 0x0
  7349                           
  7350  0020                     ??_atoi:	
  7351                           ; 1 bytes @ 0x0
  7352                           
  7353  0020                     ??___fleq:	
  7354                           ; 1 bytes @ 0x0
  7355                           
  7356  0020                     ??___fladd:	
  7357                           ; 1 bytes @ 0x0
  7358                           
  7359  0020                     measure@Q:	
  7360                           ; 1 bytes @ 0x0
  7361                           
  7362  0020                     ___xxtofl@sign:	
  7363                           ; 1 bytes @ 0x0
  7364                           
  7365  0020                     ___fpclassifyf@e:	
  7366                           ; 1 bytes @ 0x0
  7367                           
  7368                           
  7369                           ; 2 bytes @ 0x0
  7370  0020                     	ds	1
  7371  0021                     ___xxtofl@exp:
  7372  0021                     measure@asic:	
  7373                           ; 1 bytes @ 0x1
  7374                           
  7375                           
  7376                           ; 6 bytes @ 0x1
  7377  0021                     	ds	1
  7378  0022                     ___xxtofl@arg:
  7379  0022                     ___fpclassifyf@u:	
  7380                           ; 4 bytes @ 0x2
  7381                           
  7382  0022                     tester_initialize@asic:	
  7383                           ; 4 bytes @ 0x2
  7384                           
  7385                           
  7386                           ; 6 bytes @ 0x2
  7387  0022                     	ds	1
  7388  0023                     fputs@c:
  7389                           
  7390                           ; 1 bytes @ 0x3
  7391  0023                     	ds	1
  7392  0024                     atoi@neg:
  7393  0024                     fputs@i:	
  7394                           ; 2 bytes @ 0x4
  7395                           
  7396                           
  7397                           ; 2 bytes @ 0x4
  7398  0024                     	ds	2
  7399  0026                     ?___flmul:
  7400  0026                     fputs@s:	
  7401                           ; 4 bytes @ 0x6
  7402                           
  7403  0026                     _atoi$2220:	
  7404                           ; 1 bytes @ 0x6
  7405                           
  7406  0026                     ___flmul@b:	
  7407                           ; 2 bytes @ 0x6
  7408                           
  7409                           
  7410                           ; 4 bytes @ 0x6
  7411  0026                     	ds	1
  7412  0027                     ?_pad:
  7413  0027                     pad@buf:	
  7414                           ; 2 bytes @ 0x7
  7415                           
  7416  0027                     measure@offset:	
  7417                           ; 1 bytes @ 0x7
  7418                           
  7419                           
  7420                           ; 2 bytes @ 0x7
  7421  0027                     	ds	1
  7422  0028                     ___fladd@signs:
  7423  0028                     pad@p:	
  7424                           ; 1 bytes @ 0x8
  7425                           
  7426  0028                     _atoi$2222:	
  7427                           ; 2 bytes @ 0x8
  7428                           
  7429                           
  7430                           ; 2 bytes @ 0x8
  7431  0028                     	ds	1
  7432  0029                     ___fladd@aexp:
  7433  0029                     measure@value:	
  7434                           ; 1 bytes @ 0x9
  7435                           
  7436                           
  7437                           ; 2 bytes @ 0x9
  7438  0029                     	ds	1
  7439  002A                     ___fladd@bexp:
  7440  002A                     _atoi$2221:	
  7441                           ; 1 bytes @ 0xA
  7442                           
  7443  002A                     pad@i:	
  7444                           ; 1 bytes @ 0xA
  7445                           
  7446  002A                     ___flmul@a:	
  7447                           ; 2 bytes @ 0xA
  7448                           
  7449                           
  7450                           ; 4 bytes @ 0xA
  7451  002A                     	ds	1
  7452  002B                     measure@I:
  7453  002B                     ___fladd@grs:	
  7454                           ; 1 bytes @ 0xB
  7455                           
  7456  002B                     atoi@n:	
  7457                           ; 1 bytes @ 0xB
  7458                           
  7459                           
  7460                           ; 2 bytes @ 0xB
  7461  002B                     	ds	1
  7462  002C                     measure@aux2:
  7463  002C                     pad@w:	
  7464                           ; 2 bytes @ 0xC
  7465                           
  7466                           
  7467                           ; 2 bytes @ 0xC
  7468  002C                     	ds	2
  7469  002E                     ??___flmul:
  7470  002E                     pad@fp:	
  7471                           ; 1 bytes @ 0xE
  7472                           
  7473  002E                     measure@aux1:	
  7474                           ; 1 bytes @ 0xE
  7475                           
  7476                           
  7477                           ; 2 bytes @ 0xE
  7478  002E                     	ds	2
  7479  0030                     ??_sweep:
  7480                           
  7481                           ; 1 bytes @ 0x10
  7482  0030                     	ds	2
  7483  0032                     sweep@check:
  7484                           
  7485                           ; 1 bytes @ 0x12
  7486  0032                     	ds	1
  7487  0033                     ___flmul@sign:
  7488  0033                     sweep@aux:	
  7489                           ; 1 bytes @ 0x13
  7490                           
  7491                           
  7492                           ; 7 bytes @ 0x13
  7493  0033                     	ds	1
  7494  0034                     ___flmul@grs:
  7495                           
  7496                           ; 4 bytes @ 0x14
  7497  0034                     	ds	4
  7498  0038                     ___flmul@aexp:
  7499                           
  7500                           ; 1 bytes @ 0x18
  7501  0038                     	ds	1
  7502  0039                     ___flmul@bexp:
  7503                           
  7504                           ; 1 bytes @ 0x19
  7505  0039                     	ds	1
  7506  003A                     sweep@i:
  7507  003A                     ___flmul@prod:	
  7508                           ; 1 bytes @ 0x1A
  7509                           
  7510                           
  7511                           ; 4 bytes @ 0x1A
  7512  003A                     	ds	1
  7513  003B                     sweep@count:
  7514                           
  7515                           ; 1 bytes @ 0x1B
  7516  003B                     	ds	1
  7517  003C                     sweep@I:
  7518                           
  7519                           ; 2 bytes @ 0x1C
  7520  003C                     	ds	2
  7521  003E                     sweep@Q:
  7522  003E                     ___flmul@temp:	
  7523                           ; 2 bytes @ 0x1E
  7524                           
  7525                           
  7526                           ; 2 bytes @ 0x1E
  7527  003E                     	ds	2
  7528  0040                     ?___flge:
  7529  0040                     ?___flsub:	
  7530                           ; 1 bit 
  7531                           
  7532  0040                     ?___fldiv:	
  7533                           ; 4 bytes @ 0x20
  7534                           
  7535  0040                     sweep@freq_index:	
  7536                           ; 4 bytes @ 0x20
  7537                           
  7538  0040                     ___flge@ff1:	
  7539                           ; 1 bytes @ 0x20
  7540                           
  7541  0040                     ___flsub@a:	
  7542                           ; 4 bytes @ 0x20
  7543                           
  7544  0040                     ___fldiv@a:	
  7545                           ; 4 bytes @ 0x20
  7546                           
  7547                           
  7548                           ; 4 bytes @ 0x20
  7549  0040                     	ds	1
  7550  0041                     sweep@gain_index:
  7551                           
  7552                           ; 1 bytes @ 0x21
  7553  0041                     	ds	1
  7554  0042                     sweep@ret:
  7555                           
  7556                           ; 1 bytes @ 0x22
  7557  0042                     	ds	1
  7558  0043                     sweep@asic:
  7559                           
  7560                           ; 6 bytes @ 0x23
  7561  0043                     	ds	1
  7562  0044                     ___flge@ff2:
  7563  0044                     ___flsub@b:	
  7564                           ; 4 bytes @ 0x24
  7565                           
  7566  0044                     ___fldiv@b:	
  7567                           ; 4 bytes @ 0x24
  7568                           
  7569                           
  7570                           ; 4 bytes @ 0x24
  7571  0044                     	ds	4
  7572  0048                     ??___flge:
  7573  0048                     ??___fldiv:	
  7574                           ; 1 bytes @ 0x28
  7575                           
  7576                           
  7577                           ; 1 bytes @ 0x28
  7578  0048                     	ds	5
  7579  004D                     ___fldiv@rem:
  7580                           
  7581                           ; 4 bytes @ 0x2D
  7582  004D                     	ds	4
  7583  0051                     ___fldiv@sign:
  7584                           
  7585                           ; 1 bytes @ 0x31
  7586  0051                     	ds	1
  7587  0052                     ___fldiv@new_exp:
  7588                           
  7589                           ; 2 bytes @ 0x32
  7590  0052                     	ds	2
  7591  0054                     ___fldiv@grs:
  7592                           
  7593                           ; 4 bytes @ 0x34
  7594  0054                     	ds	4
  7595  0058                     ___fldiv@bexp:
  7596                           
  7597                           ; 1 bytes @ 0x38
  7598  0058                     	ds	1
  7599  0059                     ___fldiv@aexp:
  7600                           
  7601                           ; 1 bytes @ 0x39
  7602  0059                     	ds	1
  7603  005A                     ?_floorf:
  7604  005A                     floorf@x:	
  7605                           ; 4 bytes @ 0x3A
  7606                           
  7607                           
  7608                           ; 4 bytes @ 0x3A
  7609  005A                     	ds	4
  7610  005E                     ??_floorf:
  7611                           
  7612                           ; 1 bytes @ 0x3E
  7613  005E                     	ds	6
  7614  0064                     floorf@m:
  7615                           
  7616                           ; 4 bytes @ 0x44
  7617  0064                     	ds	4
  7618  0068                     floorf@e:
  7619                           
  7620                           ; 2 bytes @ 0x48
  7621  0068                     	ds	2
  7622  006A                     floorf@u:
  7623                           
  7624                           ; 4 bytes @ 0x4A
  7625  006A                     	ds	4
  7626  006E                     ?_vfpfcnvrt:
  7627  006E                     vfpfcnvrt@fmt:	
  7628                           ; 2 bytes @ 0x4E
  7629                           
  7630                           
  7631                           ; 1 bytes @ 0x4E
  7632  006E                     	ds	1
  7633  006F                     vfpfcnvrt@ap:
  7634                           
  7635                           ; 1 bytes @ 0x4F
  7636  006F                     	ds	1
  7637                           
  7638                           	psect	maintext
  7639  1AF9                     __pmaintext:	
  7640 ;;
  7641 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  7642 ;;
  7643 ;; *************** function _main *****************
  7644 ;; Defined at:
  7645 ;;		line 51 in file "main.c"
  7646 ;; Parameters:    Size  Location     Type
  7647 ;;		None
  7648 ;; Auto vars:     Size  Location     Type
  7649 ;;  asic            6    0        struct .
  7650 ;;  aux             1    0        unsigned char 
  7651 ;; Return value:  Size  Location     Type
  7652 ;;                  1    wreg      void 
  7653 ;; Registers used:
  7654 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7655 ;; Tracked objects:
  7656 ;;		On entry : B3F/0
  7657 ;;		On exit  : 0/0
  7658 ;;		Unchanged: 0/0
  7659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7661 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7662 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7663 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7664 ;;Total ram usage:        3 bytes
  7665 ;; Hardware stack levels required when called:   14
  7666 ;; This function calls:
  7667 ;;		_EUSART1_is_rx_ready
  7668 ;;		_SYSTEM_Initialize
  7669 ;;		_mess_handler
  7670 ;;		_tester_initialize
  7671 ;; This function is called by:
  7672 ;;		Startup code after reset
  7673 ;; This function uses a non-reentrant model
  7674 ;;
  7675                           
  7676                           
  7677                           ;psect for function _main
  7678  1AF9                     _main:
  7679  1AF9                     l6747:	
  7680                           ;incstack = 0
  7681                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7682                           
  7683                           
  7684                           ;main.c: 53:     unsigned char aux;;main.c: 54:     VIN asic;;main.c: 57:     SYSTEM_Ini
      +                          tialize();
  7685  1AF9  31A7  276F  319A   	fcall	_SYSTEM_Initialize
  7686  1AFC                     l6749:
  7687                           
  7688                           ;main.c: 63:     (INTCONbits.GIE = 1);
  7689  1AFC  178B               	bsf	11,7	;volatile
  7690  1AFD                     l6751:
  7691                           
  7692                           ;main.c: 66:     (INTCONbits.PEIE = 1);
  7693  1AFD  170B               	bsf	11,6	;volatile
  7694  1AFE                     l6753:
  7695  1AFE                     l6755:
  7696  1AFE  0140               	movlb	0	; select bank0
  7697  1AFF  119A               	bcf	26,3	;volatile
  7698  1B00                     l6757:
  7699                           
  7700                           ;main.c: 80:     _delay((unsigned long)((150)*(32000000/4000.0)));
  7701  1B00  3007               	movlw	7
  7702  1B01  0142               	movlb	2	; select bank2
  7703  1B02  00EA               	movwf	(??_main^(0+256)+1)
  7704  1B03  3017               	movlw	23
  7705  1B04  00E9               	movwf	??_main^(0+256)
  7706  1B05  306A               	movlw	106
  7707  1B06                     u8387:
  7708  1B06  0B89               	decfsz	9,f
  7709  1B07  2B06               	goto	u8387
  7710  1B08  0BE9               	decfsz	??_main^(0+256),f
  7711  1B09  2B06               	goto	u8387
  7712  1B0A  0BEA               	decfsz	(??_main^(0+256)+1),f
  7713  1B0B  2B06               	goto	u8387
  7714  1B0C  0000               	nop
  7715  1B0D                     l6759:
  7716  1B0D  0140               	movlb	0	; select bank0
  7717  1B0E  159A               	bsf	26,3	;volatile
  7718  1B0F                     l6761:
  7719  1B0F  1418               	bsf	24,0	;volatile
  7720  1B10                     l6763:
  7721                           
  7722                           ;main.c: 85:     _delay((unsigned long)((200)*(32000000/4000.0)));
  7723  1B10  3009               	movlw	9
  7724  1B11  0142               	movlb	2	; select bank2
  7725  1B12  00EA               	movwf	(??_main^(0+256)+1)
  7726  1B13  301E               	movlw	30
  7727  1B14  00E9               	movwf	??_main^(0+256)
  7728  1B15  30E4               	movlw	228
  7729  1B16                     u8397:
  7730  1B16  0B89               	decfsz	9,f
  7731  1B17  2B16               	goto	u8397
  7732  1B18  0BE9               	decfsz	??_main^(0+256),f
  7733  1B19  2B16               	goto	u8397
  7734  1B1A  0BEA               	decfsz	(??_main^(0+256)+1),f
  7735  1B1B  2B16               	goto	u8397
  7736  1B1C  0000               	nop
  7737  1B1D                     l6765:
  7738  1B1D  0140               	movlb	0	; select bank0
  7739  1B1E  1018               	bcf	24,0	;volatile
  7740  1B1F                     l6767:
  7741                           
  7742                           ;main.c: 89:     tester_initialize();
  7743  1B1F  319B  23AC  319A   	fcall	_tester_initialize
  7744  1B22                     l478:	
  7745                           ;main.c: 124:     while (1) {
  7746                           
  7747  1B22  0064               	clrwdt	;# 
  7748  1B23                     l6769:
  7749                           
  7750                           ;main.c: 126:         if(EUSART1_is_rx_ready()) {
  7751  1B23  31A7  272C  319A   	fcall	_EUSART1_is_rx_ready
  7752  1B26  3A00               	xorlw	0
  7753  1B27  1903               	skipnz
  7754  1B28  2B2A               	goto	u8371
  7755  1B29  2B2B               	goto	u8370
  7756  1B2A                     u8371:
  7757  1B2A  2B22               	goto	l478
  7758  1B2B                     u8370:
  7759  1B2B                     l6771:
  7760                           
  7761                           ;main.c: 127:             mess_handler();
  7762  1B2B  3199  21A9  319A   	fcall	_mess_handler
  7763  1B2E  2B22               	goto	l478
  7764  1B2F  3180  282B         	ljmp	start
  7765  1B31                     __end_of_main:
  7766                           
  7767                           	psect	text1
  7768  19A9                     __ptext1:	
  7769 ;; *************** function _mess_handler *****************
  7770 ;; Defined at:
  7771 ;;		line 7 in file "tester.c"
  7772 ;; Parameters:    Size  Location     Type
  7773 ;;		None
  7774 ;; Auto vars:     Size  Location     Type
  7775 ;;  message         1   72[BANK2 ] unsigned char 
  7776 ;; Return value:  Size  Location     Type
  7777 ;;                  1    wreg      void 
  7778 ;; Registers used:
  7779 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7780 ;; Tracked objects:
  7781 ;;		On entry : 0/0
  7782 ;;		On exit  : 0/0
  7783 ;;		Unchanged: 0/0
  7784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7786 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7787 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7788 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7789 ;;Total ram usage:        3 bytes
  7790 ;; Hardware stack levels used:    1
  7791 ;; Hardware stack levels required when called:   13
  7792 ;; This function calls:
  7793 ;;		_ADC_test
  7794 ;;		_EUSART1_Read
  7795 ;;		__puts
  7796 ;;		_sweep
  7797 ;; This function is called by:
  7798 ;;		_main
  7799 ;; This function uses a non-reentrant model
  7800 ;;
  7801                           
  7802                           
  7803                           ;psect for function _mess_handler
  7804  19A9                     _mess_handler:
  7805  19A9                     l6729:	
  7806                           ;incstack = 0
  7807                           ; Regs used in _mess_handler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7808                           
  7809                           
  7810                           ;tester.c: 9:     unsigned char message;;tester.c: 11:     message = EUSART1_Read();
  7811  19A9  319A  2203  3199   	fcall	_EUSART1_Read
  7812  19AC  0142               	movlb	2	; select bank2
  7813  19AD  00E6               	movwf	??_mess_handler^(0+256)
  7814  19AE  0866               	movf	??_mess_handler^(0+256),w
  7815  19AF  00E8               	movwf	mess_handler@message^(0+256)
  7816                           
  7817                           ;tester.c: 13:     switch (message) {
  7818  19B0  29C1               	goto	l6739
  7819  19B1                     l6731:
  7820                           
  7821                           ;tester.c: 16:             _puts("Ok");
  7822  19B1  3026               	movlw	low (STR_1| (0+32768))
  7823  19B2  00F3               	movwf	__puts@pt
  7824  19B3  30A8               	movlw	high (STR_1| (0+32768))
  7825  19B4  00F4               	movwf	__puts@pt+1
  7826  19B5  3199  21D5  3199   	fcall	__puts
  7827                           
  7828                           ;tester.c: 17:             break;
  7829  19B8  29D4               	goto	l588
  7830  19B9                     l6733:
  7831                           
  7832                           ;tester.c: 20:             sweep();
  7833  19B9  3193  2307  3199   	fcall	_sweep
  7834                           
  7835                           ;tester.c: 23:             break;
  7836  19BC  29D4               	goto	l588
  7837  19BD                     l6735:
  7838                           
  7839                           ;tester.c: 26:             ADC_test();
  7840  19BD  318A  223C  3199   	fcall	_ADC_test
  7841                           
  7842                           ;tester.c: 27:             break;
  7843  19C0  29D4               	goto	l588
  7844  19C1                     l6739:
  7845  19C1  0868               	movf	mess_handler@message^(0+256),w
  7846  19C2  00E6               	movwf	??_mess_handler^(0+256)
  7847  19C3  01E7               	clrf	(??_mess_handler^(0+256)+1)
  7848                           
  7849                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7850                           ; Switch size 1, requested type "simple"
  7851                           ; Number of cases is 1, Range of values is 0 to 0
  7852                           ; switch strategies available:
  7853                           ; Name         Instructions Cycles
  7854                           ; simple_byte            4     3 (average)
  7855                           ; direct_byte            8     6 (fixed)
  7856                           ; jumptable            260     6 (fixed)
  7857                           ;	Chosen strategy is simple_byte
  7858  19C4  0867               	movf	(??_mess_handler+1)^(0+256),w
  7859  19C5  3A00               	xorlw	0	; case 0
  7860  19C6  1903               	skipnz
  7861  19C7  29C9               	goto	l6833
  7862  19C8  29D4               	goto	l588
  7863  19C9                     l6833:
  7864                           
  7865                           ; Switch size 1, requested type "simple"
  7866                           ; Number of cases is 3, Range of values is 97 to 116
  7867                           ; switch strategies available:
  7868                           ; Name         Instructions Cycles
  7869                           ; simple_byte           10     6 (average)
  7870                           ; direct_byte           49     9 (fixed)
  7871                           ; jumptable            263     9 (fixed)
  7872                           ;	Chosen strategy is simple_byte
  7873  19C9  0866               	movf	??_mess_handler^(0+256),w
  7874  19CA  3A61               	xorlw	97	; case 97
  7875  19CB  1903               	skipnz
  7876  19CC  29BD               	goto	l6735
  7877  19CD  3A07               	xorlw	7	; case 102
  7878  19CE  1903               	skipnz
  7879  19CF  29B9               	goto	l6733
  7880  19D0  3A12               	xorlw	18	; case 116
  7881  19D1  1903               	skipnz
  7882  19D2  29B1               	goto	l6731
  7883  19D3  29D4               	goto	l588
  7884  19D4                     l588:
  7885  19D4  0008               	return
  7886  19D5                     __end_of_mess_handler:
  7887                           
  7888                           	psect	text2
  7889  1307                     __ptext2:	
  7890 ;; *************** function _sweep *****************
  7891 ;; Defined at:
  7892 ;;		line 120 in file "tester.c"
  7893 ;; Parameters:    Size  Location     Type
  7894 ;;		None
  7895 ;; Auto vars:     Size  Location     Type
  7896 ;;  aux             7   19[BANK0 ] unsigned char [7]
  7897 ;;  asic            6   35[BANK0 ] struct .
  7898 ;;  Q               2   30[BANK0 ] short 
  7899 ;;  I               2   28[BANK0 ] short 
  7900 ;;  ret             1   34[BANK0 ] unsigned char 
  7901 ;;  gain_index      1   33[BANK0 ] unsigned char 
  7902 ;;  freq_index      1   32[BANK0 ] unsigned char 
  7903 ;;  count           1   27[BANK0 ] unsigned char 
  7904 ;;  i               1   26[BANK0 ] unsigned char 
  7905 ;;  check           1   18[BANK0 ] unsigned char 
  7906 ;; Return value:  Size  Location     Type
  7907 ;;                  1    wreg      void 
  7908 ;; Registers used:
  7909 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7910 ;; Tracked objects:
  7911 ;;		On entry : 0/0
  7912 ;;		On exit  : 0/0
  7913 ;;		Unchanged: 0/0
  7914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7916 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7917 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7918 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7919 ;;Total ram usage:       25 bytes
  7920 ;; Hardware stack levels used:    1
  7921 ;; Hardware stack levels required when called:    6
  7922 ;; This function calls:
  7923 ;;		_calculate_checksum
  7924 ;;		_measure
  7925 ;;		_setFilt
  7926 ;;		_setFreq
  7927 ;;		_setGain
  7928 ;;		_tester_initialize
  7929 ;;		_write
  7930 ;; This function is called by:
  7931 ;;		_mess_handler
  7932 ;; This function uses a non-reentrant model
  7933 ;;
  7934                           
  7935                           
  7936                           ;psect for function _sweep
  7937  1307                     _sweep:
  7938  1307                     l6591:	
  7939                           ;incstack = 0
  7940                           ; Regs used in _sweep: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7941                           
  7942                           
  7943                           ;tester.c: 122:     unsigned char gain_index;;tester.c: 123:     unsigned char freq_inde
      +                          x;;tester.c: 124:     unsigned char i, ret, count;;tester.c: 125:     short I,Q;;tester.
      +                          c: 126:     unsigned char aux[7], check;;tester.c: 132:     VIN asic;;tester.c: 133:    
      +                           asic.datas[0] = 0;
  7944  1307  0140               	movlb	0	; select bank0
  7945  1308  01C3               	clrf	sweep@asic
  7946  1309  01C4               	clrf	sweep@asic+1
  7947                           
  7948                           ;tester.c: 134:     asic.datas[1] = 0;
  7949  130A  01C5               	clrf	sweep@asic+2
  7950  130B  01C6               	clrf	sweep@asic+3
  7951                           
  7952                           ;tester.c: 135:     asic.datas[2] = 0;
  7953  130C  01C7               	clrf	sweep@asic+4
  7954  130D  01C8               	clrf	sweep@asic+5
  7955  130E                     l6593:
  7956                           
  7957                           ;tester.c: 141:     freq_index = 10;
  7958  130E  300A               	movlw	10
  7959  130F  00B0               	movwf	??_sweep
  7960  1310  0830               	movf	??_sweep,w
  7961  1311  00C0               	movwf	sweep@freq_index
  7962  1312                     l6595:
  7963                           
  7964                           ;tester.c: 142:     gain_index = 0;
  7965  1312  01C1               	clrf	sweep@gain_index
  7966  1313                     l6597:
  7967                           
  7968                           ;tester.c: 143:     setGain(&asic,gain_index);
  7969  1313  01F1               	clrf	setGain@gain_index
  7970  1314  3043               	movlw	(low (sweep@asic| 0))& (0+255)
  7971  1315  319B  236E  3193   	fcall	_setGain
  7972  1318                     l6599:
  7973                           
  7974                           ;tester.c: 146:     for (i = 0; i < 11; i++) {
  7975  1318  0140               	movlb	0	; select bank0
  7976  1319  01BA               	clrf	sweep@i
  7977  131A                     l6605:
  7978                           
  7979                           ;tester.c: 148:         setFreq(&asic,freq_index);
  7980  131A  0840               	movf	sweep@freq_index,w
  7981  131B  00B0               	movwf	??_sweep
  7982  131C  0830               	movf	??_sweep,w
  7983  131D  00F1               	movwf	setFreq@freq_index
  7984  131E  3043               	movlw	(low (sweep@asic| 0))& (0+255)
  7985  131F  3199  2154  3193   	fcall	_setFreq
  7986                           
  7987                           ;tester.c: 149:         setFilt(&asic,freq_index);
  7988  1322  0140               	movlb	0	; select bank0
  7989  1323  0840               	movf	sweep@freq_index,w
  7990  1324  00B0               	movwf	??_sweep
  7991  1325  0830               	movf	??_sweep,w
  7992  1326  00F1               	movwf	setFilt@freq_index
  7993  1327  3043               	movlw	(low (sweep@asic| 0))& (0+255)
  7994  1328  319A  2231  3193   	fcall	_setFilt
  7995  132B                     l6607:
  7996                           
  7997                           ;tester.c: 152:         count = 0;
  7998  132B  0140               	movlb	0	; select bank0
  7999  132C  01BB               	clrf	sweep@count
  8000  132D                     l6609:
  8001  132D                     l599:	
  8002                           ;tester.c: 155:         do {
  8003                           
  8004                           
  8005                           ;tester.c: 157:             ret = measure(&I,&Q,asic);
  8006  132D  303E               	movlw	(low (sweep@Q| 0))& (0+255)
  8007  132E  00B0               	movwf	??_sweep
  8008  132F  0830               	movf	??_sweep,w
  8009  1330  00A0               	movwf	measure@Q
  8010  1331  3043               	movlw	low sweep@asic
  8011  1332  0086               	movwf	6
  8012  1333  3000               	movlw	high sweep@asic
  8013  1334  0087               	movwf	7
  8014  1335  3021               	movlw	low measure@asic
  8015  1336  0084               	movwf	4
  8016  1337  3000               	movlw	high measure@asic
  8017  1338  0085               	movwf	5
  8018  1339  3F40               	moviw [0]fsr1
  8019  133A  3F80               	movwi [0]fsr0
  8020  133B  3F41               	moviw [1]fsr1
  8021  133C  3F81               	movwi [1]fsr0
  8022  133D  3F42               	moviw [2]fsr1
  8023  133E  3F82               	movwi [2]fsr0
  8024  133F  3F43               	moviw [3]fsr1
  8025  1340  3F83               	movwi [3]fsr0
  8026  1341  3F44               	moviw [4]fsr1
  8027  1342  3F84               	movwi [4]fsr0
  8028  1343  3F45               	moviw [5]fsr1
  8029  1344  3F85               	movwi [5]fsr0
  8030  1345  303C               	movlw	(low (sweep@I| 0))& (0+255)
  8031  1346  3192  2219  3193   	fcall	_measure
  8032  1349  0140               	movlb	0	; select bank0
  8033  134A  00B1               	movwf	??_sweep+1
  8034  134B  0831               	movf	??_sweep+1,w
  8035  134C  00C2               	movwf	sweep@ret
  8036  134D                     l6611:
  8037                           
  8038                           ;tester.c: 159:             if (ret == 1) {
  8039  134D  0342               	decf	sweep@ret,w
  8040  134E  1D03               	btfss	3,2
  8041  134F  2B51               	goto	u8281
  8042  1350  2B52               	goto	u8280
  8043  1351                     u8281:
  8044  1351  2B70               	goto	l6625
  8045  1352                     u8280:
  8046  1352                     l6613:
  8047                           
  8048                           ;tester.c: 161:                 if (count == 2) break;
  8049  1352  3002               	movlw	2
  8050  1353  063B               	xorwf	sweep@count,w
  8051  1354  1D03               	btfss	3,2
  8052  1355  2B57               	goto	u8291
  8053  1356  2B58               	goto	u8290
  8054  1357                     u8291:
  8055  1357  2B59               	goto	l6617
  8056  1358                     u8290:
  8057  1358  2B95               	goto	l6641
  8058  1359                     l6617:
  8059                           
  8060                           ;tester.c: 162:                 count = ret;
  8061  1359  0842               	movf	sweep@ret,w
  8062  135A  00B0               	movwf	??_sweep
  8063  135B  0830               	movf	??_sweep,w
  8064  135C  00BB               	movwf	sweep@count
  8065                           
  8066                           ;tester.c: 166:                 if (gain_index < 5) {
  8067  135D  3005               	movlw	5
  8068  135E  0241               	subwf	sweep@gain_index,w
  8069  135F  1803               	skipnc
  8070  1360  2B62               	goto	u8301
  8071  1361  2B63               	goto	u8300
  8072  1362                     u8301:
  8073  1362  2B95               	goto	l6641
  8074  1363                     u8300:
  8075  1363                     l6619:
  8076                           
  8077                           ;tester.c: 167:                     gain_index++;
  8078  1363  3001               	movlw	1
  8079  1364  00B0               	movwf	??_sweep
  8080  1365  0830               	movf	??_sweep,w
  8081  1366  07C1               	addwf	sweep@gain_index,f
  8082  1367                     l6621:
  8083                           
  8084                           ;tester.c: 168:                     setGain(&asic,gain_index);
  8085  1367  0841               	movf	sweep@gain_index,w
  8086  1368  00B0               	movwf	??_sweep
  8087  1369  0830               	movf	??_sweep,w
  8088  136A  00F1               	movwf	setGain@gain_index
  8089  136B  3043               	movlw	(low (sweep@asic| 0))& (0+255)
  8090  136C  319B  236E  3193   	fcall	_setGain
  8091                           
  8092                           ;tester.c: 169:                 } else {
  8093  136F  2B8F               	goto	l6639
  8094  1370                     l6625:
  8095  1370  3002               	movlw	2
  8096  1371  0642               	xorwf	sweep@ret,w
  8097  1372  1D03               	btfss	3,2
  8098  1373  2B75               	goto	u8311
  8099  1374  2B76               	goto	u8310
  8100  1375                     u8311:
  8101  1375  2B8F               	goto	l6639
  8102  1376                     u8310:
  8103  1376                     l6627:
  8104                           
  8105                           ;tester.c: 177:                 if (count == 1) break;
  8106  1376  033B               	decf	sweep@count,w
  8107  1377  1D03               	btfss	3,2
  8108  1378  2B7A               	goto	u8321
  8109  1379  2B7B               	goto	u8320
  8110  137A                     u8321:
  8111  137A  2B7C               	goto	l6631
  8112  137B                     u8320:
  8113  137B  2B95               	goto	l6641
  8114  137C                     l6631:
  8115                           
  8116                           ;tester.c: 178:                 count = ret;
  8117  137C  0842               	movf	sweep@ret,w
  8118  137D  00B0               	movwf	??_sweep
  8119  137E  0830               	movf	??_sweep,w
  8120  137F  00BB               	movwf	sweep@count
  8121  1380                     l6633:
  8122                           
  8123                           ;tester.c: 180:                 if (gain_index > 0) {
  8124  1380  0841               	movf	sweep@gain_index,w
  8125  1381  1903               	btfsc	3,2
  8126  1382  2B84               	goto	u8331
  8127  1383  2B85               	goto	u8330
  8128  1384                     u8331:
  8129  1384  2B95               	goto	l6641
  8130  1385                     u8330:
  8131  1385                     l6635:
  8132                           
  8133                           ;tester.c: 181:                     gain_index--;
  8134  1385  3001               	movlw	1
  8135  1386  02C1               	subwf	sweep@gain_index,f
  8136  1387                     l6637:
  8137                           
  8138                           ;tester.c: 182:                     setGain(&asic,gain_index);
  8139  1387  0841               	movf	sweep@gain_index,w
  8140  1388  00B0               	movwf	??_sweep
  8141  1389  0830               	movf	??_sweep,w
  8142  138A  00F1               	movwf	setGain@gain_index
  8143  138B  3043               	movlw	(low (sweep@asic| 0))& (0+255)
  8144  138C  319B  236E  3193   	fcall	_setGain
  8145  138F                     l6639:	
  8146                           ;tester.c: 183:                 } else {
  8147                           
  8148  138F  0140               	movlb	0	; select bank0
  8149  1390  0842               	movf	sweep@ret,w
  8150  1391  1D03               	btfss	3,2
  8151  1392  2B94               	goto	u8341
  8152  1393  2B95               	goto	u8340
  8153  1394                     u8341:
  8154  1394  2B2D               	goto	l599
  8155  1395                     u8340:
  8156  1395                     l6641:
  8157                           
  8158                           ;tester.c: 196:         ret = (freq_index << 4) & 0xf0;
  8159  1395  0840               	movf	sweep@freq_index,w
  8160  1396  00B0               	movwf	??_sweep
  8161  1397  3003               	movlw	3
  8162  1398                     u8355:
  8163  1398  35B0               	lslf	??_sweep,f
  8164  1399  3EFF               	addlw	-1
  8165  139A  1D03               	skipz
  8166  139B  2B98               	goto	u8355
  8167  139C  3530               	lslf	??_sweep,w
  8168  139D  39F0               	andlw	240
  8169  139E  00B1               	movwf	??_sweep+1
  8170  139F  0831               	movf	??_sweep+1,w
  8171  13A0  00C2               	movwf	sweep@ret
  8172                           
  8173                           ;tester.c: 197:         ret |= (gain_index & 0xff);
  8174  13A1  0841               	movf	sweep@gain_index,w
  8175  13A2  00B0               	movwf	??_sweep
  8176  13A3  0830               	movf	??_sweep,w
  8177  13A4  04C2               	iorwf	sweep@ret,f
  8178  13A5                     l6643:
  8179                           
  8180                           ;tester.c: 199:         aux[0] = 'f';
  8181  13A5  3066               	movlw	102
  8182  13A6  00B0               	movwf	??_sweep
  8183  13A7  0830               	movf	??_sweep,w
  8184  13A8  00B3               	movwf	sweep@aux
  8185  13A9                     l6645:
  8186                           
  8187                           ;tester.c: 200:         aux[1] = (unsigned char)(I & 0xff);
  8188  13A9  083C               	movf	sweep@I,w
  8189  13AA  00B0               	movwf	??_sweep
  8190  13AB  0830               	movf	??_sweep,w
  8191  13AC  00B4               	movwf	sweep@aux+1
  8192  13AD                     l6647:
  8193                           
  8194                           ;tester.c: 201:         aux[2] = (unsigned char)((I >> 8) & 0xff);
  8195  13AD  083D               	movf	sweep@I+1,w
  8196  13AE  00B0               	movwf	??_sweep
  8197  13AF  0830               	movf	??_sweep,w
  8198  13B0  00B5               	movwf	sweep@aux+2
  8199  13B1                     l6649:
  8200                           
  8201                           ;tester.c: 202:         aux[3] = (unsigned char)(Q & 0xff);
  8202  13B1  083E               	movf	sweep@Q,w
  8203  13B2  00B0               	movwf	??_sweep
  8204  13B3  0830               	movf	??_sweep,w
  8205  13B4  00B6               	movwf	sweep@aux+3
  8206  13B5                     l6651:
  8207                           
  8208                           ;tester.c: 203:         aux[4] = (unsigned char)((Q >> 8) & 0xff);
  8209  13B5  083F               	movf	sweep@Q+1,w
  8210  13B6  00B0               	movwf	??_sweep
  8211  13B7  0830               	movf	??_sweep,w
  8212  13B8  00B7               	movwf	sweep@aux+4
  8213  13B9                     l6653:
  8214                           
  8215                           ;tester.c: 204:         aux[5] = ret;
  8216  13B9  0842               	movf	sweep@ret,w
  8217  13BA  00B0               	movwf	??_sweep
  8218  13BB  0830               	movf	??_sweep,w
  8219  13BC  00B8               	movwf	sweep@aux+5
  8220  13BD                     l6655:
  8221                           
  8222                           ;tester.c: 206:         check = calculate_checksum(aux,6);
  8223  13BD  3006               	movlw	6
  8224  13BE  00B0               	movwf	??_sweep
  8225  13BF  0830               	movf	??_sweep,w
  8226  13C0  00F1               	movwf	calculate_checksum@num
  8227  13C1  3033               	movlw	(low (sweep@aux| 0))& (0+255)
  8228  13C2  31A7  27E6  3193   	fcall	_calculate_checksum
  8229  13C5  0140               	movlb	0	; select bank0
  8230  13C6  00B1               	movwf	??_sweep+1
  8231  13C7  0831               	movf	??_sweep+1,w
  8232  13C8  00B2               	movwf	sweep@check
  8233  13C9                     l6657:
  8234                           
  8235                           ;tester.c: 207:         aux[6] = check;
  8236  13C9  0832               	movf	sweep@check,w
  8237  13CA  00B0               	movwf	??_sweep
  8238  13CB  0830               	movf	??_sweep,w
  8239  13CC  00B9               	movwf	sweep@aux+6
  8240  13CD                     l6659:
  8241                           
  8242                           ;tester.c: 213:         write(aux,7);
  8243  13CD  3033               	movlw	low sweep@aux
  8244  13CE  00F3               	movwf	write@pt
  8245  13CF  3000               	movlw	high sweep@aux
  8246  13D0  00F4               	movwf	write@pt+1
  8247  13D1  3007               	movlw	7
  8248  13D2  00B0               	movwf	??_sweep
  8249  13D3  0830               	movf	??_sweep,w
  8250  13D4  00F5               	movwf	write@lenght
  8251  13D5  3198  209D  3193   	fcall	_write
  8252  13D8                     l6661:
  8253                           
  8254                           ;tester.c: 219:         _delay((unsigned long)((50)*(32000000/4000.0)));
  8255  13D8  3003               	movlw	3
  8256  13D9  0140               	movlb	0	; select bank0
  8257  13DA  00B1               	movwf	??_sweep+1
  8258  13DB  3008               	movlw	8
  8259  13DC  00B0               	movwf	??_sweep
  8260  13DD  3077               	movlw	119
  8261  13DE                     u8407:
  8262  13DE  0B89               	decfsz	9,f
  8263  13DF  2BDE               	goto	u8407
  8264  13E0  0BB0               	decfsz	??_sweep,f
  8265  13E1  2BDE               	goto	u8407
  8266  13E2  0BB1               	decfsz	??_sweep+1,f
  8267  13E3  2BDE               	goto	u8407
  8268                           
  8269                           ;tester.c: 222:         freq_index--;
  8270  13E4  3001               	movlw	1
  8271  13E5  0140               	movlb	0	; select bank0
  8272  13E6  02C0               	subwf	sweep@freq_index,f
  8273                           
  8274                           ;tester.c: 223:     }
  8275  13E7  3001               	movlw	1
  8276  13E8  00B0               	movwf	??_sweep
  8277  13E9  0830               	movf	??_sweep,w
  8278  13EA  07BA               	addwf	sweep@i,f
  8279  13EB                     l6663:
  8280  13EB  300B               	movlw	11
  8281  13EC  023A               	subwf	sweep@i,w
  8282  13ED  1C03               	skipc
  8283  13EE  2BF0               	goto	u8361
  8284  13EF  2BF1               	goto	u8360
  8285  13F0                     u8361:
  8286  13F0  2B1A               	goto	l6605
  8287  13F1                     u8360:
  8288  13F1                     l6665:
  8289                           
  8290                           ;tester.c: 226:     tester_initialize();
  8291  13F1  319B  23AC  3193   	fcall	_tester_initialize
  8292  13F4                     l611:
  8293  13F4  0008               	return
  8294  13F5                     __end_of_sweep:
  8295                           
  8296                           	psect	text3
  8297  1BAC                     __ptext3:	
  8298 ;; *************** function _tester_initialize *****************
  8299 ;; Defined at:
  8300 ;;		line 31 in file "tester.c"
  8301 ;; Parameters:    Size  Location     Type
  8302 ;;		None
  8303 ;; Auto vars:     Size  Location     Type
  8304 ;;  asic            6    2[BANK0 ] struct .
  8305 ;;  freq_index      1    0        unsigned char 
  8306 ;;  gain_index      1    0        unsigned char 
  8307 ;; Return value:  Size  Location     Type
  8308 ;;                  1    wreg      void 
  8309 ;; Registers used:
  8310 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8311 ;; Tracked objects:
  8312 ;;		On entry : 0/0
  8313 ;;		On exit  : 0/0
  8314 ;;		Unchanged: 0/0
  8315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8317 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8318 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8319 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8320 ;;Total ram usage:        9 bytes
  8321 ;; Hardware stack levels used:    1
  8322 ;; Hardware stack levels required when called:    5
  8323 ;; This function calls:
  8324 ;;		_config
  8325 ;;		_setFilt
  8326 ;;		_setFreq
  8327 ;;		_setGain
  8328 ;; This function is called by:
  8329 ;;		_main
  8330 ;;		_sweep
  8331 ;; This function uses a non-reentrant model
  8332 ;;
  8333                           
  8334                           
  8335                           ;psect for function _tester_initialize
  8336  1BAC                     _tester_initialize:
  8337  1BAC                     l5215:	
  8338                           ;incstack = 0
  8339                           ; Regs used in _tester_initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8340                           
  8341                           
  8342                           ;tester.c: 33:     unsigned char freq_index;;tester.c: 34:     unsigned char gain_index;
      +                          ;tester.c: 36:     VIN asic;;tester.c: 38:     asic.datas[0] = 0;
  8343  1BAC  0140               	movlb	0	; select bank0
  8344  1BAD  01A2               	clrf	tester_initialize@asic
  8345  1BAE  01A3               	clrf	tester_initialize@asic+1
  8346                           
  8347                           ;tester.c: 39:     asic.datas[1] = 0;
  8348  1BAF  01A4               	clrf	tester_initialize@asic+2
  8349  1BB0  01A5               	clrf	tester_initialize@asic+3
  8350                           
  8351                           ;tester.c: 40:     asic.datas[2] = 0;
  8352  1BB1  01A6               	clrf	tester_initialize@asic+4
  8353  1BB2  01A7               	clrf	tester_initialize@asic+5
  8354  1BB3                     l5217:
  8355  1BB3                     l5219:
  8356  1BB3                     l5221:
  8357                           
  8358                           ;tester.c: 47:     setGain(&asic,gain_index);
  8359  1BB3  01F1               	clrf	setGain@gain_index
  8360  1BB4  3022               	movlw	(low (tester_initialize@asic| 0))& (0+255)
  8361  1BB5  319B  236E  319B   	fcall	_setGain
  8362  1BB8                     l5223:
  8363                           
  8364                           ;tester.c: 48:     setFreq(&asic,freq_index);
  8365  1BB8  300A               	movlw	10
  8366  1BB9  00F9               	movwf	??_tester_initialize
  8367  1BBA  0879               	movf	??_tester_initialize,w
  8368  1BBB  00F1               	movwf	setFreq@freq_index
  8369  1BBC  3022               	movlw	(low (tester_initialize@asic| 0))& (0+255)
  8370  1BBD  3199  2154  319B   	fcall	_setFreq
  8371  1BC0                     l5225:
  8372                           
  8373                           ;tester.c: 49:     setFilt(&asic,freq_index);
  8374  1BC0  300A               	movlw	10
  8375  1BC1  00F9               	movwf	??_tester_initialize
  8376  1BC2  0879               	movf	??_tester_initialize,w
  8377  1BC3  00F1               	movwf	setFilt@freq_index
  8378  1BC4  3022               	movlw	(low (tester_initialize@asic| 0))& (0+255)
  8379  1BC5  319A  2231  319B   	fcall	_setFilt
  8380  1BC8                     l5227:
  8381                           
  8382                           ;tester.c: 51:     asic.data_bits.IQ = 0;
  8383  1BC8  0140               	movlb	0	; select bank0
  8384  1BC9  11A3               	bcf	tester_initialize@asic+1,3
  8385  1BCA                     l5229:
  8386                           
  8387                           ;tester.c: 52:     asic.data_bits.CE = 0;
  8388  1BCA  1322               	bcf	tester_initialize@asic,6
  8389  1BCB                     l5231:
  8390                           
  8391                           ;tester.c: 53:     config(asic);
  8392  1BCB  3022               	movlw	low tester_initialize@asic
  8393  1BCC  0086               	movwf	6
  8394  1BCD  3000               	movlw	high tester_initialize@asic
  8395  1BCE  0087               	movwf	7
  8396  1BCF  3071               	movlw	low config@conf
  8397  1BD0  0084               	movwf	4
  8398  1BD1  3000               	movlw	high config@conf
  8399  1BD2  0085               	movwf	5
  8400  1BD3  3F40               	moviw [0]fsr1
  8401  1BD4  3F80               	movwi [0]fsr0
  8402  1BD5  3F41               	moviw [1]fsr1
  8403  1BD6  3F81               	movwi [1]fsr0
  8404  1BD7  3F42               	moviw [2]fsr1
  8405  1BD8  3F82               	movwi [2]fsr0
  8406  1BD9  3F43               	moviw [3]fsr1
  8407  1BDA  3F83               	movwi [3]fsr0
  8408  1BDB  3F44               	moviw [4]fsr1
  8409  1BDC  3F84               	movwi [4]fsr0
  8410  1BDD  3F45               	moviw [5]fsr1
  8411  1BDE  3F85               	movwi [5]fsr0
  8412  1BDF  319E  2651  319B   	fcall	_config
  8413                           
  8414                           ;tester.c: 54:      _delay((unsigned long)((15)*(32000000/4000.0)));
  8415  1BE2  309C               	movlw	156
  8416  1BE3  00F9               	movwf	??_tester_initialize
  8417  1BE4  30D7               	movlw	215
  8418  1BE5                     u8417:
  8419  1BE5  0B89               	decfsz	9,f
  8420  1BE6  2BE5               	goto	u8417
  8421  1BE7  0BF9               	decfsz	??_tester_initialize,f
  8422  1BE8  2BE5               	goto	u8417
  8423  1BE9  0000               	nop
  8424  1BEA                     l591:
  8425  1BEA  0008               	return
  8426  1BEB                     __end_of_tester_initialize:
  8427                           
  8428                           	psect	text4
  8429  1B6E                     __ptext4:	
  8430 ;; *************** function _setGain *****************
  8431 ;; Defined at:
  8432 ;;		line 82 in file "bio3.c"
  8433 ;; Parameters:    Size  Location     Type
  8434 ;;  asic            1    wreg     PTR struct .
  8435 ;;		 -> sweep@asic(6), tester_initialize@asic(6), 
  8436 ;;  gain_index      1    1[COMMON] unsigned char 
  8437 ;; Auto vars:     Size  Location     Type
  8438 ;;  asic            1    4[COMMON] PTR struct .
  8439 ;;		 -> sweep@asic(6), tester_initialize@asic(6), 
  8440 ;;  aux             1    3[COMMON] struct .
  8441 ;; Return value:  Size  Location     Type
  8442 ;;                  1    wreg      void 
  8443 ;; Registers used:
  8444 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, pclath
  8445 ;; Tracked objects:
  8446 ;;		On entry : 0/0
  8447 ;;		On exit  : 0/0
  8448 ;;		Unchanged: 0/0
  8449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8450 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8451 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8452 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8453 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8454 ;;Total ram usage:        4 bytes
  8455 ;; Hardware stack levels used:    1
  8456 ;; Hardware stack levels required when called:    4
  8457 ;; This function calls:
  8458 ;;		Nothing
  8459 ;; This function is called by:
  8460 ;;		_tester_initialize
  8461 ;;		_sweep
  8462 ;; This function uses a non-reentrant model
  8463 ;;
  8464                           
  8465                           
  8466                           ;psect for function _setGain
  8467  1B6E                     _setGain:
  8468                           
  8469                           ;incstack = 0
  8470                           ; Regs used in _setGain: [wreg-fsr1h+pclath]
  8471                           ;setGain@asic stored from wreg
  8472  1B6E  00F4               	movwf	setGain@asic
  8473  1B6F                     l5149:
  8474                           
  8475                           ;bio3.c: 82: void setGain(VIN* asic, unsigned char gain_index);bio3.c: 83: {;bio3.c: 84:
      +                               RADIO_gain aux;;bio3.c: 85:     aux.data = gains[gain_index];
  8476  1B6F  0871               	movf	setGain@gain_index,w
  8477  1B70  3E0B               	addlw	low (_gains| (0+32768))
  8478  1B71  0084               	movwf	4
  8479  1B72  30A8               	movlw	high (_gains| (0+32768))
  8480  1B73  1803               	skipnc
  8481  1B74  3E01               	addlw	1
  8482  1B75  0085               	movwf	5
  8483  1B76  0800               	movf	0,w	;code access
  8484  1B77  00F2               	movwf	??_setGain
  8485  1B78  0872               	movf	??_setGain,w
  8486  1B79  00F3               	movwf	setGain@aux
  8487  1B7A                     l5151:
  8488                           
  8489                           ;bio3.c: 87:     asic->data_bits.GD0 = aux.data_bits.GD0;
  8490  1B7A  0874               	movf	setGain@asic,w
  8491  1B7B  0086               	movwf	6
  8492  1B7C  0187               	clrf	7
  8493  1B7D  1101               	bcf	1,2
  8494  1B7E  1C73               	btfss	setGain@aux,0
  8495  1B7F  2B81               	goto	u6285
  8496  1B80  1501               	bsf	1,2
  8497  1B81                     u6285:
  8498  1B81                     l5153:
  8499                           
  8500                           ;bio3.c: 88:     asic->data_bits.GD1 = aux.data_bits.GD1;
  8501  1B81  0874               	movf	setGain@asic,w
  8502  1B82  0086               	movwf	6
  8503  1B83  0187               	clrf	7
  8504  1B84  1181               	bcf	1,3
  8505  1B85  1CF3               	btfss	setGain@aux,1
  8506  1B86  2B88               	goto	u6295
  8507  1B87  1581               	bsf	1,3
  8508  1B88                     u6295:
  8509  1B88                     l5155:
  8510                           
  8511                           ;bio3.c: 89:     asic->data_bits.GD2 = aux.data_bits.GD2;
  8512  1B88  0874               	movf	setGain@asic,w
  8513  1B89  0086               	movwf	6
  8514  1B8A  0187               	clrf	7
  8515  1B8B  1201               	bcf	1,4
  8516  1B8C  1D73               	btfss	setGain@aux,2
  8517  1B8D  2B8F               	goto	u6305
  8518  1B8E  1601               	bsf	1,4
  8519  1B8F                     u6305:
  8520  1B8F                     l5157:
  8521                           
  8522                           ;bio3.c: 90:     asic->data_bits.GS0 = aux.data_bits.GS0;
  8523  1B8F  0874               	movf	setGain@asic,w
  8524  1B90  0086               	movwf	6
  8525  1B91  0187               	clrf	7
  8526  1B92  1381               	bcf	1,7
  8527  1B93  1DF3               	btfss	setGain@aux,3
  8528  1B94  2B96               	goto	u6315
  8529  1B95  1781               	bsf	1,7
  8530  1B96                     u6315:
  8531  1B96                     l5159:
  8532                           
  8533                           ;bio3.c: 91:     asic->data_bits.GS1 = aux.data_bits.GS1;
  8534  1B96  0A74               	incf	setGain@asic,w
  8535  1B97  0086               	movwf	6
  8536  1B98  0187               	clrf	7
  8537  1B99  1001               	bcf	1,0
  8538  1B9A  1E73               	btfss	setGain@aux,4
  8539  1B9B  2B9D               	goto	u6325
  8540  1B9C  1401               	bsf	1,0
  8541  1B9D                     u6325:
  8542  1B9D                     l5161:
  8543                           
  8544                           ;bio3.c: 92:     asic->data_bits.GS2 = aux.data_bits.GS2;
  8545  1B9D  0A74               	incf	setGain@asic,w
  8546  1B9E  0086               	movwf	6
  8547  1B9F  0187               	clrf	7
  8548  1BA0  1081               	bcf	1,1
  8549  1BA1  1EF3               	btfss	setGain@aux,5
  8550  1BA2  2BA4               	goto	u6335
  8551  1BA3  1481               	bsf	1,1
  8552  1BA4                     u6335:
  8553  1BA4                     l5163:
  8554                           
  8555                           ;bio3.c: 93:     asic->data_bits.GS3 = aux.data_bits.GS3;
  8556  1BA4  0A74               	incf	setGain@asic,w
  8557  1BA5  0086               	movwf	6
  8558  1BA6  0187               	clrf	7
  8559  1BA7  1101               	bcf	1,2
  8560  1BA8  1F73               	btfss	setGain@aux,6
  8561  1BA9  2BAB               	goto	u6345
  8562  1BAA  1501               	bsf	1,2
  8563  1BAB                     u6345:
  8564  1BAB                     l540:
  8565  1BAB  0008               	return
  8566  1BAC                     __end_of_setGain:
  8567                           
  8568                           	psect	text5
  8569  1954                     __ptext5:	
  8570 ;; *************** function _setFreq *****************
  8571 ;; Defined at:
  8572 ;;		line 96 in file "bio3.c"
  8573 ;; Parameters:    Size  Location     Type
  8574 ;;  asic            1    wreg     PTR struct .
  8575 ;;		 -> sweep@asic(6), tester_initialize@asic(6), 
  8576 ;;  freq_index      1    1[COMMON] unsigned char 
  8577 ;; Auto vars:     Size  Location     Type
  8578 ;;  asic            1    4[COMMON] PTR struct .
  8579 ;;		 -> sweep@asic(6), tester_initialize@asic(6), 
  8580 ;;  aux             1    3[COMMON] struct .
  8581 ;; Return value:  Size  Location     Type
  8582 ;;                  1    wreg      void 
  8583 ;; Registers used:
  8584 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, pclath
  8585 ;; Tracked objects:
  8586 ;;		On entry : 0/0
  8587 ;;		On exit  : 0/0
  8588 ;;		Unchanged: 0/0
  8589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8590 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8591 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8592 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8593 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8594 ;;Total ram usage:        4 bytes
  8595 ;; Hardware stack levels used:    1
  8596 ;; Hardware stack levels required when called:    4
  8597 ;; This function calls:
  8598 ;;		Nothing
  8599 ;; This function is called by:
  8600 ;;		_tester_initialize
  8601 ;;		_sweep
  8602 ;; This function uses a non-reentrant model
  8603 ;;
  8604                           
  8605                           
  8606                           ;psect for function _setFreq
  8607  1954                     _setFreq:
  8608                           
  8609                           ;incstack = 0
  8610                           ; Regs used in _setFreq: [wreg-fsr1h+pclath]
  8611                           ;setFreq@asic stored from wreg
  8612  1954  00F4               	movwf	setFreq@asic
  8613  1955                     l5165:
  8614                           
  8615                           ;bio3.c: 96: void setFreq(VIN* asic, unsigned char freq_index);bio3.c: 97: {;bio3.c: 98:
      +                               RADIO_freq aux;;bio3.c: 99:     aux.data = freqs[freq_index];
  8616  1955  0871               	movf	setFreq@freq_index,w
  8617  1956  3E00               	addlw	low (_freqs| (0+32768))
  8618  1957  0084               	movwf	4
  8619  1958  30A8               	movlw	high (_freqs| (0+32768))
  8620  1959  1803               	skipnc
  8621  195A  3E01               	addlw	1
  8622  195B  0085               	movwf	5
  8623  195C  0800               	movf	0,w	;code access
  8624  195D  00F2               	movwf	??_setFreq
  8625  195E  0872               	movf	??_setFreq,w
  8626  195F  00F3               	movwf	setFreq@aux
  8627  1960                     l5167:
  8628                           
  8629                           ;bio3.c: 101:     asic->data_bits.F0 = aux.data_bits.F0;
  8630  1960  0A74               	incf	setFreq@asic,w
  8631  1961  0086               	movwf	6
  8632  1962  0187               	clrf	7
  8633  1963  1201               	bcf	1,4
  8634  1964  1C73               	btfss	setFreq@aux,0
  8635  1965  2967               	goto	u6355
  8636  1966  1601               	bsf	1,4
  8637  1967                     u6355:
  8638  1967                     l5169:
  8639                           
  8640                           ;bio3.c: 102:     asic->data_bits.F1 = aux.data_bits.F1;
  8641  1967  0A74               	incf	setFreq@asic,w
  8642  1968  0086               	movwf	6
  8643  1969  0187               	clrf	7
  8644  196A  1281               	bcf	1,5
  8645  196B  1CF3               	btfss	setFreq@aux,1
  8646  196C  296E               	goto	u6365
  8647  196D  1681               	bsf	1,5
  8648  196E                     u6365:
  8649  196E                     l5171:
  8650                           
  8651                           ;bio3.c: 103:     asic->data_bits.F2 = aux.data_bits.F2;
  8652  196E  0A74               	incf	setFreq@asic,w
  8653  196F  0086               	movwf	6
  8654  1970  0187               	clrf	7
  8655  1971  1301               	bcf	1,6
  8656  1972  1D73               	btfss	setFreq@aux,2
  8657  1973  2975               	goto	u6375
  8658  1974  1701               	bsf	1,6
  8659  1975                     u6375:
  8660  1975                     l5173:
  8661                           
  8662                           ;bio3.c: 104:     asic->data_bits.F3 = aux.data_bits.F3;
  8663  1975  0A74               	incf	setFreq@asic,w
  8664  1976  0086               	movwf	6
  8665  1977  0187               	clrf	7
  8666  1978  1381               	bcf	1,7
  8667  1979  1DF3               	btfss	setFreq@aux,3
  8668  197A  297C               	goto	u6385
  8669  197B  1781               	bsf	1,7
  8670  197C                     u6385:
  8671  197C                     l543:
  8672  197C  0008               	return
  8673  197D                     __end_of_setFreq:
  8674                           
  8675                           	psect	text6
  8676  1A31                     __ptext6:	
  8677 ;; *************** function _setFilt *****************
  8678 ;; Defined at:
  8679 ;;		line 108 in file "bio3.c"
  8680 ;; Parameters:    Size  Location     Type
  8681 ;;  asic            1    wreg     PTR struct .
  8682 ;;		 -> sweep@asic(6), tester_initialize@asic(6), 
  8683 ;;  freq_index      1    1[COMMON] unsigned char 
  8684 ;; Auto vars:     Size  Location     Type
  8685 ;;  asic            1    8[COMMON] PTR struct .
  8686 ;;		 -> sweep@asic(6), tester_initialize@asic(6), 
  8687 ;;  aux             4    4[COMMON] struct .
  8688 ;; Return value:  Size  Location     Type
  8689 ;;                  1    wreg      void 
  8690 ;; Registers used:
  8691 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  8692 ;; Tracked objects:
  8693 ;;		On entry : 0/0
  8694 ;;		On exit  : 0/0
  8695 ;;		Unchanged: 0/0
  8696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8697 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8698 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8699 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8700 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8701 ;;Total ram usage:        8 bytes
  8702 ;; Hardware stack levels used:    1
  8703 ;; Hardware stack levels required when called:    4
  8704 ;; This function calls:
  8705 ;;		Nothing
  8706 ;; This function is called by:
  8707 ;;		_tester_initialize
  8708 ;;		_sweep
  8709 ;; This function uses a non-reentrant model
  8710 ;;
  8711                           
  8712                           
  8713                           ;psect for function _setFilt
  8714  1A31                     _setFilt:
  8715                           
  8716                           ;incstack = 0
  8717                           ; Regs used in _setFilt: [wreg-fsr1h+status,2+status,0+pclath]
  8718                           ;setFilt@asic stored from wreg
  8719  1A31  00F8               	movwf	setFilt@asic
  8720  1A32                     l5175:
  8721                           
  8722                           ;bio3.c: 108: void setFilt(VIN* asic, unsigned char freq_index);bio3.c: 109: {;bio3.c: 1
      +                          10:     VINfilt aux;;bio3.c: 111:     aux.datal = filt[freq_index];
  8723  1A32  0871               	movf	setFilt@freq_index,w
  8724  1A33  00F2               	movwf	??_setFilt
  8725  1A34  01F3               	clrf	??_setFilt+1
  8726  1A35  35F2               	lslf	??_setFilt,f
  8727  1A36  0DF3               	rlf	??_setFilt+1,f
  8728  1A37  35F2               	lslf	??_setFilt,f
  8729  1A38  0DF3               	rlf	??_setFilt+1,f
  8730  1A39  3000               	movlw	low (_filt| (0+32768))
  8731  1A3A  0772               	addwf	??_setFilt,w
  8732  1A3B  0084               	movwf	4
  8733  1A3C  30A0               	movlw	high (_filt| (0+32768))
  8734  1A3D  3D73               	addwfc	??_setFilt+1,w
  8735  1A3E  0085               	movwf	5
  8736  1A3F  3F00               	moviw [0]fsr0
  8737  1A40  00F4               	movwf	setFilt@aux
  8738  1A41  3F01               	moviw [1]fsr0
  8739  1A42  00F5               	movwf	setFilt@aux+1
  8740  1A43  3F02               	moviw [2]fsr0
  8741  1A44  00F6               	movwf	setFilt@aux+2
  8742  1A45  3F03               	moviw [3]fsr0
  8743  1A46  00F7               	movwf	setFilt@aux+3
  8744  1A47                     l5177:
  8745                           
  8746                           ;bio3.c: 113:     asic->data[2] = aux.data[0];
  8747  1A47  0874               	movf	setFilt@aux,w
  8748  1A48  00F2               	movwf	??_setFilt
  8749  1A49  0878               	movf	setFilt@asic,w
  8750  1A4A  3E02               	addlw	2
  8751  1A4B  0086               	movwf	6
  8752  1A4C  0187               	clrf	7
  8753  1A4D  0872               	movf	??_setFilt,w
  8754  1A4E  0081               	movwf	1
  8755  1A4F                     l5179:
  8756                           
  8757                           ;bio3.c: 114:     asic->data[3] = aux.data[1];
  8758  1A4F  0875               	movf	setFilt@aux+1,w
  8759  1A50  00F2               	movwf	??_setFilt
  8760  1A51  0878               	movf	setFilt@asic,w
  8761  1A52  3E03               	addlw	3
  8762  1A53  0086               	movwf	6
  8763  1A54  0187               	clrf	7
  8764  1A55  0872               	movf	??_setFilt,w
  8765  1A56  0081               	movwf	1
  8766  1A57                     l5181:
  8767                           
  8768                           ;bio3.c: 115:     asic->data[4] = aux.data[2];
  8769  1A57  0876               	movf	setFilt@aux+2,w
  8770  1A58  00F2               	movwf	??_setFilt
  8771  1A59  0878               	movf	setFilt@asic,w
  8772  1A5A  3E04               	addlw	4
  8773  1A5B  0086               	movwf	6
  8774  1A5C  0187               	clrf	7
  8775  1A5D  0872               	movf	??_setFilt,w
  8776  1A5E  0081               	movwf	1
  8777  1A5F                     l546:
  8778  1A5F  0008               	return
  8779  1A60                     __end_of_setFilt:
  8780                           
  8781                           	psect	text7
  8782  1219                     __ptext7:	
  8783 ;; *************** function _measure *****************
  8784 ;; Defined at:
  8785 ;;		line 230 in file "tester.c"
  8786 ;; Parameters:    Size  Location     Type
  8787 ;;  I               1    wreg     PTR short 
  8788 ;;		 -> sweep@I(2), 
  8789 ;;  Q               1    0[BANK0 ] PTR short 
  8790 ;;		 -> sweep@Q(2), 
  8791 ;;  asic            6    1[BANK0 ] struct .
  8792 ;; Auto vars:     Size  Location     Type
  8793 ;;  I               1   11[BANK0 ] PTR short 
  8794 ;;		 -> sweep@I(2), 
  8795 ;;  aux1            2   14[BANK0 ] short 
  8796 ;;  aux2            2   12[BANK0 ] short 
  8797 ;;  value           2    9[BANK0 ] unsigned short 
  8798 ;;  offset          2    7[BANK0 ] unsigned short 
  8799 ;; Return value:  Size  Location     Type
  8800 ;;                  1    wreg      unsigned char 
  8801 ;; Registers used:
  8802 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8803 ;; Tracked objects:
  8804 ;;		On entry : 0/0
  8805 ;;		On exit  : 0/0
  8806 ;;		Unchanged: 0/0
  8807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8808 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8809 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8810 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8811 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8812 ;;Total ram usage:       18 bytes
  8813 ;; Hardware stack levels used:    1
  8814 ;; Hardware stack levels required when called:    5
  8815 ;; This function calls:
  8816 ;;		_ADCC_GetSingleConversion
  8817 ;;		_config
  8818 ;; This function is called by:
  8819 ;;		_sweep
  8820 ;; This function uses a non-reentrant model
  8821 ;;
  8822                           
  8823                           
  8824                           ;psect for function _measure
  8825  1219                     _measure:
  8826                           
  8827                           ;incstack = 0
  8828                           ; Regs used in _measure: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8829                           ;measure@I stored from wreg
  8830  1219  0140               	movlb	0	; select bank0
  8831  121A  00AB               	movwf	measure@I
  8832  121B                     l5267:
  8833                           
  8834                           ;tester.c: 230: unsigned char measure(short* I, short* Q, VIN asic);tester.c: 231: {;tes
      +                          ter.c: 232:     unsigned short offset, value;;tester.c: 233:     short aux1,aux2;;tester
      +                          .c: 237:     asic.data_bits.IQ = 0;
  8835  121B  11A2               	bcf	measure@asic+1,3
  8836                           
  8837                           ;tester.c: 238:     asic.data_bits.CE = 0;
  8838  121C  1321               	bcf	measure@asic,6
  8839  121D                     l5269:
  8840                           
  8841                           ;tester.c: 239:     config(asic);
  8842  121D  3021               	movlw	low measure@asic
  8843  121E  0086               	movwf	6
  8844  121F  3000               	movlw	high measure@asic
  8845  1220  0087               	movwf	7
  8846  1221  3071               	movlw	low config@conf
  8847  1222  0084               	movwf	4
  8848  1223  3000               	movlw	high config@conf
  8849  1224  0085               	movwf	5
  8850  1225  3F40               	moviw [0]fsr1
  8851  1226  3F80               	movwi [0]fsr0
  8852  1227  3F41               	moviw [1]fsr1
  8853  1228  3F81               	movwi [1]fsr0
  8854  1229  3F42               	moviw [2]fsr1
  8855  122A  3F82               	movwi [2]fsr0
  8856  122B  3F43               	moviw [3]fsr1
  8857  122C  3F83               	movwi [3]fsr0
  8858  122D  3F44               	moviw [4]fsr1
  8859  122E  3F84               	movwi [4]fsr0
  8860  122F  3F45               	moviw [5]fsr1
  8861  1230  3F85               	movwi [5]fsr0
  8862  1231  319E  2651  3192   	fcall	_config
  8863  1234                     l5271:
  8864                           
  8865                           ;tester.c: 240:      _delay((unsigned long)((15)*(32000000/4000.0)));
  8866  1234  309C               	movlw	156
  8867  1235  00F9               	movwf	??_measure
  8868  1236  30D7               	movlw	215
  8869  1237                     u8427:
  8870  1237  0B89               	decfsz	9,f
  8871  1238  2A37               	goto	u8427
  8872  1239  0BF9               	decfsz	??_measure,f
  8873  123A  2A37               	goto	u8427
  8874  123B  0000               	nop
  8875  123C                     l5273:
  8876                           
  8877                           ;tester.c: 243:      offset = ADCC_GetSingleConversion(VOUT_SE);
  8878  123C  3010               	movlw	16
  8879  123D  31A7  275D  3192   	fcall	_ADCC_GetSingleConversion
  8880  1240  0872               	movf	?_ADCC_GetSingleConversion+1,w
  8881  1241  0140               	movlb	0	; select bank0
  8882  1242  00A8               	movwf	measure@offset+1
  8883  1243  0871               	movf	?_ADCC_GetSingleConversion,w
  8884  1244  00A7               	movwf	measure@offset
  8885  1245                     l5275:
  8886                           
  8887                           ;tester.c: 246:     asic.data_bits.CE = 1;
  8888  1245  1721               	bsf	measure@asic,6
  8889  1246                     l5277:
  8890                           
  8891                           ;tester.c: 247:     asic.data_bits.IQ = 0;
  8892  1246  11A2               	bcf	measure@asic+1,3
  8893  1247                     l5279:
  8894                           
  8895                           ;tester.c: 249:     config(asic);
  8896  1247  3021               	movlw	low measure@asic
  8897  1248  0086               	movwf	6
  8898  1249  3000               	movlw	high measure@asic
  8899  124A  0087               	movwf	7
  8900  124B  3071               	movlw	low config@conf
  8901  124C  0084               	movwf	4
  8902  124D  3000               	movlw	high config@conf
  8903  124E  0085               	movwf	5
  8904  124F  3F40               	moviw [0]fsr1
  8905  1250  3F80               	movwi [0]fsr0
  8906  1251  3F41               	moviw [1]fsr1
  8907  1252  3F81               	movwi [1]fsr0
  8908  1253  3F42               	moviw [2]fsr1
  8909  1254  3F82               	movwi [2]fsr0
  8910  1255  3F43               	moviw [3]fsr1
  8911  1256  3F83               	movwi [3]fsr0
  8912  1257  3F44               	moviw [4]fsr1
  8913  1258  3F84               	movwi [4]fsr0
  8914  1259  3F45               	moviw [5]fsr1
  8915  125A  3F85               	movwi [5]fsr0
  8916  125B  319E  2651  3192   	fcall	_config
  8917  125E                     l5281:
  8918                           
  8919                           ;tester.c: 250:      _delay((unsigned long)((15)*(32000000/4000.0)));
  8920  125E  309C               	movlw	156
  8921  125F  00F9               	movwf	??_measure
  8922  1260  30D7               	movlw	215
  8923  1261                     u8437:
  8924  1261  0B89               	decfsz	9,f
  8925  1262  2A61               	goto	u8437
  8926  1263  0BF9               	decfsz	??_measure,f
  8927  1264  2A61               	goto	u8437
  8928  1265  0000               	nop
  8929                           
  8930                           ;tester.c: 253:      value = ADCC_GetSingleConversion(VOUT_SE);
  8931  1266  3010               	movlw	16
  8932  1267  31A7  275D  3192   	fcall	_ADCC_GetSingleConversion
  8933  126A  0872               	movf	?_ADCC_GetSingleConversion+1,w
  8934  126B  0140               	movlb	0	; select bank0
  8935  126C  00AA               	movwf	measure@value+1
  8936  126D  0871               	movf	?_ADCC_GetSingleConversion,w
  8937  126E  00A9               	movwf	measure@value
  8938  126F                     l5283:
  8939                           
  8940                           ;tester.c: 254:     *I = (value - offset);
  8941  126F  0827               	movf	measure@offset,w
  8942  1270  0229               	subwf	measure@value,w
  8943  1271  00F9               	movwf	??_measure
  8944  1272  0828               	movf	measure@offset+1,w
  8945  1273  3B2A               	subwfb	measure@value+1,w
  8946  1274  00FA               	movwf	??_measure+1
  8947  1275  082B               	movf	measure@I,w
  8948  1276  0086               	movwf	6
  8949  1277  0187               	clrf	7
  8950  1278  0879               	movf	??_measure,w
  8951  1279  3FC0               	movwi [0]fsr1
  8952  127A  087A               	movf	??_measure+1,w
  8953  127B  3FC1               	movwi [1]fsr1
  8954  127C                     l5285:
  8955                           
  8956                           ;tester.c: 255:     aux1 = *I;
  8957  127C  082B               	movf	measure@I,w
  8958  127D  0086               	movwf	6
  8959  127E  0187               	clrf	7
  8960  127F  3F40               	moviw [0]fsr1
  8961  1280  00AE               	movwf	measure@aux1
  8962  1281  3F41               	moviw [1]fsr1
  8963  1282  00AF               	movwf	measure@aux1+1
  8964  1283                     l5287:
  8965                           
  8966                           ;tester.c: 257:     if (aux1 < 0) {
  8967  1283  1FAF               	btfss	measure@aux1+1,7
  8968  1284  2A86               	goto	u6451
  8969  1285  2A87               	goto	u6450
  8970  1286                     u6451:
  8971  1286  2A8C               	goto	l5291
  8972  1287                     u6450:
  8973  1287                     l5289:
  8974                           
  8975                           ;tester.c: 258:         aux1 = -aux1;
  8976  1287  09AE               	comf	measure@aux1,f
  8977  1288  09AF               	comf	measure@aux1+1,f
  8978  1289  0AAE               	incf	measure@aux1,f
  8979  128A  1903               	skipnz
  8980  128B  0AAF               	incf	measure@aux1+1,f
  8981  128C                     l5291:
  8982                           
  8983                           ;tester.c: 264:     asic.data_bits.IQ = 1;
  8984  128C  15A2               	bsf	measure@asic+1,3
  8985  128D                     l5293:
  8986                           
  8987                           ;tester.c: 266:     config(asic);
  8988  128D  3021               	movlw	low measure@asic
  8989  128E  0086               	movwf	6
  8990  128F  3000               	movlw	high measure@asic
  8991  1290  0087               	movwf	7
  8992  1291  3071               	movlw	low config@conf
  8993  1292  0084               	movwf	4
  8994  1293  3000               	movlw	high config@conf
  8995  1294  0085               	movwf	5
  8996  1295  3F40               	moviw [0]fsr1
  8997  1296  3F80               	movwi [0]fsr0
  8998  1297  3F41               	moviw [1]fsr1
  8999  1298  3F81               	movwi [1]fsr0
  9000  1299  3F42               	moviw [2]fsr1
  9001  129A  3F82               	movwi [2]fsr0
  9002  129B  3F43               	moviw [3]fsr1
  9003  129C  3F83               	movwi [3]fsr0
  9004  129D  3F44               	moviw [4]fsr1
  9005  129E  3F84               	movwi [4]fsr0
  9006  129F  3F45               	moviw [5]fsr1
  9007  12A0  3F85               	movwi [5]fsr0
  9008  12A1  319E  2651  3192   	fcall	_config
  9009  12A4                     l5295:
  9010                           
  9011                           ;tester.c: 267:      _delay((unsigned long)((15)*(32000000/4000.0)));
  9012  12A4  309C               	movlw	156
  9013  12A5  00F9               	movwf	??_measure
  9014  12A6  30D7               	movlw	215
  9015  12A7                     u8447:
  9016  12A7  0B89               	decfsz	9,f
  9017  12A8  2AA7               	goto	u8447
  9018  12A9  0BF9               	decfsz	??_measure,f
  9019  12AA  2AA7               	goto	u8447
  9020  12AB  0000               	nop
  9021  12AC                     l5297:
  9022                           
  9023                           ;tester.c: 269:     value = ADCC_GetSingleConversion(VOUT_SE);
  9024  12AC  3010               	movlw	16
  9025  12AD  31A7  275D  3192   	fcall	_ADCC_GetSingleConversion
  9026  12B0  0872               	movf	?_ADCC_GetSingleConversion+1,w
  9027  12B1  0140               	movlb	0	; select bank0
  9028  12B2  00AA               	movwf	measure@value+1
  9029  12B3  0871               	movf	?_ADCC_GetSingleConversion,w
  9030  12B4  00A9               	movwf	measure@value
  9031  12B5                     l5299:
  9032                           
  9033                           ;tester.c: 271:     *Q = (value - offset);
  9034  12B5  0827               	movf	measure@offset,w
  9035  12B6  0229               	subwf	measure@value,w
  9036  12B7  00F9               	movwf	??_measure
  9037  12B8  0828               	movf	measure@offset+1,w
  9038  12B9  3B2A               	subwfb	measure@value+1,w
  9039  12BA  00FA               	movwf	??_measure+1
  9040  12BB  0820               	movf	measure@Q,w
  9041  12BC  0086               	movwf	6
  9042  12BD  0187               	clrf	7
  9043  12BE  0879               	movf	??_measure,w
  9044  12BF  3FC0               	movwi [0]fsr1
  9045  12C0  087A               	movf	??_measure+1,w
  9046  12C1  3FC1               	movwi [1]fsr1
  9047  12C2                     l5301:
  9048                           
  9049                           ;tester.c: 272:     aux2 = *Q;
  9050  12C2  0820               	movf	measure@Q,w
  9051  12C3  0086               	movwf	6
  9052  12C4  0187               	clrf	7
  9053  12C5  3F40               	moviw [0]fsr1
  9054  12C6  00AC               	movwf	measure@aux2
  9055  12C7  3F41               	moviw [1]fsr1
  9056  12C8  00AD               	movwf	measure@aux2+1
  9057  12C9                     l5303:
  9058                           
  9059                           ;tester.c: 274:     if (aux2 < 0) {
  9060  12C9  1FAD               	btfss	measure@aux2+1,7
  9061  12CA  2ACC               	goto	u6461
  9062  12CB  2ACD               	goto	u6460
  9063  12CC                     u6461:
  9064  12CC  2AD2               	goto	l5307
  9065  12CD                     u6460:
  9066  12CD                     l5305:
  9067                           
  9068                           ;tester.c: 275:         aux2 = -aux2;
  9069  12CD  09AC               	comf	measure@aux2,f
  9070  12CE  09AD               	comf	measure@aux2+1,f
  9071  12CF  0AAC               	incf	measure@aux2,f
  9072  12D0  1903               	skipnz
  9073  12D1  0AAD               	incf	measure@aux2+1,f
  9074  12D2                     l5307:
  9075                           
  9076                           ;tester.c: 278:     if (aux2 > aux1) {
  9077  12D2  082F               	movf	measure@aux1+1,w
  9078  12D3  3A80               	xorlw	128
  9079  12D4  00F9               	movwf	??_measure
  9080  12D5  082D               	movf	measure@aux2+1,w
  9081  12D6  3A80               	xorlw	128
  9082  12D7  0279               	subwf	??_measure,w
  9083  12D8  1D03               	skipz
  9084  12D9  2ADC               	goto	u6475
  9085  12DA  082C               	movf	measure@aux2,w
  9086  12DB  022E               	subwf	measure@aux1,w
  9087  12DC                     u6475:
  9088  12DC  1803               	skipnc
  9089  12DD  2ADF               	goto	u6471
  9090  12DE  2AE0               	goto	u6470
  9091  12DF                     u6471:
  9092  12DF  2AE5               	goto	l616
  9093  12E0                     u6470:
  9094  12E0                     l5309:
  9095                           
  9096                           ;tester.c: 279:         aux1 = aux2;
  9097  12E0  0140               	movlb	0	; select bank0
  9098  12E1  082D               	movf	measure@aux2+1,w
  9099  12E2  00AF               	movwf	measure@aux1+1
  9100  12E3  082C               	movf	measure@aux2,w
  9101  12E4  00AE               	movwf	measure@aux1
  9102  12E5                     l616:	
  9103                           ;tester.c: 280:     }
  9104                           
  9105                           
  9106                           ;tester.c: 282:     if (aux1 > 370*4) {
  9107  12E5  0140               	movlb	0	; select bank0
  9108  12E6  082F               	movf	measure@aux1+1,w
  9109  12E7  3A80               	xorlw	128
  9110  12E8  00F9               	movwf	??_measure
  9111  12E9  3085               	movlw	133
  9112  12EA  0279               	subwf	??_measure,w
  9113  12EB  1D03               	skipz
  9114  12EC  2AEF               	goto	u6485
  9115  12ED  30C9               	movlw	201
  9116  12EE  022E               	subwf	measure@aux1,w
  9117  12EF                     u6485:
  9118  12EF  1C03               	skipc
  9119  12F0  2AF2               	goto	u6481
  9120  12F1  2AF3               	goto	u6480
  9121  12F2                     u6481:
  9122  12F2  2AF5               	goto	l5317
  9123  12F3                     u6480:
  9124  12F3                     l5311:
  9125                           
  9126                           ;tester.c: 283:         return 2;
  9127  12F3  3002               	movlw	2
  9128  12F4  2B06               	goto	l618
  9129  12F5                     l5317:
  9130  12F5  0140               	movlb	0	; select bank0
  9131  12F6  082F               	movf	measure@aux1+1,w
  9132  12F7  3A80               	xorlw	128
  9133  12F8  00F9               	movwf	??_measure
  9134  12F9  3081               	movlw	129
  9135  12FA  0279               	subwf	??_measure,w
  9136  12FB  1D03               	skipz
  9137  12FC  2AFF               	goto	u6495
  9138  12FD  3058               	movlw	88
  9139  12FE  022E               	subwf	measure@aux1,w
  9140  12FF                     u6495:
  9141  12FF  1803               	skipnc
  9142  1300  2B02               	goto	u6491
  9143  1301  2B03               	goto	u6490
  9144  1302                     u6491:
  9145  1302  2B05               	goto	l5323
  9146  1303                     u6490:
  9147  1303                     l5319:
  9148                           
  9149                           ;tester.c: 285:         return 1;
  9150  1303  3001               	movlw	1
  9151  1304  2B06               	goto	l618
  9152  1305                     l5323:
  9153                           
  9154                           ;tester.c: 288:     return 0;
  9155  1305  3000               	movlw	0
  9156  1306                     l618:
  9157  1306  0008               	return
  9158  1307                     __end_of_measure:
  9159                           
  9160                           	psect	text8
  9161  1E51                     __ptext8:	
  9162 ;; *************** function _config *****************
  9163 ;; Defined at:
  9164 ;;		line 22 in file "bio3.c"
  9165 ;; Parameters:    Size  Location     Type
  9166 ;;  conf            6    1[COMMON] struct .
  9167 ;; Auto vars:     Size  Location     Type
  9168 ;;  i               1    8[COMMON] unsigned char 
  9169 ;;  out             1    0        unsigned char 
  9170 ;;  j               1    0        unsigned char 
  9171 ;; Return value:  Size  Location     Type
  9172 ;;                  1    wreg      void 
  9173 ;; Registers used:
  9174 ;;		wreg, status,2, status,0
  9175 ;; Tracked objects:
  9176 ;;		On entry : 0/0
  9177 ;;		On exit  : 0/0
  9178 ;;		Unchanged: 0/0
  9179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9180 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9181 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9182 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9183 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9184 ;;Total ram usage:        8 bytes
  9185 ;; Hardware stack levels used:    1
  9186 ;; Hardware stack levels required when called:    4
  9187 ;; This function calls:
  9188 ;;		Nothing
  9189 ;; This function is called by:
  9190 ;;		_tester_initialize
  9191 ;;		_measure
  9192 ;; This function uses a non-reentrant model
  9193 ;;
  9194                           
  9195                           
  9196                           ;psect for function _config
  9197  1E51                     _config:
  9198  1E51                     l495:	
  9199                           ;incstack = 0
  9200                           ; Regs used in _config: [wreg+status,2+status,0]
  9201                           ;bio3.c: 22: void config(VIN conf);bio3.c: 23: {;bio3.c: 25:       unsigned char i,j,out
      +                          ;;bio3.c: 27:     do { LATCbits.LATC1 = 0; } while(0);
  9202                           
  9203  1E51  0140               	movlb	0	; select bank0
  9204  1E52  109A               	bcf	26,1	;volatile
  9205  1E53                     l5091:
  9206                           
  9207                           ;bio3.c: 28:     _delay((unsigned long)((50)*(32000000/4000000.0)));
  9208  1E53  3085               	movlw	133
  9209  1E54                     u8457:
  9210  1E54  0B89               	decfsz	9,f
  9211  1E55  2E54               	goto	u8457
  9212  1E56  0000               	nop
  9213  1E57                     l5093:
  9214  1E57  0140               	movlb	0	; select bank0
  9215  1E58  119A               	bcf	26,3	;volatile
  9216  1E59                     l498:
  9217                           
  9218                           ;bio3.c: 31:     _delay((unsigned long)((50)*(32000000/4000000.0)));
  9219  1E59  3085               	movlw	133
  9220  1E5A                     u8467:
  9221  1E5A  0B89               	decfsz	9,f
  9222  1E5B  2E5A               	goto	u8467
  9223  1E5C  0000               	nop
  9224  1E5D                     l5095:
  9225  1E5D  0140               	movlb	0	; select bank0
  9226  1E5E  159A               	bsf	26,3	;volatile
  9227  1E5F                     l5097:
  9228                           
  9229                           ;bio3.c: 35:     for(i = 0; i < 16; i++) {
  9230  1E5F  01F8               	clrf	config@i
  9231  1E60                     l501:
  9232                           
  9233                           ;bio3.c: 36:         if (conf.datas[0] & 0x0001) {
  9234  1E60  1C71               	btfss	config@conf,0
  9235  1E61  2E63               	goto	u6191
  9236  1E62  2E64               	goto	u6190
  9237  1E63                     u6191:
  9238  1E63  2E66               	goto	l507
  9239  1E64                     u6190:
  9240  1E64                     l504:	
  9241                           ;bio3.c: 37:             do { LATCbits.LATC2 = 1; } while(0);
  9242                           
  9243  1E64  151A               	bsf	26,2	;volatile
  9244  1E65  2E67               	goto	l5103
  9245  1E66                     l507:	
  9246                           ;bio3.c: 39:             do { LATCbits.LATC2 = 0; } while(0);
  9247                           
  9248  1E66  111A               	bcf	26,2	;volatile
  9249  1E67                     l5103:
  9250                           
  9251                           ;bio3.c: 41:         conf.datas[0] >>= 1;
  9252  1E67  3001               	movlw	1
  9253  1E68                     u6205:
  9254  1E68  36F2               	lsrf	config@conf+1,f
  9255  1E69  0CF1               	rrf	config@conf,f
  9256  1E6A  0B89               	decfsz	9,f
  9257  1E6B  2E68               	goto	u6205
  9258  1E6C                     l5105:
  9259                           
  9260                           ;bio3.c: 43:         _delay((unsigned long)((50)*(32000000/4000000.0)));
  9261  1E6C  3085               	movlw	133
  9262  1E6D                     u8477:
  9263  1E6D  0B89               	decfsz	9,f
  9264  1E6E  2E6D               	goto	u8477
  9265  1E6F  0000               	nop
  9266  1E70                     l5107:
  9267  1E70  0140               	movlb	0	; select bank0
  9268  1E71  149A               	bsf	26,1	;volatile
  9269  1E72                     l5109:
  9270                           
  9271                           ;bio3.c: 46:         _delay((unsigned long)((50)*(32000000/4000000.0)));
  9272  1E72  3085               	movlw	133
  9273  1E73                     u8487:
  9274  1E73  0B89               	decfsz	9,f
  9275  1E74  2E73               	goto	u8487
  9276  1E75  0000               	nop
  9277  1E76                     l5111:
  9278  1E76  0140               	movlb	0	; select bank0
  9279  1E77  109A               	bcf	26,1	;volatile
  9280  1E78                     l512:
  9281                           
  9282                           ;bio3.c: 48:     }
  9283  1E78  3001               	movlw	1
  9284  1E79  00F7               	movwf	??_config
  9285  1E7A  0877               	movf	??_config,w
  9286  1E7B  07F8               	addwf	config@i,f
  9287  1E7C                     l5113:
  9288  1E7C  3010               	movlw	16
  9289  1E7D  0278               	subwf	config@i,w
  9290  1E7E  1C03               	skipc
  9291  1E7F  2E81               	goto	u6211
  9292  1E80  2E82               	goto	u6210
  9293  1E81                     u6211:
  9294  1E81  2E60               	goto	l501
  9295  1E82                     u6210:
  9296  1E82                     l5115:
  9297                           
  9298                           ;bio3.c: 50:     for(i = 0; i < 16; i++) {
  9299  1E82  01F8               	clrf	config@i
  9300  1E83                     l513:
  9301                           
  9302                           ;bio3.c: 51:         if (conf.datas[1] & 0x0001) {
  9303  1E83  1C73               	btfss	config@conf+2,0
  9304  1E84  2E86               	goto	u6221
  9305  1E85  2E87               	goto	u6220
  9306  1E86                     u6221:
  9307  1E86  2E89               	goto	l519
  9308  1E87                     u6220:
  9309  1E87                     l516:	
  9310                           ;bio3.c: 52:             do { LATCbits.LATC2 = 1; } while(0);
  9311                           
  9312  1E87  151A               	bsf	26,2	;volatile
  9313  1E88  2E8A               	goto	l5121
  9314  1E89                     l519:	
  9315                           ;bio3.c: 54:             do { LATCbits.LATC2 = 0; } while(0);
  9316                           
  9317  1E89  111A               	bcf	26,2	;volatile
  9318  1E8A                     l5121:
  9319                           
  9320                           ;bio3.c: 56:         conf.datas[1] >>= 1;
  9321  1E8A  3001               	movlw	1
  9322  1E8B                     u6235:
  9323  1E8B  36F4               	lsrf	config@conf+3,f
  9324  1E8C  0CF3               	rrf	config@conf+2,f
  9325  1E8D  0B89               	decfsz	9,f
  9326  1E8E  2E8B               	goto	u6235
  9327  1E8F                     l5123:
  9328                           
  9329                           ;bio3.c: 58:         _delay((unsigned long)((50)*(32000000/4000000.0)));
  9330  1E8F  3085               	movlw	133
  9331  1E90                     u8497:
  9332  1E90  0B89               	decfsz	9,f
  9333  1E91  2E90               	goto	u8497
  9334  1E92  0000               	nop
  9335  1E93                     l5125:
  9336  1E93  0140               	movlb	0	; select bank0
  9337  1E94  149A               	bsf	26,1	;volatile
  9338  1E95                     l5127:
  9339                           
  9340                           ;bio3.c: 61:         _delay((unsigned long)((50)*(32000000/4000000.0)));
  9341  1E95  3085               	movlw	133
  9342  1E96                     u8507:
  9343  1E96  0B89               	decfsz	9,f
  9344  1E97  2E96               	goto	u8507
  9345  1E98  0000               	nop
  9346  1E99                     l5129:
  9347  1E99  0140               	movlb	0	; select bank0
  9348  1E9A  109A               	bcf	26,1	;volatile
  9349  1E9B                     l524:
  9350                           
  9351                           ;bio3.c: 63:     }
  9352  1E9B  3001               	movlw	1
  9353  1E9C  00F7               	movwf	??_config
  9354  1E9D  0877               	movf	??_config,w
  9355  1E9E  07F8               	addwf	config@i,f
  9356  1E9F                     l5131:
  9357  1E9F  3010               	movlw	16
  9358  1EA0  0278               	subwf	config@i,w
  9359  1EA1  1C03               	skipc
  9360  1EA2  2EA4               	goto	u6241
  9361  1EA3  2EA5               	goto	u6240
  9362  1EA4                     u6241:
  9363  1EA4  2E83               	goto	l513
  9364  1EA5                     u6240:
  9365  1EA5                     l5133:
  9366                           
  9367                           ;bio3.c: 65:     for(i = 0; i < 1; i++) {
  9368  1EA5  01F8               	clrf	config@i
  9369  1EA6                     l525:
  9370                           
  9371                           ;bio3.c: 66:         if (conf.datas[2] & 0x0001) {
  9372  1EA6  1C75               	btfss	config@conf+4,0
  9373  1EA7  2EA9               	goto	u6251
  9374  1EA8  2EAA               	goto	u6250
  9375  1EA9                     u6251:
  9376  1EA9  2EAC               	goto	l531
  9377  1EAA                     u6250:
  9378  1EAA                     l528:	
  9379                           ;bio3.c: 67:             do { LATCbits.LATC2 = 1; } while(0);
  9380                           
  9381  1EAA  151A               	bsf	26,2	;volatile
  9382  1EAB  2EAD               	goto	l5139
  9383  1EAC                     l531:	
  9384                           ;bio3.c: 69:             do { LATCbits.LATC2 = 0; } while(0);
  9385                           
  9386  1EAC  111A               	bcf	26,2	;volatile
  9387  1EAD                     l5139:
  9388                           
  9389                           ;bio3.c: 71:         conf.datas[2] >>= 1;
  9390  1EAD  3001               	movlw	1
  9391  1EAE                     u6265:
  9392  1EAE  36F6               	lsrf	config@conf+5,f
  9393  1EAF  0CF5               	rrf	config@conf+4,f
  9394  1EB0  0B89               	decfsz	9,f
  9395  1EB1  2EAE               	goto	u6265
  9396  1EB2                     l5141:
  9397                           
  9398                           ;bio3.c: 73:         _delay((unsigned long)((50)*(32000000/4000000.0)));
  9399  1EB2  3085               	movlw	133
  9400  1EB3                     u8517:
  9401  1EB3  0B89               	decfsz	9,f
  9402  1EB4  2EB3               	goto	u8517
  9403  1EB5  0000               	nop
  9404  1EB6                     l5143:
  9405  1EB6  0140               	movlb	0	; select bank0
  9406  1EB7  149A               	bsf	26,1	;volatile
  9407  1EB8                     l5145:
  9408                           
  9409                           ;bio3.c: 76:         _delay((unsigned long)((50)*(32000000/4000000.0)));
  9410  1EB8  3085               	movlw	133
  9411  1EB9                     u8527:
  9412  1EB9  0B89               	decfsz	9,f
  9413  1EBA  2EB9               	goto	u8527
  9414  1EBB  0000               	nop
  9415  1EBC                     l5147:
  9416  1EBC  0140               	movlb	0	; select bank0
  9417  1EBD  109A               	bcf	26,1	;volatile
  9418  1EBE                     l536:
  9419                           
  9420                           ;bio3.c: 78:     }
  9421  1EBE  3001               	movlw	1
  9422  1EBF  00F7               	movwf	??_config
  9423  1EC0  0877               	movf	??_config,w
  9424  1EC1  07F8               	addwf	config@i,f
  9425  1EC2  0878               	movf	config@i,w
  9426  1EC3  1903               	btfsc	3,2
  9427  1EC4  2EC6               	goto	u6271
  9428  1EC5  2EC7               	goto	u6270
  9429  1EC6                     u6271:
  9430  1EC6  2EA6               	goto	l525
  9431  1EC7                     u6270:
  9432  1EC7                     l537:
  9433  1EC7  0008               	return
  9434  1EC8                     __end_of_config:
  9435                           
  9436                           	psect	text9
  9437  27E6                     __ptext9:	
  9438 ;; *************** function _calculate_checksum *****************
  9439 ;; Defined at:
  9440 ;;		line 291 in file "tester.c"
  9441 ;; Parameters:    Size  Location     Type
  9442 ;;  data            1    wreg     PTR unsigned char 
  9443 ;;		 -> sweep@aux(7), 
  9444 ;;  num             1    1[COMMON] unsigned char 
  9445 ;; Auto vars:     Size  Location     Type
  9446 ;;  data            1    4[COMMON] PTR unsigned char 
  9447 ;;		 -> sweep@aux(7), 
  9448 ;;  i               1    6[COMMON] unsigned char 
  9449 ;;  check           1    5[COMMON] unsigned char 
  9450 ;; Return value:  Size  Location     Type
  9451 ;;                  1    wreg      unsigned char 
  9452 ;; Registers used:
  9453 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9454 ;; Tracked objects:
  9455 ;;		On entry : 0/0
  9456 ;;		On exit  : 0/0
  9457 ;;		Unchanged: 0/0
  9458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9459 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9460 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9461 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9462 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9463 ;;Total ram usage:        6 bytes
  9464 ;; Hardware stack levels used:    1
  9465 ;; Hardware stack levels required when called:    4
  9466 ;; This function calls:
  9467 ;;		Nothing
  9468 ;; This function is called by:
  9469 ;;		_sweep
  9470 ;; This function uses a non-reentrant model
  9471 ;;
  9472                           
  9473                           
  9474                           ;psect for function _calculate_checksum
  9475  27E6                     _calculate_checksum:
  9476                           
  9477                           ;incstack = 0
  9478                           ; Regs used in _calculate_checksum: [wreg+fsr1l+fsr1h+status,2+status,0]
  9479                           ;calculate_checksum@data stored from wreg
  9480  27E6  00F4               	movwf	calculate_checksum@data
  9481  27E7                     l5327:
  9482                           
  9483                           ;tester.c: 291: unsigned char calculate_checksum(unsigned char* data, unsigned char num)
      +                          ;tester.c: 292: {;tester.c: 293:     unsigned char check, i;;tester.c: 295:     check = 
      +                          0;
  9484  27E7  01F5               	clrf	calculate_checksum@check
  9485                           
  9486                           ;tester.c: 296:     for (i = 0; i < num; i++) {
  9487  27E8  01F6               	clrf	calculate_checksum@i
  9488  27E9  2FF8               	goto	l5333
  9489  27EA                     l5329:
  9490                           
  9491                           ;tester.c: 297:         check ^= data[i];
  9492  27EA  0876               	movf	calculate_checksum@i,w
  9493  27EB  0774               	addwf	calculate_checksum@data,w
  9494  27EC  00F2               	movwf	??_calculate_checksum
  9495  27ED  0872               	movf	??_calculate_checksum,w
  9496  27EE  0086               	movwf	6
  9497  27EF  0187               	clrf	7
  9498  27F0  0801               	movf	1,w
  9499  27F1  00F3               	movwf	??_calculate_checksum+1
  9500  27F2  0873               	movf	??_calculate_checksum+1,w
  9501  27F3  06F5               	xorwf	calculate_checksum@check,f
  9502  27F4                     l5331:
  9503                           
  9504                           ;tester.c: 298:     }
  9505  27F4  3001               	movlw	1
  9506  27F5  00F2               	movwf	??_calculate_checksum
  9507  27F6  0872               	movf	??_calculate_checksum,w
  9508  27F7  07F6               	addwf	calculate_checksum@i,f
  9509  27F8                     l5333:
  9510  27F8  0871               	movf	calculate_checksum@num,w
  9511  27F9  0276               	subwf	calculate_checksum@i,w
  9512  27FA  1C03               	skipc
  9513  27FB  2FFD               	goto	u6501
  9514  27FC  2FFE               	goto	u6500
  9515  27FD                     u6501:
  9516  27FD  2FEA               	goto	l5329
  9517  27FE                     u6500:
  9518  27FE                     l5335:
  9519                           
  9520                           ;tester.c: 300:     return check;
  9521  27FE  0875               	movf	calculate_checksum@check,w
  9522  27FF                     l626:
  9523  27FF  0008               	return
  9524  2800                     __end_of_calculate_checksum:
  9525                           
  9526                           	psect	text10
  9527  1A03                     __ptext10:	
  9528 ;; *************** function _EUSART1_Read *****************
  9529 ;; Defined at:
  9530 ;;		line 151 in file "mcc_generated_files/eusart1.c"
  9531 ;; Parameters:    Size  Location     Type
  9532 ;;		None
  9533 ;; Auto vars:     Size  Location     Type
  9534 ;;  readValue       1    2[COMMON] unsigned char 
  9535 ;; Return value:  Size  Location     Type
  9536 ;;                  1    wreg      unsigned char 
  9537 ;; Registers used:
  9538 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9539 ;; Tracked objects:
  9540 ;;		On entry : 0/0
  9541 ;;		On exit  : 0/0
  9542 ;;		Unchanged: 0/0
  9543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9545 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9546 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9547 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9548 ;;Total ram usage:        2 bytes
  9549 ;; Hardware stack levels used:    1
  9550 ;; Hardware stack levels required when called:    4
  9551 ;; This function calls:
  9552 ;;		Nothing
  9553 ;; This function is called by:
  9554 ;;		_mess_handler
  9555 ;;		__gets
  9556 ;; This function uses a non-reentrant model
  9557 ;;
  9558                           
  9559                           
  9560                           ;psect for function _EUSART1_Read
  9561  1A03                     _EUSART1_Read:
  9562  1A03                     l5505:	
  9563                           ;incstack = 0
  9564                           ; Regs used in _EUSART1_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  9565                           
  9566  1A03                     l5507:	
  9567                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
  9568                           
  9569                           
  9570                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
  9571  1A03  0142               	movlb	2	; select bank2
  9572  1A04  086B               	movf	_eusart1RxCount^(0+256),w	;volatile
  9573  1A05  1903               	btfsc	3,2
  9574  1A06  2A08               	goto	u6651
  9575  1A07  2A09               	goto	u6650
  9576  1A08                     u6651:
  9577  1A08  2A03               	goto	l5507
  9578  1A09                     u6650:
  9579  1A09                     l5509:
  9580                           
  9581                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
  9582  1A09  086C               	movf	_eusart1RxTail^(0+256),w	;volatile
  9583  1A0A  3EA0               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
  9584  1A0B  0086               	movwf	6
  9585  1A0C  3001               	movlw	1	; select bank3/4
  9586  1A0D  0087               	movwf	7
  9587  1A0E  0801               	movf	1,w
  9588  1A0F  00F1               	movwf	??_EUSART1_Read
  9589  1A10  0871               	movf	??_EUSART1_Read,w
  9590  1A11  0143               	movlb	3	; select bank3
  9591  1A12  00D0               	movwf	_eusart1RxLastError^(0+384)	;volatile
  9592                           
  9593                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
  9594  1A13  0142               	movlb	2	; select bank2
  9595  1A14  086C               	movf	_eusart1RxTail^(0+256),w
  9596  1A15  3EB0               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
  9597  1A16  0086               	movwf	6
  9598  1A17  3001               	movlw	1	; select bank3/4
  9599  1A18  0087               	movwf	7
  9600  1A19  0801               	movf	1,w
  9601  1A1A  00F1               	movwf	??_EUSART1_Read
  9602  1A1B  0871               	movf	??_EUSART1_Read,w
  9603  1A1C  00F2               	movwf	EUSART1_Read@readValue
  9604  1A1D                     l5511:
  9605  1A1D  3001               	movlw	1
  9606  1A1E  00F1               	movwf	??_EUSART1_Read
  9607  1A1F  0871               	movf	??_EUSART1_Read,w
  9608  1A20  07EC               	addwf	_eusart1RxTail^(0+256),f	;volatile
  9609  1A21                     l5513:
  9610                           
  9611                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  9612  1A21  3010               	movlw	16
  9613  1A22  026C               	subwf	_eusart1RxTail^(0+256),w	;volatile
  9614  1A23  1C03               	skipc
  9615  1A24  2A26               	goto	u6661
  9616  1A25  2A27               	goto	u6660
  9617  1A26                     u6661:
  9618  1A26  2A28               	goto	l5517
  9619  1A27                     u6660:
  9620  1A27                     l5515:
  9621                           
  9622                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
  9623  1A27  01EC               	clrf	_eusart1RxTail^(0+256)	;volatile
  9624  1A28                     l5517:
  9625                           
  9626                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
  9627  1A28  014E               	movlb	14	; select bank14
  9628  1A29  1299               	bcf	25,5	;volatile
  9629  1A2A                     l5519:
  9630                           
  9631                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
  9632  1A2A  3001               	movlw	1
  9633  1A2B  0142               	movlb	2	; select bank2
  9634  1A2C  02EB               	subwf	_eusart1RxCount^(0+256),f	;volatile
  9635  1A2D                     l5521:
  9636                           
  9637                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
  9638  1A2D  014E               	movlb	14	; select bank14
  9639  1A2E  1699               	bsf	25,5	;volatile
  9640  1A2F                     l5523:
  9641                           
  9642                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
  9643  1A2F  0872               	movf	EUSART1_Read@readValue,w
  9644  1A30                     l205:
  9645  1A30  0008               	return
  9646  1A31                     __end_of_EUSART1_Read:
  9647                           
  9648                           	psect	text11
  9649  0A3C                     __ptext11:	
  9650 ;; *************** function _ADC_test *****************
  9651 ;; Defined at:
  9652 ;;		line 58 in file "tester.c"
  9653 ;; Parameters:    Size  Location     Type
  9654 ;;		None
  9655 ;; Auto vars:     Size  Location     Type
  9656 ;;  sbuf           30   33[BANK2 ] unsigned char [30]
  9657 ;;  aux             4   63[BANK2 ] float 
  9658 ;;  value           2   68[BANK2 ] unsigned short 
  9659 ;;  num             1   67[BANK2 ] unsigned char 
  9660 ;; Return value:  Size  Location     Type
  9661 ;;                  1    wreg      void 
  9662 ;; Registers used:
  9663 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9664 ;; Tracked objects:
  9665 ;;		On entry : 0/0
  9666 ;;		On exit  : 0/0
  9667 ;;		Unchanged: 0/0
  9668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9670 ;;      Locals:         0       0       0      37       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9671 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9672 ;;      Totals:         0       0       0      39       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9673 ;;Total ram usage:       39 bytes
  9674 ;; Hardware stack levels used:    1
  9675 ;; Hardware stack levels required when called:   12
  9676 ;; This function calls:
  9677 ;;		_ADCC_GetSingleConversion
  9678 ;;		___fldiv
  9679 ;;		___flmul
  9680 ;;		___xxtofl
  9681 ;;		__puts
  9682 ;;		_sprintf
  9683 ;;		_write
  9684 ;; This function is called by:
  9685 ;;		_mess_handler
  9686 ;; This function uses a non-reentrant model
  9687 ;;
  9688                           
  9689                           
  9690                           ;psect for function _ADC_test
  9691  0A3C                     _ADC_test:
  9692  0A3C                     l6667:	
  9693                           ;incstack = 0
  9694                           ; Regs used in _ADC_test: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9695                           
  9696                           
  9697                           ;tester.c: 60:     unsigned short value;;tester.c: 62:     unsigned char num;;tester.c: 
      +                          63:     char sbuf[30];;tester.c: 64:     float aux;;tester.c: 74:     _puts("***********
      +                          *****************\n");
  9698  0A3C  304C               	movlw	low (STR_2| (0+32768))
  9699  0A3D  00F3               	movwf	__puts@pt
  9700  0A3E  30A0               	movlw	high (STR_2| (0+32768))
  9701  0A3F  00F4               	movwf	__puts@pt+1
  9702  0A40  3199  21D5  318A   	fcall	__puts
  9703  0A43                     l6669:
  9704                           
  9705                           ;tester.c: 75:     _delay((unsigned long)((50)*(32000000/4000.0)));
  9706  0A43  3003               	movlw	3
  9707  0A44  0142               	movlb	2	; select bank2
  9708  0A45  00C0               	movwf	(??_ADC_test^(0+256)+1)
  9709  0A46  3008               	movlw	8
  9710  0A47  00BF               	movwf	??_ADC_test^(0+256)
  9711  0A48  3077               	movlw	119
  9712  0A49                     u8537:
  9713  0A49  0B89               	decfsz	9,f
  9714  0A4A  2A49               	goto	u8537
  9715  0A4B  0BBF               	decfsz	??_ADC_test^(0+256),f
  9716  0A4C  2A49               	goto	u8537
  9717  0A4D  0BC0               	decfsz	(??_ADC_test^(0+256)+1),f
  9718  0A4E  2A49               	goto	u8537
  9719  0A4F                     l6671:
  9720                           
  9721                           ;tester.c: 76:     _puts("Scibase ASIC Tester V0.1\n");
  9722  0A4F  30F4               	movlw	low (STR_3| (0+32768))
  9723  0A50  00F3               	movwf	__puts@pt
  9724  0A51  30A0               	movlw	high (STR_3| (0+32768))
  9725  0A52  00F4               	movwf	__puts@pt+1
  9726  0A53  3199  21D5  318A   	fcall	__puts
  9727                           
  9728                           ;tester.c: 77:     _delay((unsigned long)((50)*(32000000/4000.0)));
  9729  0A56  3003               	movlw	3
  9730  0A57  0142               	movlb	2	; select bank2
  9731  0A58  00C0               	movwf	(??_ADC_test^(0+256)+1)
  9732  0A59  3008               	movlw	8
  9733  0A5A  00BF               	movwf	??_ADC_test^(0+256)
  9734  0A5B  3077               	movlw	119
  9735  0A5C                     u8547:
  9736  0A5C  0B89               	decfsz	9,f
  9737  0A5D  2A5C               	goto	u8547
  9738  0A5E  0BBF               	decfsz	??_ADC_test^(0+256),f
  9739  0A5F  2A5C               	goto	u8547
  9740  0A60  0BC0               	decfsz	(??_ADC_test^(0+256)+1),f
  9741  0A61  2A5C               	goto	u8547
  9742  0A62                     l6673:
  9743                           
  9744                           ;tester.c: 78:     _puts("DC operating point tests\n");
  9745  0A62  300E               	movlw	low (STR_4| (0+32768))
  9746  0A63  00F3               	movwf	__puts@pt
  9747  0A64  30A1               	movlw	high (STR_4| (0+32768))
  9748  0A65  00F4               	movwf	__puts@pt+1
  9749  0A66  3199  21D5  318A   	fcall	__puts
  9750  0A69                     l6675:
  9751                           
  9752                           ;tester.c: 79:     _delay((unsigned long)((50)*(32000000/4000.0)));
  9753  0A69  3003               	movlw	3
  9754  0A6A  0142               	movlb	2	; select bank2
  9755  0A6B  00C0               	movwf	(??_ADC_test^(0+256)+1)
  9756  0A6C  3008               	movlw	8
  9757  0A6D  00BF               	movwf	??_ADC_test^(0+256)
  9758  0A6E  3077               	movlw	119
  9759  0A6F                     u8557:
  9760  0A6F  0B89               	decfsz	9,f
  9761  0A70  2A6F               	goto	u8557
  9762  0A71  0BBF               	decfsz	??_ADC_test^(0+256),f
  9763  0A72  2A6F               	goto	u8557
  9764  0A73  0BC0               	decfsz	(??_ADC_test^(0+256)+1),f
  9765  0A74  2A6F               	goto	u8557
  9766                           
  9767                           ;tester.c: 80:     _puts("****************************\n");
  9768  0A75  304C               	movlw	low (STR_2| (0+32768))
  9769  0A76  00F3               	movwf	__puts@pt
  9770  0A77  30A0               	movlw	high (STR_2| (0+32768))
  9771  0A78  00F4               	movwf	__puts@pt+1
  9772  0A79  3199  21D5  318A   	fcall	__puts
  9773  0A7C                     l6677:
  9774                           
  9775                           ;tester.c: 81:     _delay((unsigned long)((50)*(32000000/4000.0)));
  9776  0A7C  3003               	movlw	3
  9777  0A7D  0142               	movlb	2	; select bank2
  9778  0A7E  00C0               	movwf	(??_ADC_test^(0+256)+1)
  9779  0A7F  3008               	movlw	8
  9780  0A80  00BF               	movwf	??_ADC_test^(0+256)
  9781  0A81  3077               	movlw	119
  9782  0A82                     u8567:
  9783  0A82  0B89               	decfsz	9,f
  9784  0A83  2A82               	goto	u8567
  9785  0A84  0BBF               	decfsz	??_ADC_test^(0+256),f
  9786  0A85  2A82               	goto	u8567
  9787  0A86  0BC0               	decfsz	(??_ADC_test^(0+256)+1),f
  9788  0A87  2A82               	goto	u8567
  9789  0A88                     l6679:
  9790                           
  9791                           ;tester.c: 82:     _puts("PIN = measurement (simulation)\n");
  9792  0A88  302C               	movlw	low (STR_6| (0+32768))
  9793  0A89  00F3               	movwf	__puts@pt
  9794  0A8A  30A0               	movlw	high (STR_6| (0+32768))
  9795  0A8B  00F4               	movwf	__puts@pt+1
  9796  0A8C  3199  21D5  318A   	fcall	__puts
  9797                           
  9798                           ;tester.c: 83:     _delay((unsigned long)((50)*(32000000/4000.0)));
  9799  0A8F  3003               	movlw	3
  9800  0A90  0142               	movlb	2	; select bank2
  9801  0A91  00C0               	movwf	(??_ADC_test^(0+256)+1)
  9802  0A92  3008               	movlw	8
  9803  0A93  00BF               	movwf	??_ADC_test^(0+256)
  9804  0A94  3077               	movlw	119
  9805  0A95                     u8577:
  9806  0A95  0B89               	decfsz	9,f
  9807  0A96  2A95               	goto	u8577
  9808  0A97  0BBF               	decfsz	??_ADC_test^(0+256),f
  9809  0A98  2A95               	goto	u8577
  9810  0A99  0BC0               	decfsz	(??_ADC_test^(0+256)+1),f
  9811  0A9A  2A95               	goto	u8577
  9812  0A9B                     l6681:
  9813                           
  9814                           ;tester.c: 85:     value = ADCC_GetSingleConversion(VOUT_SE);
  9815  0A9B  3010               	movlw	16
  9816  0A9C  31A7  275D  318A   	fcall	_ADCC_GetSingleConversion
  9817  0A9F  0872               	movf	?_ADCC_GetSingleConversion+1,w
  9818  0AA0  0142               	movlb	2	; select bank2
  9819  0AA1  00E5               	movwf	(ADC_test@value+1)^(0+256)
  9820  0AA2  0871               	movf	?_ADCC_GetSingleConversion,w
  9821  0AA3  00E4               	movwf	ADC_test@value^(0+256)
  9822  0AA4                     l6683:
  9823                           
  9824                           ;tester.c: 86:     aux = (float)value*1.8/4096.0;
  9825  0AA4  3045               	movlw	69
  9826  0AA5  0140               	movlb	0	; select bank0
  9827  0AA6  00C3               	movwf	___fldiv@a+3
  9828  0AA7  3080               	movlw	128
  9829  0AA8  00C2               	movwf	___fldiv@a+2
  9830  0AA9  3000               	movlw	0
  9831  0AAA  00C1               	movwf	___fldiv@a+1
  9832  0AAB  3000               	movlw	0
  9833  0AAC  00C0               	movwf	___fldiv@a
  9834  0AAD  303F               	movlw	63
  9835  0AAE  00A9               	movwf	___flmul@b+3
  9836  0AAF  30E6               	movlw	230
  9837  0AB0  00A8               	movwf	___flmul@b+2
  9838  0AB1  3066               	movlw	102
  9839  0AB2  00A7               	movwf	___flmul@b+1
  9840  0AB3  3066               	movlw	102
  9841  0AB4  00A6               	movwf	___flmul@b
  9842  0AB5  0142               	movlb	2	; select bank2
  9843  0AB6  0864               	movf	ADC_test@value^(0+256),w
  9844  0AB7  00F1               	movwf	___xxtofl@val
  9845  0AB8  0865               	movf	(ADC_test@value+1)^(0+256),w
  9846  0AB9  00F2               	movwf	___xxtofl@val+1
  9847  0ABA  01F3               	clrf	___xxtofl@val+2
  9848  0ABB  01F4               	clrf	___xxtofl@val+3
  9849  0ABC  3000               	movlw	0
  9850  0ABD  319F  2753  318A   	fcall	___xxtofl
  9851  0AC0  0874               	movf	?___xxtofl+3,w
  9852  0AC1  0140               	movlb	0	; select bank0
  9853  0AC2  00AD               	movwf	___flmul@a+3
  9854  0AC3  0873               	movf	?___xxtofl+2,w
  9855  0AC4  00AC               	movwf	___flmul@a+2
  9856  0AC5  0872               	movf	?___xxtofl+1,w
  9857  0AC6  00AB               	movwf	___flmul@a+1
  9858  0AC7  0871               	movf	?___xxtofl,w
  9859  0AC8  00AA               	movwf	___flmul@a
  9860  0AC9  3195  25A9  318A   	fcall	___flmul
  9861  0ACC  0140               	movlb	0	; select bank0
  9862  0ACD  0829               	movf	?___flmul+3,w
  9863  0ACE  00C7               	movwf	___fldiv@b+3
  9864  0ACF  0828               	movf	?___flmul+2,w
  9865  0AD0  00C6               	movwf	___fldiv@b+2
  9866  0AD1  0827               	movf	?___flmul+1,w
  9867  0AD2  00C5               	movwf	___fldiv@b+1
  9868  0AD3  0826               	movf	?___flmul,w
  9869  0AD4  00C4               	movwf	___fldiv@b
  9870  0AD5  3193  23F5  318A   	fcall	___fldiv
  9871  0AD8  0140               	movlb	0	; select bank0
  9872  0AD9  0843               	movf	?___fldiv+3,w
  9873  0ADA  0142               	movlb	2	; select bank2
  9874  0ADB  00E2               	movwf	(ADC_test@aux+3)^(0+256)
  9875  0ADC  0140               	movlb	0	; select bank0
  9876  0ADD  0842               	movf	?___fldiv+2,w
  9877  0ADE  0142               	movlb	2	; select bank2
  9878  0ADF  00E1               	movwf	(ADC_test@aux+2)^(0+256)
  9879  0AE0  0140               	movlb	0	; select bank0
  9880  0AE1  0841               	movf	?___fldiv+1,w
  9881  0AE2  0142               	movlb	2	; select bank2
  9882  0AE3  00E0               	movwf	(ADC_test@aux+1)^(0+256)
  9883  0AE4  0140               	movlb	0	; select bank0
  9884  0AE5  0840               	movf	?___fldiv,w
  9885  0AE6  0142               	movlb	2	; select bank2
  9886  0AE7  00DF               	movwf	ADC_test@aux^(0+256)
  9887  0AE8                     l6685:
  9888                           
  9889                           ;tester.c: 87:     num = sprintf(sbuf,"VOUT_SE = %3.3f V (0.900 V)\n", aux);
  9890  0AE8  306A               	movlw	low (STR_7| (0+32768))
  9891  0AE9  00AF               	movwf	sprintf@fmt^(0+256)
  9892  0AEA  30A0               	movlw	high (STR_7| (0+32768))
  9893  0AEB  00B0               	movwf	(sprintf@fmt^(0+256)+1)
  9894  0AEC  0862               	movf	(ADC_test@aux+3)^(0+256),w
  9895  0AED  00B4               	movwf	((?_sprintf+3)^(0+256)+2)
  9896  0AEE  0861               	movf	(ADC_test@aux+2)^(0+256),w
  9897  0AEF  00B3               	movwf	((?_sprintf+2)^(0+256)+2)
  9898  0AF0  0860               	movf	(ADC_test@aux+1)^(0+256),w
  9899  0AF1  00B2               	movwf	((?_sprintf+1)^(0+256)+2)
  9900  0AF2  085F               	movf	ADC_test@aux^(0+256),w
  9901  0AF3  00B1               	movwf	(?_sprintf^(0+256)+2)
  9902  0AF4  3041               	movlw	(low (ADC_test@sbuf| (0+256)))& (0+255)
  9903  0AF5  319A  2290  318A   	fcall	_sprintf
  9904  0AF8  0142               	movlb	2	; select bank2
  9905  0AF9  082F               	movf	?_sprintf^(0+256),w
  9906  0AFA  00BF               	movwf	??_ADC_test^(0+256)
  9907  0AFB  083F               	movf	??_ADC_test^(0+256),w
  9908  0AFC  00E3               	movwf	ADC_test@num^(0+256)
  9909  0AFD                     l6687:
  9910                           
  9911                           ;tester.c: 88:     write(sbuf,num);
  9912  0AFD  3041               	movlw	low ADC_test@sbuf
  9913  0AFE  00F3               	movwf	write@pt
  9914  0AFF  3001               	movlw	high ADC_test@sbuf
  9915  0B00  00F4               	movwf	write@pt+1
  9916  0B01  0863               	movf	ADC_test@num^(0+256),w
  9917  0B02  00BF               	movwf	??_ADC_test^(0+256)
  9918  0B03  083F               	movf	??_ADC_test^(0+256),w
  9919  0B04  00F5               	movwf	write@lenght
  9920  0B05  3198  209D  318A   	fcall	_write
  9921  0B08                     l6689:
  9922                           
  9923                           ;tester.c: 89:     _delay((unsigned long)((50)*(32000000/4000.0)));
  9924  0B08  3003               	movlw	3
  9925  0B09  0142               	movlb	2	; select bank2
  9926  0B0A  00C0               	movwf	(??_ADC_test^(0+256)+1)
  9927  0B0B  3008               	movlw	8
  9928  0B0C  00BF               	movwf	??_ADC_test^(0+256)
  9929  0B0D  3077               	movlw	119
  9930  0B0E                     u8587:
  9931  0B0E  0B89               	decfsz	9,f
  9932  0B0F  2B0E               	goto	u8587
  9933  0B10  0BBF               	decfsz	??_ADC_test^(0+256),f
  9934  0B11  2B0E               	goto	u8587
  9935  0B12  0BC0               	decfsz	(??_ADC_test^(0+256)+1),f
  9936  0B13  2B0E               	goto	u8587
  9937  0B14                     l6691:
  9938                           
  9939                           ;tester.c: 91:     value = ADCC_GetSingleConversion(VOUTP);
  9940  0B14  3006               	movlw	6
  9941  0B15  31A7  275D  318A   	fcall	_ADCC_GetSingleConversion
  9942  0B18  0872               	movf	?_ADCC_GetSingleConversion+1,w
  9943  0B19  0142               	movlb	2	; select bank2
  9944  0B1A  00E5               	movwf	(ADC_test@value+1)^(0+256)
  9945  0B1B  0871               	movf	?_ADCC_GetSingleConversion,w
  9946  0B1C  00E4               	movwf	ADC_test@value^(0+256)
  9947  0B1D                     l6693:
  9948                           
  9949                           ;tester.c: 92:     aux = (float)value*1.8/4096.0;
  9950  0B1D  3045               	movlw	69
  9951  0B1E  0140               	movlb	0	; select bank0
  9952  0B1F  00C3               	movwf	___fldiv@a+3
  9953  0B20  3080               	movlw	128
  9954  0B21  00C2               	movwf	___fldiv@a+2
  9955  0B22  3000               	movlw	0
  9956  0B23  00C1               	movwf	___fldiv@a+1
  9957  0B24  3000               	movlw	0
  9958  0B25  00C0               	movwf	___fldiv@a
  9959  0B26  303F               	movlw	63
  9960  0B27  00A9               	movwf	___flmul@b+3
  9961  0B28  30E6               	movlw	230
  9962  0B29  00A8               	movwf	___flmul@b+2
  9963  0B2A  3066               	movlw	102
  9964  0B2B  00A7               	movwf	___flmul@b+1
  9965  0B2C  3066               	movlw	102
  9966  0B2D  00A6               	movwf	___flmul@b
  9967  0B2E  0142               	movlb	2	; select bank2
  9968  0B2F  0864               	movf	ADC_test@value^(0+256),w
  9969  0B30  00F1               	movwf	___xxtofl@val
  9970  0B31  0865               	movf	(ADC_test@value+1)^(0+256),w
  9971  0B32  00F2               	movwf	___xxtofl@val+1
  9972  0B33  01F3               	clrf	___xxtofl@val+2
  9973  0B34  01F4               	clrf	___xxtofl@val+3
  9974  0B35  3000               	movlw	0
  9975  0B36  319F  2753  318A   	fcall	___xxtofl
  9976  0B39  0874               	movf	?___xxtofl+3,w
  9977  0B3A  0140               	movlb	0	; select bank0
  9978  0B3B  00AD               	movwf	___flmul@a+3
  9979  0B3C  0873               	movf	?___xxtofl+2,w
  9980  0B3D  00AC               	movwf	___flmul@a+2
  9981  0B3E  0872               	movf	?___xxtofl+1,w
  9982  0B3F  00AB               	movwf	___flmul@a+1
  9983  0B40  0871               	movf	?___xxtofl,w
  9984  0B41  00AA               	movwf	___flmul@a
  9985  0B42  3195  25A9  318A   	fcall	___flmul
  9986  0B45  0140               	movlb	0	; select bank0
  9987  0B46  0829               	movf	?___flmul+3,w
  9988  0B47  00C7               	movwf	___fldiv@b+3
  9989  0B48  0828               	movf	?___flmul+2,w
  9990  0B49  00C6               	movwf	___fldiv@b+2
  9991  0B4A  0827               	movf	?___flmul+1,w
  9992  0B4B  00C5               	movwf	___fldiv@b+1
  9993  0B4C  0826               	movf	?___flmul,w
  9994  0B4D  00C4               	movwf	___fldiv@b
  9995  0B4E  3193  23F5  318A   	fcall	___fldiv
  9996  0B51  0140               	movlb	0	; select bank0
  9997  0B52  0843               	movf	?___fldiv+3,w
  9998  0B53  0142               	movlb	2	; select bank2
  9999  0B54  00E2               	movwf	(ADC_test@aux+3)^(0+256)
 10000  0B55  0140               	movlb	0	; select bank0
 10001  0B56  0842               	movf	?___fldiv+2,w
 10002  0B57  0142               	movlb	2	; select bank2
 10003  0B58  00E1               	movwf	(ADC_test@aux+2)^(0+256)
 10004  0B59  0140               	movlb	0	; select bank0
 10005  0B5A  0841               	movf	?___fldiv+1,w
 10006  0B5B  0142               	movlb	2	; select bank2
 10007  0B5C  00E0               	movwf	(ADC_test@aux+1)^(0+256)
 10008  0B5D  0140               	movlb	0	; select bank0
 10009  0B5E  0840               	movf	?___fldiv,w
 10010  0B5F  0142               	movlb	2	; select bank2
 10011  0B60  00DF               	movwf	ADC_test@aux^(0+256)
 10012  0B61                     l6695:
 10013                           
 10014                           ;tester.c: 93:     num = sprintf(sbuf,"VOUTP = %3.3f V (1.168 V)\n ", aux);
 10015  0B61  3087               	movlw	low (STR_8| (0+32768))
 10016  0B62  00AF               	movwf	sprintf@fmt^(0+256)
 10017  0B63  30A0               	movlw	high (STR_8| (0+32768))
 10018  0B64  00B0               	movwf	(sprintf@fmt^(0+256)+1)
 10019  0B65  0862               	movf	(ADC_test@aux+3)^(0+256),w
 10020  0B66  00B4               	movwf	((?_sprintf+3)^(0+256)+2)
 10021  0B67  0861               	movf	(ADC_test@aux+2)^(0+256),w
 10022  0B68  00B3               	movwf	((?_sprintf+2)^(0+256)+2)
 10023  0B69  0860               	movf	(ADC_test@aux+1)^(0+256),w
 10024  0B6A  00B2               	movwf	((?_sprintf+1)^(0+256)+2)
 10025  0B6B  085F               	movf	ADC_test@aux^(0+256),w
 10026  0B6C  00B1               	movwf	(?_sprintf^(0+256)+2)
 10027  0B6D  3041               	movlw	(low (ADC_test@sbuf| (0+256)))& (0+255)
 10028  0B6E  319A  2290  318A   	fcall	_sprintf
 10029  0B71  0142               	movlb	2	; select bank2
 10030  0B72  082F               	movf	?_sprintf^(0+256),w
 10031  0B73  00BF               	movwf	??_ADC_test^(0+256)
 10032  0B74  083F               	movf	??_ADC_test^(0+256),w
 10033  0B75  00E3               	movwf	ADC_test@num^(0+256)
 10034                           
 10035                           ;tester.c: 94:     write(sbuf,num);
 10036  0B76  3041               	movlw	low ADC_test@sbuf
 10037  0B77  00F3               	movwf	write@pt
 10038  0B78  3001               	movlw	high ADC_test@sbuf
 10039  0B79  00F4               	movwf	write@pt+1
 10040  0B7A  0863               	movf	ADC_test@num^(0+256),w
 10041  0B7B  00BF               	movwf	??_ADC_test^(0+256)
 10042  0B7C  083F               	movf	??_ADC_test^(0+256),w
 10043  0B7D  00F5               	movwf	write@lenght
 10044  0B7E  3198  209D  318A   	fcall	_write
 10045  0B81                     l6697:
 10046                           
 10047                           ;tester.c: 95:     _delay((unsigned long)((50)*(32000000/4000.0)));
 10048  0B81  3003               	movlw	3
 10049  0B82  0142               	movlb	2	; select bank2
 10050  0B83  00C0               	movwf	(??_ADC_test^(0+256)+1)
 10051  0B84  3008               	movlw	8
 10052  0B85  00BF               	movwf	??_ADC_test^(0+256)
 10053  0B86  3077               	movlw	119
 10054  0B87                     u8597:
 10055  0B87  0B89               	decfsz	9,f
 10056  0B88  2B87               	goto	u8597
 10057  0B89  0BBF               	decfsz	??_ADC_test^(0+256),f
 10058  0B8A  2B87               	goto	u8597
 10059  0B8B  0BC0               	decfsz	(??_ADC_test^(0+256)+1),f
 10060  0B8C  2B87               	goto	u8597
 10061  0B8D                     l6699:
 10062                           
 10063                           ;tester.c: 97:     value = ADCC_GetSingleConversion(VOUTN);
 10064  0B8D  3007               	movlw	7
 10065  0B8E  31A7  275D  318A   	fcall	_ADCC_GetSingleConversion
 10066  0B91  0872               	movf	?_ADCC_GetSingleConversion+1,w
 10067  0B92  0142               	movlb	2	; select bank2
 10068  0B93  00E5               	movwf	(ADC_test@value+1)^(0+256)
 10069  0B94  0871               	movf	?_ADCC_GetSingleConversion,w
 10070  0B95  00E4               	movwf	ADC_test@value^(0+256)
 10071  0B96                     l6701:
 10072                           
 10073                           ;tester.c: 98:     aux = (float)value*1.8/4096.0;
 10074  0B96  3045               	movlw	69
 10075  0B97  0140               	movlb	0	; select bank0
 10076  0B98  00C3               	movwf	___fldiv@a+3
 10077  0B99  3080               	movlw	128
 10078  0B9A  00C2               	movwf	___fldiv@a+2
 10079  0B9B  3000               	movlw	0
 10080  0B9C  00C1               	movwf	___fldiv@a+1
 10081  0B9D  3000               	movlw	0
 10082  0B9E  00C0               	movwf	___fldiv@a
 10083  0B9F  303F               	movlw	63
 10084  0BA0  00A9               	movwf	___flmul@b+3
 10085  0BA1  30E6               	movlw	230
 10086  0BA2  00A8               	movwf	___flmul@b+2
 10087  0BA3  3066               	movlw	102
 10088  0BA4  00A7               	movwf	___flmul@b+1
 10089  0BA5  3066               	movlw	102
 10090  0BA6  00A6               	movwf	___flmul@b
 10091  0BA7  0142               	movlb	2	; select bank2
 10092  0BA8  0864               	movf	ADC_test@value^(0+256),w
 10093  0BA9  00F1               	movwf	___xxtofl@val
 10094  0BAA  0865               	movf	(ADC_test@value+1)^(0+256),w
 10095  0BAB  00F2               	movwf	___xxtofl@val+1
 10096  0BAC  01F3               	clrf	___xxtofl@val+2
 10097  0BAD  01F4               	clrf	___xxtofl@val+3
 10098  0BAE  3000               	movlw	0
 10099  0BAF  319F  2753  318A   	fcall	___xxtofl
 10100  0BB2  0874               	movf	?___xxtofl+3,w
 10101  0BB3  0140               	movlb	0	; select bank0
 10102  0BB4  00AD               	movwf	___flmul@a+3
 10103  0BB5  0873               	movf	?___xxtofl+2,w
 10104  0BB6  00AC               	movwf	___flmul@a+2
 10105  0BB7  0872               	movf	?___xxtofl+1,w
 10106  0BB8  00AB               	movwf	___flmul@a+1
 10107  0BB9  0871               	movf	?___xxtofl,w
 10108  0BBA  00AA               	movwf	___flmul@a
 10109  0BBB  3195  25A9  318A   	fcall	___flmul
 10110  0BBE  0140               	movlb	0	; select bank0
 10111  0BBF  0829               	movf	?___flmul+3,w
 10112  0BC0  00C7               	movwf	___fldiv@b+3
 10113  0BC1  0828               	movf	?___flmul+2,w
 10114  0BC2  00C6               	movwf	___fldiv@b+2
 10115  0BC3  0827               	movf	?___flmul+1,w
 10116  0BC4  00C5               	movwf	___fldiv@b+1
 10117  0BC5  0826               	movf	?___flmul,w
 10118  0BC6  00C4               	movwf	___fldiv@b
 10119  0BC7  3193  23F5  318A   	fcall	___fldiv
 10120  0BCA  0140               	movlb	0	; select bank0
 10121  0BCB  0843               	movf	?___fldiv+3,w
 10122  0BCC  0142               	movlb	2	; select bank2
 10123  0BCD  00E2               	movwf	(ADC_test@aux+3)^(0+256)
 10124  0BCE  0140               	movlb	0	; select bank0
 10125  0BCF  0842               	movf	?___fldiv+2,w
 10126  0BD0  0142               	movlb	2	; select bank2
 10127  0BD1  00E1               	movwf	(ADC_test@aux+2)^(0+256)
 10128  0BD2  0140               	movlb	0	; select bank0
 10129  0BD3  0841               	movf	?___fldiv+1,w
 10130  0BD4  0142               	movlb	2	; select bank2
 10131  0BD5  00E0               	movwf	(ADC_test@aux+1)^(0+256)
 10132  0BD6  0140               	movlb	0	; select bank0
 10133  0BD7  0840               	movf	?___fldiv,w
 10134  0BD8  0142               	movlb	2	; select bank2
 10135  0BD9  00DF               	movwf	ADC_test@aux^(0+256)
 10136  0BDA                     l6703:
 10137                           
 10138                           ;tester.c: 99:     num = sprintf(sbuf,"VOUTN = %3.3f V (1.168 V)\n", aux);
 10139  0BDA  30D9               	movlw	low (STR_9| (0+32768))
 10140  0BDB  00AF               	movwf	sprintf@fmt^(0+256)
 10141  0BDC  30A0               	movlw	high (STR_9| (0+32768))
 10142  0BDD  00B0               	movwf	(sprintf@fmt^(0+256)+1)
 10143  0BDE  0862               	movf	(ADC_test@aux+3)^(0+256),w
 10144  0BDF  00B4               	movwf	((?_sprintf+3)^(0+256)+2)
 10145  0BE0  0861               	movf	(ADC_test@aux+2)^(0+256),w
 10146  0BE1  00B3               	movwf	((?_sprintf+2)^(0+256)+2)
 10147  0BE2  0860               	movf	(ADC_test@aux+1)^(0+256),w
 10148  0BE3  00B2               	movwf	((?_sprintf+1)^(0+256)+2)
 10149  0BE4  085F               	movf	ADC_test@aux^(0+256),w
 10150  0BE5  00B1               	movwf	(?_sprintf^(0+256)+2)
 10151  0BE6  3041               	movlw	(low (ADC_test@sbuf| (0+256)))& (0+255)
 10152  0BE7  319A  2290  318A   	fcall	_sprintf
 10153  0BEA  0142               	movlb	2	; select bank2
 10154  0BEB  082F               	movf	?_sprintf^(0+256),w
 10155  0BEC  00BF               	movwf	??_ADC_test^(0+256)
 10156  0BED  083F               	movf	??_ADC_test^(0+256),w
 10157  0BEE  00E3               	movwf	ADC_test@num^(0+256)
 10158  0BEF                     l6705:
 10159                           
 10160                           ;tester.c: 100:     write(sbuf,num);
 10161  0BEF  3041               	movlw	low ADC_test@sbuf
 10162  0BF0  00F3               	movwf	write@pt
 10163  0BF1  3001               	movlw	high ADC_test@sbuf
 10164  0BF2  00F4               	movwf	write@pt+1
 10165  0BF3  0863               	movf	ADC_test@num^(0+256),w
 10166  0BF4  00BF               	movwf	??_ADC_test^(0+256)
 10167  0BF5  083F               	movf	??_ADC_test^(0+256),w
 10168  0BF6  00F5               	movwf	write@lenght
 10169  0BF7  3198  209D  318A   	fcall	_write
 10170  0BFA                     l6707:
 10171                           
 10172                           ;tester.c: 101:     _delay((unsigned long)((50)*(32000000/4000.0)));
 10173  0BFA  3003               	movlw	3
 10174  0BFB  0142               	movlb	2	; select bank2
 10175  0BFC  00C0               	movwf	(??_ADC_test^(0+256)+1)
 10176  0BFD  3008               	movlw	8
 10177  0BFE  00BF               	movwf	??_ADC_test^(0+256)
 10178  0BFF  3077               	movlw	119
 10179  0C00                     u8607:
 10180  0C00  0B89               	decfsz	9,f
 10181  0C01  2C00               	goto	u8607
 10182  0C02  0BBF               	decfsz	??_ADC_test^(0+256),f
 10183  0C03  2C00               	goto	u8607
 10184  0C04  0BC0               	decfsz	(??_ADC_test^(0+256)+1),f
 10185  0C05  2C00               	goto	u8607
 10186  0C06                     l6709:
 10187                           
 10188                           ;tester.c: 103:     value = ADCC_GetSingleConversion(IOUTP);
 10189  0C06  3005               	movlw	5
 10190  0C07  31A7  275D  318A   	fcall	_ADCC_GetSingleConversion
 10191  0C0A  0872               	movf	?_ADCC_GetSingleConversion+1,w
 10192  0C0B  0142               	movlb	2	; select bank2
 10193  0C0C  00E5               	movwf	(ADC_test@value+1)^(0+256)
 10194  0C0D  0871               	movf	?_ADCC_GetSingleConversion,w
 10195  0C0E  00E4               	movwf	ADC_test@value^(0+256)
 10196  0C0F                     l6711:
 10197                           
 10198                           ;tester.c: 104:     aux = (float)value*1.8/4096.0;
 10199  0C0F  3045               	movlw	69
 10200  0C10  0140               	movlb	0	; select bank0
 10201  0C11  00C3               	movwf	___fldiv@a+3
 10202  0C12  3080               	movlw	128
 10203  0C13  00C2               	movwf	___fldiv@a+2
 10204  0C14  3000               	movlw	0
 10205  0C15  00C1               	movwf	___fldiv@a+1
 10206  0C16  3000               	movlw	0
 10207  0C17  00C0               	movwf	___fldiv@a
 10208  0C18  303F               	movlw	63
 10209  0C19  00A9               	movwf	___flmul@b+3
 10210  0C1A  30E6               	movlw	230
 10211  0C1B  00A8               	movwf	___flmul@b+2
 10212  0C1C  3066               	movlw	102
 10213  0C1D  00A7               	movwf	___flmul@b+1
 10214  0C1E  3066               	movlw	102
 10215  0C1F  00A6               	movwf	___flmul@b
 10216  0C20  0142               	movlb	2	; select bank2
 10217  0C21  0864               	movf	ADC_test@value^(0+256),w
 10218  0C22  00F1               	movwf	___xxtofl@val
 10219  0C23  0865               	movf	(ADC_test@value+1)^(0+256),w
 10220  0C24  00F2               	movwf	___xxtofl@val+1
 10221  0C25  01F3               	clrf	___xxtofl@val+2
 10222  0C26  01F4               	clrf	___xxtofl@val+3
 10223  0C27  3000               	movlw	0
 10224  0C28  319F  2753  318A   	fcall	___xxtofl
 10225  0C2B  0874               	movf	?___xxtofl+3,w
 10226  0C2C  0140               	movlb	0	; select bank0
 10227  0C2D  00AD               	movwf	___flmul@a+3
 10228  0C2E  0873               	movf	?___xxtofl+2,w
 10229  0C2F  00AC               	movwf	___flmul@a+2
 10230  0C30  0872               	movf	?___xxtofl+1,w
 10231  0C31  00AB               	movwf	___flmul@a+1
 10232  0C32  0871               	movf	?___xxtofl,w
 10233  0C33  00AA               	movwf	___flmul@a
 10234  0C34  3195  25A9  318A   	fcall	___flmul
 10235  0C37  0140               	movlb	0	; select bank0
 10236  0C38  0829               	movf	?___flmul+3,w
 10237  0C39  00C7               	movwf	___fldiv@b+3
 10238  0C3A  0828               	movf	?___flmul+2,w
 10239  0C3B  00C6               	movwf	___fldiv@b+2
 10240  0C3C  0827               	movf	?___flmul+1,w
 10241  0C3D  00C5               	movwf	___fldiv@b+1
 10242  0C3E  0826               	movf	?___flmul,w
 10243  0C3F  00C4               	movwf	___fldiv@b
 10244  0C40  3193  23F5  318A   	fcall	___fldiv
 10245  0C43  0140               	movlb	0	; select bank0
 10246  0C44  0843               	movf	?___fldiv+3,w
 10247  0C45  0142               	movlb	2	; select bank2
 10248  0C46  00E2               	movwf	(ADC_test@aux+3)^(0+256)
 10249  0C47  0140               	movlb	0	; select bank0
 10250  0C48  0842               	movf	?___fldiv+2,w
 10251  0C49  0142               	movlb	2	; select bank2
 10252  0C4A  00E1               	movwf	(ADC_test@aux+2)^(0+256)
 10253  0C4B  0140               	movlb	0	; select bank0
 10254  0C4C  0841               	movf	?___fldiv+1,w
 10255  0C4D  0142               	movlb	2	; select bank2
 10256  0C4E  00E0               	movwf	(ADC_test@aux+1)^(0+256)
 10257  0C4F  0140               	movlb	0	; select bank0
 10258  0C50  0840               	movf	?___fldiv,w
 10259  0C51  0142               	movlb	2	; select bank2
 10260  0C52  00DF               	movwf	ADC_test@aux^(0+256)
 10261                           
 10262                           ;tester.c: 105:     num = sprintf(sbuf,"IOUTP = %3.3f V (1.002 V)\n", aux);
 10263  0C53  30BE               	movlw	low (STR_10| (0+32768))
 10264  0C54  00AF               	movwf	sprintf@fmt^(0+256)
 10265  0C55  30A0               	movlw	high (STR_10| (0+32768))
 10266  0C56  00B0               	movwf	(sprintf@fmt^(0+256)+1)
 10267  0C57  0862               	movf	(ADC_test@aux+3)^(0+256),w
 10268  0C58  00B4               	movwf	((?_sprintf+3)^(0+256)+2)
 10269  0C59  0861               	movf	(ADC_test@aux+2)^(0+256),w
 10270  0C5A  00B3               	movwf	((?_sprintf+2)^(0+256)+2)
 10271  0C5B  0860               	movf	(ADC_test@aux+1)^(0+256),w
 10272  0C5C  00B2               	movwf	((?_sprintf+1)^(0+256)+2)
 10273  0C5D  085F               	movf	ADC_test@aux^(0+256),w
 10274  0C5E  00B1               	movwf	(?_sprintf^(0+256)+2)
 10275  0C5F  3041               	movlw	(low (ADC_test@sbuf| (0+256)))& (0+255)
 10276  0C60  319A  2290  318A   	fcall	_sprintf
 10277  0C63  0142               	movlb	2	; select bank2
 10278  0C64  082F               	movf	?_sprintf^(0+256),w
 10279  0C65  00BF               	movwf	??_ADC_test^(0+256)
 10280  0C66  083F               	movf	??_ADC_test^(0+256),w
 10281  0C67  00E3               	movwf	ADC_test@num^(0+256)
 10282  0C68                     l6713:
 10283                           
 10284                           ;tester.c: 106:     write(sbuf,num);
 10285  0C68  3041               	movlw	low ADC_test@sbuf
 10286  0C69  00F3               	movwf	write@pt
 10287  0C6A  3001               	movlw	high ADC_test@sbuf
 10288  0C6B  00F4               	movwf	write@pt+1
 10289  0C6C  0863               	movf	ADC_test@num^(0+256),w
 10290  0C6D  00BF               	movwf	??_ADC_test^(0+256)
 10291  0C6E  083F               	movf	??_ADC_test^(0+256),w
 10292  0C6F  00F5               	movwf	write@lenght
 10293  0C70  3198  209D  318A   	fcall	_write
 10294  0C73                     l6715:
 10295                           
 10296                           ;tester.c: 107:     _delay((unsigned long)((50)*(32000000/4000.0)));
 10297  0C73  3003               	movlw	3
 10298  0C74  0142               	movlb	2	; select bank2
 10299  0C75  00C0               	movwf	(??_ADC_test^(0+256)+1)
 10300  0C76  3008               	movlw	8
 10301  0C77  00BF               	movwf	??_ADC_test^(0+256)
 10302  0C78  3077               	movlw	119
 10303  0C79                     u8617:
 10304  0C79  0B89               	decfsz	9,f
 10305  0C7A  2C79               	goto	u8617
 10306  0C7B  0BBF               	decfsz	??_ADC_test^(0+256),f
 10307  0C7C  2C79               	goto	u8617
 10308  0C7D  0BC0               	decfsz	(??_ADC_test^(0+256)+1),f
 10309  0C7E  2C79               	goto	u8617
 10310  0C7F                     l6717:
 10311                           
 10312                           ;tester.c: 109:     value = ADCC_GetSingleConversion(IOUTN);
 10313  0C7F  3004               	movlw	4
 10314  0C80  31A7  275D  318A   	fcall	_ADCC_GetSingleConversion
 10315  0C83  0872               	movf	?_ADCC_GetSingleConversion+1,w
 10316  0C84  0142               	movlb	2	; select bank2
 10317  0C85  00E5               	movwf	(ADC_test@value+1)^(0+256)
 10318  0C86  0871               	movf	?_ADCC_GetSingleConversion,w
 10319  0C87  00E4               	movwf	ADC_test@value^(0+256)
 10320  0C88                     l6719:
 10321                           
 10322                           ;tester.c: 110:     aux = (float)value*1.8/4096.0;
 10323  0C88  3045               	movlw	69
 10324  0C89  0140               	movlb	0	; select bank0
 10325  0C8A  00C3               	movwf	___fldiv@a+3
 10326  0C8B  3080               	movlw	128
 10327  0C8C  00C2               	movwf	___fldiv@a+2
 10328  0C8D  3000               	movlw	0
 10329  0C8E  00C1               	movwf	___fldiv@a+1
 10330  0C8F  3000               	movlw	0
 10331  0C90  00C0               	movwf	___fldiv@a
 10332  0C91  303F               	movlw	63
 10333  0C92  00A9               	movwf	___flmul@b+3
 10334  0C93  30E6               	movlw	230
 10335  0C94  00A8               	movwf	___flmul@b+2
 10336  0C95  3066               	movlw	102
 10337  0C96  00A7               	movwf	___flmul@b+1
 10338  0C97  3066               	movlw	102
 10339  0C98  00A6               	movwf	___flmul@b
 10340  0C99  0142               	movlb	2	; select bank2
 10341  0C9A  0864               	movf	ADC_test@value^(0+256),w
 10342  0C9B  00F1               	movwf	___xxtofl@val
 10343  0C9C  0865               	movf	(ADC_test@value+1)^(0+256),w
 10344  0C9D  00F2               	movwf	___xxtofl@val+1
 10345  0C9E  01F3               	clrf	___xxtofl@val+2
 10346  0C9F  01F4               	clrf	___xxtofl@val+3
 10347  0CA0  3000               	movlw	0
 10348  0CA1  319F  2753  318A   	fcall	___xxtofl
 10349  0CA4  0874               	movf	?___xxtofl+3,w
 10350  0CA5  0140               	movlb	0	; select bank0
 10351  0CA6  00AD               	movwf	___flmul@a+3
 10352  0CA7  0873               	movf	?___xxtofl+2,w
 10353  0CA8  00AC               	movwf	___flmul@a+2
 10354  0CA9  0872               	movf	?___xxtofl+1,w
 10355  0CAA  00AB               	movwf	___flmul@a+1
 10356  0CAB  0871               	movf	?___xxtofl,w
 10357  0CAC  00AA               	movwf	___flmul@a
 10358  0CAD  3195  25A9  318A   	fcall	___flmul
 10359  0CB0  0140               	movlb	0	; select bank0
 10360  0CB1  0829               	movf	?___flmul+3,w
 10361  0CB2  00C7               	movwf	___fldiv@b+3
 10362  0CB3  0828               	movf	?___flmul+2,w
 10363  0CB4  00C6               	movwf	___fldiv@b+2
 10364  0CB5  0827               	movf	?___flmul+1,w
 10365  0CB6  00C5               	movwf	___fldiv@b+1
 10366  0CB7  0826               	movf	?___flmul,w
 10367  0CB8  00C4               	movwf	___fldiv@b
 10368  0CB9  3193  23F5  318A   	fcall	___fldiv
 10369  0CBC  0140               	movlb	0	; select bank0
 10370  0CBD  0843               	movf	?___fldiv+3,w
 10371  0CBE  0142               	movlb	2	; select bank2
 10372  0CBF  00E2               	movwf	(ADC_test@aux+3)^(0+256)
 10373  0CC0  0140               	movlb	0	; select bank0
 10374  0CC1  0842               	movf	?___fldiv+2,w
 10375  0CC2  0142               	movlb	2	; select bank2
 10376  0CC3  00E1               	movwf	(ADC_test@aux+2)^(0+256)
 10377  0CC4  0140               	movlb	0	; select bank0
 10378  0CC5  0841               	movf	?___fldiv+1,w
 10379  0CC6  0142               	movlb	2	; select bank2
 10380  0CC7  00E0               	movwf	(ADC_test@aux+1)^(0+256)
 10381  0CC8  0140               	movlb	0	; select bank0
 10382  0CC9  0840               	movf	?___fldiv,w
 10383  0CCA  0142               	movlb	2	; select bank2
 10384  0CCB  00DF               	movwf	ADC_test@aux^(0+256)
 10385  0CCC                     l6721:
 10386                           
 10387                           ;tester.c: 111:     num = sprintf(sbuf,"IOUTN = %3.3f V (1.002 V)\n", aux);
 10388  0CCC  30A3               	movlw	low (STR_11| (0+32768))
 10389  0CCD  00AF               	movwf	sprintf@fmt^(0+256)
 10390  0CCE  30A0               	movlw	high (STR_11| (0+32768))
 10391  0CCF  00B0               	movwf	(sprintf@fmt^(0+256)+1)
 10392  0CD0  0862               	movf	(ADC_test@aux+3)^(0+256),w
 10393  0CD1  00B4               	movwf	((?_sprintf+3)^(0+256)+2)
 10394  0CD2  0861               	movf	(ADC_test@aux+2)^(0+256),w
 10395  0CD3  00B3               	movwf	((?_sprintf+2)^(0+256)+2)
 10396  0CD4  0860               	movf	(ADC_test@aux+1)^(0+256),w
 10397  0CD5  00B2               	movwf	((?_sprintf+1)^(0+256)+2)
 10398  0CD6  085F               	movf	ADC_test@aux^(0+256),w
 10399  0CD7  00B1               	movwf	(?_sprintf^(0+256)+2)
 10400  0CD8  3041               	movlw	(low (ADC_test@sbuf| (0+256)))& (0+255)
 10401  0CD9  319A  2290  318A   	fcall	_sprintf
 10402  0CDC  0142               	movlb	2	; select bank2
 10403  0CDD  082F               	movf	?_sprintf^(0+256),w
 10404  0CDE  00BF               	movwf	??_ADC_test^(0+256)
 10405  0CDF  083F               	movf	??_ADC_test^(0+256),w
 10406  0CE0  00E3               	movwf	ADC_test@num^(0+256)
 10407  0CE1                     l6723:
 10408                           
 10409                           ;tester.c: 112:     write(sbuf,num);
 10410  0CE1  3041               	movlw	low ADC_test@sbuf
 10411  0CE2  00F3               	movwf	write@pt
 10412  0CE3  3001               	movlw	high ADC_test@sbuf
 10413  0CE4  00F4               	movwf	write@pt+1
 10414  0CE5  0863               	movf	ADC_test@num^(0+256),w
 10415  0CE6  00BF               	movwf	??_ADC_test^(0+256)
 10416  0CE7  083F               	movf	??_ADC_test^(0+256),w
 10417  0CE8  00F5               	movwf	write@lenght
 10418  0CE9  3198  209D  318A   	fcall	_write
 10419  0CEC                     l6725:
 10420                           
 10421                           ;tester.c: 113:     _delay((unsigned long)((50)*(32000000/4000.0)));
 10422  0CEC  3003               	movlw	3
 10423  0CED  0142               	movlb	2	; select bank2
 10424  0CEE  00C0               	movwf	(??_ADC_test^(0+256)+1)
 10425  0CEF  3008               	movlw	8
 10426  0CF0  00BF               	movwf	??_ADC_test^(0+256)
 10427  0CF1  3077               	movlw	119
 10428  0CF2                     u8627:
 10429  0CF2  0B89               	decfsz	9,f
 10430  0CF3  2CF2               	goto	u8627
 10431  0CF4  0BBF               	decfsz	??_ADC_test^(0+256),f
 10432  0CF5  2CF2               	goto	u8627
 10433  0CF6  0BC0               	decfsz	(??_ADC_test^(0+256)+1),f
 10434  0CF7  2CF2               	goto	u8627
 10435  0CF8                     l6727:
 10436  0CF8  3010               	movlw	16
 10437  0CF9  31A7  275D  318A   	fcall	_ADCC_GetSingleConversion
 10438  0CFC                     l594:
 10439  0CFC  0008               	return
 10440  0CFD                     __end_of_ADC_test:
 10441                           
 10442                           	psect	text12
 10443  189D                     __ptext12:	
 10444 ;; *************** function _write *****************
 10445 ;; Defined at:
 10446 ;;		line 16 in file "comm.c"
 10447 ;; Parameters:    Size  Location     Type
 10448 ;;  pt              2    3[COMMON] PTR unsigned char 
 10449 ;;		 -> sweep@aux(7), ADC_test@sbuf(30), 
 10450 ;;  lenght          1    5[COMMON] unsigned char 
 10451 ;; Auto vars:     Size  Location     Type
 10452 ;;  i               1    8[COMMON] unsigned char 
 10453 ;; Return value:  Size  Location     Type
 10454 ;;                  1    wreg      void 
 10455 ;; Registers used:
 10456 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10457 ;; Tracked objects:
 10458 ;;		On entry : 0/0
 10459 ;;		On exit  : 0/0
 10460 ;;		Unchanged: 0/0
 10461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10462 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10463 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10464 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10465 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10466 ;;Total ram usage:        6 bytes
 10467 ;; Hardware stack levels used:    1
 10468 ;; Hardware stack levels required when called:    5
 10469 ;; This function calls:
 10470 ;;		_EUSART1_Write
 10471 ;;		_EUSART1_is_tx_ready
 10472 ;; This function is called by:
 10473 ;;		_ADC_test
 10474 ;;		_sweep
 10475 ;; This function uses a non-reentrant model
 10476 ;;
 10477                           
 10478                           
 10479                           ;psect for function _write
 10480  189D                     _write:
 10481  189D                     l5257:	
 10482                           ;incstack = 0
 10483                           ; Regs used in _write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10484                           
 10485                           
 10486                           ;comm.c: 16: void write(unsigned char *pt, unsigned char lenght);comm.c: 17: {;comm.c: 1
      +                          8:     unsigned char i;;comm.c: 20:     for (i=0; i<lenght; i++) {
 10487  189D  01F8               	clrf	write@i
 10488  189E  28B8               	goto	l5265
 10489  189F                     l5259:
 10490  189F  31A7  2735  3198   	fcall	_EUSART1_is_tx_ready
 10491  18A2  3A00               	xorlw	0
 10492  18A3  1903               	skipnz
 10493  18A4  28A6               	goto	u6431
 10494  18A5  28A7               	goto	u6430
 10495  18A6                     u6431:
 10496  18A6  289F               	goto	l5259
 10497  18A7                     u6430:
 10498  18A7                     l5261:
 10499                           
 10500                           ;comm.c: 22:         EUSART1_Write(pt[i]);
 10501  18A7  0878               	movf	write@i,w
 10502  18A8  00F6               	movwf	??_write
 10503  18A9  01F7               	clrf	??_write+1
 10504  18AA  0876               	movf	??_write,w
 10505  18AB  0773               	addwf	write@pt,w
 10506  18AC  0086               	movwf	6
 10507  18AD  0877               	movf	??_write+1,w
 10508  18AE  3D74               	addwfc	write@pt+1,w
 10509  18AF  0087               	movwf	7
 10510  18B0  0801               	movf	1,w
 10511  18B1  3199  217D  3198   	fcall	_EUSART1_Write
 10512  18B4                     l5263:
 10513                           
 10514                           ;comm.c: 23:     }
 10515  18B4  3001               	movlw	1
 10516  18B5  00F6               	movwf	??_write
 10517  18B6  0876               	movf	??_write,w
 10518  18B7  07F8               	addwf	write@i,f
 10519  18B8                     l5265:
 10520  18B8  0875               	movf	write@lenght,w
 10521  18B9  0278               	subwf	write@i,w
 10522  18BA  1C03               	skipc
 10523  18BB  28BD               	goto	u6441
 10524  18BC  28BE               	goto	u6440
 10525  18BD                     u6441:
 10526  18BD  289F               	goto	l5259
 10527  18BE                     u6440:
 10528  18BE                     l650:
 10529  18BE  0008               	return
 10530  18BF                     __end_of_write:
 10531                           
 10532                           	psect	text13
 10533  1A90                     __ptext13:	
 10534 ;; *************** function _sprintf *****************
 10535 ;; Defined at:
 10536 ;;		line 9 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/nf_sprintf.c"
 10537 ;; Parameters:    Size  Location     Type
 10538 ;;  s               1    wreg     PTR unsigned char 
 10539 ;;		 -> ADC_test@sbuf(30), 
 10540 ;;  fmt             2   15[BANK2 ] PTR const unsigned char 
 10541 ;;		 -> STR_11(27), STR_10(27), STR_9(27), STR_8(28), 
 10542 ;;		 -> STR_7(29), 
 10543 ;; Auto vars:     Size  Location     Type
 10544 ;;  s               1   24[BANK2 ] PTR unsigned char 
 10545 ;;		 -> ADC_test@sbuf(30), 
 10546 ;;  f               5   26[BANK2 ] struct _IO_FILE
 10547 ;;  ret             2   22[BANK2 ] int 
 10548 ;;  ap              1   25[BANK2 ] PTR void [1]
 10549 ;;		 -> ?_sprintf(2), 
 10550 ;; Return value:  Size  Location     Type
 10551 ;;                  2   15[BANK2 ] int 
 10552 ;; Registers used:
 10553 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10554 ;; Tracked objects:
 10555 ;;		On entry : 0/0
 10556 ;;		On exit  : 0/0
 10557 ;;		Unchanged: 0/0
 10558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10559 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10560 ;;      Locals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10561 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10562 ;;      Totals:         0       0       0      16       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10563 ;;Total ram usage:       16 bytes
 10564 ;; Hardware stack levels used:    1
 10565 ;; Hardware stack levels required when called:   11
 10566 ;; This function calls:
 10567 ;;		_vfprintf
 10568 ;; This function is called by:
 10569 ;;		_ADC_test
 10570 ;; This function uses a non-reentrant model
 10571 ;;
 10572                           
 10573                           
 10574                           ;psect for function _sprintf
 10575  1A90                     _sprintf:
 10576                           
 10577                           ;incstack = 0
 10578                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10579                           ;sprintf@s stored from wreg
 10580  1A90  0142               	movlb	2	; select bank2
 10581  1A91  00B8               	movwf	sprintf@s^(0+256)
 10582  1A92                     l6577:
 10583  1A92  3031               	movlw	(low ((?_sprintf| (0+256)+2)))& (0+255)
 10584  1A93  00B5               	movwf	??_sprintf^(0+256)
 10585  1A94  0835               	movf	??_sprintf^(0+256),w
 10586  1A95  00B9               	movwf	sprintf@ap^(0+256)
 10587  1A96  0838               	movf	sprintf@s^(0+256),w
 10588  1A97  00B5               	movwf	??_sprintf^(0+256)
 10589  1A98  0835               	movf	??_sprintf^(0+256),w
 10590  1A99  00BA               	movwf	sprintf@f^(0+256)
 10591  1A9A                     l6579:
 10592  1A9A  01BB               	clrf	(sprintf@f^(0+256)+1)
 10593  1A9B  01BC               	clrf	((sprintf@f+1)^(0+256)+1)
 10594  1A9C                     l6581:
 10595  1A9C  01BD               	clrf	(sprintf@f^(0+256)+3)
 10596  1A9D  01BE               	clrf	((sprintf@f+1)^(0+256)+3)
 10597  1A9E                     l6583:
 10598  1A9E  0830               	movf	(sprintf@fmt+1)^(0+256),w
 10599  1A9F  0141               	movlb	1	; select bank1
 10600  1AA0  00E9               	movwf	(vfprintf@fmt+1)^(0+128)
 10601  1AA1  0142               	movlb	2	; select bank2
 10602  1AA2  082F               	movf	sprintf@fmt^(0+256),w
 10603  1AA3  0141               	movlb	1	; select bank1
 10604  1AA4  00E8               	movwf	vfprintf@fmt^(0+128)
 10605  1AA5  3039               	movlw	(low (sprintf@ap| (0+256)))& (0+255)
 10606  1AA6  0142               	movlb	2	; select bank2
 10607  1AA7  00B5               	movwf	??_sprintf^(0+256)
 10608  1AA8  0835               	movf	??_sprintf^(0+256),w
 10609  1AA9  0141               	movlb	1	; select bank1
 10610  1AAA  00EA               	movwf	vfprintf@ap^(0+128)
 10611  1AAB  303A               	movlw	(low (sprintf@f| (0+256)))& (0+255)
 10612  1AAC  319A  22C4  319A   	fcall	_vfprintf
 10613  1AAF  0141               	movlb	1	; select bank1
 10614  1AB0  0869               	movf	(?_vfprintf+1)^(0+128),w
 10615  1AB1  0142               	movlb	2	; select bank2
 10616  1AB2  00B7               	movwf	(sprintf@ret+1)^(0+256)
 10617  1AB3  0141               	movlb	1	; select bank1
 10618  1AB4  0868               	movf	?_vfprintf^(0+128),w
 10619  1AB5  0142               	movlb	2	; select bank2
 10620  1AB6  00B6               	movwf	sprintf@ret^(0+256)
 10621  1AB7                     l6585:
 10622  1AB7  083B               	movf	(sprintf@f^(0+256)+1),w
 10623  1AB8  0738               	addwf	sprintf@s^(0+256),w
 10624  1AB9  00B5               	movwf	??_sprintf^(0+256)
 10625  1ABA  0835               	movf	??_sprintf^(0+256),w
 10626  1ABB  0086               	movwf	6
 10627  1ABC  3001               	movlw	1	; select bank2/3
 10628  1ABD  0087               	movwf	7
 10629  1ABE  0181               	clrf	1
 10630  1ABF                     l6587:
 10631  1ABF  0837               	movf	(sprintf@ret+1)^(0+256),w
 10632  1AC0  00B0               	movwf	(?_sprintf+1)^(0+256)
 10633  1AC1  0836               	movf	sprintf@ret^(0+256),w
 10634  1AC2  00AF               	movwf	?_sprintf^(0+256)
 10635  1AC3                     l1275:
 10636  1AC3  0008               	return
 10637  1AC4                     __end_of_sprintf:
 10638                           
 10639                           	psect	text14
 10640  1AC4                     __ptext14:	
 10641 ;; *************** function _vfprintf *****************
 10642 ;; Defined at:
 10643 ;;		line 1390 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
 10644 ;; Parameters:    Size  Location     Type
 10645 ;;  fp              1    wreg     PTR struct _IO_FILE
 10646 ;;		 -> sprintf@f(5), 
 10647 ;;  fmt             2   72[BANK1 ] PTR const unsigned char 
 10648 ;;		 -> STR_11(27), STR_10(27), STR_9(27), STR_8(28), 
 10649 ;;		 -> STR_7(29), 
 10650 ;;  ap              1   74[BANK1 ] PTR PTR void 
 10651 ;;		 -> sprintf@ap(1), 
 10652 ;; Auto vars:     Size  Location     Type
 10653 ;;  fp              1   77[BANK1 ] PTR struct _IO_FILE
 10654 ;;		 -> sprintf@f(5), 
 10655 ;;  cfmt            2   78[BANK1 ] PTR unsigned char 
 10656 ;;		 -> STR_11(27), STR_10(27), STR_9(27), STR_8(28), 
 10657 ;;		 -> STR_7(29), 
 10658 ;; Return value:  Size  Location     Type
 10659 ;;                  2   72[BANK1 ] int 
 10660 ;; Registers used:
 10661 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10662 ;; Tracked objects:
 10663 ;;		On entry : 0/0
 10664 ;;		On exit  : 0/0
 10665 ;;		Unchanged: 0/0
 10666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10667 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10668 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10669 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10670 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10671 ;;Total ram usage:        8 bytes
 10672 ;; Hardware stack levels used:    1
 10673 ;; Hardware stack levels required when called:   10
 10674 ;; This function calls:
 10675 ;;		_vfpfcnvrt
 10676 ;; This function is called by:
 10677 ;;		_sprintf
 10678 ;; This function uses a non-reentrant model
 10679 ;;
 10680                           
 10681                           
 10682                           ;psect for function _vfprintf
 10683  1AC4                     _vfprintf:
 10684                           
 10685                           ;incstack = 0
 10686                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10687                           ;vfprintf@fp stored from wreg
 10688  1AC4  0141               	movlb	1	; select bank1
 10689  1AC5  00ED               	movwf	vfprintf@fp^(0+128)
 10690  1AC6                     l6565:
 10691                           
 10692                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1
      +                          391: {;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1393:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1395:     cfmt = (char *)fmt;
 10693  1AC6  0869               	movf	(vfprintf@fmt+1)^(0+128),w
 10694  1AC7  00EF               	movwf	(vfprintf@cfmt+1)^(0+128)
 10695  1AC8  0868               	movf	vfprintf@fmt^(0+128),w
 10696  1AC9  00EE               	movwf	vfprintf@cfmt^(0+128)
 10697  1ACA                     l6567:
 10698                           
 10699                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
 10700  1ACA  0143               	movlb	3	; select bank3
 10701  1ACB  01C8               	clrf	_nout^(0+384)
 10702  1ACC  01C9               	clrf	(_nout+1)^(0+384)
 10703                           
 10704                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
 10705  1ACD  2AE6               	goto	l6571
 10706  1ACE                     l6569:
 10707                           
 10708                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1398:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 10709  1ACE  30EE               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
 10710  1ACF  00EB               	movwf	??_vfprintf^(0+128)
 10711  1AD0  086B               	movf	??_vfprintf^(0+128),w
 10712  1AD1  0140               	movlb	0	; select bank0
 10713  1AD2  00EE               	movwf	vfpfcnvrt@fmt
 10714  1AD3  0141               	movlb	1	; select bank1
 10715  1AD4  086A               	movf	vfprintf@ap^(0+128),w
 10716  1AD5  00EC               	movwf	(??_vfprintf+1)^(0+128)
 10717  1AD6  086C               	movf	(??_vfprintf+1)^(0+128),w
 10718  1AD7  0140               	movlb	0	; select bank0
 10719  1AD8  00EF               	movwf	vfpfcnvrt@ap
 10720  1AD9  0141               	movlb	1	; select bank1
 10721  1ADA  086D               	movf	vfprintf@fp^(0+128),w
 10722  1ADB  318C  24FD  319A   	fcall	_vfpfcnvrt
 10723  1ADE  0140               	movlb	0	; select bank0
 10724  1ADF  086E               	movf	?_vfpfcnvrt,w
 10725  1AE0  0143               	movlb	3	; select bank3
 10726  1AE1  07C8               	addwf	_nout^(0+384),f
 10727  1AE2  0140               	movlb	0	; select bank0
 10728  1AE3  086F               	movf	?_vfpfcnvrt+1,w
 10729  1AE4  0143               	movlb	3	; select bank3
 10730  1AE5  3DC9               	addwfc	(_nout+1)^(0+384),f
 10731  1AE6                     l6571:
 10732                           
 10733                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
 10734  1AE6  0141               	movlb	1	; select bank1
 10735  1AE7  086E               	movf	vfprintf@cfmt^(0+128),w
 10736  1AE8  0084               	movwf	4
 10737  1AE9  086F               	movf	(vfprintf@cfmt+1)^(0+128),w
 10738  1AEA  0085               	movwf	5
 10739  1AEB  0012               	moviw fsr0++
 10740  1AEC  1D03               	btfss	3,2
 10741  1AED  2AEF               	goto	u8271
 10742  1AEE  2AF0               	goto	u8270
 10743  1AEF                     u8271:
 10744  1AEF  2ACE               	goto	l6569
 10745  1AF0                     u8270:
 10746  1AF0                     l6573:
 10747                           
 10748                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1400:     return nout;
 10749  1AF0  0143               	movlb	3	; select bank3
 10750  1AF1  0849               	movf	(_nout+1)^(0+384),w
 10751  1AF2  0141               	movlb	1	; select bank1
 10752  1AF3  00E9               	movwf	(?_vfprintf+1)^(0+128)
 10753  1AF4  0143               	movlb	3	; select bank3
 10754  1AF5  0848               	movf	_nout^(0+384),w
 10755  1AF6  0141               	movlb	1	; select bank1
 10756  1AF7  00E8               	movwf	?_vfprintf^(0+128)
 10757  1AF8                     l1455:
 10758  1AF8  0008               	return
 10759  1AF9                     __end_of_vfprintf:
 10760                           
 10761                           	psect	text15
 10762  0CFD                     __ptext15:	
 10763 ;; *************** function _vfpfcnvrt *****************
 10764 ;; Defined at:
 10765 ;;		line 692 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
 10766 ;; Parameters:    Size  Location     Type
 10767 ;;  fp              1    wreg     PTR struct _IO_FILE
 10768 ;;		 -> sprintf@f(5), 
 10769 ;;  fmt             1   78[BANK0 ] PTR PTR unsigned char 
 10770 ;;		 -> vfprintf@cfmt(2), 
 10771 ;;  ap              1   79[BANK0 ] PTR PTR void 
 10772 ;;		 -> sprintf@ap(1), 
 10773 ;; Auto vars:     Size  Location     Type
 10774 ;;  fp              1   14[BANK2 ] PTR struct _IO_FILE
 10775 ;;		 -> sprintf@f(5), 
 10776 ;;  llu             8    0        unsigned long long 
 10777 ;;  ll              8    0        long long 
 10778 ;;  f               4    9[BANK2 ] long long 
 10779 ;;  ct              3    6[BANK2 ] unsigned char [3]
 10780 ;;  vp              2    0        PTR void 
 10781 ;;  i               2    0        int 
 10782 ;;  done            2    0        int 
 10783 ;;  cp              2    0        PTR unsigned char 
 10784 ;;  c               1   13[BANK2 ] unsigned char 
 10785 ;; Return value:  Size  Location     Type
 10786 ;;                  2   78[BANK0 ] int 
 10787 ;; Registers used:
 10788 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10789 ;; Tracked objects:
 10790 ;;		On entry : 0/0
 10791 ;;		On exit  : 0/0
 10792 ;;		Unchanged: 0/0
 10793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10794 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10795 ;;      Locals:         0       0       0      15       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10796 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10797 ;;      Totals:         0       2       6      15       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10798 ;;Total ram usage:       23 bytes
 10799 ;; Hardware stack levels used:    1
 10800 ;; Hardware stack levels required when called:    9
 10801 ;; This function calls:
 10802 ;;		_atoi
 10803 ;;		_efgtoa
 10804 ;;		_fputc
 10805 ;;		_isdigit
 10806 ;;		_isupper
 10807 ;;		_strncmp
 10808 ;;		_tolower
 10809 ;; This function is called by:
 10810 ;;		_vfprintf
 10811 ;; This function uses a non-reentrant model
 10812 ;;
 10813                           
 10814                           
 10815                           ;psect for function _vfpfcnvrt
 10816  0CFD                     _vfpfcnvrt:
 10817                           
 10818                           ;incstack = 0
 10819                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10820                           ;vfpfcnvrt@fp stored from wreg
 10821  0CFD  0142               	movlb	2	; select bank2
 10822  0CFE  00AE               	movwf	vfpfcnvrt@fp^(0+256)
 10823  0CFF                     l6449:
 10824                           
 10825                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 692: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c
      +                          : 693: {;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 694:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 695:     int done, i;;
      +                          /opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 696:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 697:     unsigned long long llu;
 10826  0CFF  0140               	movlb	0	; select bank0
 10827  0D00  086E               	movf	vfpfcnvrt@fmt,w
 10828  0D01  0086               	movwf	6
 10829  0D02  0187               	clrf	7
 10830  0D03  3F40               	moviw [0]fsr1
 10831  0D04  0141               	movlb	1	; select bank1
 10832  0D05  00E2               	movwf	??_vfpfcnvrt^(0+128)
 10833  0D06  3F41               	moviw [1]fsr1
 10834  0D07  00E3               	movwf	(??_vfpfcnvrt^(0+128)+1)
 10835  0D08  0862               	movf	??_vfpfcnvrt^(0+128),w
 10836  0D09  0084               	movwf	4
 10837  0D0A  0863               	movf	(??_vfpfcnvrt+1)^(0+128),w
 10838  0D0B  0085               	movwf	5
 10839  0D0C  0012               	moviw fsr0++
 10840  0D0D  3A25               	xorlw	37
 10841  0D0E  1D03               	btfss	3,2
 10842  0D0F  2D11               	goto	u8081
 10843  0D10  2D12               	goto	u8080
 10844  0D11                     u8081:
 10845  0D11  2FD8               	goto	l6557
 10846  0D12                     u8080:
 10847  0D12                     l6451:
 10848                           
 10849                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
 10850  0D12  0140               	movlb	0	; select bank0
 10851  0D13  086E               	movf	vfpfcnvrt@fmt,w
 10852  0D14  0086               	movwf	6
 10853  0D15  0187               	clrf	7
 10854  0D16  3001               	movlw	1
 10855  0D17  0781               	addwf	1,f
 10856  0D18  3141               	addfsr 1,1
 10857  0D19  1803               	skipnc
 10858  0D1A  0A81               	incf	1,f
 10859  0D1B                     l6453:
 10860                           
 10861                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 705:         flags = width = 
      +                          0;
 10862  0D1B  0143               	movlb	3	; select bank3
 10863  0D1C  01CA               	clrf	_width^(0+384)
 10864  0D1D  01CB               	clrf	(_width+1)^(0+384)
 10865  0D1E  01CE               	clrf	_flags^(0+384)
 10866  0D1F  01CF               	clrf	(_flags+1)^(0+384)
 10867  0D20                     l6455:
 10868                           
 10869                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 706:         prec = -1;
 10870  0D20  30FF               	movlw	255
 10871  0D21  00CC               	movwf	_prec^(0+384)
 10872  0D22  30FF               	movlw	255
 10873  0D23  00CD               	movwf	(_prec^(0+384)+1)
 10874  0D24                     l6457:
 10875                           
 10876                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 745:         if ((*fmt)[0] ==
      +                           '*') {
 10877  0D24  0140               	movlb	0	; select bank0
 10878  0D25  086E               	movf	vfpfcnvrt@fmt,w
 10879  0D26  0086               	movwf	6
 10880  0D27  0187               	clrf	7
 10881  0D28  3F40               	moviw [0]fsr1
 10882  0D29  0141               	movlb	1	; select bank1
 10883  0D2A  00E2               	movwf	??_vfpfcnvrt^(0+128)
 10884  0D2B  3F41               	moviw [1]fsr1
 10885  0D2C  00E3               	movwf	(??_vfpfcnvrt^(0+128)+1)
 10886  0D2D  0862               	movf	??_vfpfcnvrt^(0+128),w
 10887  0D2E  0084               	movwf	4
 10888  0D2F  0863               	movf	(??_vfpfcnvrt+1)^(0+128),w
 10889  0D30  0085               	movwf	5
 10890  0D31  0012               	moviw fsr0++
 10891  0D32  3A2A               	xorlw	42
 10892  0D33  1D03               	btfss	3,2
 10893  0D34  2D36               	goto	u8091
 10894  0D35  2D37               	goto	u8090
 10895  0D36                     u8091:
 10896  0D36  2D5A               	goto	l6469
 10897  0D37                     u8090:
 10898  0D37                     l6459:
 10899                           
 10900                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 746:             ++*fmt;
 10901  0D37  0140               	movlb	0	; select bank0
 10902  0D38  086E               	movf	vfpfcnvrt@fmt,w
 10903  0D39  0086               	movwf	6
 10904  0D3A  0187               	clrf	7
 10905  0D3B  3001               	movlw	1
 10906  0D3C  0781               	addwf	1,f
 10907  0D3D  3141               	addfsr 1,1
 10908  0D3E  1803               	skipnc
 10909  0D3F  0A81               	incf	1,f
 10910  0D40                     l6461:
 10911                           
 10912                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 747:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 10913  0D40  086F               	movf	vfpfcnvrt@ap,w
 10914  0D41  0086               	movwf	6
 10915  0D42  3001               	movlw	1	; select bank2/3
 10916  0D43  0087               	movwf	7
 10917  0D44  0801               	movf	1,w
 10918  0D45  0084               	movwf	4
 10919  0D46  3001               	movlw	1	; select bank2/3
 10920  0D47  0085               	movwf	5
 10921  0D48  3002               	movlw	2
 10922  0D49  0781               	addwf	1,f
 10923  0D4A  3F00               	moviw [0]fsr0
 10924  0D4B  0143               	movlb	3	; select bank3
 10925  0D4C  00CA               	movwf	_width^(0+384)
 10926  0D4D  3F01               	moviw [1]fsr0
 10927  0D4E  00CB               	movwf	(_width+1)^(0+384)
 10928  0D4F                     l6463:
 10929                           
 10930                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 748:             if (width < 
      +                          0) {
 10931  0D4F  1FCB               	btfss	(_width+1)^(0+384),7
 10932  0D50  2D52               	goto	u8101
 10933  0D51  2D53               	goto	u8100
 10934  0D52                     u8101:
 10935  0D52  2DA2               	goto	l6479
 10936  0D53                     u8100:
 10937  0D53                     l6465:
 10938                           
 10939                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 749:                 flags |=
      +                           (1 << 0);
 10940  0D53  144E               	bsf	_flags^(0+384),0
 10941  0D54                     l6467:
 10942                           
 10943                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 750:                 width = 
      +                          -width;
 10944  0D54  09CA               	comf	_width^(0+384),f
 10945  0D55  09CB               	comf	(_width+1)^(0+384),f
 10946  0D56  0ACA               	incf	_width^(0+384),f
 10947  0D57  1903               	skipnz
 10948  0D58  0ACB               	incf	(_width+1)^(0+384),f
 10949  0D59  2DA2               	goto	l6479
 10950  0D5A                     l6469:
 10951                           
 10952                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 753:             width = atoi
      +                          (*fmt);
 10953  0D5A  0140               	movlb	0	; select bank0
 10954  0D5B  086E               	movf	vfpfcnvrt@fmt,w
 10955  0D5C  0086               	movwf	6
 10956  0D5D  0187               	clrf	7
 10957  0D5E  3F40               	moviw [0]fsr1
 10958  0D5F  00F7               	movwf	atoi@s
 10959  0D60  3F41               	moviw [1]fsr1
 10960  0D61  00F8               	movwf	atoi@s+1
 10961  0D62  3190  207F  318C   	fcall	_atoi
 10962  0D65  0878               	movf	?_atoi+1,w
 10963  0D66  0143               	movlb	3	; select bank3
 10964  0D67  00CB               	movwf	(_width+1)^(0+384)
 10965  0D68  0877               	movf	?_atoi,w
 10966  0D69  00CA               	movwf	_width^(0+384)
 10967                           
 10968                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 754:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 10969  0D6A  2D74               	goto	l6473
 10970  0D6B                     l6471:
 10971                           
 10972                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 755:                 ++*fmt;
 10973  0D6B  0140               	movlb	0	; select bank0
 10974  0D6C  086E               	movf	vfpfcnvrt@fmt,w
 10975  0D6D  0086               	movwf	6
 10976  0D6E  0187               	clrf	7
 10977  0D6F  3001               	movlw	1
 10978  0D70  0781               	addwf	1,f
 10979  0D71  3141               	addfsr 1,1
 10980  0D72  1803               	skipnc
 10981  0D73  0A81               	incf	1,f
 10982  0D74                     l6473:
 10983  0D74  0140               	movlb	0	; select bank0
 10984  0D75  086E               	movf	vfpfcnvrt@fmt,w
 10985  0D76  0086               	movwf	6
 10986  0D77  0187               	clrf	7
 10987  0D78  3F40               	moviw [0]fsr1
 10988  0D79  0141               	movlb	1	; select bank1
 10989  0D7A  00E2               	movwf	??_vfpfcnvrt^(0+128)
 10990  0D7B  3F41               	moviw [1]fsr1
 10991  0D7C  00E3               	movwf	(??_vfpfcnvrt^(0+128)+1)
 10992  0D7D  0862               	movf	??_vfpfcnvrt^(0+128),w
 10993  0D7E  0084               	movwf	4
 10994  0D7F  0863               	movf	(??_vfpfcnvrt+1)^(0+128),w
 10995  0D80  0085               	movwf	5
 10996  0D81  0800               	movf	0,w	;code access
 10997  0D82  3ED0               	addlw	208
 10998  0D83  00E4               	movwf	(??_vfpfcnvrt+2)^(0+128)
 10999  0D84  30FF               	movlw	255
 11000  0D85  1803               	skipnc
 11001  0D86  3000               	movlw	0
 11002  0D87  00E5               	movwf	((??_vfpfcnvrt+2)^(0+128)+1)
 11003  0D88  3000               	movlw	0
 11004  0D89  0265               	subwf	(??_vfpfcnvrt+3)^(0+128),w
 11005  0D8A  300A               	movlw	10
 11006  0D8B  1903               	skipnz
 11007  0D8C  0264               	subwf	(??_vfpfcnvrt+2)^(0+128),w
 11008  0D8D  1C03               	skipc
 11009  0D8E  2D90               	goto	u8111
 11010  0D8F  2D92               	goto	u8110
 11011  0D90                     u8111:
 11012  0D90  3001               	movlw	1
 11013  0D91  2D93               	goto	u8120
 11014  0D92                     u8110:
 11015  0D92  3000               	movlw	0
 11016  0D93                     u8120:
 11017  0D93  00E6               	movwf	(??_vfpfcnvrt+4)^(0+128)
 11018  0D94  01E7               	clrf	((??_vfpfcnvrt+4)^(0+128)+1)
 11019  0D95  0866               	movf	(??_vfpfcnvrt+4)^(0+128),w
 11020  0D96  0142               	movlb	2	; select bank2
 11021  0D97  00A0               	movwf	_vfpfcnvrt$2181^(0+256)
 11022  0D98  0141               	movlb	1	; select bank1
 11023  0D99  0867               	movf	(??_vfpfcnvrt+5)^(0+128),w
 11024  0D9A  0142               	movlb	2	; select bank2
 11025  0D9B  00A1               	movwf	(_vfpfcnvrt$2181+1)^(0+256)
 11026  0D9C                     l6477:
 11027  0D9C  0820               	movf	_vfpfcnvrt$2181^(0+256),w
 11028  0D9D  0421               	iorwf	(_vfpfcnvrt$2181+1)^(0+256),w
 11029  0D9E  1D03               	btfss	3,2
 11030  0D9F  2DA1               	goto	u8131
 11031  0DA0  2DA2               	goto	u8130
 11032  0DA1                     u8131:
 11033  0DA1  2D6B               	goto	l6471
 11034  0DA2                     u8130:
 11035  0DA2                     l6479:
 11036                           
 11037                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 762:         if ((*fmt)[0] ==
      +                           '.') {
 11038  0DA2  0140               	movlb	0	; select bank0
 11039  0DA3  086E               	movf	vfpfcnvrt@fmt,w
 11040  0DA4  0086               	movwf	6
 11041  0DA5  0187               	clrf	7
 11042  0DA6  3F40               	moviw [0]fsr1
 11043  0DA7  0141               	movlb	1	; select bank1
 11044  0DA8  00E2               	movwf	??_vfpfcnvrt^(0+128)
 11045  0DA9  3F41               	moviw [1]fsr1
 11046  0DAA  00E3               	movwf	(??_vfpfcnvrt^(0+128)+1)
 11047  0DAB  0862               	movf	??_vfpfcnvrt^(0+128),w
 11048  0DAC  0084               	movwf	4
 11049  0DAD  0863               	movf	(??_vfpfcnvrt+1)^(0+128),w
 11050  0DAE  0085               	movwf	5
 11051  0DAF  0012               	moviw fsr0++
 11052  0DB0  3A2E               	xorlw	46
 11053  0DB1  1D03               	btfss	3,2
 11054  0DB2  2DB4               	goto	u8141
 11055  0DB3  2DB5               	goto	u8140
 11056  0DB4                     u8141:
 11057  0DB4  2E34               	goto	l6501
 11058  0DB5                     u8140:
 11059  0DB5                     l6481:
 11060                           
 11061                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 763:             prec = 0;
 11062  0DB5  0143               	movlb	3	; select bank3
 11063  0DB6  01CC               	clrf	_prec^(0+384)
 11064  0DB7  01CD               	clrf	(_prec+1)^(0+384)
 11065  0DB8                     l6483:
 11066                           
 11067                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 764:             ++*fmt;
 11068  0DB8  0140               	movlb	0	; select bank0
 11069  0DB9  086E               	movf	vfpfcnvrt@fmt,w
 11070  0DBA  0086               	movwf	6
 11071  0DBB  0187               	clrf	7
 11072  0DBC  3001               	movlw	1
 11073  0DBD  0781               	addwf	1,f
 11074  0DBE  3141               	addfsr 1,1
 11075  0DBF  1803               	skipnc
 11076  0DC0  0A81               	incf	1,f
 11077  0DC1                     l6485:
 11078                           
 11079                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 765:             if ((*fmt)[0
      +                          ] == '*') {
 11080  0DC1  086E               	movf	vfpfcnvrt@fmt,w
 11081  0DC2  0086               	movwf	6
 11082  0DC3  0187               	clrf	7
 11083  0DC4  3F40               	moviw [0]fsr1
 11084  0DC5  0141               	movlb	1	; select bank1
 11085  0DC6  00E2               	movwf	??_vfpfcnvrt^(0+128)
 11086  0DC7  3F41               	moviw [1]fsr1
 11087  0DC8  00E3               	movwf	(??_vfpfcnvrt^(0+128)+1)
 11088  0DC9  0862               	movf	??_vfpfcnvrt^(0+128),w
 11089  0DCA  0084               	movwf	4
 11090  0DCB  0863               	movf	(??_vfpfcnvrt+1)^(0+128),w
 11091  0DCC  0085               	movwf	5
 11092  0DCD  0012               	moviw fsr0++
 11093  0DCE  3A2A               	xorlw	42
 11094  0DCF  1D03               	btfss	3,2
 11095  0DD0  2DD2               	goto	u8151
 11096  0DD1  2DD3               	goto	u8150
 11097  0DD2                     u8151:
 11098  0DD2  2DEC               	goto	l6491
 11099  0DD3                     u8150:
 11100  0DD3                     l6487:
 11101                           
 11102                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 766:                 ++*fmt;
 11103  0DD3  0140               	movlb	0	; select bank0
 11104  0DD4  086E               	movf	vfpfcnvrt@fmt,w
 11105  0DD5  0086               	movwf	6
 11106  0DD6  0187               	clrf	7
 11107  0DD7  3001               	movlw	1
 11108  0DD8  0781               	addwf	1,f
 11109  0DD9  3141               	addfsr 1,1
 11110  0DDA  1803               	skipnc
 11111  0DDB  0A81               	incf	1,f
 11112  0DDC                     l6489:
 11113                           
 11114                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 767:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 11115  0DDC  086F               	movf	vfpfcnvrt@ap,w
 11116  0DDD  0086               	movwf	6
 11117  0DDE  3001               	movlw	1	; select bank2/3
 11118  0DDF  0087               	movwf	7
 11119  0DE0  0801               	movf	1,w
 11120  0DE1  0084               	movwf	4
 11121  0DE2  3001               	movlw	1	; select bank2/3
 11122  0DE3  0085               	movwf	5
 11123  0DE4  3002               	movlw	2
 11124  0DE5  0781               	addwf	1,f
 11125  0DE6  3F00               	moviw [0]fsr0
 11126  0DE7  0143               	movlb	3	; select bank3
 11127  0DE8  00CC               	movwf	_prec^(0+384)
 11128  0DE9  3F01               	moviw [1]fsr0
 11129  0DEA  00CD               	movwf	(_prec+1)^(0+384)
 11130                           
 11131                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 768:             } else {
 11132  0DEB  2E34               	goto	l6501
 11133  0DEC                     l6491:
 11134                           
 11135                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 769:                 prec = a
      +                          toi(*fmt);
 11136  0DEC  0140               	movlb	0	; select bank0
 11137  0DED  086E               	movf	vfpfcnvrt@fmt,w
 11138  0DEE  0086               	movwf	6
 11139  0DEF  0187               	clrf	7
 11140  0DF0  3F40               	moviw [0]fsr1
 11141  0DF1  00F7               	movwf	atoi@s
 11142  0DF2  3F41               	moviw [1]fsr1
 11143  0DF3  00F8               	movwf	atoi@s+1
 11144  0DF4  3190  207F  318C   	fcall	_atoi
 11145  0DF7  0878               	movf	?_atoi+1,w
 11146  0DF8  0143               	movlb	3	; select bank3
 11147  0DF9  00CD               	movwf	(_prec+1)^(0+384)
 11148  0DFA  0877               	movf	?_atoi,w
 11149  0DFB  00CC               	movwf	_prec^(0+384)
 11150                           
 11151                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 770:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11152  0DFC  2E06               	goto	l6495
 11153  0DFD                     l6493:
 11154                           
 11155                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 771:                     ++*f
      +                          mt;
 11156  0DFD  0140               	movlb	0	; select bank0
 11157  0DFE  086E               	movf	vfpfcnvrt@fmt,w
 11158  0DFF  0086               	movwf	6
 11159  0E00  0187               	clrf	7
 11160  0E01  3001               	movlw	1
 11161  0E02  0781               	addwf	1,f
 11162  0E03  3141               	addfsr 1,1
 11163  0E04  1803               	skipnc
 11164  0E05  0A81               	incf	1,f
 11165  0E06                     l6495:
 11166  0E06  0140               	movlb	0	; select bank0
 11167  0E07  086E               	movf	vfpfcnvrt@fmt,w
 11168  0E08  0086               	movwf	6
 11169  0E09  0187               	clrf	7
 11170  0E0A  3F40               	moviw [0]fsr1
 11171  0E0B  0141               	movlb	1	; select bank1
 11172  0E0C  00E2               	movwf	??_vfpfcnvrt^(0+128)
 11173  0E0D  3F41               	moviw [1]fsr1
 11174  0E0E  00E3               	movwf	(??_vfpfcnvrt^(0+128)+1)
 11175  0E0F  0862               	movf	??_vfpfcnvrt^(0+128),w
 11176  0E10  0084               	movwf	4
 11177  0E11  0863               	movf	(??_vfpfcnvrt+1)^(0+128),w
 11178  0E12  0085               	movwf	5
 11179  0E13  0800               	movf	0,w	;code access
 11180  0E14  3ED0               	addlw	208
 11181  0E15  00E4               	movwf	(??_vfpfcnvrt+2)^(0+128)
 11182  0E16  30FF               	movlw	255
 11183  0E17  1803               	skipnc
 11184  0E18  3000               	movlw	0
 11185  0E19  00E5               	movwf	((??_vfpfcnvrt+2)^(0+128)+1)
 11186  0E1A  3000               	movlw	0
 11187  0E1B  0265               	subwf	(??_vfpfcnvrt+3)^(0+128),w
 11188  0E1C  300A               	movlw	10
 11189  0E1D  1903               	skipnz
 11190  0E1E  0264               	subwf	(??_vfpfcnvrt+2)^(0+128),w
 11191  0E1F  1C03               	skipc
 11192  0E20  2E22               	goto	u8161
 11193  0E21  2E24               	goto	u8160
 11194  0E22                     u8161:
 11195  0E22  3001               	movlw	1
 11196  0E23  2E25               	goto	u8170
 11197  0E24                     u8160:
 11198  0E24  3000               	movlw	0
 11199  0E25                     u8170:
 11200  0E25  00E6               	movwf	(??_vfpfcnvrt+4)^(0+128)
 11201  0E26  01E7               	clrf	((??_vfpfcnvrt+4)^(0+128)+1)
 11202  0E27  0866               	movf	(??_vfpfcnvrt+4)^(0+128),w
 11203  0E28  0142               	movlb	2	; select bank2
 11204  0E29  00A2               	movwf	_vfpfcnvrt$2182^(0+256)
 11205  0E2A  0141               	movlb	1	; select bank1
 11206  0E2B  0867               	movf	(??_vfpfcnvrt+5)^(0+128),w
 11207  0E2C  0142               	movlb	2	; select bank2
 11208  0E2D  00A3               	movwf	(_vfpfcnvrt$2182+1)^(0+256)
 11209  0E2E                     l6499:
 11210  0E2E  0822               	movf	_vfpfcnvrt$2182^(0+256),w
 11211  0E2F  0423               	iorwf	(_vfpfcnvrt$2182+1)^(0+256),w
 11212  0E30  1D03               	btfss	3,2
 11213  0E31  2E33               	goto	u8181
 11214  0E32  2E34               	goto	u8180
 11215  0E33                     u8181:
 11216  0E33  2DFD               	goto	l6493
 11217  0E34                     u8180:
 11218  0E34                     l6501:
 11219                           
 11220                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 779:         ct[0] = (char)to
      +                          lower((int)(*fmt)[0]);
 11221  0E34  0140               	movlb	0	; select bank0
 11222  0E35  086E               	movf	vfpfcnvrt@fmt,w
 11223  0E36  0086               	movwf	6
 11224  0E37  0187               	clrf	7
 11225  0E38  3F40               	moviw [0]fsr1
 11226  0E39  0141               	movlb	1	; select bank1
 11227  0E3A  00E2               	movwf	??_vfpfcnvrt^(0+128)
 11228  0E3B  3F41               	moviw [1]fsr1
 11229  0E3C  00E3               	movwf	(??_vfpfcnvrt^(0+128)+1)
 11230  0E3D  0862               	movf	??_vfpfcnvrt^(0+128),w
 11231  0E3E  0084               	movwf	4
 11232  0E3F  0863               	movf	(??_vfpfcnvrt+1)^(0+128),w
 11233  0E40  0085               	movwf	5
 11234  0E41  0800               	movf	0,w	;code access
 11235  0E42  00E4               	movwf	(??_vfpfcnvrt+2)^(0+128)
 11236  0E43  01E5               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
 11237  0E44  0864               	movf	(??_vfpfcnvrt+2)^(0+128),w
 11238  0E45  00F7               	movwf	tolower@c
 11239  0E46  0865               	movf	(??_vfpfcnvrt+3)^(0+128),w
 11240  0E47  00F8               	movwf	tolower@c+1
 11241  0E48  3199  2105  318C   	fcall	_tolower
 11242  0E4B  0877               	movf	?_tolower,w
 11243  0E4C  0141               	movlb	1	; select bank1
 11244  0E4D  00E6               	movwf	(??_vfpfcnvrt+4)^(0+128)
 11245  0E4E  0866               	movf	(??_vfpfcnvrt+4)^(0+128),w
 11246  0E4F  0142               	movlb	2	; select bank2
 11247  0E50  00A6               	movwf	vfpfcnvrt@ct^(0+256)
 11248  0E51                     l6503:
 11249                           
 11250                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 780:         if (ct[0]) {
 11251  0E51  0826               	movf	vfpfcnvrt@ct^(0+256),w
 11252  0E52  1903               	btfsc	3,2
 11253  0E53  2E55               	goto	u8191
 11254  0E54  2E56               	goto	u8190
 11255  0E55                     u8191:
 11256  0E55  2E9B               	goto	l6511
 11257  0E56                     u8190:
 11258  0E56                     l6505:
 11259                           
 11260                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 781:             ct[1] = (cha
      +                          r)tolower((int)(*fmt)[1]);
 11261  0E56  0140               	movlb	0	; select bank0
 11262  0E57  086E               	movf	vfpfcnvrt@fmt,w
 11263  0E58  0086               	movwf	6
 11264  0E59  0187               	clrf	7
 11265  0E5A  3F40               	moviw [0]fsr1
 11266  0E5B  0141               	movlb	1	; select bank1
 11267  0E5C  00E2               	movwf	??_vfpfcnvrt^(0+128)
 11268  0E5D  3F41               	moviw [1]fsr1
 11269  0E5E  00E3               	movwf	(??_vfpfcnvrt^(0+128)+1)
 11270  0E5F  3001               	movlw	1
 11271  0E60  0762               	addwf	??_vfpfcnvrt^(0+128),w
 11272  0E61  0084               	movwf	4
 11273  0E62  0863               	movf	(??_vfpfcnvrt^(0+128)+1),w
 11274  0E63  1803               	skipnc
 11275  0E64  0A63               	incf	(??_vfpfcnvrt^(0+128)+1),w
 11276  0E65  0085               	movwf	5
 11277  0E66  0800               	movf	0,w	;code access
 11278  0E67  00E4               	movwf	(??_vfpfcnvrt+2)^(0+128)
 11279  0E68  01E5               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
 11280  0E69  0864               	movf	(??_vfpfcnvrt+2)^(0+128),w
 11281  0E6A  00F7               	movwf	tolower@c
 11282  0E6B  0865               	movf	(??_vfpfcnvrt+3)^(0+128),w
 11283  0E6C  00F8               	movwf	tolower@c+1
 11284  0E6D  3199  2105  318C   	fcall	_tolower
 11285  0E70  0877               	movf	?_tolower,w
 11286  0E71  0141               	movlb	1	; select bank1
 11287  0E72  00E6               	movwf	(??_vfpfcnvrt+4)^(0+128)
 11288  0E73  0866               	movf	(??_vfpfcnvrt+4)^(0+128),w
 11289  0E74  0142               	movlb	2	; select bank2
 11290  0E75  00A7               	movwf	(vfpfcnvrt@ct^(0+256)+1)
 11291  0E76                     l6507:
 11292                           
 11293                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 782:             if (ct[1]) {
 11294  0E76  0827               	movf	(vfpfcnvrt@ct^(0+256)+1),w
 11295  0E77  1903               	btfsc	3,2
 11296  0E78  2E7A               	goto	u8201
 11297  0E79  2E7B               	goto	u8200
 11298  0E7A                     u8201:
 11299  0E7A  2E9B               	goto	l6511
 11300  0E7B                     u8200:
 11301  0E7B                     l6509:
 11302                           
 11303                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 783:                 ct[2] = 
      +                          (char)tolower((int)(*fmt)[2]);
 11304  0E7B  0140               	movlb	0	; select bank0
 11305  0E7C  086E               	movf	vfpfcnvrt@fmt,w
 11306  0E7D  0086               	movwf	6
 11307  0E7E  0187               	clrf	7
 11308  0E7F  3F40               	moviw [0]fsr1
 11309  0E80  0141               	movlb	1	; select bank1
 11310  0E81  00E2               	movwf	??_vfpfcnvrt^(0+128)
 11311  0E82  3F41               	moviw [1]fsr1
 11312  0E83  00E3               	movwf	(??_vfpfcnvrt^(0+128)+1)
 11313  0E84  3002               	movlw	2
 11314  0E85  0762               	addwf	??_vfpfcnvrt^(0+128),w
 11315  0E86  0084               	movwf	4
 11316  0E87  0863               	movf	(??_vfpfcnvrt^(0+128)+1),w
 11317  0E88  1803               	skipnc
 11318  0E89  0A63               	incf	(??_vfpfcnvrt^(0+128)+1),w
 11319  0E8A  0085               	movwf	5
 11320  0E8B  0800               	movf	0,w	;code access
 11321  0E8C  00E4               	movwf	(??_vfpfcnvrt+2)^(0+128)
 11322  0E8D  01E5               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
 11323  0E8E  0864               	movf	(??_vfpfcnvrt+2)^(0+128),w
 11324  0E8F  00F7               	movwf	tolower@c
 11325  0E90  0865               	movf	(??_vfpfcnvrt+3)^(0+128),w
 11326  0E91  00F8               	movwf	tolower@c+1
 11327  0E92  3199  2105  318C   	fcall	_tolower
 11328  0E95  0877               	movf	?_tolower,w
 11329  0E96  0141               	movlb	1	; select bank1
 11330  0E97  00E6               	movwf	(??_vfpfcnvrt+4)^(0+128)
 11331  0E98  0866               	movf	(??_vfpfcnvrt+4)^(0+128),w
 11332  0E99  0142               	movlb	2	; select bank2
 11333  0E9A  00A8               	movwf	(vfpfcnvrt@ct^(0+256)+2)
 11334  0E9B                     l6511:
 11335                           
 11336                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 942:         if (ct[0] == 'f'
      +                          ) {
 11337  0E9B  3066               	movlw	102
 11338  0E9C  0626               	xorwf	vfpfcnvrt@ct^(0+256),w
 11339  0E9D  1D03               	btfss	3,2
 11340  0E9E  2EA0               	goto	u8211
 11341  0E9F  2EA1               	goto	u8210
 11342  0EA0                     u8211:
 11343  0EA0  2EF2               	goto	l6523
 11344  0EA1                     u8210:
 11345  0EA1                     l6513:
 11346                           
 11347                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 944:             c = (*fmt)[0
      +                          ];
 11348  0EA1  0140               	movlb	0	; select bank0
 11349  0EA2  086E               	movf	vfpfcnvrt@fmt,w
 11350  0EA3  0086               	movwf	6
 11351  0EA4  0187               	clrf	7
 11352  0EA5  3F40               	moviw [0]fsr1
 11353  0EA6  0141               	movlb	1	; select bank1
 11354  0EA7  00E2               	movwf	??_vfpfcnvrt^(0+128)
 11355  0EA8  3F41               	moviw [1]fsr1
 11356  0EA9  00E3               	movwf	(??_vfpfcnvrt^(0+128)+1)
 11357  0EAA  0862               	movf	??_vfpfcnvrt^(0+128),w
 11358  0EAB  0084               	movwf	4
 11359  0EAC  0863               	movf	(??_vfpfcnvrt+1)^(0+128),w
 11360  0EAD  0085               	movwf	5
 11361  0EAE  0800               	movf	0,w	;code access
 11362  0EAF  00E4               	movwf	(??_vfpfcnvrt+2)^(0+128)
 11363  0EB0  0864               	movf	(??_vfpfcnvrt+2)^(0+128),w
 11364  0EB1  0142               	movlb	2	; select bank2
 11365  0EB2  00AD               	movwf	vfpfcnvrt@c^(0+256)
 11366  0EB3                     l6515:
 11367                           
 11368                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 945:             ++*fmt;
 11369  0EB3  0140               	movlb	0	; select bank0
 11370  0EB4  086E               	movf	vfpfcnvrt@fmt,w
 11371  0EB5  0086               	movwf	6
 11372  0EB6  0187               	clrf	7
 11373  0EB7  3001               	movlw	1
 11374  0EB8  0781               	addwf	1,f
 11375  0EB9  3141               	addfsr 1,1
 11376  0EBA  1803               	skipnc
 11377  0EBB  0A81               	incf	1,f
 11378  0EBC                     l6517:
 11379                           
 11380                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 946:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 11381  0EBC  086F               	movf	vfpfcnvrt@ap,w
 11382  0EBD  0086               	movwf	6
 11383  0EBE  3001               	movlw	1	; select bank2/3
 11384  0EBF  0087               	movwf	7
 11385  0EC0  0801               	movf	1,w
 11386  0EC1  0084               	movwf	4
 11387  0EC2  3001               	movlw	1	; select bank2/3
 11388  0EC3  0085               	movwf	5
 11389  0EC4  3004               	movlw	4
 11390  0EC5  0781               	addwf	1,f
 11391  0EC6  3F00               	moviw [0]fsr0
 11392  0EC7  0142               	movlb	2	; select bank2
 11393  0EC8  00A9               	movwf	vfpfcnvrt@f^(0+256)
 11394  0EC9  3F01               	moviw [1]fsr0
 11395  0ECA  00AA               	movwf	(vfpfcnvrt@f+1)^(0+256)
 11396  0ECB  3F02               	moviw [2]fsr0
 11397  0ECC  00AB               	movwf	(vfpfcnvrt@f+2)^(0+256)
 11398  0ECD  3F03               	moviw [3]fsr0
 11399  0ECE  00AC               	movwf	(vfpfcnvrt@f+3)^(0+256)
 11400  0ECF                     l6519:
 11401                           
 11402                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 948:             return efgto
      +                          a(fp, f, c);
 11403  0ECF  082C               	movf	(vfpfcnvrt@f+3)^(0+256),w
 11404  0ED0  0141               	movlb	1	; select bank1
 11405  0ED1  00A3               	movwf	(efgtoa@f+3)^(0+128)
 11406  0ED2  0142               	movlb	2	; select bank2
 11407  0ED3  082B               	movf	(vfpfcnvrt@f+2)^(0+256),w
 11408  0ED4  0141               	movlb	1	; select bank1
 11409  0ED5  00A2               	movwf	(efgtoa@f+2)^(0+128)
 11410  0ED6  0142               	movlb	2	; select bank2
 11411  0ED7  082A               	movf	(vfpfcnvrt@f+1)^(0+256),w
 11412  0ED8  0141               	movlb	1	; select bank1
 11413  0ED9  00A1               	movwf	(efgtoa@f+1)^(0+128)
 11414  0EDA  0142               	movlb	2	; select bank2
 11415  0EDB  0829               	movf	vfpfcnvrt@f^(0+256),w
 11416  0EDC  0141               	movlb	1	; select bank1
 11417  0EDD  00A0               	movwf	efgtoa@f^(0+128)
 11418  0EDE  0142               	movlb	2	; select bank2
 11419  0EDF  082D               	movf	vfpfcnvrt@c^(0+256),w
 11420  0EE0  0141               	movlb	1	; select bank1
 11421  0EE1  00E2               	movwf	??_vfpfcnvrt^(0+128)
 11422  0EE2  0862               	movf	??_vfpfcnvrt^(0+128),w
 11423  0EE3  00A4               	movwf	efgtoa@c^(0+128)
 11424  0EE4  0142               	movlb	2	; select bank2
 11425  0EE5  082E               	movf	vfpfcnvrt@fp^(0+256),w
 11426  0EE6  3180  204F  318C   	fcall	_efgtoa
 11427  0EE9  0141               	movlb	1	; select bank1
 11428  0EEA  0821               	movf	(?_efgtoa+1)^(0+128),w
 11429  0EEB  0140               	movlb	0	; select bank0
 11430  0EEC  00EF               	movwf	?_vfpfcnvrt+1
 11431  0EED  0141               	movlb	1	; select bank1
 11432  0EEE  0820               	movf	?_efgtoa^(0+128),w
 11433  0EEF  0140               	movlb	0	; select bank0
 11434  0EF0  00EE               	movwf	?_vfpfcnvrt
 11435  0EF1  2FFF               	goto	l1441
 11436  0EF2                     l6523:
 11437                           
 11438                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 950:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 11439  0EF2  3023               	movlw	low (STR_20| (0+32768))
 11440  0EF3  00F1               	movwf	strncmp@_r
 11441  0EF4  30A8               	movlw	high (STR_20| (0+32768))
 11442  0EF5  00F2               	movwf	strncmp@_r+1
 11443  0EF6  3002               	movlw	2
 11444  0EF7  00F3               	movwf	strncmp@n
 11445  0EF8  3000               	movlw	0
 11446  0EF9  00F4               	movwf	strncmp@n+1
 11447  0EFA  3026               	movlw	(low (vfpfcnvrt@ct| (0+256)))& (0+255)
 11448  0EFB  3187  27A4  318C   	fcall	_strncmp
 11449  0EFE  0871               	movf	?_strncmp,w
 11450  0EFF  0472               	iorwf	?_strncmp+1,w
 11451  0F00  1D03               	btfss	3,2
 11452  0F01  2F03               	goto	u8221
 11453  0F02  2F04               	goto	u8220
 11454  0F03                     u8221:
 11455  0F03  2F9D               	goto	l6541
 11456  0F04                     u8220:
 11457  0F04                     l6525:
 11458                           
 11459                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 953:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 11460  0F04  0140               	movlb	0	; select bank0
 11461  0F05  086E               	movf	vfpfcnvrt@fmt,w
 11462  0F06  0086               	movwf	6
 11463  0F07  0187               	clrf	7
 11464  0F08  3F40               	moviw [0]fsr1
 11465  0F09  0141               	movlb	1	; select bank1
 11466  0F0A  00E2               	movwf	??_vfpfcnvrt^(0+128)
 11467  0F0B  3F41               	moviw [1]fsr1
 11468  0F0C  00E3               	movwf	(??_vfpfcnvrt^(0+128)+1)
 11469  0F0D  3001               	movlw	1
 11470  0F0E  0762               	addwf	??_vfpfcnvrt^(0+128),w
 11471  0F0F  0084               	movwf	4
 11472  0F10  0863               	movf	(??_vfpfcnvrt^(0+128)+1),w
 11473  0F11  1803               	skipnc
 11474  0F12  0A63               	incf	(??_vfpfcnvrt^(0+128)+1),w
 11475  0F13  0085               	movwf	5
 11476  0F14  0800               	movf	0,w	;code access
 11477  0F15  00E4               	movwf	(??_vfpfcnvrt+2)^(0+128)
 11478  0F16  0864               	movf	(??_vfpfcnvrt+2)^(0+128),w
 11479  0F17  0142               	movlb	2	; select bank2
 11480  0F18  00AD               	movwf	vfpfcnvrt@c^(0+256)
 11481  0F19  0140               	movlb	0	; select bank0
 11482  0F1A  086E               	movf	vfpfcnvrt@fmt,w
 11483  0F1B  0086               	movwf	6
 11484  0F1C  0187               	clrf	7
 11485  0F1D  3F40               	moviw [0]fsr1
 11486  0F1E  0141               	movlb	1	; select bank1
 11487  0F1F  00E2               	movwf	??_vfpfcnvrt^(0+128)
 11488  0F20  3F41               	moviw [1]fsr1
 11489  0F21  00E3               	movwf	(??_vfpfcnvrt^(0+128)+1)
 11490  0F22  0862               	movf	??_vfpfcnvrt^(0+128),w
 11491  0F23  0084               	movwf	4
 11492  0F24  0863               	movf	(??_vfpfcnvrt+1)^(0+128),w
 11493  0F25  0085               	movwf	5
 11494  0F26  0800               	movf	0,w	;code access
 11495  0F27  3EBF               	addlw	191
 11496  0F28  00E4               	movwf	(??_vfpfcnvrt+2)^(0+128)
 11497  0F29  30FF               	movlw	255
 11498  0F2A  1803               	skipnc
 11499  0F2B  3000               	movlw	0
 11500  0F2C  00E5               	movwf	((??_vfpfcnvrt+2)^(0+128)+1)
 11501  0F2D  3000               	movlw	0
 11502  0F2E  0265               	subwf	(??_vfpfcnvrt+3)^(0+128),w
 11503  0F2F  301A               	movlw	26
 11504  0F30  1903               	skipnz
 11505  0F31  0264               	subwf	(??_vfpfcnvrt+2)^(0+128),w
 11506  0F32  1C03               	skipc
 11507  0F33  2F35               	goto	u8231
 11508  0F34  2F37               	goto	u8230
 11509  0F35                     u8231:
 11510  0F35  3001               	movlw	1
 11511  0F36  2F38               	goto	u8240
 11512  0F37                     u8230:
 11513  0F37  3000               	movlw	0
 11514  0F38                     u8240:
 11515  0F38  00E6               	movwf	(??_vfpfcnvrt+4)^(0+128)
 11516  0F39  01E7               	clrf	((??_vfpfcnvrt+4)^(0+128)+1)
 11517  0F3A  0866               	movf	(??_vfpfcnvrt+4)^(0+128),w
 11518  0F3B  0142               	movlb	2	; select bank2
 11519  0F3C  00A4               	movwf	_vfpfcnvrt$2186^(0+256)
 11520  0F3D  0141               	movlb	1	; select bank1
 11521  0F3E  0867               	movf	(??_vfpfcnvrt+5)^(0+128),w
 11522  0F3F  0142               	movlb	2	; select bank2
 11523  0F40  00A5               	movwf	(_vfpfcnvrt$2186+1)^(0+256)
 11524  0F41                     l6529:
 11525  0F41  0824               	movf	_vfpfcnvrt$2186^(0+256),w
 11526  0F42  0425               	iorwf	(_vfpfcnvrt$2186+1)^(0+256),w
 11527  0F43  1903               	btfsc	3,2
 11528  0F44  2F46               	goto	u8251
 11529  0F45  2F47               	goto	u8250
 11530  0F46                     u8251:
 11531  0F46  2F5C               	goto	l6533
 11532  0F47                     u8250:
 11533  0F47                     l6531:
 11534                           
 11535                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 954:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 11536  0F47  0140               	movlb	0	; select bank0
 11537  0F48  086F               	movf	vfpfcnvrt@ap,w
 11538  0F49  0086               	movwf	6
 11539  0F4A  3001               	movlw	1	; select bank2/3
 11540  0F4B  0087               	movwf	7
 11541  0F4C  0801               	movf	1,w
 11542  0F4D  0084               	movwf	4
 11543  0F4E  3001               	movlw	1	; select bank2/3
 11544  0F4F  0085               	movwf	5
 11545  0F50  3004               	movlw	4
 11546  0F51  0781               	addwf	1,f
 11547  0F52  3F00               	moviw [0]fsr0
 11548  0F53  0142               	movlb	2	; select bank2
 11549  0F54  00A9               	movwf	vfpfcnvrt@f^(0+256)
 11550  0F55  3F01               	moviw [1]fsr0
 11551  0F56  00AA               	movwf	(vfpfcnvrt@f+1)^(0+256)
 11552  0F57  3F02               	moviw [2]fsr0
 11553  0F58  00AB               	movwf	(vfpfcnvrt@f+2)^(0+256)
 11554  0F59  3F03               	moviw [3]fsr0
 11555  0F5A  00AC               	movwf	(vfpfcnvrt@f+3)^(0+256)
 11556                           
 11557                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 955:             } else {
 11558  0F5B  2F70               	goto	l6535
 11559  0F5C                     l6533:
 11560                           
 11561                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 956:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 11562  0F5C  0140               	movlb	0	; select bank0
 11563  0F5D  086F               	movf	vfpfcnvrt@ap,w
 11564  0F5E  0086               	movwf	6
 11565  0F5F  3001               	movlw	1	; select bank2/3
 11566  0F60  0087               	movwf	7
 11567  0F61  0801               	movf	1,w
 11568  0F62  0084               	movwf	4
 11569  0F63  3001               	movlw	1	; select bank2/3
 11570  0F64  0085               	movwf	5
 11571  0F65  3004               	movlw	4
 11572  0F66  0781               	addwf	1,f
 11573  0F67  3F00               	moviw [0]fsr0
 11574  0F68  0142               	movlb	2	; select bank2
 11575  0F69  00A9               	movwf	vfpfcnvrt@f^(0+256)
 11576  0F6A  3F01               	moviw [1]fsr0
 11577  0F6B  00AA               	movwf	(vfpfcnvrt@f+1)^(0+256)
 11578  0F6C  3F02               	moviw [2]fsr0
 11579  0F6D  00AB               	movwf	(vfpfcnvrt@f+2)^(0+256)
 11580  0F6E  3F03               	moviw [3]fsr0
 11581  0F6F  00AC               	movwf	(vfpfcnvrt@f+3)^(0+256)
 11582  0F70                     l6535:
 11583                           
 11584                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 958:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 11585  0F70  0140               	movlb	0	; select bank0
 11586  0F71  086E               	movf	vfpfcnvrt@fmt,w
 11587  0F72  0086               	movwf	6
 11588  0F73  0187               	clrf	7
 11589  0F74  3002               	movlw	2
 11590  0F75  0781               	addwf	1,f
 11591  0F76  3141               	addfsr 1,1
 11592  0F77  1803               	skipnc
 11593  0F78  0A81               	incf	1,f
 11594  0F79                     l6537:
 11595                           
 11596                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 960:             return efgto
      +                          a(fp, f, c);
 11597  0F79  0142               	movlb	2	; select bank2
 11598  0F7A  082C               	movf	(vfpfcnvrt@f+3)^(0+256),w
 11599  0F7B  0141               	movlb	1	; select bank1
 11600  0F7C  00A3               	movwf	(efgtoa@f+3)^(0+128)
 11601  0F7D  0142               	movlb	2	; select bank2
 11602  0F7E  082B               	movf	(vfpfcnvrt@f+2)^(0+256),w
 11603  0F7F  0141               	movlb	1	; select bank1
 11604  0F80  00A2               	movwf	(efgtoa@f+2)^(0+128)
 11605  0F81  0142               	movlb	2	; select bank2
 11606  0F82  082A               	movf	(vfpfcnvrt@f+1)^(0+256),w
 11607  0F83  0141               	movlb	1	; select bank1
 11608  0F84  00A1               	movwf	(efgtoa@f+1)^(0+128)
 11609  0F85  0142               	movlb	2	; select bank2
 11610  0F86  0829               	movf	vfpfcnvrt@f^(0+256),w
 11611  0F87  0141               	movlb	1	; select bank1
 11612  0F88  00A0               	movwf	efgtoa@f^(0+128)
 11613  0F89  0142               	movlb	2	; select bank2
 11614  0F8A  082D               	movf	vfpfcnvrt@c^(0+256),w
 11615  0F8B  0141               	movlb	1	; select bank1
 11616  0F8C  00E2               	movwf	??_vfpfcnvrt^(0+128)
 11617  0F8D  0862               	movf	??_vfpfcnvrt^(0+128),w
 11618  0F8E  00A4               	movwf	efgtoa@c^(0+128)
 11619  0F8F  0142               	movlb	2	; select bank2
 11620  0F90  082E               	movf	vfpfcnvrt@fp^(0+256),w
 11621  0F91  3180  204F  318C   	fcall	_efgtoa
 11622  0F94  0141               	movlb	1	; select bank1
 11623  0F95  0821               	movf	(?_efgtoa+1)^(0+128),w
 11624  0F96  0140               	movlb	0	; select bank0
 11625  0F97  00EF               	movwf	?_vfpfcnvrt+1
 11626  0F98  0141               	movlb	1	; select bank1
 11627  0F99  0820               	movf	?_efgtoa^(0+128),w
 11628  0F9A  0140               	movlb	0	; select bank0
 11629  0F9B  00EE               	movwf	?_vfpfcnvrt
 11630  0F9C  2FFF               	goto	l1441
 11631  0F9D                     l6541:
 11632                           
 11633                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1372:         if ((*fmt)[0] =
      +                          = '%') {
 11634  0F9D  0140               	movlb	0	; select bank0
 11635  0F9E  086E               	movf	vfpfcnvrt@fmt,w
 11636  0F9F  0086               	movwf	6
 11637  0FA0  0187               	clrf	7
 11638  0FA1  3F40               	moviw [0]fsr1
 11639  0FA2  0141               	movlb	1	; select bank1
 11640  0FA3  00E2               	movwf	??_vfpfcnvrt^(0+128)
 11641  0FA4  3F41               	moviw [1]fsr1
 11642  0FA5  00E3               	movwf	(??_vfpfcnvrt^(0+128)+1)
 11643  0FA6  0862               	movf	??_vfpfcnvrt^(0+128),w
 11644  0FA7  0084               	movwf	4
 11645  0FA8  0863               	movf	(??_vfpfcnvrt+1)^(0+128),w
 11646  0FA9  0085               	movwf	5
 11647  0FAA  0012               	moviw fsr0++
 11648  0FAB  3A25               	xorlw	37
 11649  0FAC  1D03               	btfss	3,2
 11650  0FAD  2FAF               	goto	u8261
 11651  0FAE  2FB0               	goto	u8260
 11652  0FAF                     u8261:
 11653  0FAF  2FCC               	goto	l6551
 11654  0FB0                     u8260:
 11655  0FB0                     l6543:
 11656                           
 11657                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1373:             ++*fmt;
 11658  0FB0  0140               	movlb	0	; select bank0
 11659  0FB1  086E               	movf	vfpfcnvrt@fmt,w
 11660  0FB2  0086               	movwf	6
 11661  0FB3  0187               	clrf	7
 11662  0FB4  3001               	movlw	1
 11663  0FB5  0781               	addwf	1,f
 11664  0FB6  3141               	addfsr 1,1
 11665  0FB7  1803               	skipnc
 11666  0FB8  0A81               	incf	1,f
 11667  0FB9                     l6545:
 11668                           
 11669                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1374:             fputc((int)
      +                          '%', fp);
 11670  0FB9  3025               	movlw	37
 11671  0FBA  00F1               	movwf	fputc@c
 11672  0FBB  3000               	movlw	0
 11673  0FBC  00F2               	movwf	fputc@c+1
 11674  0FBD  0142               	movlb	2	; select bank2
 11675  0FBE  082E               	movf	vfpfcnvrt@fp^(0+256),w
 11676  0FBF  0141               	movlb	1	; select bank1
 11677  0FC0  00E2               	movwf	??_vfpfcnvrt^(0+128)
 11678  0FC1  0862               	movf	??_vfpfcnvrt^(0+128),w
 11679  0FC2  00F3               	movwf	fputc@fp
 11680  0FC3  319C  24CF  318C   	fcall	_fputc
 11681  0FC6                     l6547:
 11682                           
 11683                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1375:             return 1;
 11684  0FC6  3001               	movlw	1
 11685  0FC7  0140               	movlb	0	; select bank0
 11686  0FC8  00EE               	movwf	?_vfpfcnvrt
 11687  0FC9  3000               	movlw	0
 11688  0FCA  00EF               	movwf	?_vfpfcnvrt+1
 11689  0FCB  2FFF               	goto	l1441
 11690  0FCC                     l6551:
 11691                           
 11692                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt;
 11693  0FCC  0140               	movlb	0	; select bank0
 11694  0FCD  086E               	movf	vfpfcnvrt@fmt,w
 11695  0FCE  0086               	movwf	6
 11696  0FCF  0187               	clrf	7
 11697  0FD0  3001               	movlw	1
 11698  0FD1  0781               	addwf	1,f
 11699  0FD2  3141               	addfsr 1,1
 11700  0FD3  1803               	skipnc
 11701  0FD4  0A81               	incf	1,f
 11702  0FD5                     l6553:
 11703                           
 11704                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1380:         return 0;
 11705  0FD5  01EE               	clrf	?_vfpfcnvrt
 11706  0FD6  01EF               	clrf	?_vfpfcnvrt+1
 11707  0FD7  2FFF               	goto	l1441
 11708  0FD8                     l6557:
 11709                           
 11710                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1384:     fputc((int)(*fmt)[0
      +                          ], fp);
 11711  0FD8  0140               	movlb	0	; select bank0
 11712  0FD9  086E               	movf	vfpfcnvrt@fmt,w
 11713  0FDA  0086               	movwf	6
 11714  0FDB  0187               	clrf	7
 11715  0FDC  3F40               	moviw [0]fsr1
 11716  0FDD  0141               	movlb	1	; select bank1
 11717  0FDE  00E2               	movwf	??_vfpfcnvrt^(0+128)
 11718  0FDF  3F41               	moviw [1]fsr1
 11719  0FE0  00E3               	movwf	(??_vfpfcnvrt^(0+128)+1)
 11720  0FE1  0862               	movf	??_vfpfcnvrt^(0+128),w
 11721  0FE2  0084               	movwf	4
 11722  0FE3  0863               	movf	(??_vfpfcnvrt+1)^(0+128),w
 11723  0FE4  0085               	movwf	5
 11724  0FE5  0800               	movf	0,w	;code access
 11725  0FE6  00E4               	movwf	(??_vfpfcnvrt+2)^(0+128)
 11726  0FE7  01E5               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
 11727  0FE8  0864               	movf	(??_vfpfcnvrt+2)^(0+128),w
 11728  0FE9  00F1               	movwf	fputc@c
 11729  0FEA  0865               	movf	(??_vfpfcnvrt+3)^(0+128),w
 11730  0FEB  00F2               	movwf	fputc@c+1
 11731  0FEC  0142               	movlb	2	; select bank2
 11732  0FED  082E               	movf	vfpfcnvrt@fp^(0+256),w
 11733  0FEE  0141               	movlb	1	; select bank1
 11734  0FEF  00E6               	movwf	(??_vfpfcnvrt+4)^(0+128)
 11735  0FF0  0866               	movf	(??_vfpfcnvrt+4)^(0+128),w
 11736  0FF1  00F3               	movwf	fputc@fp
 11737  0FF2  319C  24CF  318C   	fcall	_fputc
 11738  0FF5                     l6559:
 11739                           
 11740                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
 11741  0FF5  0140               	movlb	0	; select bank0
 11742  0FF6  086E               	movf	vfpfcnvrt@fmt,w
 11743  0FF7  0086               	movwf	6
 11744  0FF8  0187               	clrf	7
 11745  0FF9  3001               	movlw	1
 11746  0FFA  0781               	addwf	1,f
 11747  0FFB  3141               	addfsr 1,1
 11748  0FFC  1803               	skipnc
 11749  0FFD  0A81               	incf	1,f
 11750  0FFE  2FC6               	goto	l6547
 11751  0FFF                     l1441:
 11752  0FFF  0008               	return
 11753  1000                     __end_of_vfpfcnvrt:
 11754                           
 11755                           	psect	text16
 11756  07A4                     __ptext16:	
 11757 ;; *************** function _strncmp *****************
 11758 ;; Defined at:
 11759 ;;		line 3 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/strncmp.c"
 11760 ;; Parameters:    Size  Location     Type
 11761 ;;  _l              1    wreg     PTR const unsigned char 
 11762 ;;		 -> vfpfcnvrt@ct(3), 
 11763 ;;  _r              2    1[COMMON] PTR const unsigned char 
 11764 ;;		 -> STR_22(3), 
 11765 ;;  n               2    3[COMMON] unsigned int 
 11766 ;; Auto vars:     Size  Location     Type
 11767 ;;  _l              1    6[COMMON] PTR const unsigned char 
 11768 ;;		 -> vfpfcnvrt@ct(3), 
 11769 ;;  r               2    7[COMMON] PTR const unsigned char 
 11770 ;;		 -> STR_22(3), 
 11771 ;;  l               1    9[COMMON] PTR const unsigned char 
 11772 ;;		 -> vfpfcnvrt@ct(3), 
 11773 ;; Return value:  Size  Location     Type
 11774 ;;                  2    1[COMMON] int 
 11775 ;; Registers used:
 11776 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 11777 ;; Tracked objects:
 11778 ;;		On entry : 0/0
 11779 ;;		On exit  : 0/0
 11780 ;;		Unchanged: 0/0
 11781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11782 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11783 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11784 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11785 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11786 ;;Total ram usage:        9 bytes
 11787 ;; Hardware stack levels used:    1
 11788 ;; Hardware stack levels required when called:    4
 11789 ;; This function calls:
 11790 ;;		Nothing
 11791 ;; This function is called by:
 11792 ;;		_vfpfcnvrt
 11793 ;; This function uses a non-reentrant model
 11794 ;;
 11795                           
 11796                           
 11797                           ;psect for function _strncmp
 11798  07A4                     _strncmp:
 11799                           
 11800                           ;incstack = 0
 11801                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
 11802                           ;strncmp@_l stored from wreg
 11803  07A4  00F6               	movwf	strncmp@_l
 11804  07A5                     l4915:
 11805  07A5  0876               	movf	strncmp@_l,w
 11806  07A6  00F5               	movwf	??_strncmp
 11807  07A7  0875               	movf	??_strncmp,w
 11808  07A8  00F9               	movwf	strncmp@l
 11809  07A9  0872               	movf	strncmp@_r+1,w
 11810  07AA  00F8               	movwf	strncmp@r+1
 11811  07AB  0871               	movf	strncmp@_r,w
 11812  07AC  00F7               	movwf	strncmp@r
 11813  07AD                     l4917:
 11814  07AD  3001               	movlw	1
 11815  07AE  02F3               	subwf	strncmp@n,f
 11816  07AF  3000               	movlw	0
 11817  07B0  3BF4               	subwfb	strncmp@n+1,f
 11818  07B1  0A73               	incf	strncmp@n,w
 11819  07B2  1D03               	skipz
 11820  07B3  2FB8               	goto	u5891
 11821  07B4  0A74               	incf	strncmp@n+1,w
 11822  07B5  1D03               	btfss	3,2
 11823  07B6  2FB8               	goto	u5891
 11824  07B7  2FB9               	goto	u5890
 11825  07B8                     u5891:
 11826  07B8  2FC8               	goto	l4929
 11827  07B9                     u5890:
 11828  07B9                     l4919:
 11829  07B9  01F1               	clrf	?_strncmp
 11830  07BA  01F2               	clrf	?_strncmp+1
 11831  07BB  2FFE               	goto	l1569
 11832  07BC                     l4923:
 11833  07BC  3001               	movlw	1
 11834  07BD  00F5               	movwf	??_strncmp
 11835  07BE  0875               	movf	??_strncmp,w
 11836  07BF  07F9               	addwf	strncmp@l,f
 11837  07C0                     l4925:
 11838  07C0  3001               	movlw	1
 11839  07C1  07F7               	addwf	strncmp@r,f
 11840  07C2  3000               	movlw	0
 11841  07C3  3DF8               	addwfc	strncmp@r+1,f
 11842  07C4                     l4927:
 11843  07C4  3001               	movlw	1
 11844  07C5  02F3               	subwf	strncmp@n,f
 11845  07C6  3000               	movlw	0
 11846  07C7  3BF4               	subwfb	strncmp@n+1,f
 11847  07C8                     l4929:
 11848  07C8  0879               	movf	strncmp@l,w
 11849  07C9  0086               	movwf	6
 11850  07CA  3001               	movlw	1	; select bank2/3
 11851  07CB  0087               	movwf	7
 11852  07CC  0801               	movf	1,w
 11853  07CD  1903               	btfsc	3,2
 11854  07CE  2FD0               	goto	u5901
 11855  07CF  2FD1               	goto	u5900
 11856  07D0                     u5901:
 11857  07D0  2FF0               	goto	l4937
 11858  07D1                     u5900:
 11859  07D1                     l4931:
 11860  07D1  0877               	movf	strncmp@r,w
 11861  07D2  0084               	movwf	4
 11862  07D3  0878               	movf	strncmp@r+1,w
 11863  07D4  0085               	movwf	5
 11864  07D5  0012               	moviw fsr0++
 11865  07D6  1903               	btfsc	3,2
 11866  07D7  2FD9               	goto	u5911
 11867  07D8  2FDA               	goto	u5910
 11868  07D9                     u5911:
 11869  07D9  2FF0               	goto	l4937
 11870  07DA                     u5910:
 11871  07DA                     l4933:
 11872  07DA  0873               	movf	strncmp@n,w
 11873  07DB  0474               	iorwf	strncmp@n+1,w
 11874  07DC  1903               	btfsc	3,2
 11875  07DD  2FDF               	goto	u5921
 11876  07DE  2FE0               	goto	u5920
 11877  07DF                     u5921:
 11878  07DF  2FF0               	goto	l4937
 11879  07E0                     u5920:
 11880  07E0                     l4935:
 11881  07E0  0877               	movf	strncmp@r,w
 11882  07E1  0084               	movwf	4
 11883  07E2  0878               	movf	strncmp@r+1,w
 11884  07E3  0085               	movwf	5
 11885  07E4  0800               	movf	0,w	;code access
 11886  07E5  00F5               	movwf	??_strncmp
 11887  07E6  0879               	movf	strncmp@l,w
 11888  07E7  0086               	movwf	6
 11889  07E8  3001               	movlw	1	; select bank2/3
 11890  07E9  0087               	movwf	7
 11891  07EA  0801               	movf	1,w
 11892  07EB  0675               	xorwf	??_strncmp,w
 11893  07EC  1903               	skipnz
 11894  07ED  2FEF               	goto	u5931
 11895  07EE  2FF0               	goto	u5930
 11896  07EF                     u5931:
 11897  07EF  2FBC               	goto	l4923
 11898  07F0                     u5930:
 11899  07F0                     l4937:
 11900  07F0  0879               	movf	strncmp@l,w
 11901  07F1  0086               	movwf	6
 11902  07F2  3001               	movlw	1	; select bank2/3
 11903  07F3  0087               	movwf	7
 11904  07F4  0877               	movf	strncmp@r,w
 11905  07F5  0084               	movwf	4
 11906  07F6  0878               	movf	strncmp@r+1,w
 11907  07F7  0085               	movwf	5
 11908  07F8  0800               	movf	0,w	;code access
 11909  07F9  0201               	subwf	1,w
 11910  07FA  00F1               	movwf	?_strncmp
 11911  07FB  01F2               	clrf	?_strncmp+1
 11912  07FC  1C03               	skipc
 11913  07FD  03F2               	decf	?_strncmp+1,f
 11914  07FE                     l1569:
 11915  07FE  0008               	return
 11916  07FF                     __end_of_strncmp:
 11917                           
 11918                           	psect	text17
 11919  004F                     __ptext17:	
 11920 ;; *************** function _efgtoa *****************
 11921 ;; Defined at:
 11922 ;;		line 332 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
 11923 ;; Parameters:    Size  Location     Type
 11924 ;;  fp              1    wreg     PTR struct _IO_FILE
 11925 ;;		 -> sprintf@f(5), 
 11926 ;;  f               4    0[BANK1 ] PTR struct _IO_FILE
 11927 ;;  c               1    4[BANK1 ] unsigned char 
 11928 ;; Auto vars:     Size  Location     Type
 11929 ;;  fp              1   35[BANK1 ] PTR struct _IO_FILE
 11930 ;;		 -> sprintf@f(5), 
 11931 ;;  u               4   62[BANK1 ] PTR struct _IO_FILE
 11932 ;;  g               4   54[BANK1 ] PTR struct _IO_FILE
 11933 ;;  l               4   48[BANK1 ] PTR struct _IO_FILE
 11934 ;;  h               4   44[BANK1 ] PTR struct _IO_FILE
 11935 ;;  ou              4   29[BANK1 ] PTR struct _IO_FILE
 11936 ;;  n               2   60[BANK1 ] int 
 11937 ;;  e               2   58[BANK1 ] int 
 11938 ;;  i               2   52[BANK1 ] int 
 11939 ;;  w               2   40[BANK1 ] int 
 11940 ;;  p               2   38[BANK1 ] int 
 11941 ;;  sign            2   36[BANK1 ] int 
 11942 ;;  d               2   33[BANK1 ] int 
 11943 ;;  m               2   27[BANK1 ] int 
 11944 ;;  ne              2   25[BANK1 ] int 
 11945 ;;  pp              2   23[BANK1 ] int 
 11946 ;;  t               2   21[BANK1 ] int 
 11947 ;;  mode            1   43[BANK1 ] unsigned char 
 11948 ;;  nmode           1   42[BANK1 ] unsigned char 
 11949 ;; Return value:  Size  Location     Type
 11950 ;;                  2    0[BANK1 ] int 
 11951 ;; Registers used:
 11952 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11953 ;; Tracked objects:
 11954 ;;		On entry : 0/0
 11955 ;;		On exit  : 0/0
 11956 ;;		Unchanged: 0/0
 11957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11958 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11959 ;;      Locals:         0       0      57       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11960 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11961 ;;      Totals:         0       0      66       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11962 ;;Total ram usage:       66 bytes
 11963 ;; Hardware stack levels used:    1
 11964 ;; Hardware stack levels required when called:    8
 11965 ;; This function calls:
 11966 ;;		___awdiv
 11967 ;;		___awmod
 11968 ;;		___fladd
 11969 ;;		___fldiv
 11970 ;;		___fleq
 11971 ;;		___flge
 11972 ;;		___flmul
 11973 ;;		___flneg
 11974 ;;		___flsub
 11975 ;;		___fltol
 11976 ;;		___fpclassifyf
 11977 ;;		_floorf
 11978 ;;		_isupper
 11979 ;;		_pad
 11980 ;;		_strcpy
 11981 ;;		_tolower
 11982 ;; This function is called by:
 11983 ;;		_vfpfcnvrt
 11984 ;; This function uses a non-reentrant model
 11985 ;;
 11986                           
 11987                           
 11988                           ;psect for function _efgtoa
 11989  004F                     _efgtoa:
 11990                           
 11991                           ;incstack = 0
 11992                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11993                           ;efgtoa@fp stored from wreg
 11994  004F  0141               	movlb	1	; select bank1
 11995  0050  00C3               	movwf	efgtoa@fp^(0+128)
 11996  0051                     l6103:
 11997                           
 11998                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 332: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 333
      +                          : {;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 334:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 335:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 336:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 3
      +                          39:     sign = 0;
 11999  0051  01C4               	clrf	efgtoa@sign^(0+128)
 12000  0052  01C5               	clrf	(efgtoa@sign+1)^(0+128)
 12001  0053                     l6105:
 12002                           
 12003                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 340:     g = f;
 12004  0053  0823               	movf	(efgtoa@f+3)^(0+128),w
 12005  0054  00D9               	movwf	(efgtoa@g+3)^(0+128)
 12006  0055  0822               	movf	(efgtoa@f+2)^(0+128),w
 12007  0056  00D8               	movwf	(efgtoa@g+2)^(0+128)
 12008  0057  0821               	movf	(efgtoa@f+1)^(0+128),w
 12009  0058  00D7               	movwf	(efgtoa@g+1)^(0+128)
 12010  0059  0820               	movf	efgtoa@f^(0+128),w
 12011  005A  00D6               	movwf	efgtoa@g^(0+128)
 12012  005B                     l6107:
 12013                           
 12014                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 341:     if (g < 0.0) {
 12015  005B  0859               	movf	(efgtoa@g+3)^(0+128),w
 12016  005C  0140               	movlb	0	; select bank0
 12017  005D  00C3               	movwf	___flge@ff1+3
 12018  005E  0141               	movlb	1	; select bank1
 12019  005F  0858               	movf	(efgtoa@g+2)^(0+128),w
 12020  0060  0140               	movlb	0	; select bank0
 12021  0061  00C2               	movwf	___flge@ff1+2
 12022  0062  0141               	movlb	1	; select bank1
 12023  0063  0857               	movf	(efgtoa@g+1)^(0+128),w
 12024  0064  0140               	movlb	0	; select bank0
 12025  0065  00C1               	movwf	___flge@ff1+1
 12026  0066  0141               	movlb	1	; select bank1
 12027  0067  0856               	movf	efgtoa@g^(0+128),w
 12028  0068  0140               	movlb	0	; select bank0
 12029  0069  00C0               	movwf	___flge@ff1
 12030  006A  3000               	movlw	0
 12031  006B  00C7               	movwf	___flge@ff2+3
 12032  006C  3000               	movlw	0
 12033  006D  00C6               	movwf	___flge@ff2+2
 12034  006E  3000               	movlw	0
 12035  006F  00C5               	movwf	___flge@ff2+1
 12036  0070  3000               	movlw	0
 12037  0071  00C4               	movwf	___flge@ff2
 12038  0072  319E  26C8  3180   	fcall	___flge
 12039  0075  1803               	btfsc	3,0
 12040  0076  2878               	goto	u7471
 12041  0077  2879               	goto	u7470
 12042  0078                     u7471:
 12043  0078  2892               	goto	l6113
 12044  0079                     u7470:
 12045  0079                     l6109:
 12046                           
 12047                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 342:         sign = 1;
 12048  0079  3001               	movlw	1
 12049  007A  0141               	movlb	1	; select bank1
 12050  007B  00C4               	movwf	efgtoa@sign^(0+128)
 12051  007C  3000               	movlw	0
 12052  007D  00C5               	movwf	(efgtoa@sign^(0+128)+1)
 12053  007E                     l6111:
 12054                           
 12055                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 343:         g = -g;
 12056  007E  0859               	movf	(efgtoa@g+3)^(0+128),w
 12057  007F  00F4               	movwf	___flneg@f1+3
 12058  0080  0858               	movf	(efgtoa@g+2)^(0+128),w
 12059  0081  00F3               	movwf	___flneg@f1+2
 12060  0082  0857               	movf	(efgtoa@g+1)^(0+128),w
 12061  0083  00F2               	movwf	___flneg@f1+1
 12062  0084  0856               	movf	efgtoa@g^(0+128),w
 12063  0085  00F1               	movwf	___flneg@f1
 12064  0086  31A7  2752  3180   	fcall	___flneg
 12065  0089  0874               	movf	?___flneg+3,w
 12066  008A  0141               	movlb	1	; select bank1
 12067  008B  00D9               	movwf	(efgtoa@g+3)^(0+128)
 12068  008C  0873               	movf	?___flneg+2,w
 12069  008D  00D8               	movwf	(efgtoa@g+2)^(0+128)
 12070  008E  0872               	movf	?___flneg+1,w
 12071  008F  00D7               	movwf	(efgtoa@g+1)^(0+128)
 12072  0090  0871               	movf	?___flneg,w
 12073  0091  00D6               	movwf	efgtoa@g^(0+128)
 12074  0092                     l6113:
 12075                           
 12076                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 347:     n = 0;
 12077  0092  0141               	movlb	1	; select bank1
 12078  0093  01DC               	clrf	efgtoa@n^(0+128)
 12079  0094  01DD               	clrf	(efgtoa@n+1)^(0+128)
 12080  0095                     l6115:
 12081                           
 12082                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 348:     w = width;
 12083  0095  0143               	movlb	3	; select bank3
 12084  0096  084B               	movf	(_width+1)^(0+384),w
 12085  0097  0141               	movlb	1	; select bank1
 12086  0098  00C9               	movwf	(efgtoa@w+1)^(0+128)
 12087  0099  0143               	movlb	3	; select bank3
 12088  009A  084A               	movf	_width^(0+384),w
 12089  009B  0141               	movlb	1	; select bank1
 12090  009C  00C8               	movwf	efgtoa@w^(0+128)
 12091  009D                     l6117:
 12092                           
 12093                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 349:     if (sign || (flags &
      +                           (1 << 2))) {
 12094  009D  0844               	movf	efgtoa@sign^(0+128),w
 12095  009E  0445               	iorwf	(efgtoa@sign+1)^(0+128),w
 12096  009F  1D03               	btfss	3,2
 12097  00A0  28A2               	goto	u7481
 12098  00A1  28A3               	goto	u7480
 12099  00A2                     u7481:
 12100  00A2  28A8               	goto	l6121
 12101  00A3                     u7480:
 12102  00A3                     l6119:
 12103  00A3  0143               	movlb	3	; select bank3
 12104  00A4  1D4E               	btfss	_flags^(0+384),2
 12105  00A5  28A7               	goto	u7491
 12106  00A6  28A8               	goto	u7490
 12107  00A7                     u7491:
 12108  00A7  28C6               	goto	l6133
 12109  00A8                     u7490:
 12110  00A8                     l6121:
 12111                           
 12112                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 350:         dbuf[n] = sign ?
      +                           '-' : '+';
 12113  00A8  0141               	movlb	1	; select bank1
 12114  00A9  0844               	movf	efgtoa@sign^(0+128),w
 12115  00AA  0445               	iorwf	(efgtoa@sign+1)^(0+128),w
 12116  00AB  1D03               	btfss	3,2
 12117  00AC  28AE               	goto	u7501
 12118  00AD  28AF               	goto	u7500
 12119  00AE                     u7501:
 12120  00AE  28B4               	goto	l6125
 12121  00AF                     u7500:
 12122  00AF                     l6123:
 12123  00AF  302B               	movlw	43
 12124  00B0  00A9               	movwf	_efgtoa$2155^(0+128)
 12125  00B1  3000               	movlw	0
 12126  00B2  00AA               	movwf	(_efgtoa$2155^(0+128)+1)
 12127  00B3  28B8               	goto	l6127
 12128  00B4                     l6125:
 12129  00B4  302D               	movlw	45
 12130  00B5  00A9               	movwf	_efgtoa$2155^(0+128)
 12131  00B6  3000               	movlw	0
 12132  00B7  00AA               	movwf	(_efgtoa$2155^(0+128)+1)
 12133  00B8                     l6127:
 12134  00B8  0829               	movf	_efgtoa$2155^(0+128),w
 12135  00B9  00A5               	movwf	??_efgtoa^(0+128)
 12136  00BA  0825               	movf	??_efgtoa^(0+128),w
 12137  00BB  0144               	movlb	4	; select bank4
 12138  00BC  00A0               	movwf	_dbuf^(0+512)
 12139  00BD                     l6129:
 12140                           
 12141                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 351:         ++n;
 12142  00BD  3001               	movlw	1
 12143  00BE  0141               	movlb	1	; select bank1
 12144  00BF  07DC               	addwf	efgtoa@n^(0+128),f
 12145  00C0  3000               	movlw	0
 12146  00C1  3DDD               	addwfc	(efgtoa@n+1)^(0+128),f
 12147  00C2                     l6131:
 12148                           
 12149                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 352:         --w;
 12150  00C2  30FF               	movlw	255
 12151  00C3  07C8               	addwf	efgtoa@w^(0+128),f
 12152  00C4  30FF               	movlw	255
 12153  00C5  3DC9               	addwfc	(efgtoa@w+1)^(0+128),f
 12154  00C6                     l6133:
 12155                           
 12156                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 357:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 12157  00C6  0141               	movlb	1	; select bank1
 12158  00C7  0859               	movf	(efgtoa@g+3)^(0+128),w
 12159  00C8  00F4               	movwf	___fpclassifyf@x+3
 12160  00C9  0858               	movf	(efgtoa@g+2)^(0+128),w
 12161  00CA  00F3               	movwf	___fpclassifyf@x+2
 12162  00CB  0857               	movf	(efgtoa@g+1)^(0+128),w
 12163  00CC  00F2               	movwf	___fpclassifyf@x+1
 12164  00CD  0856               	movf	efgtoa@g^(0+128),w
 12165  00CE  00F1               	movwf	___fpclassifyf@x
 12166  00CF  3190  2000  3180   	fcall	___fpclassifyf
 12167  00D2  0371               	decf	?___fpclassifyf,w
 12168  00D3  0472               	iorwf	?___fpclassifyf+1,w
 12169  00D4  1D03               	btfss	3,2
 12170  00D5  28D7               	goto	u7511
 12171  00D6  28D8               	goto	u7510
 12172  00D7                     u7511:
 12173  00D7  292A               	goto	l6151
 12174  00D8                     u7510:
 12175  00D8                     l6135:
 12176  00D8  0141               	movlb	1	; select bank1
 12177  00D9  0824               	movf	efgtoa@c^(0+128),w
 12178  00DA  3EBF               	addlw	191
 12179  00DB  00A5               	movwf	??_efgtoa^(0+128)
 12180  00DC  30FF               	movlw	255
 12181  00DD  1803               	skipnc
 12182  00DE  3000               	movlw	0
 12183  00DF  00A6               	movwf	(??_efgtoa^(0+128)+1)
 12184  00E0  3000               	movlw	0
 12185  00E1  0226               	subwf	(??_efgtoa+1)^(0+128),w
 12186  00E2  301A               	movlw	26
 12187  00E3  1903               	skipnz
 12188  00E4  0225               	subwf	??_efgtoa^(0+128),w
 12189  00E5  1C03               	skipc
 12190  00E6  28E8               	goto	u7521
 12191  00E7  28EA               	goto	u7520
 12192  00E8                     u7521:
 12193  00E8  3001               	movlw	1
 12194  00E9  28EB               	goto	u7530
 12195  00EA                     u7520:
 12196  00EA  3000               	movlw	0
 12197  00EB                     u7530:
 12198  00EB  00A7               	movwf	(??_efgtoa+2)^(0+128)
 12199  00EC  01A8               	clrf	((??_efgtoa+2)^(0+128)+1)
 12200  00ED  0827               	movf	(??_efgtoa+2)^(0+128),w
 12201  00EE  00AB               	movwf	_efgtoa$2156^(0+128)
 12202  00EF  0828               	movf	(??_efgtoa+3)^(0+128),w
 12203  00F0  00AC               	movwf	(_efgtoa$2156+1)^(0+128)
 12204  00F1                     l6139:
 12205  00F1  082B               	movf	_efgtoa$2156^(0+128),w
 12206  00F2  042C               	iorwf	(_efgtoa$2156+1)^(0+128),w
 12207  00F3  1903               	btfsc	3,2
 12208  00F4  28F6               	goto	u7541
 12209  00F5  28F7               	goto	u7540
 12210  00F6                     u7541:
 12211  00F6  2901               	goto	l6143
 12212  00F7                     u7540:
 12213  00F7                     l6141:
 12214                           
 12215                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 358:             strcpy(&dbuf
      +                          [n], "INF");
 12216  00F7  3013               	movlw	low (STR_12| (0+32768))
 12217  00F8  00F1               	movwf	strcpy@src
 12218  00F9  30A8               	movlw	high (STR_12| (0+32768))
 12219  00FA  00F2               	movwf	strcpy@src+1
 12220  00FB  085C               	movf	efgtoa@n^(0+128),w
 12221  00FC  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 12222  00FD  3198  207C  3180   	fcall	_strcpy
 12223                           
 12224                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 359:         } else {
 12225  0100  290A               	goto	l6145
 12226  0101                     l6143:
 12227                           
 12228                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 360:             strcpy(&dbuf
      +                          [n], "inf");
 12229  0101  301B               	movlw	low (STR_13| (0+32768))
 12230  0102  00F1               	movwf	strcpy@src
 12231  0103  30A8               	movlw	high (STR_13| (0+32768))
 12232  0104  00F2               	movwf	strcpy@src+1
 12233  0105  085C               	movf	efgtoa@n^(0+128),w
 12234  0106  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 12235  0107  3198  207C  3180   	fcall	_strcpy
 12236  010A                     l6145:
 12237                           
 12238                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 362:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 12239  010A  30FD               	movlw	253
 12240  010B  0141               	movlb	1	; select bank1
 12241  010C  07C8               	addwf	efgtoa@w^(0+128),f
 12242  010D  30FF               	movlw	255
 12243  010E  3DC9               	addwfc	(efgtoa@w+1)^(0+128),f
 12244  010F                     l6147:
 12245                           
 12246                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 363:         return pad(fp, &
      +                          dbuf[0], w);
 12247  010F  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
 12248  0110  00A5               	movwf	??_efgtoa^(0+128)
 12249  0111  0825               	movf	??_efgtoa^(0+128),w
 12250  0112  0140               	movlb	0	; select bank0
 12251  0113  00A7               	movwf	pad@buf
 12252  0114  0141               	movlb	1	; select bank1
 12253  0115  0849               	movf	(efgtoa@w+1)^(0+128),w
 12254  0116  0140               	movlb	0	; select bank0
 12255  0117  00A9               	movwf	pad@p+1
 12256  0118  0141               	movlb	1	; select bank1
 12257  0119  0848               	movf	efgtoa@w^(0+128),w
 12258  011A  0140               	movlb	0	; select bank0
 12259  011B  00A8               	movwf	pad@p
 12260  011C  0141               	movlb	1	; select bank1
 12261  011D  0843               	movf	efgtoa@fp^(0+128),w
 12262  011E  319D  2525  3180   	fcall	_pad
 12263  0121  0140               	movlb	0	; select bank0
 12264  0122  0828               	movf	?_pad+1,w
 12265  0123  0141               	movlb	1	; select bank1
 12266  0124  00A1               	movwf	(?_efgtoa+1)^(0+128)
 12267  0125  0140               	movlb	0	; select bank0
 12268  0126  0827               	movf	?_pad,w
 12269  0127  0141               	movlb	1	; select bank1
 12270  0128  00A0               	movwf	?_efgtoa^(0+128)
 12271  0129  2FA3               	goto	l1339
 12272  012A                     l6151:
 12273                           
 12274                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 366:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 12275  012A  0141               	movlb	1	; select bank1
 12276  012B  0859               	movf	(efgtoa@g+3)^(0+128),w
 12277  012C  00F4               	movwf	___fpclassifyf@x+3
 12278  012D  0858               	movf	(efgtoa@g+2)^(0+128),w
 12279  012E  00F3               	movwf	___fpclassifyf@x+2
 12280  012F  0857               	movf	(efgtoa@g+1)^(0+128),w
 12281  0130  00F2               	movwf	___fpclassifyf@x+1
 12282  0131  0856               	movf	efgtoa@g^(0+128),w
 12283  0132  00F1               	movwf	___fpclassifyf@x
 12284  0133  3190  2000  3180   	fcall	___fpclassifyf
 12285  0136  0871               	movf	?___fpclassifyf,w
 12286  0137  0472               	iorwf	?___fpclassifyf+1,w
 12287  0138  1D03               	btfss	3,2
 12288  0139  293B               	goto	u7551
 12289  013A  293C               	goto	u7550
 12290  013B                     u7551:
 12291  013B  298E               	goto	l6169
 12292  013C                     u7550:
 12293  013C                     l6153:
 12294  013C  0141               	movlb	1	; select bank1
 12295  013D  0824               	movf	efgtoa@c^(0+128),w
 12296  013E  3EBF               	addlw	191
 12297  013F  00A5               	movwf	??_efgtoa^(0+128)
 12298  0140  30FF               	movlw	255
 12299  0141  1803               	skipnc
 12300  0142  3000               	movlw	0
 12301  0143  00A6               	movwf	(??_efgtoa^(0+128)+1)
 12302  0144  3000               	movlw	0
 12303  0145  0226               	subwf	(??_efgtoa+1)^(0+128),w
 12304  0146  301A               	movlw	26
 12305  0147  1903               	skipnz
 12306  0148  0225               	subwf	??_efgtoa^(0+128),w
 12307  0149  1C03               	skipc
 12308  014A  294C               	goto	u7561
 12309  014B  294E               	goto	u7560
 12310  014C                     u7561:
 12311  014C  3001               	movlw	1
 12312  014D  294F               	goto	u7570
 12313  014E                     u7560:
 12314  014E  3000               	movlw	0
 12315  014F                     u7570:
 12316  014F  00A7               	movwf	(??_efgtoa+2)^(0+128)
 12317  0150  01A8               	clrf	((??_efgtoa+2)^(0+128)+1)
 12318  0151  0827               	movf	(??_efgtoa+2)^(0+128),w
 12319  0152  00AD               	movwf	_efgtoa$2161^(0+128)
 12320  0153  0828               	movf	(??_efgtoa+3)^(0+128),w
 12321  0154  00AE               	movwf	(_efgtoa$2161+1)^(0+128)
 12322  0155                     l6157:
 12323  0155  082D               	movf	_efgtoa$2161^(0+128),w
 12324  0156  042E               	iorwf	(_efgtoa$2161+1)^(0+128),w
 12325  0157  1903               	btfsc	3,2
 12326  0158  295A               	goto	u7581
 12327  0159  295B               	goto	u7580
 12328  015A                     u7581:
 12329  015A  2965               	goto	l6161
 12330  015B                     u7580:
 12331  015B                     l6159:
 12332                           
 12333                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 367:             strcpy(&dbuf
      +                          [n], "NAN");
 12334  015B  3017               	movlw	low (STR_16| (0+32768))
 12335  015C  00F1               	movwf	strcpy@src
 12336  015D  30A8               	movlw	high (STR_16| (0+32768))
 12337  015E  00F2               	movwf	strcpy@src+1
 12338  015F  085C               	movf	efgtoa@n^(0+128),w
 12339  0160  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 12340  0161  3198  207C  3180   	fcall	_strcpy
 12341                           
 12342                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 368:         } else {
 12343  0164  296E               	goto	l6163
 12344  0165                     l6161:
 12345                           
 12346                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 369:             strcpy(&dbuf
      +                          [n], "nan");
 12347  0165  301F               	movlw	low (STR_17| (0+32768))
 12348  0166  00F1               	movwf	strcpy@src
 12349  0167  30A8               	movlw	high (STR_17| (0+32768))
 12350  0168  00F2               	movwf	strcpy@src+1
 12351  0169  085C               	movf	efgtoa@n^(0+128),w
 12352  016A  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 12353  016B  3198  207C  3180   	fcall	_strcpy
 12354  016E                     l6163:
 12355                           
 12356                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 371:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 12357  016E  30FD               	movlw	253
 12358  016F  0141               	movlb	1	; select bank1
 12359  0170  07C8               	addwf	efgtoa@w^(0+128),f
 12360  0171  30FF               	movlw	255
 12361  0172  3DC9               	addwfc	(efgtoa@w+1)^(0+128),f
 12362  0173                     l6165:
 12363                           
 12364                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 372:         return pad(fp, &
      +                          dbuf[0], w);
 12365  0173  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
 12366  0174  00A5               	movwf	??_efgtoa^(0+128)
 12367  0175  0825               	movf	??_efgtoa^(0+128),w
 12368  0176  0140               	movlb	0	; select bank0
 12369  0177  00A7               	movwf	pad@buf
 12370  0178  0141               	movlb	1	; select bank1
 12371  0179  0849               	movf	(efgtoa@w+1)^(0+128),w
 12372  017A  0140               	movlb	0	; select bank0
 12373  017B  00A9               	movwf	pad@p+1
 12374  017C  0141               	movlb	1	; select bank1
 12375  017D  0848               	movf	efgtoa@w^(0+128),w
 12376  017E  0140               	movlb	0	; select bank0
 12377  017F  00A8               	movwf	pad@p
 12378  0180  0141               	movlb	1	; select bank1
 12379  0181  0843               	movf	efgtoa@fp^(0+128),w
 12380  0182  319D  2525  3180   	fcall	_pad
 12381  0185  0140               	movlb	0	; select bank0
 12382  0186  0828               	movf	?_pad+1,w
 12383  0187  0141               	movlb	1	; select bank1
 12384  0188  00A1               	movwf	(?_efgtoa+1)^(0+128)
 12385  0189  0140               	movlb	0	; select bank0
 12386  018A  0827               	movf	?_pad,w
 12387  018B  0141               	movlb	1	; select bank1
 12388  018C  00A0               	movwf	?_efgtoa^(0+128)
 12389  018D  2FA3               	goto	l1339
 12390  018E                     l6169:
 12391                           
 12392                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 376:     u = 1.0;
 12393  018E  303F               	movlw	63
 12394  018F  0141               	movlb	1	; select bank1
 12395  0190  00E1               	movwf	(efgtoa@u+3)^(0+128)
 12396  0191  3080               	movlw	128
 12397  0192  00E0               	movwf	(efgtoa@u+2)^(0+128)
 12398  0193  3000               	movlw	0
 12399  0194  00DF               	movwf	(efgtoa@u+1)^(0+128)
 12400  0195  3000               	movlw	0
 12401  0196  00DE               	movwf	efgtoa@u^(0+128)
 12402  0197                     l6171:
 12403                           
 12404                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 377:     e = 0;
 12405  0197  01DA               	clrf	efgtoa@e^(0+128)
 12406  0198  01DB               	clrf	(efgtoa@e+1)^(0+128)
 12407  0199                     l6173:
 12408                           
 12409                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 378:     if (!(g == 0.0)) {
 12410  0199  0859               	movf	(efgtoa@g+3)^(0+128),w
 12411  019A  00F4               	movwf	___fleq@ff1+3
 12412  019B  0858               	movf	(efgtoa@g+2)^(0+128),w
 12413  019C  00F3               	movwf	___fleq@ff1+2
 12414  019D  0857               	movf	(efgtoa@g+1)^(0+128),w
 12415  019E  00F2               	movwf	___fleq@ff1+1
 12416  019F  0856               	movf	efgtoa@g^(0+128),w
 12417  01A0  00F1               	movwf	___fleq@ff1
 12418  01A1  3000               	movlw	0
 12419  01A2  00F8               	movwf	___fleq@ff2+3
 12420  01A3  3000               	movlw	0
 12421  01A4  00F7               	movwf	___fleq@ff2+2
 12422  01A5  3000               	movlw	0
 12423  01A6  00F6               	movwf	___fleq@ff2+1
 12424  01A7  3000               	movlw	0
 12425  01A8  00F5               	movwf	___fleq@ff2
 12426  01A9  319C  242D  3180   	fcall	___fleq
 12427  01AC  1803               	btfsc	3,0
 12428  01AD  29AF               	goto	u7591
 12429  01AE  29B0               	goto	u7590
 12430  01AF                     u7591:
 12431  01AF  2A74               	goto	l6189
 12432  01B0                     u7590:
 12433  01B0  29E1               	goto	l6181
 12434  01B1                     l6177:
 12435                           
 12436                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 380:             u = u*10.0;
 12437  01B1  3041               	movlw	65
 12438  01B2  0140               	movlb	0	; select bank0
 12439  01B3  00A9               	movwf	___flmul@b+3
 12440  01B4  3020               	movlw	32
 12441  01B5  00A8               	movwf	___flmul@b+2
 12442  01B6  3000               	movlw	0
 12443  01B7  00A7               	movwf	___flmul@b+1
 12444  01B8  3000               	movlw	0
 12445  01B9  00A6               	movwf	___flmul@b
 12446  01BA  0141               	movlb	1	; select bank1
 12447  01BB  0861               	movf	(efgtoa@u+3)^(0+128),w
 12448  01BC  0140               	movlb	0	; select bank0
 12449  01BD  00AD               	movwf	___flmul@a+3
 12450  01BE  0141               	movlb	1	; select bank1
 12451  01BF  0860               	movf	(efgtoa@u+2)^(0+128),w
 12452  01C0  0140               	movlb	0	; select bank0
 12453  01C1  00AC               	movwf	___flmul@a+2
 12454  01C2  0141               	movlb	1	; select bank1
 12455  01C3  085F               	movf	(efgtoa@u+1)^(0+128),w
 12456  01C4  0140               	movlb	0	; select bank0
 12457  01C5  00AB               	movwf	___flmul@a+1
 12458  01C6  0141               	movlb	1	; select bank1
 12459  01C7  085E               	movf	efgtoa@u^(0+128),w
 12460  01C8  0140               	movlb	0	; select bank0
 12461  01C9  00AA               	movwf	___flmul@a
 12462  01CA  3195  25A9  3180   	fcall	___flmul
 12463  01CD  0140               	movlb	0	; select bank0
 12464  01CE  0829               	movf	?___flmul+3,w
 12465  01CF  0141               	movlb	1	; select bank1
 12466  01D0  00E1               	movwf	(efgtoa@u+3)^(0+128)
 12467  01D1  0140               	movlb	0	; select bank0
 12468  01D2  0828               	movf	?___flmul+2,w
 12469  01D3  0141               	movlb	1	; select bank1
 12470  01D4  00E0               	movwf	(efgtoa@u+2)^(0+128)
 12471  01D5  0140               	movlb	0	; select bank0
 12472  01D6  0827               	movf	?___flmul+1,w
 12473  01D7  0141               	movlb	1	; select bank1
 12474  01D8  00DF               	movwf	(efgtoa@u+1)^(0+128)
 12475  01D9  0140               	movlb	0	; select bank0
 12476  01DA  0826               	movf	?___flmul,w
 12477  01DB  0141               	movlb	1	; select bank1
 12478  01DC  00DE               	movwf	efgtoa@u^(0+128)
 12479  01DD                     l6179:
 12480                           
 12481                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 381:             ++e;
 12482  01DD  3001               	movlw	1
 12483  01DE  07DA               	addwf	efgtoa@e^(0+128),f
 12484  01DF  3000               	movlw	0
 12485  01E0  3DDB               	addwfc	(efgtoa@e+1)^(0+128),f
 12486  01E1                     l6181:
 12487                           
 12488                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 379:         while (!(g < (u*
      +                          10.0))) {
 12489  01E1  0141               	movlb	1	; select bank1
 12490  01E2  0859               	movf	(efgtoa@g+3)^(0+128),w
 12491  01E3  0140               	movlb	0	; select bank0
 12492  01E4  00C3               	movwf	___flge@ff1+3
 12493  01E5  0141               	movlb	1	; select bank1
 12494  01E6  0858               	movf	(efgtoa@g+2)^(0+128),w
 12495  01E7  0140               	movlb	0	; select bank0
 12496  01E8  00C2               	movwf	___flge@ff1+2
 12497  01E9  0141               	movlb	1	; select bank1
 12498  01EA  0857               	movf	(efgtoa@g+1)^(0+128),w
 12499  01EB  0140               	movlb	0	; select bank0
 12500  01EC  00C1               	movwf	___flge@ff1+1
 12501  01ED  0141               	movlb	1	; select bank1
 12502  01EE  0856               	movf	efgtoa@g^(0+128),w
 12503  01EF  0140               	movlb	0	; select bank0
 12504  01F0  00C0               	movwf	___flge@ff1
 12505  01F1  3041               	movlw	65
 12506  01F2  00A9               	movwf	___flmul@b+3
 12507  01F3  3020               	movlw	32
 12508  01F4  00A8               	movwf	___flmul@b+2
 12509  01F5  3000               	movlw	0
 12510  01F6  00A7               	movwf	___flmul@b+1
 12511  01F7  3000               	movlw	0
 12512  01F8  00A6               	movwf	___flmul@b
 12513  01F9  0141               	movlb	1	; select bank1
 12514  01FA  0861               	movf	(efgtoa@u+3)^(0+128),w
 12515  01FB  0140               	movlb	0	; select bank0
 12516  01FC  00AD               	movwf	___flmul@a+3
 12517  01FD  0141               	movlb	1	; select bank1
 12518  01FE  0860               	movf	(efgtoa@u+2)^(0+128),w
 12519  01FF  0140               	movlb	0	; select bank0
 12520  0200  00AC               	movwf	___flmul@a+2
 12521  0201  0141               	movlb	1	; select bank1
 12522  0202  085F               	movf	(efgtoa@u+1)^(0+128),w
 12523  0203  0140               	movlb	0	; select bank0
 12524  0204  00AB               	movwf	___flmul@a+1
 12525  0205  0141               	movlb	1	; select bank1
 12526  0206  085E               	movf	efgtoa@u^(0+128),w
 12527  0207  0140               	movlb	0	; select bank0
 12528  0208  00AA               	movwf	___flmul@a
 12529  0209  3195  25A9  3180   	fcall	___flmul
 12530  020C  0140               	movlb	0	; select bank0
 12531  020D  0829               	movf	?___flmul+3,w
 12532  020E  00C7               	movwf	___flge@ff2+3
 12533  020F  0828               	movf	?___flmul+2,w
 12534  0210  00C6               	movwf	___flge@ff2+2
 12535  0211  0827               	movf	?___flmul+1,w
 12536  0212  00C5               	movwf	___flge@ff2+1
 12537  0213  0826               	movf	?___flmul,w
 12538  0214  00C4               	movwf	___flge@ff2
 12539  0215  319E  26C8  3180   	fcall	___flge
 12540  0218  1803               	btfsc	3,0
 12541  0219  2A1B               	goto	u7601
 12542  021A  2A1C               	goto	u7600
 12543  021B                     u7601:
 12544  021B  29B1               	goto	l6177
 12545  021C                     u7600:
 12546  021C  2A4D               	goto	l6187
 12547  021D                     l6183:
 12548                           
 12549                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 384:             u = u/10.0;
 12550  021D  3041               	movlw	65
 12551  021E  0140               	movlb	0	; select bank0
 12552  021F  00C3               	movwf	___fldiv@a+3
 12553  0220  3020               	movlw	32
 12554  0221  00C2               	movwf	___fldiv@a+2
 12555  0222  3000               	movlw	0
 12556  0223  00C1               	movwf	___fldiv@a+1
 12557  0224  3000               	movlw	0
 12558  0225  00C0               	movwf	___fldiv@a
 12559  0226  0141               	movlb	1	; select bank1
 12560  0227  0861               	movf	(efgtoa@u+3)^(0+128),w
 12561  0228  0140               	movlb	0	; select bank0
 12562  0229  00C7               	movwf	___fldiv@b+3
 12563  022A  0141               	movlb	1	; select bank1
 12564  022B  0860               	movf	(efgtoa@u+2)^(0+128),w
 12565  022C  0140               	movlb	0	; select bank0
 12566  022D  00C6               	movwf	___fldiv@b+2
 12567  022E  0141               	movlb	1	; select bank1
 12568  022F  085F               	movf	(efgtoa@u+1)^(0+128),w
 12569  0230  0140               	movlb	0	; select bank0
 12570  0231  00C5               	movwf	___fldiv@b+1
 12571  0232  0141               	movlb	1	; select bank1
 12572  0233  085E               	movf	efgtoa@u^(0+128),w
 12573  0234  0140               	movlb	0	; select bank0
 12574  0235  00C4               	movwf	___fldiv@b
 12575  0236  3193  23F5  3180   	fcall	___fldiv
 12576  0239  0140               	movlb	0	; select bank0
 12577  023A  0843               	movf	?___fldiv+3,w
 12578  023B  0141               	movlb	1	; select bank1
 12579  023C  00E1               	movwf	(efgtoa@u+3)^(0+128)
 12580  023D  0140               	movlb	0	; select bank0
 12581  023E  0842               	movf	?___fldiv+2,w
 12582  023F  0141               	movlb	1	; select bank1
 12583  0240  00E0               	movwf	(efgtoa@u+2)^(0+128)
 12584  0241  0140               	movlb	0	; select bank0
 12585  0242  0841               	movf	?___fldiv+1,w
 12586  0243  0141               	movlb	1	; select bank1
 12587  0244  00DF               	movwf	(efgtoa@u+1)^(0+128)
 12588  0245  0140               	movlb	0	; select bank0
 12589  0246  0840               	movf	?___fldiv,w
 12590  0247  0141               	movlb	1	; select bank1
 12591  0248  00DE               	movwf	efgtoa@u^(0+128)
 12592  0249                     l6185:
 12593                           
 12594                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 385:             --e;
 12595  0249  30FF               	movlw	255
 12596  024A  07DA               	addwf	efgtoa@e^(0+128),f
 12597  024B  30FF               	movlw	255
 12598  024C  3DDB               	addwfc	(efgtoa@e+1)^(0+128),f
 12599  024D                     l6187:
 12600                           
 12601                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 383:         while (g < u) {
 12602  024D  0141               	movlb	1	; select bank1
 12603  024E  0859               	movf	(efgtoa@g+3)^(0+128),w
 12604  024F  0140               	movlb	0	; select bank0
 12605  0250  00C3               	movwf	___flge@ff1+3
 12606  0251  0141               	movlb	1	; select bank1
 12607  0252  0858               	movf	(efgtoa@g+2)^(0+128),w
 12608  0253  0140               	movlb	0	; select bank0
 12609  0254  00C2               	movwf	___flge@ff1+2
 12610  0255  0141               	movlb	1	; select bank1
 12611  0256  0857               	movf	(efgtoa@g+1)^(0+128),w
 12612  0257  0140               	movlb	0	; select bank0
 12613  0258  00C1               	movwf	___flge@ff1+1
 12614  0259  0141               	movlb	1	; select bank1
 12615  025A  0856               	movf	efgtoa@g^(0+128),w
 12616  025B  0140               	movlb	0	; select bank0
 12617  025C  00C0               	movwf	___flge@ff1
 12618  025D  0141               	movlb	1	; select bank1
 12619  025E  0861               	movf	(efgtoa@u+3)^(0+128),w
 12620  025F  0140               	movlb	0	; select bank0
 12621  0260  00C7               	movwf	___flge@ff2+3
 12622  0261  0141               	movlb	1	; select bank1
 12623  0262  0860               	movf	(efgtoa@u+2)^(0+128),w
 12624  0263  0140               	movlb	0	; select bank0
 12625  0264  00C6               	movwf	___flge@ff2+2
 12626  0265  0141               	movlb	1	; select bank1
 12627  0266  085F               	movf	(efgtoa@u+1)^(0+128),w
 12628  0267  0140               	movlb	0	; select bank0
 12629  0268  00C5               	movwf	___flge@ff2+1
 12630  0269  0141               	movlb	1	; select bank1
 12631  026A  085E               	movf	efgtoa@u^(0+128),w
 12632  026B  0140               	movlb	0	; select bank0
 12633  026C  00C4               	movwf	___flge@ff2
 12634  026D  319E  26C8  3180   	fcall	___flge
 12635  0270  1C03               	btfss	3,0
 12636  0271  2A73               	goto	u7611
 12637  0272  2A74               	goto	u7610
 12638  0273                     u7611:
 12639  0273  2A1D               	goto	l6183
 12640  0274                     u7610:
 12641  0274                     l6189:
 12642                           
 12643                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 390:     mode = (char)tolower
      +                          ((int)c);
 12644  0274  0141               	movlb	1	; select bank1
 12645  0275  0824               	movf	efgtoa@c^(0+128),w
 12646  0276  00A5               	movwf	??_efgtoa^(0+128)
 12647  0277  01A6               	clrf	(??_efgtoa^(0+128)+1)
 12648  0278  0825               	movf	??_efgtoa^(0+128),w
 12649  0279  00F7               	movwf	tolower@c
 12650  027A  0826               	movf	(??_efgtoa+1)^(0+128),w
 12651  027B  00F8               	movwf	tolower@c+1
 12652  027C  3199  2105  3180   	fcall	_tolower
 12653  027F  0877               	movf	?_tolower,w
 12654  0280  0141               	movlb	1	; select bank1
 12655  0281  00A7               	movwf	(??_efgtoa+2)^(0+128)
 12656  0282  0827               	movf	(??_efgtoa+2)^(0+128),w
 12657  0283  00CB               	movwf	efgtoa@mode^(0+128)
 12658  0284                     l6191:
 12659                           
 12660                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 391:     nmode = mode;
 12661  0284  084B               	movf	efgtoa@mode^(0+128),w
 12662  0285  00A5               	movwf	??_efgtoa^(0+128)
 12663  0286  0825               	movf	??_efgtoa^(0+128),w
 12664  0287  00CA               	movwf	efgtoa@nmode^(0+128)
 12665  0288                     l6193:
 12666                           
 12667                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 392:     if (mode == 'g') {
 12668  0288  3067               	movlw	103
 12669  0289  064B               	xorwf	efgtoa@mode^(0+128),w
 12670  028A  1D03               	btfss	3,2
 12671  028B  2A8D               	goto	u7621
 12672  028C  2A8E               	goto	u7620
 12673  028D                     u7621:
 12674  028D  2AB7               	goto	l1354
 12675  028E                     u7620:
 12676  028E                     l6195:
 12677                           
 12678                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 393:   if (prec == 0) {
 12679  028E  0143               	movlb	3	; select bank3
 12680  028F  084C               	movf	_prec^(0+384),w
 12681  0290  044D               	iorwf	(_prec+1)^(0+384),w
 12682  0291  1D03               	btfss	3,2
 12683  0292  2A94               	goto	u7631
 12684  0293  2A95               	goto	u7630
 12685  0294                     u7631:
 12686  0294  2A99               	goto	l1355
 12687  0295                     u7630:
 12688  0295                     l6197:
 12689                           
 12690                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 394:    prec = 1;
 12691  0295  3001               	movlw	1
 12692  0296  00CC               	movwf	_prec^(0+384)
 12693  0297  3000               	movlw	0
 12694  0298  00CD               	movwf	(_prec^(0+384)+1)
 12695  0299                     l1355:	
 12696                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 395:   }
 12697                           
 12698                           
 12699                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 396:         p = (0 < prec) ?
      +                           prec : 6;
 12700  0299  084D               	movf	(_prec+1)^(0+384),w
 12701  029A  3A80               	xorlw	128
 12702  029B  0141               	movlb	1	; select bank1
 12703  029C  00A5               	movwf	??_efgtoa^(0+128)
 12704  029D  3080               	movlw	128
 12705  029E  0225               	subwf	??_efgtoa^(0+128),w
 12706  029F  1D03               	skipz
 12707  02A0  2AA4               	goto	u7645
 12708  02A1  3001               	movlw	1
 12709  02A2  0143               	movlb	3	; select bank3
 12710  02A3  024C               	subwf	_prec^(0+384),w
 12711  02A4                     u7645:
 12712  02A4  1803               	skipnc
 12713  02A5  2AA7               	goto	u7641
 12714  02A6  2AA8               	goto	u7640
 12715  02A7                     u7641:
 12716  02A7  2AAE               	goto	l6201
 12717  02A8                     u7640:
 12718  02A8                     l6199:
 12719  02A8  3006               	movlw	6
 12720  02A9  0141               	movlb	1	; select bank1
 12721  02AA  00C6               	movwf	efgtoa@p^(0+128)
 12722  02AB  3000               	movlw	0
 12723  02AC  00C7               	movwf	(efgtoa@p^(0+128)+1)
 12724  02AD  2ABD               	goto	l6207
 12725  02AE                     l6201:
 12726  02AE  0143               	movlb	3	; select bank3
 12727  02AF  084D               	movf	(_prec+1)^(0+384),w
 12728  02B0  0141               	movlb	1	; select bank1
 12729  02B1  00C7               	movwf	(efgtoa@p+1)^(0+128)
 12730  02B2  0143               	movlb	3	; select bank3
 12731  02B3  084C               	movf	_prec^(0+384),w
 12732  02B4  0141               	movlb	1	; select bank1
 12733  02B5  00C6               	movwf	efgtoa@p^(0+128)
 12734  02B6  2ABD               	goto	l6207
 12735  02B7                     l1354:
 12736                           
 12737                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 398:         p = (prec < 0) ?
      +                           6 : prec;
 12738  02B7  0143               	movlb	3	; select bank3
 12739  02B8  1BCD               	btfsc	(_prec+1)^(0+384),7
 12740  02B9  2ABB               	goto	u7651
 12741  02BA  2ABC               	goto	u7650
 12742  02BB                     u7651:
 12743  02BB  2AA8               	goto	l6199
 12744  02BC                     u7650:
 12745  02BC  2AAE               	goto	l6201
 12746  02BD                     l6207:
 12747                           
 12748                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 402:     if (mode == 'g') {
 12749  02BD  3067               	movlw	103
 12750  02BE  064B               	xorwf	efgtoa@mode^(0+128),w
 12751  02BF  1D03               	btfss	3,2
 12752  02C0  2AC2               	goto	u7661
 12753  02C1  2AC3               	goto	u7660
 12754  02C2                     u7661:
 12755  02C2  2AF0               	goto	l1365
 12756  02C3                     u7660:
 12757  02C3                     l6209:
 12758                           
 12759                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 403:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 12760  02C3  085B               	movf	(efgtoa@e+1)^(0+128),w
 12761  02C4  3A80               	xorlw	128
 12762  02C5  00A5               	movwf	??_efgtoa^(0+128)
 12763  02C6  307F               	movlw	127
 12764  02C7  0225               	subwf	??_efgtoa^(0+128),w
 12765  02C8  1D03               	skipz
 12766  02C9  2ACC               	goto	u7675
 12767  02CA  30FC               	movlw	252
 12768  02CB  025A               	subwf	efgtoa@e^(0+128),w
 12769  02CC                     u7675:
 12770  02CC  1C03               	skipc
 12771  02CD  2ACF               	goto	u7671
 12772  02CE  2AD0               	goto	u7670
 12773  02CF                     u7671:
 12774  02CF  2AEB               	goto	l6215
 12775  02D0                     u7670:
 12776  02D0                     l6211:
 12777  02D0  0141               	movlb	1	; select bank1
 12778  02D1  0846               	movf	efgtoa@p^(0+128),w
 12779  02D2  3EFF               	addlw	255
 12780  02D3  00A5               	movwf	??_efgtoa^(0+128)
 12781  02D4  30FF               	movlw	255
 12782  02D5  3D47               	addwfc	(efgtoa@p+1)^(0+128),w
 12783  02D6  00A6               	movwf	(??_efgtoa+1)^(0+128)
 12784  02D7  0826               	movf	(??_efgtoa+1)^(0+128),w
 12785  02D8  3A80               	xorlw	128
 12786  02D9  00A7               	movwf	(??_efgtoa+2)^(0+128)
 12787  02DA  085B               	movf	(efgtoa@e+1)^(0+128),w
 12788  02DB  3A80               	xorlw	128
 12789  02DC  0227               	subwf	(??_efgtoa+2)^(0+128),w
 12790  02DD  1D03               	skipz
 12791  02DE  2AE1               	goto	u7685
 12792  02DF  085A               	movf	efgtoa@e^(0+128),w
 12793  02E0  0225               	subwf	??_efgtoa^(0+128),w
 12794  02E1                     u7685:
 12795  02E1  1C03               	skipc
 12796  02E2  2AE4               	goto	u7681
 12797  02E3  2AE5               	goto	u7680
 12798  02E4                     u7681:
 12799  02E4  2AEB               	goto	l6215
 12800  02E5                     u7680:
 12801  02E5                     l6213:
 12802                           
 12803                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 404:             nmode = 'f';
 12804  02E5  3066               	movlw	102
 12805  02E6  0141               	movlb	1	; select bank1
 12806  02E7  00A5               	movwf	??_efgtoa^(0+128)
 12807  02E8  0825               	movf	??_efgtoa^(0+128),w
 12808  02E9  00CA               	movwf	efgtoa@nmode^(0+128)
 12809                           
 12810                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 405:         } else {
 12811  02EA  2AF0               	goto	l1365
 12812  02EB                     l6215:
 12813                           
 12814                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 406:             nmode = 'e';
 12815  02EB  3065               	movlw	101
 12816  02EC  0141               	movlb	1	; select bank1
 12817  02ED  00A5               	movwf	??_efgtoa^(0+128)
 12818  02EE  0825               	movf	??_efgtoa^(0+128),w
 12819  02EF  00CA               	movwf	efgtoa@nmode^(0+128)
 12820  02F0                     l1365:	
 12821                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 408:     }
 12822                           
 12823                           
 12824                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 411:     m = p;
 12825  02F0  0847               	movf	(efgtoa@p+1)^(0+128),w
 12826  02F1  00BC               	movwf	(efgtoa@m+1)^(0+128)
 12827  02F2  0846               	movf	efgtoa@p^(0+128),w
 12828  02F3  00BB               	movwf	efgtoa@m^(0+128)
 12829  02F4                     l6217:
 12830                           
 12831                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 412:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 12832  02F4  3067               	movlw	103
 12833  02F5  064B               	xorwf	efgtoa@mode^(0+128),w
 12834  02F6  1D03               	btfss	3,2
 12835  02F7  2AF9               	goto	u7691
 12836  02F8  2AFA               	goto	u7690
 12837  02F9                     u7691:
 12838  02F9  2B04               	goto	l6223
 12839  02FA                     u7690:
 12840  02FA                     l6219:
 12841  02FA  3066               	movlw	102
 12842  02FB  064A               	xorwf	efgtoa@nmode^(0+128),w
 12843  02FC  1D03               	btfss	3,2
 12844  02FD  2AFF               	goto	u7701
 12845  02FE  2B00               	goto	u7700
 12846  02FF                     u7701:
 12847  02FF  2B08               	goto	l6225
 12848  0300                     u7700:
 12849  0300                     l6221:
 12850  0300  1FDB               	btfss	(efgtoa@e+1)^(0+128),7
 12851  0301  2B03               	goto	u7711
 12852  0302  2B04               	goto	u7710
 12853  0303                     u7711:
 12854  0303  2B08               	goto	l6225
 12855  0304                     u7710:
 12856  0304                     l6223:
 12857                           
 12858                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 413:         ++m;
 12859  0304  3001               	movlw	1
 12860  0305  07BB               	addwf	efgtoa@m^(0+128),f
 12861  0306  3000               	movlw	0
 12862  0307  3DBC               	addwfc	(efgtoa@m+1)^(0+128),f
 12863  0308                     l6225:
 12864                           
 12865                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 417:     if (nmode == 'f') {
 12866  0308  3066               	movlw	102
 12867  0309  064A               	xorwf	efgtoa@nmode^(0+128),w
 12868  030A  1D03               	btfss	3,2
 12869  030B  2B0D               	goto	u7721
 12870  030C  2B0E               	goto	u7720
 12871  030D                     u7721:
 12872  030D  2B26               	goto	l6237
 12873  030E                     u7720:
 12874  030E                     l6227:
 12875                           
 12876                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 418:         if (e < 0) {
 12877  030E  1FDB               	btfss	(efgtoa@e+1)^(0+128),7
 12878  030F  2B11               	goto	u7731
 12879  0310  2B12               	goto	u7730
 12880  0311                     u7731:
 12881  0311  2B1C               	goto	l6233
 12882  0312                     u7730:
 12883  0312                     l6229:
 12884                           
 12885                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 419:             u = 1.0;
 12886  0312  303F               	movlw	63
 12887  0313  00E1               	movwf	(efgtoa@u+3)^(0+128)
 12888  0314  3080               	movlw	128
 12889  0315  00E0               	movwf	(efgtoa@u+2)^(0+128)
 12890  0316  3000               	movlw	0
 12891  0317  00DF               	movwf	(efgtoa@u+1)^(0+128)
 12892  0318  3000               	movlw	0
 12893  0319  00DE               	movwf	efgtoa@u^(0+128)
 12894  031A                     l6231:
 12895                           
 12896                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 420:             e = 0;
 12897  031A  01DA               	clrf	efgtoa@e^(0+128)
 12898  031B  01DB               	clrf	(efgtoa@e+1)^(0+128)
 12899  031C                     l6233:
 12900                           
 12901                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 422:         if (!(mode == 'g
      +                          ')) {
 12902  031C  3067               	movlw	103
 12903  031D  064B               	xorwf	efgtoa@mode^(0+128),w
 12904  031E  1903               	btfsc	3,2
 12905  031F  2B21               	goto	u7741
 12906  0320  2B22               	goto	u7740
 12907  0321                     u7741:
 12908  0321  2B26               	goto	l6237
 12909  0322                     u7740:
 12910  0322                     l6235:
 12911                           
 12912                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 423:             m += e;
 12913  0322  085A               	movf	efgtoa@e^(0+128),w
 12914  0323  07BB               	addwf	efgtoa@m^(0+128),f
 12915  0324  085B               	movf	(efgtoa@e+1)^(0+128),w
 12916  0325  3DBC               	addwfc	(efgtoa@m+1)^(0+128),f
 12917  0326                     l6237:
 12918                           
 12919                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 428:     i = 0;
 12920  0326  01D4               	clrf	efgtoa@i^(0+128)
 12921  0327  01D5               	clrf	(efgtoa@i+1)^(0+128)
 12922  0328                     l6239:
 12923                           
 12924                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 429:     h = g;
 12925  0328  0859               	movf	(efgtoa@g+3)^(0+128),w
 12926  0329  00CF               	movwf	(efgtoa@h+3)^(0+128)
 12927  032A  0858               	movf	(efgtoa@g+2)^(0+128),w
 12928  032B  00CE               	movwf	(efgtoa@h+2)^(0+128)
 12929  032C  0857               	movf	(efgtoa@g+1)^(0+128),w
 12930  032D  00CD               	movwf	(efgtoa@h+1)^(0+128)
 12931  032E  0856               	movf	efgtoa@g^(0+128),w
 12932  032F  00CC               	movwf	efgtoa@h^(0+128)
 12933  0330                     l6241:
 12934                           
 12935                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 430:     ou = u;
 12936  0330  0861               	movf	(efgtoa@u+3)^(0+128),w
 12937  0331  00C0               	movwf	(efgtoa@ou+3)^(0+128)
 12938  0332  0860               	movf	(efgtoa@u+2)^(0+128),w
 12939  0333  00BF               	movwf	(efgtoa@ou+2)^(0+128)
 12940  0334  085F               	movf	(efgtoa@u+1)^(0+128),w
 12941  0335  00BE               	movwf	(efgtoa@ou+1)^(0+128)
 12942  0336  085E               	movf	efgtoa@u^(0+128),w
 12943  0337  00BD               	movwf	efgtoa@ou^(0+128)
 12944                           
 12945                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 431:     while (i < m) {
 12946  0338  2C06               	goto	l6247
 12947  0339                     l6243:
 12948                           
 12949                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 432:         l = floorf(h/u);
 12950  0339  0141               	movlb	1	; select bank1
 12951  033A  0861               	movf	(efgtoa@u+3)^(0+128),w
 12952  033B  0140               	movlb	0	; select bank0
 12953  033C  00C3               	movwf	___fldiv@a+3
 12954  033D  0141               	movlb	1	; select bank1
 12955  033E  0860               	movf	(efgtoa@u+2)^(0+128),w
 12956  033F  0140               	movlb	0	; select bank0
 12957  0340  00C2               	movwf	___fldiv@a+2
 12958  0341  0141               	movlb	1	; select bank1
 12959  0342  085F               	movf	(efgtoa@u+1)^(0+128),w
 12960  0343  0140               	movlb	0	; select bank0
 12961  0344  00C1               	movwf	___fldiv@a+1
 12962  0345  0141               	movlb	1	; select bank1
 12963  0346  085E               	movf	efgtoa@u^(0+128),w
 12964  0347  0140               	movlb	0	; select bank0
 12965  0348  00C0               	movwf	___fldiv@a
 12966  0349  0141               	movlb	1	; select bank1
 12967  034A  084F               	movf	(efgtoa@h+3)^(0+128),w
 12968  034B  0140               	movlb	0	; select bank0
 12969  034C  00C7               	movwf	___fldiv@b+3
 12970  034D  0141               	movlb	1	; select bank1
 12971  034E  084E               	movf	(efgtoa@h+2)^(0+128),w
 12972  034F  0140               	movlb	0	; select bank0
 12973  0350  00C6               	movwf	___fldiv@b+2
 12974  0351  0141               	movlb	1	; select bank1
 12975  0352  084D               	movf	(efgtoa@h+1)^(0+128),w
 12976  0353  0140               	movlb	0	; select bank0
 12977  0354  00C5               	movwf	___fldiv@b+1
 12978  0355  0141               	movlb	1	; select bank1
 12979  0356  084C               	movf	efgtoa@h^(0+128),w
 12980  0357  0140               	movlb	0	; select bank0
 12981  0358  00C4               	movwf	___fldiv@b
 12982  0359  3193  23F5  3180   	fcall	___fldiv
 12983  035C  0140               	movlb	0	; select bank0
 12984  035D  0843               	movf	?___fldiv+3,w
 12985  035E  00DD               	movwf	floorf@x+3
 12986  035F  0842               	movf	?___fldiv+2,w
 12987  0360  00DC               	movwf	floorf@x+2
 12988  0361  0841               	movf	?___fldiv+1,w
 12989  0362  00DB               	movwf	floorf@x+1
 12990  0363  0840               	movf	?___fldiv,w
 12991  0364  00DA               	movwf	floorf@x
 12992  0365  3191  212E  3180   	fcall	_floorf
 12993  0368  0140               	movlb	0	; select bank0
 12994  0369  085D               	movf	?_floorf+3,w
 12995  036A  0141               	movlb	1	; select bank1
 12996  036B  00D3               	movwf	(efgtoa@l+3)^(0+128)
 12997  036C  0140               	movlb	0	; select bank0
 12998  036D  085C               	movf	?_floorf+2,w
 12999  036E  0141               	movlb	1	; select bank1
 13000  036F  00D2               	movwf	(efgtoa@l+2)^(0+128)
 13001  0370  0140               	movlb	0	; select bank0
 13002  0371  085B               	movf	?_floorf+1,w
 13003  0372  0141               	movlb	1	; select bank1
 13004  0373  00D1               	movwf	(efgtoa@l+1)^(0+128)
 13005  0374  0140               	movlb	0	; select bank0
 13006  0375  085A               	movf	?_floorf,w
 13007  0376  0141               	movlb	1	; select bank1
 13008  0377  00D0               	movwf	efgtoa@l^(0+128)
 13009                           
 13010                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 433:         d = (int)l;
 13011  0378  0853               	movf	(efgtoa@l+3)^(0+128),w
 13012  0379  00F4               	movwf	___fltol@f1+3
 13013  037A  0852               	movf	(efgtoa@l+2)^(0+128),w
 13014  037B  00F3               	movwf	___fltol@f1+2
 13015  037C  0851               	movf	(efgtoa@l+1)^(0+128),w
 13016  037D  00F2               	movwf	___fltol@f1+1
 13017  037E  0850               	movf	efgtoa@l^(0+128),w
 13018  037F  00F1               	movwf	___fltol@f1
 13019  0380  319D  25DD  3180   	fcall	___fltol
 13020  0383  0872               	movf	?___fltol+1,w
 13021  0384  0141               	movlb	1	; select bank1
 13022  0385  00C2               	movwf	(efgtoa@d+1)^(0+128)
 13023  0386  0871               	movf	?___fltol,w
 13024  0387  00C1               	movwf	efgtoa@d^(0+128)
 13025                           
 13026                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 434:         h -= l*u;
 13027  0388  0853               	movf	(efgtoa@l+3)^(0+128),w
 13028  0389  0140               	movlb	0	; select bank0
 13029  038A  00AD               	movwf	___flmul@a+3
 13030  038B  0141               	movlb	1	; select bank1
 13031  038C  0852               	movf	(efgtoa@l+2)^(0+128),w
 13032  038D  0140               	movlb	0	; select bank0
 13033  038E  00AC               	movwf	___flmul@a+2
 13034  038F  0141               	movlb	1	; select bank1
 13035  0390  0851               	movf	(efgtoa@l+1)^(0+128),w
 13036  0391  0140               	movlb	0	; select bank0
 13037  0392  00AB               	movwf	___flmul@a+1
 13038  0393  0141               	movlb	1	; select bank1
 13039  0394  0850               	movf	efgtoa@l^(0+128),w
 13040  0395  0140               	movlb	0	; select bank0
 13041  0396  00AA               	movwf	___flmul@a
 13042  0397  0141               	movlb	1	; select bank1
 13043  0398  0861               	movf	(efgtoa@u+3)^(0+128),w
 13044  0399  0140               	movlb	0	; select bank0
 13045  039A  00A9               	movwf	___flmul@b+3
 13046  039B  0141               	movlb	1	; select bank1
 13047  039C  0860               	movf	(efgtoa@u+2)^(0+128),w
 13048  039D  0140               	movlb	0	; select bank0
 13049  039E  00A8               	movwf	___flmul@b+2
 13050  039F  0141               	movlb	1	; select bank1
 13051  03A0  085F               	movf	(efgtoa@u+1)^(0+128),w
 13052  03A1  0140               	movlb	0	; select bank0
 13053  03A2  00A7               	movwf	___flmul@b+1
 13054  03A3  0141               	movlb	1	; select bank1
 13055  03A4  085E               	movf	efgtoa@u^(0+128),w
 13056  03A5  0140               	movlb	0	; select bank0
 13057  03A6  00A6               	movwf	___flmul@b
 13058  03A7  3195  25A9  3180   	fcall	___flmul
 13059  03AA  0140               	movlb	0	; select bank0
 13060  03AB  0829               	movf	?___flmul+3,w
 13061  03AC  00C3               	movwf	___flsub@a+3
 13062  03AD  0828               	movf	?___flmul+2,w
 13063  03AE  00C2               	movwf	___flsub@a+2
 13064  03AF  0827               	movf	?___flmul+1,w
 13065  03B0  00C1               	movwf	___flsub@a+1
 13066  03B1  0826               	movf	?___flmul,w
 13067  03B2  00C0               	movwf	___flsub@a
 13068  03B3  0141               	movlb	1	; select bank1
 13069  03B4  084F               	movf	(efgtoa@h+3)^(0+128),w
 13070  03B5  0140               	movlb	0	; select bank0
 13071  03B6  00C7               	movwf	___flsub@b+3
 13072  03B7  0141               	movlb	1	; select bank1
 13073  03B8  084E               	movf	(efgtoa@h+2)^(0+128),w
 13074  03B9  0140               	movlb	0	; select bank0
 13075  03BA  00C6               	movwf	___flsub@b+2
 13076  03BB  0141               	movlb	1	; select bank1
 13077  03BC  084D               	movf	(efgtoa@h+1)^(0+128),w
 13078  03BD  0140               	movlb	0	; select bank0
 13079  03BE  00C5               	movwf	___flsub@b+1
 13080  03BF  0141               	movlb	1	; select bank1
 13081  03C0  084C               	movf	efgtoa@h^(0+128),w
 13082  03C1  0140               	movlb	0	; select bank0
 13083  03C2  00C4               	movwf	___flsub@b
 13084  03C3  3198  203B  3180   	fcall	___flsub
 13085  03C6  0140               	movlb	0	; select bank0
 13086  03C7  0843               	movf	?___flsub+3,w
 13087  03C8  0141               	movlb	1	; select bank1
 13088  03C9  00CF               	movwf	(efgtoa@h+3)^(0+128)
 13089  03CA  0140               	movlb	0	; select bank0
 13090  03CB  0842               	movf	?___flsub+2,w
 13091  03CC  0141               	movlb	1	; select bank1
 13092  03CD  00CE               	movwf	(efgtoa@h+2)^(0+128)
 13093  03CE  0140               	movlb	0	; select bank0
 13094  03CF  0841               	movf	?___flsub+1,w
 13095  03D0  0141               	movlb	1	; select bank1
 13096  03D1  00CD               	movwf	(efgtoa@h+1)^(0+128)
 13097  03D2  0140               	movlb	0	; select bank0
 13098  03D3  0840               	movf	?___flsub,w
 13099  03D4  0141               	movlb	1	; select bank1
 13100  03D5  00CC               	movwf	efgtoa@h^(0+128)
 13101                           
 13102                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 435:         u = u/10.0;
 13103  03D6  3041               	movlw	65
 13104  03D7  0140               	movlb	0	; select bank0
 13105  03D8  00C3               	movwf	___fldiv@a+3
 13106  03D9  3020               	movlw	32
 13107  03DA  00C2               	movwf	___fldiv@a+2
 13108  03DB  3000               	movlw	0
 13109  03DC  00C1               	movwf	___fldiv@a+1
 13110  03DD  3000               	movlw	0
 13111  03DE  00C0               	movwf	___fldiv@a
 13112  03DF  0141               	movlb	1	; select bank1
 13113  03E0  0861               	movf	(efgtoa@u+3)^(0+128),w
 13114  03E1  0140               	movlb	0	; select bank0
 13115  03E2  00C7               	movwf	___fldiv@b+3
 13116  03E3  0141               	movlb	1	; select bank1
 13117  03E4  0860               	movf	(efgtoa@u+2)^(0+128),w
 13118  03E5  0140               	movlb	0	; select bank0
 13119  03E6  00C6               	movwf	___fldiv@b+2
 13120  03E7  0141               	movlb	1	; select bank1
 13121  03E8  085F               	movf	(efgtoa@u+1)^(0+128),w
 13122  03E9  0140               	movlb	0	; select bank0
 13123  03EA  00C5               	movwf	___fldiv@b+1
 13124  03EB  0141               	movlb	1	; select bank1
 13125  03EC  085E               	movf	efgtoa@u^(0+128),w
 13126  03ED  0140               	movlb	0	; select bank0
 13127  03EE  00C4               	movwf	___fldiv@b
 13128  03EF  3193  23F5  3180   	fcall	___fldiv
 13129  03F2  0140               	movlb	0	; select bank0
 13130  03F3  0843               	movf	?___fldiv+3,w
 13131  03F4  0141               	movlb	1	; select bank1
 13132  03F5  00E1               	movwf	(efgtoa@u+3)^(0+128)
 13133  03F6  0140               	movlb	0	; select bank0
 13134  03F7  0842               	movf	?___fldiv+2,w
 13135  03F8  0141               	movlb	1	; select bank1
 13136  03F9  00E0               	movwf	(efgtoa@u+2)^(0+128)
 13137  03FA  0140               	movlb	0	; select bank0
 13138  03FB  0841               	movf	?___fldiv+1,w
 13139  03FC  0141               	movlb	1	; select bank1
 13140  03FD  00DF               	movwf	(efgtoa@u+1)^(0+128)
 13141  03FE  0140               	movlb	0	; select bank0
 13142  03FF  0840               	movf	?___fldiv,w
 13143  0400  0141               	movlb	1	; select bank1
 13144  0401  00DE               	movwf	efgtoa@u^(0+128)
 13145  0402                     l6245:
 13146                           
 13147                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 436:         ++i;
 13148  0402  3001               	movlw	1
 13149  0403  07D4               	addwf	efgtoa@i^(0+128),f
 13150  0404  3000               	movlw	0
 13151  0405  3DD5               	addwfc	(efgtoa@i+1)^(0+128),f
 13152  0406                     l6247:
 13153                           
 13154                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 431:     while (i < m) {
 13155  0406  0855               	movf	(efgtoa@i+1)^(0+128),w
 13156  0407  3A80               	xorlw	128
 13157  0408  00A5               	movwf	??_efgtoa^(0+128)
 13158  0409  083C               	movf	(efgtoa@m+1)^(0+128),w
 13159  040A  3A80               	xorlw	128
 13160  040B  0225               	subwf	??_efgtoa^(0+128),w
 13161  040C  1D03               	skipz
 13162  040D  2C10               	goto	u7755
 13163  040E  083B               	movf	efgtoa@m^(0+128),w
 13164  040F  0254               	subwf	efgtoa@i^(0+128),w
 13165  0410                     u7755:
 13166  0410  1C03               	skipc
 13167  0411  2C13               	goto	u7751
 13168  0412  2C14               	goto	u7750
 13169  0413                     u7751:
 13170  0413  2B39               	goto	l6243
 13171  0414                     u7750:
 13172  0414                     l6249:
 13173                           
 13174                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 440:     l = u*5.0;
 13175  0414  3040               	movlw	64
 13176  0415  0140               	movlb	0	; select bank0
 13177  0416  00A9               	movwf	___flmul@b+3
 13178  0417  30A0               	movlw	160
 13179  0418  00A8               	movwf	___flmul@b+2
 13180  0419  3000               	movlw	0
 13181  041A  00A7               	movwf	___flmul@b+1
 13182  041B  3000               	movlw	0
 13183  041C  00A6               	movwf	___flmul@b
 13184  041D  0141               	movlb	1	; select bank1
 13185  041E  0861               	movf	(efgtoa@u+3)^(0+128),w
 13186  041F  0140               	movlb	0	; select bank0
 13187  0420  00AD               	movwf	___flmul@a+3
 13188  0421  0141               	movlb	1	; select bank1
 13189  0422  0860               	movf	(efgtoa@u+2)^(0+128),w
 13190  0423  0140               	movlb	0	; select bank0
 13191  0424  00AC               	movwf	___flmul@a+2
 13192  0425  0141               	movlb	1	; select bank1
 13193  0426  085F               	movf	(efgtoa@u+1)^(0+128),w
 13194  0427  0140               	movlb	0	; select bank0
 13195  0428  00AB               	movwf	___flmul@a+1
 13196  0429  0141               	movlb	1	; select bank1
 13197  042A  085E               	movf	efgtoa@u^(0+128),w
 13198  042B  0140               	movlb	0	; select bank0
 13199  042C  00AA               	movwf	___flmul@a
 13200  042D  3195  25A9  3180   	fcall	___flmul
 13201  0430  0140               	movlb	0	; select bank0
 13202  0431  0829               	movf	?___flmul+3,w
 13203  0432  0141               	movlb	1	; select bank1
 13204  0433  00D3               	movwf	(efgtoa@l+3)^(0+128)
 13205  0434  0140               	movlb	0	; select bank0
 13206  0435  0828               	movf	?___flmul+2,w
 13207  0436  0141               	movlb	1	; select bank1
 13208  0437  00D2               	movwf	(efgtoa@l+2)^(0+128)
 13209  0438  0140               	movlb	0	; select bank0
 13210  0439  0827               	movf	?___flmul+1,w
 13211  043A  0141               	movlb	1	; select bank1
 13212  043B  00D1               	movwf	(efgtoa@l+1)^(0+128)
 13213  043C  0140               	movlb	0	; select bank0
 13214  043D  0826               	movf	?___flmul,w
 13215  043E  0141               	movlb	1	; select bank1
 13216  043F  00D0               	movwf	efgtoa@l^(0+128)
 13217                           
 13218                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 441:     if (h < l) {
 13219  0440  084F               	movf	(efgtoa@h+3)^(0+128),w
 13220  0441  0140               	movlb	0	; select bank0
 13221  0442  00C3               	movwf	___flge@ff1+3
 13222  0443  0141               	movlb	1	; select bank1
 13223  0444  084E               	movf	(efgtoa@h+2)^(0+128),w
 13224  0445  0140               	movlb	0	; select bank0
 13225  0446  00C2               	movwf	___flge@ff1+2
 13226  0447  0141               	movlb	1	; select bank1
 13227  0448  084D               	movf	(efgtoa@h+1)^(0+128),w
 13228  0449  0140               	movlb	0	; select bank0
 13229  044A  00C1               	movwf	___flge@ff1+1
 13230  044B  0141               	movlb	1	; select bank1
 13231  044C  084C               	movf	efgtoa@h^(0+128),w
 13232  044D  0140               	movlb	0	; select bank0
 13233  044E  00C0               	movwf	___flge@ff1
 13234  044F  0141               	movlb	1	; select bank1
 13235  0450  0853               	movf	(efgtoa@l+3)^(0+128),w
 13236  0451  0140               	movlb	0	; select bank0
 13237  0452  00C7               	movwf	___flge@ff2+3
 13238  0453  0141               	movlb	1	; select bank1
 13239  0454  0852               	movf	(efgtoa@l+2)^(0+128),w
 13240  0455  0140               	movlb	0	; select bank0
 13241  0456  00C6               	movwf	___flge@ff2+2
 13242  0457  0141               	movlb	1	; select bank1
 13243  0458  0851               	movf	(efgtoa@l+1)^(0+128),w
 13244  0459  0140               	movlb	0	; select bank0
 13245  045A  00C5               	movwf	___flge@ff2+1
 13246  045B  0141               	movlb	1	; select bank1
 13247  045C  0850               	movf	efgtoa@l^(0+128),w
 13248  045D  0140               	movlb	0	; select bank0
 13249  045E  00C4               	movwf	___flge@ff2
 13250  045F  319E  26C8  3180   	fcall	___flge
 13251  0462  1803               	btfsc	3,0
 13252  0463  2C65               	goto	u7761
 13253  0464  2C66               	goto	u7760
 13254  0465                     u7761:
 13255  0465  2C70               	goto	l6253
 13256  0466                     u7760:
 13257  0466                     l6251:
 13258                           
 13259                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 442:         l = 0.0;
 13260  0466  3000               	movlw	0
 13261  0467  0141               	movlb	1	; select bank1
 13262  0468  00D3               	movwf	(efgtoa@l+3)^(0+128)
 13263  0469  3000               	movlw	0
 13264  046A  00D2               	movwf	(efgtoa@l+2)^(0+128)
 13265  046B  3000               	movlw	0
 13266  046C  00D1               	movwf	(efgtoa@l+1)^(0+128)
 13267  046D  3000               	movlw	0
 13268  046E  00D0               	movwf	efgtoa@l^(0+128)
 13269                           
 13270                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 443:     } else {
 13271  046F  2C95               	goto	l6259
 13272  0470                     l6253:
 13273                           
 13274                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 445:         if ((h == l) && 
      +                          !(d % 2)) {
 13275  0470  0141               	movlb	1	; select bank1
 13276  0471  084F               	movf	(efgtoa@h+3)^(0+128),w
 13277  0472  00F4               	movwf	___fleq@ff1+3
 13278  0473  084E               	movf	(efgtoa@h+2)^(0+128),w
 13279  0474  00F3               	movwf	___fleq@ff1+2
 13280  0475  084D               	movf	(efgtoa@h+1)^(0+128),w
 13281  0476  00F2               	movwf	___fleq@ff1+1
 13282  0477  084C               	movf	efgtoa@h^(0+128),w
 13283  0478  00F1               	movwf	___fleq@ff1
 13284  0479  0853               	movf	(efgtoa@l+3)^(0+128),w
 13285  047A  00F8               	movwf	___fleq@ff2+3
 13286  047B  0852               	movf	(efgtoa@l+2)^(0+128),w
 13287  047C  00F7               	movwf	___fleq@ff2+2
 13288  047D  0851               	movf	(efgtoa@l+1)^(0+128),w
 13289  047E  00F6               	movwf	___fleq@ff2+1
 13290  047F  0850               	movf	efgtoa@l^(0+128),w
 13291  0480  00F5               	movwf	___fleq@ff2
 13292  0481  319C  242D  3180   	fcall	___fleq
 13293  0484  1C03               	btfss	3,0
 13294  0485  2C87               	goto	u7771
 13295  0486  2C88               	goto	u7770
 13296  0487                     u7771:
 13297  0487  2C95               	goto	l6259
 13298  0488                     u7770:
 13299  0488                     l6255:
 13300  0488  0141               	movlb	1	; select bank1
 13301  0489  1841               	btfsc	efgtoa@d^(0+128),0
 13302  048A  2C8C               	goto	u7781
 13303  048B  2C8D               	goto	u7780
 13304  048C                     u7781:
 13305  048C  2C95               	goto	l6259
 13306  048D                     u7780:
 13307  048D                     l6257:
 13308                           
 13309                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 446:             l = 0.0;
 13310  048D  3000               	movlw	0
 13311  048E  00D3               	movwf	(efgtoa@l+3)^(0+128)
 13312  048F  3000               	movlw	0
 13313  0490  00D2               	movwf	(efgtoa@l+2)^(0+128)
 13314  0491  3000               	movlw	0
 13315  0492  00D1               	movwf	(efgtoa@l+1)^(0+128)
 13316  0493  3000               	movlw	0
 13317  0494  00D0               	movwf	efgtoa@l^(0+128)
 13318  0495                     l6259:
 13319                           
 13320                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 451:     h = g + l;
 13321  0495  0141               	movlb	1	; select bank1
 13322  0496  0853               	movf	(efgtoa@l+3)^(0+128),w
 13323  0497  00F4               	movwf	___fladd@b+3
 13324  0498  0852               	movf	(efgtoa@l+2)^(0+128),w
 13325  0499  00F3               	movwf	___fladd@b+2
 13326  049A  0851               	movf	(efgtoa@l+1)^(0+128),w
 13327  049B  00F2               	movwf	___fladd@b+1
 13328  049C  0850               	movf	efgtoa@l^(0+128),w
 13329  049D  00F1               	movwf	___fladd@b
 13330  049E  0859               	movf	(efgtoa@g+3)^(0+128),w
 13331  049F  00F8               	movwf	___fladd@a+3
 13332  04A0  0858               	movf	(efgtoa@g+2)^(0+128),w
 13333  04A1  00F7               	movwf	___fladd@a+2
 13334  04A2  0857               	movf	(efgtoa@g+1)^(0+128),w
 13335  04A3  00F6               	movwf	___fladd@a+1
 13336  04A4  0856               	movf	efgtoa@g^(0+128),w
 13337  04A5  00F5               	movwf	___fladd@a
 13338  04A6  3188  2004  3180   	fcall	___fladd
 13339  04A9  0874               	movf	?___fladd+3,w
 13340  04AA  0141               	movlb	1	; select bank1
 13341  04AB  00CF               	movwf	(efgtoa@h+3)^(0+128)
 13342  04AC  0873               	movf	?___fladd+2,w
 13343  04AD  00CE               	movwf	(efgtoa@h+2)^(0+128)
 13344  04AE  0872               	movf	?___fladd+1,w
 13345  04AF  00CD               	movwf	(efgtoa@h+1)^(0+128)
 13346  04B0  0871               	movf	?___fladd,w
 13347  04B1  00CC               	movwf	efgtoa@h^(0+128)
 13348  04B2                     l6261:
 13349                           
 13350                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 453:  if (h >= (ou*10.0)) {
 13351  04B2  084F               	movf	(efgtoa@h+3)^(0+128),w
 13352  04B3  0140               	movlb	0	; select bank0
 13353  04B4  00C3               	movwf	___flge@ff1+3
 13354  04B5  0141               	movlb	1	; select bank1
 13355  04B6  084E               	movf	(efgtoa@h+2)^(0+128),w
 13356  04B7  0140               	movlb	0	; select bank0
 13357  04B8  00C2               	movwf	___flge@ff1+2
 13358  04B9  0141               	movlb	1	; select bank1
 13359  04BA  084D               	movf	(efgtoa@h+1)^(0+128),w
 13360  04BB  0140               	movlb	0	; select bank0
 13361  04BC  00C1               	movwf	___flge@ff1+1
 13362  04BD  0141               	movlb	1	; select bank1
 13363  04BE  084C               	movf	efgtoa@h^(0+128),w
 13364  04BF  0140               	movlb	0	; select bank0
 13365  04C0  00C0               	movwf	___flge@ff1
 13366  04C1  3041               	movlw	65
 13367  04C2  00A9               	movwf	___flmul@b+3
 13368  04C3  3020               	movlw	32
 13369  04C4  00A8               	movwf	___flmul@b+2
 13370  04C5  3000               	movlw	0
 13371  04C6  00A7               	movwf	___flmul@b+1
 13372  04C7  3000               	movlw	0
 13373  04C8  00A6               	movwf	___flmul@b
 13374  04C9  0141               	movlb	1	; select bank1
 13375  04CA  0840               	movf	(efgtoa@ou+3)^(0+128),w
 13376  04CB  0140               	movlb	0	; select bank0
 13377  04CC  00AD               	movwf	___flmul@a+3
 13378  04CD  0141               	movlb	1	; select bank1
 13379  04CE  083F               	movf	(efgtoa@ou+2)^(0+128),w
 13380  04CF  0140               	movlb	0	; select bank0
 13381  04D0  00AC               	movwf	___flmul@a+2
 13382  04D1  0141               	movlb	1	; select bank1
 13383  04D2  083E               	movf	(efgtoa@ou+1)^(0+128),w
 13384  04D3  0140               	movlb	0	; select bank0
 13385  04D4  00AB               	movwf	___flmul@a+1
 13386  04D5  0141               	movlb	1	; select bank1
 13387  04D6  083D               	movf	efgtoa@ou^(0+128),w
 13388  04D7  0140               	movlb	0	; select bank0
 13389  04D8  00AA               	movwf	___flmul@a
 13390  04D9  3195  25A9  3180   	fcall	___flmul
 13391  04DC  0140               	movlb	0	; select bank0
 13392  04DD  0829               	movf	?___flmul+3,w
 13393  04DE  00C7               	movwf	___flge@ff2+3
 13394  04DF  0828               	movf	?___flmul+2,w
 13395  04E0  00C6               	movwf	___flge@ff2+2
 13396  04E1  0827               	movf	?___flmul+1,w
 13397  04E2  00C5               	movwf	___flge@ff2+1
 13398  04E3  0826               	movf	?___flmul,w
 13399  04E4  00C4               	movwf	___flge@ff2
 13400  04E5  319E  26C8  3180   	fcall	___flge
 13401  04E8  1C03               	btfss	3,0
 13402  04E9  2CEB               	goto	u7791
 13403  04EA  2CEC               	goto	u7790
 13404  04EB                     u7791:
 13405  04EB  2D27               	goto	l1380
 13406  04EC                     u7790:
 13407  04EC                     l6263:
 13408                           
 13409                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 454:   e++;
 13410  04EC  3001               	movlw	1
 13411  04ED  0141               	movlb	1	; select bank1
 13412  04EE  07DA               	addwf	efgtoa@e^(0+128),f
 13413  04EF  3000               	movlw	0
 13414  04F0  3DDB               	addwfc	(efgtoa@e+1)^(0+128),f
 13415  04F1                     l6265:
 13416                           
 13417                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 455:   ou *= 10.0;
 13418  04F1  3041               	movlw	65
 13419  04F2  0140               	movlb	0	; select bank0
 13420  04F3  00A9               	movwf	___flmul@b+3
 13421  04F4  3020               	movlw	32
 13422  04F5  00A8               	movwf	___flmul@b+2
 13423  04F6  3000               	movlw	0
 13424  04F7  00A7               	movwf	___flmul@b+1
 13425  04F8  3000               	movlw	0
 13426  04F9  00A6               	movwf	___flmul@b
 13427  04FA  0141               	movlb	1	; select bank1
 13428  04FB  0840               	movf	(efgtoa@ou+3)^(0+128),w
 13429  04FC  0140               	movlb	0	; select bank0
 13430  04FD  00AD               	movwf	___flmul@a+3
 13431  04FE  0141               	movlb	1	; select bank1
 13432  04FF  083F               	movf	(efgtoa@ou+2)^(0+128),w
 13433  0500  0140               	movlb	0	; select bank0
 13434  0501  00AC               	movwf	___flmul@a+2
 13435  0502  0141               	movlb	1	; select bank1
 13436  0503  083E               	movf	(efgtoa@ou+1)^(0+128),w
 13437  0504  0140               	movlb	0	; select bank0
 13438  0505  00AB               	movwf	___flmul@a+1
 13439  0506  0141               	movlb	1	; select bank1
 13440  0507  083D               	movf	efgtoa@ou^(0+128),w
 13441  0508  0140               	movlb	0	; select bank0
 13442  0509  00AA               	movwf	___flmul@a
 13443  050A  3195  25A9  3180   	fcall	___flmul
 13444  050D  0140               	movlb	0	; select bank0
 13445  050E  0829               	movf	?___flmul+3,w
 13446  050F  0141               	movlb	1	; select bank1
 13447  0510  00C0               	movwf	(efgtoa@ou+3)^(0+128)
 13448  0511  0140               	movlb	0	; select bank0
 13449  0512  0828               	movf	?___flmul+2,w
 13450  0513  0141               	movlb	1	; select bank1
 13451  0514  00BF               	movwf	(efgtoa@ou+2)^(0+128)
 13452  0515  0140               	movlb	0	; select bank0
 13453  0516  0827               	movf	?___flmul+1,w
 13454  0517  0141               	movlb	1	; select bank1
 13455  0518  00BE               	movwf	(efgtoa@ou+1)^(0+128)
 13456  0519  0140               	movlb	0	; select bank0
 13457  051A  0826               	movf	?___flmul,w
 13458  051B  0141               	movlb	1	; select bank1
 13459  051C  00BD               	movwf	efgtoa@ou^(0+128)
 13460  051D                     l6267:
 13461                           
 13462                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 456:   if (nmode == 'f') {
 13463  051D  3066               	movlw	102
 13464  051E  064A               	xorwf	efgtoa@nmode^(0+128),w
 13465  051F  1D03               	btfss	3,2
 13466  0520  2D22               	goto	u7801
 13467  0521  2D23               	goto	u7800
 13468  0522                     u7801:
 13469  0522  2D27               	goto	l1380
 13470  0523                     u7800:
 13471  0523                     l6269:
 13472                           
 13473                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 458:    m++;
 13474  0523  3001               	movlw	1
 13475  0524  07BB               	addwf	efgtoa@m^(0+128),f
 13476  0525  3000               	movlw	0
 13477  0526  3DBC               	addwfc	(efgtoa@m+1)^(0+128),f
 13478  0527                     l1380:	
 13479                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 460:  }
 13480                           
 13481                           
 13482                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 463:     u = ou;
 13483  0527  0141               	movlb	1	; select bank1
 13484  0528  0840               	movf	(efgtoa@ou+3)^(0+128),w
 13485  0529  00E1               	movwf	(efgtoa@u+3)^(0+128)
 13486  052A  083F               	movf	(efgtoa@ou+2)^(0+128),w
 13487  052B  00E0               	movwf	(efgtoa@u+2)^(0+128)
 13488  052C  083E               	movf	(efgtoa@ou+1)^(0+128),w
 13489  052D  00DF               	movwf	(efgtoa@u+1)^(0+128)
 13490  052E  083D               	movf	efgtoa@ou^(0+128),w
 13491  052F  00DE               	movwf	efgtoa@u^(0+128)
 13492  0530                     l6271:
 13493                           
 13494                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 464:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 13495  0530  3065               	movlw	101
 13496  0531  064A               	xorwf	efgtoa@nmode^(0+128),w
 13497  0532  1903               	btfsc	3,2
 13498  0533  2D35               	goto	u7811
 13499  0534  2D36               	goto	u7810
 13500  0535                     u7811:
 13501  0535  2D3B               	goto	l6275
 13502  0536                     u7810:
 13503  0536                     l6273:
 13504  0536  085B               	movf	(efgtoa@e+1)^(0+128),w
 13505  0537  00BA               	movwf	(efgtoa@ne+1)^(0+128)
 13506  0538  085A               	movf	efgtoa@e^(0+128),w
 13507  0539  00B9               	movwf	efgtoa@ne^(0+128)
 13508  053A  2D3D               	goto	l1385
 13509  053B                     l6275:
 13510  053B  01B9               	clrf	efgtoa@ne^(0+128)
 13511  053C  01BA               	clrf	(efgtoa@ne+1)^(0+128)
 13512  053D                     l1385:
 13513                           
 13514                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 465:     pp = 0;
 13515  053D  01B7               	clrf	efgtoa@pp^(0+128)
 13516  053E  01B8               	clrf	(efgtoa@pp+1)^(0+128)
 13517                           
 13518                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 466:     t = 0;
 13519  053F  01B5               	clrf	efgtoa@t^(0+128)
 13520  0540  01B6               	clrf	(efgtoa@t+1)^(0+128)
 13521                           
 13522                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 467:     i = 0;
 13523  0541  01D4               	clrf	efgtoa@i^(0+128)
 13524  0542  01D5               	clrf	(efgtoa@i+1)^(0+128)
 13525                           
 13526                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 468:     while ((i < m) && (n
      +                           < (80 - 5))) {
 13527  0543  2E7E               	goto	l6325
 13528  0544                     l6277:
 13529                           
 13530                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 469:         l = floorf(h/u);
 13531  0544  0141               	movlb	1	; select bank1
 13532  0545  0861               	movf	(efgtoa@u+3)^(0+128),w
 13533  0546  0140               	movlb	0	; select bank0
 13534  0547  00C3               	movwf	___fldiv@a+3
 13535  0548  0141               	movlb	1	; select bank1
 13536  0549  0860               	movf	(efgtoa@u+2)^(0+128),w
 13537  054A  0140               	movlb	0	; select bank0
 13538  054B  00C2               	movwf	___fldiv@a+2
 13539  054C  0141               	movlb	1	; select bank1
 13540  054D  085F               	movf	(efgtoa@u+1)^(0+128),w
 13541  054E  0140               	movlb	0	; select bank0
 13542  054F  00C1               	movwf	___fldiv@a+1
 13543  0550  0141               	movlb	1	; select bank1
 13544  0551  085E               	movf	efgtoa@u^(0+128),w
 13545  0552  0140               	movlb	0	; select bank0
 13546  0553  00C0               	movwf	___fldiv@a
 13547  0554  0141               	movlb	1	; select bank1
 13548  0555  084F               	movf	(efgtoa@h+3)^(0+128),w
 13549  0556  0140               	movlb	0	; select bank0
 13550  0557  00C7               	movwf	___fldiv@b+3
 13551  0558  0141               	movlb	1	; select bank1
 13552  0559  084E               	movf	(efgtoa@h+2)^(0+128),w
 13553  055A  0140               	movlb	0	; select bank0
 13554  055B  00C6               	movwf	___fldiv@b+2
 13555  055C  0141               	movlb	1	; select bank1
 13556  055D  084D               	movf	(efgtoa@h+1)^(0+128),w
 13557  055E  0140               	movlb	0	; select bank0
 13558  055F  00C5               	movwf	___fldiv@b+1
 13559  0560  0141               	movlb	1	; select bank1
 13560  0561  084C               	movf	efgtoa@h^(0+128),w
 13561  0562  0140               	movlb	0	; select bank0
 13562  0563  00C4               	movwf	___fldiv@b
 13563  0564  3193  23F5  3180   	fcall	___fldiv
 13564  0567  0140               	movlb	0	; select bank0
 13565  0568  0843               	movf	?___fldiv+3,w
 13566  0569  00DD               	movwf	floorf@x+3
 13567  056A  0842               	movf	?___fldiv+2,w
 13568  056B  00DC               	movwf	floorf@x+2
 13569  056C  0841               	movf	?___fldiv+1,w
 13570  056D  00DB               	movwf	floorf@x+1
 13571  056E  0840               	movf	?___fldiv,w
 13572  056F  00DA               	movwf	floorf@x
 13573  0570  3191  212E  3180   	fcall	_floorf
 13574  0573  0140               	movlb	0	; select bank0
 13575  0574  085D               	movf	?_floorf+3,w
 13576  0575  0141               	movlb	1	; select bank1
 13577  0576  00D3               	movwf	(efgtoa@l+3)^(0+128)
 13578  0577  0140               	movlb	0	; select bank0
 13579  0578  085C               	movf	?_floorf+2,w
 13580  0579  0141               	movlb	1	; select bank1
 13581  057A  00D2               	movwf	(efgtoa@l+2)^(0+128)
 13582  057B  0140               	movlb	0	; select bank0
 13583  057C  085B               	movf	?_floorf+1,w
 13584  057D  0141               	movlb	1	; select bank1
 13585  057E  00D1               	movwf	(efgtoa@l+1)^(0+128)
 13586  057F  0140               	movlb	0	; select bank0
 13587  0580  085A               	movf	?_floorf,w
 13588  0581  0141               	movlb	1	; select bank1
 13589  0582  00D0               	movwf	efgtoa@l^(0+128)
 13590                           
 13591                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 470:         d = (int)l;
 13592  0583  0853               	movf	(efgtoa@l+3)^(0+128),w
 13593  0584  00F4               	movwf	___fltol@f1+3
 13594  0585  0852               	movf	(efgtoa@l+2)^(0+128),w
 13595  0586  00F3               	movwf	___fltol@f1+2
 13596  0587  0851               	movf	(efgtoa@l+1)^(0+128),w
 13597  0588  00F2               	movwf	___fltol@f1+1
 13598  0589  0850               	movf	efgtoa@l^(0+128),w
 13599  058A  00F1               	movwf	___fltol@f1
 13600  058B  319D  25DD  3180   	fcall	___fltol
 13601  058E  0872               	movf	?___fltol+1,w
 13602  058F  0141               	movlb	1	; select bank1
 13603  0590  00C2               	movwf	(efgtoa@d+1)^(0+128)
 13604  0591  0871               	movf	?___fltol,w
 13605  0592  00C1               	movwf	efgtoa@d^(0+128)
 13606  0593                     l6279:
 13607                           
 13608                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 471:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 13609  0593  0143               	movlb	3	; select bank3
 13610  0594  1A4E               	btfsc	_flags^(0+384),4
 13611  0595  2D97               	goto	u7821
 13612  0596  2D98               	goto	u7820
 13613  0597                     u7821:
 13614  0597  2DAE               	goto	l6289
 13615  0598                     u7820:
 13616  0598                     l6281:
 13617  0598  0141               	movlb	1	; select bank1
 13618  0599  0841               	movf	efgtoa@d^(0+128),w
 13619  059A  0442               	iorwf	(efgtoa@d+1)^(0+128),w
 13620  059B  1D03               	btfss	3,2
 13621  059C  2D9E               	goto	u7831
 13622  059D  2D9F               	goto	u7830
 13623  059E                     u7831:
 13624  059E  2DAE               	goto	l6289
 13625  059F                     u7830:
 13626  059F                     l6283:
 13627  059F  3067               	movlw	103
 13628  05A0  064B               	xorwf	efgtoa@mode^(0+128),w
 13629  05A1  1D03               	btfss	3,2
 13630  05A2  2DA4               	goto	u7841
 13631  05A3  2DA5               	goto	u7840
 13632  05A4                     u7841:
 13633  05A4  2DAE               	goto	l6289
 13634  05A5                     u7840:
 13635  05A5                     l6285:
 13636  05A5  1FBA               	btfss	(efgtoa@ne+1)^(0+128),7
 13637  05A6  2DA8               	goto	u7851
 13638  05A7  2DA9               	goto	u7850
 13639  05A8                     u7851:
 13640  05A8  2DAE               	goto	l6289
 13641  05A9                     u7850:
 13642  05A9                     l6287:
 13643                           
 13644                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 472:             ++t;
 13645  05A9  3001               	movlw	1
 13646  05AA  07B5               	addwf	efgtoa@t^(0+128),f
 13647  05AB  3000               	movlw	0
 13648  05AC  3DB6               	addwfc	(efgtoa@t+1)^(0+128),f
 13649                           
 13650                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 473:         } else {
 13651  05AD  2DFC               	goto	l6317
 13652  05AE                     l6289:
 13653                           
 13654                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 474:             if (!pp && (
      +                          ne < 0)) {
 13655  05AE  0141               	movlb	1	; select bank1
 13656  05AF  0837               	movf	efgtoa@pp^(0+128),w
 13657  05B0  0438               	iorwf	(efgtoa@pp+1)^(0+128),w
 13658  05B1  1D03               	btfss	3,2
 13659  05B2  2DB4               	goto	u7861
 13660  05B3  2DB5               	goto	u7860
 13661  05B4                     u7861:
 13662  05B4  2DE4               	goto	l6309
 13663  05B5                     u7860:
 13664  05B5                     l6291:
 13665  05B5  1FBA               	btfss	(efgtoa@ne+1)^(0+128),7
 13666  05B6  2DB8               	goto	u7871
 13667  05B7  2DB9               	goto	u7870
 13668  05B8                     u7871:
 13669  05B8  2DE4               	goto	l6309
 13670  05B9                     u7870:
 13671  05B9                     l6293:
 13672                           
 13673                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 475:                 dbuf[n++
      +                          ] = '.';
 13674  05B9  302E               	movlw	46
 13675  05BA  00A5               	movwf	??_efgtoa^(0+128)
 13676  05BB  085C               	movf	efgtoa@n^(0+128),w
 13677  05BC  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 13678  05BD  0086               	movwf	6
 13679  05BE  3002               	movlw	2	; select bank4/5
 13680  05BF  0087               	movwf	7
 13681  05C0  0825               	movf	??_efgtoa^(0+128),w
 13682  05C1  0081               	movwf	1
 13683  05C2                     l6295:
 13684  05C2  3001               	movlw	1
 13685  05C3  07DC               	addwf	efgtoa@n^(0+128),f
 13686  05C4  3000               	movlw	0
 13687  05C5  3DDD               	addwfc	(efgtoa@n+1)^(0+128),f
 13688  05C6                     l6297:
 13689                           
 13690                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 476:                 --w;
 13691  05C6  30FF               	movlw	255
 13692  05C7  07C8               	addwf	efgtoa@w^(0+128),f
 13693  05C8  30FF               	movlw	255
 13694  05C9  3DC9               	addwfc	(efgtoa@w+1)^(0+128),f
 13695  05CA                     l6299:
 13696                           
 13697                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 477:                 pp = 1;
 13698  05CA  3001               	movlw	1
 13699  05CB  00B7               	movwf	efgtoa@pp^(0+128)
 13700  05CC  3000               	movlw	0
 13701  05CD  00B8               	movwf	(efgtoa@pp^(0+128)+1)
 13702  05CE  2DE4               	goto	l6309
 13703  05CF                     l6301:
 13704                           
 13705                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 480:                 dbuf[n++
      +                          ] = '0';
 13706  05CF  3030               	movlw	48
 13707  05D0  00A5               	movwf	??_efgtoa^(0+128)
 13708  05D1  085C               	movf	efgtoa@n^(0+128),w
 13709  05D2  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 13710  05D3  0086               	movwf	6
 13711  05D4  3002               	movlw	2	; select bank4/5
 13712  05D5  0087               	movwf	7
 13713  05D6  0825               	movf	??_efgtoa^(0+128),w
 13714  05D7  0081               	movwf	1
 13715  05D8                     l6303:
 13716  05D8  3001               	movlw	1
 13717  05D9  07DC               	addwf	efgtoa@n^(0+128),f
 13718  05DA  3000               	movlw	0
 13719  05DB  3DDD               	addwfc	(efgtoa@n+1)^(0+128),f
 13720  05DC                     l6305:
 13721                           
 13722                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 481:                 --w;
 13723  05DC  30FF               	movlw	255
 13724  05DD  07C8               	addwf	efgtoa@w^(0+128),f
 13725  05DE  30FF               	movlw	255
 13726  05DF  3DC9               	addwfc	(efgtoa@w+1)^(0+128),f
 13727  05E0                     l6307:
 13728                           
 13729                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 482:                 --t;
 13730  05E0  30FF               	movlw	255
 13731  05E1  07B5               	addwf	efgtoa@t^(0+128),f
 13732  05E2  30FF               	movlw	255
 13733  05E3  3DB6               	addwfc	(efgtoa@t+1)^(0+128),f
 13734  05E4                     l6309:
 13735                           
 13736                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 479:             while (t) {
 13737  05E4  0835               	movf	efgtoa@t^(0+128),w
 13738  05E5  0436               	iorwf	(efgtoa@t+1)^(0+128),w
 13739  05E6  1D03               	btfss	3,2
 13740  05E7  2DE9               	goto	u7881
 13741  05E8  2DEA               	goto	u7880
 13742  05E9                     u7881:
 13743  05E9  2DCF               	goto	l6301
 13744  05EA                     u7880:
 13745  05EA                     l6311:
 13746                           
 13747                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 484:             dbuf[n++] = 
      +                          (char)((int)'0' + d);
 13748  05EA  0841               	movf	efgtoa@d^(0+128),w
 13749  05EB  3E30               	addlw	48
 13750  05EC  00A5               	movwf	??_efgtoa^(0+128)
 13751  05ED  085C               	movf	efgtoa@n^(0+128),w
 13752  05EE  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 13753  05EF  0086               	movwf	6
 13754  05F0  3002               	movlw	2	; select bank4/5
 13755  05F1  0087               	movwf	7
 13756  05F2  0825               	movf	??_efgtoa^(0+128),w
 13757  05F3  0081               	movwf	1
 13758  05F4                     l6313:
 13759  05F4  3001               	movlw	1
 13760  05F5  07DC               	addwf	efgtoa@n^(0+128),f
 13761  05F6  3000               	movlw	0
 13762  05F7  3DDD               	addwfc	(efgtoa@n+1)^(0+128),f
 13763  05F8                     l6315:
 13764                           
 13765                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 485:             --w;
 13766  05F8  30FF               	movlw	255
 13767  05F9  07C8               	addwf	efgtoa@w^(0+128),f
 13768  05FA  30FF               	movlw	255
 13769  05FB  3DC9               	addwfc	(efgtoa@w+1)^(0+128),f
 13770  05FC                     l6317:
 13771                           
 13772                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 487:         h -= l*u;
 13773  05FC  0853               	movf	(efgtoa@l+3)^(0+128),w
 13774  05FD  0140               	movlb	0	; select bank0
 13775  05FE  00AD               	movwf	___flmul@a+3
 13776  05FF  0141               	movlb	1	; select bank1
 13777  0600  0852               	movf	(efgtoa@l+2)^(0+128),w
 13778  0601  0140               	movlb	0	; select bank0
 13779  0602  00AC               	movwf	___flmul@a+2
 13780  0603  0141               	movlb	1	; select bank1
 13781  0604  0851               	movf	(efgtoa@l+1)^(0+128),w
 13782  0605  0140               	movlb	0	; select bank0
 13783  0606  00AB               	movwf	___flmul@a+1
 13784  0607  0141               	movlb	1	; select bank1
 13785  0608  0850               	movf	efgtoa@l^(0+128),w
 13786  0609  0140               	movlb	0	; select bank0
 13787  060A  00AA               	movwf	___flmul@a
 13788  060B  0141               	movlb	1	; select bank1
 13789  060C  0861               	movf	(efgtoa@u+3)^(0+128),w
 13790  060D  0140               	movlb	0	; select bank0
 13791  060E  00A9               	movwf	___flmul@b+3
 13792  060F  0141               	movlb	1	; select bank1
 13793  0610  0860               	movf	(efgtoa@u+2)^(0+128),w
 13794  0611  0140               	movlb	0	; select bank0
 13795  0612  00A8               	movwf	___flmul@b+2
 13796  0613  0141               	movlb	1	; select bank1
 13797  0614  085F               	movf	(efgtoa@u+1)^(0+128),w
 13798  0615  0140               	movlb	0	; select bank0
 13799  0616  00A7               	movwf	___flmul@b+1
 13800  0617  0141               	movlb	1	; select bank1
 13801  0618  085E               	movf	efgtoa@u^(0+128),w
 13802  0619  0140               	movlb	0	; select bank0
 13803  061A  00A6               	movwf	___flmul@b
 13804  061B  3195  25A9  3180   	fcall	___flmul
 13805  061E  0140               	movlb	0	; select bank0
 13806  061F  0829               	movf	?___flmul+3,w
 13807  0620  00C3               	movwf	___flsub@a+3
 13808  0621  0828               	movf	?___flmul+2,w
 13809  0622  00C2               	movwf	___flsub@a+2
 13810  0623  0827               	movf	?___flmul+1,w
 13811  0624  00C1               	movwf	___flsub@a+1
 13812  0625  0826               	movf	?___flmul,w
 13813  0626  00C0               	movwf	___flsub@a
 13814  0627  0141               	movlb	1	; select bank1
 13815  0628  084F               	movf	(efgtoa@h+3)^(0+128),w
 13816  0629  0140               	movlb	0	; select bank0
 13817  062A  00C7               	movwf	___flsub@b+3
 13818  062B  0141               	movlb	1	; select bank1
 13819  062C  084E               	movf	(efgtoa@h+2)^(0+128),w
 13820  062D  0140               	movlb	0	; select bank0
 13821  062E  00C6               	movwf	___flsub@b+2
 13822  062F  0141               	movlb	1	; select bank1
 13823  0630  084D               	movf	(efgtoa@h+1)^(0+128),w
 13824  0631  0140               	movlb	0	; select bank0
 13825  0632  00C5               	movwf	___flsub@b+1
 13826  0633  0141               	movlb	1	; select bank1
 13827  0634  084C               	movf	efgtoa@h^(0+128),w
 13828  0635  0140               	movlb	0	; select bank0
 13829  0636  00C4               	movwf	___flsub@b
 13830  0637  3198  203B  3180   	fcall	___flsub
 13831  063A  0140               	movlb	0	; select bank0
 13832  063B  0843               	movf	?___flsub+3,w
 13833  063C  0141               	movlb	1	; select bank1
 13834  063D  00CF               	movwf	(efgtoa@h+3)^(0+128)
 13835  063E  0140               	movlb	0	; select bank0
 13836  063F  0842               	movf	?___flsub+2,w
 13837  0640  0141               	movlb	1	; select bank1
 13838  0641  00CE               	movwf	(efgtoa@h+2)^(0+128)
 13839  0642  0140               	movlb	0	; select bank0
 13840  0643  0841               	movf	?___flsub+1,w
 13841  0644  0141               	movlb	1	; select bank1
 13842  0645  00CD               	movwf	(efgtoa@h+1)^(0+128)
 13843  0646  0140               	movlb	0	; select bank0
 13844  0647  0840               	movf	?___flsub,w
 13845  0648  0141               	movlb	1	; select bank1
 13846  0649  00CC               	movwf	efgtoa@h^(0+128)
 13847  064A                     l6319:
 13848                           
 13849                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 488:         u = u/10.0;
 13850  064A  3041               	movlw	65
 13851  064B  0140               	movlb	0	; select bank0
 13852  064C  00C3               	movwf	___fldiv@a+3
 13853  064D  3020               	movlw	32
 13854  064E  00C2               	movwf	___fldiv@a+2
 13855  064F  3000               	movlw	0
 13856  0650  00C1               	movwf	___fldiv@a+1
 13857  0651  3000               	movlw	0
 13858  0652  00C0               	movwf	___fldiv@a
 13859  0653  0141               	movlb	1	; select bank1
 13860  0654  0861               	movf	(efgtoa@u+3)^(0+128),w
 13861  0655  0140               	movlb	0	; select bank0
 13862  0656  00C7               	movwf	___fldiv@b+3
 13863  0657  0141               	movlb	1	; select bank1
 13864  0658  0860               	movf	(efgtoa@u+2)^(0+128),w
 13865  0659  0140               	movlb	0	; select bank0
 13866  065A  00C6               	movwf	___fldiv@b+2
 13867  065B  0141               	movlb	1	; select bank1
 13868  065C  085F               	movf	(efgtoa@u+1)^(0+128),w
 13869  065D  0140               	movlb	0	; select bank0
 13870  065E  00C5               	movwf	___fldiv@b+1
 13871  065F  0141               	movlb	1	; select bank1
 13872  0660  085E               	movf	efgtoa@u^(0+128),w
 13873  0661  0140               	movlb	0	; select bank0
 13874  0662  00C4               	movwf	___fldiv@b
 13875  0663  3193  23F5  3180   	fcall	___fldiv
 13876  0666  0140               	movlb	0	; select bank0
 13877  0667  0843               	movf	?___fldiv+3,w
 13878  0668  0141               	movlb	1	; select bank1
 13879  0669  00E1               	movwf	(efgtoa@u+3)^(0+128)
 13880  066A  0140               	movlb	0	; select bank0
 13881  066B  0842               	movf	?___fldiv+2,w
 13882  066C  0141               	movlb	1	; select bank1
 13883  066D  00E0               	movwf	(efgtoa@u+2)^(0+128)
 13884  066E  0140               	movlb	0	; select bank0
 13885  066F  0841               	movf	?___fldiv+1,w
 13886  0670  0141               	movlb	1	; select bank1
 13887  0671  00DF               	movwf	(efgtoa@u+1)^(0+128)
 13888  0672  0140               	movlb	0	; select bank0
 13889  0673  0840               	movf	?___fldiv,w
 13890  0674  0141               	movlb	1	; select bank1
 13891  0675  00DE               	movwf	efgtoa@u^(0+128)
 13892  0676                     l6321:
 13893                           
 13894                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 489:         --ne;
 13895  0676  30FF               	movlw	255
 13896  0677  07B9               	addwf	efgtoa@ne^(0+128),f
 13897  0678  30FF               	movlw	255
 13898  0679  3DBA               	addwfc	(efgtoa@ne+1)^(0+128),f
 13899  067A                     l6323:
 13900                           
 13901                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 490:         ++i;
 13902  067A  3001               	movlw	1
 13903  067B  07D4               	addwf	efgtoa@i^(0+128),f
 13904  067C  3000               	movlw	0
 13905  067D  3DD5               	addwfc	(efgtoa@i+1)^(0+128),f
 13906  067E                     l6325:
 13907                           
 13908                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 468:     while ((i < m) && (n
      +                           < (80 - 5))) {
 13909  067E  0855               	movf	(efgtoa@i+1)^(0+128),w
 13910  067F  3A80               	xorlw	128
 13911  0680  00A5               	movwf	??_efgtoa^(0+128)
 13912  0681  083C               	movf	(efgtoa@m+1)^(0+128),w
 13913  0682  3A80               	xorlw	128
 13914  0683  0225               	subwf	??_efgtoa^(0+128),w
 13915  0684  1D03               	skipz
 13916  0685  2E88               	goto	u7895
 13917  0686  083B               	movf	efgtoa@m^(0+128),w
 13918  0687  0254               	subwf	efgtoa@i^(0+128),w
 13919  0688                     u7895:
 13920  0688  1803               	skipnc
 13921  0689  2E8B               	goto	u7891
 13922  068A  2E8C               	goto	u7890
 13923  068B                     u7891:
 13924  068B  2E9A               	goto	l6329
 13925  068C                     u7890:
 13926  068C                     l6327:
 13927  068C  0141               	movlb	1	; select bank1
 13928  068D  085D               	movf	(efgtoa@n+1)^(0+128),w
 13929  068E  3A80               	xorlw	128
 13930  068F  00A5               	movwf	??_efgtoa^(0+128)
 13931  0690  3080               	movlw	128
 13932  0691  0225               	subwf	??_efgtoa^(0+128),w
 13933  0692  1D03               	skipz
 13934  0693  2E96               	goto	u7905
 13935  0694  304B               	movlw	75
 13936  0695  025C               	subwf	efgtoa@n^(0+128),w
 13937  0696                     u7905:
 13938  0696  1C03               	skipc
 13939  0697  2E99               	goto	u7901
 13940  0698  2E9A               	goto	u7900
 13941  0699                     u7901:
 13942  0699  2D44               	goto	l6277
 13943  069A                     u7900:
 13944  069A                     l6329:
 13945                           
 13946                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 492:     if (!pp && (flags & 
      +                          (1 << 4))) {
 13947  069A  0141               	movlb	1	; select bank1
 13948  069B  0837               	movf	efgtoa@pp^(0+128),w
 13949  069C  0438               	iorwf	(efgtoa@pp+1)^(0+128),w
 13950  069D  1D03               	btfss	3,2
 13951  069E  2EA0               	goto	u7911
 13952  069F  2EA1               	goto	u7910
 13953  06A0                     u7911:
 13954  06A0  2EB4               	goto	l6337
 13955  06A1                     u7910:
 13956  06A1                     l6331:
 13957  06A1  0143               	movlb	3	; select bank3
 13958  06A2  1E4E               	btfss	_flags^(0+384),4
 13959  06A3  2EA5               	goto	u7921
 13960  06A4  2EA6               	goto	u7920
 13961  06A5                     u7921:
 13962  06A5  2EB4               	goto	l6337
 13963  06A6                     u7920:
 13964  06A6                     l6333:
 13965                           
 13966                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 493:         dbuf[n++] = '.';
 13967  06A6  302E               	movlw	46
 13968  06A7  0141               	movlb	1	; select bank1
 13969  06A8  00A5               	movwf	??_efgtoa^(0+128)
 13970  06A9  085C               	movf	efgtoa@n^(0+128),w
 13971  06AA  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 13972  06AB  0086               	movwf	6
 13973  06AC  3002               	movlw	2	; select bank4/5
 13974  06AD  0087               	movwf	7
 13975  06AE  0825               	movf	??_efgtoa^(0+128),w
 13976  06AF  0081               	movwf	1
 13977  06B0                     l6335:
 13978  06B0  3001               	movlw	1
 13979  06B1  07DC               	addwf	efgtoa@n^(0+128),f
 13980  06B2  3000               	movlw	0
 13981  06B3  3DDD               	addwfc	(efgtoa@n+1)^(0+128),f
 13982  06B4                     l6337:
 13983                           
 13984                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 495:     dbuf[n] = '\0';
 13985  06B4  0141               	movlb	1	; select bank1
 13986  06B5  085C               	movf	efgtoa@n^(0+128),w
 13987  06B6  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 13988  06B7  0086               	movwf	6
 13989  06B8  3002               	movlw	2	; select bank4/5
 13990  06B9  0087               	movwf	7
 13991  06BA  0181               	clrf	1
 13992  06BB                     l6339:
 13993                           
 13994                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 498:     if (nmode == 'e') {
 13995  06BB  3065               	movlw	101
 13996  06BC  064A               	xorwf	efgtoa@nmode^(0+128),w
 13997  06BD  1D03               	btfss	3,2
 13998  06BE  2EC0               	goto	u7931
 13999  06BF  2EC1               	goto	u7930
 14000  06C0                     u7931:
 14001  06C0  2F88               	goto	l6399
 14002  06C1                     u7930:
 14003  06C1                     l6341:
 14004                           
 14005                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 499:         i = sizeof(dbuf)
      +                           - 1;
 14006  06C1  304F               	movlw	79
 14007  06C2  00D4               	movwf	efgtoa@i^(0+128)
 14008  06C3  3000               	movlw	0
 14009  06C4  00D5               	movwf	(efgtoa@i^(0+128)+1)
 14010  06C5                     l6343:
 14011                           
 14012                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 500:         dbuf[i] = '\0';
 14013  06C5  0854               	movf	efgtoa@i^(0+128),w
 14014  06C6  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 14015  06C7  0086               	movwf	6
 14016  06C8  3002               	movlw	2	; select bank4/5
 14017  06C9  0087               	movwf	7
 14018  06CA  0181               	clrf	1
 14019  06CB                     l6345:
 14020                           
 14021                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 501:         sign = 0;
 14022  06CB  01C4               	clrf	efgtoa@sign^(0+128)
 14023  06CC  01C5               	clrf	(efgtoa@sign+1)^(0+128)
 14024  06CD                     l6347:
 14025                           
 14026                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 502:         if (e < 0) {
 14027  06CD  1FDB               	btfss	(efgtoa@e+1)^(0+128),7
 14028  06CE  2ED0               	goto	u7941
 14029  06CF  2ED1               	goto	u7940
 14030  06D0                     u7941:
 14031  06D0  2EDA               	goto	l6353
 14032  06D1                     u7940:
 14033  06D1                     l6349:
 14034                           
 14035                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 503:             sign = 1;
 14036  06D1  3001               	movlw	1
 14037  06D2  00C4               	movwf	efgtoa@sign^(0+128)
 14038  06D3  3000               	movlw	0
 14039  06D4  00C5               	movwf	(efgtoa@sign^(0+128)+1)
 14040  06D5                     l6351:
 14041                           
 14042                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 504:             e = -e;
 14043  06D5  09DA               	comf	efgtoa@e^(0+128),f
 14044  06D6  09DB               	comf	(efgtoa@e+1)^(0+128),f
 14045  06D7  0ADA               	incf	efgtoa@e^(0+128),f
 14046  06D8  1903               	skipnz
 14047  06D9  0ADB               	incf	(efgtoa@e+1)^(0+128),f
 14048  06DA                     l6353:
 14049                           
 14050                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 506:         p = 2;
 14051  06DA  3002               	movlw	2
 14052  06DB  00C6               	movwf	efgtoa@p^(0+128)
 14053  06DC  3000               	movlw	0
 14054  06DD  00C7               	movwf	(efgtoa@p^(0+128)+1)
 14055                           
 14056                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 507:         while (e || (0 <
      +                           p)) {
 14057  06DE  2F12               	goto	l6365
 14058  06DF                     l6355:
 14059                           
 14060                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 508:             --i;
 14061  06DF  30FF               	movlw	255
 14062  06E0  0141               	movlb	1	; select bank1
 14063  06E1  07D4               	addwf	efgtoa@i^(0+128),f
 14064  06E2  30FF               	movlw	255
 14065  06E3  3DD5               	addwfc	(efgtoa@i+1)^(0+128),f
 14066  06E4                     l6357:
 14067                           
 14068                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 509:             dbuf[i] = '0
      +                          ' + (e % 10);
 14069  06E4  300A               	movlw	10
 14070  06E5  00F1               	movwf	___awmod@divisor
 14071  06E6  3000               	movlw	0
 14072  06E7  00F2               	movwf	___awmod@divisor+1
 14073  06E8  085B               	movf	(efgtoa@e+1)^(0+128),w
 14074  06E9  00F4               	movwf	___awmod@dividend+1
 14075  06EA  085A               	movf	efgtoa@e^(0+128),w
 14076  06EB  00F3               	movwf	___awmod@dividend
 14077  06EC  319C  247C  3180   	fcall	___awmod
 14078  06EF  0871               	movf	?___awmod,w
 14079  06F0  3E30               	addlw	48
 14080  06F1  0141               	movlb	1	; select bank1
 14081  06F2  00A5               	movwf	??_efgtoa^(0+128)
 14082  06F3  0854               	movf	efgtoa@i^(0+128),w
 14083  06F4  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 14084  06F5  0086               	movwf	6
 14085  06F6  3002               	movlw	2	; select bank4/5
 14086  06F7  0087               	movwf	7
 14087  06F8  0825               	movf	??_efgtoa^(0+128),w
 14088  06F9  0081               	movwf	1
 14089  06FA                     l6359:
 14090                           
 14091                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 510:             e = e / 10;
 14092  06FA  300A               	movlw	10
 14093  06FB  00F1               	movwf	___awdiv@divisor
 14094  06FC  3000               	movlw	0
 14095  06FD  00F2               	movwf	___awdiv@divisor+1
 14096  06FE  085B               	movf	(efgtoa@e+1)^(0+128),w
 14097  06FF  00F4               	movwf	___awdiv@dividend+1
 14098  0700  085A               	movf	efgtoa@e^(0+128),w
 14099  0701  00F3               	movwf	___awdiv@dividend
 14100  0702  319D  257E  3180   	fcall	___awdiv
 14101  0705  0872               	movf	?___awdiv+1,w
 14102  0706  0141               	movlb	1	; select bank1
 14103  0707  00DB               	movwf	(efgtoa@e+1)^(0+128)
 14104  0708  0871               	movf	?___awdiv,w
 14105  0709  00DA               	movwf	efgtoa@e^(0+128)
 14106  070A                     l6361:
 14107                           
 14108                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 511:             --p;
 14109  070A  30FF               	movlw	255
 14110  070B  07C6               	addwf	efgtoa@p^(0+128),f
 14111  070C  30FF               	movlw	255
 14112  070D  3DC7               	addwfc	(efgtoa@p+1)^(0+128),f
 14113  070E                     l6363:
 14114                           
 14115                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 512:             --w;
 14116  070E  30FF               	movlw	255
 14117  070F  07C8               	addwf	efgtoa@w^(0+128),f
 14118  0710  30FF               	movlw	255
 14119  0711  3DC9               	addwfc	(efgtoa@w+1)^(0+128),f
 14120  0712                     l6365:
 14121                           
 14122                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 507:         while (e || (0 <
      +                           p)) {
 14123  0712  085A               	movf	efgtoa@e^(0+128),w
 14124  0713  045B               	iorwf	(efgtoa@e+1)^(0+128),w
 14125  0714  1D03               	btfss	3,2
 14126  0715  2F17               	goto	u7951
 14127  0716  2F18               	goto	u7950
 14128  0717                     u7951:
 14129  0717  2EDF               	goto	l6355
 14130  0718                     u7950:
 14131  0718                     l6367:
 14132  0718  0847               	movf	(efgtoa@p+1)^(0+128),w
 14133  0719  3A80               	xorlw	128
 14134  071A  00A5               	movwf	??_efgtoa^(0+128)
 14135  071B  3080               	movlw	128
 14136  071C  0225               	subwf	??_efgtoa^(0+128),w
 14137  071D  1D03               	skipz
 14138  071E  2F21               	goto	u7965
 14139  071F  3001               	movlw	1
 14140  0720  0246               	subwf	efgtoa@p^(0+128),w
 14141  0721                     u7965:
 14142  0721  1803               	skipnc
 14143  0722  2F24               	goto	u7961
 14144  0723  2F25               	goto	u7960
 14145  0724                     u7961:
 14146  0724  2EDF               	goto	l6355
 14147  0725                     u7960:
 14148  0725                     l6369:
 14149                           
 14150                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 514:         --i;
 14151  0725  30FF               	movlw	255
 14152  0726  0141               	movlb	1	; select bank1
 14153  0727  07D4               	addwf	efgtoa@i^(0+128),f
 14154  0728  30FF               	movlw	255
 14155  0729  3DD5               	addwfc	(efgtoa@i+1)^(0+128),f
 14156  072A                     l6371:
 14157                           
 14158                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 515:         dbuf[i] = sign ?
      +                           '-' : '+';
 14159  072A  0844               	movf	efgtoa@sign^(0+128),w
 14160  072B  0445               	iorwf	(efgtoa@sign+1)^(0+128),w
 14161  072C  1D03               	btfss	3,2
 14162  072D  2F2F               	goto	u7971
 14163  072E  2F30               	goto	u7970
 14164  072F                     u7971:
 14165  072F  2F35               	goto	l6375
 14166  0730                     u7970:
 14167  0730                     l6373:
 14168  0730  302B               	movlw	43
 14169  0731  00AF               	movwf	_efgtoa$2165^(0+128)
 14170  0732  3000               	movlw	0
 14171  0733  00B0               	movwf	(_efgtoa$2165^(0+128)+1)
 14172  0734  2F39               	goto	l6377
 14173  0735                     l6375:
 14174  0735  302D               	movlw	45
 14175  0736  00AF               	movwf	_efgtoa$2165^(0+128)
 14176  0737  3000               	movlw	0
 14177  0738  00B0               	movwf	(_efgtoa$2165^(0+128)+1)
 14178  0739                     l6377:
 14179  0739  082F               	movf	_efgtoa$2165^(0+128),w
 14180  073A  00A5               	movwf	??_efgtoa^(0+128)
 14181  073B  0854               	movf	efgtoa@i^(0+128),w
 14182  073C  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 14183  073D  0086               	movwf	6
 14184  073E  3002               	movlw	2	; select bank4/5
 14185  073F  0087               	movwf	7
 14186  0740  0825               	movf	??_efgtoa^(0+128),w
 14187  0741  0081               	movwf	1
 14188  0742                     l6379:
 14189                           
 14190                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 516:         --w;
 14191  0742  30FF               	movlw	255
 14192  0743  07C8               	addwf	efgtoa@w^(0+128),f
 14193  0744  30FF               	movlw	255
 14194  0745  3DC9               	addwfc	(efgtoa@w+1)^(0+128),f
 14195  0746                     l6381:
 14196                           
 14197                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 518:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 14198  0746  30FF               	movlw	255
 14199  0747  07D4               	addwf	efgtoa@i^(0+128),f
 14200  0748  30FF               	movlw	255
 14201  0749  3DD5               	addwfc	(efgtoa@i+1)^(0+128),f
 14202  074A                     l6383:
 14203  074A  0824               	movf	efgtoa@c^(0+128),w
 14204  074B  3EBF               	addlw	191
 14205  074C  00A5               	movwf	??_efgtoa^(0+128)
 14206  074D  30FF               	movlw	255
 14207  074E  1803               	skipnc
 14208  074F  3000               	movlw	0
 14209  0750  00A6               	movwf	(??_efgtoa^(0+128)+1)
 14210  0751  3000               	movlw	0
 14211  0752  0226               	subwf	(??_efgtoa+1)^(0+128),w
 14212  0753  301A               	movlw	26
 14213  0754  1903               	skipnz
 14214  0755  0225               	subwf	??_efgtoa^(0+128),w
 14215  0756  1C03               	skipc
 14216  0757  2F59               	goto	u7981
 14217  0758  2F5B               	goto	u7980
 14218  0759                     u7981:
 14219  0759  3001               	movlw	1
 14220  075A  2F5C               	goto	u7990
 14221  075B                     u7980:
 14222  075B  3000               	movlw	0
 14223  075C                     u7990:
 14224  075C  00A7               	movwf	(??_efgtoa+2)^(0+128)
 14225  075D  01A8               	clrf	((??_efgtoa+2)^(0+128)+1)
 14226  075E  0827               	movf	(??_efgtoa+2)^(0+128),w
 14227  075F  00B3               	movwf	_efgtoa$2167^(0+128)
 14228  0760  0828               	movf	(??_efgtoa+3)^(0+128),w
 14229  0761  00B4               	movwf	(_efgtoa$2167+1)^(0+128)
 14230  0762                     l6387:
 14231  0762  0833               	movf	_efgtoa$2167^(0+128),w
 14232  0763  0434               	iorwf	(_efgtoa$2167+1)^(0+128),w
 14233  0764  1D03               	btfss	3,2
 14234  0765  2F67               	goto	u8001
 14235  0766  2F68               	goto	u8000
 14236  0767                     u8001:
 14237  0767  2F6D               	goto	l6391
 14238  0768                     u8000:
 14239  0768                     l6389:
 14240  0768  3065               	movlw	101
 14241  0769  00B1               	movwf	_efgtoa$2166^(0+128)
 14242  076A  3000               	movlw	0
 14243  076B  00B2               	movwf	(_efgtoa$2166^(0+128)+1)
 14244  076C  2F71               	goto	l6393
 14245  076D                     l6391:
 14246  076D  3045               	movlw	69
 14247  076E  00B1               	movwf	_efgtoa$2166^(0+128)
 14248  076F  3000               	movlw	0
 14249  0770  00B2               	movwf	(_efgtoa$2166^(0+128)+1)
 14250  0771                     l6393:
 14251  0771  0831               	movf	_efgtoa$2166^(0+128),w
 14252  0772  00A5               	movwf	??_efgtoa^(0+128)
 14253  0773  0854               	movf	efgtoa@i^(0+128),w
 14254  0774  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 14255  0775  0086               	movwf	6
 14256  0776  3002               	movlw	2	; select bank4/5
 14257  0777  0087               	movwf	7
 14258  0778  0825               	movf	??_efgtoa^(0+128),w
 14259  0779  0081               	movwf	1
 14260  077A                     l6395:
 14261                           
 14262                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 519:         --w;
 14263  077A  30FF               	movlw	255
 14264  077B  07C8               	addwf	efgtoa@w^(0+128),f
 14265  077C  30FF               	movlw	255
 14266  077D  3DC9               	addwfc	(efgtoa@w+1)^(0+128),f
 14267  077E                     l6397:
 14268                           
 14269                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 520:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 14270  077E  0854               	movf	efgtoa@i^(0+128),w
 14271  077F  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 14272  0780  00F1               	movwf	strcpy@src
 14273  0781  3002               	movlw	2
 14274  0782  00F2               	movwf	strcpy@src+1
 14275  0783  085C               	movf	efgtoa@n^(0+128),w
 14276  0784  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 14277  0785  3198  207C  3180   	fcall	_strcpy
 14278  0788                     l6399:
 14279                           
 14280                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 524:     return pad(fp, &dbuf
      +                          [0], w);
 14281  0788  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
 14282  0789  0141               	movlb	1	; select bank1
 14283  078A  00A5               	movwf	??_efgtoa^(0+128)
 14284  078B  0825               	movf	??_efgtoa^(0+128),w
 14285  078C  0140               	movlb	0	; select bank0
 14286  078D  00A7               	movwf	pad@buf
 14287  078E  0141               	movlb	1	; select bank1
 14288  078F  0849               	movf	(efgtoa@w+1)^(0+128),w
 14289  0790  0140               	movlb	0	; select bank0
 14290  0791  00A9               	movwf	pad@p+1
 14291  0792  0141               	movlb	1	; select bank1
 14292  0793  0848               	movf	efgtoa@w^(0+128),w
 14293  0794  0140               	movlb	0	; select bank0
 14294  0795  00A8               	movwf	pad@p
 14295  0796  0141               	movlb	1	; select bank1
 14296  0797  0843               	movf	efgtoa@fp^(0+128),w
 14297  0798  319D  2525  3180   	fcall	_pad
 14298  079B  0140               	movlb	0	; select bank0
 14299  079C  0828               	movf	?_pad+1,w
 14300  079D  0141               	movlb	1	; select bank1
 14301  079E  00A1               	movwf	(?_efgtoa+1)^(0+128)
 14302  079F  0140               	movlb	0	; select bank0
 14303  07A0  0827               	movf	?_pad,w
 14304  07A1  0141               	movlb	1	; select bank1
 14305  07A2  00A0               	movwf	?_efgtoa^(0+128)
 14306  07A3                     l1339:
 14307  07A3  0008               	return
 14308  07A4                     __end_of_efgtoa:
 14309                           
 14310                           	psect	text18
 14311  1905                     __ptext18:	
 14312 ;; *************** function _tolower *****************
 14313 ;; Defined at:
 14314 ;;		line 4 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/tolower.c"
 14315 ;; Parameters:    Size  Location     Type
 14316 ;;  c               2    7[COMMON] int 
 14317 ;; Auto vars:     Size  Location     Type
 14318 ;;		None
 14319 ;; Return value:  Size  Location     Type
 14320 ;;                  2    7[COMMON] int 
 14321 ;; Registers used:
 14322 ;;		wreg, status,2, status,0
 14323 ;; Tracked objects:
 14324 ;;		On entry : 0/0
 14325 ;;		On exit  : 0/0
 14326 ;;		Unchanged: 0/0
 14327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14328 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14329 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14330 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14331 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14332 ;;Total ram usage:        8 bytes
 14333 ;; Hardware stack levels used:    1
 14334 ;; Hardware stack levels required when called:    5
 14335 ;; This function calls:
 14336 ;;		_isupper
 14337 ;; This function is called by:
 14338 ;;		_efgtoa
 14339 ;;		_vfpfcnvrt
 14340 ;; This function uses a non-reentrant model
 14341 ;;
 14342                           
 14343                           
 14344                           ;psect for function _tolower
 14345  1905                     _tolower:
 14346  1905                     l6093:	
 14347                           ;incstack = 0
 14348                           ; Regs used in _tolower: [wreg+status,2+status,0]
 14349                           
 14350  1905  0877               	movf	tolower@c,w
 14351  1906  3EBF               	addlw	191
 14352  1907  0140               	movlb	0	; select bank0
 14353  1908  00A0               	movwf	??_tolower
 14354  1909  30FF               	movlw	255
 14355  190A  3D78               	addwfc	tolower@c+1,w
 14356  190B  00A1               	movwf	??_tolower+1
 14357  190C  3000               	movlw	0
 14358  190D  0221               	subwf	??_tolower+1,w
 14359  190E  301A               	movlw	26
 14360  190F  1903               	skipnz
 14361  1910  0220               	subwf	??_tolower,w
 14362  1911  1C03               	skipc
 14363  1912  2914               	goto	u7441
 14364  1913  2916               	goto	u7440
 14365  1914                     u7441:
 14366  1914  3001               	movlw	1
 14367  1915  2917               	goto	u7450
 14368  1916                     u7440:
 14369  1916  3000               	movlw	0
 14370  1917                     u7450:
 14371  1917  00A2               	movwf	??_tolower+2
 14372  1918  01A3               	clrf	??_tolower+3
 14373  1919  0822               	movf	??_tolower+2,w
 14374  191A  00F9               	movwf	_tolower$2315
 14375  191B  0823               	movf	??_tolower+3,w
 14376  191C  00FA               	movwf	_tolower$2315+1
 14377  191D                     l6097:
 14378  191D  0879               	movf	_tolower$2315,w
 14379  191E  047A               	iorwf	_tolower$2315+1,w
 14380  191F  1903               	btfsc	3,2
 14381  1920  2922               	goto	u7461
 14382  1921  2923               	goto	u7460
 14383  1922                     u7461:
 14384  1922  292A               	goto	l1579
 14385  1923                     u7460:
 14386  1923                     l6099:
 14387  1923  3020               	movlw	32
 14388  1924  0477               	iorwf	tolower@c,w
 14389  1925  00F7               	movwf	?_tolower
 14390  1926  3000               	movlw	0
 14391  1927  0478               	iorwf	tolower@c+1,w
 14392  1928  00F8               	movwf	?_tolower+1
 14393  1929  292A               	goto	l1584
 14394  192A                     l1579:
 14395  192A                     l1584:
 14396  192A  0008               	return
 14397  192B                     __end_of_tolower:
 14398                           
 14399                           	psect	text19
 14400  279A                     __ptext19:	
 14401 ;; *************** function _isupper *****************
 14402 ;; Defined at:
 14403 ;;		line 5 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/isupper.c"
 14404 ;; Parameters:    Size  Location     Type
 14405 ;;  c               2    1[COMMON] int 
 14406 ;; Auto vars:     Size  Location     Type
 14407 ;;		None
 14408 ;; Return value:  Size  Location     Type
 14409 ;;                  2    1[COMMON] int 
 14410 ;; Registers used:
 14411 ;;		wreg, status,2, status,0
 14412 ;; Tracked objects:
 14413 ;;		On entry : 0/0
 14414 ;;		On exit  : 0/0
 14415 ;;		Unchanged: 0/0
 14416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14417 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14419 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14420 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14421 ;;Total ram usage:        6 bytes
 14422 ;; Hardware stack levels used:    1
 14423 ;; Hardware stack levels required when called:    4
 14424 ;; This function calls:
 14425 ;;		Nothing
 14426 ;; This function is called by:
 14427 ;;		_efgtoa
 14428 ;;		_vfpfcnvrt
 14429 ;;		_tolower
 14430 ;; This function uses a non-reentrant model
 14431 ;;
 14432                           
 14433                           
 14434                           ;psect for function _isupper
 14435  279A                     _isupper:
 14436  279A                     l6049:	
 14437                           ;incstack = 0
 14438                           ; Regs used in _isupper: [wreg+status,2+status,0]
 14439                           
 14440  279A  0871               	movf	isupper@c,w
 14441  279B  3EBF               	addlw	191
 14442  279C  00F3               	movwf	??_isupper
 14443  279D  30FF               	movlw	255
 14444  279E  3D72               	addwfc	isupper@c+1,w
 14445  279F  00F4               	movwf	??_isupper+1
 14446  27A0  3000               	movlw	0
 14447  27A1  0274               	subwf	??_isupper+1,w
 14448  27A2  301A               	movlw	26
 14449  27A3  1903               	skipnz
 14450  27A4  0273               	subwf	??_isupper,w
 14451  27A5  1C03               	skipc
 14452  27A6  2FA8               	goto	u7351
 14453  27A7  2FAA               	goto	u7350
 14454  27A8                     u7351:
 14455  27A8  3001               	movlw	1
 14456  27A9  2FAB               	goto	u7360
 14457  27AA                     u7350:
 14458  27AA  3000               	movlw	0
 14459  27AB                     u7360:
 14460  27AB  00F5               	movwf	??_isupper+2
 14461  27AC  01F6               	clrf	??_isupper+3
 14462  27AD  0875               	movf	??_isupper+2,w
 14463  27AE  00F1               	movwf	?_isupper
 14464  27AF  0876               	movf	??_isupper+3,w
 14465  27B0  00F2               	movwf	?_isupper+1
 14466  27B1                     l1527:
 14467  27B1  0008               	return
 14468  27B2                     __end_of_isupper:
 14469                           
 14470                           	psect	text20
 14471  187C                     __ptext20:	
 14472 ;; *************** function _strcpy *****************
 14473 ;; Defined at:
 14474 ;;		line 3 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/strcpy.c"
 14475 ;; Parameters:    Size  Location     Type
 14476 ;;  dest            1    wreg     PTR unsigned char 
 14477 ;;		 -> dbuf(80), 
 14478 ;;  src             2    1[COMMON] PTR const unsigned char 
 14479 ;;		 -> STR_17(4), STR_16(4), STR_13(4), STR_12(4), 
 14480 ;;		 -> dbuf(80), 
 14481 ;; Auto vars:     Size  Location     Type
 14482 ;;  dest            1    8[COMMON] PTR unsigned char 
 14483 ;;		 -> dbuf(80), 
 14484 ;;  s               2    5[COMMON] PTR const unsigned char 
 14485 ;;		 -> STR_17(4), STR_16(4), STR_13(4), STR_12(4), 
 14486 ;;		 -> dbuf(80), 
 14487 ;;  d               1    7[COMMON] PTR unsigned char 
 14488 ;;		 -> dbuf(80), 
 14489 ;; Return value:  Size  Location     Type
 14490 ;;                  1    wreg      PTR unsigned char 
 14491 ;; Registers used:
 14492 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 14493 ;; Tracked objects:
 14494 ;;		On entry : 0/0
 14495 ;;		On exit  : 0/0
 14496 ;;		Unchanged: 0/0
 14497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14498 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14499 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14500 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14501 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14502 ;;Total ram usage:        8 bytes
 14503 ;; Hardware stack levels used:    1
 14504 ;; Hardware stack levels required when called:    4
 14505 ;; This function calls:
 14506 ;;		Nothing
 14507 ;; This function is called by:
 14508 ;;		_efgtoa
 14509 ;; This function uses a non-reentrant model
 14510 ;;
 14511                           
 14512                           
 14513                           ;psect for function _strcpy
 14514  187C                     _strcpy:
 14515                           
 14516                           ;incstack = 0
 14517                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
 14518                           ;strcpy@dest stored from wreg
 14519  187C  00F8               	movwf	strcpy@dest
 14520  187D                     l4509:
 14521  187D  0872               	movf	strcpy@src+1,w
 14522  187E  00F6               	movwf	strcpy@s+1
 14523  187F  0871               	movf	strcpy@src,w
 14524  1880  00F5               	movwf	strcpy@s
 14525  1881  0878               	movf	strcpy@dest,w
 14526  1882  00F3               	movwf	??_strcpy
 14527  1883  0873               	movf	??_strcpy,w
 14528  1884  00F7               	movwf	strcpy@d
 14529  1885                     l4511:
 14530  1885  0877               	movf	strcpy@d,w
 14531  1886  0086               	movwf	6
 14532  1887  3002               	movlw	2	; select bank4/5
 14533  1888  0087               	movwf	7
 14534  1889  0AF7               	incf	strcpy@d,f
 14535  188A  0876               	movf	strcpy@s+1,w
 14536  188B  00F4               	movwf	??_strcpy+1
 14537  188C  0875               	movf	strcpy@s,w
 14538  188D  00F3               	movwf	??_strcpy
 14539  188E  0AF5               	incf	strcpy@s,f
 14540  188F  1903               	skipnz
 14541  1890  0AF6               	incf	strcpy@s+1,f
 14542  1891  0873               	movf	??_strcpy,w
 14543  1892  0084               	movwf	4
 14544  1893  0874               	movf	??_strcpy+1,w
 14545  1894  0085               	movwf	5
 14546  1895  0800               	movf	0,w	;code access
 14547  1896  3FC0               	movwi [0]fsr1
 14548  1897  0889               	movf	9,f
 14549  1898  1D03               	btfss	3,2
 14550  1899  289B               	goto	u5091
 14551  189A  289C               	goto	u5090
 14552  189B                     u5091:
 14553  189B  2885               	goto	l4511
 14554  189C                     u5090:
 14555  189C                     l1559:
 14556  189C  0008               	return
 14557  189D                     __end_of_strcpy:
 14558                           
 14559                           	psect	text21
 14560  1D25                     __ptext21:	
 14561 ;; *************** function _pad *****************
 14562 ;; Defined at:
 14563 ;;		line 72 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
 14564 ;; Parameters:    Size  Location     Type
 14565 ;;  fp              1    wreg     PTR struct _IO_FILE
 14566 ;;		 -> sprintf@f(5), 
 14567 ;;  buf             1    7[BANK0 ] PTR unsigned char 
 14568 ;;		 -> dbuf(80), 
 14569 ;;  p               2    8[BANK0 ] int 
 14570 ;; Auto vars:     Size  Location     Type
 14571 ;;  fp              1   14[BANK0 ] PTR struct _IO_FILE
 14572 ;;		 -> sprintf@f(5), 
 14573 ;;  w               2   12[BANK0 ] int 
 14574 ;;  i               2   10[BANK0 ] int 
 14575 ;; Return value:  Size  Location     Type
 14576 ;;                  2    7[BANK0 ] int 
 14577 ;; Registers used:
 14578 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14579 ;; Tracked objects:
 14580 ;;		On entry : 0/0
 14581 ;;		On exit  : 0/0
 14582 ;;		Unchanged: 0/0
 14583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14584 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14585 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14586 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14587 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14588 ;;Total ram usage:        9 bytes
 14589 ;; Hardware stack levels used:    1
 14590 ;; Hardware stack levels required when called:    7
 14591 ;; This function calls:
 14592 ;;		_fputc
 14593 ;;		_fputs
 14594 ;;		_strlen
 14595 ;; This function is called by:
 14596 ;;		_efgtoa
 14597 ;; This function uses a non-reentrant model
 14598 ;;
 14599                           
 14600                           
 14601                           ;psect for function _pad
 14602  1D25                     _pad:
 14603                           
 14604                           ;incstack = 0
 14605                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14606                           ;pad@fp stored from wreg
 14607  1D25  0140               	movlb	0	; select bank0
 14608  1D26  00AE               	movwf	pad@fp
 14609  1D27                     l6071:
 14610                           
 14611                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.31/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 14612  1D27  0143               	movlb	3	; select bank3
 14613  1D28  1C4E               	btfss	_flags^(0+384),0
 14614  1D29  2D2B               	goto	u7401
 14615  1D2A  2D2C               	goto	u7400
 14616  1D2B                     u7401:
 14617  1D2B  2D35               	goto	l6075
 14618  1D2C                     u7400:
 14619  1D2C                     l6073:
 14620                           
 14621                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 14622  1D2C  0140               	movlb	0	; select bank0
 14623  1D2D  082E               	movf	pad@fp,w
 14624  1D2E  00FA               	movwf	??_pad
 14625  1D2F  087A               	movf	??_pad,w
 14626  1D30  00F9               	movwf	fputs@fp
 14627  1D31  0827               	movf	pad@buf,w
 14628  1D32  3199  212B  319D   	fcall	_fputs
 14629  1D35                     l6075:
 14630                           
 14631                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 14632  1D35  0140               	movlb	0	; select bank0
 14633  1D36  1BA9               	btfsc	pad@p+1,7
 14634  1D37  2D39               	goto	u7411
 14635  1D38  2D3A               	goto	u7410
 14636  1D39                     u7411:
 14637  1D39  2D3F               	goto	l6079
 14638  1D3A                     u7410:
 14639  1D3A                     l6077:
 14640  1D3A  0829               	movf	pad@p+1,w
 14641  1D3B  00AD               	movwf	pad@w+1
 14642  1D3C  0828               	movf	pad@p,w
 14643  1D3D  00AC               	movwf	pad@w
 14644  1D3E  2D41               	goto	l1316
 14645  1D3F                     l6079:
 14646  1D3F  01AC               	clrf	pad@w
 14647  1D40  01AD               	clrf	pad@w+1
 14648  1D41                     l1316:
 14649                           
 14650                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 14651  1D41  01AA               	clrf	pad@i
 14652  1D42  01AB               	clrf	pad@i+1
 14653                           
 14654                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 14655  1D43  2D55               	goto	l6085
 14656  1D44                     l6081:
 14657                           
 14658                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 14659  1D44  3020               	movlw	32
 14660  1D45  00F1               	movwf	fputc@c
 14661  1D46  3000               	movlw	0
 14662  1D47  00F2               	movwf	fputc@c+1
 14663  1D48  0140               	movlb	0	; select bank0
 14664  1D49  082E               	movf	pad@fp,w
 14665  1D4A  00FA               	movwf	??_pad
 14666  1D4B  087A               	movf	??_pad,w
 14667  1D4C  00F3               	movwf	fputc@fp
 14668  1D4D  319C  24CF  319D   	fcall	_fputc
 14669  1D50                     l6083:
 14670                           
 14671                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 86:         ++i;
 14672  1D50  3001               	movlw	1
 14673  1D51  0140               	movlb	0	; select bank0
 14674  1D52  07AA               	addwf	pad@i,f
 14675  1D53  3000               	movlw	0
 14676  1D54  3DAB               	addwfc	pad@i+1,f
 14677  1D55                     l6085:
 14678                           
 14679                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 14680  1D55  082B               	movf	pad@i+1,w
 14681  1D56  3A80               	xorlw	128
 14682  1D57  00FA               	movwf	??_pad
 14683  1D58  082D               	movf	pad@w+1,w
 14684  1D59  3A80               	xorlw	128
 14685  1D5A  027A               	subwf	??_pad,w
 14686  1D5B  1D03               	skipz
 14687  1D5C  2D5F               	goto	u7425
 14688  1D5D  082C               	movf	pad@w,w
 14689  1D5E  022A               	subwf	pad@i,w
 14690  1D5F                     u7425:
 14691  1D5F  1C03               	skipc
 14692  1D60  2D62               	goto	u7421
 14693  1D61  2D63               	goto	u7420
 14694  1D62                     u7421:
 14695  1D62  2D44               	goto	l6081
 14696  1D63                     u7420:
 14697  1D63                     l1319:
 14698                           
 14699                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 14700  1D63  0143               	movlb	3	; select bank3
 14701  1D64  184E               	btfsc	_flags^(0+384),0
 14702  1D65  2D67               	goto	u7431
 14703  1D66  2D68               	goto	u7430
 14704  1D67                     u7431:
 14705  1D67  2D71               	goto	l6089
 14706  1D68                     u7430:
 14707  1D68                     l6087:
 14708                           
 14709                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 14710  1D68  0140               	movlb	0	; select bank0
 14711  1D69  082E               	movf	pad@fp,w
 14712  1D6A  00FA               	movwf	??_pad
 14713  1D6B  087A               	movf	??_pad,w
 14714  1D6C  00F9               	movwf	fputs@fp
 14715  1D6D  0827               	movf	pad@buf,w
 14716  1D6E  3199  212B  319D   	fcall	_fputs
 14717  1D71                     l6089:
 14718                           
 14719                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 94:     return (int)(strlen(b
      +                          uf) + (size_t)w);
 14720  1D71  0140               	movlb	0	; select bank0
 14721  1D72  0827               	movf	pad@buf,w
 14722  1D73  31A7  27CC  319D   	fcall	_strlen
 14723  1D76  0140               	movlb	0	; select bank0
 14724  1D77  082C               	movf	pad@w,w
 14725  1D78  0771               	addwf	?_strlen,w
 14726  1D79  00A7               	movwf	?_pad
 14727  1D7A  082D               	movf	pad@w+1,w
 14728  1D7B  3D72               	addwfc	?_strlen+1,w
 14729  1D7C  00A8               	movwf	?_pad+1
 14730  1D7D                     l1321:
 14731  1D7D  0008               	return
 14732  1D7E                     __end_of_pad:
 14733                           
 14734                           	psect	text22
 14735  27CC                     __ptext22:	
 14736 ;; *************** function _strlen *****************
 14737 ;; Defined at:
 14738 ;;		line 5 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/strlen.c"
 14739 ;; Parameters:    Size  Location     Type
 14740 ;;  s               1    wreg     PTR const unsigned char 
 14741 ;;		 -> dbuf(80), 
 14742 ;; Auto vars:     Size  Location     Type
 14743 ;;  s               1    5[COMMON] PTR const unsigned char 
 14744 ;;		 -> dbuf(80), 
 14745 ;;  a               1    4[COMMON] PTR const unsigned char 
 14746 ;;		 -> dbuf(80), 
 14747 ;; Return value:  Size  Location     Type
 14748 ;;                  2    1[COMMON] unsigned int 
 14749 ;; Registers used:
 14750 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14751 ;; Tracked objects:
 14752 ;;		On entry : 0/0
 14753 ;;		On exit  : 0/0
 14754 ;;		Unchanged: 0/0
 14755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14756 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14757 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14758 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14759 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14760 ;;Total ram usage:        5 bytes
 14761 ;; Hardware stack levels used:    1
 14762 ;; Hardware stack levels required when called:    4
 14763 ;; This function calls:
 14764 ;;		Nothing
 14765 ;; This function is called by:
 14766 ;;		_pad
 14767 ;; This function uses a non-reentrant model
 14768 ;;
 14769                           
 14770                           
 14771                           ;psect for function _strlen
 14772  27CC                     _strlen:
 14773                           
 14774                           ;incstack = 0
 14775                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 14776                           ;strlen@s stored from wreg
 14777  27CC  00F5               	movwf	strlen@s
 14778  27CD                     l3991:
 14779  27CD  0875               	movf	strlen@s,w
 14780  27CE  00F3               	movwf	??_strlen
 14781  27CF  0873               	movf	??_strlen,w
 14782  27D0  00F4               	movwf	strlen@a
 14783  27D1  2FD6               	goto	l3995
 14784  27D2                     l3993:
 14785  27D2  3001               	movlw	1
 14786  27D3  00F3               	movwf	??_strlen
 14787  27D4  0873               	movf	??_strlen,w
 14788  27D5  07F5               	addwf	strlen@s,f
 14789  27D6                     l3995:
 14790  27D6  0875               	movf	strlen@s,w
 14791  27D7  0086               	movwf	6
 14792  27D8  3002               	movlw	2	; select bank4/5
 14793  27D9  0087               	movwf	7
 14794  27DA  0801               	movf	1,w
 14795  27DB  1D03               	btfss	3,2
 14796  27DC  2FDE               	goto	u3971
 14797  27DD  2FDF               	goto	u3970
 14798  27DE                     u3971:
 14799  27DE  2FD2               	goto	l3993
 14800  27DF                     u3970:
 14801  27DF                     l3997:
 14802  27DF  0874               	movf	strlen@a,w
 14803  27E0  0275               	subwf	strlen@s,w
 14804  27E1  00F1               	movwf	?_strlen
 14805  27E2  01F2               	clrf	?_strlen+1
 14806  27E3  1BF1               	btfsc	?_strlen,7
 14807  27E4  03F2               	decf	?_strlen+1,f
 14808  27E5                     l1565:
 14809  27E5  0008               	return
 14810  27E6                     __end_of_strlen:
 14811                           
 14812                           	psect	text23
 14813  192B                     __ptext23:	
 14814 ;; *************** function _fputs *****************
 14815 ;; Defined at:
 14816 ;;		line 8 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/nf_fputs.c"
 14817 ;; Parameters:    Size  Location     Type
 14818 ;;  s               1    wreg     PTR const unsigned char 
 14819 ;;		 -> dbuf(80), 
 14820 ;;  fp              1    9[COMMON] PTR struct _IO_FILE
 14821 ;;		 -> sprintf@f(5), 
 14822 ;; Auto vars:     Size  Location     Type
 14823 ;;  s               1    6[BANK0 ] PTR const unsigned char 
 14824 ;;		 -> dbuf(80), 
 14825 ;;  i               2    4[BANK0 ] int 
 14826 ;;  c               1    3[BANK0 ] unsigned char 
 14827 ;; Return value:  Size  Location     Type
 14828 ;;                  2    9[COMMON] int 
 14829 ;; Registers used:
 14830 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14831 ;; Tracked objects:
 14832 ;;		On entry : 0/0
 14833 ;;		On exit  : 0/0
 14834 ;;		Unchanged: 0/0
 14835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14836 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14837 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14838 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14839 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14840 ;;Total ram usage:        8 bytes
 14841 ;; Hardware stack levels used:    1
 14842 ;; Hardware stack levels required when called:    6
 14843 ;; This function calls:
 14844 ;;		_fputc
 14845 ;; This function is called by:
 14846 ;;		_pad
 14847 ;; This function uses a non-reentrant model
 14848 ;;
 14849                           
 14850                           
 14851                           ;psect for function _fputs
 14852  192B                     _fputs:
 14853                           
 14854                           ;incstack = 0
 14855                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14856                           ;fputs@s stored from wreg
 14857  192B  0140               	movlb	0	; select bank0
 14858  192C  00A6               	movwf	fputs@s
 14859  192D                     l6041:
 14860  192D  01A4               	clrf	fputs@i
 14861  192E  01A5               	clrf	fputs@i+1
 14862  192F  2943               	goto	l6047
 14863  1930                     l6043:
 14864  1930  0823               	movf	fputs@c,w
 14865  1931  00A0               	movwf	??_fputs
 14866  1932  01A1               	clrf	??_fputs+1
 14867  1933  0820               	movf	??_fputs,w
 14868  1934  00F1               	movwf	fputc@c
 14869  1935  0821               	movf	??_fputs+1,w
 14870  1936  00F2               	movwf	fputc@c+1
 14871  1937  0879               	movf	fputs@fp,w
 14872  1938  00A2               	movwf	??_fputs+2
 14873  1939  0822               	movf	??_fputs+2,w
 14874  193A  00F3               	movwf	fputc@fp
 14875  193B  319C  24CF  3199   	fcall	_fputc
 14876  193E                     l6045:
 14877  193E  3001               	movlw	1
 14878  193F  0140               	movlb	0	; select bank0
 14879  1940  07A4               	addwf	fputs@i,f
 14880  1941  3000               	movlw	0
 14881  1942  3DA5               	addwfc	fputs@i+1,f
 14882  1943                     l6047:
 14883  1943  0824               	movf	fputs@i,w
 14884  1944  0726               	addwf	fputs@s,w
 14885  1945  00A0               	movwf	??_fputs
 14886  1946  0820               	movf	??_fputs,w
 14887  1947  0086               	movwf	6
 14888  1948  3002               	movlw	2	; select bank4/5
 14889  1949  0087               	movwf	7
 14890  194A  0801               	movf	1,w
 14891  194B  00A1               	movwf	??_fputs+1
 14892  194C  0821               	movf	??_fputs+1,w
 14893  194D  00A3               	movwf	fputs@c
 14894  194E  0823               	movf	fputs@c,w
 14895  194F  1D03               	btfss	3,2
 14896  1950  2952               	goto	u7341
 14897  1951  2953               	goto	u7340
 14898  1952                     u7341:
 14899  1952  2930               	goto	l6043
 14900  1953                     u7340:
 14901  1953                     l1550:
 14902  1953  0008               	return
 14903  1954                     __end_of_fputs:
 14904                           
 14905                           	psect	text24
 14906  1CCF                     __ptext24:	
 14907 ;; *************** function _fputc *****************
 14908 ;; Defined at:
 14909 ;;		line 8 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/nf_fputc.c"
 14910 ;; Parameters:    Size  Location     Type
 14911 ;;  c               2    1[COMMON] int 
 14912 ;;  fp              1    3[COMMON] PTR struct _IO_FILE
 14913 ;;		 -> sprintf@f(5), 
 14914 ;; Auto vars:     Size  Location     Type
 14915 ;;		None
 14916 ;; Return value:  Size  Location     Type
 14917 ;;                  2    1[COMMON] int 
 14918 ;; Registers used:
 14919 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14920 ;; Tracked objects:
 14921 ;;		On entry : 0/0
 14922 ;;		On exit  : 0/0
 14923 ;;		Unchanged: 0/0
 14924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14925 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14927 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14928 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14929 ;;Total ram usage:        8 bytes
 14930 ;; Hardware stack levels used:    1
 14931 ;; Hardware stack levels required when called:    5
 14932 ;; This function calls:
 14933 ;;		_putch
 14934 ;; This function is called by:
 14935 ;;		_pad
 14936 ;;		_vfpfcnvrt
 14937 ;;		_fputs
 14938 ;; This function uses a non-reentrant model
 14939 ;;
 14940                           
 14941                           
 14942                           ;psect for function _fputc
 14943  1CCF                     _fputc:
 14944  1CCF                     l3759:	
 14945                           ;incstack = 0
 14946                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14947                           
 14948  1CCF  0873               	movf	fputc@fp,w
 14949  1CD0  1903               	btfsc	3,2
 14950  1CD1  2CD3               	goto	u3461
 14951  1CD2  2CD4               	goto	u3460
 14952  1CD3                     u3461:
 14953  1CD3  2CD9               	goto	l3763
 14954  1CD4                     u3460:
 14955  1CD4                     l3761:
 14956  1CD4  0873               	movf	fputc@fp,w
 14957  1CD5  1D03               	btfss	3,2
 14958  1CD6  2CD8               	goto	u3471
 14959  1CD7  2CD9               	goto	u3470
 14960  1CD8                     u3471:
 14961  1CD8  2CDE               	goto	l3765
 14962  1CD9                     u3470:
 14963  1CD9                     l3763:
 14964  1CD9  0871               	movf	fputc@c,w
 14965  1CDA  3187  27FF  319C   	fcall	_putch
 14966  1CDD  2D24               	goto	l1542
 14967  1CDE                     l3765:
 14968  1CDE  0873               	movf	fputc@fp,w
 14969  1CDF  3E03               	addlw	3
 14970  1CE0  0086               	movwf	6
 14971  1CE1  3001               	movlw	1	; select bank2/3
 14972  1CE2  0087               	movwf	7
 14973  1CE3  0016               	moviw fsr1++
 14974  1CE4  0401               	iorwf	1,w
 14975  1CE5  1903               	btfsc	3,2
 14976  1CE6  2CE8               	goto	u3481
 14977  1CE7  2CE9               	goto	u3480
 14978  1CE8                     u3481:
 14979  1CE8  2D08               	goto	l3769
 14980  1CE9                     u3480:
 14981  1CE9                     l3767:
 14982  1CE9  0873               	movf	fputc@fp,w
 14983  1CEA  3E03               	addlw	3
 14984  1CEB  0086               	movwf	6
 14985  1CEC  3001               	movlw	1	; select bank2/3
 14986  1CED  0087               	movwf	7
 14987  1CEE  3F40               	moviw [0]fsr1
 14988  1CEF  00F4               	movwf	??_fputc
 14989  1CF0  3F41               	moviw [1]fsr1
 14990  1CF1  00F5               	movwf	??_fputc+1
 14991  1CF2  0A73               	incf	fputc@fp,w
 14992  1CF3  0086               	movwf	6
 14993  1CF4  3001               	movlw	1	; select bank2/3
 14994  1CF5  0087               	movwf	7
 14995  1CF6  3F40               	moviw [0]fsr1
 14996  1CF7  00F6               	movwf	??_fputc+2
 14997  1CF8  3F41               	moviw [1]fsr1
 14998  1CF9  00F7               	movwf	??_fputc+3
 14999  1CFA  0877               	movf	??_fputc+3,w
 15000  1CFB  3A80               	xorlw	128
 15001  1CFC  00F8               	movwf	??_fputc+4
 15002  1CFD  0875               	movf	??_fputc+1,w
 15003  1CFE  3A80               	xorlw	128
 15004  1CFF  0278               	subwf	??_fputc+4,w
 15005  1D00  1D03               	skipz
 15006  1D01  2D04               	goto	u3495
 15007  1D02  0874               	movf	??_fputc,w
 15008  1D03  0276               	subwf	??_fputc+2,w
 15009  1D04                     u3495:
 15010  1D04  1803               	skipnc
 15011  1D05  2D07               	goto	u3491
 15012  1D06  2D08               	goto	u3490
 15013  1D07                     u3491:
 15014  1D07  2D24               	goto	l1542
 15015  1D08                     u3490:
 15016  1D08                     l3769:
 15017  1D08  0871               	movf	fputc@c,w
 15018  1D09  00F4               	movwf	??_fputc
 15019  1D0A  0873               	movf	fputc@fp,w
 15020  1D0B  0086               	movwf	6
 15021  1D0C  3001               	movlw	1	; select bank2/3
 15022  1D0D  0087               	movwf	7
 15023  1D0E  0A73               	incf	fputc@fp,w
 15024  1D0F  0084               	movwf	4
 15025  1D10  3001               	movlw	1	; select bank2/3
 15026  1D11  0085               	movwf	5
 15027  1D12  0800               	movf	0,w
 15028  1D13  0701               	addwf	1,w
 15029  1D14  00F5               	movwf	??_fputc+1
 15030  1D15  0875               	movf	??_fputc+1,w
 15031  1D16  0086               	movwf	6
 15032  1D17  3001               	movlw	1	; select bank2/3
 15033  1D18  0087               	movwf	7
 15034  1D19  0874               	movf	??_fputc,w
 15035  1D1A  0081               	movwf	1
 15036  1D1B                     l3771:
 15037  1D1B  0A73               	incf	fputc@fp,w
 15038  1D1C  0086               	movwf	6
 15039  1D1D  3001               	movlw	1	; select bank2/3
 15040  1D1E  0087               	movwf	7
 15041  1D1F  3001               	movlw	1
 15042  1D20  0781               	addwf	1,f
 15043  1D21  3141               	addfsr 1,1
 15044  1D22  1803               	skipnc
 15045  1D23  0A81               	incf	1,f
 15046  1D24                     l1542:
 15047  1D24  0008               	return
 15048  1D25                     __end_of_fputc:
 15049                           
 15050                           	psect	text25
 15051  07FF                     __ptext25:	
 15052 ;; *************** function _putch *****************
 15053 ;; Defined at:
 15054 ;;		line 7 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/putch.c"
 15055 ;; Parameters:    Size  Location     Type
 15056 ;;  c               1    wreg     unsigned char 
 15057 ;; Auto vars:     Size  Location     Type
 15058 ;;  c               1    0[COMMON] unsigned char 
 15059 ;; Return value:  Size  Location     Type
 15060 ;;                  1    wreg      void 
 15061 ;; Registers used:
 15062 ;;		wreg
 15063 ;; Tracked objects:
 15064 ;;		On entry : 0/0
 15065 ;;		On exit  : 0/0
 15066 ;;		Unchanged: 0/0
 15067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15072 ;;Total ram usage:        0 bytes
 15073 ;; Hardware stack levels used:    1
 15074 ;; Hardware stack levels required when called:    4
 15075 ;; This function calls:
 15076 ;;		Nothing
 15077 ;; This function is called by:
 15078 ;;		_fputc
 15079 ;; This function uses a non-reentrant model
 15080 ;;
 15081                           
 15082                           
 15083                           ;psect for function _putch
 15084  07FF                     _putch:
 15085  07FF                     l1553:	
 15086                           ;incstack = 0
 15087                           ; Regs used in _putch: [wreg]
 15088                           
 15089  07FF  0008               	return
 15090  0800                     __end_of_putch:
 15091                           
 15092                           	psect	text26
 15093  112E                     __ptext26:	
 15094 ;; *************** function _floorf *****************
 15095 ;; Defined at:
 15096 ;;		line 3 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/floorf.c"
 15097 ;; Parameters:    Size  Location     Type
 15098 ;;  x               4   58[BANK0 ] float 
 15099 ;; Auto vars:     Size  Location     Type
 15100 ;;  u               4   74[BANK0 ] struct .
 15101 ;;  m               4   68[BANK0 ] unsigned long 
 15102 ;;  e               2   72[BANK0 ] int 
 15103 ;; Return value:  Size  Location     Type
 15104 ;;                  4   58[BANK0 ] float 
 15105 ;; Registers used:
 15106 ;;		wreg, status,2, status,0
 15107 ;; Tracked objects:
 15108 ;;		On entry : 0/0
 15109 ;;		On exit  : 0/0
 15110 ;;		Unchanged: 0/0
 15111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15112 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15113 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15114 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15115 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15116 ;;Total ram usage:       20 bytes
 15117 ;; Hardware stack levels used:    1
 15118 ;; Hardware stack levels required when called:    4
 15119 ;; This function calls:
 15120 ;;		Nothing
 15121 ;; This function is called by:
 15122 ;;		_efgtoa
 15123 ;; This function uses a non-reentrant model
 15124 ;;
 15125                           
 15126                           
 15127                           ;psect for function _floorf
 15128  112E                     _floorf:
 15129  112E                     l4523:	
 15130                           ;incstack = 0
 15131                           ; Regs used in _floorf: [wreg+status,2+status,0]
 15132                           
 15133  112E  0143               	movlb	3	; select bank3
 15134  112F  0843               	movf	(floorf@F527+3)^(0+384),w
 15135  1130  0140               	movlb	0	; select bank0
 15136  1131  00ED               	movwf	floorf@u+3
 15137  1132  0143               	movlb	3	; select bank3
 15138  1133  0842               	movf	(floorf@F527+2)^(0+384),w
 15139  1134  0140               	movlb	0	; select bank0
 15140  1135  00EC               	movwf	floorf@u+2
 15141  1136  0143               	movlb	3	; select bank3
 15142  1137  0841               	movf	(floorf@F527+1)^(0+384),w
 15143  1138  0140               	movlb	0	; select bank0
 15144  1139  00EB               	movwf	floorf@u+1
 15145  113A  0143               	movlb	3	; select bank3
 15146  113B  0840               	movf	floorf@F527^(0+384),w
 15147  113C  0140               	movlb	0	; select bank0
 15148  113D  00EA               	movwf	floorf@u
 15149  113E  085D               	movf	floorf@x+3,w
 15150  113F  00ED               	movwf	floorf@u+3
 15151  1140  085C               	movf	floorf@x+2,w
 15152  1141  00EC               	movwf	floorf@u+2
 15153  1142  085B               	movf	floorf@x+1,w
 15154  1143  00EB               	movwf	floorf@u+1
 15155  1144  085A               	movf	floorf@x,w
 15156  1145  00EA               	movwf	floorf@u
 15157  1146                     l4525:
 15158  1146  086A               	movf	floorf@u,w
 15159  1147  00DE               	movwf	??_floorf
 15160  1148  086B               	movf	floorf@u+1,w
 15161  1149  00DF               	movwf	??_floorf+1
 15162  114A  086C               	movf	floorf@u+2,w
 15163  114B  00E0               	movwf	??_floorf+2
 15164  114C  086D               	movf	floorf@u+3,w
 15165  114D  00E1               	movwf	??_floorf+3
 15166  114E  3017               	movlw	23
 15167  114F                     u5135:
 15168  114F  36E1               	lsrf	??_floorf+3,f
 15169  1150  0CE0               	rrf	??_floorf+2,f
 15170  1151  0CDF               	rrf	??_floorf+1,f
 15171  1152  0CDE               	rrf	??_floorf,f
 15172  1153                     u5130:
 15173  1153  0B89               	decfsz	9,f
 15174  1154  294F               	goto	u5135
 15175  1155  30FF               	movlw	255
 15176  1156  055E               	andwf	??_floorf,w
 15177  1157  00E2               	movwf	??_floorf+4
 15178  1158  3000               	movlw	0
 15179  1159  055F               	andwf	??_floorf+1,w
 15180  115A  00E3               	movwf	??_floorf+5
 15181  115B  0862               	movf	??_floorf+4,w
 15182  115C  3E81               	addlw	129
 15183  115D  00E8               	movwf	floorf@e
 15184  115E  30FF               	movlw	255
 15185  115F  3D63               	addwfc	??_floorf+5,w
 15186  1160  00E9               	movwf	floorf@e+1
 15187  1161                     l4527:
 15188  1161  0869               	movf	floorf@e+1,w
 15189  1162  3A80               	xorlw	128
 15190  1163  00DE               	movwf	??_floorf
 15191  1164  3080               	movlw	128
 15192  1165  025E               	subwf	??_floorf,w
 15193  1166  1D03               	skipz
 15194  1167  296A               	goto	u5145
 15195  1168  3017               	movlw	23
 15196  1169  0268               	subwf	floorf@e,w
 15197  116A                     u5145:
 15198  116A  1C03               	skipc
 15199  116B  296D               	goto	u5141
 15200  116C  296E               	goto	u5140
 15201  116D                     u5141:
 15202  116D  296F               	goto	l1502
 15203  116E                     u5140:
 15204  116E                     l4529:
 15205  116E  2A18               	goto	l1503
 15206  116F                     l1502:
 15207  116F  0140               	movlb	0	; select bank0
 15208  1170  1BE9               	btfsc	floorf@e+1,7
 15209  1171  2973               	goto	u5151
 15210  1172  2974               	goto	u5150
 15211  1173                     u5151:
 15212  1173  29D1               	goto	l4543
 15213  1174                     u5150:
 15214  1174                     l4531:
 15215  1174  30FF               	movlw	255
 15216  1175  00DE               	movwf	??_floorf
 15217  1176  30FF               	movlw	255
 15218  1177  00DF               	movwf	??_floorf+1
 15219  1178  307F               	movlw	127
 15220  1179  00E0               	movwf	??_floorf+2
 15221  117A  3000               	movlw	0
 15222  117B  00E1               	movwf	??_floorf+3
 15223  117C  0A68               	incf	floorf@e,w
 15224  117D  2982               	goto	u5160
 15225  117E                     u5165:
 15226  117E  37E1               	asrf	??_floorf+3,f
 15227  117F  0CE0               	rrf	??_floorf+2,f
 15228  1180  0CDF               	rrf	??_floorf+1,f
 15229  1181  0CDE               	rrf	??_floorf,f
 15230  1182                     u5160:
 15231  1182  0B89               	decfsz	9,f
 15232  1183  297E               	goto	u5165
 15233  1184  0861               	movf	??_floorf+3,w
 15234  1185  00E7               	movwf	floorf@m+3
 15235  1186  0860               	movf	??_floorf+2,w
 15236  1187  00E6               	movwf	floorf@m+2
 15237  1188  085F               	movf	??_floorf+1,w
 15238  1189  00E5               	movwf	floorf@m+1
 15239  118A  085E               	movf	??_floorf,w
 15240  118B  00E4               	movwf	floorf@m
 15241  118C                     l4533:
 15242  118C  086A               	movf	floorf@u,w
 15243  118D  0564               	andwf	floorf@m,w
 15244  118E  00DE               	movwf	??_floorf
 15245  118F  086B               	movf	floorf@u+1,w
 15246  1190  0565               	andwf	floorf@m+1,w
 15247  1191  00DF               	movwf	??_floorf+1
 15248  1192  086C               	movf	floorf@u+2,w
 15249  1193  0566               	andwf	floorf@m+2,w
 15250  1194  00E0               	movwf	??_floorf+2
 15251  1195  086D               	movf	floorf@u+3,w
 15252  1196  0567               	andwf	floorf@m+3,w
 15253  1197  00E1               	movwf	??_floorf+3
 15254  1198  0861               	movf	??_floorf+3,w
 15255  1199  0460               	iorwf	??_floorf+2,w
 15256  119A  045F               	iorwf	??_floorf+1,w
 15257  119B  045E               	iorwf	??_floorf,w
 15258  119C  1D03               	skipz
 15259  119D  299F               	goto	u5171
 15260  119E  29A0               	goto	u5170
 15261  119F                     u5171:
 15262  119F  29A1               	goto	l4537
 15263  11A0                     u5170:
 15264  11A0  296E               	goto	l4529
 15265  11A1                     l4537:
 15266  11A1  086A               	movf	floorf@u,w
 15267  11A2  00DE               	movwf	??_floorf
 15268  11A3  086B               	movf	floorf@u+1,w
 15269  11A4  00DF               	movwf	??_floorf+1
 15270  11A5  086C               	movf	floorf@u+2,w
 15271  11A6  00E0               	movwf	??_floorf+2
 15272  11A7  086D               	movf	floorf@u+3,w
 15273  11A8  00E1               	movwf	??_floorf+3
 15274  11A9  301F               	movlw	31
 15275  11AA                     u5185:
 15276  11AA  36E1               	lsrf	??_floorf+3,f
 15277  11AB  0CE0               	rrf	??_floorf+2,f
 15278  11AC  0CDF               	rrf	??_floorf+1,f
 15279  11AD  0CDE               	rrf	??_floorf,f
 15280  11AE                     u5180:
 15281  11AE  0B89               	decfsz	9,f
 15282  11AF  29AA               	goto	u5185
 15283  11B0  0861               	movf	??_floorf+3,w
 15284  11B1  0460               	iorwf	??_floorf+2,w
 15285  11B2  045F               	iorwf	??_floorf+1,w
 15286  11B3  045E               	iorwf	??_floorf,w
 15287  11B4  1903               	skipnz
 15288  11B5  29B7               	goto	u5191
 15289  11B6  29B8               	goto	u5190
 15290  11B7                     u5191:
 15291  11B7  29C0               	goto	l4541
 15292  11B8                     u5190:
 15293  11B8                     l4539:
 15294  11B8  0864               	movf	floorf@m,w
 15295  11B9  07EA               	addwf	floorf@u,f
 15296  11BA  0865               	movf	floorf@m+1,w
 15297  11BB  3DEB               	addwfc	floorf@u+1,f
 15298  11BC  0866               	movf	floorf@m+2,w
 15299  11BD  3DEC               	addwfc	floorf@u+2,f
 15300  11BE  0867               	movf	floorf@m+3,w
 15301  11BF  3DED               	addwfc	floorf@u+3,f
 15302  11C0                     l4541:
 15303  11C0  0964               	comf	floorf@m,w
 15304  11C1  00DE               	movwf	??_floorf
 15305  11C2  0965               	comf	floorf@m+1,w
 15306  11C3  00DF               	movwf	??_floorf+1
 15307  11C4  0966               	comf	floorf@m+2,w
 15308  11C5  00E0               	movwf	??_floorf+2
 15309  11C6  0967               	comf	floorf@m+3,w
 15310  11C7  00E1               	movwf	??_floorf+3
 15311  11C8  085E               	movf	??_floorf,w
 15312  11C9  05EA               	andwf	floorf@u,f
 15313  11CA  085F               	movf	??_floorf+1,w
 15314  11CB  05EB               	andwf	floorf@u+1,f
 15315  11CC  0860               	movf	??_floorf+2,w
 15316  11CD  05EC               	andwf	floorf@u+2,f
 15317  11CE  0861               	movf	??_floorf+3,w
 15318  11CF  05ED               	andwf	floorf@u+3,f
 15319  11D0  2A10               	goto	l1507
 15320  11D1                     l4543:
 15321  11D1  086A               	movf	floorf@u,w
 15322  11D2  00DE               	movwf	??_floorf
 15323  11D3  086B               	movf	floorf@u+1,w
 15324  11D4  00DF               	movwf	??_floorf+1
 15325  11D5  086C               	movf	floorf@u+2,w
 15326  11D6  00E0               	movwf	??_floorf+2
 15327  11D7  086D               	movf	floorf@u+3,w
 15328  11D8  00E1               	movwf	??_floorf+3
 15329  11D9  301F               	movlw	31
 15330  11DA                     u5205:
 15331  11DA  36E1               	lsrf	??_floorf+3,f
 15332  11DB  0CE0               	rrf	??_floorf+2,f
 15333  11DC  0CDF               	rrf	??_floorf+1,f
 15334  11DD  0CDE               	rrf	??_floorf,f
 15335  11DE                     u5200:
 15336  11DE  0B89               	decfsz	9,f
 15337  11DF  29DA               	goto	u5205
 15338  11E0  0861               	movf	??_floorf+3,w
 15339  11E1  0460               	iorwf	??_floorf+2,w
 15340  11E2  045F               	iorwf	??_floorf+1,w
 15341  11E3  045E               	iorwf	??_floorf,w
 15342  11E4  1D03               	skipz
 15343  11E5  29E7               	goto	u5211
 15344  11E6  29E8               	goto	u5210
 15345  11E7                     u5211:
 15346  11E7  29F1               	goto	l4547
 15347  11E8                     u5210:
 15348  11E8                     l4545:
 15349  11E8  3000               	movlw	0
 15350  11E9  00ED               	movwf	floorf@u+3
 15351  11EA  3000               	movlw	0
 15352  11EB  00EC               	movwf	floorf@u+2
 15353  11EC  3000               	movlw	0
 15354  11ED  00EB               	movwf	floorf@u+1
 15355  11EE  3000               	movlw	0
 15356  11EF  00EA               	movwf	floorf@u
 15357  11F0  2A10               	goto	l1507
 15358  11F1                     l4547:
 15359  11F1  086A               	movf	floorf@u,w
 15360  11F2  00DE               	movwf	??_floorf
 15361  11F3  086B               	movf	floorf@u+1,w
 15362  11F4  00DF               	movwf	??_floorf+1
 15363  11F5  086C               	movf	floorf@u+2,w
 15364  11F6  00E0               	movwf	??_floorf+2
 15365  11F7  086D               	movf	floorf@u+3,w
 15366  11F8  00E1               	movwf	??_floorf+3
 15367  11F9  3001               	movlw	1
 15368  11FA                     u5225:
 15369  11FA  35DE               	lslf	??_floorf,f
 15370  11FB  0DDF               	rlf	??_floorf+1,f
 15371  11FC  0DE0               	rlf	??_floorf+2,f
 15372  11FD  0DE1               	rlf	??_floorf+3,f
 15373  11FE                     u5220:
 15374  11FE  0B89               	decfsz	9,f
 15375  11FF  29FA               	goto	u5225
 15376  1200  0861               	movf	??_floorf+3,w
 15377  1201  0460               	iorwf	??_floorf+2,w
 15378  1202  045F               	iorwf	??_floorf+1,w
 15379  1203  045E               	iorwf	??_floorf,w
 15380  1204  1903               	skipnz
 15381  1205  2A07               	goto	u5231
 15382  1206  2A08               	goto	u5230
 15383  1207                     u5231:
 15384  1207  2A10               	goto	l1507
 15385  1208                     u5230:
 15386  1208                     l4549:
 15387  1208  30BF               	movlw	191
 15388  1209  00ED               	movwf	floorf@u+3
 15389  120A  3080               	movlw	128
 15390  120B  00EC               	movwf	floorf@u+2
 15391  120C  3000               	movlw	0
 15392  120D  00EB               	movwf	floorf@u+1
 15393  120E  3000               	movlw	0
 15394  120F  00EA               	movwf	floorf@u
 15395  1210                     l1507:
 15396  1210  086D               	movf	floorf@u+3,w
 15397  1211  00DD               	movwf	?_floorf+3
 15398  1212  086C               	movf	floorf@u+2,w
 15399  1213  00DC               	movwf	?_floorf+2
 15400  1214  086B               	movf	floorf@u+1,w
 15401  1215  00DB               	movwf	?_floorf+1
 15402  1216  086A               	movf	floorf@u,w
 15403  1217  00DA               	movwf	?_floorf
 15404  1218                     l1503:
 15405  1218  0008               	return
 15406  1219                     __end_of_floorf:
 15407                           
 15408                           	psect	text27
 15409  1000                     __ptext27:	
 15410 ;; *************** function ___fpclassifyf *****************
 15411 ;; Defined at:
 15412 ;;		line 4 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/__fpclassifyf.c"
 15413 ;; Parameters:    Size  Location     Type
 15414 ;;  x               4    1[COMMON] float 
 15415 ;; Auto vars:     Size  Location     Type
 15416 ;;  u               4    2[BANK0 ] struct .
 15417 ;;  e               2    0[BANK0 ] int 
 15418 ;; Return value:  Size  Location     Type
 15419 ;;                  2    1[COMMON] int 
 15420 ;; Registers used:
 15421 ;;		wreg, status,2, status,0
 15422 ;; Tracked objects:
 15423 ;;		On entry : 0/0
 15424 ;;		On exit  : 0/0
 15425 ;;		Unchanged: 0/0
 15426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15427 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15428 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15429 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15430 ;;      Totals:        10       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15431 ;;Total ram usage:       16 bytes
 15432 ;; Hardware stack levels used:    1
 15433 ;; Hardware stack levels required when called:    4
 15434 ;; This function calls:
 15435 ;;		Nothing
 15436 ;; This function is called by:
 15437 ;;		_efgtoa
 15438 ;; This function uses a non-reentrant model
 15439 ;;
 15440                           
 15441                           
 15442                           ;psect for function ___fpclassifyf
 15443  1000                     ___fpclassifyf:
 15444  1000                     l4485:	
 15445                           ;incstack = 0
 15446                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
 15447                           
 15448  1000  0143               	movlb	3	; select bank3
 15449  1001  0847               	movf	(___fpclassifyf@F465+3)^(0+384),w
 15450  1002  0140               	movlb	0	; select bank0
 15451  1003  00A5               	movwf	___fpclassifyf@u+3
 15452  1004  0143               	movlb	3	; select bank3
 15453  1005  0846               	movf	(___fpclassifyf@F465+2)^(0+384),w
 15454  1006  0140               	movlb	0	; select bank0
 15455  1007  00A4               	movwf	___fpclassifyf@u+2
 15456  1008  0143               	movlb	3	; select bank3
 15457  1009  0845               	movf	(___fpclassifyf@F465+1)^(0+384),w
 15458  100A  0140               	movlb	0	; select bank0
 15459  100B  00A3               	movwf	___fpclassifyf@u+1
 15460  100C  0143               	movlb	3	; select bank3
 15461  100D  0844               	movf	___fpclassifyf@F465^(0+384),w
 15462  100E  0140               	movlb	0	; select bank0
 15463  100F  00A2               	movwf	___fpclassifyf@u
 15464  1010  0874               	movf	___fpclassifyf@x+3,w
 15465  1011  00A5               	movwf	___fpclassifyf@u+3
 15466  1012  0873               	movf	___fpclassifyf@x+2,w
 15467  1013  00A4               	movwf	___fpclassifyf@u+2
 15468  1014  0872               	movf	___fpclassifyf@x+1,w
 15469  1015  00A3               	movwf	___fpclassifyf@u+1
 15470  1016  0871               	movf	___fpclassifyf@x,w
 15471  1017  00A2               	movwf	___fpclassifyf@u
 15472  1018                     l4487:
 15473  1018  0822               	movf	___fpclassifyf@u,w
 15474  1019  00F5               	movwf	??___fpclassifyf
 15475  101A  0823               	movf	___fpclassifyf@u+1,w
 15476  101B  00F6               	movwf	??___fpclassifyf+1
 15477  101C  0824               	movf	___fpclassifyf@u+2,w
 15478  101D  00F7               	movwf	??___fpclassifyf+2
 15479  101E  0825               	movf	___fpclassifyf@u+3,w
 15480  101F  00F8               	movwf	??___fpclassifyf+3
 15481  1020  3017               	movlw	23
 15482  1021                     u5015:
 15483  1021  36F8               	lsrf	??___fpclassifyf+3,f
 15484  1022  0CF7               	rrf	??___fpclassifyf+2,f
 15485  1023  0CF6               	rrf	??___fpclassifyf+1,f
 15486  1024  0CF5               	rrf	??___fpclassifyf,f
 15487  1025                     u5010:
 15488  1025  0B89               	decfsz	9,f
 15489  1026  2821               	goto	u5015
 15490  1027  30FF               	movlw	255
 15491  1028  0575               	andwf	??___fpclassifyf,w
 15492  1029  00A0               	movwf	___fpclassifyf@e
 15493  102A  3000               	movlw	0
 15494  102B  0576               	andwf	??___fpclassifyf+1,w
 15495  102C  00A1               	movwf	___fpclassifyf@e+1
 15496  102D                     l4489:
 15497  102D  0820               	movf	___fpclassifyf@e,w
 15498  102E  0421               	iorwf	___fpclassifyf@e+1,w
 15499  102F  1D03               	btfss	3,2
 15500  1030  2832               	goto	u5021
 15501  1031  2833               	goto	u5020
 15502  1032                     u5021:
 15503  1032  2854               	goto	l4499
 15504  1033                     u5020:
 15505  1033                     l4491:
 15506  1033  0822               	movf	___fpclassifyf@u,w
 15507  1034  00F5               	movwf	??___fpclassifyf
 15508  1035  0823               	movf	___fpclassifyf@u+1,w
 15509  1036  00F6               	movwf	??___fpclassifyf+1
 15510  1037  0824               	movf	___fpclassifyf@u+2,w
 15511  1038  00F7               	movwf	??___fpclassifyf+2
 15512  1039  0825               	movf	___fpclassifyf@u+3,w
 15513  103A  00F8               	movwf	??___fpclassifyf+3
 15514  103B  3001               	movlw	1
 15515  103C                     u5035:
 15516  103C  35F5               	lslf	??___fpclassifyf,f
 15517  103D  0DF6               	rlf	??___fpclassifyf+1,f
 15518  103E  0DF7               	rlf	??___fpclassifyf+2,f
 15519  103F  0DF8               	rlf	??___fpclassifyf+3,f
 15520  1040                     u5030:
 15521  1040  0B89               	decfsz	9,f
 15522  1041  283C               	goto	u5035
 15523  1042  0878               	movf	??___fpclassifyf+3,w
 15524  1043  0477               	iorwf	??___fpclassifyf+2,w
 15525  1044  0476               	iorwf	??___fpclassifyf+1,w
 15526  1045  0475               	iorwf	??___fpclassifyf,w
 15527  1046  1D03               	skipz
 15528  1047  2849               	goto	u5041
 15529  1048  284A               	goto	u5040
 15530  1049                     u5041:
 15531  1049  284F               	goto	l4495
 15532  104A                     u5040:
 15533  104A                     l4493:
 15534  104A  3002               	movlw	2
 15535  104B  00F1               	movwf	?___fpclassifyf
 15536  104C  3000               	movlw	0
 15537  104D  00F2               	movwf	?___fpclassifyf+1
 15538  104E  287E               	goto	l1465
 15539  104F                     l4495:
 15540  104F  3003               	movlw	3
 15541  1050  00F1               	movwf	?___fpclassifyf
 15542  1051  3000               	movlw	0
 15543  1052  00F2               	movwf	?___fpclassifyf+1
 15544  1053  287E               	goto	l1465
 15545  1054                     l4499:
 15546  1054  0A20               	incf	___fpclassifyf@e,w
 15547  1055  0421               	iorwf	___fpclassifyf@e+1,w
 15548  1056  1D03               	btfss	3,2
 15549  1057  2859               	goto	u5051
 15550  1058  285A               	goto	u5050
 15551  1059                     u5051:
 15552  1059  287A               	goto	l4505
 15553  105A                     u5050:
 15554  105A                     l4501:
 15555  105A  0822               	movf	___fpclassifyf@u,w
 15556  105B  00F5               	movwf	??___fpclassifyf
 15557  105C  0823               	movf	___fpclassifyf@u+1,w
 15558  105D  00F6               	movwf	??___fpclassifyf+1
 15559  105E  0824               	movf	___fpclassifyf@u+2,w
 15560  105F  00F7               	movwf	??___fpclassifyf+2
 15561  1060  0825               	movf	___fpclassifyf@u+3,w
 15562  1061  00F8               	movwf	??___fpclassifyf+3
 15563  1062  3009               	movlw	9
 15564  1063                     u5065:
 15565  1063  35F5               	lslf	??___fpclassifyf,f
 15566  1064  0DF6               	rlf	??___fpclassifyf+1,f
 15567  1065  0DF7               	rlf	??___fpclassifyf+2,f
 15568  1066  0DF8               	rlf	??___fpclassifyf+3,f
 15569  1067                     u5060:
 15570  1067  0B89               	decfsz	9,f
 15571  1068  2863               	goto	u5065
 15572  1069  0878               	movf	??___fpclassifyf+3,w
 15573  106A  0477               	iorwf	??___fpclassifyf+2,w
 15574  106B  0476               	iorwf	??___fpclassifyf+1,w
 15575  106C  0475               	iorwf	??___fpclassifyf,w
 15576  106D  1903               	skipnz
 15577  106E  2870               	goto	u5071
 15578  106F  2872               	goto	u5070
 15579  1070                     u5071:
 15580  1070  3001               	movlw	1
 15581  1071  2873               	goto	u5080
 15582  1072                     u5070:
 15583  1072  3000               	movlw	0
 15584  1073                     u5080:
 15585  1073  00F9               	movwf	??___fpclassifyf+4
 15586  1074  01FA               	clrf	??___fpclassifyf+5
 15587  1075  0879               	movf	??___fpclassifyf+4,w
 15588  1076  00F1               	movwf	?___fpclassifyf
 15589  1077  087A               	movf	??___fpclassifyf+5,w
 15590  1078  00F2               	movwf	?___fpclassifyf+1
 15591  1079  287E               	goto	l1465
 15592  107A                     l4505:
 15593  107A  3004               	movlw	4
 15594  107B  00F1               	movwf	?___fpclassifyf
 15595  107C  3000               	movlw	0
 15596  107D  00F2               	movwf	?___fpclassifyf+1
 15597  107E                     l1465:
 15598  107E  0008               	return
 15599  107F                     __end_of___fpclassifyf:
 15600                           
 15601                           	psect	text28
 15602  1DDD                     __ptext28:	
 15603 ;; *************** function ___fltol *****************
 15604 ;; Defined at:
 15605 ;;		line 43 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/fltol.c"
 15606 ;; Parameters:    Size  Location     Type
 15607 ;;  f1              4    1[COMMON] int 
 15608 ;; Auto vars:     Size  Location     Type
 15609 ;;  exp1            1   11[COMMON] unsigned char 
 15610 ;;  sign1           1   10[COMMON] unsigned char 
 15611 ;; Return value:  Size  Location     Type
 15612 ;;                  4    1[COMMON] long 
 15613 ;; Registers used:
 15614 ;;		wreg, status,2, status,0
 15615 ;; Tracked objects:
 15616 ;;		On entry : 0/0
 15617 ;;		On exit  : 0/0
 15618 ;;		Unchanged: 0/0
 15619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15620 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15621 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15622 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15623 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15624 ;;Total ram usage:       11 bytes
 15625 ;; Hardware stack levels used:    1
 15626 ;; Hardware stack levels required when called:    4
 15627 ;; This function calls:
 15628 ;;		Nothing
 15629 ;; This function is called by:
 15630 ;;		_efgtoa
 15631 ;; This function uses a non-reentrant model
 15632 ;;
 15633                           
 15634                           
 15635                           ;psect for function ___fltol
 15636  1DDD                     ___fltol:
 15637  1DDD                     l4141:	
 15638                           ;incstack = 0
 15639                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 15640                           
 15641  1DDD  1003               	clrc
 15642  1DDE  0D73               	rlf	___fltol@f1+2,w
 15643  1DDF  0D74               	rlf	___fltol@f1+3,w
 15644  1DE0  00F5               	movwf	??___fltol
 15645  1DE1  0875               	movf	??___fltol,w
 15646  1DE2  00FB               	movwf	___fltol@exp1
 15647  1DE3  087B               	movf	___fltol@exp1,w
 15648  1DE4  1D03               	btfss	3,2
 15649  1DE5  2DE7               	goto	u4321
 15650  1DE6  2DE8               	goto	u4320
 15651  1DE7                     u4321:
 15652  1DE7  2DF1               	goto	l4147
 15653  1DE8                     u4320:
 15654  1DE8                     l4143:
 15655  1DE8  3000               	movlw	0
 15656  1DE9  00F4               	movwf	?___fltol+3
 15657  1DEA  3000               	movlw	0
 15658  1DEB  00F3               	movwf	?___fltol+2
 15659  1DEC  3000               	movlw	0
 15660  1DED  00F2               	movwf	?___fltol+1
 15661  1DEE  3000               	movlw	0
 15662  1DEF  00F1               	movwf	?___fltol
 15663  1DF0  2E50               	goto	l1006
 15664  1DF1                     l4147:
 15665  1DF1  0871               	movf	___fltol@f1,w
 15666  1DF2  00F5               	movwf	??___fltol
 15667  1DF3  0872               	movf	___fltol@f1+1,w
 15668  1DF4  00F6               	movwf	??___fltol+1
 15669  1DF5  0873               	movf	___fltol@f1+2,w
 15670  1DF6  00F7               	movwf	??___fltol+2
 15671  1DF7  0874               	movf	___fltol@f1+3,w
 15672  1DF8  00F8               	movwf	??___fltol+3
 15673  1DF9  301F               	movlw	31
 15674  1DFA                     u4335:
 15675  1DFA  36F8               	lsrf	??___fltol+3,f
 15676  1DFB  0CF7               	rrf	??___fltol+2,f
 15677  1DFC  0CF6               	rrf	??___fltol+1,f
 15678  1DFD  0CF5               	rrf	??___fltol,f
 15679  1DFE                     u4330:
 15680  1DFE  0B89               	decfsz	9,f
 15681  1DFF  2DFA               	goto	u4335
 15682  1E00  0875               	movf	??___fltol,w
 15683  1E01  00F9               	movwf	??___fltol+4
 15684  1E02  0879               	movf	??___fltol+4,w
 15685  1E03  00FA               	movwf	___fltol@sign1
 15686  1E04                     l4149:
 15687  1E04  17F3               	bsf	___fltol@f1+2,7
 15688  1E05                     l4151:
 15689  1E05  30FF               	movlw	255
 15690  1E06  05F1               	andwf	___fltol@f1,f
 15691  1E07  30FF               	movlw	255
 15692  1E08  05F2               	andwf	___fltol@f1+1,f
 15693  1E09  30FF               	movlw	255
 15694  1E0A  05F3               	andwf	___fltol@f1+2,f
 15695  1E0B  3000               	movlw	0
 15696  1E0C  05F4               	andwf	___fltol@f1+3,f
 15697  1E0D                     l4153:
 15698  1E0D  3096               	movlw	150
 15699  1E0E  02FB               	subwf	___fltol@exp1,f
 15700  1E0F                     l4155:
 15701  1E0F  1FFB               	btfss	___fltol@exp1,7
 15702  1E10  2E12               	goto	u4341
 15703  1E11  2E13               	goto	u4340
 15704  1E12                     u4341:
 15705  1E12  2E2B               	goto	l4165
 15706  1E13                     u4340:
 15707  1E13                     l4157:
 15708  1E13  087B               	movf	___fltol@exp1,w
 15709  1E14  3A80               	xorlw	128
 15710  1E15  3E97               	addlw	151
 15711  1E16  1803               	skipnc
 15712  1E17  2E19               	goto	u4351
 15713  1E18  2E1A               	goto	u4350
 15714  1E19                     u4351:
 15715  1E19  2E1B               	goto	l4163
 15716  1E1A                     u4350:
 15717  1E1A  2DE8               	goto	l4143
 15718  1E1B                     l4163:
 15719  1E1B  3001               	movlw	1
 15720  1E1C                     u4365:
 15721  1E1C  36F4               	lsrf	___fltol@f1+3,f
 15722  1E1D  0CF3               	rrf	___fltol@f1+2,f
 15723  1E1E  0CF2               	rrf	___fltol@f1+1,f
 15724  1E1F  0CF1               	rrf	___fltol@f1,f
 15725  1E20  0B89               	decfsz	9,f
 15726  1E21  2E1C               	goto	u4365
 15727  1E22  3001               	movlw	1
 15728  1E23  00F5               	movwf	??___fltol
 15729  1E24  0875               	movf	??___fltol,w
 15730  1E25  07FB               	addwf	___fltol@exp1,f
 15731  1E26  1D03               	btfss	3,2
 15732  1E27  2E29               	goto	u4371
 15733  1E28  2E2A               	goto	u4370
 15734  1E29                     u4371:
 15735  1E29  2E1B               	goto	l4163
 15736  1E2A                     u4370:
 15737  1E2A  2E40               	goto	l4173
 15738  1E2B                     l4165:
 15739  1E2B  3020               	movlw	32
 15740  1E2C  027B               	subwf	___fltol@exp1,w
 15741  1E2D  1C03               	skipc
 15742  1E2E  2E30               	goto	u4381
 15743  1E2F  2E31               	goto	u4380
 15744  1E30                     u4381:
 15745  1E30  2E3B               	goto	l1013
 15746  1E31                     u4380:
 15747  1E31  2DE8               	goto	l4143
 15748  1E32                     l4171:
 15749  1E32  3001               	movlw	1
 15750  1E33                     u4395:
 15751  1E33  35F1               	lslf	___fltol@f1,f
 15752  1E34  0DF2               	rlf	___fltol@f1+1,f
 15753  1E35  0DF3               	rlf	___fltol@f1+2,f
 15754  1E36  0DF4               	rlf	___fltol@f1+3,f
 15755  1E37  0B89               	decfsz	9,f
 15756  1E38  2E33               	goto	u4395
 15757  1E39  3001               	movlw	1
 15758  1E3A  02FB               	subwf	___fltol@exp1,f
 15759  1E3B                     l1013:
 15760  1E3B  087B               	movf	___fltol@exp1,w
 15761  1E3C  1D03               	btfss	3,2
 15762  1E3D  2E3F               	goto	u4401
 15763  1E3E  2E40               	goto	u4400
 15764  1E3F                     u4401:
 15765  1E3F  2E32               	goto	l4171
 15766  1E40                     u4400:
 15767  1E40                     l4173:
 15768  1E40  087A               	movf	___fltol@sign1,w
 15769  1E41  1903               	btfsc	3,2
 15770  1E42  2E44               	goto	u4411
 15771  1E43  2E45               	goto	u4410
 15772  1E44                     u4411:
 15773  1E44  2E50               	goto	l1016
 15774  1E45                     u4410:
 15775  1E45                     l4175:
 15776  1E45  09F1               	comf	___fltol@f1,f
 15777  1E46  09F2               	comf	___fltol@f1+1,f
 15778  1E47  09F3               	comf	___fltol@f1+2,f
 15779  1E48  09F4               	comf	___fltol@f1+3,f
 15780  1E49  0AF1               	incf	___fltol@f1,f
 15781  1E4A  1903               	skipnz
 15782  1E4B  0AF2               	incf	___fltol@f1+1,f
 15783  1E4C  1903               	skipnz
 15784  1E4D  0AF3               	incf	___fltol@f1+2,f
 15785  1E4E  1903               	skipnz
 15786  1E4F  0AF4               	incf	___fltol@f1+3,f
 15787  1E50                     l1016:
 15788  1E50                     l1006:
 15789  1E50  0008               	return
 15790  1E51                     __end_of___fltol:
 15791                           
 15792                           	psect	text29
 15793  183B                     __ptext29:	
 15794 ;; *************** function ___flsub *****************
 15795 ;; Defined at:
 15796 ;;		line 242 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/sprcadd.c"
 15797 ;; Parameters:    Size  Location     Type
 15798 ;;  a               4   32[BANK0 ] long 
 15799 ;;  b               4   36[BANK0 ] long 
 15800 ;; Auto vars:     Size  Location     Type
 15801 ;;		None
 15802 ;; Return value:  Size  Location     Type
 15803 ;;                  4   32[BANK0 ] long 
 15804 ;; Registers used:
 15805 ;;		wreg, status,2, status,0, pclath, cstack
 15806 ;; Tracked objects:
 15807 ;;		On entry : 0/0
 15808 ;;		On exit  : 0/0
 15809 ;;		Unchanged: 0/0
 15810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15811 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15814 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15815 ;;Total ram usage:        8 bytes
 15816 ;; Hardware stack levels used:    1
 15817 ;; Hardware stack levels required when called:    5
 15818 ;; This function calls:
 15819 ;;		___fladd
 15820 ;; This function is called by:
 15821 ;;		_efgtoa
 15822 ;; This function uses a non-reentrant model
 15823 ;;
 15824                           
 15825                           
 15826                           ;psect for function ___flsub
 15827  183B                     ___flsub:
 15828  183B                     l6065:	
 15829                           ;incstack = 0
 15830                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 15831                           
 15832  183B  3080               	movlw	128
 15833  183C  0140               	movlb	0	; select bank0
 15834  183D  06C3               	xorwf	___flsub@a+3,f
 15835  183E                     l6067:
 15836  183E  0847               	movf	___flsub@b+3,w
 15837  183F  00F4               	movwf	___fladd@b+3
 15838  1840  0846               	movf	___flsub@b+2,w
 15839  1841  00F3               	movwf	___fladd@b+2
 15840  1842  0845               	movf	___flsub@b+1,w
 15841  1843  00F2               	movwf	___fladd@b+1
 15842  1844  0844               	movf	___flsub@b,w
 15843  1845  00F1               	movwf	___fladd@b
 15844  1846  0843               	movf	___flsub@a+3,w
 15845  1847  00F8               	movwf	___fladd@a+3
 15846  1848  0842               	movf	___flsub@a+2,w
 15847  1849  00F7               	movwf	___fladd@a+2
 15848  184A  0841               	movf	___flsub@a+1,w
 15849  184B  00F6               	movwf	___fladd@a+1
 15850  184C  0840               	movf	___flsub@a,w
 15851  184D  00F5               	movwf	___fladd@a
 15852  184E  3188  2004  3198   	fcall	___fladd
 15853  1851  0874               	movf	?___fladd+3,w
 15854  1852  0140               	movlb	0	; select bank0
 15855  1853  00C3               	movwf	?___flsub+3
 15856  1854  0873               	movf	?___fladd+2,w
 15857  1855  00C2               	movwf	?___flsub+2
 15858  1856  0872               	movf	?___fladd+1,w
 15859  1857  00C1               	movwf	?___flsub+1
 15860  1858  0871               	movf	?___fladd,w
 15861  1859  00C0               	movwf	?___flsub
 15862  185A                     l1159:
 15863  185A  0008               	return
 15864  185B                     __end_of___flsub:
 15865                           
 15866                           	psect	text30
 15867  0804                     __ptext30:	
 15868 ;; *************** function ___fladd *****************
 15869 ;; Defined at:
 15870 ;;		line 10 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/sprcadd.c"
 15871 ;; Parameters:    Size  Location     Type
 15872 ;;  b               4    1[COMMON] long 
 15873 ;;  a               4    5[COMMON] long 
 15874 ;; Auto vars:     Size  Location     Type
 15875 ;;  grs             1   11[BANK0 ] unsigned char 
 15876 ;;  bexp            1   10[BANK0 ] unsigned char 
 15877 ;;  aexp            1    9[BANK0 ] unsigned char 
 15878 ;;  signs           1    8[BANK0 ] unsigned char 
 15879 ;; Return value:  Size  Location     Type
 15880 ;;                  4    1[COMMON] unsigned char 
 15881 ;; Registers used:
 15882 ;;		wreg, status,2, status,0
 15883 ;; Tracked objects:
 15884 ;;		On entry : 0/0
 15885 ;;		On exit  : 0/0
 15886 ;;		Unchanged: 0/0
 15887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15888 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15889 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15890 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15891 ;;      Totals:         8      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15892 ;;Total ram usage:       20 bytes
 15893 ;; Hardware stack levels used:    1
 15894 ;; Hardware stack levels required when called:    4
 15895 ;; This function calls:
 15896 ;;		Nothing
 15897 ;; This function is called by:
 15898 ;;		___flsub
 15899 ;;		_efgtoa
 15900 ;; This function uses a non-reentrant model
 15901 ;;
 15902                           
 15903                           
 15904                           ;psect for function ___fladd
 15905  0804                     ___fladd:
 15906  0804                     l5847:	
 15907                           ;incstack = 0
 15908                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 15909                           
 15910  0804  0874               	movf	___fladd@b+3,w
 15911  0805  3980               	andlw	128
 15912  0806  0140               	movlb	0	; select bank0
 15913  0807  00A0               	movwf	??___fladd
 15914  0808  0820               	movf	??___fladd,w
 15915  0809  00A8               	movwf	___fladd@signs
 15916  080A                     l5849:
 15917  080A  3574               	lslf	___fladd@b+3,w
 15918  080B  00A0               	movwf	??___fladd
 15919  080C  0820               	movf	??___fladd,w
 15920  080D  00AA               	movwf	___fladd@bexp
 15921  080E                     l5851:
 15922  080E  1FF3               	btfss	___fladd@b+2,7
 15923  080F  2811               	goto	u6911
 15924  0810  2812               	goto	u6910
 15925  0811                     u6911:
 15926  0811  2813               	goto	l5855
 15927  0812                     u6910:
 15928  0812                     l5853:
 15929  0812  142A               	bsf	___fladd@bexp,0
 15930  0813                     l5855:
 15931  0813  082A               	movf	___fladd@bexp,w
 15932  0814  1903               	btfsc	3,2
 15933  0815  2817               	goto	u6921
 15934  0816  2818               	goto	u6920
 15935  0817                     u6921:
 15936  0817  2828               	goto	l5865
 15937  0818                     u6920:
 15938  0818                     l5857:
 15939  0818  0A2A               	incf	___fladd@bexp,w
 15940  0819  1D03               	btfss	3,2
 15941  081A  281C               	goto	u6931
 15942  081B  281D               	goto	u6930
 15943  081C                     u6931:
 15944  081C  2825               	goto	l5861
 15945  081D                     u6930:
 15946  081D                     l5859:
 15947  081D  3000               	movlw	0
 15948  081E  00F4               	movwf	___fladd@b+3
 15949  081F  3000               	movlw	0
 15950  0820  00F3               	movwf	___fladd@b+2
 15951  0821  3000               	movlw	0
 15952  0822  00F2               	movwf	___fladd@b+1
 15953  0823  3000               	movlw	0
 15954  0824  00F1               	movwf	___fladd@b
 15955  0825                     l5861:
 15956  0825  17F3               	bsf	___fladd@b+2,7
 15957  0826                     l5863:
 15958  0826  01F4               	clrf	___fladd@b+3
 15959  0827  2830               	goto	l5867
 15960  0828                     l5865:
 15961  0828  3000               	movlw	0
 15962  0829  00F4               	movwf	___fladd@b+3
 15963  082A  3000               	movlw	0
 15964  082B  00F3               	movwf	___fladd@b+2
 15965  082C  3000               	movlw	0
 15966  082D  00F2               	movwf	___fladd@b+1
 15967  082E  3000               	movlw	0
 15968  082F  00F1               	movwf	___fladd@b
 15969  0830                     l5867:
 15970  0830  0878               	movf	___fladd@a+3,w
 15971  0831  3980               	andlw	128
 15972  0832  00A0               	movwf	??___fladd
 15973  0833  0820               	movf	??___fladd,w
 15974  0834  00A9               	movwf	___fladd@aexp
 15975  0835                     l5869:
 15976  0835  0829               	movf	___fladd@aexp,w
 15977  0836  0628               	xorwf	___fladd@signs,w
 15978  0837  1903               	skipnz
 15979  0838  283A               	goto	u6941
 15980  0839  283B               	goto	u6940
 15981  083A                     u6941:
 15982  083A  283C               	goto	l5873
 15983  083B                     u6940:
 15984  083B                     l5871:
 15985  083B  1728               	bsf	___fladd@signs,6
 15986  083C                     l5873:
 15987  083C  3578               	lslf	___fladd@a+3,w
 15988  083D  00A0               	movwf	??___fladd
 15989  083E  0820               	movf	??___fladd,w
 15990  083F  00A9               	movwf	___fladd@aexp
 15991  0840                     l5875:
 15992  0840  1FF7               	btfss	___fladd@a+2,7
 15993  0841  2843               	goto	u6951
 15994  0842  2844               	goto	u6950
 15995  0843                     u6951:
 15996  0843  2845               	goto	l5879
 15997  0844                     u6950:
 15998  0844                     l5877:
 15999  0844  1429               	bsf	___fladd@aexp,0
 16000  0845                     l5879:
 16001  0845  0829               	movf	___fladd@aexp,w
 16002  0846  1903               	btfsc	3,2
 16003  0847  2849               	goto	u6961
 16004  0848  284A               	goto	u6960
 16005  0849                     u6961:
 16006  0849  285A               	goto	l5889
 16007  084A                     u6960:
 16008  084A                     l5881:
 16009  084A  0A29               	incf	___fladd@aexp,w
 16010  084B  1D03               	btfss	3,2
 16011  084C  284E               	goto	u6971
 16012  084D  284F               	goto	u6970
 16013  084E                     u6971:
 16014  084E  2857               	goto	l5885
 16015  084F                     u6970:
 16016  084F                     l5883:
 16017  084F  3000               	movlw	0
 16018  0850  00F8               	movwf	___fladd@a+3
 16019  0851  3000               	movlw	0
 16020  0852  00F7               	movwf	___fladd@a+2
 16021  0853  3000               	movlw	0
 16022  0854  00F6               	movwf	___fladd@a+1
 16023  0855  3000               	movlw	0
 16024  0856  00F5               	movwf	___fladd@a
 16025  0857                     l5885:
 16026  0857  17F7               	bsf	___fladd@a+2,7
 16027  0858                     l5887:
 16028  0858  01F8               	clrf	___fladd@a+3
 16029  0859  2862               	goto	l1113
 16030  085A                     l5889:
 16031  085A  3000               	movlw	0
 16032  085B  00F8               	movwf	___fladd@a+3
 16033  085C  3000               	movlw	0
 16034  085D  00F7               	movwf	___fladd@a+2
 16035  085E  3000               	movlw	0
 16036  085F  00F6               	movwf	___fladd@a+1
 16037  0860  3000               	movlw	0
 16038  0861  00F5               	movwf	___fladd@a
 16039  0862                     l1113:
 16040  0862  082A               	movf	___fladd@bexp,w
 16041  0863  0229               	subwf	___fladd@aexp,w
 16042  0864  1803               	skipnc
 16043  0865  2867               	goto	u6981
 16044  0866  2868               	goto	u6980
 16045  0867                     u6981:
 16046  0867  28AC               	goto	l5925
 16047  0868                     u6980:
 16048  0868                     l5891:
 16049  0868  1F28               	btfss	___fladd@signs,6
 16050  0869  286B               	goto	u6991
 16051  086A  286C               	goto	u6990
 16052  086B                     u6991:
 16053  086B  2870               	goto	l5895
 16054  086C                     u6990:
 16055  086C                     l5893:
 16056  086C  3080               	movlw	128
 16057  086D  00A0               	movwf	??___fladd
 16058  086E  0820               	movf	??___fladd,w
 16059  086F  06A8               	xorwf	___fladd@signs,f
 16060  0870                     l5895:
 16061  0870  082A               	movf	___fladd@bexp,w
 16062  0871  00A0               	movwf	??___fladd
 16063  0872  0820               	movf	??___fladd,w
 16064  0873  00AB               	movwf	___fladd@grs
 16065  0874                     l5897:
 16066  0874  0829               	movf	___fladd@aexp,w
 16067  0875  00A0               	movwf	??___fladd
 16068  0876  0820               	movf	??___fladd,w
 16069  0877  00AA               	movwf	___fladd@bexp
 16070  0878                     l5899:
 16071  0878  082B               	movf	___fladd@grs,w
 16072  0879  00A0               	movwf	??___fladd
 16073  087A  0820               	movf	??___fladd,w
 16074  087B  00A9               	movwf	___fladd@aexp
 16075  087C                     l5901:
 16076  087C  0871               	movf	___fladd@b,w
 16077  087D  00A0               	movwf	??___fladd
 16078  087E  0820               	movf	??___fladd,w
 16079  087F  00AB               	movwf	___fladd@grs
 16080  0880                     l5903:
 16081  0880  0875               	movf	___fladd@a,w
 16082  0881  00A0               	movwf	??___fladd
 16083  0882  0820               	movf	??___fladd,w
 16084  0883  00F1               	movwf	___fladd@b
 16085  0884                     l5905:
 16086  0884  082B               	movf	___fladd@grs,w
 16087  0885  00A0               	movwf	??___fladd
 16088  0886  0820               	movf	??___fladd,w
 16089  0887  00F5               	movwf	___fladd@a
 16090  0888                     l5907:
 16091  0888  0872               	movf	___fladd@b+1,w
 16092  0889  00A0               	movwf	??___fladd
 16093  088A  0820               	movf	??___fladd,w
 16094  088B  00AB               	movwf	___fladd@grs
 16095  088C                     l5909:
 16096  088C  0876               	movf	___fladd@a+1,w
 16097  088D  00A0               	movwf	??___fladd
 16098  088E  0820               	movf	??___fladd,w
 16099  088F  00F2               	movwf	___fladd@b+1
 16100  0890                     l5911:
 16101  0890  082B               	movf	___fladd@grs,w
 16102  0891  00A0               	movwf	??___fladd
 16103  0892  0820               	movf	??___fladd,w
 16104  0893  00F6               	movwf	___fladd@a+1
 16105  0894                     l5913:
 16106  0894  0873               	movf	___fladd@b+2,w
 16107  0895  00A0               	movwf	??___fladd
 16108  0896  0820               	movf	??___fladd,w
 16109  0897  00AB               	movwf	___fladd@grs
 16110  0898                     l5915:
 16111  0898  0877               	movf	___fladd@a+2,w
 16112  0899  00A0               	movwf	??___fladd
 16113  089A  0820               	movf	??___fladd,w
 16114  089B  00F3               	movwf	___fladd@b+2
 16115  089C                     l5917:
 16116  089C  082B               	movf	___fladd@grs,w
 16117  089D  00A0               	movwf	??___fladd
 16118  089E  0820               	movf	??___fladd,w
 16119  089F  00F7               	movwf	___fladd@a+2
 16120  08A0                     l5919:
 16121  08A0  0874               	movf	___fladd@b+3,w
 16122  08A1  00A0               	movwf	??___fladd
 16123  08A2  0820               	movf	??___fladd,w
 16124  08A3  00AB               	movwf	___fladd@grs
 16125  08A4                     l5921:
 16126  08A4  0878               	movf	___fladd@a+3,w
 16127  08A5  00A0               	movwf	??___fladd
 16128  08A6  0820               	movf	??___fladd,w
 16129  08A7  00F4               	movwf	___fladd@b+3
 16130  08A8                     l5923:
 16131  08A8  082B               	movf	___fladd@grs,w
 16132  08A9  00A0               	movwf	??___fladd
 16133  08AA  0820               	movf	??___fladd,w
 16134  08AB  00F8               	movwf	___fladd@a+3
 16135  08AC                     l5925:
 16136  08AC  01AB               	clrf	___fladd@grs
 16137  08AD                     l5927:
 16138  08AD  0829               	movf	___fladd@aexp,w
 16139  08AE  00A0               	movwf	??___fladd
 16140  08AF  01A1               	clrf	??___fladd+1
 16141  08B0  0821               	movf	??___fladd+1,w
 16142  08B1  00A3               	movwf	??___fladd+3
 16143  08B2  082A               	movf	___fladd@bexp,w
 16144  08B3  0220               	subwf	??___fladd,w
 16145  08B4  00A2               	movwf	??___fladd+2
 16146  08B5  1C03               	skipc
 16147  08B6  03A3               	decf	??___fladd+3,f
 16148  08B7  0823               	movf	??___fladd+3,w
 16149  08B8  3A80               	xorlw	128
 16150  08B9  00A4               	movwf	??___fladd+4
 16151  08BA  3080               	movlw	128
 16152  08BB  0224               	subwf	??___fladd+4,w
 16153  08BC  1D03               	skipz
 16154  08BD  28C0               	goto	u7005
 16155  08BE  301A               	movlw	26
 16156  08BF  0222               	subwf	??___fladd+2,w
 16157  08C0                     u7005:
 16158  08C0  1C03               	skipc
 16159  08C1  28C3               	goto	u7001
 16160  08C2  28C4               	goto	u7000
 16161  08C3                     u7001:
 16162  08C3  28FC               	goto	l5943
 16163  08C4                     u7000:
 16164  08C4                     l5929:
 16165  08C4  0874               	movf	___fladd@b+3,w
 16166  08C5  0473               	iorwf	___fladd@b+2,w
 16167  08C6  0472               	iorwf	___fladd@b+1,w
 16168  08C7  0471               	iorwf	___fladd@b,w
 16169  08C8  1D03               	skipz
 16170  08C9  28CB               	goto	u7011
 16171  08CA  28CD               	goto	u7010
 16172  08CB                     u7011:
 16173  08CB  3001               	movlw	1
 16174  08CC  28CE               	goto	u7020
 16175  08CD                     u7010:
 16176  08CD  3000               	movlw	0
 16177  08CE                     u7020:
 16178  08CE  0140               	movlb	0	; select bank0
 16179  08CF  00A0               	movwf	??___fladd
 16180  08D0  0820               	movf	??___fladd,w
 16181  08D1  00AB               	movwf	___fladd@grs
 16182  08D2  3000               	movlw	0
 16183  08D3  00F4               	movwf	___fladd@b+3
 16184  08D4  3000               	movlw	0
 16185  08D5  00F3               	movwf	___fladd@b+2
 16186  08D6  3000               	movlw	0
 16187  08D7  00F2               	movwf	___fladd@b+1
 16188  08D8  3000               	movlw	0
 16189  08D9  00F1               	movwf	___fladd@b
 16190  08DA  0829               	movf	___fladd@aexp,w
 16191  08DB  00A0               	movwf	??___fladd
 16192  08DC  0820               	movf	??___fladd,w
 16193  08DD  00AA               	movwf	___fladd@bexp
 16194  08DE  2903               	goto	l1117
 16195  08DF                     l1119:
 16196  08DF  1C2B               	btfss	___fladd@grs,0
 16197  08E0  28E2               	goto	u7031
 16198  08E1  28E3               	goto	u7030
 16199  08E2                     u7031:
 16200  08E2  28E9               	goto	l5933
 16201  08E3                     u7030:
 16202  08E3                     l5931:
 16203  08E3  362B               	lsrf	___fladd@grs,w
 16204  08E4  3801               	iorlw	1
 16205  08E5  00A0               	movwf	??___fladd
 16206  08E6  0820               	movf	??___fladd,w
 16207  08E7  00AB               	movwf	___fladd@grs
 16208  08E8  28EB               	goto	l5935
 16209  08E9                     l5933:
 16210  08E9  1003               	clrc
 16211  08EA  0CAB               	rrf	___fladd@grs,f
 16212  08EB                     l5935:
 16213  08EB  1C71               	btfss	___fladd@b,0
 16214  08EC  28EE               	goto	u7041
 16215  08ED  28EF               	goto	u7040
 16216  08EE                     u7041:
 16217  08EE  28F0               	goto	l5939
 16218  08EF                     u7040:
 16219  08EF                     l5937:
 16220  08EF  17AB               	bsf	___fladd@grs,7
 16221  08F0                     l5939:
 16222  08F0  3001               	movlw	1
 16223  08F1  00A0               	movwf	??___fladd
 16224  08F2                     u7055:
 16225  08F2  37F4               	asrf	___fladd@b+3,f
 16226  08F3  0CF3               	rrf	___fladd@b+2,f
 16227  08F4  0CF2               	rrf	___fladd@b+1,f
 16228  08F5  0CF1               	rrf	___fladd@b,f
 16229  08F6  0BA0               	decfsz	??___fladd& (0+127),f
 16230  08F7  28F2               	goto	u7055
 16231  08F8                     l5941:
 16232  08F8  3001               	movlw	1
 16233  08F9  00A0               	movwf	??___fladd
 16234  08FA  0820               	movf	??___fladd,w
 16235  08FB  07AA               	addwf	___fladd@bexp,f
 16236  08FC                     l5943:
 16237  08FC  0140               	movlb	0	; select bank0
 16238  08FD  0829               	movf	___fladd@aexp,w
 16239  08FE  022A               	subwf	___fladd@bexp,w
 16240  08FF  1C03               	skipc
 16241  0900  2902               	goto	u7061
 16242  0901  2903               	goto	u7060
 16243  0902                     u7061:
 16244  0902  28DF               	goto	l1119
 16245  0903                     u7060:
 16246  0903                     l1117:
 16247  0903  1B28               	btfsc	___fladd@signs,6
 16248  0904  2906               	goto	u7071
 16249  0905  2907               	goto	u7070
 16250  0906                     u7071:
 16251  0906  293F               	goto	l5969
 16252  0907                     u7070:
 16253  0907                     l5945:
 16254  0907  082A               	movf	___fladd@bexp,w
 16255  0908  1D03               	btfss	3,2
 16256  0909  290B               	goto	u7081
 16257  090A  290C               	goto	u7080
 16258  090B                     u7081:
 16259  090B  2915               	goto	l5951
 16260  090C                     u7080:
 16261  090C                     l5947:
 16262  090C  3000               	movlw	0
 16263  090D  00F4               	movwf	?___fladd+3
 16264  090E  3000               	movlw	0
 16265  090F  00F3               	movwf	?___fladd+2
 16266  0910  3000               	movlw	0
 16267  0911  00F2               	movwf	?___fladd+1
 16268  0912  3000               	movlw	0
 16269  0913  00F1               	movwf	?___fladd
 16270  0914  2A3B               	goto	l1126
 16271  0915                     l5951:
 16272  0915  0875               	movf	___fladd@a,w
 16273  0916  07F1               	addwf	___fladd@b,f
 16274  0917  0876               	movf	___fladd@a+1,w
 16275  0918  3DF2               	addwfc	___fladd@b+1,f
 16276  0919  0877               	movf	___fladd@a+2,w
 16277  091A  3DF3               	addwfc	___fladd@b+2,f
 16278  091B  0878               	movf	___fladd@a+3,w
 16279  091C  3DF4               	addwfc	___fladd@b+3,f
 16280  091D                     l5953:
 16281  091D  1C74               	btfss	___fladd@b+3,0
 16282  091E  2920               	goto	u7091
 16283  091F  2921               	goto	u7090
 16284  0920                     u7091:
 16285  0920  29CB               	goto	l6003
 16286  0921                     u7090:
 16287  0921                     l5955:
 16288  0921  1C2B               	btfss	___fladd@grs,0
 16289  0922  2924               	goto	u7101
 16290  0923  2925               	goto	u7100
 16291  0924                     u7101:
 16292  0924  292B               	goto	l5959
 16293  0925                     u7100:
 16294  0925                     l5957:
 16295  0925  362B               	lsrf	___fladd@grs,w
 16296  0926  3801               	iorlw	1
 16297  0927  00A0               	movwf	??___fladd
 16298  0928  0820               	movf	??___fladd,w
 16299  0929  00AB               	movwf	___fladd@grs
 16300  092A  292D               	goto	l5961
 16301  092B                     l5959:
 16302  092B  1003               	clrc
 16303  092C  0CAB               	rrf	___fladd@grs,f
 16304  092D                     l5961:
 16305  092D  1C71               	btfss	___fladd@b,0
 16306  092E  2930               	goto	u7111
 16307  092F  2931               	goto	u7110
 16308  0930                     u7111:
 16309  0930  2932               	goto	l5965
 16310  0931                     u7110:
 16311  0931                     l5963:
 16312  0931  17AB               	bsf	___fladd@grs,7
 16313  0932                     l5965:
 16314  0932  3001               	movlw	1
 16315  0933  00A0               	movwf	??___fladd
 16316  0934                     u7125:
 16317  0934  37F4               	asrf	___fladd@b+3,f
 16318  0935  0CF3               	rrf	___fladd@b+2,f
 16319  0936  0CF2               	rrf	___fladd@b+1,f
 16320  0937  0CF1               	rrf	___fladd@b,f
 16321  0938  0BA0               	decfsz	??___fladd& (0+127),f
 16322  0939  2934               	goto	u7125
 16323  093A                     l5967:
 16324  093A  3001               	movlw	1
 16325  093B  00A0               	movwf	??___fladd
 16326  093C  0820               	movf	??___fladd,w
 16327  093D  07AA               	addwf	___fladd@bexp,f
 16328  093E  29CB               	goto	l6003
 16329  093F                     l5969:
 16330  093F  0874               	movf	___fladd@b+3,w
 16331  0940  3A80               	xorlw	128
 16332  0941  00A0               	movwf	??___fladd
 16333  0942  0878               	movf	___fladd@a+3,w
 16334  0943  3A80               	xorlw	128
 16335  0944  0220               	subwf	??___fladd,w
 16336  0945  1D03               	skipz
 16337  0946  2951               	goto	u7133
 16338  0947  0877               	movf	___fladd@a+2,w
 16339  0948  0273               	subwf	___fladd@b+2,w
 16340  0949  1D03               	skipz
 16341  094A  2951               	goto	u7133
 16342  094B  0876               	movf	___fladd@a+1,w
 16343  094C  0272               	subwf	___fladd@b+1,w
 16344  094D  1D03               	skipz
 16345  094E  2951               	goto	u7133
 16346  094F  0875               	movf	___fladd@a,w
 16347  0950  0271               	subwf	___fladd@b,w
 16348  0951                     u7133:
 16349  0951  1803               	skipnc
 16350  0952  2954               	goto	u7131
 16351  0953  2955               	goto	u7130
 16352  0954                     u7131:
 16353  0954  298D               	goto	l5979
 16354  0955                     u7130:
 16355  0955                     l5971:
 16356  0955  30FF               	movlw	255
 16357  0956  00A0               	movwf	??___fladd
 16358  0957  30FF               	movlw	255
 16359  0958  00A1               	movwf	??___fladd+1
 16360  0959  30FF               	movlw	255
 16361  095A  00A2               	movwf	??___fladd+2
 16362  095B  30FF               	movlw	255
 16363  095C  00A3               	movwf	??___fladd+3
 16364  095D  0871               	movf	___fladd@b,w
 16365  095E  0275               	subwf	___fladd@a,w
 16366  095F  00A4               	movwf	??___fladd+4
 16367  0960  0872               	movf	___fladd@b+1,w
 16368  0961  3B76               	subwfb	___fladd@a+1,w
 16369  0962  00A5               	movwf	??___fladd+5
 16370  0963  0873               	movf	___fladd@b+2,w
 16371  0964  3B77               	subwfb	___fladd@a+2,w
 16372  0965  00A6               	movwf	??___fladd+6
 16373  0966  0874               	movf	___fladd@b+3,w
 16374  0967  3B78               	subwfb	___fladd@a+3,w
 16375  0968  00A7               	movwf	??___fladd+7
 16376  0969  0824               	movf	??___fladd+4,w
 16377  096A  07A0               	addwf	??___fladd,f
 16378  096B  0825               	movf	??___fladd+5,w
 16379  096C  3DA1               	addwfc	??___fladd+1,f
 16380  096D  0826               	movf	??___fladd+6,w
 16381  096E  3DA2               	addwfc	??___fladd+2,f
 16382  096F  0827               	movf	??___fladd+7,w
 16383  0970  3DA3               	addwfc	??___fladd+3,f
 16384  0971  0823               	movf	??___fladd+3,w
 16385  0972  00F4               	movwf	___fladd@b+3
 16386  0973  0822               	movf	??___fladd+2,w
 16387  0974  00F3               	movwf	___fladd@b+2
 16388  0975  0821               	movf	??___fladd+1,w
 16389  0976  00F2               	movwf	___fladd@b+1
 16390  0977  0820               	movf	??___fladd,w
 16391  0978  00F1               	movwf	___fladd@b
 16392  0979                     l5973:
 16393  0979  3080               	movlw	128
 16394  097A  00A0               	movwf	??___fladd
 16395  097B  0820               	movf	??___fladd,w
 16396  097C  06A8               	xorwf	___fladd@signs,f
 16397  097D  09AB               	comf	___fladd@grs,f
 16398  097E  0AAB               	incf	___fladd@grs,f
 16399  097F                     l5975:
 16400  097F  082B               	movf	___fladd@grs,w
 16401  0980  1D03               	btfss	3,2
 16402  0981  2983               	goto	u7141
 16403  0982  2984               	goto	u7140
 16404  0983                     u7141:
 16405  0983  2995               	goto	l1134
 16406  0984                     u7140:
 16407  0984                     l5977:
 16408  0984  3001               	movlw	1
 16409  0985  07F1               	addwf	___fladd@b,f
 16410  0986  3000               	movlw	0
 16411  0987  3DF2               	addwfc	___fladd@b+1,f
 16412  0988  3000               	movlw	0
 16413  0989  3DF3               	addwfc	___fladd@b+2,f
 16414  098A  3000               	movlw	0
 16415  098B  3DF4               	addwfc	___fladd@b+3,f
 16416  098C  2995               	goto	l1134
 16417  098D                     l5979:
 16418  098D  0875               	movf	___fladd@a,w
 16419  098E  02F1               	subwf	___fladd@b,f
 16420  098F  0876               	movf	___fladd@a+1,w
 16421  0990  3BF2               	subwfb	___fladd@b+1,f
 16422  0991  0877               	movf	___fladd@a+2,w
 16423  0992  3BF3               	subwfb	___fladd@b+2,f
 16424  0993  0878               	movf	___fladd@a+3,w
 16425  0994  3BF4               	subwfb	___fladd@b+3,f
 16426  0995                     l1134:
 16427  0995  0874               	movf	___fladd@b+3,w
 16428  0996  0473               	iorwf	___fladd@b+2,w
 16429  0997  0472               	iorwf	___fladd@b+1,w
 16430  0998  0471               	iorwf	___fladd@b,w
 16431  0999  1D03               	skipz
 16432  099A  299C               	goto	u7151
 16433  099B  299D               	goto	u7150
 16434  099C                     u7151:
 16435  099C  29C7               	goto	l6001
 16436  099D                     u7150:
 16437  099D                     l5981:
 16438  099D  082B               	movf	___fladd@grs,w
 16439  099E  1D03               	btfss	3,2
 16440  099F  29A1               	goto	u7161
 16441  09A0  29A2               	goto	u7160
 16442  09A1                     u7161:
 16443  09A1  29C7               	goto	l6001
 16444  09A2                     u7160:
 16445  09A2                     l5983:
 16446  09A2  3000               	movlw	0
 16447  09A3  00F4               	movwf	?___fladd+3
 16448  09A4  3000               	movlw	0
 16449  09A5  00F3               	movwf	?___fladd+2
 16450  09A6  3000               	movlw	0
 16451  09A7  00F2               	movwf	?___fladd+1
 16452  09A8  3000               	movlw	0
 16453  09A9  00F1               	movwf	?___fladd
 16454  09AA  2A3B               	goto	l1126
 16455  09AB                     l5987:
 16456  09AB  3001               	movlw	1
 16457  09AC                     u7175:
 16458  09AC  35F1               	lslf	___fladd@b,f
 16459  09AD  0DF2               	rlf	___fladd@b+1,f
 16460  09AE  0DF3               	rlf	___fladd@b+2,f
 16461  09AF  0DF4               	rlf	___fladd@b+3,f
 16462  09B0  0B89               	decfsz	9,f
 16463  09B1  29AC               	goto	u7175
 16464  09B2                     l5989:
 16465  09B2  1FAB               	btfss	___fladd@grs,7
 16466  09B3  29B5               	goto	u7181
 16467  09B4  29B6               	goto	u7180
 16468  09B5                     u7181:
 16469  09B5  29B7               	goto	l1138
 16470  09B6                     u7180:
 16471  09B6                     l5991:
 16472  09B6  1471               	bsf	___fladd@b,0
 16473  09B7                     l1138:
 16474  09B7  1C2B               	btfss	___fladd@grs,0
 16475  09B8  29BA               	goto	u7191
 16476  09B9  29BB               	goto	u7190
 16477  09BA                     u7191:
 16478  09BA  29BE               	goto	l5995
 16479  09BB                     u7190:
 16480  09BB                     l5993:
 16481  09BB  1403               	setc
 16482  09BC  0DAB               	rlf	___fladd@grs,f
 16483  09BD  29C0               	goto	l5997
 16484  09BE                     l5995:
 16485  09BE  1003               	clrc
 16486  09BF  0DAB               	rlf	___fladd@grs,f
 16487  09C0                     l5997:
 16488  09C0  082A               	movf	___fladd@bexp,w
 16489  09C1  1903               	btfsc	3,2
 16490  09C2  29C4               	goto	u7201
 16491  09C3  29C5               	goto	u7200
 16492  09C4                     u7201:
 16493  09C4  29C7               	goto	l6001
 16494  09C5                     u7200:
 16495  09C5                     l5999:
 16496  09C5  3001               	movlw	1
 16497  09C6  02AA               	subwf	___fladd@bexp,f
 16498  09C7                     l6001:
 16499  09C7  1FF3               	btfss	___fladd@b+2,7
 16500  09C8  29CA               	goto	u7211
 16501  09C9  29CB               	goto	u7210
 16502  09CA                     u7211:
 16503  09CA  29AB               	goto	l5987
 16504  09CB                     u7210:
 16505  09CB                     l6003:
 16506  09CB  01A9               	clrf	___fladd@aexp
 16507  09CC                     l6005:
 16508  09CC  1FAB               	btfss	___fladd@grs,7
 16509  09CD  29CF               	goto	u7221
 16510  09CE  29D0               	goto	u7220
 16511  09CF                     u7221:
 16512  09CF  29DE               	goto	l6013
 16513  09D0                     u7220:
 16514  09D0                     l6007:
 16515  09D0  082B               	movf	___fladd@grs,w
 16516  09D1  397F               	andlw	127
 16517  09D2  1903               	btfsc	3,2
 16518  09D3  29D5               	goto	u7231
 16519  09D4  29D6               	goto	u7230
 16520  09D5                     u7231:
 16521  09D5  29D9               	goto	l1144
 16522  09D6                     u7230:
 16523  09D6                     l6009:
 16524  09D6  01A9               	clrf	___fladd@aexp
 16525  09D7  0AA9               	incf	___fladd@aexp,f
 16526  09D8  29DE               	goto	l6013
 16527  09D9                     l1144:
 16528  09D9  1C71               	btfss	___fladd@b,0
 16529  09DA  29DC               	goto	u7241
 16530  09DB  29DD               	goto	u7240
 16531  09DC                     u7241:
 16532  09DC  29DE               	goto	l6013
 16533  09DD                     u7240:
 16534  09DD  29D6               	goto	l6009
 16535  09DE                     l6013:
 16536  09DE  0829               	movf	___fladd@aexp,w
 16537  09DF  1903               	btfsc	3,2
 16538  09E0  29E2               	goto	u7251
 16539  09E1  29E3               	goto	u7250
 16540  09E2                     u7251:
 16541  09E2  2A10               	goto	l1147
 16542  09E3                     u7250:
 16543  09E3                     l6015:
 16544  09E3  3001               	movlw	1
 16545  09E4  07F1               	addwf	___fladd@b,f
 16546  09E5  3000               	movlw	0
 16547  09E6  3DF2               	addwfc	___fladd@b+1,f
 16548  09E7  3000               	movlw	0
 16549  09E8  3DF3               	addwfc	___fladd@b+2,f
 16550  09E9  3000               	movlw	0
 16551  09EA  3DF4               	addwfc	___fladd@b+3,f
 16552  09EB                     l6017:
 16553  09EB  1C74               	btfss	___fladd@b+3,0
 16554  09EC  29EE               	goto	u7261
 16555  09ED  29EF               	goto	u7260
 16556  09EE                     u7261:
 16557  09EE  2A10               	goto	l1147
 16558  09EF                     u7260:
 16559  09EF                     l6019:
 16560  09EF  0871               	movf	___fladd@b,w
 16561  09F0  00A0               	movwf	??___fladd
 16562  09F1  0872               	movf	___fladd@b+1,w
 16563  09F2  00A1               	movwf	??___fladd+1
 16564  09F3  0873               	movf	___fladd@b+2,w
 16565  09F4  00A2               	movwf	??___fladd+2
 16566  09F5  0874               	movf	___fladd@b+3,w
 16567  09F6  00A3               	movwf	??___fladd+3
 16568  09F7  3001               	movlw	1
 16569  09F8  00A4               	movwf	??___fladd+4
 16570  09F9                     u7275:
 16571  09F9  37A3               	asrf	??___fladd+3,f
 16572  09FA  0CA2               	rrf	??___fladd+2,f
 16573  09FB  0CA1               	rrf	??___fladd+1,f
 16574  09FC  0CA0               	rrf	??___fladd,f
 16575  09FD                     u7270:
 16576  09FD  0BA4               	decfsz	??___fladd+4,f
 16577  09FE  29F9               	goto	u7275
 16578  09FF  0823               	movf	??___fladd+3,w
 16579  0A00  00F4               	movwf	___fladd@b+3
 16580  0A01  0822               	movf	??___fladd+2,w
 16581  0A02  00F3               	movwf	___fladd@b+2
 16582  0A03  0821               	movf	??___fladd+1,w
 16583  0A04  00F2               	movwf	___fladd@b+1
 16584  0A05  0820               	movf	??___fladd,w
 16585  0A06  00F1               	movwf	___fladd@b
 16586  0A07  0A2A               	incf	___fladd@bexp,w
 16587  0A08  1903               	btfsc	3,2
 16588  0A09  2A0B               	goto	u7281
 16589  0A0A  2A0C               	goto	u7280
 16590  0A0B                     u7281:
 16591  0A0B  2A10               	goto	l1147
 16592  0A0C                     u7280:
 16593  0A0C                     l6021:
 16594  0A0C  3001               	movlw	1
 16595  0A0D  00A0               	movwf	??___fladd
 16596  0A0E  0820               	movf	??___fladd,w
 16597  0A0F  07AA               	addwf	___fladd@bexp,f
 16598  0A10                     l1147:
 16599  0A10  0A2A               	incf	___fladd@bexp,w
 16600  0A11  1903               	btfsc	3,2
 16601  0A12  2A14               	goto	u7291
 16602  0A13  2A15               	goto	u7290
 16603  0A14                     u7291:
 16604  0A14  2A1A               	goto	l6025
 16605  0A15                     u7290:
 16606  0A15                     l6023:
 16607  0A15  082A               	movf	___fladd@bexp,w
 16608  0A16  1D03               	btfss	3,2
 16609  0A17  2A19               	goto	u7301
 16610  0A18  2A1A               	goto	u7300
 16611  0A19                     u7301:
 16612  0A19  2A28               	goto	l6031
 16613  0A1A                     u7300:
 16614  0A1A                     l6025:
 16615  0A1A  3000               	movlw	0
 16616  0A1B  00F4               	movwf	___fladd@b+3
 16617  0A1C  3000               	movlw	0
 16618  0A1D  00F3               	movwf	___fladd@b+2
 16619  0A1E  3000               	movlw	0
 16620  0A1F  00F2               	movwf	___fladd@b+1
 16621  0A20  3000               	movlw	0
 16622  0A21  00F1               	movwf	___fladd@b
 16623  0A22                     l6027:
 16624  0A22  082A               	movf	___fladd@bexp,w
 16625  0A23  1D03               	btfss	3,2
 16626  0A24  2A26               	goto	u7311
 16627  0A25  2A27               	goto	u7310
 16628  0A26                     u7311:
 16629  0A26  2A28               	goto	l6031
 16630  0A27                     u7310:
 16631  0A27                     l6029:
 16632  0A27  01A8               	clrf	___fladd@signs
 16633  0A28                     l6031:
 16634  0A28  1C2A               	btfss	___fladd@bexp,0
 16635  0A29  2A2B               	goto	u7321
 16636  0A2A  2A2C               	goto	u7320
 16637  0A2B                     u7321:
 16638  0A2B  2A2E               	goto	l6035
 16639  0A2C                     u7320:
 16640  0A2C                     l6033:
 16641  0A2C  17F3               	bsf	___fladd@b+2,7
 16642  0A2D  2A32               	goto	l1155
 16643  0A2E                     l6035:
 16644  0A2E  307F               	movlw	127
 16645  0A2F  00A0               	movwf	??___fladd
 16646  0A30  0820               	movf	??___fladd,w
 16647  0A31  05F3               	andwf	___fladd@b+2,f
 16648  0A32                     l1155:
 16649  0A32  362A               	lsrf	___fladd@bexp,w
 16650  0A33  00A0               	movwf	??___fladd
 16651  0A34  0820               	movf	??___fladd,w
 16652  0A35  00F4               	movwf	___fladd@b+3
 16653  0A36                     l6037:
 16654  0A36  1FA8               	btfss	___fladd@signs,7
 16655  0A37  2A39               	goto	u7331
 16656  0A38  2A3A               	goto	u7330
 16657  0A39                     u7331:
 16658  0A39  2A3B               	goto	l1156
 16659  0A3A                     u7330:
 16660  0A3A                     l6039:
 16661  0A3A  17F4               	bsf	___fladd@b+3,7
 16662  0A3B                     l1156:
 16663  0A3B                     l1126:
 16664  0A3B  0008               	return
 16665  0A3C                     __end_of___fladd:
 16666                           
 16667                           	psect	text31
 16668  2752                     __ptext31:	
 16669 ;; *************** function ___flneg *****************
 16670 ;; Defined at:
 16671 ;;		line 15 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/flneg.c"
 16672 ;; Parameters:    Size  Location     Type
 16673 ;;  f1              4    1[COMMON] unsigned char 
 16674 ;; Auto vars:     Size  Location     Type
 16675 ;;		None
 16676 ;; Return value:  Size  Location     Type
 16677 ;;                  4    1[COMMON] unsigned char 
 16678 ;; Registers used:
 16679 ;;		wreg
 16680 ;; Tracked objects:
 16681 ;;		On entry : 0/0
 16682 ;;		On exit  : 0/0
 16683 ;;		Unchanged: 0/0
 16684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16685 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16688 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16689 ;;Total ram usage:        4 bytes
 16690 ;; Hardware stack levels used:    1
 16691 ;; Hardware stack levels required when called:    4
 16692 ;; This function calls:
 16693 ;;		Nothing
 16694 ;; This function is called by:
 16695 ;;		_efgtoa
 16696 ;; This function uses a non-reentrant model
 16697 ;;
 16698                           
 16699                           
 16700                           ;psect for function ___flneg
 16701  2752                     ___flneg:
 16702  2752                     l4133:	
 16703                           ;incstack = 0
 16704                           ; Regs used in ___flneg: [wreg]
 16705                           
 16706  2752  0874               	movf	___flneg@f1+3,w
 16707  2753  0473               	iorwf	___flneg@f1+2,w
 16708  2754  0472               	iorwf	___flneg@f1+1,w
 16709  2755  0471               	iorwf	___flneg@f1,w
 16710  2756  1903               	skipnz
 16711  2757  2F59               	goto	u4311
 16712  2758  2F5A               	goto	u4310
 16713  2759                     u4311:
 16714  2759  2F5C               	goto	l4137
 16715  275A                     u4310:
 16716  275A                     l4135:
 16717  275A  3080               	movlw	128
 16718  275B  06F4               	xorwf	___flneg@f1+3,f
 16719  275C                     l4137:
 16720  275C                     l1002:
 16721  275C  0008               	return
 16722  275D                     __end_of___flneg:
 16723                           
 16724                           	psect	text32
 16725  15A9                     __ptext32:	
 16726 ;; *************** function ___flmul *****************
 16727 ;; Defined at:
 16728 ;;		line 8 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/sprcmul.c"
 16729 ;; Parameters:    Size  Location     Type
 16730 ;;  b               4    6[BANK0 ] unsigned char 
 16731 ;;  a               4   10[BANK0 ] unsigned char 
 16732 ;; Auto vars:     Size  Location     Type
 16733 ;;  prod            4   26[BANK0 ] struct .
 16734 ;;  grs             4   20[BANK0 ] unsigned long 
 16735 ;;  temp            2   30[BANK0 ] struct .
 16736 ;;  bexp            1   25[BANK0 ] unsigned char 
 16737 ;;  aexp            1   24[BANK0 ] unsigned char 
 16738 ;;  sign            1   19[BANK0 ] unsigned char 
 16739 ;; Return value:  Size  Location     Type
 16740 ;;                  4    6[BANK0 ] unsigned char 
 16741 ;; Registers used:
 16742 ;;		wreg, status,2, status,0, pclath, cstack
 16743 ;; Tracked objects:
 16744 ;;		On entry : 0/0
 16745 ;;		On exit  : 0/0
 16746 ;;		Unchanged: 0/0
 16747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16748 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16749 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16750 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16751 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16752 ;;Total ram usage:       26 bytes
 16753 ;; Hardware stack levels used:    1
 16754 ;; Hardware stack levels required when called:    5
 16755 ;; This function calls:
 16756 ;;		__Umul8_16
 16757 ;; This function is called by:
 16758 ;;		_ADC_test
 16759 ;;		_efgtoa
 16760 ;; This function uses a non-reentrant model
 16761 ;;
 16762                           
 16763                           
 16764                           ;psect for function ___flmul
 16765  15A9                     ___flmul:
 16766  15A9                     l4323:	
 16767                           ;incstack = 0
 16768                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 16769                           
 16770  15A9  0140               	movlb	0	; select bank0
 16771  15AA  0829               	movf	___flmul@b+3,w
 16772  15AB  3980               	andlw	128
 16773  15AC  00AE               	movwf	??___flmul
 16774  15AD  082E               	movf	??___flmul,w
 16775  15AE  00B3               	movwf	___flmul@sign
 16776  15AF                     l4325:
 16777  15AF  3529               	lslf	___flmul@b+3,w
 16778  15B0  00AE               	movwf	??___flmul
 16779  15B1  082E               	movf	??___flmul,w
 16780  15B2  00B9               	movwf	___flmul@bexp
 16781  15B3                     l4327:
 16782  15B3  1FA8               	btfss	___flmul@b+2,7
 16783  15B4  2DB6               	goto	u4711
 16784  15B5  2DB7               	goto	u4710
 16785  15B6                     u4711:
 16786  15B6  2DB8               	goto	l4331
 16787  15B7                     u4710:
 16788  15B7                     l4329:
 16789  15B7  1439               	bsf	___flmul@bexp,0
 16790  15B8                     l4331:
 16791  15B8  0839               	movf	___flmul@bexp,w
 16792  15B9  1903               	btfsc	3,2
 16793  15BA  2DBC               	goto	u4721
 16794  15BB  2DBD               	goto	u4720
 16795  15BC                     u4721:
 16796  15BC  2DCC               	goto	l4339
 16797  15BD                     u4720:
 16798  15BD                     l4333:
 16799  15BD  0A39               	incf	___flmul@bexp,w
 16800  15BE  1D03               	btfss	3,2
 16801  15BF  2DC1               	goto	u4731
 16802  15C0  2DC2               	goto	u4730
 16803  15C1                     u4731:
 16804  15C1  2DCA               	goto	l4337
 16805  15C2                     u4730:
 16806  15C2                     l4335:
 16807  15C2  3000               	movlw	0
 16808  15C3  00A9               	movwf	___flmul@b+3
 16809  15C4  3000               	movlw	0
 16810  15C5  00A8               	movwf	___flmul@b+2
 16811  15C6  3000               	movlw	0
 16812  15C7  00A7               	movwf	___flmul@b+1
 16813  15C8  3000               	movlw	0
 16814  15C9  00A6               	movwf	___flmul@b
 16815  15CA                     l4337:
 16816  15CA  17A8               	bsf	___flmul@b+2,7
 16817  15CB  2DD4               	goto	l4341
 16818  15CC                     l4339:
 16819  15CC  3000               	movlw	0
 16820  15CD  00A9               	movwf	___flmul@b+3
 16821  15CE  3000               	movlw	0
 16822  15CF  00A8               	movwf	___flmul@b+2
 16823  15D0  3000               	movlw	0
 16824  15D1  00A7               	movwf	___flmul@b+1
 16825  15D2  3000               	movlw	0
 16826  15D3  00A6               	movwf	___flmul@b
 16827  15D4                     l4341:
 16828  15D4  082D               	movf	___flmul@a+3,w
 16829  15D5  3980               	andlw	128
 16830  15D6  00AE               	movwf	??___flmul
 16831  15D7  082E               	movf	??___flmul,w
 16832  15D8  06B3               	xorwf	___flmul@sign,f
 16833  15D9                     l4343:
 16834  15D9  352D               	lslf	___flmul@a+3,w
 16835  15DA  00AE               	movwf	??___flmul
 16836  15DB  082E               	movf	??___flmul,w
 16837  15DC  00B8               	movwf	___flmul@aexp
 16838  15DD                     l4345:
 16839  15DD  1FAC               	btfss	___flmul@a+2,7
 16840  15DE  2DE0               	goto	u4741
 16841  15DF  2DE1               	goto	u4740
 16842  15E0                     u4741:
 16843  15E0  2DE2               	goto	l4349
 16844  15E1                     u4740:
 16845  15E1                     l4347:
 16846  15E1  1438               	bsf	___flmul@aexp,0
 16847  15E2                     l4349:
 16848  15E2  0838               	movf	___flmul@aexp,w
 16849  15E3  1903               	btfsc	3,2
 16850  15E4  2DE6               	goto	u4751
 16851  15E5  2DE7               	goto	u4750
 16852  15E6                     u4751:
 16853  15E6  2DF6               	goto	l4357
 16854  15E7                     u4750:
 16855  15E7                     l4351:
 16856  15E7  0A38               	incf	___flmul@aexp,w
 16857  15E8  1D03               	btfss	3,2
 16858  15E9  2DEB               	goto	u4761
 16859  15EA  2DEC               	goto	u4760
 16860  15EB                     u4761:
 16861  15EB  2DF4               	goto	l4355
 16862  15EC                     u4760:
 16863  15EC                     l4353:
 16864  15EC  3000               	movlw	0
 16865  15ED  00AD               	movwf	___flmul@a+3
 16866  15EE  3000               	movlw	0
 16867  15EF  00AC               	movwf	___flmul@a+2
 16868  15F0  3000               	movlw	0
 16869  15F1  00AB               	movwf	___flmul@a+1
 16870  15F2  3000               	movlw	0
 16871  15F3  00AA               	movwf	___flmul@a
 16872  15F4                     l4355:
 16873  15F4  17AC               	bsf	___flmul@a+2,7
 16874  15F5  2DFE               	goto	l4359
 16875  15F6                     l4357:
 16876  15F6  3000               	movlw	0
 16877  15F7  00AD               	movwf	___flmul@a+3
 16878  15F8  3000               	movlw	0
 16879  15F9  00AC               	movwf	___flmul@a+2
 16880  15FA  3000               	movlw	0
 16881  15FB  00AB               	movwf	___flmul@a+1
 16882  15FC  3000               	movlw	0
 16883  15FD  00AA               	movwf	___flmul@a
 16884  15FE                     l4359:
 16885  15FE  0838               	movf	___flmul@aexp,w
 16886  15FF  1903               	btfsc	3,2
 16887  1600  2E02               	goto	u4771
 16888  1601  2E03               	goto	u4770
 16889  1602                     u4771:
 16890  1602  2E08               	goto	l4363
 16891  1603                     u4770:
 16892  1603                     l4361:
 16893  1603  0839               	movf	___flmul@bexp,w
 16894  1604  1D03               	btfss	3,2
 16895  1605  2E07               	goto	u4781
 16896  1606  2E08               	goto	u4780
 16897  1607                     u4781:
 16898  1607  2E11               	goto	l4367
 16899  1608                     u4780:
 16900  1608                     l4363:
 16901  1608  3000               	movlw	0
 16902  1609  00A9               	movwf	?___flmul+3
 16903  160A  3000               	movlw	0
 16904  160B  00A8               	movwf	?___flmul+2
 16905  160C  3000               	movlw	0
 16906  160D  00A7               	movwf	?___flmul+1
 16907  160E  3000               	movlw	0
 16908  160F  00A6               	movwf	?___flmul
 16909  1610  2FFF               	goto	l1209
 16910  1611                     l4367:
 16911  1611  0826               	movf	___flmul@b,w
 16912  1612  00AE               	movwf	??___flmul
 16913  1613  082E               	movf	??___flmul,w
 16914  1614  00F1               	movwf	__Umul8_16@multiplicand
 16915  1615  082C               	movf	___flmul@a+2,w
 16916  1616  3198  20E2  3195   	fcall	__Umul8_16
 16917  1619  0872               	movf	?__Umul8_16+1,w
 16918  161A  0140               	movlb	0	; select bank0
 16919  161B  00BF               	movwf	___flmul@temp+1
 16920  161C  0871               	movf	?__Umul8_16,w
 16921  161D  00BE               	movwf	___flmul@temp
 16922  161E                     l4369:
 16923  161E  083E               	movf	___flmul@temp,w
 16924  161F  00AE               	movwf	??___flmul
 16925  1620  01AF               	clrf	??___flmul+1
 16926  1621  01B0               	clrf	??___flmul+2
 16927  1622  01B1               	clrf	??___flmul+3
 16928  1623  0831               	movf	??___flmul+3,w
 16929  1624  00B7               	movwf	___flmul@grs+3
 16930  1625  0830               	movf	??___flmul+2,w
 16931  1626  00B6               	movwf	___flmul@grs+2
 16932  1627  082F               	movf	??___flmul+1,w
 16933  1628  00B5               	movwf	___flmul@grs+1
 16934  1629  082E               	movf	??___flmul,w
 16935  162A  00B4               	movwf	___flmul@grs
 16936  162B                     l4371:
 16937  162B  083F               	movf	___flmul@temp+1,w
 16938  162C  00AE               	movwf	??___flmul
 16939  162D  01AF               	clrf	??___flmul+1
 16940  162E  01B0               	clrf	??___flmul+2
 16941  162F  01B1               	clrf	??___flmul+3
 16942  1630  0831               	movf	??___flmul+3,w
 16943  1631  00BD               	movwf	___flmul@prod+3
 16944  1632  0830               	movf	??___flmul+2,w
 16945  1633  00BC               	movwf	___flmul@prod+2
 16946  1634  082F               	movf	??___flmul+1,w
 16947  1635  00BB               	movwf	___flmul@prod+1
 16948  1636  082E               	movf	??___flmul,w
 16949  1637  00BA               	movwf	___flmul@prod
 16950  1638  0827               	movf	___flmul@b+1,w
 16951  1639  00AE               	movwf	??___flmul
 16952  163A  082E               	movf	??___flmul,w
 16953  163B  00F1               	movwf	__Umul8_16@multiplicand
 16954  163C  082B               	movf	___flmul@a+1,w
 16955  163D  3198  20E2  3195   	fcall	__Umul8_16
 16956  1640  0872               	movf	?__Umul8_16+1,w
 16957  1641  0140               	movlb	0	; select bank0
 16958  1642  00BF               	movwf	___flmul@temp+1
 16959  1643  0871               	movf	?__Umul8_16,w
 16960  1644  00BE               	movwf	___flmul@temp
 16961  1645                     l4373:
 16962  1645  083E               	movf	___flmul@temp,w
 16963  1646  00AE               	movwf	??___flmul
 16964  1647  01AF               	clrf	??___flmul+1
 16965  1648  01B0               	clrf	??___flmul+2
 16966  1649  01B1               	clrf	??___flmul+3
 16967  164A  082E               	movf	??___flmul,w
 16968  164B  07B4               	addwf	___flmul@grs,f
 16969  164C  082F               	movf	??___flmul+1,w
 16970  164D  3DB5               	addwfc	___flmul@grs+1,f
 16971  164E  0830               	movf	??___flmul+2,w
 16972  164F  3DB6               	addwfc	___flmul@grs+2,f
 16973  1650  0831               	movf	??___flmul+3,w
 16974  1651  3DB7               	addwfc	___flmul@grs+3,f
 16975  1652                     l4375:
 16976  1652  083F               	movf	___flmul@temp+1,w
 16977  1653  00AE               	movwf	??___flmul
 16978  1654  01AF               	clrf	??___flmul+1
 16979  1655  01B0               	clrf	??___flmul+2
 16980  1656  01B1               	clrf	??___flmul+3
 16981  1657  082E               	movf	??___flmul,w
 16982  1658  07BA               	addwf	___flmul@prod,f
 16983  1659  082F               	movf	??___flmul+1,w
 16984  165A  3DBB               	addwfc	___flmul@prod+1,f
 16985  165B  0830               	movf	??___flmul+2,w
 16986  165C  3DBC               	addwfc	___flmul@prod+2,f
 16987  165D  0831               	movf	??___flmul+3,w
 16988  165E  3DBD               	addwfc	___flmul@prod+3,f
 16989  165F  0828               	movf	___flmul@b+2,w
 16990  1660  00AE               	movwf	??___flmul
 16991  1661  082E               	movf	??___flmul,w
 16992  1662  00F1               	movwf	__Umul8_16@multiplicand
 16993  1663  082A               	movf	___flmul@a,w
 16994  1664  3198  20E2  3195   	fcall	__Umul8_16
 16995  1667  0872               	movf	?__Umul8_16+1,w
 16996  1668  0140               	movlb	0	; select bank0
 16997  1669  00BF               	movwf	___flmul@temp+1
 16998  166A  0871               	movf	?__Umul8_16,w
 16999  166B  00BE               	movwf	___flmul@temp
 17000  166C                     l4377:
 17001  166C  083E               	movf	___flmul@temp,w
 17002  166D  00AE               	movwf	??___flmul
 17003  166E  01AF               	clrf	??___flmul+1
 17004  166F  01B0               	clrf	??___flmul+2
 17005  1670  01B1               	clrf	??___flmul+3
 17006  1671  082E               	movf	??___flmul,w
 17007  1672  07B4               	addwf	___flmul@grs,f
 17008  1673  082F               	movf	??___flmul+1,w
 17009  1674  3DB5               	addwfc	___flmul@grs+1,f
 17010  1675  0830               	movf	??___flmul+2,w
 17011  1676  3DB6               	addwfc	___flmul@grs+2,f
 17012  1677  0831               	movf	??___flmul+3,w
 17013  1678  3DB7               	addwfc	___flmul@grs+3,f
 17014  1679                     l4379:
 17015  1679  083F               	movf	___flmul@temp+1,w
 17016  167A  00AE               	movwf	??___flmul
 17017  167B  01AF               	clrf	??___flmul+1
 17018  167C  01B0               	clrf	??___flmul+2
 17019  167D  01B1               	clrf	??___flmul+3
 17020  167E  082E               	movf	??___flmul,w
 17021  167F  07BA               	addwf	___flmul@prod,f
 17022  1680  082F               	movf	??___flmul+1,w
 17023  1681  3DBB               	addwfc	___flmul@prod+1,f
 17024  1682  0830               	movf	??___flmul+2,w
 17025  1683  3DBC               	addwfc	___flmul@prod+2,f
 17026  1684  0831               	movf	??___flmul+3,w
 17027  1685  3DBD               	addwfc	___flmul@prod+3,f
 17028  1686                     l4381:
 17029  1686  3008               	movlw	8
 17030  1687                     u4795:
 17031  1687  35B4               	lslf	___flmul@grs,f
 17032  1688  0DB5               	rlf	___flmul@grs+1,f
 17033  1689  0DB6               	rlf	___flmul@grs+2,f
 17034  168A  0DB7               	rlf	___flmul@grs+3,f
 17035  168B  0B89               	decfsz	9,f
 17036  168C  2E87               	goto	u4795
 17037  168D                     l4383:
 17038  168D  0827               	movf	___flmul@b+1,w
 17039  168E  00AE               	movwf	??___flmul
 17040  168F  082E               	movf	??___flmul,w
 17041  1690  00F1               	movwf	__Umul8_16@multiplicand
 17042  1691  082A               	movf	___flmul@a,w
 17043  1692  3198  20E2  3195   	fcall	__Umul8_16
 17044  1695  0872               	movf	?__Umul8_16+1,w
 17045  1696  0140               	movlb	0	; select bank0
 17046  1697  00BF               	movwf	___flmul@temp+1
 17047  1698  0871               	movf	?__Umul8_16,w
 17048  1699  00BE               	movwf	___flmul@temp
 17049  169A                     l4385:
 17050  169A  083E               	movf	___flmul@temp,w
 17051  169B  07B4               	addwf	___flmul@grs,f
 17052  169C  083F               	movf	___flmul@temp+1,w
 17053  169D  3DB5               	addwfc	___flmul@grs+1,f
 17054  169E  3000               	movlw	0
 17055  169F  3DB6               	addwfc	___flmul@grs+2,f
 17056  16A0  3DB7               	addwfc	___flmul@grs+3,f
 17057  16A1                     l4387:
 17058  16A1  0826               	movf	___flmul@b,w
 17059  16A2  00AE               	movwf	??___flmul
 17060  16A3  082E               	movf	??___flmul,w
 17061  16A4  00F1               	movwf	__Umul8_16@multiplicand
 17062  16A5  082B               	movf	___flmul@a+1,w
 17063  16A6  3198  20E2  3195   	fcall	__Umul8_16
 17064  16A9  0872               	movf	?__Umul8_16+1,w
 17065  16AA  0140               	movlb	0	; select bank0
 17066  16AB  00BF               	movwf	___flmul@temp+1
 17067  16AC  0871               	movf	?__Umul8_16,w
 17068  16AD  00BE               	movwf	___flmul@temp
 17069  16AE                     l4389:
 17070  16AE  083E               	movf	___flmul@temp,w
 17071  16AF  07B4               	addwf	___flmul@grs,f
 17072  16B0  083F               	movf	___flmul@temp+1,w
 17073  16B1  3DB5               	addwfc	___flmul@grs+1,f
 17074  16B2  3000               	movlw	0
 17075  16B3  3DB6               	addwfc	___flmul@grs+2,f
 17076  16B4  3DB7               	addwfc	___flmul@grs+3,f
 17077  16B5                     l4391:
 17078  16B5  3008               	movlw	8
 17079  16B6                     u4805:
 17080  16B6  35B4               	lslf	___flmul@grs,f
 17081  16B7  0DB5               	rlf	___flmul@grs+1,f
 17082  16B8  0DB6               	rlf	___flmul@grs+2,f
 17083  16B9  0DB7               	rlf	___flmul@grs+3,f
 17084  16BA  0B89               	decfsz	9,f
 17085  16BB  2EB6               	goto	u4805
 17086  16BC  0826               	movf	___flmul@b,w
 17087  16BD  00AE               	movwf	??___flmul
 17088  16BE  082E               	movf	??___flmul,w
 17089  16BF  00F1               	movwf	__Umul8_16@multiplicand
 17090  16C0  082A               	movf	___flmul@a,w
 17091  16C1  3198  20E2  3195   	fcall	__Umul8_16
 17092  16C4  0872               	movf	?__Umul8_16+1,w
 17093  16C5  0140               	movlb	0	; select bank0
 17094  16C6  00BF               	movwf	___flmul@temp+1
 17095  16C7  0871               	movf	?__Umul8_16,w
 17096  16C8  00BE               	movwf	___flmul@temp
 17097  16C9                     l4393:
 17098  16C9  083E               	movf	___flmul@temp,w
 17099  16CA  07B4               	addwf	___flmul@grs,f
 17100  16CB  083F               	movf	___flmul@temp+1,w
 17101  16CC  3DB5               	addwfc	___flmul@grs+1,f
 17102  16CD  3000               	movlw	0
 17103  16CE  3DB6               	addwfc	___flmul@grs+2,f
 17104  16CF  3DB7               	addwfc	___flmul@grs+3,f
 17105  16D0                     l4395:
 17106  16D0  0827               	movf	___flmul@b+1,w
 17107  16D1  00AE               	movwf	??___flmul
 17108  16D2  082E               	movf	??___flmul,w
 17109  16D3  00F1               	movwf	__Umul8_16@multiplicand
 17110  16D4  082C               	movf	___flmul@a+2,w
 17111  16D5  3198  20E2  3195   	fcall	__Umul8_16
 17112  16D8  0872               	movf	?__Umul8_16+1,w
 17113  16D9  0140               	movlb	0	; select bank0
 17114  16DA  00BF               	movwf	___flmul@temp+1
 17115  16DB  0871               	movf	?__Umul8_16,w
 17116  16DC  00BE               	movwf	___flmul@temp
 17117  16DD  083E               	movf	___flmul@temp,w
 17118  16DE  07BA               	addwf	___flmul@prod,f
 17119  16DF  083F               	movf	___flmul@temp+1,w
 17120  16E0  3DBB               	addwfc	___flmul@prod+1,f
 17121  16E1  3000               	movlw	0
 17122  16E2  3DBC               	addwfc	___flmul@prod+2,f
 17123  16E3  3DBD               	addwfc	___flmul@prod+3,f
 17124  16E4                     l4397:
 17125  16E4  0828               	movf	___flmul@b+2,w
 17126  16E5  00AE               	movwf	??___flmul
 17127  16E6  082E               	movf	??___flmul,w
 17128  16E7  00F1               	movwf	__Umul8_16@multiplicand
 17129  16E8  082B               	movf	___flmul@a+1,w
 17130  16E9  3198  20E2  3195   	fcall	__Umul8_16
 17131  16EC  0872               	movf	?__Umul8_16+1,w
 17132  16ED  0140               	movlb	0	; select bank0
 17133  16EE  00BF               	movwf	___flmul@temp+1
 17134  16EF  0871               	movf	?__Umul8_16,w
 17135  16F0  00BE               	movwf	___flmul@temp
 17136  16F1                     l4399:
 17137  16F1  083E               	movf	___flmul@temp,w
 17138  16F2  07BA               	addwf	___flmul@prod,f
 17139  16F3  083F               	movf	___flmul@temp+1,w
 17140  16F4  3DBB               	addwfc	___flmul@prod+1,f
 17141  16F5  3000               	movlw	0
 17142  16F6  3DBC               	addwfc	___flmul@prod+2,f
 17143  16F7  3DBD               	addwfc	___flmul@prod+3,f
 17144  16F8  0828               	movf	___flmul@b+2,w
 17145  16F9  00AE               	movwf	??___flmul
 17146  16FA  082E               	movf	??___flmul,w
 17147  16FB  00F1               	movwf	__Umul8_16@multiplicand
 17148  16FC  082C               	movf	___flmul@a+2,w
 17149  16FD  3198  20E2  3195   	fcall	__Umul8_16
 17150  1700  0872               	movf	?__Umul8_16+1,w
 17151  1701  0140               	movlb	0	; select bank0
 17152  1702  00BF               	movwf	___flmul@temp+1
 17153  1703  0871               	movf	?__Umul8_16,w
 17154  1704  00BE               	movwf	___flmul@temp
 17155  1705                     l4401:
 17156  1705  083E               	movf	___flmul@temp,w
 17157  1706  00AE               	movwf	??___flmul
 17158  1707  083F               	movf	___flmul@temp+1,w
 17159  1708  00AF               	movwf	??___flmul+1
 17160  1709  01B0               	clrf	??___flmul+2
 17161  170A  01B1               	clrf	??___flmul+3
 17162  170B  3008               	movlw	8
 17163  170C                     u4815:
 17164  170C  35AE               	lslf	??___flmul,f
 17165  170D  0DAF               	rlf	??___flmul+1,f
 17166  170E  0DB0               	rlf	??___flmul+2,f
 17167  170F  0DB1               	rlf	??___flmul+3,f
 17168  1710                     u4810:
 17169  1710  0B89               	decfsz	9,f
 17170  1711  2F0C               	goto	u4815
 17171  1712  082E               	movf	??___flmul,w
 17172  1713  07BA               	addwf	___flmul@prod,f
 17173  1714  082F               	movf	??___flmul+1,w
 17174  1715  3DBB               	addwfc	___flmul@prod+1,f
 17175  1716  0830               	movf	??___flmul+2,w
 17176  1717  3DBC               	addwfc	___flmul@prod+2,f
 17177  1718  0831               	movf	??___flmul+3,w
 17178  1719  3DBD               	addwfc	___flmul@prod+3,f
 17179  171A                     l4403:
 17180  171A  0834               	movf	___flmul@grs,w
 17181  171B  00AE               	movwf	??___flmul
 17182  171C  0835               	movf	___flmul@grs+1,w
 17183  171D  00AF               	movwf	??___flmul+1
 17184  171E  0836               	movf	___flmul@grs+2,w
 17185  171F  00B0               	movwf	??___flmul+2
 17186  1720  0837               	movf	___flmul@grs+3,w
 17187  1721  00B1               	movwf	??___flmul+3
 17188  1722  3018               	movlw	24
 17189  1723                     u4825:
 17190  1723  36B1               	lsrf	??___flmul+3,f
 17191  1724  0CB0               	rrf	??___flmul+2,f
 17192  1725  0CAF               	rrf	??___flmul+1,f
 17193  1726  0CAE               	rrf	??___flmul,f
 17194  1727                     u4820:
 17195  1727  0B89               	decfsz	9,f
 17196  1728  2F23               	goto	u4825
 17197  1729  082E               	movf	??___flmul,w
 17198  172A  07BA               	addwf	___flmul@prod,f
 17199  172B  082F               	movf	??___flmul+1,w
 17200  172C  3DBB               	addwfc	___flmul@prod+1,f
 17201  172D  0830               	movf	??___flmul+2,w
 17202  172E  3DBC               	addwfc	___flmul@prod+2,f
 17203  172F  0831               	movf	??___flmul+3,w
 17204  1730  3DBD               	addwfc	___flmul@prod+3,f
 17205  1731                     l4405:
 17206  1731  3008               	movlw	8
 17207  1732                     u4835:
 17208  1732  35B4               	lslf	___flmul@grs,f
 17209  1733  0DB5               	rlf	___flmul@grs+1,f
 17210  1734  0DB6               	rlf	___flmul@grs+2,f
 17211  1735  0DB7               	rlf	___flmul@grs+3,f
 17212  1736  0B89               	decfsz	9,f
 17213  1737  2F32               	goto	u4835
 17214  1738                     l4407:
 17215  1738  0839               	movf	___flmul@bexp,w
 17216  1739  0738               	addwf	___flmul@aexp,w
 17217  173A  00AE               	movwf	??___flmul
 17218  173B  01AF               	clrf	??___flmul+1
 17219  173C  0DAF               	rlf	??___flmul+1,f
 17220  173D  082E               	movf	??___flmul,w
 17221  173E  3E82               	addlw	130
 17222  173F  00BE               	movwf	___flmul@temp
 17223  1740  30FF               	movlw	255
 17224  1741  3D2F               	addwfc	??___flmul+1,w
 17225  1742  00BF               	movwf	___flmul@temp+1
 17226  1743  2F5B               	goto	l4419
 17227  1744                     l4409:
 17228  1744  3001               	movlw	1
 17229  1745                     u4845:
 17230  1745  35BA               	lslf	___flmul@prod,f
 17231  1746  0DBB               	rlf	___flmul@prod+1,f
 17232  1747  0DBC               	rlf	___flmul@prod+2,f
 17233  1748  0DBD               	rlf	___flmul@prod+3,f
 17234  1749  0B89               	decfsz	9,f
 17235  174A  2F45               	goto	u4845
 17236  174B                     l4411:
 17237  174B  1FB7               	btfss	___flmul@grs+3,7
 17238  174C  2F4E               	goto	u4851
 17239  174D  2F4F               	goto	u4850
 17240  174E                     u4851:
 17241  174E  2F50               	goto	l4415
 17242  174F                     u4850:
 17243  174F                     l4413:
 17244  174F  143A               	bsf	___flmul@prod,0
 17245  1750                     l4415:
 17246  1750  3001               	movlw	1
 17247  1751                     u4865:
 17248  1751  35B4               	lslf	___flmul@grs,f
 17249  1752  0DB5               	rlf	___flmul@grs+1,f
 17250  1753  0DB6               	rlf	___flmul@grs+2,f
 17251  1754  0DB7               	rlf	___flmul@grs+3,f
 17252  1755  0B89               	decfsz	9,f
 17253  1756  2F51               	goto	u4865
 17254  1757                     l4417:
 17255  1757  30FF               	movlw	255
 17256  1758  07BE               	addwf	___flmul@temp,f
 17257  1759  30FF               	movlw	255
 17258  175A  3DBF               	addwfc	___flmul@temp+1,f
 17259  175B                     l4419:
 17260  175B  1FBC               	btfss	___flmul@prod+2,7
 17261  175C  2F5E               	goto	u4871
 17262  175D  2F5F               	goto	u4870
 17263  175E                     u4871:
 17264  175E  2F44               	goto	l4409
 17265  175F                     u4870:
 17266  175F                     l4421:
 17267  175F  01B8               	clrf	___flmul@aexp
 17268  1760                     l4423:
 17269  1760  1FB7               	btfss	___flmul@grs+3,7
 17270  1761  2F63               	goto	u4881
 17271  1762  2F64               	goto	u4880
 17272  1763                     u4881:
 17273  1763  2F80               	goto	l4431
 17274  1764                     u4880:
 17275  1764                     l4425:
 17276  1764  30FF               	movlw	255
 17277  1765  0534               	andwf	___flmul@grs,w
 17278  1766  00AE               	movwf	??___flmul
 17279  1767  30FF               	movlw	255
 17280  1768  0535               	andwf	___flmul@grs+1,w
 17281  1769  00AF               	movwf	??___flmul+1
 17282  176A  30FF               	movlw	255
 17283  176B  0536               	andwf	___flmul@grs+2,w
 17284  176C  00B0               	movwf	??___flmul+2
 17285  176D  307F               	movlw	127
 17286  176E  0537               	andwf	___flmul@grs+3,w
 17287  176F  00B1               	movwf	??___flmul+3
 17288  1770  0831               	movf	??___flmul+3,w
 17289  1771  0430               	iorwf	??___flmul+2,w
 17290  1772  042F               	iorwf	??___flmul+1,w
 17291  1773  042E               	iorwf	??___flmul,w
 17292  1774  1903               	skipnz
 17293  1775  2F77               	goto	u4891
 17294  1776  2F78               	goto	u4890
 17295  1777                     u4891:
 17296  1777  2F7B               	goto	l1215
 17297  1778                     u4890:
 17298  1778                     l4427:
 17299  1778  01B8               	clrf	___flmul@aexp
 17300  1779  0AB8               	incf	___flmul@aexp,f
 17301  177A  2F80               	goto	l4431
 17302  177B                     l1215:
 17303  177B  1C3A               	btfss	___flmul@prod,0
 17304  177C  2F7E               	goto	u4901
 17305  177D  2F7F               	goto	u4900
 17306  177E                     u4901:
 17307  177E  2F80               	goto	l4431
 17308  177F                     u4900:
 17309  177F  2F78               	goto	l4427
 17310  1780                     l4431:
 17311  1780  0838               	movf	___flmul@aexp,w
 17312  1781  1903               	btfsc	3,2
 17313  1782  2F84               	goto	u4911
 17314  1783  2F85               	goto	u4910
 17315  1784                     u4911:
 17316  1784  2FAD               	goto	l4441
 17317  1785                     u4910:
 17318  1785                     l4433:
 17319  1785  3001               	movlw	1
 17320  1786  07BA               	addwf	___flmul@prod,f
 17321  1787  3000               	movlw	0
 17322  1788  3DBB               	addwfc	___flmul@prod+1,f
 17323  1789  3000               	movlw	0
 17324  178A  3DBC               	addwfc	___flmul@prod+2,f
 17325  178B  3000               	movlw	0
 17326  178C  3DBD               	addwfc	___flmul@prod+3,f
 17327  178D                     l4435:
 17328  178D  1C3D               	btfss	___flmul@prod+3,0
 17329  178E  2F90               	goto	u4921
 17330  178F  2F91               	goto	u4920
 17331  1790                     u4921:
 17332  1790  2FAD               	goto	l4441
 17333  1791                     u4920:
 17334  1791                     l4437:
 17335  1791  083A               	movf	___flmul@prod,w
 17336  1792  00AE               	movwf	??___flmul
 17337  1793  083B               	movf	___flmul@prod+1,w
 17338  1794  00AF               	movwf	??___flmul+1
 17339  1795  083C               	movf	___flmul@prod+2,w
 17340  1796  00B0               	movwf	??___flmul+2
 17341  1797  083D               	movf	___flmul@prod+3,w
 17342  1798  00B1               	movwf	??___flmul+3
 17343  1799  3001               	movlw	1
 17344  179A  00B2               	movwf	??___flmul+4
 17345  179B                     u4935:
 17346  179B  37B1               	asrf	??___flmul+3,f
 17347  179C  0CB0               	rrf	??___flmul+2,f
 17348  179D  0CAF               	rrf	??___flmul+1,f
 17349  179E  0CAE               	rrf	??___flmul,f
 17350  179F                     u4930:
 17351  179F  0BB2               	decfsz	??___flmul+4,f
 17352  17A0  2F9B               	goto	u4935
 17353  17A1  0831               	movf	??___flmul+3,w
 17354  17A2  00BD               	movwf	___flmul@prod+3
 17355  17A3  0830               	movf	??___flmul+2,w
 17356  17A4  00BC               	movwf	___flmul@prod+2
 17357  17A5  082F               	movf	??___flmul+1,w
 17358  17A6  00BB               	movwf	___flmul@prod+1
 17359  17A7  082E               	movf	??___flmul,w
 17360  17A8  00BA               	movwf	___flmul@prod
 17361  17A9                     l4439:
 17362  17A9  3001               	movlw	1
 17363  17AA  07BE               	addwf	___flmul@temp,f
 17364  17AB  3000               	movlw	0
 17365  17AC  3DBF               	addwfc	___flmul@temp+1,f
 17366  17AD                     l4441:
 17367  17AD  083F               	movf	___flmul@temp+1,w
 17368  17AE  3A80               	xorlw	128
 17369  17AF  00AE               	movwf	??___flmul
 17370  17B0  3080               	movlw	128
 17371  17B1  022E               	subwf	??___flmul,w
 17372  17B2  1D03               	skipz
 17373  17B3  2FB6               	goto	u4945
 17374  17B4  30FF               	movlw	255
 17375  17B5  023E               	subwf	___flmul@temp,w
 17376  17B6                     u4945:
 17377  17B6  1C03               	skipc
 17378  17B7  2FB9               	goto	u4941
 17379  17B8  2FBA               	goto	u4940
 17380  17B9                     u4941:
 17381  17B9  2FC4               	goto	l4445
 17382  17BA                     u4940:
 17383  17BA                     l4443:
 17384  17BA  307F               	movlw	127
 17385  17BB  0140               	movlb	0	; select bank0
 17386  17BC  00BD               	movwf	___flmul@prod+3
 17387  17BD  3080               	movlw	128
 17388  17BE  00BC               	movwf	___flmul@prod+2
 17389  17BF  3000               	movlw	0
 17390  17C0  00BB               	movwf	___flmul@prod+1
 17391  17C1  3000               	movlw	0
 17392  17C2  00BA               	movwf	___flmul@prod
 17393  17C3  2FF3               	goto	l1221
 17394  17C4                     l4445:
 17395  17C4  0140               	movlb	0	; select bank0
 17396  17C5  083F               	movf	___flmul@temp+1,w
 17397  17C6  3A80               	xorlw	128
 17398  17C7  00AE               	movwf	??___flmul
 17399  17C8  3080               	movlw	128
 17400  17C9  022E               	subwf	??___flmul,w
 17401  17CA  1D03               	skipz
 17402  17CB  2FCE               	goto	u4955
 17403  17CC  3001               	movlw	1
 17404  17CD  023E               	subwf	___flmul@temp,w
 17405  17CE                     u4955:
 17406  17CE  1803               	skipnc
 17407  17CF  2FD1               	goto	u4951
 17408  17D0  2FD2               	goto	u4950
 17409  17D1                     u4951:
 17410  17D1  2FDD               	goto	l4451
 17411  17D2                     u4950:
 17412  17D2                     l4447:
 17413  17D2  3000               	movlw	0
 17414  17D3  0140               	movlb	0	; select bank0
 17415  17D4  00BD               	movwf	___flmul@prod+3
 17416  17D5  3000               	movlw	0
 17417  17D6  00BC               	movwf	___flmul@prod+2
 17418  17D7  3000               	movlw	0
 17419  17D8  00BB               	movwf	___flmul@prod+1
 17420  17D9  3000               	movlw	0
 17421  17DA  00BA               	movwf	___flmul@prod
 17422  17DB                     l4449:
 17423  17DB  01B3               	clrf	___flmul@sign
 17424  17DC  2FF3               	goto	l1221
 17425  17DD                     l4451:
 17426  17DD  0140               	movlb	0	; select bank0
 17427  17DE  083E               	movf	___flmul@temp,w
 17428  17DF  00AE               	movwf	??___flmul
 17429  17E0  082E               	movf	??___flmul,w
 17430  17E1  00B9               	movwf	___flmul@bexp
 17431  17E2  30FF               	movlw	255
 17432  17E3  05BA               	andwf	___flmul@prod,f
 17433  17E4  30FF               	movlw	255
 17434  17E5  05BB               	andwf	___flmul@prod+1,f
 17435  17E6  307F               	movlw	127
 17436  17E7  05BC               	andwf	___flmul@prod+2,f
 17437  17E8  3000               	movlw	0
 17438  17E9  05BD               	andwf	___flmul@prod+3,f
 17439  17EA                     l4453:
 17440  17EA  1C39               	btfss	___flmul@bexp,0
 17441  17EB  2FED               	goto	u4961
 17442  17EC  2FEE               	goto	u4960
 17443  17ED                     u4961:
 17444  17ED  2FEF               	goto	l4457
 17445  17EE                     u4960:
 17446  17EE                     l4455:
 17447  17EE  17BC               	bsf	___flmul@prod+2,7
 17448  17EF                     l4457:
 17449  17EF  3639               	lsrf	___flmul@bexp,w
 17450  17F0  00AE               	movwf	??___flmul
 17451  17F1  082E               	movf	??___flmul,w
 17452  17F2  00BD               	movwf	___flmul@prod+3
 17453  17F3                     l1221:
 17454  17F3  0833               	movf	___flmul@sign,w
 17455  17F4  00AE               	movwf	??___flmul
 17456  17F5  082E               	movf	??___flmul,w
 17457  17F6  04BD               	iorwf	___flmul@prod+3,f
 17458  17F7                     l4459:
 17459  17F7  083D               	movf	___flmul@prod+3,w
 17460  17F8  00A9               	movwf	?___flmul+3
 17461  17F9  083C               	movf	___flmul@prod+2,w
 17462  17FA  00A8               	movwf	?___flmul+2
 17463  17FB  083B               	movf	___flmul@prod+1,w
 17464  17FC  00A7               	movwf	?___flmul+1
 17465  17FD  083A               	movf	___flmul@prod,w
 17466  17FE  00A6               	movwf	?___flmul
 17467  17FF                     l1209:
 17468  17FF  0008               	return
 17469  1800                     __end_of___flmul:
 17470                           
 17471                           	psect	text33
 17472  18E2                     __ptext33:	
 17473 ;; *************** function __Umul8_16 *****************
 17474 ;; Defined at:
 17475 ;;		line 4 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/Umul8_16.c"
 17476 ;; Parameters:    Size  Location     Type
 17477 ;;  multiplier      1    wreg     unsigned char 
 17478 ;;  multiplicand    1    1[COMMON] unsigned char 
 17479 ;; Auto vars:     Size  Location     Type
 17480 ;;  multiplier      1    9[COMMON] unsigned char 
 17481 ;;  word_mpld       2    7[COMMON] unsigned int 
 17482 ;;  product         2    5[COMMON] unsigned int 
 17483 ;; Return value:  Size  Location     Type
 17484 ;;                  2    1[COMMON] unsigned int 
 17485 ;; Registers used:
 17486 ;;		wreg, status,2, status,0
 17487 ;; Tracked objects:
 17488 ;;		On entry : 0/0
 17489 ;;		On exit  : 0/0
 17490 ;;		Unchanged: 0/0
 17491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17492 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17493 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17494 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17495 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17496 ;;Total ram usage:        9 bytes
 17497 ;; Hardware stack levels used:    1
 17498 ;; Hardware stack levels required when called:    4
 17499 ;; This function calls:
 17500 ;;		Nothing
 17501 ;; This function is called by:
 17502 ;;		___flmul
 17503 ;; This function uses a non-reentrant model
 17504 ;;
 17505                           
 17506                           
 17507                           ;psect for function __Umul8_16
 17508  18E2                     __Umul8_16:
 17509                           
 17510                           ;incstack = 0
 17511                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 17512                           ;__Umul8_16@multiplier stored from wreg
 17513  18E2  00F9               	movwf	__Umul8_16@multiplier
 17514  18E3                     l3969:
 17515  18E3  01F5               	clrf	__Umul8_16@product
 17516  18E4  01F6               	clrf	__Umul8_16@product+1
 17517  18E5                     l3971:
 17518  18E5  0871               	movf	__Umul8_16@multiplicand,w
 17519  18E6  00F3               	movwf	??__Umul8_16
 17520  18E7  01F4               	clrf	??__Umul8_16+1
 17521  18E8  0873               	movf	??__Umul8_16,w
 17522  18E9  00F7               	movwf	__Umul8_16@word_mpld
 17523  18EA  0874               	movf	??__Umul8_16+1,w
 17524  18EB  00F8               	movwf	__Umul8_16@word_mpld+1
 17525  18EC                     l3973:
 17526  18EC  1C79               	btfss	__Umul8_16@multiplier,0
 17527  18ED  28EF               	goto	u3931
 17528  18EE  28F0               	goto	u3930
 17529  18EF                     u3931:
 17530  18EF  28F4               	goto	l1228
 17531  18F0                     u3930:
 17532  18F0                     l3975:
 17533  18F0  0877               	movf	__Umul8_16@word_mpld,w
 17534  18F1  07F5               	addwf	__Umul8_16@product,f
 17535  18F2  0878               	movf	__Umul8_16@word_mpld+1,w
 17536  18F3  3DF6               	addwfc	__Umul8_16@product+1,f
 17537  18F4                     l1228:
 17538  18F4  3001               	movlw	1
 17539  18F5                     u3945:
 17540  18F5  35F7               	lslf	__Umul8_16@word_mpld,f
 17541  18F6  0DF8               	rlf	__Umul8_16@word_mpld+1,f
 17542  18F7  0B89               	decfsz	9,f
 17543  18F8  28F5               	goto	u3945
 17544  18F9  1003               	clrc
 17545  18FA  0CF9               	rrf	__Umul8_16@multiplier,f
 17546  18FB                     l3977:
 17547  18FB  0879               	movf	__Umul8_16@multiplier,w
 17548  18FC  1D03               	btfss	3,2
 17549  18FD  28FF               	goto	u3951
 17550  18FE  2900               	goto	u3950
 17551  18FF                     u3951:
 17552  18FF  28EC               	goto	l3973
 17553  1900                     u3950:
 17554  1900                     l3979:
 17555  1900  0876               	movf	__Umul8_16@product+1,w
 17556  1901  00F2               	movwf	?__Umul8_16+1
 17557  1902  0875               	movf	__Umul8_16@product,w
 17558  1903  00F1               	movwf	?__Umul8_16
 17559  1904                     l1230:
 17560  1904  0008               	return
 17561  1905                     __end_of__Umul8_16:
 17562                           
 17563                           	psect	text34
 17564  1EC8                     __ptext34:	
 17565 ;; *************** function ___flge *****************
 17566 ;; Defined at:
 17567 ;;		line 4 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/flge.c"
 17568 ;; Parameters:    Size  Location     Type
 17569 ;;  ff1             4   32[BANK0 ] unsigned int 
 17570 ;;  ff2             4   36[BANK0 ] unsigned int 
 17571 ;; Auto vars:     Size  Location     Type
 17572 ;;		None
 17573 ;; Return value:  Size  Location     Type
 17574 ;;		None               void
 17575 ;; Registers used:
 17576 ;;		wreg, status,2, status,0
 17577 ;; Tracked objects:
 17578 ;;		On entry : 0/0
 17579 ;;		On exit  : 0/0
 17580 ;;		Unchanged: 0/0
 17581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17582 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17584 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17585 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17586 ;;Total ram usage:       12 bytes
 17587 ;; Hardware stack levels used:    1
 17588 ;; Hardware stack levels required when called:    4
 17589 ;; This function calls:
 17590 ;;		Nothing
 17591 ;; This function is called by:
 17592 ;;		_efgtoa
 17593 ;; This function uses a non-reentrant model
 17594 ;;
 17595                           
 17596                           
 17597                           ;psect for function ___flge
 17598  1EC8                     ___flge:
 17599  1EC8                     l4113:	
 17600                           ;incstack = 0
 17601                           ; Regs used in ___flge: [wreg+status,2+status,0]
 17602                           
 17603  1EC8  3000               	movlw	0
 17604  1EC9  0140               	movlb	0	; select bank0
 17605  1ECA  0540               	andwf	___flge@ff1,w
 17606  1ECB  00C8               	movwf	??___flge
 17607  1ECC  3000               	movlw	0
 17608  1ECD  0541               	andwf	___flge@ff1+1,w
 17609  1ECE  00C9               	movwf	??___flge+1
 17610  1ECF  3080               	movlw	128
 17611  1ED0  0542               	andwf	___flge@ff1+2,w
 17612  1ED1  00CA               	movwf	??___flge+2
 17613  1ED2  307F               	movlw	127
 17614  1ED3  0543               	andwf	___flge@ff1+3,w
 17615  1ED4  00CB               	movwf	??___flge+3
 17616  1ED5  084B               	movf	??___flge+3,w
 17617  1ED6  044A               	iorwf	??___flge+2,w
 17618  1ED7  0449               	iorwf	??___flge+1,w
 17619  1ED8  0448               	iorwf	??___flge,w
 17620  1ED9  1D03               	skipz
 17621  1EDA  2EDC               	goto	u4261
 17622  1EDB  2EDD               	goto	u4260
 17623  1EDC                     u4261:
 17624  1EDC  2EE5               	goto	l990
 17625  1EDD                     u4260:
 17626  1EDD                     l4115:
 17627  1EDD  3000               	movlw	0
 17628  1EDE  00C3               	movwf	___flge@ff1+3
 17629  1EDF  3000               	movlw	0
 17630  1EE0  00C2               	movwf	___flge@ff1+2
 17631  1EE1  3000               	movlw	0
 17632  1EE2  00C1               	movwf	___flge@ff1+1
 17633  1EE3  3000               	movlw	0
 17634  1EE4  00C0               	movwf	___flge@ff1
 17635  1EE5                     l990:
 17636  1EE5  3000               	movlw	0
 17637  1EE6  0544               	andwf	___flge@ff2,w
 17638  1EE7  00C8               	movwf	??___flge
 17639  1EE8  3000               	movlw	0
 17640  1EE9  0545               	andwf	___flge@ff2+1,w
 17641  1EEA  00C9               	movwf	??___flge+1
 17642  1EEB  3080               	movlw	128
 17643  1EEC  0546               	andwf	___flge@ff2+2,w
 17644  1EED  00CA               	movwf	??___flge+2
 17645  1EEE  307F               	movlw	127
 17646  1EEF  0547               	andwf	___flge@ff2+3,w
 17647  1EF0  00CB               	movwf	??___flge+3
 17648  1EF1  084B               	movf	??___flge+3,w
 17649  1EF2  044A               	iorwf	??___flge+2,w
 17650  1EF3  0449               	iorwf	??___flge+1,w
 17651  1EF4  0448               	iorwf	??___flge,w
 17652  1EF5  1D03               	skipz
 17653  1EF6  2EF8               	goto	u4271
 17654  1EF7  2EF9               	goto	u4270
 17655  1EF8                     u4271:
 17656  1EF8  2F01               	goto	l4119
 17657  1EF9                     u4270:
 17658  1EF9                     l4117:
 17659  1EF9  3000               	movlw	0
 17660  1EFA  00C7               	movwf	___flge@ff2+3
 17661  1EFB  3000               	movlw	0
 17662  1EFC  00C6               	movwf	___flge@ff2+2
 17663  1EFD  3000               	movlw	0
 17664  1EFE  00C5               	movwf	___flge@ff2+1
 17665  1EFF  3000               	movlw	0
 17666  1F00  00C4               	movwf	___flge@ff2
 17667  1F01                     l4119:
 17668  1F01  1FC3               	btfss	___flge@ff1+3,7
 17669  1F02  2F04               	goto	u4281
 17670  1F03  2F05               	goto	u4280
 17671  1F04                     u4281:
 17672  1F04  2F1D               	goto	l4123
 17673  1F05                     u4280:
 17674  1F05                     l4121:
 17675  1F05  3000               	movlw	0
 17676  1F06  00C8               	movwf	??___flge
 17677  1F07  3000               	movlw	0
 17678  1F08  00C9               	movwf	??___flge+1
 17679  1F09  3000               	movlw	0
 17680  1F0A  00CA               	movwf	??___flge+2
 17681  1F0B  3080               	movlw	128
 17682  1F0C  00CB               	movwf	??___flge+3
 17683  1F0D  0840               	movf	___flge@ff1,w
 17684  1F0E  02C8               	subwf	??___flge,f
 17685  1F0F  0841               	movf	___flge@ff1+1,w
 17686  1F10  3BC9               	subwfb	??___flge+1,f
 17687  1F11  0842               	movf	___flge@ff1+2,w
 17688  1F12  3BCA               	subwfb	??___flge+2,f
 17689  1F13  0843               	movf	___flge@ff1+3,w
 17690  1F14  3BCB               	subwfb	??___flge+3,f
 17691  1F15  084B               	movf	??___flge+3,w
 17692  1F16  00C3               	movwf	___flge@ff1+3
 17693  1F17  084A               	movf	??___flge+2,w
 17694  1F18  00C2               	movwf	___flge@ff1+2
 17695  1F19  0849               	movf	??___flge+1,w
 17696  1F1A  00C1               	movwf	___flge@ff1+1
 17697  1F1B  0848               	movf	??___flge,w
 17698  1F1C  00C0               	movwf	___flge@ff1
 17699  1F1D                     l4123:
 17700  1F1D  1FC7               	btfss	___flge@ff2+3,7
 17701  1F1E  2F20               	goto	u4291
 17702  1F1F  2F21               	goto	u4290
 17703  1F20                     u4291:
 17704  1F20  2F39               	goto	l993
 17705  1F21                     u4290:
 17706  1F21                     l4125:
 17707  1F21  3000               	movlw	0
 17708  1F22  00C8               	movwf	??___flge
 17709  1F23  3000               	movlw	0
 17710  1F24  00C9               	movwf	??___flge+1
 17711  1F25  3000               	movlw	0
 17712  1F26  00CA               	movwf	??___flge+2
 17713  1F27  3080               	movlw	128
 17714  1F28  00CB               	movwf	??___flge+3
 17715  1F29  0844               	movf	___flge@ff2,w
 17716  1F2A  02C8               	subwf	??___flge,f
 17717  1F2B  0845               	movf	___flge@ff2+1,w
 17718  1F2C  3BC9               	subwfb	??___flge+1,f
 17719  1F2D  0846               	movf	___flge@ff2+2,w
 17720  1F2E  3BCA               	subwfb	??___flge+2,f
 17721  1F2F  0847               	movf	___flge@ff2+3,w
 17722  1F30  3BCB               	subwfb	??___flge+3,f
 17723  1F31  084B               	movf	??___flge+3,w
 17724  1F32  00C7               	movwf	___flge@ff2+3
 17725  1F33  084A               	movf	??___flge+2,w
 17726  1F34  00C6               	movwf	___flge@ff2+2
 17727  1F35  0849               	movf	??___flge+1,w
 17728  1F36  00C5               	movwf	___flge@ff2+1
 17729  1F37  0848               	movf	??___flge,w
 17730  1F38  00C4               	movwf	___flge@ff2
 17731  1F39                     l993:
 17732  1F39  3080               	movlw	128
 17733  1F3A  06C3               	xorwf	___flge@ff1+3,f
 17734  1F3B  3080               	movlw	128
 17735  1F3C  06C7               	xorwf	___flge@ff2+3,f
 17736  1F3D  0847               	movf	___flge@ff2+3,w
 17737  1F3E  0243               	subwf	___flge@ff1+3,w
 17738  1F3F  1D03               	skipz
 17739  1F40  2F4B               	goto	u4305
 17740  1F41  0846               	movf	___flge@ff2+2,w
 17741  1F42  0242               	subwf	___flge@ff1+2,w
 17742  1F43  1D03               	skipz
 17743  1F44  2F4B               	goto	u4305
 17744  1F45  0845               	movf	___flge@ff2+1,w
 17745  1F46  0241               	subwf	___flge@ff1+1,w
 17746  1F47  1D03               	skipz
 17747  1F48  2F4B               	goto	u4305
 17748  1F49  0844               	movf	___flge@ff2,w
 17749  1F4A  0240               	subwf	___flge@ff1,w
 17750  1F4B                     u4305:
 17751  1F4B  1803               	skipnc
 17752  1F4C  2F4E               	goto	u4301
 17753  1F4D  2F4F               	goto	u4300
 17754  1F4E                     u4301:
 17755  1F4E  2F51               	goto	l4129
 17756  1F4F                     u4300:
 17757  1F4F                     l4127:
 17758  1F4F  1003               	clrc
 17759  1F50  2F52               	goto	l998
 17760  1F51                     l4129:
 17761  1F51  1403               	setc
 17762  1F52                     l998:
 17763  1F52  0008               	return
 17764  1F53                     __end_of___flge:
 17765                           
 17766                           	psect	text35
 17767  1C2D                     __ptext35:	
 17768 ;; *************** function ___fleq *****************
 17769 ;; Defined at:
 17770 ;;		line 4 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/fleq.c"
 17771 ;; Parameters:    Size  Location     Type
 17772 ;;  ff1             4    1[COMMON] unsigned int 
 17773 ;;  ff2             4    5[COMMON] unsigned int 
 17774 ;; Auto vars:     Size  Location     Type
 17775 ;;		None
 17776 ;; Return value:  Size  Location     Type
 17777 ;;		None               void
 17778 ;; Registers used:
 17779 ;;		wreg, status,2, status,0
 17780 ;; Tracked objects:
 17781 ;;		On entry : 0/0
 17782 ;;		On exit  : 0/0
 17783 ;;		Unchanged: 0/0
 17784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17785 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17787 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17788 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17789 ;;Total ram usage:       12 bytes
 17790 ;; Hardware stack levels used:    1
 17791 ;; Hardware stack levels required when called:    4
 17792 ;; This function calls:
 17793 ;;		Nothing
 17794 ;; This function is called by:
 17795 ;;		_efgtoa
 17796 ;; This function uses a non-reentrant model
 17797 ;;
 17798                           
 17799                           
 17800                           ;psect for function ___fleq
 17801  1C2D                     ___fleq:
 17802  1C2D                     l6053:	
 17803                           ;incstack = 0
 17804                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 17805                           
 17806  1C2D  3000               	movlw	0
 17807  1C2E  0571               	andwf	___fleq@ff1,w
 17808  1C2F  0140               	movlb	0	; select bank0
 17809  1C30  00A0               	movwf	??___fleq
 17810  1C31  3000               	movlw	0
 17811  1C32  0572               	andwf	___fleq@ff1+1,w
 17812  1C33  00A1               	movwf	??___fleq+1
 17813  1C34  3080               	movlw	128
 17814  1C35  0573               	andwf	___fleq@ff1+2,w
 17815  1C36  00A2               	movwf	??___fleq+2
 17816  1C37  307F               	movlw	127
 17817  1C38  0574               	andwf	___fleq@ff1+3,w
 17818  1C39  00A3               	movwf	??___fleq+3
 17819  1C3A  0823               	movf	??___fleq+3,w
 17820  1C3B  0422               	iorwf	??___fleq+2,w
 17821  1C3C  0421               	iorwf	??___fleq+1,w
 17822  1C3D  0420               	iorwf	??___fleq,w
 17823  1C3E  1D03               	skipz
 17824  1C3F  2C41               	goto	u7371
 17825  1C40  2C42               	goto	u7370
 17826  1C41                     u7371:
 17827  1C41  2C4A               	goto	l981
 17828  1C42                     u7370:
 17829  1C42                     l6055:
 17830  1C42  3000               	movlw	0
 17831  1C43  00F4               	movwf	___fleq@ff1+3
 17832  1C44  3000               	movlw	0
 17833  1C45  00F3               	movwf	___fleq@ff1+2
 17834  1C46  3000               	movlw	0
 17835  1C47  00F2               	movwf	___fleq@ff1+1
 17836  1C48  3000               	movlw	0
 17837  1C49  00F1               	movwf	___fleq@ff1
 17838  1C4A                     l981:
 17839  1C4A  3000               	movlw	0
 17840  1C4B  0575               	andwf	___fleq@ff2,w
 17841  1C4C  00A0               	movwf	??___fleq
 17842  1C4D  3000               	movlw	0
 17843  1C4E  0576               	andwf	___fleq@ff2+1,w
 17844  1C4F  00A1               	movwf	??___fleq+1
 17845  1C50  3080               	movlw	128
 17846  1C51  0577               	andwf	___fleq@ff2+2,w
 17847  1C52  00A2               	movwf	??___fleq+2
 17848  1C53  307F               	movlw	127
 17849  1C54  0578               	andwf	___fleq@ff2+3,w
 17850  1C55  00A3               	movwf	??___fleq+3
 17851  1C56  0823               	movf	??___fleq+3,w
 17852  1C57  0422               	iorwf	??___fleq+2,w
 17853  1C58  0421               	iorwf	??___fleq+1,w
 17854  1C59  0420               	iorwf	??___fleq,w
 17855  1C5A  1D03               	skipz
 17856  1C5B  2C5D               	goto	u7381
 17857  1C5C  2C5E               	goto	u7380
 17858  1C5D                     u7381:
 17859  1C5D  2C66               	goto	l982
 17860  1C5E                     u7380:
 17861  1C5E                     l6057:
 17862  1C5E  3000               	movlw	0
 17863  1C5F  00F8               	movwf	___fleq@ff2+3
 17864  1C60  3000               	movlw	0
 17865  1C61  00F7               	movwf	___fleq@ff2+2
 17866  1C62  3000               	movlw	0
 17867  1C63  00F6               	movwf	___fleq@ff2+1
 17868  1C64  3000               	movlw	0
 17869  1C65  00F5               	movwf	___fleq@ff2
 17870  1C66                     l982:
 17871  1C66  0878               	movf	___fleq@ff2+3,w
 17872  1C67  0674               	xorwf	___fleq@ff1+3,w
 17873  1C68  1D03               	skipz
 17874  1C69  2C74               	goto	u7395
 17875  1C6A  0877               	movf	___fleq@ff2+2,w
 17876  1C6B  0673               	xorwf	___fleq@ff1+2,w
 17877  1C6C  1D03               	skipz
 17878  1C6D  2C74               	goto	u7395
 17879  1C6E  0876               	movf	___fleq@ff2+1,w
 17880  1C6F  0672               	xorwf	___fleq@ff1+1,w
 17881  1C70  1D03               	skipz
 17882  1C71  2C74               	goto	u7395
 17883  1C72  0875               	movf	___fleq@ff2,w
 17884  1C73  0671               	xorwf	___fleq@ff1,w
 17885  1C74                     u7395:
 17886  1C74  1903               	skipnz
 17887  1C75  2C77               	goto	u7391
 17888  1C76  2C78               	goto	u7390
 17889  1C77                     u7391:
 17890  1C77  2C7A               	goto	l6061
 17891  1C78                     u7390:
 17892  1C78                     l6059:
 17893  1C78  1003               	clrc
 17894  1C79  2C7B               	goto	l987
 17895  1C7A                     l6061:
 17896  1C7A  1403               	setc
 17897  1C7B                     l987:
 17898  1C7B  0008               	return
 17899  1C7C                     __end_of___fleq:
 17900                           
 17901                           	psect	text36
 17902  13F5                     __ptext36:	
 17903 ;; *************** function ___fldiv *****************
 17904 ;; Defined at:
 17905 ;;		line 8 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/sprcdiv.c"
 17906 ;; Parameters:    Size  Location     Type
 17907 ;;  a               4   32[BANK0 ] unsigned int 
 17908 ;;  b               4   36[BANK0 ] unsigned int 
 17909 ;; Auto vars:     Size  Location     Type
 17910 ;;  grs             4   52[BANK0 ] unsigned long 
 17911 ;;  rem             4   45[BANK0 ] unsigned long 
 17912 ;;  new_exp         2   50[BANK0 ] int 
 17913 ;;  aexp            1   57[BANK0 ] unsigned char 
 17914 ;;  bexp            1   56[BANK0 ] unsigned char 
 17915 ;;  sign            1   49[BANK0 ] unsigned char 
 17916 ;; Return value:  Size  Location     Type
 17917 ;;                  4   32[BANK0 ] unsigned char 
 17918 ;; Registers used:
 17919 ;;		wreg, status,2, status,0
 17920 ;; Tracked objects:
 17921 ;;		On entry : 0/0
 17922 ;;		On exit  : 0/0
 17923 ;;		Unchanged: 0/0
 17924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17925 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17926 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17927 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17928 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17929 ;;Total ram usage:       26 bytes
 17930 ;; Hardware stack levels used:    1
 17931 ;; Hardware stack levels required when called:    4
 17932 ;; This function calls:
 17933 ;;		Nothing
 17934 ;; This function is called by:
 17935 ;;		_ADC_test
 17936 ;;		_efgtoa
 17937 ;; This function uses a non-reentrant model
 17938 ;;
 17939                           
 17940                           
 17941                           ;psect for function ___fldiv
 17942  13F5                     ___fldiv:
 17943  13F5                     l4183:	
 17944                           ;incstack = 0
 17945                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 17946                           
 17947  13F5  0140               	movlb	0	; select bank0
 17948  13F6  0847               	movf	___fldiv@b+3,w
 17949  13F7  3980               	andlw	128
 17950  13F8  00C8               	movwf	??___fldiv
 17951  13F9  0848               	movf	??___fldiv,w
 17952  13FA  00D1               	movwf	___fldiv@sign
 17953  13FB                     l4185:
 17954  13FB  3547               	lslf	___fldiv@b+3,w
 17955  13FC  00C8               	movwf	??___fldiv
 17956  13FD  0848               	movf	??___fldiv,w
 17957  13FE  00D8               	movwf	___fldiv@bexp
 17958  13FF                     l4187:
 17959  13FF  1FC6               	btfss	___fldiv@b+2,7
 17960  1400  2C02               	goto	u4421
 17961  1401  2C03               	goto	u4420
 17962  1402                     u4421:
 17963  1402  2C04               	goto	l4191
 17964  1403                     u4420:
 17965  1403                     l4189:
 17966  1403  1458               	bsf	___fldiv@bexp,0
 17967  1404                     l4191:
 17968  1404  0858               	movf	___fldiv@bexp,w
 17969  1405  1903               	btfsc	3,2
 17970  1406  2C08               	goto	u4431
 17971  1407  2C09               	goto	u4430
 17972  1408                     u4431:
 17973  1408  2C19               	goto	l4201
 17974  1409                     u4430:
 17975  1409                     l4193:
 17976  1409  0A58               	incf	___fldiv@bexp,w
 17977  140A  1D03               	btfss	3,2
 17978  140B  2C0D               	goto	u4441
 17979  140C  2C0E               	goto	u4440
 17980  140D                     u4441:
 17981  140D  2C16               	goto	l4197
 17982  140E                     u4440:
 17983  140E                     l4195:
 17984  140E  3000               	movlw	0
 17985  140F  00C7               	movwf	___fldiv@b+3
 17986  1410  3000               	movlw	0
 17987  1411  00C6               	movwf	___fldiv@b+2
 17988  1412  3000               	movlw	0
 17989  1413  00C5               	movwf	___fldiv@b+1
 17990  1414  3000               	movlw	0
 17991  1415  00C4               	movwf	___fldiv@b
 17992  1416                     l4197:
 17993  1416  17C6               	bsf	___fldiv@b+2,7
 17994  1417                     l4199:
 17995  1417  01C7               	clrf	___fldiv@b+3
 17996  1418  2C21               	goto	l4203
 17997  1419                     l4201:
 17998  1419  3000               	movlw	0
 17999  141A  00C7               	movwf	___fldiv@b+3
 18000  141B  3000               	movlw	0
 18001  141C  00C6               	movwf	___fldiv@b+2
 18002  141D  3000               	movlw	0
 18003  141E  00C5               	movwf	___fldiv@b+1
 18004  141F  3000               	movlw	0
 18005  1420  00C4               	movwf	___fldiv@b
 18006  1421                     l4203:
 18007  1421  0843               	movf	___fldiv@a+3,w
 18008  1422  3980               	andlw	128
 18009  1423  00C8               	movwf	??___fldiv
 18010  1424  0848               	movf	??___fldiv,w
 18011  1425  06D1               	xorwf	___fldiv@sign,f
 18012  1426                     l4205:
 18013  1426  3543               	lslf	___fldiv@a+3,w
 18014  1427  00C8               	movwf	??___fldiv
 18015  1428  0848               	movf	??___fldiv,w
 18016  1429  00D9               	movwf	___fldiv@aexp
 18017  142A                     l4207:
 18018  142A  1FC2               	btfss	___fldiv@a+2,7
 18019  142B  2C2D               	goto	u4451
 18020  142C  2C2E               	goto	u4450
 18021  142D                     u4451:
 18022  142D  2C2F               	goto	l4211
 18023  142E                     u4450:
 18024  142E                     l4209:
 18025  142E  1459               	bsf	___fldiv@aexp,0
 18026  142F                     l4211:
 18027  142F  0859               	movf	___fldiv@aexp,w
 18028  1430  1903               	btfsc	3,2
 18029  1431  2C33               	goto	u4461
 18030  1432  2C34               	goto	u4460
 18031  1433                     u4461:
 18032  1433  2C44               	goto	l4221
 18033  1434                     u4460:
 18034  1434                     l4213:
 18035  1434  0A59               	incf	___fldiv@aexp,w
 18036  1435  1D03               	btfss	3,2
 18037  1436  2C38               	goto	u4471
 18038  1437  2C39               	goto	u4470
 18039  1438                     u4471:
 18040  1438  2C41               	goto	l4217
 18041  1439                     u4470:
 18042  1439                     l4215:
 18043  1439  3000               	movlw	0
 18044  143A  00C3               	movwf	___fldiv@a+3
 18045  143B  3000               	movlw	0
 18046  143C  00C2               	movwf	___fldiv@a+2
 18047  143D  3000               	movlw	0
 18048  143E  00C1               	movwf	___fldiv@a+1
 18049  143F  3000               	movlw	0
 18050  1440  00C0               	movwf	___fldiv@a
 18051  1441                     l4217:
 18052  1441  17C2               	bsf	___fldiv@a+2,7
 18053  1442                     l4219:
 18054  1442  01C3               	clrf	___fldiv@a+3
 18055  1443  2C4C               	goto	l1169
 18056  1444                     l4221:
 18057  1444  3000               	movlw	0
 18058  1445  00C3               	movwf	___fldiv@a+3
 18059  1446  3000               	movlw	0
 18060  1447  00C2               	movwf	___fldiv@a+2
 18061  1448  3000               	movlw	0
 18062  1449  00C1               	movwf	___fldiv@a+1
 18063  144A  3000               	movlw	0
 18064  144B  00C0               	movwf	___fldiv@a
 18065  144C                     l1169:
 18066  144C  0843               	movf	___fldiv@a+3,w
 18067  144D  0442               	iorwf	___fldiv@a+2,w
 18068  144E  0441               	iorwf	___fldiv@a+1,w
 18069  144F  0440               	iorwf	___fldiv@a,w
 18070  1450  1D03               	skipz
 18071  1451  2C53               	goto	u4481
 18072  1452  2C54               	goto	u4480
 18073  1453                     u4481:
 18074  1453  2C6D               	goto	l4231
 18075  1454                     u4480:
 18076  1454                     l4223:
 18077  1454  3000               	movlw	0
 18078  1455  00C7               	movwf	___fldiv@b+3
 18079  1456  3000               	movlw	0
 18080  1457  00C6               	movwf	___fldiv@b+2
 18081  1458  3000               	movlw	0
 18082  1459  00C5               	movwf	___fldiv@b+1
 18083  145A  3000               	movlw	0
 18084  145B  00C4               	movwf	___fldiv@b
 18085  145C  3080               	movlw	128
 18086  145D  04C6               	iorwf	___fldiv@b+2,f
 18087  145E  307F               	movlw	127
 18088  145F  04C7               	iorwf	___fldiv@b+3,f
 18089  1460                     l4225:
 18090  1460  0851               	movf	___fldiv@sign,w
 18091  1461  00C8               	movwf	??___fldiv
 18092  1462  0848               	movf	??___fldiv,w
 18093  1463  04C7               	iorwf	___fldiv@b+3,f
 18094  1464                     l4227:
 18095  1464  0847               	movf	___fldiv@b+3,w
 18096  1465  00C3               	movwf	?___fldiv+3
 18097  1466  0846               	movf	___fldiv@b+2,w
 18098  1467  00C2               	movwf	?___fldiv+2
 18099  1468  0845               	movf	___fldiv@b+1,w
 18100  1469  00C1               	movwf	?___fldiv+1
 18101  146A  0844               	movf	___fldiv@b,w
 18102  146B  00C0               	movwf	?___fldiv
 18103  146C  2DA8               	goto	l1171
 18104  146D                     l4231:
 18105  146D  0858               	movf	___fldiv@bexp,w
 18106  146E  1D03               	btfss	3,2
 18107  146F  2C71               	goto	u4491
 18108  1470  2C72               	goto	u4490
 18109  1471                     u4491:
 18110  1471  2C7B               	goto	l4237
 18111  1472                     u4490:
 18112  1472                     l4233:
 18113  1472  3000               	movlw	0
 18114  1473  00C3               	movwf	?___fldiv+3
 18115  1474  3000               	movlw	0
 18116  1475  00C2               	movwf	?___fldiv+2
 18117  1476  3000               	movlw	0
 18118  1477  00C1               	movwf	?___fldiv+1
 18119  1478  3000               	movlw	0
 18120  1479  00C0               	movwf	?___fldiv
 18121  147A  2DA8               	goto	l1171
 18122  147B                     l4237:
 18123  147B  0858               	movf	___fldiv@bexp,w
 18124  147C  00C8               	movwf	??___fldiv
 18125  147D  01C9               	clrf	??___fldiv+1
 18126  147E  0849               	movf	??___fldiv+1,w
 18127  147F  00CB               	movwf	??___fldiv+3
 18128  1480  0859               	movf	___fldiv@aexp,w
 18129  1481  0248               	subwf	??___fldiv,w
 18130  1482  00CA               	movwf	??___fldiv+2
 18131  1483  1C03               	skipc
 18132  1484  03CB               	decf	??___fldiv+3,f
 18133  1485  084A               	movf	??___fldiv+2,w
 18134  1486  3E7F               	addlw	127
 18135  1487  00D2               	movwf	___fldiv@new_exp
 18136  1488  3000               	movlw	0
 18137  1489  3D4B               	addwfc	??___fldiv+3,w
 18138  148A  00D3               	movwf	___fldiv@new_exp+1
 18139  148B                     l4239:
 18140  148B  0847               	movf	___fldiv@b+3,w
 18141  148C  00D0               	movwf	___fldiv@rem+3
 18142  148D  0846               	movf	___fldiv@b+2,w
 18143  148E  00CF               	movwf	___fldiv@rem+2
 18144  148F  0845               	movf	___fldiv@b+1,w
 18145  1490  00CE               	movwf	___fldiv@rem+1
 18146  1491  0844               	movf	___fldiv@b,w
 18147  1492  00CD               	movwf	___fldiv@rem
 18148  1493                     l4241:
 18149  1493  3000               	movlw	0
 18150  1494  00C7               	movwf	___fldiv@b+3
 18151  1495  3000               	movlw	0
 18152  1496  00C6               	movwf	___fldiv@b+2
 18153  1497  3000               	movlw	0
 18154  1498  00C5               	movwf	___fldiv@b+1
 18155  1499  3000               	movlw	0
 18156  149A  00C4               	movwf	___fldiv@b
 18157  149B                     l4243:
 18158  149B  3000               	movlw	0
 18159  149C  00D7               	movwf	___fldiv@grs+3
 18160  149D  3000               	movlw	0
 18161  149E  00D6               	movwf	___fldiv@grs+2
 18162  149F  3000               	movlw	0
 18163  14A0  00D5               	movwf	___fldiv@grs+1
 18164  14A1  3000               	movlw	0
 18165  14A2  00D4               	movwf	___fldiv@grs
 18166  14A3                     l4245:
 18167  14A3  01D9               	clrf	___fldiv@aexp
 18168  14A4  2CE3               	goto	l4265
 18169  14A5                     l4247:
 18170  14A5  0859               	movf	___fldiv@aexp,w
 18171  14A6  1903               	btfsc	3,2
 18172  14A7  2CA9               	goto	u4501
 18173  14A8  2CAA               	goto	u4500
 18174  14A9                     u4501:
 18175  14A9  2CC4               	goto	l4257
 18176  14AA                     u4500:
 18177  14AA                     l4249:
 18178  14AA  3001               	movlw	1
 18179  14AB                     u4515:
 18180  14AB  35CD               	lslf	___fldiv@rem,f
 18181  14AC  0DCE               	rlf	___fldiv@rem+1,f
 18182  14AD  0DCF               	rlf	___fldiv@rem+2,f
 18183  14AE  0DD0               	rlf	___fldiv@rem+3,f
 18184  14AF  0B89               	decfsz	9,f
 18185  14B0  2CAB               	goto	u4515
 18186  14B1  3001               	movlw	1
 18187  14B2                     u4525:
 18188  14B2  35C4               	lslf	___fldiv@b,f
 18189  14B3  0DC5               	rlf	___fldiv@b+1,f
 18190  14B4  0DC6               	rlf	___fldiv@b+2,f
 18191  14B5  0DC7               	rlf	___fldiv@b+3,f
 18192  14B6  0B89               	decfsz	9,f
 18193  14B7  2CB2               	goto	u4525
 18194  14B8                     l4251:
 18195  14B8  1FD7               	btfss	___fldiv@grs+3,7
 18196  14B9  2CBB               	goto	u4531
 18197  14BA  2CBC               	goto	u4530
 18198  14BB                     u4531:
 18199  14BB  2CBD               	goto	l4255
 18200  14BC                     u4530:
 18201  14BC                     l4253:
 18202  14BC  1444               	bsf	___fldiv@b,0
 18203  14BD                     l4255:
 18204  14BD  3001               	movlw	1
 18205  14BE                     u4545:
 18206  14BE  35D4               	lslf	___fldiv@grs,f
 18207  14BF  0DD5               	rlf	___fldiv@grs+1,f
 18208  14C0  0DD6               	rlf	___fldiv@grs+2,f
 18209  14C1  0DD7               	rlf	___fldiv@grs+3,f
 18210  14C2  0B89               	decfsz	9,f
 18211  14C3  2CBE               	goto	u4545
 18212  14C4                     l4257:
 18213  14C4  0843               	movf	___fldiv@a+3,w
 18214  14C5  0250               	subwf	___fldiv@rem+3,w
 18215  14C6  1D03               	skipz
 18216  14C7  2CD2               	goto	u4555
 18217  14C8  0842               	movf	___fldiv@a+2,w
 18218  14C9  024F               	subwf	___fldiv@rem+2,w
 18219  14CA  1D03               	skipz
 18220  14CB  2CD2               	goto	u4555
 18221  14CC  0841               	movf	___fldiv@a+1,w
 18222  14CD  024E               	subwf	___fldiv@rem+1,w
 18223  14CE  1D03               	skipz
 18224  14CF  2CD2               	goto	u4555
 18225  14D0  0840               	movf	___fldiv@a,w
 18226  14D1  024D               	subwf	___fldiv@rem,w
 18227  14D2                     u4555:
 18228  14D2  1C03               	skipc
 18229  14D3  2CD5               	goto	u4551
 18230  14D4  2CD6               	goto	u4550
 18231  14D5                     u4551:
 18232  14D5  2CDF               	goto	l4263
 18233  14D6                     u4550:
 18234  14D6                     l4259:
 18235  14D6  1757               	bsf	___fldiv@grs+3,6
 18236  14D7                     l4261:
 18237  14D7  0840               	movf	___fldiv@a,w
 18238  14D8  02CD               	subwf	___fldiv@rem,f
 18239  14D9  0841               	movf	___fldiv@a+1,w
 18240  14DA  3BCE               	subwfb	___fldiv@rem+1,f
 18241  14DB  0842               	movf	___fldiv@a+2,w
 18242  14DC  3BCF               	subwfb	___fldiv@rem+2,f
 18243  14DD  0843               	movf	___fldiv@a+3,w
 18244  14DE  3BD0               	subwfb	___fldiv@rem+3,f
 18245  14DF                     l4263:
 18246  14DF  3001               	movlw	1
 18247  14E0  00C8               	movwf	??___fldiv
 18248  14E1  0848               	movf	??___fldiv,w
 18249  14E2  07D9               	addwf	___fldiv@aexp,f
 18250  14E3                     l4265:
 18251  14E3  301A               	movlw	26
 18252  14E4  0259               	subwf	___fldiv@aexp,w
 18253  14E5  1C03               	skipc
 18254  14E6  2CE8               	goto	u4561
 18255  14E7  2CE9               	goto	u4560
 18256  14E8                     u4561:
 18257  14E8  2CA5               	goto	l4247
 18258  14E9                     u4560:
 18259  14E9                     l4267:
 18260  14E9  0850               	movf	___fldiv@rem+3,w
 18261  14EA  044F               	iorwf	___fldiv@rem+2,w
 18262  14EB  044E               	iorwf	___fldiv@rem+1,w
 18263  14EC  044D               	iorwf	___fldiv@rem,w
 18264  14ED  1903               	skipnz
 18265  14EE  2CF0               	goto	u4571
 18266  14EF  2CF1               	goto	u4570
 18267  14F0                     u4571:
 18268  14F0  2D0A               	goto	l4281
 18269  14F1                     u4570:
 18270  14F1                     l4269:
 18271  14F1  1454               	bsf	___fldiv@grs,0
 18272  14F2  2D0A               	goto	l4281
 18273  14F3                     l4271:
 18274  14F3  3001               	movlw	1
 18275  14F4                     u4585:
 18276  14F4  35C4               	lslf	___fldiv@b,f
 18277  14F5  0DC5               	rlf	___fldiv@b+1,f
 18278  14F6  0DC6               	rlf	___fldiv@b+2,f
 18279  14F7  0DC7               	rlf	___fldiv@b+3,f
 18280  14F8  0B89               	decfsz	9,f
 18281  14F9  2CF4               	goto	u4585
 18282  14FA                     l4273:
 18283  14FA  1FD7               	btfss	___fldiv@grs+3,7
 18284  14FB  2CFD               	goto	u4591
 18285  14FC  2CFE               	goto	u4590
 18286  14FD                     u4591:
 18287  14FD  2CFF               	goto	l4277
 18288  14FE                     u4590:
 18289  14FE                     l4275:
 18290  14FE  1444               	bsf	___fldiv@b,0
 18291  14FF                     l4277:
 18292  14FF  3001               	movlw	1
 18293  1500                     u4605:
 18294  1500  35D4               	lslf	___fldiv@grs,f
 18295  1501  0DD5               	rlf	___fldiv@grs+1,f
 18296  1502  0DD6               	rlf	___fldiv@grs+2,f
 18297  1503  0DD7               	rlf	___fldiv@grs+3,f
 18298  1504  0B89               	decfsz	9,f
 18299  1505  2D00               	goto	u4605
 18300  1506                     l4279:
 18301  1506  30FF               	movlw	255
 18302  1507  07D2               	addwf	___fldiv@new_exp,f
 18303  1508  30FF               	movlw	255
 18304  1509  3DD3               	addwfc	___fldiv@new_exp+1,f
 18305  150A                     l4281:
 18306  150A  1FC6               	btfss	___fldiv@b+2,7
 18307  150B  2D0D               	goto	u4611
 18308  150C  2D0E               	goto	u4610
 18309  150D                     u4611:
 18310  150D  2CF3               	goto	l4271
 18311  150E                     u4610:
 18312  150E                     l4283:
 18313  150E  01D9               	clrf	___fldiv@aexp
 18314  150F                     l4285:
 18315  150F  1FD7               	btfss	___fldiv@grs+3,7
 18316  1510  2D12               	goto	u4621
 18317  1511  2D13               	goto	u4620
 18318  1512                     u4621:
 18319  1512  2D2F               	goto	l4293
 18320  1513                     u4620:
 18321  1513                     l4287:
 18322  1513  30FF               	movlw	255
 18323  1514  0554               	andwf	___fldiv@grs,w
 18324  1515  00C8               	movwf	??___fldiv
 18325  1516  30FF               	movlw	255
 18326  1517  0555               	andwf	___fldiv@grs+1,w
 18327  1518  00C9               	movwf	??___fldiv+1
 18328  1519  30FF               	movlw	255
 18329  151A  0556               	andwf	___fldiv@grs+2,w
 18330  151B  00CA               	movwf	??___fldiv+2
 18331  151C  307F               	movlw	127
 18332  151D  0557               	andwf	___fldiv@grs+3,w
 18333  151E  00CB               	movwf	??___fldiv+3
 18334  151F  084B               	movf	??___fldiv+3,w
 18335  1520  044A               	iorwf	??___fldiv+2,w
 18336  1521  0449               	iorwf	??___fldiv+1,w
 18337  1522  0448               	iorwf	??___fldiv,w
 18338  1523  1903               	skipnz
 18339  1524  2D26               	goto	u4631
 18340  1525  2D27               	goto	u4630
 18341  1526                     u4631:
 18342  1526  2D2A               	goto	l1185
 18343  1527                     u4630:
 18344  1527                     l4289:
 18345  1527  01D9               	clrf	___fldiv@aexp
 18346  1528  0AD9               	incf	___fldiv@aexp,f
 18347  1529  2D2F               	goto	l4293
 18348  152A                     l1185:
 18349  152A  1C44               	btfss	___fldiv@b,0
 18350  152B  2D2D               	goto	u4641
 18351  152C  2D2E               	goto	u4640
 18352  152D                     u4641:
 18353  152D  2D2F               	goto	l4293
 18354  152E                     u4640:
 18355  152E  2D27               	goto	l4289
 18356  152F                     l4293:
 18357  152F  0859               	movf	___fldiv@aexp,w
 18358  1530  1903               	btfsc	3,2
 18359  1531  2D33               	goto	u4651
 18360  1532  2D34               	goto	u4650
 18361  1533                     u4651:
 18362  1533  2D5C               	goto	l4303
 18363  1534                     u4650:
 18364  1534                     l4295:
 18365  1534  3001               	movlw	1
 18366  1535  07C4               	addwf	___fldiv@b,f
 18367  1536  3000               	movlw	0
 18368  1537  3DC5               	addwfc	___fldiv@b+1,f
 18369  1538  3000               	movlw	0
 18370  1539  3DC6               	addwfc	___fldiv@b+2,f
 18371  153A  3000               	movlw	0
 18372  153B  3DC7               	addwfc	___fldiv@b+3,f
 18373  153C                     l4297:
 18374  153C  1C47               	btfss	___fldiv@b+3,0
 18375  153D  2D3F               	goto	u4661
 18376  153E  2D40               	goto	u4660
 18377  153F                     u4661:
 18378  153F  2D5C               	goto	l4303
 18379  1540                     u4660:
 18380  1540                     l4299:
 18381  1540  0844               	movf	___fldiv@b,w
 18382  1541  00C8               	movwf	??___fldiv
 18383  1542  0845               	movf	___fldiv@b+1,w
 18384  1543  00C9               	movwf	??___fldiv+1
 18385  1544  0846               	movf	___fldiv@b+2,w
 18386  1545  00CA               	movwf	??___fldiv+2
 18387  1546  0847               	movf	___fldiv@b+3,w
 18388  1547  00CB               	movwf	??___fldiv+3
 18389  1548  3001               	movlw	1
 18390  1549  00CC               	movwf	??___fldiv+4
 18391  154A                     u4675:
 18392  154A  37CB               	asrf	??___fldiv+3,f
 18393  154B  0CCA               	rrf	??___fldiv+2,f
 18394  154C  0CC9               	rrf	??___fldiv+1,f
 18395  154D  0CC8               	rrf	??___fldiv,f
 18396  154E                     u4670:
 18397  154E  0BCC               	decfsz	??___fldiv+4,f
 18398  154F  2D4A               	goto	u4675
 18399  1550  084B               	movf	??___fldiv+3,w
 18400  1551  00C7               	movwf	___fldiv@b+3
 18401  1552  084A               	movf	??___fldiv+2,w
 18402  1553  00C6               	movwf	___fldiv@b+2
 18403  1554  0849               	movf	??___fldiv+1,w
 18404  1555  00C5               	movwf	___fldiv@b+1
 18405  1556  0848               	movf	??___fldiv,w
 18406  1557  00C4               	movwf	___fldiv@b
 18407  1558                     l4301:
 18408  1558  3001               	movlw	1
 18409  1559  07D2               	addwf	___fldiv@new_exp,f
 18410  155A  3000               	movlw	0
 18411  155B  3DD3               	addwfc	___fldiv@new_exp+1,f
 18412  155C                     l4303:
 18413  155C  0853               	movf	___fldiv@new_exp+1,w
 18414  155D  3A80               	xorlw	128
 18415  155E  00C8               	movwf	??___fldiv
 18416  155F  3080               	movlw	128
 18417  1560  0248               	subwf	??___fldiv,w
 18418  1561  1D03               	skipz
 18419  1562  2D65               	goto	u4685
 18420  1563  30FF               	movlw	255
 18421  1564  0252               	subwf	___fldiv@new_exp,w
 18422  1565                     u4685:
 18423  1565  1C03               	skipc
 18424  1566  2D68               	goto	u4681
 18425  1567  2D69               	goto	u4680
 18426  1568                     u4681:
 18427  1568  2D76               	goto	l1190
 18428  1569                     u4680:
 18429  1569                     l4305:
 18430  1569  30FF               	movlw	255
 18431  156A  0140               	movlb	0	; select bank0
 18432  156B  00D2               	movwf	___fldiv@new_exp
 18433  156C  3000               	movlw	0
 18434  156D  00D3               	movwf	___fldiv@new_exp+1
 18435  156E  3000               	movlw	0
 18436  156F  00C7               	movwf	___fldiv@b+3
 18437  1570  3000               	movlw	0
 18438  1571  00C6               	movwf	___fldiv@b+2
 18439  1572  3000               	movlw	0
 18440  1573  00C5               	movwf	___fldiv@b+1
 18441  1574  3000               	movlw	0
 18442  1575  00C4               	movwf	___fldiv@b
 18443  1576                     l1190:
 18444  1576  0140               	movlb	0	; select bank0
 18445  1577  0853               	movf	___fldiv@new_exp+1,w
 18446  1578  3A80               	xorlw	128
 18447  1579  00C8               	movwf	??___fldiv
 18448  157A  3080               	movlw	128
 18449  157B  0248               	subwf	??___fldiv,w
 18450  157C  1D03               	skipz
 18451  157D  2D80               	goto	u4695
 18452  157E  3001               	movlw	1
 18453  157F  0252               	subwf	___fldiv@new_exp,w
 18454  1580                     u4695:
 18455  1580  1803               	skipnc
 18456  1581  2D83               	goto	u4691
 18457  1582  2D84               	goto	u4690
 18458  1583                     u4691:
 18459  1583  2D90               	goto	l1191
 18460  1584                     u4690:
 18461  1584                     l4307:
 18462  1584  0140               	movlb	0	; select bank0
 18463  1585  01D2               	clrf	___fldiv@new_exp
 18464  1586  01D3               	clrf	___fldiv@new_exp+1
 18465  1587                     l4309:
 18466  1587  3000               	movlw	0
 18467  1588  00C7               	movwf	___fldiv@b+3
 18468  1589  3000               	movlw	0
 18469  158A  00C6               	movwf	___fldiv@b+2
 18470  158B  3000               	movlw	0
 18471  158C  00C5               	movwf	___fldiv@b+1
 18472  158D  3000               	movlw	0
 18473  158E  00C4               	movwf	___fldiv@b
 18474  158F                     l4311:
 18475  158F  01D1               	clrf	___fldiv@sign
 18476  1590                     l1191:
 18477  1590  0140               	movlb	0	; select bank0
 18478  1591  0852               	movf	___fldiv@new_exp,w
 18479  1592  00C8               	movwf	??___fldiv
 18480  1593  0848               	movf	??___fldiv,w
 18481  1594  00D8               	movwf	___fldiv@bexp
 18482  1595                     l4313:
 18483  1595  1C58               	btfss	___fldiv@bexp,0
 18484  1596  2D98               	goto	u4701
 18485  1597  2D99               	goto	u4700
 18486  1598                     u4701:
 18487  1598  2D9B               	goto	l4317
 18488  1599                     u4700:
 18489  1599                     l4315:
 18490  1599  17C6               	bsf	___fldiv@b+2,7
 18491  159A  2D9F               	goto	l1193
 18492  159B                     l4317:
 18493  159B  307F               	movlw	127
 18494  159C  00C8               	movwf	??___fldiv
 18495  159D  0848               	movf	??___fldiv,w
 18496  159E  05C6               	andwf	___fldiv@b+2,f
 18497  159F                     l1193:
 18498  159F  3658               	lsrf	___fldiv@bexp,w
 18499  15A0  00C8               	movwf	??___fldiv
 18500  15A1  0848               	movf	??___fldiv,w
 18501  15A2  00C7               	movwf	___fldiv@b+3
 18502  15A3  0851               	movf	___fldiv@sign,w
 18503  15A4  00C8               	movwf	??___fldiv
 18504  15A5  0848               	movf	??___fldiv,w
 18505  15A6  04C7               	iorwf	___fldiv@b+3,f
 18506  15A7  2C64               	goto	l4227
 18507  15A8                     l1171:
 18508  15A8  0008               	return
 18509  15A9                     __end_of___fldiv:
 18510                           
 18511                           	psect	text37
 18512  1C7C                     __ptext37:	
 18513 ;; *************** function ___awmod *****************
 18514 ;; Defined at:
 18515 ;;		line 5 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/awmod.c"
 18516 ;; Parameters:    Size  Location     Type
 18517 ;;  divisor         2    1[COMMON] int 
 18518 ;;  dividend        2    3[COMMON] int 
 18519 ;; Auto vars:     Size  Location     Type
 18520 ;;  sign            1    7[COMMON] unsigned char 
 18521 ;;  counter         1    6[COMMON] unsigned char 
 18522 ;; Return value:  Size  Location     Type
 18523 ;;                  2    1[COMMON] int 
 18524 ;; Registers used:
 18525 ;;		wreg, status,2, status,0
 18526 ;; Tracked objects:
 18527 ;;		On entry : 0/0
 18528 ;;		On exit  : 0/0
 18529 ;;		Unchanged: 0/0
 18530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18531 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18532 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18533 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18534 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18535 ;;Total ram usage:        7 bytes
 18536 ;; Hardware stack levels used:    1
 18537 ;; Hardware stack levels required when called:    4
 18538 ;; This function calls:
 18539 ;;		Nothing
 18540 ;; This function is called by:
 18541 ;;		_efgtoa
 18542 ;; This function uses a non-reentrant model
 18543 ;;
 18544                           
 18545                           
 18546                           ;psect for function ___awmod
 18547  1C7C                     ___awmod:
 18548  1C7C                     l4063:	
 18549                           ;incstack = 0
 18550                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 18551                           
 18552  1C7C  01F7               	clrf	___awmod@sign
 18553  1C7D                     l4065:
 18554  1C7D  1FF4               	btfss	___awmod@dividend+1,7
 18555  1C7E  2C80               	goto	u4141
 18556  1C7F  2C81               	goto	u4140
 18557  1C80                     u4141:
 18558  1C80  2C88               	goto	l4071
 18559  1C81                     u4140:
 18560  1C81                     l4067:
 18561  1C81  09F3               	comf	___awmod@dividend,f
 18562  1C82  09F4               	comf	___awmod@dividend+1,f
 18563  1C83  0AF3               	incf	___awmod@dividend,f
 18564  1C84  1903               	skipnz
 18565  1C85  0AF4               	incf	___awmod@dividend+1,f
 18566  1C86                     l4069:
 18567  1C86  01F7               	clrf	___awmod@sign
 18568  1C87  0AF7               	incf	___awmod@sign,f
 18569  1C88                     l4071:
 18570  1C88  1FF2               	btfss	___awmod@divisor+1,7
 18571  1C89  2C8B               	goto	u4151
 18572  1C8A  2C8C               	goto	u4150
 18573  1C8B                     u4151:
 18574  1C8B  2C91               	goto	l4075
 18575  1C8C                     u4150:
 18576  1C8C                     l4073:
 18577  1C8C  09F1               	comf	___awmod@divisor,f
 18578  1C8D  09F2               	comf	___awmod@divisor+1,f
 18579  1C8E  0AF1               	incf	___awmod@divisor,f
 18580  1C8F  1903               	skipnz
 18581  1C90  0AF2               	incf	___awmod@divisor+1,f
 18582  1C91                     l4075:
 18583  1C91  0871               	movf	___awmod@divisor,w
 18584  1C92  0472               	iorwf	___awmod@divisor+1,w
 18585  1C93  1903               	btfsc	3,2
 18586  1C94  2C96               	goto	u4161
 18587  1C95  2C97               	goto	u4160
 18588  1C96                     u4161:
 18589  1C96  2CC0               	goto	l4093
 18590  1C97                     u4160:
 18591  1C97                     l4077:
 18592  1C97  01F6               	clrf	___awmod@counter
 18593  1C98  0AF6               	incf	___awmod@counter,f
 18594  1C99  2CA3               	goto	l4083
 18595  1C9A                     l4079:
 18596  1C9A  3001               	movlw	1
 18597  1C9B                     u4175:
 18598  1C9B  35F1               	lslf	___awmod@divisor,f
 18599  1C9C  0DF2               	rlf	___awmod@divisor+1,f
 18600  1C9D  0B89               	decfsz	9,f
 18601  1C9E  2C9B               	goto	u4175
 18602  1C9F                     l4081:
 18603  1C9F  3001               	movlw	1
 18604  1CA0  00F5               	movwf	??___awmod
 18605  1CA1  0875               	movf	??___awmod,w
 18606  1CA2  07F6               	addwf	___awmod@counter,f
 18607  1CA3                     l4083:
 18608  1CA3  1FF2               	btfss	___awmod@divisor+1,7
 18609  1CA4  2CA6               	goto	u4181
 18610  1CA5  2CA7               	goto	u4180
 18611  1CA6                     u4181:
 18612  1CA6  2C9A               	goto	l4079
 18613  1CA7                     u4180:
 18614  1CA7                     l4085:
 18615  1CA7  0872               	movf	___awmod@divisor+1,w
 18616  1CA8  0274               	subwf	___awmod@dividend+1,w
 18617  1CA9  1D03               	skipz
 18618  1CAA  2CAD               	goto	u4195
 18619  1CAB  0871               	movf	___awmod@divisor,w
 18620  1CAC  0273               	subwf	___awmod@dividend,w
 18621  1CAD                     u4195:
 18622  1CAD  1C03               	skipc
 18623  1CAE  2CB0               	goto	u4191
 18624  1CAF  2CB1               	goto	u4190
 18625  1CB0                     u4191:
 18626  1CB0  2CB5               	goto	l4089
 18627  1CB1                     u4190:
 18628  1CB1                     l4087:
 18629  1CB1  0871               	movf	___awmod@divisor,w
 18630  1CB2  02F3               	subwf	___awmod@dividend,f
 18631  1CB3  0872               	movf	___awmod@divisor+1,w
 18632  1CB4  3BF4               	subwfb	___awmod@dividend+1,f
 18633  1CB5                     l4089:
 18634  1CB5  3001               	movlw	1
 18635  1CB6                     u4205:
 18636  1CB6  36F2               	lsrf	___awmod@divisor+1,f
 18637  1CB7  0CF1               	rrf	___awmod@divisor,f
 18638  1CB8  0B89               	decfsz	9,f
 18639  1CB9  2CB6               	goto	u4205
 18640  1CBA                     l4091:
 18641  1CBA  3001               	movlw	1
 18642  1CBB  02F6               	subwf	___awmod@counter,f
 18643  1CBC  1D03               	btfss	3,2
 18644  1CBD  2CBF               	goto	u4211
 18645  1CBE  2CC0               	goto	u4210
 18646  1CBF                     u4211:
 18647  1CBF  2CA7               	goto	l4085
 18648  1CC0                     u4210:
 18649  1CC0                     l4093:
 18650  1CC0  0877               	movf	___awmod@sign,w
 18651  1CC1  1903               	btfsc	3,2
 18652  1CC2  2CC4               	goto	u4221
 18653  1CC3  2CC5               	goto	u4220
 18654  1CC4                     u4221:
 18655  1CC4  2CCA               	goto	l4097
 18656  1CC5                     u4220:
 18657  1CC5                     l4095:
 18658  1CC5  09F3               	comf	___awmod@dividend,f
 18659  1CC6  09F4               	comf	___awmod@dividend+1,f
 18660  1CC7  0AF3               	incf	___awmod@dividend,f
 18661  1CC8  1903               	skipnz
 18662  1CC9  0AF4               	incf	___awmod@dividend+1,f
 18663  1CCA                     l4097:
 18664  1CCA  0874               	movf	___awmod@dividend+1,w
 18665  1CCB  00F2               	movwf	?___awmod+1
 18666  1CCC  0873               	movf	___awmod@dividend,w
 18667  1CCD  00F1               	movwf	?___awmod
 18668  1CCE                     l978:
 18669  1CCE  0008               	return
 18670  1CCF                     __end_of___awmod:
 18671                           
 18672                           	psect	text38
 18673  1D7E                     __ptext38:	
 18674 ;; *************** function ___awdiv *****************
 18675 ;; Defined at:
 18676 ;;		line 5 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/awdiv.c"
 18677 ;; Parameters:    Size  Location     Type
 18678 ;;  divisor         2    1[COMMON] int 
 18679 ;;  dividend        2    3[COMMON] int 
 18680 ;; Auto vars:     Size  Location     Type
 18681 ;;  quotient        2    8[COMMON] int 
 18682 ;;  sign            1    7[COMMON] unsigned char 
 18683 ;;  counter         1    6[COMMON] unsigned char 
 18684 ;; Return value:  Size  Location     Type
 18685 ;;                  2    1[COMMON] int 
 18686 ;; Registers used:
 18687 ;;		wreg, status,2, status,0
 18688 ;; Tracked objects:
 18689 ;;		On entry : 0/0
 18690 ;;		On exit  : 0/0
 18691 ;;		Unchanged: 0/0
 18692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18693 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18694 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18695 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18696 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18697 ;;Total ram usage:        9 bytes
 18698 ;; Hardware stack levels used:    1
 18699 ;; Hardware stack levels required when called:    4
 18700 ;; This function calls:
 18701 ;;		Nothing
 18702 ;; This function is called by:
 18703 ;;		_efgtoa
 18704 ;; This function uses a non-reentrant model
 18705 ;;
 18706                           
 18707                           
 18708                           ;psect for function ___awdiv
 18709  1D7E                     ___awdiv:
 18710  1D7E                     l4019:	
 18711                           ;incstack = 0
 18712                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 18713                           
 18714  1D7E  01F7               	clrf	___awdiv@sign
 18715  1D7F                     l4021:
 18716  1D7F  1FF2               	btfss	___awdiv@divisor+1,7
 18717  1D80  2D82               	goto	u4041
 18718  1D81  2D83               	goto	u4040
 18719  1D82                     u4041:
 18720  1D82  2D8A               	goto	l4027
 18721  1D83                     u4040:
 18722  1D83                     l4023:
 18723  1D83  09F1               	comf	___awdiv@divisor,f
 18724  1D84  09F2               	comf	___awdiv@divisor+1,f
 18725  1D85  0AF1               	incf	___awdiv@divisor,f
 18726  1D86  1903               	skipnz
 18727  1D87  0AF2               	incf	___awdiv@divisor+1,f
 18728  1D88                     l4025:
 18729  1D88  01F7               	clrf	___awdiv@sign
 18730  1D89  0AF7               	incf	___awdiv@sign,f
 18731  1D8A                     l4027:
 18732  1D8A  1FF4               	btfss	___awdiv@dividend+1,7
 18733  1D8B  2D8D               	goto	u4051
 18734  1D8C  2D8E               	goto	u4050
 18735  1D8D                     u4051:
 18736  1D8D  2D97               	goto	l4033
 18737  1D8E                     u4050:
 18738  1D8E                     l4029:
 18739  1D8E  09F3               	comf	___awdiv@dividend,f
 18740  1D8F  09F4               	comf	___awdiv@dividend+1,f
 18741  1D90  0AF3               	incf	___awdiv@dividend,f
 18742  1D91  1903               	skipnz
 18743  1D92  0AF4               	incf	___awdiv@dividend+1,f
 18744  1D93                     l4031:
 18745  1D93  3001               	movlw	1
 18746  1D94  00F5               	movwf	??___awdiv
 18747  1D95  0875               	movf	??___awdiv,w
 18748  1D96  06F7               	xorwf	___awdiv@sign,f
 18749  1D97                     l4033:
 18750  1D97  01F8               	clrf	___awdiv@quotient
 18751  1D98  01F9               	clrf	___awdiv@quotient+1
 18752  1D99                     l4035:
 18753  1D99  0871               	movf	___awdiv@divisor,w
 18754  1D9A  0472               	iorwf	___awdiv@divisor+1,w
 18755  1D9B  1903               	btfsc	3,2
 18756  1D9C  2D9E               	goto	u4061
 18757  1D9D  2D9F               	goto	u4060
 18758  1D9E                     u4061:
 18759  1D9E  2DCE               	goto	l4055
 18760  1D9F                     u4060:
 18761  1D9F                     l4037:
 18762  1D9F  01F6               	clrf	___awdiv@counter
 18763  1DA0  0AF6               	incf	___awdiv@counter,f
 18764  1DA1  2DAB               	goto	l4043
 18765  1DA2                     l4039:
 18766  1DA2  3001               	movlw	1
 18767  1DA3                     u4075:
 18768  1DA3  35F1               	lslf	___awdiv@divisor,f
 18769  1DA4  0DF2               	rlf	___awdiv@divisor+1,f
 18770  1DA5  0B89               	decfsz	9,f
 18771  1DA6  2DA3               	goto	u4075
 18772  1DA7                     l4041:
 18773  1DA7  3001               	movlw	1
 18774  1DA8  00F5               	movwf	??___awdiv
 18775  1DA9  0875               	movf	??___awdiv,w
 18776  1DAA  07F6               	addwf	___awdiv@counter,f
 18777  1DAB                     l4043:
 18778  1DAB  1FF2               	btfss	___awdiv@divisor+1,7
 18779  1DAC  2DAE               	goto	u4081
 18780  1DAD  2DAF               	goto	u4080
 18781  1DAE                     u4081:
 18782  1DAE  2DA2               	goto	l4039
 18783  1DAF                     u4080:
 18784  1DAF                     l4045:
 18785  1DAF  3001               	movlw	1
 18786  1DB0                     u4095:
 18787  1DB0  35F8               	lslf	___awdiv@quotient,f
 18788  1DB1  0DF9               	rlf	___awdiv@quotient+1,f
 18789  1DB2  0B89               	decfsz	9,f
 18790  1DB3  2DB0               	goto	u4095
 18791  1DB4  0872               	movf	___awdiv@divisor+1,w
 18792  1DB5  0274               	subwf	___awdiv@dividend+1,w
 18793  1DB6  1D03               	skipz
 18794  1DB7  2DBA               	goto	u4105
 18795  1DB8  0871               	movf	___awdiv@divisor,w
 18796  1DB9  0273               	subwf	___awdiv@dividend,w
 18797  1DBA                     u4105:
 18798  1DBA  1C03               	skipc
 18799  1DBB  2DBD               	goto	u4101
 18800  1DBC  2DBE               	goto	u4100
 18801  1DBD                     u4101:
 18802  1DBD  2DC3               	goto	l4051
 18803  1DBE                     u4100:
 18804  1DBE                     l4047:
 18805  1DBE  0871               	movf	___awdiv@divisor,w
 18806  1DBF  02F3               	subwf	___awdiv@dividend,f
 18807  1DC0  0872               	movf	___awdiv@divisor+1,w
 18808  1DC1  3BF4               	subwfb	___awdiv@dividend+1,f
 18809  1DC2                     l4049:
 18810  1DC2  1478               	bsf	___awdiv@quotient,0
 18811  1DC3                     l4051:
 18812  1DC3  3001               	movlw	1
 18813  1DC4                     u4115:
 18814  1DC4  36F2               	lsrf	___awdiv@divisor+1,f
 18815  1DC5  0CF1               	rrf	___awdiv@divisor,f
 18816  1DC6  0B89               	decfsz	9,f
 18817  1DC7  2DC4               	goto	u4115
 18818  1DC8                     l4053:
 18819  1DC8  3001               	movlw	1
 18820  1DC9  02F6               	subwf	___awdiv@counter,f
 18821  1DCA  1D03               	btfss	3,2
 18822  1DCB  2DCD               	goto	u4121
 18823  1DCC  2DCE               	goto	u4120
 18824  1DCD                     u4121:
 18825  1DCD  2DAF               	goto	l4045
 18826  1DCE                     u4120:
 18827  1DCE                     l4055:
 18828  1DCE  0877               	movf	___awdiv@sign,w
 18829  1DCF  1903               	btfsc	3,2
 18830  1DD0  2DD2               	goto	u4131
 18831  1DD1  2DD3               	goto	u4130
 18832  1DD2                     u4131:
 18833  1DD2  2DD8               	goto	l4059
 18834  1DD3                     u4130:
 18835  1DD3                     l4057:
 18836  1DD3  09F8               	comf	___awdiv@quotient,f
 18837  1DD4  09F9               	comf	___awdiv@quotient+1,f
 18838  1DD5  0AF8               	incf	___awdiv@quotient,f
 18839  1DD6  1903               	skipnz
 18840  1DD7  0AF9               	incf	___awdiv@quotient+1,f
 18841  1DD8                     l4059:
 18842  1DD8  0879               	movf	___awdiv@quotient+1,w
 18843  1DD9  00F2               	movwf	?___awdiv+1
 18844  1DDA  0878               	movf	___awdiv@quotient,w
 18845  1DDB  00F1               	movwf	?___awdiv
 18846  1DDC                     l965:
 18847  1DDC  0008               	return
 18848  1DDD                     __end_of___awdiv:
 18849                           
 18850                           	psect	text39
 18851  107F                     __ptext39:	
 18852 ;; *************** function _atoi *****************
 18853 ;; Defined at:
 18854 ;;		line 4 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/atoi.c"
 18855 ;; Parameters:    Size  Location     Type
 18856 ;;  s               2    7[COMMON] PTR const unsigned char 
 18857 ;;		 -> STR_11(27), STR_10(27), STR_9(27), STR_8(28), 
 18858 ;;		 -> STR_7(29), 
 18859 ;; Auto vars:     Size  Location     Type
 18860 ;;  n               2   11[BANK0 ] int 
 18861 ;;  neg             2    4[BANK0 ] int 
 18862 ;; Return value:  Size  Location     Type
 18863 ;;                  2    7[COMMON] int 
 18864 ;; Registers used:
 18865 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 18866 ;; Tracked objects:
 18867 ;;		On entry : 0/0
 18868 ;;		On exit  : 0/0
 18869 ;;		Unchanged: 0/0
 18870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18871 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18872 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18873 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18874 ;;      Totals:         2      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18875 ;;Total ram usage:       15 bytes
 18876 ;; Hardware stack levels used:    1
 18877 ;; Hardware stack levels required when called:    5
 18878 ;; This function calls:
 18879 ;;		___wmul
 18880 ;;		_isdigit
 18881 ;;		_isspace
 18882 ;; This function is called by:
 18883 ;;		_vfpfcnvrt
 18884 ;; This function uses a non-reentrant model
 18885 ;;
 18886                           
 18887                           
 18888                           ;psect for function _atoi
 18889  107F                     _atoi:
 18890  107F                     l6403:	
 18891                           ;incstack = 0
 18892                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 18893                           
 18894  107F  0140               	movlb	0	; select bank0
 18895  1080  01AB               	clrf	atoi@n
 18896  1081  01AC               	clrf	atoi@n+1
 18897  1082  01A4               	clrf	atoi@neg
 18898  1083  01A5               	clrf	atoi@neg+1
 18899  1084  2889               	goto	l6407
 18900  1085                     l6405:
 18901  1085  3001               	movlw	1
 18902  1086  07F7               	addwf	atoi@s,f
 18903  1087  3000               	movlw	0
 18904  1088  3DF8               	addwfc	atoi@s+1,f
 18905  1089                     l6407:
 18906  1089  01AA               	clrf	_atoi$2221
 18907  108A  0AAA               	incf	_atoi$2221,f
 18908  108B                     l6409:
 18909  108B  0877               	movf	atoi@s,w
 18910  108C  0084               	movwf	4
 18911  108D  0878               	movf	atoi@s+1,w
 18912  108E  0085               	movwf	5
 18913  108F  0012               	moviw fsr0++
 18914  1090  3A20               	xorlw	32
 18915  1091  1903               	btfsc	3,2
 18916  1092  2894               	goto	u8011
 18917  1093  2895               	goto	u8010
 18918  1094                     u8011:
 18919  1094  28AA               	goto	l6415
 18920  1095                     u8010:
 18921  1095                     l6411:
 18922  1095  0877               	movf	atoi@s,w
 18923  1096  0084               	movwf	4
 18924  1097  0878               	movf	atoi@s+1,w
 18925  1098  0085               	movwf	5
 18926  1099  0800               	movf	0,w	;code access
 18927  109A  3EF7               	addlw	247
 18928  109B  00A0               	movwf	??_atoi
 18929  109C  30FF               	movlw	255
 18930  109D  1803               	skipnc
 18931  109E  3000               	movlw	0
 18932  109F  00A1               	movwf	??_atoi+1
 18933  10A0  3000               	movlw	0
 18934  10A1  0221               	subwf	??_atoi+1,w
 18935  10A2  3005               	movlw	5
 18936  10A3  1903               	skipnz
 18937  10A4  0220               	subwf	??_atoi,w
 18938  10A5  1C03               	skipc
 18939  10A6  28A8               	goto	u8021
 18940  10A7  28A9               	goto	u8020
 18941  10A8                     u8021:
 18942  10A8  28AA               	goto	l6415
 18943  10A9                     u8020:
 18944  10A9                     l6413:
 18945  10A9  01AA               	clrf	_atoi$2221
 18946  10AA                     l6415:
 18947  10AA  082A               	movf	_atoi$2221,w
 18948  10AB  00A0               	movwf	??_atoi
 18949  10AC  01A1               	clrf	??_atoi+1
 18950  10AD  0820               	movf	??_atoi,w
 18951  10AE  00A6               	movwf	_atoi$2220
 18952  10AF  0821               	movf	??_atoi+1,w
 18953  10B0  00A7               	movwf	_atoi$2220+1
 18954  10B1                     l6419:
 18955  10B1  0826               	movf	_atoi$2220,w
 18956  10B2  0427               	iorwf	_atoi$2220+1,w
 18957  10B3  1D03               	btfss	3,2
 18958  10B4  28B6               	goto	u8031
 18959  10B5  28B7               	goto	u8030
 18960  10B6                     u8031:
 18961  10B6  2885               	goto	l6405
 18962  10B7                     u8030:
 18963  10B7  28C1               	goto	l6423
 18964  10B8                     l6421:
 18965  10B8  3001               	movlw	1
 18966  10B9  00A4               	movwf	atoi@neg
 18967  10BA  3000               	movlw	0
 18968  10BB  00A5               	movwf	atoi@neg+1
 18969  10BC                     l1484:
 18970  10BC  3001               	movlw	1
 18971  10BD  07F7               	addwf	atoi@s,f
 18972  10BE  3000               	movlw	0
 18973  10BF  3DF8               	addwfc	atoi@s+1,f
 18974  10C0  28F5               	goto	l6429
 18975  10C1                     l6423:
 18976  10C1  0877               	movf	atoi@s,w
 18977  10C2  0084               	movwf	4
 18978  10C3  0878               	movf	atoi@s+1,w
 18979  10C4  0085               	movwf	5
 18980  10C5  0800               	movf	0,w	;code access
 18981  10C6  00A0               	movwf	??_atoi
 18982  10C7  01A1               	clrf	??_atoi+1
 18983                           
 18984                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18985                           ; Switch size 1, requested type "simple"
 18986                           ; Number of cases is 1, Range of values is 0 to 0
 18987                           ; switch strategies available:
 18988                           ; Name         Instructions Cycles
 18989                           ; simple_byte            4     3 (average)
 18990                           ; direct_byte            8     6 (fixed)
 18991                           ; jumptable            260     6 (fixed)
 18992                           ;	Chosen strategy is simple_byte
 18993  10C8  0821               	movf	??_atoi+1,w
 18994  10C9  3A00               	xorlw	0	; case 0
 18995  10CA  1903               	skipnz
 18996  10CB  28CD               	goto	l6835
 18997  10CC  28F5               	goto	l6429
 18998  10CD                     l6835:
 18999                           
 19000                           ; Switch size 1, requested type "simple"
 19001                           ; Number of cases is 2, Range of values is 43 to 45
 19002                           ; switch strategies available:
 19003                           ; Name         Instructions Cycles
 19004                           ; simple_byte            7     4 (average)
 19005                           ; direct_byte           15     9 (fixed)
 19006                           ; jumptable            263     9 (fixed)
 19007                           ;	Chosen strategy is simple_byte
 19008  10CD  0820               	movf	??_atoi,w
 19009  10CE  3A2B               	xorlw	43	; case 43
 19010  10CF  1903               	skipnz
 19011  10D0  28BC               	goto	l1484
 19012  10D1  3A06               	xorlw	6	; case 45
 19013  10D2  1903               	skipnz
 19014  10D3  28B8               	goto	l6421
 19015  10D4  28F5               	goto	l6429
 19016  10D5                     l6425:
 19017  10D5  0877               	movf	atoi@s,w
 19018  10D6  0084               	movwf	4
 19019  10D7  0878               	movf	atoi@s+1,w
 19020  10D8  0085               	movwf	5
 19021  10D9  0800               	movf	0,w	;code access
 19022  10DA  00A0               	movwf	??_atoi
 19023  10DB  082C               	movf	atoi@n+1,w
 19024  10DC  00F2               	movwf	___wmul@multiplier+1
 19025  10DD  082B               	movf	atoi@n,w
 19026  10DE  00F1               	movwf	___wmul@multiplier
 19027  10DF  300A               	movlw	10
 19028  10E0  00F3               	movwf	___wmul@multiplicand
 19029  10E1  3000               	movlw	0
 19030  10E2  00F4               	movwf	___wmul@multiplicand+1
 19031  10E3  3198  201C  3190   	fcall	___wmul
 19032  10E6  0872               	movf	?___wmul+1,w
 19033  10E7  0140               	movlb	0	; select bank0
 19034  10E8  00A2               	movwf	??_atoi+2
 19035  10E9  0820               	movf	??_atoi,w
 19036  10EA  0271               	subwf	?___wmul,w
 19037  10EB  00A1               	movwf	??_atoi+1
 19038  10EC  1C03               	skipc
 19039  10ED  03A2               	decf	??_atoi+2,f
 19040  10EE  0821               	movf	??_atoi+1,w
 19041  10EF  3E30               	addlw	48
 19042  10F0  00AB               	movwf	atoi@n
 19043  10F1  3000               	movlw	0
 19044  10F2  3D22               	addwfc	??_atoi+2,w
 19045  10F3  00AC               	movwf	atoi@n+1
 19046  10F4  28BC               	goto	l1484
 19047  10F5                     l6429:
 19048  10F5  0877               	movf	atoi@s,w
 19049  10F6  0084               	movwf	4
 19050  10F7  0878               	movf	atoi@s+1,w
 19051  10F8  0085               	movwf	5
 19052  10F9  0800               	movf	0,w	;code access
 19053  10FA  3ED0               	addlw	208
 19054  10FB  00A0               	movwf	??_atoi
 19055  10FC  30FF               	movlw	255
 19056  10FD  1803               	skipnc
 19057  10FE  3000               	movlw	0
 19058  10FF  00A1               	movwf	??_atoi+1
 19059  1100  3000               	movlw	0
 19060  1101  0221               	subwf	??_atoi+1,w
 19061  1102  300A               	movlw	10
 19062  1103  1903               	skipnz
 19063  1104  0220               	subwf	??_atoi,w
 19064  1105  1C03               	skipc
 19065  1106  2908               	goto	u8041
 19066  1107  290A               	goto	u8040
 19067  1108                     u8041:
 19068  1108  3001               	movlw	1
 19069  1109  290B               	goto	u8050
 19070  110A                     u8040:
 19071  110A  3000               	movlw	0
 19072  110B                     u8050:
 19073  110B  00A2               	movwf	??_atoi+2
 19074  110C  01A3               	clrf	??_atoi+3
 19075  110D  0822               	movf	??_atoi+2,w
 19076  110E  00A8               	movwf	_atoi$2222
 19077  110F  0823               	movf	??_atoi+3,w
 19078  1110  00A9               	movwf	_atoi$2222+1
 19079  1111                     l6433:
 19080  1111  0828               	movf	_atoi$2222,w
 19081  1112  0429               	iorwf	_atoi$2222+1,w
 19082  1113  1D03               	btfss	3,2
 19083  1114  2916               	goto	u8061
 19084  1115  2917               	goto	u8060
 19085  1116                     u8061:
 19086  1116  28D5               	goto	l6425
 19087  1117                     u8060:
 19088  1117                     l6435:
 19089  1117  0824               	movf	atoi@neg,w
 19090  1118  0425               	iorwf	atoi@neg+1,w
 19091  1119  1D03               	btfss	3,2
 19092  111A  291C               	goto	u8071
 19093  111B  291D               	goto	u8070
 19094  111C                     u8071:
 19095  111C  2929               	goto	l6439
 19096  111D                     u8070:
 19097  111D                     l6437:
 19098  111D  092B               	comf	atoi@n,w
 19099  111E  00A0               	movwf	??_atoi
 19100  111F  092C               	comf	atoi@n+1,w
 19101  1120  00A1               	movwf	??_atoi+1
 19102  1121  0AA0               	incf	??_atoi,f
 19103  1122  1903               	skipnz
 19104  1123  0AA1               	incf	??_atoi+1,f
 19105  1124  0820               	movf	??_atoi,w
 19106  1125  00F7               	movwf	?_atoi
 19107  1126  0821               	movf	??_atoi+1,w
 19108  1127  00F8               	movwf	?_atoi+1
 19109  1128  292D               	goto	l1497
 19110  1129                     l6439:
 19111  1129  082C               	movf	atoi@n+1,w
 19112  112A  00F8               	movwf	?_atoi+1
 19113  112B  082B               	movf	atoi@n,w
 19114  112C  00F7               	movwf	?_atoi
 19115  112D                     l1497:
 19116  112D  0008               	return
 19117  112E                     __end_of_atoi:
 19118                           
 19119                           	psect	text40
 19120  185B                     __ptext40:	
 19121 ;; *************** function _isspace *****************
 19122 ;; Defined at:
 19123 ;;		line 5 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/isspace.c"
 19124 ;; Parameters:    Size  Location     Type
 19125 ;;  c               2    1[COMMON] int 
 19126 ;; Auto vars:     Size  Location     Type
 19127 ;;		None
 19128 ;; Return value:  Size  Location     Type
 19129 ;;                  2    1[COMMON] int 
 19130 ;; Registers used:
 19131 ;;		wreg, status,2, status,0
 19132 ;; Tracked objects:
 19133 ;;		On entry : 0/0
 19134 ;;		On exit  : 0/0
 19135 ;;		Unchanged: 0/0
 19136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19137 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19138 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19139 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19140 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19141 ;;Total ram usage:        5 bytes
 19142 ;; Hardware stack levels used:    1
 19143 ;; Hardware stack levels required when called:    4
 19144 ;; This function calls:
 19145 ;;		Nothing
 19146 ;; This function is called by:
 19147 ;;		_atoi
 19148 ;; This function uses a non-reentrant model
 19149 ;;
 19150                           
 19151                           
 19152                           ;psect for function _isspace
 19153  185B                     _isspace:
 19154  185B                     l4557:	
 19155                           ;incstack = 0
 19156                           ; Regs used in _isspace: [wreg+status,2+status,0]
 19157                           
 19158  185B  01F5               	clrf	_isspace$2251
 19159  185C  0AF5               	incf	_isspace$2251,f
 19160  185D                     l4559:
 19161  185D  3020               	movlw	32
 19162  185E  0671               	xorwf	isspace@c,w
 19163  185F  0472               	iorwf	isspace@c+1,w
 19164  1860  1903               	btfsc	3,2
 19165  1861  2863               	goto	u5261
 19166  1862  2864               	goto	u5260
 19167  1863                     u5261:
 19168  1863  2874               	goto	l4565
 19169  1864                     u5260:
 19170  1864                     l4561:
 19171  1864  0871               	movf	isspace@c,w
 19172  1865  3EF7               	addlw	247
 19173  1866  00F3               	movwf	??_isspace
 19174  1867  30FF               	movlw	255
 19175  1868  3D72               	addwfc	isspace@c+1,w
 19176  1869  00F4               	movwf	??_isspace+1
 19177  186A  3000               	movlw	0
 19178  186B  0274               	subwf	??_isspace+1,w
 19179  186C  3005               	movlw	5
 19180  186D  1903               	skipnz
 19181  186E  0273               	subwf	??_isspace,w
 19182  186F  1C03               	skipc
 19183  1870  2872               	goto	u5271
 19184  1871  2873               	goto	u5270
 19185  1872                     u5271:
 19186  1872  2874               	goto	l4565
 19187  1873                     u5270:
 19188  1873                     l4563:
 19189  1873  01F5               	clrf	_isspace$2251
 19190  1874                     l4565:
 19191  1874  0875               	movf	_isspace$2251,w
 19192  1875  00F3               	movwf	??_isspace
 19193  1876  01F4               	clrf	??_isspace+1
 19194  1877  0873               	movf	??_isspace,w
 19195  1878  00F1               	movwf	?_isspace
 19196  1879  0874               	movf	??_isspace+1,w
 19197  187A  00F2               	movwf	?_isspace+1
 19198  187B                     l1521:
 19199  187B  0008               	return
 19200  187C                     __end_of_isspace:
 19201                           
 19202                           	psect	text41
 19203  2782                     __ptext41:	
 19204 ;; *************** function _isdigit *****************
 19205 ;; Defined at:
 19206 ;;		line 5 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/isdigit.c"
 19207 ;; Parameters:    Size  Location     Type
 19208 ;;  c               2    1[COMMON] int 
 19209 ;; Auto vars:     Size  Location     Type
 19210 ;;		None
 19211 ;; Return value:  Size  Location     Type
 19212 ;;                  2    1[COMMON] int 
 19213 ;; Registers used:
 19214 ;;		wreg, status,2, status,0
 19215 ;; Tracked objects:
 19216 ;;		On entry : 0/0
 19217 ;;		On exit  : 0/0
 19218 ;;		Unchanged: 0/0
 19219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19220 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19222 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19223 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19224 ;;Total ram usage:        6 bytes
 19225 ;; Hardware stack levels used:    1
 19226 ;; Hardware stack levels required when called:    4
 19227 ;; This function calls:
 19228 ;;		Nothing
 19229 ;; This function is called by:
 19230 ;;		_vfpfcnvrt
 19231 ;;		_atoi
 19232 ;; This function uses a non-reentrant model
 19233 ;;
 19234                           
 19235                           
 19236                           ;psect for function _isdigit
 19237  2782                     _isdigit:
 19238  2782                     l4553:	
 19239                           ;incstack = 0
 19240                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 19241                           
 19242  2782  0871               	movf	isdigit@c,w
 19243  2783  3ED0               	addlw	208
 19244  2784  00F3               	movwf	??_isdigit
 19245  2785  30FF               	movlw	255
 19246  2786  3D72               	addwfc	isdigit@c+1,w
 19247  2787  00F4               	movwf	??_isdigit+1
 19248  2788  3000               	movlw	0
 19249  2789  0274               	subwf	??_isdigit+1,w
 19250  278A  300A               	movlw	10
 19251  278B  1903               	skipnz
 19252  278C  0273               	subwf	??_isdigit,w
 19253  278D  1C03               	skipc
 19254  278E  2F90               	goto	u5241
 19255  278F  2F92               	goto	u5240
 19256  2790                     u5241:
 19257  2790  3001               	movlw	1
 19258  2791  2F93               	goto	u5250
 19259  2792                     u5240:
 19260  2792  3000               	movlw	0
 19261  2793                     u5250:
 19262  2793  00F5               	movwf	??_isdigit+2
 19263  2794  01F6               	clrf	??_isdigit+3
 19264  2795  0875               	movf	??_isdigit+2,w
 19265  2796  00F1               	movwf	?_isdigit
 19266  2797  0876               	movf	??_isdigit+3,w
 19267  2798  00F2               	movwf	?_isdigit+1
 19268  2799                     l1513:
 19269  2799  0008               	return
 19270  279A                     __end_of_isdigit:
 19271                           
 19272                           	psect	text42
 19273  181C                     __ptext42:	
 19274 ;; *************** function ___wmul *****************
 19275 ;; Defined at:
 19276 ;;		line 15 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/Umul16.c"
 19277 ;; Parameters:    Size  Location     Type
 19278 ;;  multiplier      2    1[COMMON] unsigned int 
 19279 ;;  multiplicand    2    3[COMMON] unsigned int 
 19280 ;; Auto vars:     Size  Location     Type
 19281 ;;  product         2    5[COMMON] unsigned int 
 19282 ;; Return value:  Size  Location     Type
 19283 ;;                  2    1[COMMON] unsigned int 
 19284 ;; Registers used:
 19285 ;;		wreg, status,2, status,0
 19286 ;; Tracked objects:
 19287 ;;		On entry : 0/0
 19288 ;;		On exit  : 0/0
 19289 ;;		Unchanged: 0/0
 19290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19291 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19292 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19294 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19295 ;;Total ram usage:        6 bytes
 19296 ;; Hardware stack levels used:    1
 19297 ;; Hardware stack levels required when called:    4
 19298 ;; This function calls:
 19299 ;;		Nothing
 19300 ;; This function is called by:
 19301 ;;		_atoi
 19302 ;; This function uses a non-reentrant model
 19303 ;;
 19304                           
 19305                           
 19306                           ;psect for function ___wmul
 19307  181C                     ___wmul:
 19308  181C                     l4005:	
 19309                           ;incstack = 0
 19310                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 19311                           
 19312  181C  01F5               	clrf	___wmul@product
 19313  181D  01F6               	clrf	___wmul@product+1
 19314  181E                     l4007:
 19315  181E  1C71               	btfss	___wmul@multiplier,0
 19316  181F  2821               	goto	u4001
 19317  1820  2822               	goto	u4000
 19318  1821                     u4001:
 19319  1821  2826               	goto	l812
 19320  1822                     u4000:
 19321  1822                     l4009:
 19322  1822  0873               	movf	___wmul@multiplicand,w
 19323  1823  07F5               	addwf	___wmul@product,f
 19324  1824  0874               	movf	___wmul@multiplicand+1,w
 19325  1825  3DF6               	addwfc	___wmul@product+1,f
 19326  1826                     l812:
 19327  1826  3001               	movlw	1
 19328  1827                     u4015:
 19329  1827  35F3               	lslf	___wmul@multiplicand,f
 19330  1828  0DF4               	rlf	___wmul@multiplicand+1,f
 19331  1829  0B89               	decfsz	9,f
 19332  182A  2827               	goto	u4015
 19333  182B                     l4011:
 19334  182B  3001               	movlw	1
 19335  182C                     u4025:
 19336  182C  36F2               	lsrf	___wmul@multiplier+1,f
 19337  182D  0CF1               	rrf	___wmul@multiplier,f
 19338  182E  0B89               	decfsz	9,f
 19339  182F  282C               	goto	u4025
 19340  1830                     l4013:
 19341  1830  0871               	movf	___wmul@multiplier,w
 19342  1831  0472               	iorwf	___wmul@multiplier+1,w
 19343  1832  1D03               	btfss	3,2
 19344  1833  2835               	goto	u4031
 19345  1834  2836               	goto	u4030
 19346  1835                     u4031:
 19347  1835  281E               	goto	l4007
 19348  1836                     u4030:
 19349  1836                     l4015:
 19350  1836  0876               	movf	___wmul@product+1,w
 19351  1837  00F2               	movwf	?___wmul+1
 19352  1838  0875               	movf	___wmul@product,w
 19353  1839  00F1               	movwf	?___wmul
 19354  183A                     l814:
 19355  183A  0008               	return
 19356  183B                     __end_of___wmul:
 19357                           
 19358                           	psect	text43
 19359  19D5                     __ptext43:	
 19360 ;; *************** function __puts *****************
 19361 ;; Defined at:
 19362 ;;		line 6 in file "comm.c"
 19363 ;; Parameters:    Size  Location     Type
 19364 ;;  pt              2    3[COMMON] PTR unsigned char 
 19365 ;;		 -> STR_6(32), STR_5(30), STR_4(26), STR_3(26), 
 19366 ;;		 -> STR_2(30), STR_1(3), 
 19367 ;; Auto vars:     Size  Location     Type
 19368 ;;  index           1    8[COMMON] unsigned char 
 19369 ;; Return value:  Size  Location     Type
 19370 ;;                  1    wreg      void 
 19371 ;; Registers used:
 19372 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19373 ;; Tracked objects:
 19374 ;;		On entry : 0/0
 19375 ;;		On exit  : 0/0
 19376 ;;		Unchanged: 0/0
 19377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19378 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19379 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19380 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19381 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19382 ;;Total ram usage:        6 bytes
 19383 ;; Hardware stack levels used:    1
 19384 ;; Hardware stack levels required when called:    5
 19385 ;; This function calls:
 19386 ;;		_EUSART1_Write
 19387 ;;		_EUSART1_is_tx_ready
 19388 ;; This function is called by:
 19389 ;;		_mess_handler
 19390 ;;		_ADC_test
 19391 ;; This function uses a non-reentrant model
 19392 ;;
 19393                           
 19394                           
 19395                           ;psect for function __puts
 19396  19D5                     __puts:
 19397  19D5                     l5233:	
 19398                           ;incstack = 0
 19399                           ; Regs used in __puts: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19400                           
 19401                           
 19402                           ;comm.c: 6: void _puts(char *pt);comm.c: 7: {;comm.c: 8:     unsigned char index;;comm.c
      +                          : 9:     index = 0;
 19403  19D5  01F8               	clrf	__puts@index
 19404                           
 19405                           ;comm.c: 10:     while(pt[index]) {
 19406  19D6  29F2               	goto	l5241
 19407  19D7                     l5235:
 19408  19D7  31A7  2735  3199   	fcall	_EUSART1_is_tx_ready
 19409  19DA  3A00               	xorlw	0
 19410  19DB  1903               	skipnz
 19411  19DC  29DE               	goto	u6411
 19412  19DD  29DF               	goto	u6410
 19413  19DE                     u6411:
 19414  19DE  29D7               	goto	l5235
 19415  19DF                     u6410:
 19416  19DF                     l5237:
 19417                           
 19418                           ;comm.c: 12:         EUSART1_Write(pt[index++]);
 19419  19DF  0874               	movf	__puts@pt+1,w
 19420  19E0  00F6               	movwf	??__puts+1
 19421  19E1  0873               	movf	__puts@pt,w
 19422  19E2  00F5               	movwf	??__puts
 19423  19E3  0878               	movf	__puts@index,w
 19424  19E4  0775               	addwf	??__puts,w
 19425  19E5  0084               	movwf	4
 19426  19E6  0876               	movf	??__puts+1,w
 19427  19E7  1803               	skipnc
 19428  19E8  0A76               	incf	??__puts+1,w
 19429  19E9  0085               	movwf	5
 19430  19EA  0800               	movf	0,w	;code access
 19431  19EB  3199  217D  3199   	fcall	_EUSART1_Write
 19432  19EE                     l5239:
 19433  19EE  3001               	movlw	1
 19434  19EF  00F5               	movwf	??__puts
 19435  19F0  0875               	movf	??__puts,w
 19436  19F1  07F8               	addwf	__puts@index,f
 19437  19F2                     l5241:
 19438                           
 19439                           ;comm.c: 10:     while(pt[index]) {
 19440  19F2  0874               	movf	__puts@pt+1,w
 19441  19F3  00F6               	movwf	??__puts+1
 19442  19F4  0873               	movf	__puts@pt,w
 19443  19F5  00F5               	movwf	??__puts
 19444  19F6  0878               	movf	__puts@index,w
 19445  19F7  0775               	addwf	??__puts,w
 19446  19F8  0084               	movwf	4
 19447  19F9  0876               	movf	??__puts+1,w
 19448  19FA  1803               	skipnc
 19449  19FB  0A76               	incf	??__puts+1,w
 19450  19FC  0085               	movwf	5
 19451  19FD  0012               	moviw fsr0++
 19452  19FE  1D03               	btfss	3,2
 19453  19FF  2A01               	goto	u6421
 19454  1A00  2A02               	goto	u6420
 19455  1A01                     u6421:
 19456  1A01  29D7               	goto	l5235
 19457  1A02                     u6420:
 19458  1A02                     l641:
 19459  1A02  0008               	return
 19460  1A03                     __end_of__puts:
 19461                           
 19462                           	psect	text44
 19463  2735                     __ptext44:	
 19464 ;; *************** function _EUSART1_is_tx_ready *****************
 19465 ;; Defined at:
 19466 ;;		line 132 in file "mcc_generated_files/eusart1.c"
 19467 ;; Parameters:    Size  Location     Type
 19468 ;;		None
 19469 ;; Auto vars:     Size  Location     Type
 19470 ;;		None
 19471 ;; Return value:  Size  Location     Type
 19472 ;;                  1    wreg      _Bool 
 19473 ;; Registers used:
 19474 ;;		wreg, status,2, status,0
 19475 ;; Tracked objects:
 19476 ;;		On entry : 0/0
 19477 ;;		On exit  : 0/0
 19478 ;;		Unchanged: 0/0
 19479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19484 ;;Total ram usage:        0 bytes
 19485 ;; Hardware stack levels used:    1
 19486 ;; Hardware stack levels required when called:    4
 19487 ;; This function calls:
 19488 ;;		Nothing
 19489 ;; This function is called by:
 19490 ;;		__puts
 19491 ;;		_write
 19492 ;; This function uses a non-reentrant model
 19493 ;;
 19494                           
 19495                           
 19496                           ;psect for function _EUSART1_is_tx_ready
 19497  2735                     _EUSART1_is_tx_ready:
 19498  2735                     l5057:	
 19499                           ;incstack = 0
 19500                           ; Regs used in _EUSART1_is_tx_ready: [wreg+status,2+status,0]
 19501                           
 19502                           
 19503                           ;mcc_generated_files/eusart1.c: 134:     return (eusart1TxBufferRemaining ? 1 : 0);
 19504  2735  0143               	movlb	3	; select bank3
 19505  2736  085B               	movf	_eusart1TxBufferRemaining^(0+384),w	;volatile
 19506  2737  1D03               	btfss	3,2
 19507  2738  2F3A               	goto	u6131
 19508  2739  2F3C               	goto	u6130
 19509  273A                     u6131:
 19510  273A  3001               	movlw	1
 19511  273B  2F3D               	goto	u6140
 19512  273C                     u6130:
 19513  273C  3000               	movlw	0
 19514  273D                     u6140:
 19515  273D                     l189:
 19516  273D  0008               	return
 19517  273E                     __end_of_EUSART1_is_tx_ready:
 19518                           
 19519                           	psect	text45
 19520  197D                     __ptext45:	
 19521 ;; *************** function _EUSART1_Write *****************
 19522 ;; Defined at:
 19523 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 19524 ;; Parameters:    Size  Location     Type
 19525 ;;  txData          1    wreg     unsigned char 
 19526 ;; Auto vars:     Size  Location     Type
 19527 ;;  txData          1    2[COMMON] unsigned char 
 19528 ;; Return value:  Size  Location     Type
 19529 ;;                  1    wreg      void 
 19530 ;; Registers used:
 19531 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19532 ;; Tracked objects:
 19533 ;;		On entry : 0/0
 19534 ;;		On exit  : 0/0
 19535 ;;		Unchanged: 0/0
 19536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19538 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19539 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19540 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19541 ;;Total ram usage:        2 bytes
 19542 ;; Hardware stack levels used:    1
 19543 ;; Hardware stack levels required when called:    4
 19544 ;; This function calls:
 19545 ;;		Nothing
 19546 ;; This function is called by:
 19547 ;;		__puts
 19548 ;;		_write
 19549 ;; This function uses a non-reentrant model
 19550 ;;
 19551                           
 19552                           
 19553                           ;psect for function _EUSART1_Write
 19554  197D                     _EUSART1_Write:
 19555                           
 19556                           ;incstack = 0
 19557                           ; Regs used in _EUSART1_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 19558                           ;EUSART1_Write@txData stored from wreg
 19559  197D  00F2               	movwf	EUSART1_Write@txData
 19560  197E                     l5061:
 19561  197E                     l5063:	
 19562                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 19563                           
 19564                           
 19565                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 19566  197E  0143               	movlb	3	; select bank3
 19567  197F  085B               	movf	_eusart1TxBufferRemaining^(0+384),w	;volatile
 19568  1980  1903               	btfsc	3,2
 19569  1981  2983               	goto	u6151
 19570  1982  2984               	goto	u6150
 19571  1983                     u6151:
 19572  1983  297E               	goto	l5063
 19573  1984                     u6150:
 19574  1984                     l210:
 19575                           
 19576                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 19577  1984  014E               	movlb	14	; select bank14
 19578  1985  1A19               	btfsc	25,4	;volatile
 19579  1986  2988               	goto	u6161
 19580  1987  2989               	goto	u6160
 19581  1988                     u6161:
 19582  1988  298D               	goto	l211
 19583  1989                     u6160:
 19584  1989                     l5065:
 19585                           
 19586                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 19587  1989  0872               	movf	EUSART1_Write@txData,w
 19588  198A  0142               	movlb	2	; select bank2
 19589  198B  009A               	movwf	26	;volatile
 19590                           
 19591                           ;mcc_generated_files/eusart1.c: 182:     }
 19592  198C  29A6               	goto	l5077
 19593  198D                     l211:	
 19594                           ;mcc_generated_files/eusart1.c: 183:     else
 19595                           
 19596                           
 19597                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 19598  198D  1219               	bcf	25,4	;volatile
 19599  198E                     l5067:
 19600                           
 19601                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 19602  198E  0872               	movf	EUSART1_Write@txData,w
 19603  198F  00F1               	movwf	??_EUSART1_Write
 19604  1990  0142               	movlb	2	; select bank2
 19605  1991  086E               	movf	_eusart1TxHead^(0+256),w
 19606  1992  3EA0               	addlw	(low (_eusart1TxBuffer| (0+512)))& (0+255)
 19607  1993  0086               	movwf	6
 19608  1994  3002               	movlw	2	; select bank5/6
 19609  1995  0087               	movwf	7
 19610  1996  0871               	movf	??_EUSART1_Write,w
 19611  1997  0081               	movwf	1
 19612  1998                     l5069:
 19613  1998  3001               	movlw	1
 19614  1999  00F1               	movwf	??_EUSART1_Write
 19615  199A  0871               	movf	??_EUSART1_Write,w
 19616  199B  07EE               	addwf	_eusart1TxHead^(0+256),f	;volatile
 19617  199C                     l5071:
 19618                           
 19619                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 19620  199C  3040               	movlw	64
 19621  199D  026E               	subwf	_eusart1TxHead^(0+256),w	;volatile
 19622  199E  1C03               	skipc
 19623  199F  29A1               	goto	u6171
 19624  19A0  29A2               	goto	u6170
 19625  19A1                     u6171:
 19626  19A1  29A3               	goto	l5075
 19627  19A2                     u6170:
 19628  19A2                     l5073:
 19629                           
 19630                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 19631  19A2  01EE               	clrf	_eusart1TxHead^(0+256)	;volatile
 19632  19A3                     l5075:
 19633                           
 19634                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 19635  19A3  3001               	movlw	1
 19636  19A4  0143               	movlb	3	; select bank3
 19637  19A5  02DB               	subwf	_eusart1TxBufferRemaining^(0+384),f	;volatile
 19638  19A6                     l5077:
 19639                           
 19640                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 19641  19A6  014E               	movlb	14	; select bank14
 19642  19A7  1619               	bsf	25,4	;volatile
 19643  19A8                     l214:
 19644  19A8  0008               	return
 19645  19A9                     __end_of_EUSART1_Write:
 19646                           
 19647                           	psect	text46
 19648  1F53                     __ptext46:	
 19649 ;; *************** function ___xxtofl *****************
 19650 ;; Defined at:
 19651 ;;		line 10 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/xxtofl.c"
 19652 ;; Parameters:    Size  Location     Type
 19653 ;;  sign            1    wreg     unsigned char 
 19654 ;;  val             4    1[COMMON] long 
 19655 ;; Auto vars:     Size  Location     Type
 19656 ;;  sign            1    0[BANK0 ] unsigned char 
 19657 ;;  arg             4    2[BANK0 ] unsigned long 
 19658 ;;  exp             1    1[BANK0 ] unsigned char 
 19659 ;; Return value:  Size  Location     Type
 19660 ;;                  4    1[COMMON] unsigned char 
 19661 ;; Registers used:
 19662 ;;		wreg, status,2, status,0
 19663 ;; Tracked objects:
 19664 ;;		On entry : 0/0
 19665 ;;		On exit  : 0/0
 19666 ;;		Unchanged: 0/0
 19667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19668 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19669 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19670 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19671 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19672 ;;Total ram usage:       14 bytes
 19673 ;; Hardware stack levels used:    1
 19674 ;; Hardware stack levels required when called:    4
 19675 ;; This function calls:
 19676 ;;		Nothing
 19677 ;; This function is called by:
 19678 ;;		_ADC_test
 19679 ;; This function uses a non-reentrant model
 19680 ;;
 19681                           
 19682                           
 19683                           ;psect for function ___xxtofl
 19684  1F53                     ___xxtofl:
 19685                           
 19686                           ;incstack = 0
 19687                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 19688                           ;___xxtofl@sign stored from wreg
 19689  1F53  0140               	movlb	0	; select bank0
 19690  1F54  00A0               	movwf	___xxtofl@sign
 19691  1F55                     l5339:
 19692  1F55  0820               	movf	___xxtofl@sign,w
 19693  1F56  1903               	btfsc	3,2
 19694  1F57  2F59               	goto	u6511
 19695  1F58  2F5A               	goto	u6510
 19696  1F59                     u6511:
 19697  1F59  2F6E               	goto	l5345
 19698  1F5A                     u6510:
 19699  1F5A                     l5341:
 19700  1F5A  1FF4               	btfss	___xxtofl@val+3,7
 19701  1F5B  2F5D               	goto	u6521
 19702  1F5C  2F5E               	goto	u6520
 19703  1F5D                     u6521:
 19704  1F5D  2F6E               	goto	l5345
 19705  1F5E                     u6520:
 19706  1F5E                     l5343:
 19707  1F5E  0971               	comf	___xxtofl@val,w
 19708  1F5F  00A2               	movwf	___xxtofl@arg
 19709  1F60  0972               	comf	___xxtofl@val+1,w
 19710  1F61  00A3               	movwf	___xxtofl@arg+1
 19711  1F62  0973               	comf	___xxtofl@val+2,w
 19712  1F63  00A4               	movwf	___xxtofl@arg+2
 19713  1F64  0974               	comf	___xxtofl@val+3,w
 19714  1F65  00A5               	movwf	___xxtofl@arg+3
 19715  1F66  0AA2               	incf	___xxtofl@arg,f
 19716  1F67  1903               	skipnz
 19717  1F68  0AA3               	incf	___xxtofl@arg+1,f
 19718  1F69  1903               	skipnz
 19719  1F6A  0AA4               	incf	___xxtofl@arg+2,f
 19720  1F6B  1903               	skipnz
 19721  1F6C  0AA5               	incf	___xxtofl@arg+3,f
 19722  1F6D  2F76               	goto	l1253
 19723  1F6E                     l5345:
 19724  1F6E  0874               	movf	___xxtofl@val+3,w
 19725  1F6F  00A5               	movwf	___xxtofl@arg+3
 19726  1F70  0873               	movf	___xxtofl@val+2,w
 19727  1F71  00A4               	movwf	___xxtofl@arg+2
 19728  1F72  0872               	movf	___xxtofl@val+1,w
 19729  1F73  00A3               	movwf	___xxtofl@arg+1
 19730  1F74  0871               	movf	___xxtofl@val,w
 19731  1F75  00A2               	movwf	___xxtofl@arg
 19732  1F76                     l1253:
 19733  1F76  0874               	movf	___xxtofl@val+3,w
 19734  1F77  0473               	iorwf	___xxtofl@val+2,w
 19735  1F78  0472               	iorwf	___xxtofl@val+1,w
 19736  1F79  0471               	iorwf	___xxtofl@val,w
 19737  1F7A  1D03               	skipz
 19738  1F7B  2F7D               	goto	u6531
 19739  1F7C  2F7E               	goto	u6530
 19740  1F7D                     u6531:
 19741  1F7D  2F87               	goto	l5351
 19742  1F7E                     u6530:
 19743  1F7E                     l5347:
 19744  1F7E  3000               	movlw	0
 19745  1F7F  00F4               	movwf	?___xxtofl+3
 19746  1F80  3000               	movlw	0
 19747  1F81  00F3               	movwf	?___xxtofl+2
 19748  1F82  3000               	movlw	0
 19749  1F83  00F2               	movwf	?___xxtofl+1
 19750  1F84  3000               	movlw	0
 19751  1F85  00F1               	movwf	?___xxtofl
 19752  1F86  2FFF               	goto	l1255
 19753  1F87                     l5351:
 19754  1F87  3096               	movlw	150
 19755  1F88  00F5               	movwf	??___xxtofl
 19756  1F89  0875               	movf	??___xxtofl,w
 19757  1F8A  00A1               	movwf	___xxtofl@exp
 19758  1F8B  2F97               	goto	l5355
 19759  1F8C                     l5353:
 19760  1F8C  3001               	movlw	1
 19761  1F8D  00F5               	movwf	??___xxtofl
 19762  1F8E  0875               	movf	??___xxtofl,w
 19763  1F8F  07A1               	addwf	___xxtofl@exp,f
 19764  1F90  3001               	movlw	1
 19765  1F91                     u6545:
 19766  1F91  36A5               	lsrf	___xxtofl@arg+3,f
 19767  1F92  0CA4               	rrf	___xxtofl@arg+2,f
 19768  1F93  0CA3               	rrf	___xxtofl@arg+1,f
 19769  1F94  0CA2               	rrf	___xxtofl@arg,f
 19770  1F95  0B89               	decfsz	9,f
 19771  1F96  2F91               	goto	u6545
 19772  1F97                     l5355:
 19773  1F97  30FE               	movlw	254
 19774  1F98  0525               	andwf	___xxtofl@arg+3,w
 19775  1F99  1D03               	btfss	3,2
 19776  1F9A  2F9C               	goto	u6551
 19777  1F9B  2F9D               	goto	u6550
 19778  1F9C                     u6551:
 19779  1F9C  2F8C               	goto	l5353
 19780  1F9D                     u6550:
 19781  1F9D  2FB1               	goto	l1259
 19782  1F9E                     l5357:
 19783  1F9E  3001               	movlw	1
 19784  1F9F  00F5               	movwf	??___xxtofl
 19785  1FA0  0875               	movf	??___xxtofl,w
 19786  1FA1  07A1               	addwf	___xxtofl@exp,f
 19787  1FA2                     l5359:
 19788  1FA2  3001               	movlw	1
 19789  1FA3  07A2               	addwf	___xxtofl@arg,f
 19790  1FA4  3000               	movlw	0
 19791  1FA5  3DA3               	addwfc	___xxtofl@arg+1,f
 19792  1FA6  3000               	movlw	0
 19793  1FA7  3DA4               	addwfc	___xxtofl@arg+2,f
 19794  1FA8  3000               	movlw	0
 19795  1FA9  3DA5               	addwfc	___xxtofl@arg+3,f
 19796  1FAA                     l5361:
 19797  1FAA  3001               	movlw	1
 19798  1FAB                     u6565:
 19799  1FAB  36A5               	lsrf	___xxtofl@arg+3,f
 19800  1FAC  0CA4               	rrf	___xxtofl@arg+2,f
 19801  1FAD  0CA3               	rrf	___xxtofl@arg+1,f
 19802  1FAE  0CA2               	rrf	___xxtofl@arg,f
 19803  1FAF  0B89               	decfsz	9,f
 19804  1FB0  2FAB               	goto	u6565
 19805  1FB1                     l1259:
 19806  1FB1  30FF               	movlw	255
 19807  1FB2  0525               	andwf	___xxtofl@arg+3,w
 19808  1FB3  1D03               	btfss	3,2
 19809  1FB4  2FB6               	goto	u6571
 19810  1FB5  2FB7               	goto	u6570
 19811  1FB6                     u6571:
 19812  1FB6  2F9E               	goto	l5357
 19813  1FB7                     u6570:
 19814  1FB7  2FC1               	goto	l5365
 19815  1FB8                     l5363:
 19816  1FB8  3001               	movlw	1
 19817  1FB9  02A1               	subwf	___xxtofl@exp,f
 19818  1FBA  3001               	movlw	1
 19819  1FBB                     u6585:
 19820  1FBB  35A2               	lslf	___xxtofl@arg,f
 19821  1FBC  0DA3               	rlf	___xxtofl@arg+1,f
 19822  1FBD  0DA4               	rlf	___xxtofl@arg+2,f
 19823  1FBE  0DA5               	rlf	___xxtofl@arg+3,f
 19824  1FBF  0B89               	decfsz	9,f
 19825  1FC0  2FBB               	goto	u6585
 19826  1FC1                     l5365:
 19827  1FC1  1BA4               	btfsc	___xxtofl@arg+2,7
 19828  1FC2  2FC4               	goto	u6591
 19829  1FC3  2FC5               	goto	u6590
 19830  1FC4                     u6591:
 19831  1FC4  2FCB               	goto	l1266
 19832  1FC5                     u6590:
 19833  1FC5                     l5367:
 19834  1FC5  3002               	movlw	2
 19835  1FC6  0221               	subwf	___xxtofl@exp,w
 19836  1FC7  1803               	skipnc
 19837  1FC8  2FCA               	goto	u6601
 19838  1FC9  2FCB               	goto	u6600
 19839  1FCA                     u6601:
 19840  1FCA  2FB8               	goto	l5363
 19841  1FCB                     u6600:
 19842  1FCB                     l1266:
 19843  1FCB  1821               	btfsc	___xxtofl@exp,0
 19844  1FCC  2FCE               	goto	u6611
 19845  1FCD  2FCF               	goto	u6610
 19846  1FCE                     u6611:
 19847  1FCE  2FD7               	goto	l1267
 19848  1FCF                     u6610:
 19849  1FCF                     l5369:
 19850  1FCF  30FF               	movlw	255
 19851  1FD0  05A2               	andwf	___xxtofl@arg,f
 19852  1FD1  30FF               	movlw	255
 19853  1FD2  05A3               	andwf	___xxtofl@arg+1,f
 19854  1FD3  307F               	movlw	127
 19855  1FD4  05A4               	andwf	___xxtofl@arg+2,f
 19856  1FD5  30FF               	movlw	255
 19857  1FD6  05A5               	andwf	___xxtofl@arg+3,f
 19858  1FD7                     l1267:
 19859  1FD7  1003               	clrc
 19860  1FD8  0CA1               	rrf	___xxtofl@exp,f
 19861  1FD9                     l5371:
 19862  1FD9  0821               	movf	___xxtofl@exp,w
 19863  1FDA  00F5               	movwf	??___xxtofl
 19864  1FDB  01F6               	clrf	??___xxtofl+1
 19865  1FDC  01F7               	clrf	??___xxtofl+2
 19866  1FDD  01F8               	clrf	??___xxtofl+3
 19867  1FDE  3018               	movlw	24
 19868  1FDF                     u6625:
 19869  1FDF  35F5               	lslf	??___xxtofl,f
 19870  1FE0  0DF6               	rlf	??___xxtofl+1,f
 19871  1FE1  0DF7               	rlf	??___xxtofl+2,f
 19872  1FE2  0DF8               	rlf	??___xxtofl+3,f
 19873  1FE3                     u6620:
 19874  1FE3  0B89               	decfsz	9,f
 19875  1FE4  2FDF               	goto	u6625
 19876  1FE5  0875               	movf	??___xxtofl,w
 19877  1FE6  04A2               	iorwf	___xxtofl@arg,f
 19878  1FE7  0876               	movf	??___xxtofl+1,w
 19879  1FE8  04A3               	iorwf	___xxtofl@arg+1,f
 19880  1FE9  0877               	movf	??___xxtofl+2,w
 19881  1FEA  04A4               	iorwf	___xxtofl@arg+2,f
 19882  1FEB  0878               	movf	??___xxtofl+3,w
 19883  1FEC  04A5               	iorwf	___xxtofl@arg+3,f
 19884  1FED                     l5373:
 19885  1FED  0820               	movf	___xxtofl@sign,w
 19886  1FEE  1903               	btfsc	3,2
 19887  1FEF  2FF1               	goto	u6631
 19888  1FF0  2FF2               	goto	u6630
 19889  1FF1                     u6631:
 19890  1FF1  2FF7               	goto	l5379
 19891  1FF2                     u6630:
 19892  1FF2                     l5375:
 19893  1FF2  1FF4               	btfss	___xxtofl@val+3,7
 19894  1FF3  2FF5               	goto	u6641
 19895  1FF4  2FF6               	goto	u6640
 19896  1FF5                     u6641:
 19897  1FF5  2FF7               	goto	l5379
 19898  1FF6                     u6640:
 19899  1FF6                     l5377:
 19900  1FF6  17A5               	bsf	___xxtofl@arg+3,7
 19901  1FF7                     l5379:
 19902  1FF7  0825               	movf	___xxtofl@arg+3,w
 19903  1FF8  00F4               	movwf	?___xxtofl+3
 19904  1FF9  0824               	movf	___xxtofl@arg+2,w
 19905  1FFA  00F3               	movwf	?___xxtofl+2
 19906  1FFB  0823               	movf	___xxtofl@arg+1,w
 19907  1FFC  00F2               	movwf	?___xxtofl+1
 19908  1FFD  0822               	movf	___xxtofl@arg,w
 19909  1FFE  00F1               	movwf	?___xxtofl
 19910  1FFF                     l1255:
 19911  1FFF  0008               	return
 19912  2000                     __end_of___xxtofl:
 19913                           
 19914                           	psect	text47
 19915  275D                     __ptext47:	
 19916 ;; *************** function _ADCC_GetSingleConversion *****************
 19917 ;; Defined at:
 19918 ;;		line 138 in file "mcc_generated_files/adcc.c"
 19919 ;; Parameters:    Size  Location     Type
 19920 ;;  channel         1    wreg     enum E12200
 19921 ;; Auto vars:     Size  Location     Type
 19922 ;;  channel         1    4[COMMON] enum E12200
 19923 ;; Return value:  Size  Location     Type
 19924 ;;                  2    1[COMMON] unsigned short 
 19925 ;; Registers used:
 19926 ;;		wreg
 19927 ;; Tracked objects:
 19928 ;;		On entry : 0/0
 19929 ;;		On exit  : 0/0
 19930 ;;		Unchanged: 0/0
 19931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19932 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19933 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19935 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19936 ;;Total ram usage:        4 bytes
 19937 ;; Hardware stack levels used:    1
 19938 ;; Hardware stack levels required when called:    4
 19939 ;; This function calls:
 19940 ;;		Nothing
 19941 ;; This function is called by:
 19942 ;;		_ADC_test
 19943 ;;		_measure
 19944 ;; This function uses a non-reentrant model
 19945 ;;
 19946                           
 19947                           
 19948                           ;psect for function _ADCC_GetSingleConversion
 19949  275D                     _ADCC_GetSingleConversion:
 19950                           
 19951                           ;incstack = 0
 19952                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 19953                           ;ADCC_GetSingleConversion@channel stored from wreg
 19954  275D  00F4               	movwf	ADCC_GetSingleConversion@channel
 19955  275E                     l5079:
 19956                           
 19957                           ;mcc_generated_files/adcc.c: 138: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 139: {;mcc_generated_files/adcc.c: 141:     ADPCH = 
      +                          channel;
 19958  275E  0874               	movf	ADCC_GetSingleConversion@channel,w
 19959  275F  0141               	movlb	1	; select bank1
 19960  2760  009F               	movwf	31	;volatile
 19961  2761                     l5081:
 19962                           
 19963                           ;mcc_generated_files/adcc.c: 144:     ADCON0bits.ADON = 1;
 19964  2761  0142               	movlb	2	; select bank2
 19965  2762  1791               	bsf	17,7	;volatile
 19966  2763                     l5083:
 19967                           
 19968                           ;mcc_generated_files/adcc.c: 147:     ADCON0bits.ADCONT = 0;
 19969  2763  1311               	bcf	17,6	;volatile
 19970  2764                     l5085:
 19971                           
 19972                           ;mcc_generated_files/adcc.c: 150:     ADCON0bits.ADGO = 1;
 19973  2764  1411               	bsf	17,0	;volatile
 19974  2765                     l374:	
 19975                           ;mcc_generated_files/adcc.c: 155:     {;mcc_generated_files/adcc.c: 156:     }
 19976                           
 19977                           
 19978                           ;mcc_generated_files/adcc.c: 154:     while (ADCON0bits.ADGO)
 19979  2765  1811               	btfsc	17,0	;volatile
 19980  2766  2F68               	goto	u6181
 19981  2767  2F69               	goto	u6180
 19982  2768                     u6181:
 19983  2768  2F65               	goto	l374
 19984  2769                     u6180:
 19985  2769                     l5087:
 19986                           
 19987                           ;mcc_generated_files/adcc.c: 160:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 19988  2769  0141               	movlb	1	; select bank1
 19989  276A  081E               	movf	30,w	;volatile
 19990  276B  00F2               	movwf	?_ADCC_GetSingleConversion+1
 19991  276C  081D               	movf	29,w	;volatile
 19992  276D  00F1               	movwf	?_ADCC_GetSingleConversion
 19993  276E                     l377:
 19994  276E  0008               	return
 19995  276F                     __end_of_ADCC_GetSingleConversion:
 19996                           
 19997                           	psect	text48
 19998  276F                     __ptext48:	
 19999 ;; *************** function _SYSTEM_Initialize *****************
 20000 ;; Defined at:
 20001 ;;		line 50 in file "mcc_generated_files/mcc.c"
 20002 ;; Parameters:    Size  Location     Type
 20003 ;;		None
 20004 ;; Auto vars:     Size  Location     Type
 20005 ;;		None
 20006 ;; Return value:  Size  Location     Type
 20007 ;;                  1    wreg      void 
 20008 ;; Registers used:
 20009 ;;		wreg, status,2, status,0, pclath, cstack
 20010 ;; Tracked objects:
 20011 ;;		On entry : 0/0
 20012 ;;		On exit  : 0/0
 20013 ;;		Unchanged: 0/0
 20014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20019 ;;Total ram usage:        0 bytes
 20020 ;; Hardware stack levels used:    1
 20021 ;; Hardware stack levels required when called:    6
 20022 ;; This function calls:
 20023 ;;		_ADCC_Initialize
 20024 ;;		_CLKREF_Initialize
 20025 ;;		_EUSART1_Initialize
 20026 ;;		_OSCILLATOR_Initialize
 20027 ;;		_PIN_MANAGER_Initialize
 20028 ;;		_PMD_Initialize
 20029 ;; This function is called by:
 20030 ;;		_main
 20031 ;; This function uses a non-reentrant model
 20032 ;;
 20033                           
 20034                           
 20035                           ;psect for function _SYSTEM_Initialize
 20036  276F                     _SYSTEM_Initialize:
 20037  276F                     l5669:	
 20038                           ;incstack = 0
 20039                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 20040                           
 20041                           
 20042                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 20043  276F  31A7  2748  31A7   	fcall	_PMD_Initialize
 20044  2772                     l5671:
 20045                           
 20046                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 20047  2772  319A  2260  31A7   	fcall	_PIN_MANAGER_Initialize
 20048  2775                     l5673:
 20049                           
 20050                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 20051  2775  31A7  273E  31A7   	fcall	_OSCILLATOR_Initialize
 20052  2778                     l5675:
 20053                           
 20054                           ;mcc_generated_files/mcc.c: 55:     ADCC_Initialize();
 20055  2778  3198  2001  31A7   	fcall	_ADCC_Initialize
 20056  277B                     l5677:
 20057                           
 20058                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
 20059  277B  319B  23EB  31A7   	fcall	_EUSART1_Initialize
 20060  277E                     l5679:
 20061                           
 20062                           ;mcc_generated_files/mcc.c: 57:     CLKREF_Initialize();
 20063  277E  31A7  2702  31A7   	fcall	_CLKREF_Initialize
 20064  2781                     l43:
 20065  2781  0008               	return
 20066  2782                     __end_of_SYSTEM_Initialize:
 20067                           
 20068                           	psect	text49
 20069  2748                     __ptext49:	
 20070 ;; *************** function _PMD_Initialize *****************
 20071 ;; Defined at:
 20072 ;;		line 76 in file "mcc_generated_files/mcc.c"
 20073 ;; Parameters:    Size  Location     Type
 20074 ;;		None
 20075 ;; Auto vars:     Size  Location     Type
 20076 ;;		None
 20077 ;; Return value:  Size  Location     Type
 20078 ;;                  1    wreg      void 
 20079 ;; Registers used:
 20080 ;;		status,2
 20081 ;; Tracked objects:
 20082 ;;		On entry : 0/0
 20083 ;;		On exit  : 0/0
 20084 ;;		Unchanged: 0/0
 20085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20090 ;;Total ram usage:        0 bytes
 20091 ;; Hardware stack levels used:    1
 20092 ;; Hardware stack levels required when called:    4
 20093 ;; This function calls:
 20094 ;;		Nothing
 20095 ;; This function is called by:
 20096 ;;		_SYSTEM_Initialize
 20097 ;; This function uses a non-reentrant model
 20098 ;;
 20099                           
 20100                           
 20101                           ;psect for function _PMD_Initialize
 20102  2748                     _PMD_Initialize:
 20103  2748                     l5383:	
 20104                           ;incstack = 0
 20105                           ; Regs used in _PMD_Initialize: [status,2]
 20106                           
 20107                           
 20108                           ;mcc_generated_files/mcc.c: 79:     PMD0 = 0x00;
 20109  2748  014F               	movlb	15	; select bank15
 20110  2749  0196               	clrf	22	;volatile
 20111                           
 20112                           ;mcc_generated_files/mcc.c: 81:     PMD1 = 0x00;
 20113  274A  0197               	clrf	23	;volatile
 20114                           
 20115                           ;mcc_generated_files/mcc.c: 83:     PMD2 = 0x00;
 20116  274B  0198               	clrf	24	;volatile
 20117                           
 20118                           ;mcc_generated_files/mcc.c: 85:     PMD3 = 0x00;
 20119  274C  0199               	clrf	25	;volatile
 20120                           
 20121                           ;mcc_generated_files/mcc.c: 87:     PMD4 = 0x00;
 20122  274D  019A               	clrf	26	;volatile
 20123                           
 20124                           ;mcc_generated_files/mcc.c: 89:     PMD5 = 0x00;
 20125  274E  019B               	clrf	27	;volatile
 20126                           
 20127                           ;mcc_generated_files/mcc.c: 91:     PMD6 = 0x00;
 20128  274F  019C               	clrf	28	;volatile
 20129                           
 20130                           ;mcc_generated_files/mcc.c: 93:     PMD7 = 0x00;
 20131  2750  019D               	clrf	29	;volatile
 20132  2751                     l49:
 20133  2751  0008               	return
 20134  2752                     __end_of_PMD_Initialize:
 20135                           
 20136                           	psect	text50
 20137  1A60                     __ptext50:	
 20138 ;; *************** function _PIN_MANAGER_Initialize *****************
 20139 ;; Defined at:
 20140 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 20141 ;; Parameters:    Size  Location     Type
 20142 ;;		None
 20143 ;; Auto vars:     Size  Location     Type
 20144 ;;		None
 20145 ;; Return value:  Size  Location     Type
 20146 ;;                  1    wreg      void 
 20147 ;; Registers used:
 20148 ;;		wreg, status,2
 20149 ;; Tracked objects:
 20150 ;;		On entry : 0/0
 20151 ;;		On exit  : 0/0
 20152 ;;		Unchanged: 0/0
 20153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20158 ;;Total ram usage:        0 bytes
 20159 ;; Hardware stack levels used:    1
 20160 ;; Hardware stack levels required when called:    4
 20161 ;; This function calls:
 20162 ;;		Nothing
 20163 ;; This function is called by:
 20164 ;;		_SYSTEM_Initialize
 20165 ;; This function uses a non-reentrant model
 20166 ;;
 20167                           
 20168                           
 20169                           ;psect for function _PIN_MANAGER_Initialize
 20170  1A60                     _PIN_MANAGER_Initialize:
 20171  1A60                     l5385:	
 20172                           ;incstack = 0
 20173                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 20174                           
 20175                           
 20176                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 20177  1A60  0140               	movlb	0	; select bank0
 20178  1A61  019C               	clrf	28	;volatile
 20179                           
 20180                           ;mcc_generated_files/pin_manager.c: 61:     LATA = 0x00;
 20181  1A62  0198               	clrf	24	;volatile
 20182                           
 20183                           ;mcc_generated_files/pin_manager.c: 62:     LATB = 0x00;
 20184  1A63  0199               	clrf	25	;volatile
 20185                           
 20186                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x00;
 20187  1A64  019A               	clrf	26	;volatile
 20188  1A65                     l5387:
 20189                           
 20190                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0x08;
 20191  1A65  3008               	movlw	8
 20192  1A66  0096               	movwf	22	;volatile
 20193  1A67                     l5389:
 20194                           
 20195                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0xFE;
 20196  1A67  30FE               	movlw	254
 20197  1A68  0092               	movwf	18	;volatile
 20198  1A69                     l5391:
 20199                           
 20200                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xFF;
 20201  1A69  30FF               	movlw	255
 20202  1A6A  0093               	movwf	19	;volatile
 20203  1A6B                     l5393:
 20204                           
 20205                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0x91;
 20206  1A6B  3091               	movlw	145
 20207  1A6C  0094               	movwf	20	;volatile
 20208  1A6D                     l5395:
 20209                           
 20210                           ;mcc_generated_files/pin_manager.c: 76:     ANSELC = 0x7F;
 20211  1A6D  307F               	movlw	127
 20212  1A6E  017E               	movlb	62	; select bank62
 20213  1A6F  00CE               	movwf	78	;volatile
 20214  1A70                     l5397:
 20215                           
 20216                           ;mcc_generated_files/pin_manager.c: 77:     ANSELB = 0xFF;
 20217  1A70  30FF               	movlw	255
 20218  1A71  00C3               	movwf	67	;volatile
 20219  1A72                     l5399:
 20220                           
 20221                           ;mcc_generated_files/pin_manager.c: 78:     ANSELA = 0xFF;
 20222  1A72  30FF               	movlw	255
 20223  1A73  00B8               	movwf	56	;volatile
 20224  1A74                     l5401:
 20225                           
 20226                           ;mcc_generated_files/pin_manager.c: 83:     WPUE = 0x00;
 20227  1A74  01E5               	clrf	101	;volatile
 20228  1A75                     l5403:
 20229                           
 20230                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
 20231  1A75  01C4               	clrf	68	;volatile
 20232  1A76                     l5405:
 20233                           
 20234                           ;mcc_generated_files/pin_manager.c: 85:     WPUA = 0x00;
 20235  1A76  01B9               	clrf	57	;volatile
 20236  1A77                     l5407:
 20237                           
 20238                           ;mcc_generated_files/pin_manager.c: 86:     WPUC = 0x00;
 20239  1A77  01CF               	clrf	79	;volatile
 20240  1A78                     l5409:
 20241                           
 20242                           ;mcc_generated_files/pin_manager.c: 91:     ODCONE = 0x00;
 20243  1A78  01E6               	clrf	102	;volatile
 20244  1A79                     l5411:
 20245                           
 20246                           ;mcc_generated_files/pin_manager.c: 92:     ODCONA = 0x00;
 20247  1A79  01BA               	clrf	58	;volatile
 20248  1A7A                     l5413:
 20249                           
 20250                           ;mcc_generated_files/pin_manager.c: 93:     ODCONB = 0x00;
 20251  1A7A  01C5               	clrf	69	;volatile
 20252  1A7B                     l5415:
 20253                           
 20254                           ;mcc_generated_files/pin_manager.c: 94:     ODCONC = 0x00;
 20255  1A7B  01D0               	clrf	80	;volatile
 20256  1A7C                     l5417:
 20257                           
 20258                           ;mcc_generated_files/pin_manager.c: 99:     SLRCONA = 0xFF;
 20259  1A7C  30FF               	movlw	255
 20260  1A7D  00BB               	movwf	59	;volatile
 20261  1A7E                     l5419:
 20262                           
 20263                           ;mcc_generated_files/pin_manager.c: 100:     SLRCONB = 0xFF;
 20264  1A7E  30FF               	movlw	255
 20265  1A7F  00C6               	movwf	70	;volatile
 20266  1A80                     l5421:
 20267                           
 20268                           ;mcc_generated_files/pin_manager.c: 101:     SLRCONC = 0xFF;
 20269  1A80  30FF               	movlw	255
 20270  1A81  00D1               	movwf	81	;volatile
 20271  1A82                     l5423:
 20272                           
 20273                           ;mcc_generated_files/pin_manager.c: 106:     INLVLA = 0x3F;
 20274  1A82  303F               	movlw	63
 20275  1A83  00BC               	movwf	60	;volatile
 20276  1A84                     l5425:
 20277                           
 20278                           ;mcc_generated_files/pin_manager.c: 107:     INLVLB = 0x3F;
 20279  1A84  303F               	movlw	63
 20280  1A85  00C7               	movwf	71	;volatile
 20281  1A86                     l5427:
 20282                           
 20283                           ;mcc_generated_files/pin_manager.c: 108:     INLVLC = 0x3F;
 20284  1A86  303F               	movlw	63
 20285  1A87  00D2               	movwf	82	;volatile
 20286  1A88                     l5429:
 20287                           
 20288                           ;mcc_generated_files/pin_manager.c: 117:     RC5PPS = 0x19;
 20289  1A88  3019               	movlw	25
 20290  1A89  00A5               	movwf	37	;volatile
 20291  1A8A                     l5431:
 20292                           
 20293                           ;mcc_generated_files/pin_manager.c: 118:     RC6PPS = 0x0F;
 20294  1A8A  300F               	movlw	15
 20295  1A8B  00A6               	movwf	38	;volatile
 20296  1A8C                     l5433:
 20297                           
 20298                           ;mcc_generated_files/pin_manager.c: 119:     RX1DTPPS = 0x17;
 20299  1A8C  3017               	movlw	23
 20300  1A8D  017D               	movlb	61	; select bank61
 20301  1A8E  00CB               	movwf	75	;volatile
 20302  1A8F                     l108:
 20303  1A8F  0008               	return
 20304  1A90                     __end_of_PIN_MANAGER_Initialize:
 20305                           
 20306                           	psect	text51
 20307  273E                     __ptext51:	
 20308 ;; *************** function _OSCILLATOR_Initialize *****************
 20309 ;; Defined at:
 20310 ;;		line 60 in file "mcc_generated_files/mcc.c"
 20311 ;; Parameters:    Size  Location     Type
 20312 ;;		None
 20313 ;; Auto vars:     Size  Location     Type
 20314 ;;		None
 20315 ;; Return value:  Size  Location     Type
 20316 ;;                  1    wreg      void 
 20317 ;; Registers used:
 20318 ;;		wreg, status,2
 20319 ;; Tracked objects:
 20320 ;;		On entry : 0/0
 20321 ;;		On exit  : 0/0
 20322 ;;		Unchanged: 0/0
 20323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20328 ;;Total ram usage:        0 bytes
 20329 ;; Hardware stack levels used:    1
 20330 ;; Hardware stack levels required when called:    4
 20331 ;; This function calls:
 20332 ;;		Nothing
 20333 ;; This function is called by:
 20334 ;;		_SYSTEM_Initialize
 20335 ;; This function uses a non-reentrant model
 20336 ;;
 20337                           
 20338                           
 20339                           ;psect for function _OSCILLATOR_Initialize
 20340  273E                     _OSCILLATOR_Initialize:
 20341  273E                     l5435:	
 20342                           ;incstack = 0
 20343                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 20344                           
 20345                           
 20346                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x60;
 20347  273E  3060               	movlw	96
 20348  273F  0151               	movlb	17	; select bank17
 20349  2740  008D               	movwf	13	;volatile
 20350  2741                     l5437:
 20351                           
 20352                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
 20353  2741  018F               	clrf	15	;volatile
 20354  2742                     l5439:
 20355                           
 20356                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
 20357  2742  0191               	clrf	17	;volatile
 20358                           
 20359                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x06;
 20360  2743  3006               	movlw	6
 20361  2744  0093               	movwf	19	;volatile
 20362  2745                     l5441:
 20363                           
 20364                           ;mcc_generated_files/mcc.c: 71:     OSCSTAT = 0x00;
 20365  2745  0190               	clrf	16	;volatile
 20366  2746                     l5443:
 20367                           
 20368                           ;mcc_generated_files/mcc.c: 73:     OSCTUNE = 0x00;
 20369  2746  0192               	clrf	18	;volatile
 20370  2747                     l46:
 20371  2747  0008               	return
 20372  2748                     __end_of_OSCILLATOR_Initialize:
 20373                           
 20374                           	psect	text52
 20375  1BEB                     __ptext52:	
 20376 ;; *************** function _EUSART1_Initialize *****************
 20377 ;; Defined at:
 20378 ;;		line 88 in file "mcc_generated_files/eusart1.c"
 20379 ;; Parameters:    Size  Location     Type
 20380 ;;		None
 20381 ;; Auto vars:     Size  Location     Type
 20382 ;;		None
 20383 ;; Return value:  Size  Location     Type
 20384 ;;                  1    wreg      void 
 20385 ;; Registers used:
 20386 ;;		wreg, status,2, status,0, pclath, cstack
 20387 ;; Tracked objects:
 20388 ;;		On entry : 0/0
 20389 ;;		On exit  : 0/0
 20390 ;;		Unchanged: 0/0
 20391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20394 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20395 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20396 ;;Total ram usage:        1 bytes
 20397 ;; Hardware stack levels used:    1
 20398 ;; Hardware stack levels required when called:    5
 20399 ;; This function calls:
 20400 ;;		_EUSART1_SetErrorHandler
 20401 ;;		_EUSART1_SetFramingErrorHandler
 20402 ;;		_EUSART1_SetOverrunErrorHandler
 20403 ;;		_EUSART1_SetRxInterruptHandler
 20404 ;;		_EUSART1_SetTxInterruptHandler
 20405 ;; This function is called by:
 20406 ;;		_SYSTEM_Initialize
 20407 ;; This function uses a non-reentrant model
 20408 ;;
 20409                           
 20410                           
 20411                           ;psect for function _EUSART1_Initialize
 20412  1BEB                     _EUSART1_Initialize:
 20413  1BEB                     l5471:	
 20414                           ;incstack = 0
 20415                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 20416                           
 20417                           
 20418                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
 20419  1BEB  014E               	movlb	14	; select bank14
 20420  1BEC  1299               	bcf	25,5	;volatile
 20421  1BED                     l5473:
 20422                           
 20423                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 20424  1BED  3031               	movlw	low _EUSART1_Receive_ISR
 20425  1BEE  00F1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 20426  1BEF  301B               	movlw	high _EUSART1_Receive_ISR
 20427  1BF0  00F2               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 20428  1BF1  31A7  271A  319B   	fcall	_EUSART1_SetRxInterruptHandler
 20429  1BF4                     l5475:
 20430                           
 20431                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
 20432  1BF4  014E               	movlb	14	; select bank14
 20433  1BF5  1219               	bcf	25,4	;volatile
 20434                           
 20435                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
 20436  1BF6  30BF               	movlw	low _EUSART1_Transmit_ISR
 20437  1BF7  00F1               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler
 20438  1BF8  3018               	movlw	high _EUSART1_Transmit_ISR
 20439  1BF9  00F2               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1
 20440  1BFA  31A7  2720  319B   	fcall	_EUSART1_SetTxInterruptHandler
 20441  1BFD                     l5477:
 20442                           
 20443                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
 20444  1BFD  3008               	movlw	8
 20445  1BFE  0142               	movlb	2	; select bank2
 20446  1BFF  009F               	movwf	31	;volatile
 20447  1C00                     l5479:
 20448                           
 20449                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
 20450  1C00  3090               	movlw	144
 20451  1C01  009D               	movwf	29	;volatile
 20452  1C02                     l5481:
 20453                           
 20454                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
 20455  1C02  3024               	movlw	36
 20456  1C03  009E               	movwf	30	;volatile
 20457  1C04                     l5483:
 20458                           
 20459                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x44;
 20460  1C04  3044               	movlw	68
 20461  1C05  009B               	movwf	27	;volatile
 20462  1C06                     l5485:
 20463                           
 20464                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x00;
 20465  1C06  019C               	clrf	28	;volatile
 20466  1C07                     l5487:
 20467                           
 20468                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 20469  1C07  3003               	movlw	low _EUSART1_DefaultFramingErrorHandler
 20470  1C08  00F1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
 20471  1C09  3000               	movlw	high _EUSART1_DefaultFramingErrorHandler
 20472  1C0A  00F2               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
 20473  1C0B  31A7  270E  319B   	fcall	_EUSART1_SetFramingErrorHandler
 20474  1C0E                     l5489:
 20475                           
 20476                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 20477  1C0E  3000               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 20478  1C0F  00F1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
 20479  1C10  3008               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 20480  1C11  00F2               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
 20481  1C12  31A7  2714  319B   	fcall	_EUSART1_SetOverrunErrorHandler
 20482  1C15                     l5491:
 20483                           
 20484                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 20485  1C15  30FE               	movlw	low _EUSART1_DefaultErrorHandler
 20486  1C16  00F1               	movwf	EUSART1_SetErrorHandler@interruptHandler
 20487  1C17  3026               	movlw	high _EUSART1_DefaultErrorHandler
 20488  1C18  00F2               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
 20489  1C19  31A7  2708  319B   	fcall	_EUSART1_SetErrorHandler
 20490                           
 20491                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
 20492  1C1C  0143               	movlb	3	; select bank3
 20493  1C1D  01D0               	clrf	_eusart1RxLastError^(0+384)	;volatile
 20494                           
 20495                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
 20496  1C1E  0142               	movlb	2	; select bank2
 20497  1C1F  01EE               	clrf	_eusart1TxHead^(0+256)	;volatile
 20498                           
 20499                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
 20500  1C20  01ED               	clrf	_eusart1TxTail^(0+256)	;volatile
 20501  1C21                     l5493:
 20502                           
 20503                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
 20504  1C21  3040               	movlw	64
 20505  1C22  00F3               	movwf	??_EUSART1_Initialize
 20506  1C23  0873               	movf	??_EUSART1_Initialize,w
 20507  1C24  0143               	movlb	3	; select bank3
 20508  1C25  00DB               	movwf	_eusart1TxBufferRemaining^(0+384)	;volatile
 20509  1C26                     l5495:
 20510                           
 20511                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
 20512  1C26  01FC               	clrf	_eusart1RxHead	;volatile
 20513  1C27                     l5497:
 20514                           
 20515                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
 20516  1C27  0142               	movlb	2	; select bank2
 20517  1C28  01EC               	clrf	_eusart1RxTail^(0+256)	;volatile
 20518  1C29                     l5499:
 20519                           
 20520                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
 20521  1C29  01EB               	clrf	_eusart1RxCount^(0+256)	;volatile
 20522  1C2A                     l5501:
 20523                           
 20524                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
 20525  1C2A  014E               	movlb	14	; select bank14
 20526  1C2B  1699               	bsf	25,5	;volatile
 20527  1C2C                     l186:
 20528  1C2C  0008               	return
 20529  1C2D                     __end_of_EUSART1_Initialize:
 20530                           
 20531                           	psect	text53
 20532  2720                     __ptext53:	
 20533 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
 20534 ;; Defined at:
 20535 ;;		line 276 in file "mcc_generated_files/eusart1.c"
 20536 ;; Parameters:    Size  Location     Type
 20537 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 20538 ;;		 -> EUSART1_Transmit_ISR(1), 
 20539 ;; Auto vars:     Size  Location     Type
 20540 ;;		None
 20541 ;; Return value:  Size  Location     Type
 20542 ;;                  1    wreg      void 
 20543 ;; Registers used:
 20544 ;;		wreg
 20545 ;; Tracked objects:
 20546 ;;		On entry : 0/0
 20547 ;;		On exit  : 0/0
 20548 ;;		Unchanged: 0/0
 20549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20550 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20553 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20554 ;;Total ram usage:        2 bytes
 20555 ;; Hardware stack levels used:    1
 20556 ;; Hardware stack levels required when called:    4
 20557 ;; This function calls:
 20558 ;;		Nothing
 20559 ;; This function is called by:
 20560 ;;		_EUSART1_Initialize
 20561 ;; This function uses a non-reentrant model
 20562 ;;
 20563                           
 20564                           
 20565                           ;psect for function _EUSART1_SetTxInterruptHandler
 20566  2720                     _EUSART1_SetTxInterruptHandler:
 20567  2720                     l5197:	
 20568                           ;incstack = 0
 20569                           ; Regs used in _EUSART1_SetTxInterruptHandler: [wreg]
 20570                           
 20571                           
 20572                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 20573  2720  0872               	movf	EUSART1_SetTxInterruptHandler@interruptHandler+1,w
 20574  2721  0143               	movlb	3	; select bank3
 20575  2722  00DA               	movwf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+384)
 20576  2723  0871               	movf	EUSART1_SetTxInterruptHandler@interruptHandler,w
 20577  2724  00D9               	movwf	_EUSART1_TxDefaultInterruptHandler^(0+384)
 20578  2725                     l252:
 20579  2725  0008               	return
 20580  2726                     __end_of_EUSART1_SetTxInterruptHandler:
 20581                           
 20582                           	psect	text54
 20583  271A                     __ptext54:	
 20584 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 20585 ;; Defined at:
 20586 ;;		line 280 in file "mcc_generated_files/eusart1.c"
 20587 ;; Parameters:    Size  Location     Type
 20588 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 20589 ;;		 -> EUSART1_Receive_ISR(1), 
 20590 ;; Auto vars:     Size  Location     Type
 20591 ;;		None
 20592 ;; Return value:  Size  Location     Type
 20593 ;;                  1    wreg      void 
 20594 ;; Registers used:
 20595 ;;		wreg
 20596 ;; Tracked objects:
 20597 ;;		On entry : 0/0
 20598 ;;		On exit  : 0/0
 20599 ;;		Unchanged: 0/0
 20600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20601 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20604 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20605 ;;Total ram usage:        2 bytes
 20606 ;; Hardware stack levels used:    1
 20607 ;; Hardware stack levels required when called:    4
 20608 ;; This function calls:
 20609 ;;		Nothing
 20610 ;; This function is called by:
 20611 ;;		_EUSART1_Initialize
 20612 ;; This function uses a non-reentrant model
 20613 ;;
 20614                           
 20615                           
 20616                           ;psect for function _EUSART1_SetRxInterruptHandler
 20617  271A                     _EUSART1_SetRxInterruptHandler:
 20618  271A                     l5195:	
 20619                           ;incstack = 0
 20620                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
 20621                           
 20622                           
 20623                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 20624  271A  0872               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
 20625  271B  0143               	movlb	3	; select bank3
 20626  271C  00D8               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+384)
 20627  271D  0871               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
 20628  271E  00D7               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+384)
 20629  271F                     l255:
 20630  271F  0008               	return
 20631  2720                     __end_of_EUSART1_SetRxInterruptHandler:
 20632                           
 20633                           	psect	text55
 20634  2714                     __ptext55:	
 20635 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 20636 ;; Defined at:
 20637 ;;		line 268 in file "mcc_generated_files/eusart1.c"
 20638 ;; Parameters:    Size  Location     Type
 20639 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 20640 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 20641 ;; Auto vars:     Size  Location     Type
 20642 ;;		None
 20643 ;; Return value:  Size  Location     Type
 20644 ;;                  1    wreg      void 
 20645 ;; Registers used:
 20646 ;;		wreg
 20647 ;; Tracked objects:
 20648 ;;		On entry : 0/0
 20649 ;;		On exit  : 0/0
 20650 ;;		Unchanged: 0/0
 20651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20652 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20655 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20656 ;;Total ram usage:        2 bytes
 20657 ;; Hardware stack levels used:    1
 20658 ;; Hardware stack levels required when called:    4
 20659 ;; This function calls:
 20660 ;;		Nothing
 20661 ;; This function is called by:
 20662 ;;		_EUSART1_Initialize
 20663 ;; This function uses a non-reentrant model
 20664 ;;
 20665                           
 20666                           
 20667                           ;psect for function _EUSART1_SetOverrunErrorHandler
 20668  2714                     _EUSART1_SetOverrunErrorHandler:
 20669  2714                     l5201:	
 20670                           ;incstack = 0
 20671                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
 20672                           
 20673                           
 20674                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
 20675  2714  0872               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
 20676  2715  0143               	movlb	3	; select bank3
 20677  2716  00D4               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+384)
 20678  2717  0871               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
 20679  2718  00D3               	movwf	_EUSART1_OverrunErrorHandler^(0+384)
 20680  2719                     l246:
 20681  2719  0008               	return
 20682  271A                     __end_of_EUSART1_SetOverrunErrorHandler:
 20683                           
 20684                           	psect	text56
 20685  270E                     __ptext56:	
 20686 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 20687 ;; Defined at:
 20688 ;;		line 264 in file "mcc_generated_files/eusart1.c"
 20689 ;; Parameters:    Size  Location     Type
 20690 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 20691 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 20692 ;; Auto vars:     Size  Location     Type
 20693 ;;		None
 20694 ;; Return value:  Size  Location     Type
 20695 ;;                  1    wreg      void 
 20696 ;; Registers used:
 20697 ;;		wreg
 20698 ;; Tracked objects:
 20699 ;;		On entry : 0/0
 20700 ;;		On exit  : 0/0
 20701 ;;		Unchanged: 0/0
 20702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20703 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20706 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20707 ;;Total ram usage:        2 bytes
 20708 ;; Hardware stack levels used:    1
 20709 ;; Hardware stack levels required when called:    4
 20710 ;; This function calls:
 20711 ;;		Nothing
 20712 ;; This function is called by:
 20713 ;;		_EUSART1_Initialize
 20714 ;; This function uses a non-reentrant model
 20715 ;;
 20716                           
 20717                           
 20718                           ;psect for function _EUSART1_SetFramingErrorHandler
 20719  270E                     _EUSART1_SetFramingErrorHandler:
 20720  270E                     l5199:	
 20721                           ;incstack = 0
 20722                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
 20723                           
 20724                           
 20725                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
 20726  270E  0872               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
 20727  270F  0143               	movlb	3	; select bank3
 20728  2710  00D6               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+384)
 20729  2711  0871               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
 20730  2712  00D5               	movwf	_EUSART1_FramingErrorHandler^(0+384)
 20731  2713                     l243:
 20732  2713  0008               	return
 20733  2714                     __end_of_EUSART1_SetFramingErrorHandler:
 20734                           
 20735                           	psect	text57
 20736  2708                     __ptext57:	
 20737 ;; *************** function _EUSART1_SetErrorHandler *****************
 20738 ;; Defined at:
 20739 ;;		line 272 in file "mcc_generated_files/eusart1.c"
 20740 ;; Parameters:    Size  Location     Type
 20741 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 20742 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 20743 ;; Auto vars:     Size  Location     Type
 20744 ;;		None
 20745 ;; Return value:  Size  Location     Type
 20746 ;;                  1    wreg      void 
 20747 ;; Registers used:
 20748 ;;		wreg
 20749 ;; Tracked objects:
 20750 ;;		On entry : 0/0
 20751 ;;		On exit  : 0/0
 20752 ;;		Unchanged: 0/0
 20753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20754 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20757 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20758 ;;Total ram usage:        2 bytes
 20759 ;; Hardware stack levels used:    1
 20760 ;; Hardware stack levels required when called:    4
 20761 ;; This function calls:
 20762 ;;		Nothing
 20763 ;; This function is called by:
 20764 ;;		_EUSART1_Initialize
 20765 ;; This function uses a non-reentrant model
 20766 ;;
 20767                           
 20768                           
 20769                           ;psect for function _EUSART1_SetErrorHandler
 20770  2708                     _EUSART1_SetErrorHandler:
 20771  2708                     l5203:	
 20772                           ;incstack = 0
 20773                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
 20774                           
 20775                           
 20776                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
 20777  2708  0872               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
 20778  2709  0143               	movlb	3	; select bank3
 20779  270A  00D2               	movwf	(_EUSART1_ErrorHandler+1)^(0+384)
 20780  270B  0871               	movf	EUSART1_SetErrorHandler@interruptHandler,w
 20781  270C  00D1               	movwf	_EUSART1_ErrorHandler^(0+384)
 20782  270D                     l249:
 20783  270D  0008               	return
 20784  270E                     __end_of_EUSART1_SetErrorHandler:
 20785                           
 20786                           	psect	text58
 20787  2702                     __ptext58:	
 20788 ;; *************** function _CLKREF_Initialize *****************
 20789 ;; Defined at:
 20790 ;;		line 58 in file "mcc_generated_files/clkref.c"
 20791 ;; Parameters:    Size  Location     Type
 20792 ;;		None
 20793 ;; Auto vars:     Size  Location     Type
 20794 ;;		None
 20795 ;; Return value:  Size  Location     Type
 20796 ;;                  1    wreg      void 
 20797 ;; Registers used:
 20798 ;;		wreg
 20799 ;; Tracked objects:
 20800 ;;		On entry : 0/0
 20801 ;;		On exit  : 0/0
 20802 ;;		Unchanged: 0/0
 20803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20808 ;;Total ram usage:        0 bytes
 20809 ;; Hardware stack levels used:    1
 20810 ;; Hardware stack levels required when called:    4
 20811 ;; This function calls:
 20812 ;;		Nothing
 20813 ;; This function is called by:
 20814 ;;		_SYSTEM_Initialize
 20815 ;; This function uses a non-reentrant model
 20816 ;;
 20817                           
 20818                           
 20819                           ;psect for function _CLKREF_Initialize
 20820  2702                     _CLKREF_Initialize:
 20821  2702                     l5503:	
 20822                           ;incstack = 0
 20823                           ; Regs used in _CLKREF_Initialize: [wreg]
 20824                           
 20825                           
 20826                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x03;
 20827  2702  3003               	movlw	3
 20828  2703  0151               	movlb	17	; select bank17
 20829  2704  0096               	movwf	22	;volatile
 20830                           
 20831                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x90;
 20832  2705  3090               	movlw	144
 20833  2706  0095               	movwf	21	;volatile
 20834  2707                     l283:
 20835  2707  0008               	return
 20836  2708                     __end_of_CLKREF_Initialize:
 20837                           
 20838                           	psect	text59
 20839  1801                     __ptext59:	
 20840 ;; *************** function _ADCC_Initialize *****************
 20841 ;; Defined at:
 20842 ;;		line 63 in file "mcc_generated_files/adcc.c"
 20843 ;; Parameters:    Size  Location     Type
 20844 ;;		None
 20845 ;; Auto vars:     Size  Location     Type
 20846 ;;		None
 20847 ;; Return value:  Size  Location     Type
 20848 ;;                  1    wreg      void 
 20849 ;; Registers used:
 20850 ;;		wreg, status,2
 20851 ;; Tracked objects:
 20852 ;;		On entry : 0/0
 20853 ;;		On exit  : 0/0
 20854 ;;		Unchanged: 0/0
 20855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20860 ;;Total ram usage:        0 bytes
 20861 ;; Hardware stack levels used:    1
 20862 ;; Hardware stack levels required when called:    4
 20863 ;; This function calls:
 20864 ;;		Nothing
 20865 ;; This function is called by:
 20866 ;;		_SYSTEM_Initialize
 20867 ;; This function uses a non-reentrant model
 20868 ;;
 20869                           
 20870                           
 20871                           ;psect for function _ADCC_Initialize
 20872  1801                     _ADCC_Initialize:
 20873  1801                     l5445:	
 20874                           ;incstack = 0
 20875                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 20876                           
 20877                           
 20878                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
 20879  1801  0141               	movlb	1	; select bank1
 20880  1802  018C               	clrf	12	;volatile
 20881                           
 20882                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
 20883  1803  018D               	clrf	13	;volatile
 20884                           
 20885                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
 20886  1804  018E               	clrf	14	;volatile
 20887                           
 20888                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
 20889  1805  018F               	clrf	15	;volatile
 20890                           
 20891                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
 20892  1806  0192               	clrf	18	;volatile
 20893                           
 20894                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
 20895  1807  0193               	clrf	19	;volatile
 20896                           
 20897                           ;mcc_generated_files/adcc.c: 79:     ADACCU = 0x00;
 20898  1808  0198               	clrf	24	;volatile
 20899                           
 20900                           ;mcc_generated_files/adcc.c: 81:     ADRPT = 0x00;
 20901  1809  019A               	clrf	26	;volatile
 20902                           
 20903                           ;mcc_generated_files/adcc.c: 83:     ADPCH = 0x00;
 20904  180A  019F               	clrf	31	;volatile
 20905  180B                     l5447:
 20906                           
 20907                           ;mcc_generated_files/adcc.c: 85:     ADACQL = 0x05;
 20908  180B  3005               	movlw	5
 20909  180C  0142               	movlb	2	; select bank2
 20910  180D  008C               	movwf	12	;volatile
 20911  180E                     l5449:
 20912                           
 20913                           ;mcc_generated_files/adcc.c: 87:     ADACQH = 0x00;
 20914  180E  018D               	clrf	13	;volatile
 20915  180F                     l5451:
 20916                           
 20917                           ;mcc_generated_files/adcc.c: 89:     ADCAP = 0x00;
 20918  180F  018E               	clrf	14	;volatile
 20919  1810                     l5453:
 20920                           
 20921                           ;mcc_generated_files/adcc.c: 91:     ADPREL = 0x00;
 20922  1810  018F               	clrf	15	;volatile
 20923  1811                     l5455:
 20924                           
 20925                           ;mcc_generated_files/adcc.c: 93:     ADPREH = 0x00;
 20926  1811  0190               	clrf	16	;volatile
 20927  1812                     l5457:
 20928                           
 20929                           ;mcc_generated_files/adcc.c: 95:     ADCON1 = 0x00;
 20930  1812  0192               	clrf	18	;volatile
 20931  1813                     l5459:
 20932                           
 20933                           ;mcc_generated_files/adcc.c: 97:     ADCON2 = 0x00;
 20934  1813  0193               	clrf	19	;volatile
 20935  1814                     l5461:
 20936                           
 20937                           ;mcc_generated_files/adcc.c: 99:     ADCON3 = 0x00;
 20938  1814  0194               	clrf	20	;volatile
 20939  1815                     l5463:
 20940                           
 20941                           ;mcc_generated_files/adcc.c: 101:     ADSTAT = 0x00;
 20942  1815  0195               	clrf	21	;volatile
 20943  1816                     l5465:
 20944                           
 20945                           ;mcc_generated_files/adcc.c: 103:     ADREF = 0x00;
 20946  1816  0196               	clrf	22	;volatile
 20947  1817                     l5467:
 20948                           
 20949                           ;mcc_generated_files/adcc.c: 105:     ADACT = 0x00;
 20950  1817  0197               	clrf	23	;volatile
 20951  1818                     l5469:
 20952                           
 20953                           ;mcc_generated_files/adcc.c: 107:     ADCLK = 0x00;
 20954  1818  0198               	clrf	24	;volatile
 20955                           
 20956                           ;mcc_generated_files/adcc.c: 109:     ADCON0 = 0x94;
 20957  1819  3094               	movlw	148
 20958  181A  0091               	movwf	17	;volatile
 20959  181B                     l362:
 20960  181B  0008               	return
 20961  181C                     __end_of_ADCC_Initialize:
 20962                           
 20963                           	psect	text60
 20964  272C                     __ptext60:	
 20965 ;; *************** function _EUSART1_is_rx_ready *****************
 20966 ;; Defined at:
 20967 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 20968 ;; Parameters:    Size  Location     Type
 20969 ;;		None
 20970 ;; Auto vars:     Size  Location     Type
 20971 ;;		None
 20972 ;; Return value:  Size  Location     Type
 20973 ;;                  1    wreg      _Bool 
 20974 ;; Registers used:
 20975 ;;		wreg, status,2, status,0
 20976 ;; Tracked objects:
 20977 ;;		On entry : 0/0
 20978 ;;		On exit  : 0/0
 20979 ;;		Unchanged: 0/0
 20980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20985 ;;Total ram usage:        0 bytes
 20986 ;; Hardware stack levels used:    1
 20987 ;; Hardware stack levels required when called:    4
 20988 ;; This function calls:
 20989 ;;		Nothing
 20990 ;; This function is called by:
 20991 ;;		_main
 20992 ;; This function uses a non-reentrant model
 20993 ;;
 20994                           
 20995                           
 20996                           ;psect for function _EUSART1_is_rx_ready
 20997  272C                     _EUSART1_is_rx_ready:
 20998  272C                     l5681:	
 20999                           ;incstack = 0
 21000                           ; Regs used in _EUSART1_is_rx_ready: [wreg+status,2+status,0]
 21001                           
 21002                           
 21003                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 21004  272C  0142               	movlb	2	; select bank2
 21005  272D  086B               	movf	_eusart1RxCount^(0+256),w	;volatile
 21006  272E  1D03               	btfss	3,2
 21007  272F  2F31               	goto	u6761
 21008  2730  2F33               	goto	u6760
 21009  2731                     u6761:
 21010  2731  3001               	movlw	1
 21011  2732  2F34               	goto	u6770
 21012  2733                     u6760:
 21013  2733  3000               	movlw	0
 21014  2734                     u6770:
 21015  2734                     l192:
 21016  2734  0008               	return
 21017  2735                     __end_of_EUSART1_is_rx_ready:
 21018                           
 21019                           	psect	intentry
 21020  0004                     __pintentry:	
 21021 ;; *************** function _INTERRUPT_InterruptManager *****************
 21022 ;; Defined at:
 21023 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 21024 ;; Parameters:    Size  Location     Type
 21025 ;;		None
 21026 ;; Auto vars:     Size  Location     Type
 21027 ;;		None
 21028 ;; Return value:  Size  Location     Type
 21029 ;;                  1    wreg      void 
 21030 ;; Registers used:
 21031 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21032 ;; Tracked objects:
 21033 ;;		On entry : 0/0
 21034 ;;		On exit  : 0/0
 21035 ;;		Unchanged: 0/0
 21036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21041 ;;Total ram usage:        0 bytes
 21042 ;; Hardware stack levels used:    1
 21043 ;; Hardware stack levels required when called:    3
 21044 ;; This function calls:
 21045 ;;		Absolute function
 21046 ;;		_EUSART1_Receive_ISR
 21047 ;;		_EUSART1_Transmit_ISR
 21048 ;; This function is called by:
 21049 ;;		Interrupt level 1
 21050 ;; This function uses a non-reentrant model
 21051 ;;
 21052                           
 21053  0004                     _INTERRUPT_InterruptManager:
 21054                           
 21055                           ;incstack = 0
 21056  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 21057                           
 21058                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 21059  0005  3180               	pagesel	$
 21060  0006                     i1l5735:
 21061                           
 21062                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
 21063  0006  1F0B               	btfss	11,6	;volatile
 21064  0007  2809               	goto	u683_21
 21065  0008  280A               	goto	u683_20
 21066  0009                     u683_21:
 21067  0009  2829               	goto	i1l276
 21068  000A                     u683_20:
 21069  000A                     i1l5737:
 21070                           
 21071                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE3bits.TX1IE == 1 && PIR3bits.TX1IF == 1)
 21072  000A  014E               	movlb	14	; select bank14
 21073  000B  1E19               	btfss	25,4	;volatile
 21074  000C  280E               	goto	u684_21
 21075  000D  280F               	goto	u684_20
 21076  000E                     u684_21:
 21077  000E  281A               	goto	i1l271
 21078  000F                     u684_20:
 21079  000F                     i1l5739:
 21080  000F  1E0F               	btfss	15,4	;volatile
 21081  0010  2812               	goto	u685_21
 21082  0011  2813               	goto	u685_20
 21083  0012                     u685_21:
 21084  0012  281A               	goto	i1l271
 21085  0013                     u685_20:
 21086  0013                     i1l5741:
 21087                           
 21088                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             EUSART1_TxDefaultInterruptHandler();
 21089  0013  0143               	movlb	3	; select bank3
 21090  0014  085A               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+384),w
 21091  0015  008A               	movwf	10
 21092  0016  0859               	movf	_EUSART1_TxDefaultInterruptHandler^(0+384),w
 21093  0017  000A               	callw
 21094  0018  3180               	pagesel	$
 21095                           
 21096                           ;mcc_generated_files/interrupt_manager.c: 60:         }
 21097  0019  2829               	goto	i1l276
 21098  001A                     i1l271:	
 21099                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 21100                           
 21101  001A  1E99               	btfss	25,5	;volatile
 21102  001B  281D               	goto	u686_21
 21103  001C  281E               	goto	u686_20
 21104  001D                     u686_21:
 21105  001D  2829               	goto	i1l272
 21106  001E                     u686_20:
 21107  001E                     i1l5743:
 21108  001E  1E8F               	btfss	15,5	;volatile
 21109  001F  2821               	goto	u687_21
 21110  0020  2822               	goto	u687_20
 21111  0021                     u687_21:
 21112  0021  2829               	goto	i1l272
 21113  0022                     u687_20:
 21114  0022                     i1l5745:
 21115                           
 21116                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART1_RxDefaultInterruptHandler();
 21117  0022  0143               	movlb	3	; select bank3
 21118  0023  0858               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+384),w
 21119  0024  008A               	movwf	10
 21120  0025  0857               	movf	_EUSART1_RxDefaultInterruptHandler^(0+384),w
 21121  0026  000A               	callw
 21122  0027  3180               	pagesel	$
 21123                           
 21124                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 21125  0028  2829               	goto	i1l276
 21126  0029                     i1l272:
 21127  0029                     i1l276:	
 21128                           ;mcc_generated_files/interrupt_manager.c: 69:     }
 21129                           
 21130  0029  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 21131  002A  0009               	retfie
 21132  002B                     __end_of_INTERRUPT_InterruptManager:
 21133                           
 21134                           	psect	text62
 21135  18BF                     __ptext62:	
 21136 ;; *************** function _EUSART1_Transmit_ISR *****************
 21137 ;; Defined at:
 21138 ;;		line 197 in file "mcc_generated_files/eusart1.c"
 21139 ;; Parameters:    Size  Location     Type
 21140 ;;		None
 21141 ;; Auto vars:     Size  Location     Type
 21142 ;;		None
 21143 ;; Return value:  Size  Location     Type
 21144 ;;                  1    wreg      void 
 21145 ;; Registers used:
 21146 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 21147 ;; Tracked objects:
 21148 ;;		On entry : 0/0
 21149 ;;		On exit  : 0/0
 21150 ;;		Unchanged: 0/0
 21151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21154 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21155 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21156 ;;Total ram usage:        1 bytes
 21157 ;; Hardware stack levels used:    1
 21158 ;; This function calls:
 21159 ;;		Nothing
 21160 ;; This function is called by:
 21161 ;;		_EUSART1_Initialize
 21162 ;;		_INTERRUPT_InterruptManager
 21163 ;; This function uses a non-reentrant model
 21164 ;;
 21165                           
 21166                           
 21167                           ;psect for function _EUSART1_Transmit_ISR
 21168  18BF                     _EUSART1_Transmit_ISR:
 21169  18BF                     i1l5685:	
 21170                           ;incstack = 0
 21171                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 21172                           
 21173                           
 21174                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 21175  18BF  3040               	movlw	64
 21176  18C0  0143               	movlb	3	; select bank3
 21177  18C1  025B               	subwf	_eusart1TxBufferRemaining^(0+384),w	;volatile
 21178  18C2  1803               	skipnc
 21179  18C3  28C5               	goto	u678_21
 21180  18C4  28C6               	goto	u678_20
 21181  18C5                     u678_21:
 21182  18C5  28DF               	goto	i1l217
 21183  18C6                     u678_20:
 21184  18C6                     i1l5687:
 21185                           
 21186                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 21187  18C6  0142               	movlb	2	; select bank2
 21188  18C7  086D               	movf	_eusart1TxTail^(0+256),w
 21189  18C8  3EA0               	addlw	(low (_eusart1TxBuffer| (0+512)))& (0+255)
 21190  18C9  0086               	movwf	6
 21191  18CA  3002               	movlw	2	; select bank5/6
 21192  18CB  0087               	movwf	7
 21193  18CC  0801               	movf	1,w
 21194  18CD  009A               	movwf	26	;volatile
 21195  18CE                     i1l5689:
 21196  18CE  3001               	movlw	1
 21197  18CF  00F0               	movwf	??_EUSART1_Transmit_ISR
 21198  18D0  0870               	movf	??_EUSART1_Transmit_ISR,w
 21199  18D1  07ED               	addwf	_eusart1TxTail^(0+256),f	;volatile
 21200  18D2                     i1l5691:
 21201                           
 21202                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 21203  18D2  3040               	movlw	64
 21204  18D3  026D               	subwf	_eusart1TxTail^(0+256),w	;volatile
 21205  18D4  1C03               	skipc
 21206  18D5  28D7               	goto	u679_21
 21207  18D6  28D8               	goto	u679_20
 21208  18D7                     u679_21:
 21209  18D7  28D9               	goto	i1l5695
 21210  18D8                     u679_20:
 21211  18D8                     i1l5693:
 21212                           
 21213                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
 21214  18D8  01ED               	clrf	_eusart1TxTail^(0+256)	;volatile
 21215  18D9                     i1l5695:
 21216                           
 21217                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
 21218  18D9  3001               	movlw	1
 21219  18DA  00F0               	movwf	??_EUSART1_Transmit_ISR
 21220  18DB  0870               	movf	??_EUSART1_Transmit_ISR,w
 21221  18DC  0143               	movlb	3	; select bank3
 21222  18DD  07DB               	addwf	_eusart1TxBufferRemaining^(0+384),f	;volatile
 21223                           
 21224                           ;mcc_generated_files/eusart1.c: 209:     }
 21225  18DE  28E1               	goto	i1l220
 21226  18DF                     i1l217:	
 21227                           ;mcc_generated_files/eusart1.c: 210:     else
 21228                           
 21229                           
 21230                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
 21231  18DF  014E               	movlb	14	; select bank14
 21232  18E0  1219               	bcf	25,4	;volatile
 21233  18E1                     i1l220:
 21234  18E1  0008               	return
 21235  18E2                     __end_of_EUSART1_Transmit_ISR:
 21236                           
 21237                           	psect	text63
 21238  1B31                     __ptext63:	
 21239 ;; *************** function _EUSART1_Receive_ISR *****************
 21240 ;; Defined at:
 21241 ;;		line 216 in file "mcc_generated_files/eusart1.c"
 21242 ;; Parameters:    Size  Location     Type
 21243 ;;		None
 21244 ;; Auto vars:     Size  Location     Type
 21245 ;;		None
 21246 ;; Return value:  Size  Location     Type
 21247 ;;                  1    wreg      void 
 21248 ;; Registers used:
 21249 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21250 ;; Tracked objects:
 21251 ;;		On entry : 0/0
 21252 ;;		On exit  : 0/0
 21253 ;;		Unchanged: 0/0
 21254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21259 ;;Total ram usage:        0 bytes
 21260 ;; Hardware stack levels used:    1
 21261 ;; Hardware stack levels required when called:    2
 21262 ;; This function calls:
 21263 ;;		Absolute function
 21264 ;;		_EUSART1_DefaultErrorHandler
 21265 ;;		_EUSART1_DefaultFramingErrorHandler
 21266 ;;		_EUSART1_DefaultOverrunErrorHandler
 21267 ;;		_EUSART1_RxDataHandler
 21268 ;; This function is called by:
 21269 ;;		_EUSART1_Initialize
 21270 ;;		_INTERRUPT_InterruptManager
 21271 ;; This function uses a non-reentrant model
 21272 ;;
 21273                           
 21274                           
 21275                           ;psect for function _EUSART1_Receive_ISR
 21276  1B31                     _EUSART1_Receive_ISR:
 21277  1B31                     i1l5697:	
 21278                           ;incstack = 0
 21279                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21280                           
 21281                           
 21282                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 21283  1B31  087C               	movf	_eusart1RxHead,w	;volatile
 21284  1B32  3EA0               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 21285  1B33  0086               	movwf	6
 21286  1B34  3001               	movlw	1	; select bank3/4
 21287  1B35  0087               	movwf	7
 21288  1B36  0181               	clrf	1
 21289  1B37                     i1l5699:
 21290                           
 21291                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
 21292  1B37  0142               	movlb	2	; select bank2
 21293  1B38  1D1D               	btfss	29,2	;volatile
 21294  1B39  2B3B               	goto	u680_21
 21295  1B3A  2B3C               	goto	u680_20
 21296  1B3B                     u680_21:
 21297  1B3B  2B48               	goto	i1l5705
 21298  1B3C                     u680_20:
 21299  1B3C                     i1l5701:
 21300                           
 21301                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 21302  1B3C  087C               	movf	_eusart1RxHead,w	;volatile
 21303  1B3D  3EA0               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 21304  1B3E  0086               	movwf	6
 21305  1B3F  3001               	movlw	1	; select bank3/4
 21306  1B40  0087               	movwf	7
 21307  1B41  1481               	bsf	1,1
 21308  1B42                     i1l5703:
 21309                           
 21310                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
 21311  1B42  0143               	movlb	3	; select bank3
 21312  1B43  0856               	movf	(_EUSART1_FramingErrorHandler+1)^(0+384),w
 21313  1B44  008A               	movwf	10
 21314  1B45  0855               	movf	_EUSART1_FramingErrorHandler^(0+384),w
 21315  1B46  000A               	callw
 21316  1B47  319B               	pagesel	$
 21317  1B48                     i1l5705:
 21318                           
 21319                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
 21320  1B48  0142               	movlb	2	; select bank2
 21321  1B49  1C9D               	btfss	29,1	;volatile
 21322  1B4A  2B4C               	goto	u681_21
 21323  1B4B  2B4D               	goto	u681_20
 21324  1B4C                     u681_21:
 21325  1B4C  2B59               	goto	i1l5711
 21326  1B4D                     u681_20:
 21327  1B4D                     i1l5707:
 21328                           
 21329                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 21330  1B4D  087C               	movf	_eusart1RxHead,w	;volatile
 21331  1B4E  3EA0               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 21332  1B4F  0086               	movwf	6
 21333  1B50  3001               	movlw	1	; select bank3/4
 21334  1B51  0087               	movwf	7
 21335  1B52  1501               	bsf	1,2
 21336  1B53                     i1l5709:
 21337                           
 21338                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
 21339  1B53  0143               	movlb	3	; select bank3
 21340  1B54  0854               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+384),w
 21341  1B55  008A               	movwf	10
 21342  1B56  0853               	movf	_EUSART1_OverrunErrorHandler^(0+384),w
 21343  1B57  000A               	callw
 21344  1B58  319B               	pagesel	$
 21345  1B59                     i1l5711:
 21346                           
 21347                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 21348  1B59  087C               	movf	_eusart1RxHead,w	;volatile
 21349  1B5A  3EA0               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 21350  1B5B  0086               	movwf	6
 21351  1B5C  3001               	movlw	1	; select bank3/4
 21352  1B5D  0087               	movwf	7
 21353  1B5E  0801               	movf	1,w
 21354  1B5F  1903               	btfsc	3,2
 21355  1B60  2B62               	goto	u682_21
 21356  1B61  2B63               	goto	u682_20
 21357  1B62                     u682_21:
 21358  1B62  2B6A               	goto	i1l5715
 21359  1B63                     u682_20:
 21360  1B63                     i1l5713:
 21361                           
 21362                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
 21363  1B63  0143               	movlb	3	; select bank3
 21364  1B64  0852               	movf	(_EUSART1_ErrorHandler+1)^(0+384),w
 21365  1B65  008A               	movwf	10
 21366  1B66  0851               	movf	_EUSART1_ErrorHandler^(0+384),w
 21367  1B67  000A               	callw
 21368  1B68  319B               	pagesel	$
 21369                           
 21370                           ;mcc_generated_files/eusart1.c: 233:     } else {
 21371  1B69  2B6D               	goto	i1l227
 21372  1B6A                     i1l5715:
 21373                           
 21374                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
 21375  1B6A  31A7  27B2  319B   	fcall	_EUSART1_RxDataHandler
 21376  1B6D                     i1l227:
 21377  1B6D  0008               	return
 21378  1B6E                     __end_of_EUSART1_Receive_ISR:
 21379                           
 21380                           	psect	text64
 21381  0800                     __ptext64:	
 21382 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 21383 ;; Defined at:
 21384 ;;		line 252 in file "mcc_generated_files/eusart1.c"
 21385 ;; Parameters:    Size  Location     Type
 21386 ;;		None
 21387 ;; Auto vars:     Size  Location     Type
 21388 ;;		None
 21389 ;; Return value:  Size  Location     Type
 21390 ;;                  1    wreg      void 
 21391 ;; Registers used:
 21392 ;;		None
 21393 ;; Tracked objects:
 21394 ;;		On entry : 0/0
 21395 ;;		On exit  : 0/0
 21396 ;;		Unchanged: 0/0
 21397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21402 ;;Total ram usage:        0 bytes
 21403 ;; Hardware stack levels used:    1
 21404 ;; This function calls:
 21405 ;;		Nothing
 21406 ;; This function is called by:
 21407 ;;		_EUSART1_Initialize
 21408 ;;		_EUSART1_Receive_ISR
 21409 ;; This function uses a non-reentrant model
 21410 ;;
 21411                           
 21412                           
 21413                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 21414  0800                     _EUSART1_DefaultOverrunErrorHandler:
 21415  0800                     i1l5527:	
 21416                           ;incstack = 0
 21417                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 21418                           
 21419                           
 21420                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
 21421  0800  0142               	movlb	2	; select bank2
 21422  0801  121D               	bcf	29,4	;volatile
 21423                           
 21424                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
 21425  0802  161D               	bsf	29,4	;volatile
 21426  0803                     i1l237:
 21427  0803  0008               	return
 21428  0804                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 21429                           
 21430                           	psect	text65
 21431  0003                     __ptext65:	
 21432 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 21433 ;; Defined at:
 21434 ;;		line 250 in file "mcc_generated_files/eusart1.c"
 21435 ;; Parameters:    Size  Location     Type
 21436 ;;		None
 21437 ;; Auto vars:     Size  Location     Type
 21438 ;;		None
 21439 ;; Return value:  Size  Location     Type
 21440 ;;                  1    wreg      void 
 21441 ;; Registers used:
 21442 ;;		None
 21443 ;; Tracked objects:
 21444 ;;		On entry : 0/0
 21445 ;;		On exit  : 0/0
 21446 ;;		Unchanged: 0/0
 21447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21452 ;;Total ram usage:        0 bytes
 21453 ;; Hardware stack levels used:    1
 21454 ;; This function calls:
 21455 ;;		Nothing
 21456 ;; This function is called by:
 21457 ;;		_EUSART1_Initialize
 21458 ;;		_EUSART1_Receive_ISR
 21459 ;; This function uses a non-reentrant model
 21460 ;;
 21461                           
 21462                           
 21463                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 21464  0003                     _EUSART1_DefaultFramingErrorHandler:
 21465  0003                     i1l234:	
 21466                           ;incstack = 0
 21467                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 21468                           
 21469  0003  0008               	return
 21470  0004                     __end_of_EUSART1_DefaultFramingErrorHandler:
 21471                           
 21472                           	psect	text66
 21473  26FE                     __ptext66:	
 21474 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 21475 ;; Defined at:
 21476 ;;		line 260 in file "mcc_generated_files/eusart1.c"
 21477 ;; Parameters:    Size  Location     Type
 21478 ;;		None
 21479 ;; Auto vars:     Size  Location     Type
 21480 ;;		None
 21481 ;; Return value:  Size  Location     Type
 21482 ;;                  1    wreg      void 
 21483 ;; Registers used:
 21484 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21485 ;; Tracked objects:
 21486 ;;		On entry : 0/0
 21487 ;;		On exit  : 0/0
 21488 ;;		Unchanged: 0/0
 21489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21494 ;;Total ram usage:        0 bytes
 21495 ;; Hardware stack levels used:    1
 21496 ;; Hardware stack levels required when called:    1
 21497 ;; This function calls:
 21498 ;;		_EUSART1_RxDataHandler
 21499 ;; This function is called by:
 21500 ;;		_EUSART1_Initialize
 21501 ;;		_EUSART1_Receive_ISR
 21502 ;; This function uses a non-reentrant model
 21503 ;;
 21504                           
 21505                           
 21506                           ;psect for function _EUSART1_DefaultErrorHandler
 21507  26FE                     _EUSART1_DefaultErrorHandler:
 21508  26FE                     i1l5529:	
 21509                           ;incstack = 0
 21510                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 21511                           
 21512                           
 21513                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
 21514  26FE  31A7  27B2  31A6   	fcall	_EUSART1_RxDataHandler
 21515  2701                     i1l240:
 21516  2701  0008               	return
 21517  2702                     __end_of_EUSART1_DefaultErrorHandler:
 21518                           
 21519                           	psect	text67
 21520  27B2                     __ptext67:	
 21521 ;; *************** function _EUSART1_RxDataHandler *****************
 21522 ;; Defined at:
 21523 ;;		line 240 in file "mcc_generated_files/eusart1.c"
 21524 ;; Parameters:    Size  Location     Type
 21525 ;;		None
 21526 ;; Auto vars:     Size  Location     Type
 21527 ;;		None
 21528 ;; Return value:  Size  Location     Type
 21529 ;;                  1    wreg      void 
 21530 ;; Registers used:
 21531 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 21532 ;; Tracked objects:
 21533 ;;		On entry : 0/0
 21534 ;;		On exit  : 0/0
 21535 ;;		Unchanged: 0/0
 21536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21539 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21540 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21541 ;;Total ram usage:        1 bytes
 21542 ;; Hardware stack levels used:    1
 21543 ;; This function calls:
 21544 ;;		Nothing
 21545 ;; This function is called by:
 21546 ;;		_EUSART1_Receive_ISR
 21547 ;;		_EUSART1_DefaultErrorHandler
 21548 ;; This function uses a non-reentrant model
 21549 ;;
 21550                           
 21551                           
 21552                           ;psect for function _EUSART1_RxDataHandler
 21553  27B2                     _EUSART1_RxDataHandler:
 21554  27B2                     i1l5205:	
 21555                           ;incstack = 0
 21556                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 21557                           
 21558                           
 21559                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 21560  27B2  0142               	movlb	2	; select bank2
 21561  27B3  0819               	movf	25,w	;volatile
 21562  27B4  00F0               	movwf	??_EUSART1_RxDataHandler
 21563  27B5  087C               	movf	_eusart1RxHead,w
 21564  27B6  3EB0               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 21565  27B7  0086               	movwf	6
 21566  27B8  3001               	movlw	1	; select bank3/4
 21567  27B9  0087               	movwf	7
 21568  27BA  0870               	movf	??_EUSART1_RxDataHandler,w
 21569  27BB  0081               	movwf	1
 21570  27BC                     i1l5207:
 21571  27BC  3001               	movlw	1
 21572  27BD  00F0               	movwf	??_EUSART1_RxDataHandler
 21573  27BE  0870               	movf	??_EUSART1_RxDataHandler,w
 21574  27BF  07FC               	addwf	_eusart1RxHead,f	;volatile
 21575  27C0                     i1l5209:
 21576                           
 21577                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 21578  27C0  3010               	movlw	16
 21579  27C1  027C               	subwf	_eusart1RxHead,w	;volatile
 21580  27C2  1C03               	skipc
 21581  27C3  2FC5               	goto	u640_21
 21582  27C4  2FC6               	goto	u640_20
 21583  27C5                     u640_21:
 21584  27C5  2FC7               	goto	i1l5213
 21585  27C6                     u640_20:
 21586  27C6                     i1l5211:
 21587                           
 21588                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
 21589  27C6  01FC               	clrf	_eusart1RxHead	;volatile
 21590  27C7                     i1l5213:
 21591                           
 21592                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
 21593  27C7  3001               	movlw	1
 21594  27C8  00F0               	movwf	??_EUSART1_RxDataHandler
 21595  27C9  0870               	movf	??_EUSART1_RxDataHandler,w
 21596  27CA  07EB               	addwf	_eusart1RxCount^(0+256),f	;volatile
 21597  27CB                     i1l231:
 21598  27CB  0008               	return
 21599  27CC                     __end_of_EUSART1_RxDataHandler:
 21600  007E                     btemp	set	126	;btemp
 21601  007E                     int$flags	set	126
 21602  007E                     wtemp0	set	126
 21603                           
 21604                           	psect	config
 21605                           
 21606                           ;Config register CONFIG1 @ 0x8007
 21607                           ;	External Oscillator mode selection bits
 21608                           ;	FEXTOSC = OFF, Oscillator not enabled
 21609                           ;	Power-up default value for COSC bits
 21610                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 21611                           ;	Clock Out Enable bit
 21612                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 21613                           ;	Clock Switch Enable bit
 21614                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 21615                           ;	Fail-Safe Clock Monitor Enable bit
 21616                           ;	FCMEN = ON, FSCM timer enabled
 21617  8007                     	org	32775
 21618  8007  3FEC               	dw	16364
 21619                           
 21620                           ;Config register CONFIG2 @ 0x8008
 21621                           ;	Master Clear Enable bit
 21622                           ;	MCLRE = ON, MCLR pin is Master Clear function
 21623                           ;	Power-up Timer Enable bit
 21624                           ;	PWRTS = OFF, PWRT disabled
 21625                           ;	Low-Power BOR enable bit
 21626                           ;	LPBOREN = OFF, ULPBOR disabled
 21627                           ;	Brown-out reset enable bits
 21628                           ;	BOREN = OFF, Brown-out reset disabled
 21629                           ;	Brown-out Reset Voltage Selection
 21630                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
 21631                           ;	Zero-cross detect disable
 21632                           ;	ZCDDIS = OFF, Zero-cross detect circuit is disabled at POR.
 21633                           ;	Peripheral Pin Select one-way control
 21634                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 21635                           ;	Stack Overflow/Underflow Reset Enable bit
 21636                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 21637  8008                     	org	32776
 21638  8008  3F3F               	dw	16191
 21639                           
 21640                           ;Config register CONFIG3 @ 0x8009
 21641                           ;	WDT Period Select bits
 21642                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 21643                           ;	WDT operating mode
 21644                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 21645                           ;	WDT Window Select bits
 21646                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 21647                           ;	WDT input clock selector
 21648                           ;	WDTCCS = SC, Software Control
 21649  8009                     	org	32777
 21650  8009  3F9F               	dw	16287
 21651                           
 21652                           ;Config register CONFIG4 @ 0x800A
 21653                           ;	Boot Block Size Selection bits
 21654                           ;	BBSIZE = BB512, 512 words boot block size
 21655                           ;	Boot Block Enable bit
 21656                           ;	BBEN = OFF, Boot Block disabled
 21657                           ;	SAF Enable bit
 21658                           ;	SAFEN = OFF, SAF disabled
 21659                           ;	Application Block Write Protection bit
 21660                           ;	WRTAPP = OFF, Application Block not write protected
 21661                           ;	Boot Block Write Protection bit
 21662                           ;	WRTB = OFF, Boot Block not write protected
 21663                           ;	Configuration Register Write Protection bit
 21664                           ;	WRTC = OFF, Configuration Register not write protected
 21665                           ;	Data EEPROM write protection bit
 21666                           ;	WRTD = OFF, Data EEPROM NOT write protected
 21667                           ;	Storage Area Flash Write Protection bit
 21668                           ;	WRTSAF = OFF, SAF not write protected
 21669                           ;	Low Voltage Programming Enable bit
 21670                           ;	LVP = OFF, High Voltage on MCLR/Vpp must be used for programming
 21671  800A                     	org	32778
 21672  800A  1FFF               	dw	8191
 21673                           
 21674                           ;Config register CONFIG5 @ 0x800B
 21675                           ;	UserNVM Program memory code protection bit
 21676                           ;	CP = OFF, UserNVM code protection disabled
 21677  800B                     	org	32779
 21678  800B  3FFF               	dw	16383

Data Sizes:
    Strings     274
    Constant    63
    Data        0
    BSS         198
    Persistent  43
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80     76      80
    BANK3            80      0      60
    BANK4            80      0      80
    BANK5            80      0      64
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_22(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_22(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK2[3]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK2[3]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_17(CODE[4]), STR_16(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_17(CODE[4]), STR_16(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 30
		 -> ADC_test@sbuf(BANK2[30]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_11(CODE[27]), STR_10(CODE[27]), STR_9(CODE[27]), STR_8(CODE[28]), 
		 -> STR_7(CODE[29]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_11(CODE[27]), STR_10(CODE[27]), STR_9(CODE[27]), STR_8(CODE[28]), 
		 -> STR_7(CODE[29]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 29
		 -> STR_11(CODE[27]), STR_10(CODE[27]), STR_9(CODE[27]), STR_8(CODE[28]), 
		 -> STR_7(CODE[29]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_11(CODE[27]), STR_10(CODE[27]), STR_9(CODE[27]), STR_8(CODE[28]), 
		 -> STR_7(CODE[29]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 30
		 -> ADC_test@sbuf(BANK2[30]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK2[2]), 

    S2030_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 30
		 -> ADC_test@sbuf(BANK2[30]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 30
		 -> ADC_test@sbuf(BANK2[30]), 

    write@pt	PTR unsigned char  size(2) Largest target is 30
		 -> sweep@aux(BANK0[7]), ADC_test@sbuf(BANK2[30]), 

    _puts@pt	PTR unsigned char  size(2) Largest target is 32
		 -> STR_6(CODE[32]), STR_5(CODE[30]), STR_4(CODE[26]), STR_3(CODE[26]), 
		 -> STR_2(CODE[30]), STR_1(CODE[3]), 

    calculate_checksum@data	PTR unsigned char  size(1) Largest target is 7
		 -> sweep@aux(BANK0[7]), 

    measure@Q	PTR short  size(1) Largest target is 2
		 -> sweep@Q(BANK0[2]), 

    measure@I	PTR short  size(1) Largest target is 2
		 -> sweep@I(BANK0[2]), 

    setFilt@asic	PTR struct . size(1) Largest target is 6
		 -> sweep@asic(BANK0[6]), tester_initialize@asic(BANK0[6]), 

    setFreq@asic	PTR struct . size(1) Largest target is 6
		 -> sweep@asic(BANK0[6]), tester_initialize@asic(BANK0[6]), 

    setGain@asic	PTR struct . size(1) Largest target is 6
		 -> sweep@asic(BANK0[6]), tester_initialize@asic(BANK0[6]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _sweep->_measure
    _tester_initialize->_config
    _tester_initialize->_setFilt
    _measure->_config
    _write->_EUSART1_Write
    _efgtoa->___fltol
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    ___flmul->__Umul8_16
    _atoi->___wmul
    _atoi->_isdigit
    __puts->_EUSART1_Write
    _SYSTEM_Initialize->_EUSART1_Initialize
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART1_Transmit_ISR
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _sweep->_measure
    _vfprintf->_vfpfcnvrt
    _efgtoa->_floorf
    _pad->_fputs
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_mess_handler
    _mess_handler->_ADC_test
    _ADC_test->_sprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   56112
                                             73 BANK2      3     3      0
                _EUSART1_is_rx_ready
                  _SYSTEM_Initialize
                       _mess_handler
                  _tester_initialize
 ---------------------------------------------------------------------------------
 (1) _mess_handler                                         3     3      0   53255
                                             70 BANK2      3     3      0
                           _ADC_test
                       _EUSART1_Read
                              __puts
                              _sweep
 ---------------------------------------------------------------------------------
 (2) _sweep                                               25    25      0    7719
                                             16 BANK0     25    25      0
                 _calculate_checksum
                            _measure
                            _setFilt
                            _setFreq
                            _setGain
                  _tester_initialize
                              _write
 ---------------------------------------------------------------------------------
 (1) _tester_initialize                                    9     9      0    2364
                                              9 COMMON     1     1      0
                                              0 BANK0      8     8      0
                             _config
                            _setFilt
                            _setFreq
                            _setGain
 ---------------------------------------------------------------------------------
 (2) _setGain                                              4     3      1     767
                                              1 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _setFreq                                              4     3      1     417
                                              1 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _setFilt                                              8     7      1     375
                                              1 COMMON     8     7      1
 ---------------------------------------------------------------------------------
 (3) _measure                                             18    11      7    1285
                                              9 COMMON     2     2      0
                                              0 BANK0     16     9      7
           _ADCC_GetSingleConversion
                             _config
 ---------------------------------------------------------------------------------
 (2) _config                                              10     4      6     559
                                              1 COMMON     8     2      6
 ---------------------------------------------------------------------------------
 (3) _calculate_checksum                                   6     5      1     223
                                              1 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         2     2      0      24
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ADC_test                                            39    39      0   44888
                                             31 BANK2     39    39      0
           _ADCC_GetSingleConversion
                            ___fldiv
                            ___flmul
                           ___xxtofl
                              __puts
                            _sprintf
                              _write
 ---------------------------------------------------------------------------------
 (3) _write                                                6     3      3     812
                                              3 COMMON     6     3      3
                      _EUSART1_Write
                _EUSART1_is_tx_ready
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             16    10      6   35194
                                             15 BANK2     16    10      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     5      3   34210
                                             72 BANK1      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           47    45      2   33713
                                             78 BANK0      2     0      2
                                             66 BANK1      6     6      0
                                              0 BANK2     15    15      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _strncmp                                              9     5      4     410
                                              1 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              66    61      5   27158
                                              0 BANK1     66    61      5
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2    1142
                                              7 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     551
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                               8     6      2     641
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (7) _pad                                                  9     6      3    3184
                                             10 COMMON     1     1      0
                                              7 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               5     3      2     123
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                8     7      1    1226
                                              9 COMMON     1     0      1
                                              0 BANK0      7     7      0
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                8     5      3     834
                                              1 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     490
                                             58 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       16    12      4     287
                                              1 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             11     7      4     381
                                              1 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    3727
                                             32 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             20    12      8    3302
                                              1 COMMON     8     0      8
                                              0 BANK0     12    12      0
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     121
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             26    18      8    4089
                                              6 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) __Umul8_16                                            9     7      2     799
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8     942
                                             32 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     490
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             26    18      8    2641
                                             32 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              7     3      4     448
                                              1 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              9     5      4     452
                                              1 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1417
                                              7 COMMON     2     0      2
                                              0 BANK0     13    13      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              5     3      2     207
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     244
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) __puts                                                6     4      2     590
                                              3 COMMON     6     4      2
                      _EUSART1_Write
                _EUSART1_is_tx_ready
 ---------------------------------------------------------------------------------
 (4) _EUSART1_is_tx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Write                                        2     2      0      44
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     702
                                              1 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) _ADCC_GetSingleConversion                             4     1      3      22
                                              1 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                    _ADCC_Initialize
                  _CLKREF_Initialize
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   1     1      0     490
                                              3 COMMON     1     1      0
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          0     0      0       0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Transmit_ISR                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_is_rx_ready
   _SYSTEM_Initialize
     _ADCC_Initialize
     _CLKREF_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _mess_handler
     _ADC_test
       _ADCC_GetSingleConversion
       ___fldiv
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl
       __puts
         _EUSART1_Write
         _EUSART1_is_tx_ready
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fleq
               ___flge
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
               ___flmul
                 __Umul8_16
                 ___xxtofl (ARG)
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _strncmp
             _tolower
               _isupper
       _write
         _EUSART1_Write
         _EUSART1_is_tx_ready
     _EUSART1_Read
     __puts
       _EUSART1_Write
       _EUSART1_is_tx_ready
     _sweep
       _calculate_checksum
       _measure
         _ADCC_GetSingleConversion
         _config
       _setFilt
       _setFreq
       _setGain
       _tester_initialize
         _config
         _setFilt
         _setFreq
         _setGain
       _write
         _EUSART1_Write
         _EUSART1_is_tx_ready
   _tester_initialize
     _config
     _setFilt
     _setFreq
     _setGain

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     1C9       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     50      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50     4C      50      10      100.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      3C      12       75.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      50      14      100.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      40      16       80.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              20      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     1C9      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Oct 13 11:13:20 2021

                      _eusart1TxBufferRemaining 01DB                                    ___fldiv@aexp 0059  
                                  ___fldiv@bexp 0058                                    ___fldiv@sign 0051  
                                            l43 2781                                              l46 2747  
                                            l49 2751                                    ___awdiv@sign 0077  
                           ___wmul@multiplicand 0073                             __Umul8_16@word_mpld 0077  
                                           l210 1984                                             l211 198D  
                                           l108 1A8F                                             l205 1A30  
                                           l214 19A8                                             l243 2713  
                                           l252 2725                                             l501 1E60  
                                           l246 2719                                             l255 271F  
                                           l192 2734                                             l512 1E78  
                                           l504 1E64                                             l249 270D  
                                           l513 1E83                                             l362 181B  
                                           l186 1C2C                                             l283 2707  
                                           l531 1EAC                                             l507 1E66  
                                           l611 13F4                                             l524 1E9B  
                                           l516 1E87                                             l540 1BAB  
                                           l189 273D                                             l525 1EA6  
                                           l374 2765                                             l519 1E89  
                                           l543 197C                                             l536 1EBE  
                                           l528 1EAA                                             l616 12E5  
                                           l377 276E                                             l641 1A02  
                                           l537 1EC7                                             l650 18BE  
                                           l626 27FF                                             l618 1306  
                                           l546 1A5F                                             l812 1826  
                                           l814 183A                                             l478 1B22  
                                           l495 1E51                                             l591 1BEA  
                                           l594 0CFC                                             l498 1E59  
                                           l588 19D4                                             l599 132D  
                                           l965 1DDC                                             l981 1C4A  
                                           l982 1C66                                             l990 1EE5  
                                           l993 1F39                                             l978 1CCE  
                                           l987 1C7B                                             l998 1F52  
                                           _pad 1D25                         __size_of_PMD_Initialize 000A  
                                  ___awmod@sign 0077                                             wreg 0009  
                                  ___flmul@aexp 0038                                    ___flmul@bexp 0039  
                                  ___flmul@sign 0033                                    ___flmul@temp 003E  
                                  ___flmul@prod 003A                                    ___fltol@exp1 007B  
                                          l1002 275C                                            l1013 1E3B  
                                          l1006 1E50                                            l1016 1E50  
                                          l1113 0862                                            l1221 17F3  
                                          l1117 0903                                            l1230 1904  
                                          l1134 0995                                            l1126 0A3B  
                                          l1215 177B                                            l1119 08DF  
                                          l1144 09D9                                            l1209 17FF  
                                          l1321 1D7D                                            l1138 09B7  
                                          l1171 15A8                                            l1155 0A32  
                                          l1147 0A10                                            l1228 18F4  
                                          l1156 0A3B                                            l1316 1D41  
                                          l1253 1F76                                            l1190 1576  
                                          l1502 116F                                            l1255 1FFF  
                                          l1191 1590                                            l1159 185A  
                                          l1503 1218                                            l1319 1D63  
                                          l1513 2799                                            l1521 187B  
                                          l1193 159F                                            l1185 152A  
                                          l1169 144C                                            l1441 0FFF  
                                          l1266 1FCB                                            l1354 02B7  
                                          l1267 1FD7                                            l1259 1FB1  
                                          l4011 182B                                            l1507 1210  
                                          l1355 0299                                            l1339 07A3  
                                          l1275 1AC3                                            l1380 0527  
                                          l4013 1830                                            l4005 181C  
                                          l4021 1D7F                                            l1365 02F0  
                                          l1542 1D24                                            l1550 1953  
                                          l4015 1836                                            l4007 181E  
                                          l4031 1D93                                            l4023 1D83  
                                          l1527 27B1                                            l1455 1AF8  
                                          l4009 1822                                            l4041 1DA7  
                                          l4033 1D97                                            l4025 1D88  
                                          l4201 1419                                            l4121 1F05  
                                          l4113 1EC8                                            l1465 107E  
                                          l1553 07FF                                            l1385 053D  
                                          l4051 1DC3                                            l4043 1DAB  
                                          l4035 1D99                                            l4027 1D8A  
                                          l4019 1D7E                                            l4211 142F  
                                          l4203 1421                                            l4123 1F1D  
                                          l4115 1EDD                                            l1484 10BC  
                                          l4053 1DC8                                            l4045 1DAF  
                                          l4037 1D9F                                            l4029 1D8E  
                                          l4301 1558                                            l4213 1434  
                                          l4221 1444                                            l4205 1426  
                                          l4125 1F21                                            l4117 1EF9  
                                          l4133 2752                                            l4141 1DDD  
                                          l1565 27E5                                            l4047 1DBE  
                                          l4039 1DA2                                            l4055 1DCE  
                                          l4071 1C88                                            l4063 1C7C  
                                          l4311 158F                                            l4303 155C  
                                          l4223 1454                                            l4231 146D  
                                          l4215 1439                                            l4207 142A  
                                          l4127 1F4F                                            l4119 1F01  
                                          l4135 275A                                            l4151 1E05  
                                          l4143 1DE8                                            l1559 189C  
                                          l5111 1E76                                            l5103 1E67  
                                          l1584 192A                                            l5201 2714  
                                          l1497 112D                                            l4057 1DD3  
                                          l4049 1DC2                                            l4081 1C9F  
                                          l4073 1C8C                                            l4065 1C7D  
                                          l4313 1595                                            l4305 1569  
                                          l4241 1493                                            l4233 1472  
                                          l4225 1460                                            l4217 1441  
                                          l4209 142E                                            l4129 1F51  
                                          l4401 1705                                            l4137 275C  
                                          l6001 09C7                                            l4153 1E0D  
                                          l1569 07FE                                            l5121 1E8A  
                                          l5113 1E7C                                            l5105 1E6C  
                                          l5203 2708                                            l4059 1DD8  
                                          l4091 1CBA                                            l4083 1CA3  
                                          l4075 1C91                                            l4067 1C81  
                                          l4315 1599                                            l4307 1584  
                                          l4251 14B8                                            l4243 149B  
                                          l4227 1464                                            l4219 1442  
                                          l4411 174B                                            l4403 171A  
                                          l4331 15B8                                            l4323 15A9  
                                          l6003 09CB                                            l4171 1E32  
                                          l4163 1E1B                                            l4155 1E0F  
                                          l4147 1DF1                                            l1579 192A  
                                          l5131 1E9F                                            l5123 1E8F  
                                          l5115 1E82                                            l5107 1E70  
                                          l5061 197E                                            l4085 1CA7  
                                          l4077 1C97                                            l4093 1CC0  
                                          l4069 1C86                                            l4317 159B  
                                          l4309 1587                                            l4261 14D7  
                                          l4253 14BC                                            l4245 14A3  
                                          l4237 147B                                            l4421 175F  
                                          l4413 174F                                            l4405 1731  
                                          l4341 15D4                                            l4333 15BD  
                                          l4325 15AF                                            l6021 0A0C  
                                          l6013 09DE                                            l6005 09CC  
                                          l4173 1E40                                            l4157 1E13  
                                          l4165 1E2B                                            l4149 1E04  
                                          l4501 105A                                            l5141 1EB2  
                                          l5133 1EA5                                            l5125 1E93  
                                          l5109 1E72                                            l5301 12C2  
                                          l5221 1BB3                                            l5071 199C  
                                          l5063 197E                                            l4095 1CC5  
                                          l4087 1CB1                                            l4079 1C9A  
                                          l4271 14F3                                            l4263 14DF  
                                          l4255 14BD                                            l4247 14A5  
                                          l4239 148B                                            l4191 1404  
                                          l4183 13F5                                            l4431 1780  
                                          l4423 1760                                            l4415 1750  
                                          l4407 1738                                            l4351 15E7  
                                          l4343 15D9                                            l4335 15C2  
                                          l4327 15B3                                            l6031 0A28  
                                          l6023 0A15                                            l6015 09E3  
                                          l6007 09D0                                            l4175 1E45  
                                          l4511 1885                                            l6111 007E  
                                          l6103 0051                                            l5143 1EB6  
                                          l5127 1E95                                            l5311 12F3  
                                          l5303 12C9                                            l5151 1B7A  
                                          l5231 1BCB                                            l5223 1BB8  
                                          l5215 1BAC                                            l5401 1A74  
                                          l5081 2761                                            l5073 19A2  
                                          l5065 1989                                            l5057 2735  
                                          l5241 19F2                                            l5233 19D5  
                                          l4097 1CCA                                            l4089 1CB5  
                                          l4273 14FA                                            l4281 150A  
                                          l4249 14AA                                            l4257 14C4  
                                          l4265 14E3                                            l4193 1409  
                                          l4185 13FB                                            l4433 1785  
                                          l4441 17AD                                            l4425 1764  
                                          l4417 1757                                            l4409 1744  
                                          l4361 1603                                            l4353 15EC  
                                          l4345 15DD                                            l4337 15CA  
                                          l4329 15B7                                            l6033 0A2C  
                                          l6025 0A1A                                            l6017 09EB  
                                          l6009 09D6                                            l4505 107A  
                                          l6041 192D                                            l6201 02AE  
                                          l6121 00A8                                            l6113 0092  
                                          l6105 0053                                            l5145 1EB8  
                                          l5129 1E99                                            l5305 12CD  
                                          l5161 1B9D                                            l5153 1B81  
                                          l5225 1BC0                                            l5217 1BB3  
                                          l5411 1A79                                            l5403 1A75  
                                          l5083 2763                                            l5075 19A3  
                                          l5067 198E                                            l5235 19D7  
                                          l4283 150E                                            l4275 14FE  
                                          l4267 14E9                                            l4259 14D6  
                                          l4195 140E                                            l4187 13FF  
                                          l4451 17DD                                            l4443 17BA  
                                          l4435 178D                                            l4427 1778  
                                          l4419 175B                                            l4371 162B  
                                          l4363 1608                                            l4355 15F4  
                                          l4347 15E1                                            l4339 15CC  
                                          l6035 0A2E                                            l6027 0A22  
                                          l6019 09EF                                            l4531 1174  
                                          l4523 112E                                            l6043 1930  
                                          l6211 02D0                                            l6131 00C2  
                                          l6123 00AF                                            l6115 0095  
                                          l6107 005B                                            l5331 27F4  
                                          l5147 1EBC                                            l5139 1EAD  
                                          l5091 1E53                                            l5323 1305  
                                          l5307 12D2                                            l5171 196E  
                                          l5163 1BA4                                            l5155 1B88  
                                          l5227 1BC8                                            l5219 1BB3  
                                          l5501 1C2A                                            l5421 1A80  
                                          l5413 1A7A                                            l5405 1A76  
                                          l5085 2764                                            l5341 1F5A  
                                          l5069 1998                                            l5077 19A6  
                                          l5237 19DF                                            l4293 152F  
                                          l4285 150F                                            l4277 14FF  
                                          l4269 14F1                                            l4197 1416  
                                          l4189 1403                                            l6061 1C7A  
                                          l6053 1C2D                                            l4453 17EA  
                                          l4445 17C4                                            l4437 1791  
                                          l4381 1686                                            l4373 1645  
                                          l4357 15F6                                            l4349 15E2  
                                          l6037 0A36                                            l6029 0A27  
                                          l4541 11C0                                            l4533 118C  
                                          l4525 1146                                            l6045 193E  
                                          l4509 187D                                            l6301 05CF  
                                          l6221 0300                                            l6213 02E5  
                                          l6141 00F7                                            l6125 00B4  
                                          l6133 00C6                                            l6117 009D  
                                          l6109 0079                                            l5261 18A7  
                                          l5333 27F8                                            l5093 1E57  
                                          l5317 12F5                                            l5309 12E0  
                                          l5181 1A57                                            l5173 1975  
                                          l5165 1955                                            l5157 1B8F  
                                          l5149 1B6F                                            l5229 1BCA  
                                          ?_pad 0027                                            l5503 2702  
                                          l5431 1A8A                                            l5423 1A82  
                                          l5415 1A7B                                            l5407 1A77  
                                          l5087 2769                                            l5079 275E  
                                          l5351 1F87                                            l5343 1F5E  
                                          l5239 19EE                                            l4295 1534  
                                          l4287 1513                                            l4279 1506  
                                          l4199 1417                                            l6055 1C42  
                                          l4455 17EE                                            l4447 17D2  
                                          l4439 17A9                                            l4391 16B5  
                                          l4383 168D                                            l4375 1652  
                                          l4367 1611                                            l4359 15FE  
                                          l6039 0A3A                                            l4543 11D1  
                                          l4527 1161                                            l6047 1943  
                                          l6071 1D27                                            l6311 05EA  
                                          l6303 05D8                                            l6231 031A  
                                          l6223 0304                                            l6215 02EB  
                                          l6207 02BD                                            l6143 0101  
                                          l6135 00D8                                            l6151 012A  
                                          l6127 00B8                                            l6119 00A3  
                                          l5263 18B4                                            l5511 1A1D  
                                          l5335 27FE                                            l5327 27E7  
                                          l5095 1E5D                                            l5319 1303  
                                          l5271 1234                                            l5175 1A32  
                                          l5167 1960                                            l5159 1B96  
                                          l5441 2745                                            l5433 1A8C  
                                          l5425 1A84                                            l5417 1A7C  
                                          l5409 1A78                                            l5361 1FAA  
                                          l5353 1F8C                                            l5345 1F6E  
                                          l4553 2782                                            l4561 1864  
                                          l4297 153C                                            l4289 1527  
                                          l6057 1C5E                                            l4457 17EF  
                                          l4449 17DB                                            l4393 16C9  
                                          l4385 169A                                            l4377 166C  
                                          l4369 161E                                            l6065 183B  
                                          l4545 11E8                                            l4537 11A1  
                                          l4529 116E                                            l3761 1CD4  
                                          l6081 1D44                                            l6073 1D2C  
                                          l6049 279A                                            l6321 0676  
                                          l6313 05F4                                            l6305 05DC  
                                          l6241 0330                                            l6233 031C  
                                          l6225 0308                                            l6217 02F4  
                                          l6209 02C3                                            l6161 0165  
                                          l6153 013C                                            l6145 010A  
                                          l6129 00BD                                            l5265 18B8  
                                          l5257 189D                                            l5521 1A2D  
                                          l5513 1A21                                            l5505 1A03  
                                          l5329 27EA                                            l5097 1E5F  
                                          l5281 125E                                            l5273 123C  
                                          l5177 1A47                                            l5169 1967  
                                          l5451 180F                                            l5195 271A  
                                          l5443 2746                                            l5435 273E  
                                          l5427 1A86                                            l5419 1A7E  
                                          l5371 1FD9                                            l5363 1FB8  
                                          l5355 1F97                                            l5347 1F7E  
                                          l5339 1F55                                            l4563 1873  
                                          l6411 1095                                            l6403 107F  
                                          l4299 1540                                            l6059 1C78  
                                          l4459 17F7                                            l4395 16D0  
                                          l4387 16A1                                            l4379 1679  
                                          l6067 183E                                            l4491 1033  
                                          l4547 11F1                                            l4539 11B8  
                                          l3771 1D1B                                            l3763 1CD9  
                                          l6083 1D50                                            l6075 1D35  
                                          l6331 06A1                                            l6323 067A  
                                          l6315 05F8                                            l6307 05E0  
                                          l6251 0466                                            l6243 0339  
                                          l6235 0322                                            l6227 030E  
                                          l6219 02FA                                            l6171 0197  
                                          l6163 016E                                            l6147 010F  
                                          l6139 00F1                                            l5259 189F  
                                          l5523 1A2F                                            l5515 1A27  
                                          l5507 1A03                                            l5291 128C  
                                          l5283 126F                                            l5275 1245  
                                          l5267 121B                                            l5179 1A4F  
                                          l5461 1814                                            l5453 1810  
                                          l5445 1801                                            l5197 2720  
                                          l5437 2741                                            l5429 1A88  
                                          l5373 1FED                                            l5365 1FC1  
                                          l5357 1F9E                                            l4565 1874  
                                          l4557 185B                                            l6421 10B8  
                                          l6413 10A9                                            l6405 1085  
                                          l4397 16E4                                            l4389 16AE  
                                          l4493 104A                                            l4485 1000  
                                          l4549 1208                                            l3765 1CDE  
                                          l6085 1D55                                            l6077 1D3A  
                                          l6093 1905                                            l6341 06C1  
                                          l6333 06A6                                            l6309 05E4  
                                          l6317 05FC                                            l6325 067E  
                                          l6261 04B2                                            l6253 0470  
                                          l6245 0402                                            l6229 0312  
                                          l6237 0326                                            l6181 01E1  
                                          l6173 0199                                            l6165 0173  
                                          l6157 0155                                            l6501 0E34  
                                          l5517 1A28                                            l5509 1A09  
                                          l5293 128D                                            l5285 127C  
                                          l5277 1246                                            l5269 121D  
                                          l5463 1815                                            l5455 1811  
                                          l5447 180B                                            l5199 270E  
                                          l5471 1BEB                                            l5439 2742  
                                          l5391 1A69                                            l5383 2748  
                                          l5375 1FF2                                            l5367 1FC5  
                                          l5359 1FA2                                            l4559 185D  
                                          l6423 10C1                                            l6415 10AA  
                                          l6407 1089                                            l4399 16F1  
                                          l4495 104F                                            l4487 1018  
                                          l3767 1CE9                                            l3759 1CCF  
                                          l6087 1D68                                            l6079 1D3F  
                                          l6351 06D5                                            l6343 06C5  
                                          l6335 06B0                                            l6327 068C  
                                          l6319 064A                                            l6271 0530  
                                          l6263 04EC                                            l6255 0488  
                                          l6247 0406                                            l6239 0328  
                                          l6191 0284                                            l6183 021D  
                                          l6159 015B                                            l6511 0E9B  
                                          l6503 0E51                                            l5519 1A2A  
                                          l5295 12A4                                            l5287 1283  
                                          l5279 1247                                            l5465 1816  
                                          l5457 1812                                            l5449 180E  
                                          l5481 1C02                                            l5473 1BED  
                                          l5393 1A6B                                            l5385 1A60  
                                          l5377 1FF6                                            l5369 1FCF  
                                          l6433 1111                                            l6425 10D5  
                                          l6409 108B                                            l4489 102D  
                                          l3769 1D08                                            l6089 1D71  
                                          l6097 191D                                            l6361 070A  
                                          l6353 06DA                                            l6345 06CB  
                                          l6337 06B4                                            l6329 069A  
                                          l6281 0598                                            l6273 0536  
                                          l6265 04F1                                            l6257 048D  
                                          l6249 0414                                            l6193 0288  
                                          l6185 0249                                            l6177 01B1  
                                          l6169 018E                                            l6513 0EA1  
                                          l6505 0E56                                            l5297 12AC  
                                          l5289 1287                                            l5467 1817  
                                          l5459 1813                                            l5491 1C15  
                                          l5483 1C04                                            l5475 1BF4  
                                          l5395 1A6D                                            l5387 1A65  
                                          l5379 1FF7                                            l6435 1117  
                                          l6419 10B1                                            l3971 18E5  
                                          l4499 1054                                            l6099 1923  
                                          l6371 072A                                            l6363 070E  
                                          l6355 06DF                                            l6347 06CD  
                                          l6339 06BB                                            l6291 05B5  
                                          l6283 059F                                            l6275 053B  
                                          l6267 051D                                            l6259 0495  
                                          l6195 028E                                            l6187 024D  
                                          l6179 01DD                                            l4931 07D1  
                                          l4923 07BC                                            l4915 07A5  
                                          l6531 0F47                                            l6515 0EB3  
                                          l6523 0EF2                                            l6507 0E76  
                                          l6451 0D12                                            l5299 12B5  
                                          l6611 134D                                            l5469 1818  
                                          l5493 1C21                                            l5485 1C06  
                                          l5477 1BFD                                            l5397 1A70  
                                          l5389 1A67                                            l6437 111D  
                                          l6429 10F5                                            l3973 18EC  
                                          l5901 087C                                            l6381 0746  
                                          l6373 0730                                            l6357 06E4  
                                          l6365 0712                                            l6349 06D1  
                                          l6293 05B9                                            l6285 05A5  
                                          l6277 0544                                            l6269 0523  
                                          l6197 0295                                            l6189 0274  
                                          l4933 07DA                                            l4925 07C0  
                                          l4917 07AD                                            l6533 0F5C  
                                          l6525 0F04                                            l6541 0F9D  
                                          l6517 0EBC                                            l6509 0E7B  
                                          l6461 0D40                                            l6453 0D1B  
                                          l6701 0B96                                            l6621 1367  
                                          l6613 1352                                            l6605 131A  
                                          l5495 1C26                                            l5487 1C07  
                                          l5479 1C00                                            l5399 1A72  
                                          l5671 2772                                            l6439 1129  
                                          l3975 18F0                                            l5911 0890  
                                          l5903 0880                                            l3991 27CD  
                                          l6391 076D                                            l6383 074A  
                                          l6375 0735                                            l6367 0718  
                                          l6359 06FA                                            l6295 05C2  
                                          l6287 05A9                                            l6279 0593  
                                          l6199 02A8                                            l4935 07E0  
                                          l4927 07C4                                            l4919 07B9  
                                          l6543 0FB0                                            l6551 0FCC  
                                          l6535 0F70                                            l6519 0ECF  
                                          l6471 0D6B                                            l6463 0D4F  
                                          l6455 0D20                                            l6711 0C0F  
                                          l6703 0BDA                                            l6631 137C  
                                          l6607 132B                                            l5681 272C  
                                          l5497 1C27                                            l5489 1C0E  
                                          l5673 2775                                            l3977 18FB  
                                          l3969 18E3                                            l5921 08A4  
                                          l5913 0894                                            l5905 0884  
                                          l3993 27D2                                            l6393 0771  
                                          l6377 0739                                            l6369 0725  
                                          l6297 05C6                                            l6289 05AE  
                                          l4937 07F0                                            l4929 07C8  
                                          l6553 0FD5                                            l6545 0FB9  
                                          l6537 0F79                                            l6529 0F41  
                                          l6481 0DB5                                            l6473 0D74  
                                          l6465 0D53                                            l6457 0D24  
                                          l6449 0CFF                                            l6721 0CCC  
                                          l6713 0C68                                            l6705 0BEF  
                                          l6633 1380                                            l6641 1395  
                                          l6617 1359                                            l6625 1370  
                                          l6609 132D                                            l5499 1C29  
                                          l5675 2778                                            l3979 1900  
                                          l5931 08E3                                            l5923 08A8  
                                          l5915 0898                                            l5907 0888  
                                          l5851 080E                                            l3995 27D6  
                                          l6395 077A                                            l6387 0762  
                                          l6379 0742                                            l6299 05CA  
                                          l6547 0FC6                                            l6491 0DEC  
                                          l6483 0DB8                                            l6467 0D54  
                                          l6459 0D37                                            l6571 1AE6  
                                          l6723 0CE1                                            l6715 0C73  
                                          l6707 0BFA                                            l6651 13B5  
                                          l6643 13A5                                            l6635 1385  
                                          l6627 1376                                            l6619 1363  
                                          l6731 19B1                                            l5677 277B  
                                          l5669 276F                                            l5941 08F8  
                                          l5933 08E9                                            l5917 089C  
                                          l5909 088C                                            l5925 08AC  
                                          l5861 0825                                            l5853 0812  
                                          l3997 27DF                                            l6397 077E  
                                          l6389 0768                                            l6493 0DFD  
                                          l6485 0DC1                                            l6477 0D9C  
                                          l6469 0D5A                                            l6557 0FD8  
                                          l6573 1AF0                                            l6565 1AC6  
                                          l6581 1A9C                                            l6725 0CEC  
                                          l6717 0C7F                                            l6709 0C06  
                                          l6661 13D8                                            l6653 13B9  
                                          l6645 13A9                                            l6637 1387  
                                          l6733 19B9                                            l5679 277E  
                                          l5951 0915                                            l5935 08EB  
                                          l5943 08FC                                            l5927 08AD  
                                          l5919 08A0                                            l5871 083B  
                                          l5863 0826                                            l5855 0813  
                                          l5847 0804                                            l6399 0788  
                                          l6559 0FF5                                            l6495 0E06  
                                          l6487 0DD3                                            l6479 0DA2  
                                          l6567 1ACA                                            l6583 1A9E  
                                          l6727 0CF8                                            l6719 0C88  
                                          l6671 0A4F                                            l6663 13EB  
                                          l6655 13BD                                            l6647 13AD  
                                          l6639 138F                                            l6591 1307  
                                          l6735 19BD                                            l6751 1AFD  
                                          l5961 092D                                            l5953 091D  
                                          l5945 0907                                            l5937 08EF  
                                          l5929 08C4                                            l5881 084A  
                                          l5873 083C                                            l5857 0818  
                                          l5865 0828                                            l5849 080A  
                                          l6489 0DDC                                            l6569 1ACE  
                                          l6585 1AB7                                            l6577 1A92  
                                          l6681 0A9B                                            l6673 0A62  
                                          l6665 13F1                                            l6657 13C9  
                                          l6649 13B1                                            l6593 130E  
                                          l6833 19C9                                            l6729 19A9  
                                          l6761 1B0F                                            l6753 1AFE  
                                          l6835 10CD                                            l5971 0955  
                                          l5963 0931                                            l5955 0921  
                                          l5947 090C                                            l5939 08F0  
                                          l5891 0868                                            l5883 084F  
                                          l5875 0840                                            l5867 0830  
                                          l5859 081D                                            l6499 0E2E  
                                          l6587 1ABF                                            l6579 1A9A  
                                          l6691 0B14                                            l6683 0AA4  
                                          l6675 0A69                                            l6667 0A3C  
                                          l6659 13CD                                            l6595 1312  
                                          l6739 19C1                                            l6771 1B2B  
                                          l6763 1B10                                            l6755 1AFE  
                                          l6747 1AF9                                            l5981 099D  
                                          l5973 0979                                            l5965 0932  
                                          l5957 0925                                            l5893 086C  
                                          l5885 0857                                            l5877 0844  
                                          l5869 0835                                            l6693 0B1D  
                                          l6685 0AE8                                            l6677 0A7C  
                                          l6669 0A43                                            l6597 1313  
                                          l6765 1B1D                                            l6757 1B00  
                                          l6749 1AFC                                            l5991 09B6  
                                          l5983 09A2                                            l5975 097F  
                                          l5967 093A                                            l5959 092B  
                                          l5895 0870                                            l5887 0858  
                                          l5879 0845                                            l6695 0B61  
                                          l6687 0AFD                                            l6679 0A88  
                                          l6599 1318                                            l6767 1B1F  
                                          l6759 1B0D                                            l5993 09BB  
                                          l5977 0984                                            l5969 093F  
                                          l5897 0874                                            l5889 085A  
                                          l6697 0B81                                            l6689 0B08  
                                          l6769 1B23                                            l5995 09BE  
                                          l5987 09AB                                            l5979 098D  
                                          l5899 0878                                            l6699 0B8D  
                                          l5997 09C0                                            l5989 09B2  
                                          l5999 09C5                                            STR_1 2826  
                                          STR_2 204C                                            STR_3 20F4  
                                          STR_4 210E                                            STR_5 204C  
                                          STR_6 202C                                            STR_7 206A  
                                          STR_8 2087                                            STR_9 20D9  
                                          _LATA 0018                                            _LATB 0019  
                                          _LATC 001A                                            u4000 1822  
                                          u4001 1821                                            _LATE 001C  
                                          u4100 1DBE                                            u4101 1DBD  
                                          u4030 1836                                            u4031 1835  
                                          u4015 1827                                            u4120 1DCE  
                                          u4040 1D83                                            u4025 182C  
                                          u4121 1DCD                                            u4105 1DBA  
                                          u4041 1D82                                            u4130 1DD3  
                                          u4050 1D8E                                            u4210 1CC0  
                                          u5010 1025                                            u4131 1DD2  
                                          u4115 1DC4                                            u4051 1D8D  
                                          u4211 1CBF                                            u4060 1D9F  
                                          u4220 1CC5                                            u4140 1C81  
                                          u4300 1F4F                                            u5020 1033  
                                          u4061 1D9E                                            u4221 1CC4  
                                          u4205 1CB6                                            u4141 1C80  
                                          u4301 1F4E                                            u5021 1032  
                                          u4150 1C8C                                            u4310 275A  
                                          u5030 1040                                            u4151 1C8B  
                                          u4311 2759                                            u5015 1021  
                                          u4080 1DAF                                            u4160 1C97  
                                          u4400 1E40                                            u4320 1DE8  
                                          u5040 104A                                            u5200 11DE  
                                          u4081 1DAE                                            u4161 1C96  
                                          u4305 1F4B                                            u4401 1E3F  
                                          u4321 1DE7                                            u5041 1049  
                                          u4410 1E45                                            u4330 1DFE  
                                          u5050 105A                                            u5210 11E8  
                                          u5130 1153                                            u4075 1DA3  
                                          u4411 1E44                                            u5051 1059  
                                          u5035 103C                                            u5211 11E7  
                                          u4180 1CA7                                            u4500 14AA  
                                          u4420 1403                                            u4260 1EDD  
                                          u4340 1E13                                            u5060 1067  
                                          u5220 11FE                                            u5140 116E  
                                          u3460 1CD4                                            u4181 1CA6  
                                          u4501 14A9                                            u4421 1402  
                                          u4261 1EDC                                            u4341 1E12  
                                          u5205 11DA                                            u5141 116D  
                                          u3461 1CD3                                            u4190 1CB1  
                                          u4430 1409                                            u4270 1EF9  
                                          u4350 1E1A                                            u5070 1072  
                                          u5230 1208                                            u5150 1174  
                                          u3470 1CD9                                            u4095 1DB0  
                                          u4191 1CB0                                            u4175 1C9B  
                                          u4431 1408                                            u4271 1EF8  
                                          u4351 1E19                                            u4335 1DFA  
                                          u5071 1070                                            u5231 1207  
                                          u5151 1173                                            u5135 114F  
                                          u3471 1CD8                                            u5240 2792  
                                          u4440 140E                                            u4280 1F05  
                                          u7000 08C4                                            u5080 1073  
                                          u5160 1182                                            u3480 1CE9  
                                          u5241 2790                                            u4441 140D  
                                          u4281 1F04                                            u7001 08C3  
                                          u5065 1063                                            u5225 11FA  
                                          u5145 116A                                            u3481 1CE8  
                                          u6130 273C                                            u5250 2793  
                                          u4610 150E                                            u4530 14BC  
                                          u4450 142E                                            u4290 1F21  
                                          u7010 08CD                                            u4370 1E2A  
                                          u5170 11A0                                            u3490 1D08  
                                          u5090 189C                                            u6210 1E82  
                                          u6131 273A                                            u4195 1CAD  
                                          u4611 150D                                            u4531 14BB  
                                          u4515 14AB                                            u4451 142D  
                                          u4291 1F20                                            u7011 08CB  
                                          u4371 1E29                                            u5171 119F  
                                          u3491 1D07                                            u5091 189B  
                                          u6211 1E81                                            u6140 273D  
                                          u5260 1864                                            u4700 1599  
                                          u4620 1513                                            u4460 1434  
                                          u7100 0925                                            u7020 08CE  
                                          u4380 1E31                                            u5180 11AE  
                                          u6220 1E87                                            _PMD0 0796  
                                          u5261 1863                                            u4701 1598  
                                          u4621 1512                                            u4605 1500  
                                          u4525 14B2                                            u4461 1433  
                                          u7101 0924                                            u7005 08C0  
                                          u4381 1E30                                            u4365 1E1C  
                                          u5165 117E                                            u6221 1E86  
                                          u6205 1E68                                            _PMD1 0797  
                                          u6150 1984                                            u5270 1873  
                                          u4630 1527                                            u4550 14D6  
                                          u4470 1439                                            u4710 15B7  
                                          u7110 0931                                            u7030 08E3  
                                          u5190 11B8                                            _PMD2 0798  
                                          u6151 1983                                            u5271 1872  
                                          u4631 1526                                            u4551 14D5  
                                          u4471 1438                                            u4711 15B6  
                                          u7111 0930                                            u7031 08E2  
                                          u5191 11B7                                            u3495 1D04  
                                          _PMD3 0799                                            u6160 1989  
                                          u4640 152E                                            u4560 14E9  
                                          u4480 1454                                            u4720 15BD  
                                          u7200 09C5                                            u7040 08EF  
                                          u8000 0768                                            u6240 1EA5  
                                          _PMD4 079A                                            u6161 1988  
                                          u4641 152D                                            u4561 14E8  
                                          u4545 14BE                                            u4481 1453  
                                          u4721 15BC                                            u7201 09C4  
                                          u7041 08EE                                            u5185 11AA  
                                          u8001 0767                                            u6241 1EA4  
                                          u6305 1B8F                                            _PMD5 079B  
                                          u6170 19A2                                            u6410 19DF  
                                          u8010 1095                                            u4650 1534  
                                          u4570 14F1                                            u4490 1472  
                                          u3930 18F0                                            u4810 1710  
                                          u4730 15C2                                            u7210 09CB  
                                          u7130 0955                                            u6250 1EAA  
                                          _PMD6 079C                                            u6171 19A1  
                                          u6411 19DE                                            u8011 1094  
                                          u4651 1533                                            u4571 14F0  
                                          u4555 14D2                                            u4491 1471  
                                          u3931 18EF                                            u4731 15C1  
                                          u7211 09CA                                            u7131 0954  
                                          u4395 1E33                                            u6251 1EA9  
                                          u6235 1E8B                                            u6315 1B96  
                                          _PMD7 079D                                            u6180 2769  
                                          u6420 1A02                                            u8020 10A9  
                                          u4660 1540                                            u4900 177F  
                                          u4820 1727                                            u4740 15E1  
                                          u7300 0A1A                                            u7220 09D0  
                                          u7140 0984                                            u7060 0903  
                                          u8100 0D53                                            u6500 27FE  
                                          u6181 2768                                            u6421 1A01  
                                          u8021 10A8                                            u4661 153F  
                                          u4901 177E                                            u4805 16B6  
                                          u4741 15E0                                            u7301 0A19  
                                          u7221 09CF                                            u7141 0983  
                                          u7133 0951                                            u7125 0934  
                                          u7061 0902                                            u8101 0D52  
                                          u6501 27FD                                            u6325 1B9D  
                                          u6510 1F5A                                            u8030 10B7  
                                          u4670 154E                                            u4590 14FE  
                                          u3950 1900                                            u4910 1785  
                                          u4750 15E7                                            u7310 0A27  
                                          u7230 09D6                                            u7150 099D  
                                          u7070 0907                                            u8110 0D92  
                                          u6430 18A7                                            u6270 1EC7  
                                          u6190 1E64                                            u6511 1F59  
                                          u8031 10B6                                            u4591 14FD  
                                          u3951 18FF                                            u4911 1784  
                                          u4815 170C                                            u4751 15E6  
                                          u7311 0A26                                            u7231 09D5  
                                          u7151 099C                                            u7071 0906  
                                          u7055 08F2                                            u8111 0D90  
                                          u6431 18A6                                            u6271 1EC6  
                                          u6191 1E63                                            u6335 1BA4  
                                          u6600 1FCB                                            u6520 1F5E  
                                          u8040 110A                                            u4680 1569  
                                          u4920 1791                                            u4760 15EC  
                                          u7320 0A2C                                            u7240 09DD  
                                          u7160 09A2                                            u7080 090C  
                                          u7400 1D2C                                            u8200 0E7B  
                                          u8120 0D93                                            u6440 18BE  
                                          u6601 1FCA                                            u6521 1F5D  
                                          u8041 1108                                            u4681 1568  
                                          u4585 14F4                                            u3945 18F5  
                                          u4921 1790                                            u4825 1723  
                                          u4761 15EB                                            u7321 0A2B  
                                          u7241 09DC                                            u7161 09A1  
                                          u7081 090B                                            u7401 1D2B  
                                          u8201 0E7A                                            u6441 18BD  
                                          u6265 1EAE                                            u6345 1BAB  
                                          u6610 1FCF                                            u6530 1F7E  
                                          u8050 110B                                            u4690 1584  
                                          u4930 179F                                            u4850 174F  
                                          u4770 1603                                            u7330 0A3A  
                                          u7250 09E3                                            u7090 0921  
                                          u3970 27DF                                            u7410 1D3A  
                                          u8210 0EA1                                            u8130 0DA2  
                                          u6450 1287                                            u6611 1FCE  
                                          u6531 1F7D                                            u4691 1583  
                                          u4675 154A                                            u4851 174E  
                                          u4835 1732                                            u4771 1602  
                                          u7331 0A39                                            u7251 09E2  
                                          u7091 0920                                            u3971 27DE  
                                          u7411 1D39                                            u8211 0EA0  
                                          u8131 0DA1                                            u6451 1286  
                                          u6355 1967                                            u6620 1FE3  
                                          u8060 1117                                            u4940 17BA  
                                          u4780 1608                                            u7260 09EF  
                                          u7180 09B6                                            u7340 1953  
                                          u7420 1D63                                            u7500 00AF  
                                          u5900 07D1                                            u8220 0F04  
                                          u8140 0DB5                                            u6460 12CD  
                                          u8300 1363                                            u8061 1116  
                                          u4685 1565                                            u4941 17B9  
                                          u4845 1745                                            u4781 1607  
                                          u7261 09EE                                            u7181 09B5  
                                          u7341 1952                                            u7421 1D62  
                                          u7501 00AE                                            u5901 07D0  
                                          u8221 0F03                                            u8141 0DB4  
                                          u6461 12CC                                            u6365 196E  
                                          u6285 1B81                                            u8301 1362  
                                          u6630 1FF2                                            u6550 1F9D  
                                          u8070 111D                                            u4950 17D2  
                                          u4870 175F                                            u7270 09FD  
                                          u7190 09BB                                            u7430 1D68  
                                          u7350 27AA                                            u7510 00D8  
                                          u5910 07DA                                            u8230 0F37  
                                          u8150 0DD3                                            u6470 12E0  
                                          u8310 1376                                            u6631 1FF1  
                                          u6551 1F9C                                            u8071 111C  
                                          u4695 1580                                            u4951 17D1  
                                          u4935 179B                                            u4871 175E  
                                          u7191 09BA                                            u7175 09AC  
                                          u7431 1D67                                            u7351 27A8  
                                          u7511 00D7                                            u5911 07D9  
                                          u8231 0F35                                            u8151 0DD2  
                                          u6471 12DF                                            u6375 1975  
                                          u6295 1B88                                            u8311 1375  
                                          u6640 1FF6                                            u4960 17EE  
                                          u4880 1764                                            u7280 0A0C  
                                          u7360 27AB                                            u7440 1916  
                                          u7600 021C                                            u7520 00EA  
                                          u5920 07E0                                            u8240 0F38  
                                          u8160 0E24                                            u8080 0D12  
                                          u6480 12F3                                            u8320 137B  
                                          u6641 1FF5                                            u6625 1FDF  
                                          u6545 1F91                                            u4961 17ED  
                                          u4945 17B6                                            u4881 1763  
                                          u4865 1751                                            u7281 0A0B  
                                          u7425 1D5F                                            u7441 1914  
                                          u7601 021B                                            u7521 00E8  
                                          u5921 07DF                                            u8161 0E22  
                                          u8081 0D11                                            u6481 12F2  
                                          u6385 197C                                            u8321 137A  
                                          u6570 1FB7                                            u7370 1C42  
                                          u4890 1778                                            u7290 0A15  
                                          u7450 1917                                            u7610 0274  
                                          u7530 00EB                                            u5930 07F0  
                                          u8250 0F47                                            u8170 0E25  
                                          u8090 0D37                                            u6650 1A09  
                                          u6490 1303                                            u8330 1385  
                                          u6571 1FB6                                            u7371 1C41  
                                          u4955 17CE                                            u4891 1777  
                                          u4795 1687                                            u7291 0A14  
                                          u7275 09F9                                            u7611 0273  
                                          u5931 07EF                                            u8251 0F46  
                                          u8091 0D36                                            u6651 1A08  
                                          u6491 1302                                            u6475 12DC  
                                          u8331 1384                                            u7380 1C5E  
                                          u7460 1923                                            u7700 0300  
                                          u7620 028E                                            u7540 00F7  
                                          u8260 0FB0                                            u8180 0E34  
                                          u6660 1A27                                            u8340 1395  
                                          u6565 1FAB                                            u7381 1C5D  
                                          u7461 1922                                            u7701 02FF  
                                          u7621 028D                                            u7541 00F6  
                                          u8261 0FAF                                            u8181 0E33  
                                          u6661 1A26                                            u6485 12EF  
                                          u8341 1394                                            u6590 1FC5  
                                          u7390 1C78                                            u6910 0812  
                                          u7710 0304                                            u7630 0295  
                                          u7550 013C                                            u7470 0079  
                                          u8190 0E56                                            u8270 1AF0  
                                          u6591 1FC4                                            u7391 1C77  
                                          u6911 0811                                            u7711 0303  
                                          u7631 0294                                            u7551 013B  
                                          u7471 0078                                            u8191 0E55  
                                          u8271 1AEF                                            u6495 12FF  
                                          u8407 13DE                                            u6760 2733  
                                          u6920 0818                                            u7800 0523  
                                          u7720 030E                                            u7640 02A8  
                                          u7560 014E                                            u7480 00A3  
                                          u8360 13F1                                            u8280 1352  
                                          u6761 2731                                            u6585 1FBB  
                                          u6921 0817                                            u7801 0522  
                                          u7721 030D                                            u7641 02A7  
                                          u7561 014C                                            u7481 00A2  
                                          u8417 1BE5                                            u8361 13F0  
                                          u8281 1351                                            u6770 2734  
                                          u6930 081D                                            u7810 0536  
                                          u7730 0312                                            u7650 02BC  
                                          u7570 014F                                            u7490 00A8  
                                          u5890 07B9                                            u8290 1358  
                                          u8370 1B2B                                            u7395 1C74  
                                          u6931 081C                                            u7811 0535  
                                          u7731 0311                                            u7651 02BB  
                                          u7491 00A7                                            u5891 07B8  
                                          u8507 1E96                                            u8427 1237  
                                          u8355 1398                                            u8291 1357  
                                          u8371 1B2A                                            u6940 083B  
                                          u7900 069A                                            u7820 0598  
                                          u7740 0322                                            u7660 02C3  
                                          u7580 015B                                            u6941 083A  
                                          u7901 0699                                            u7821 0597  
                                          u7741 0321                                            u7661 02C2  
                                          u7645 02A4                                            u7581 015A  
                                          u8517 1EB3                                            u8437 1261  
                                          u6950 0844                                            u7910 06A1  
                                          u7830 059F                                            u7750 0414  
                                          u7670 02D0                                            u7590 01B0  
                                          u6951 0843                                            u7911 06A0  
                                          u7831 059E                                            u7751 0413  
                                          u7671 02CF                                            u7591 01AF  
                                          u8607 0C00                                            u8527 1EB9  
                                          u8447 12A7                                            u6960 084A  
                                          u7920 06A6                                            u7840 05A5  
                                          u7760 0466                                            u7680 02E5  
                                          u6961 0849                                            u7921 06A5  
                                          u7905 0696                                            u7841 05A4  
                                          u7761 0465                                            u7681 02E4  
                                          u8617 0C79                                            u8537 0A49  
                                          u8457 1E54                                            u6970 084F  
                                          u7930 06C1                                            u7850 05A9  
                                          u7770 0488                                            u7690 02FA  
                                          u6971 084E                                            u7931 06C0  
                                          u7851 05A8                                            u7771 0487  
                                          u7755 0410                                            u7691 02F9  
                                          u7675 02CC                                            u8627 0CF2  
                                          u8547 0A5C                                            u8467 1E5A  
                                          u8387 1B06                                            u6980 0868  
                                          u7940 06D1                                            u7860 05B5  
                                          u7780 048D                                            u6981 0867  
                                          u7941 06D0                                            u7861 05B4  
                                          u7781 048C                                            u7685 02E1  
                                          u8557 0A6F                                            u8477 1E6D  
                                          u8397 1B16                                            u6990 086C  
                                          u7950 0718                                            u7870 05B9  
                                          u7790 04EC                                            u6991 086B  
                                          u7951 0717                                            u7871 05B8  
                                          u7791 04EB                                            u8567 0A82  
                                          u8487 1E73                                            u7960 0725  
                                          u7880 05EA                                            u7961 0724  
                                          u7881 05E9                                            u8577 0A95  
                                          u8497 1E90                                            u7970 0730  
                                          u7890 068C                                            u7971 072F  
                                          u7891 068B                                            u8587 0B0E  
                                          u7980 075B                                            u7981 0759  
                                          u7965 0721                                            u8597 0B87  
                                          u7990 075C                                            u7895 0688  
                                          _WPUA 1F39                                            _WPUB 1F44  
                                          _WPUC 1F4F                                            _WPUE 1F65  
                                 _EUSART1_Write 197D                                            _dbuf 0220  
                                          _atoi 107F                                            _filt 2000  
                                          _main 1AF9                                   ?_EUSART1_Read 0070  
                                          _prec 01CC                                            _nout 01C8  
                                          pad@i 002A                                            pad@p 0028  
                                          fsr0h 0005                                            fsr1h 0007  
                                          indf0 0000                                            fsr0l 0004  
                                          indf1 0001                                            fsr1l 0006  
                                          pad@w 002C                                            btemp 007E  
                                 ___fpclassifyf 1000                     __size_of_calculate_checksum 001A  
                                          start 002B                                __end_of_ADC_test 0CFD  
                               ___fldiv@new_exp 0052                                    _tolower$2315 0079  
                                         ??_pad 007A                  __size_of_OSCILLATOR_Initialize 000A  
                 __end_of_OSCILLATOR_Initialize 2748                           _eusart1RxStatusBuffer 01A0  
                                 ___fltol@sign1 007A                                           _ADCAP 010E  
                                         _ADACT 0117                                           ?_atoi 0077  
                               __end_of___fladd 0A3C                                           ?_main 0070  
                                         _ADCLK 0118                                           _ADCNT 0099  
                                         _ADPCH 009F                                 __end_of___fldiv 15A9  
                                         _ADREF 0116                                 __end_of___awdiv 1DDD  
                               __end_of___flneg 275D                                           STR_10 20BE  
                                         STR_11 20A3                                           STR_20 2823  
                                         STR_12 2813                                           STR_13 281B  
                                         STR_22 2823                                           STR_16 2817  
                                         STR_17 281F                                 __end_of___awmod 1CCF  
                                         _ADRPT 009A                                 __end_of___flmul 1800  
                               __end_of___flsub 185B                                 __end_of___fltol 1E51  
                               ___awdiv@divisor 0071                                           i1l220 18E1  
                                         i1l231 27CB                                           i1l240 2701  
                                         i1l217 18DF                                           i1l234 0003  
                                         i1l227 1B6D                                           i1l237 0803  
                                         i1l271 001A                                           i1l272 0029  
                                         i1l276 0029                                 ___awdiv@counter 0076  
                                         _OSCEN 0891                                    vfpfcnvrt@fmt 006E  
                                         _TRISA 0012                                           _TRISB 0013  
                                         _TRISC 0014                                           _TRISE 0016  
                          _EUSART1_Transmit_ISR 18BF                                           _gains 280B  
                                         _flags 01CE                                           __puts 19D5  
                               __end_of_measure 1307                                           _freqs 2800  
                                         _fputc 1CCF                                           _fputs 192B  
                               __end_of_isdigit 279A                                           atoi@n 002B  
                                         pad@fp 002E                                           atoi@s 0077  
                                         _width 01CA                                           _putch 07FF  
                               __end_of_setGain 1BAC                                           _sweep 1307  
                               __end_of_setFilt 1A60                                 __end_of_setFreq 197D  
                                         _write 189D                                 __end_of_isspace 187C  
                                ?_EUSART1_Write 0070                                 __end_of_isupper 27B2  
                                         pclath 000A                                  ??_EUSART1_Read 0071  
                                         status 0003                                           wtemp0 007E  
                               __end_of_sprintf 1AC4                                  ?___fpclassifyf 0071  
                               __end_of_tolower 192B                                 __end_of_strncmp 07FF  
    __end_of_EUSART1_DefaultFramingErrorHandler 0004     __size_of_EUSART1_DefaultFramingErrorHandler 0001  
          ??_EUSART1_DefaultFramingErrorHandler 0070             ?_EUSART1_DefaultFramingErrorHandler 0070  
            _EUSART1_DefaultFramingErrorHandler 0003                                 __initialization 002D  
                                  __end_of_atoi 112E                                    __end_of_filt 202C  
                    __end_of_EUSART1_Initialize 1C2D                                    __end_of_main 1B31  
                   ?_INTERRUPT_InterruptManager 0070                                   ADC_test@value 0164  
                                        ??_atoi 0020                                          ??_main 0169  
                         ?_EUSART1_Transmit_ISR 0070                                          _ADACCH 0097  
                                        _ADACCL 0096                                          _ADACCU 0098  
                                        _ADACQH 010D                                          _ADACQL 010C  
                                        ?__puts 0073                                          _ADCON0 0111  
                                        _ADCON1 0112                                          _ADCON2 0113  
                                        _ADCON3 0114                                          _ADERRH 0091  
                                        _ADERRL 0090                                     measure@aux1 002E  
                                   measure@aux2 002C                                     measure@asic 0021  
                                        ?_fputc 0071                                          _ADLTHH 008D  
                                        _ADLTHL 008C                                          ?_fputs 0079  
                                        _ADRESH 009E                                          _ADRESL 009D  
                                        _ADPREH 0110                                          _ADPREL 010F  
                                        _ADSTAT 0115                                          _ADUTHH 008F  
                              ___awdiv@dividend 0073                                          _ADUTHL 008E  
                                        _ANSELA 1F38                                          ?_putch 0070  
                                        _ANSELB 1F43                                          _ANSELC 1F4E  
                                        ?_sweep 0070                                          ?_write 0073  
                                        _RC1REG 0119                                          _RC1STA 011D  
                                        _RC5PPS 1F25                                          _ODCONA 1F3A  
                                        _ODCONB 1F45                                          _ODCONC 1F50  
                                        _RC6PPS 1F26                                          _ODCONE 1F66  
                  __size_of_EUSART1_is_rx_ready 0009                                          i1l5211 27C6  
                                        i1l5213 27C7                                          i1l5205 27B2  
                                        i1l5207 27BC                                          i1l5209 27C0  
                                        i1l5701 1B3C                                          i1l5527 0800  
                                        i1l5711 1B59                                          i1l5703 1B42  
                                        i1l5529 26FE                                          i1l5713 1B63  
                                        i1l5705 1B48                                          i1l5715 1B6A  
                                        i1l5707 1B4D                                          i1l5709 1B53  
                                        i1l5741 0013                                          i1l5743 001E  
                                        i1l5735 0006                                          i1l5745 0022  
                                        i1l5737 000A                                          i1l5691 18D2  
                                        i1l5739 000F                                          i1l5693 18D8  
                                        i1l5685 18BF                                          i1l5695 18D9  
                                        i1l5687 18C6                                          i1l5697 1B31  
                                        i1l5689 18CE                                          i1l5699 1B37  
                                        _INLVLA 1F3C                                          _INLVLB 1F47  
                                        _INLVLC 1F52                                          u640_20 27C6  
                                        u640_21 27C5                                          _OSCFRQ 0893  
                                        u680_20 1B3C                                          u680_21 1B3B  
                                        u681_20 1B4D                                          u681_21 1B4C  
                  __size_of_EUSART1_is_tx_ready 0009                                          u682_20 1B63  
                                        u682_21 1B62                                          u683_20 000A  
                                        u683_21 0009                                          u684_20 000F  
                                        u684_21 000E                                          u685_20 0013  
                                        u685_21 0012                                          u678_20 18C6  
                                        u686_20 001E                                          u678_21 18C5  
                                        u686_21 001D                                          u679_20 18D8  
                                        u687_20 0022                                          u679_21 18D7  
                                        u687_21 0021                                          _TX1REG 011A  
                                        _TX1STA 011E                                __end_of___xxtofl 2000  
                             _tester_initialize 1BAC                               _CLKREF_Initialize 2702  
                            ?_tester_initialize 0070                                    vfprintf@cfmt 00EE  
                                        ___flge 1EC8                                          ___fleq 1C2D  
                                     ??___fladd 0020                                          ___wmul 181C  
                            ?_CLKREF_Initialize 0070                                       ??___fldiv 0048  
                                     ??___awdiv 0075                                       ??___flneg 0075  
                                     ??___awmod 0075                                       ??___flmul 002E  
                                     ??___flsub 007A                                       ??___fltol 0075  
                                        _efgtoa 004F                                          _config 1E51  
                      ?_EUSART1_SetErrorHandler 0071                                          _floorf 112E  
                           ??_tester_initialize 0079                                ___awdiv@quotient 0078  
                               ___awmod@divisor 0071                                 ___awmod@counter 0076  
                                        pad@buf 0027                ??_EUSART1_SetOverrunErrorHandler 0073  
               ?_EUSART1_SetOverrunErrorHandler 0071                                          _strcpy 187C  
                                        _strlen 27CC                             ??_CLKREF_Initialize 0071  
                               _ADCC_Initialize 1801                           tester_initialize@asic 0022  
                                     ??_measure 0079                                          fputc@c 0071  
                                _PMD_Initialize 2748                                          fputs@c 0023  
                                        fputs@i 0024                                          fputs@s 0026  
                                     ??_isdigit 0073                              __size_of__Umul8_16 0023  
                               ___fpclassifyf@e 0020                                 ___fpclassifyf@u 0022  
                                     ??_setGain 0072                                 ___fpclassifyf@x 0071  
                                     ??_setFilt 0072                                       ??_setFreq 0072  
                                     ??_isspace 0073                                       ??_isupper 0073  
                                     ?_ADC_test 0070               __size_of_ADCC_GetSingleConversion 0012  
                                        putch@c 0070                                          sweep@I 003C  
                                        sweep@Q 003E                                          sweep@i 003A  
                              __end_of_vfprintf 1AF9                       ?_ADCC_GetSingleConversion 0071  
                               ??_EUSART1_Write 0071                                       ??_sprintf 0135  
                                     ??_tolower 0020                                          write@i 0078  
                               _eusart1RxBuffer 01B0                                       ??_strncmp 0075  
                                 ?_mess_handler 0070                                 _eusart1TxBuffer 02A0  
                                    ___flge@ff1 0040                                      ___flge@ff2 0044  
                               ??___fpclassifyf 0075                                    ___xxtofl@arg 0022  
                                  ___xxtofl@exp 0021                               _SYSTEM_Initialize 276F  
                                  ___xxtofl@val 0071                                      ___fleq@ff1 0071  
                                    ___fleq@ff2 0075                       __end_of_tester_initialize 1BEB  
                       __end_of__initialization 004B                                      ___flneg@f1 0071  
                            ?_SYSTEM_Initialize 0070                       __end_of_CLKREF_Initialize 2708  
                                    ___fltol@f1 0071                             mess_handler@message 0168  
                __size_of_EUSART1_RxDataHandler 001A                   __end_of_EUSART1_RxDataHandler 27CC  
                                __pcstackCOMMON 0070                             ??_SYSTEM_Initialize 0074  
                                 __end_of_gains 2813                                   __end_of__puts 1A03  
                                 __end_of_freqs 280B                                   __end_of_fputc 1D25  
                                 __end_of_fputs 1954                                   __end_of_putch 0800  
                                 __end_of_sweep 13F5                                   __end_of_write 18BF  
                        __end_of_PMD_Initialize 2752                            __end_of_EUSART1_Read 1A31  
                        ??_EUSART1_Transmit_ISR 0070                     __end_of_EUSART1_Receive_ISR 1B6E  
                                    ??_ADC_test 013F                                     setGain@asic 0074  
                                       ??__puts 0075                                  ??_mess_handler 0166  
                                       ??_fputc 0074                       __end_of_SYSTEM_Initialize 2782  
                                       ??_fputs 0020                                         ??_putch 0071  
                                       ??_sweep 0030                                   _eusart1RxHead 007C  
                                       ??_write 0076                                   _eusart1TxHead 016E  
                                 _eusart1RxTail 016C                                      __pbssBANK2 016B  
                                    __pbssBANK3 01A0                                      __pbssBANK4 0220  
                                    __pbssBANK5 02A0                                   _eusart1TxTail 016D  
             _EUSART1_TxDefaultInterruptHandler 01D9                 ??_EUSART1_SetRxInterruptHandler 0073  
                                   setFilt@asic 0078                               __end_of__Umul8_16 1905  
               __end_of_EUSART1_SetErrorHandler 270E                                     setFreq@asic 0074  
                                    __pmaintext 1AF9                                         ?___flge 0040  
                                       ?___fleq 0071                                         ?___wmul 0071  
                       __end_of_ADCC_Initialize 181C                                      __pintentry 0004  
                                       ?_efgtoa 00A0                                         ?_config 0071  
                                       _ADFLTRH 0095                                         ?_floorf 005A  
                                       _ADFLTRL 0094                                         _ADPREVH 009C  
                                       _ADPREVL 009B                                         _ADSTPTH 0093  
                                       _ADSTPTL 0092                                    measure@value 0029  
                               ?_PMD_Initialize 0070                                         _CLKRCLK 0896  
                                       _CLKRCON 0895                                         ?_strcpy 0071  
                                       ?_strlen 0071          __end_of_EUSART1_SetFramingErrorHandler 2714  
       __size_of_EUSART1_SetFramingErrorHandler 0006                  _EUSART1_SetFramingErrorHandler 270E  
                             setFreq@freq_index 0071                                       ?___xxtofl 0071  
                  ?_EUSART1_DefaultErrorHandler 0070                                         _SP1BRGH 011C  
                                       _SP1BRGL 011B                                         _OSCCON1 088D  
                                       _OSCCON3 088F                              __size_of_vfpfcnvrt 0303  
                                       _OSCSTAT 0890                                         _OSCTUNE 0892  
                                       _SLRCONA 1F3B                                         _SLRCONB 1F46  
                                       _SLRCONC 1F51                      __size_of_tester_initialize 003F  
                    __end_of_calculate_checksum 2800                      __size_of_CLKREF_Initialize 0006  
                               __size_of___flge 008B                                 __size_of___fleq 004F  
                                       ___fladd 0804                                         ___fldiv 13F5  
                                       ___awdiv 1D7E                                         ___flneg 2752  
                                       ___awmod 1C7C                                         ___flmul 15A9  
                                       ___flsub 183B                                         ___fltol 1DDD  
                               __size_of___wmul 001F                                       ?_vfprintf 00E8  
                               __size_of_efgtoa 0755                                 __size_of_config 0077  
                           _EUSART1_is_rx_ready 272C                                 __size_of_floorf 00EB  
                           _EUSART1_is_tx_ready 2735                                         __ptext1 19A9  
                                       __ptext2 1307                                         __ptext3 1BAC  
                                       __ptext4 1B6E                                         __ptext5 1954  
                                       __ptext6 1A31                                         __ptext7 1219  
                                       __ptext8 1E51                                         __ptext9 27E6  
                               __size_of_strcpy 0021                                 __size_of_strlen 001A  
                                       _measure 1219                           _OSCILLATOR_Initialize 273E  
                                  __size_of_pad 0059                                         _isdigit 2782  
                                    ??___xxtofl 0075                                ___awmod@dividend 0073  
                                       _setGain 1B6E                                         _setFilt 1A31  
                                       _setFreq 1954                              _EUSART1_Initialize 1BEB  
                      ??_PIN_MANAGER_Initialize 0071                                         _isspace 185B  
                                       _isupper 279A                                         efgtoa@c 00A4  
                                       efgtoa@d 00C1                                         efgtoa@e 00DA  
                                       efgtoa@f 00A0                                         efgtoa@g 00D6  
                                       efgtoa@h 00CC                                         efgtoa@i 00D4  
                                       efgtoa@l 00D0                                         efgtoa@m 00BB  
                                       efgtoa@n 00DC                                         efgtoa@p 00C6  
                                       efgtoa@t 00B5                                         efgtoa@u 00DE  
                                       efgtoa@w 00C8                   ??_EUSART1_DefaultErrorHandler 0071  
                                       atoi@neg 0024                                         config@i 0078  
                             setGain@gain_index 0071                      __size_of_SYSTEM_Initialize 0013  
                                       _sprintf 1A90                                         _tolower 1905  
                                       clrloop0 2727                                         _strncmp 07A4  
                          end_of_initialization 004B                            ?_EUSART1_is_rx_ready 0070  
                                       floorf@e 0068                                         floorf@m 0064  
                                       floorf@u 006A                                         floorf@x 005A  
                           ?_EUSART1_Initialize 0070                            ?_EUSART1_is_tx_ready 0070  
                                       fputc@fp 0073                     _EUSART1_OverrunErrorHandler 01D3  
                                       fputs@fp 0079           __end_of_EUSART1_SetRxInterruptHandler 2720  
        __size_of_EUSART1_SetRxInterruptHandler 0006                   _EUSART1_SetRxInterruptHandler 271A  
                             __end_of_vfpfcnvrt 1000                                      efgtoa@mode 00CB  
                                    efgtoa@sign 00C4                           __size_of_EUSART1_Read 002E  
                          __end_of_mess_handler 19D5                                ?_ADCC_Initialize 0070  
                                    ??_vfprintf 00EB                __end_of_ADCC_GetSingleConversion 276F  
                          ??_EUSART1_Initialize 0073                                         strcpy@d 0077  
                                       strlen@a 0074                                         strcpy@s 0075  
                                       strlen@s 0075                                         write@pt 0073  
                                   ___fladd@grs 002B                                   ___xxtofl@sign 0020  
                                   ___fldiv@grs 0054                                     ___fldiv@rem 004D  
              __size_of_EUSART1_SetErrorHandler 0006                                      config@conf 0071  
                           EUSART1_Write@txData 0072                           ??_EUSART1_is_rx_ready 0071  
                             __size_of_ADC_test 02C1                           ??_EUSART1_is_tx_ready 0071  
                                   ___flmul@grs 0034                                    _EUSART1_Read 1A03  
          __size_of_EUSART1_DefaultErrorHandler 0004                                  __end_of___flge 1F53  
                                __end_of___fleq 1C7C                                     vfpfcnvrt@ap 006F  
                                   vfpfcnvrt@ct 0126                                     vfpfcnvrt@fp 012E  
                                __end_of___wmul 183B                                  __end_of_efgtoa 07A4  
                                __end_of_config 1EC8                                  __end_of_floorf 1219  
                        ?_OSCILLATOR_Initialize 0070                                      floorf@F527 01C0  
                                __end_of_strcpy 189D                                  __end_of_strlen 27E6  
                           start_initialization 002D                 __size_of_PIN_MANAGER_Initialize 0030  
                                   __end_of_pad 1D7E   EUSART1_SetRxInterruptHandler@interruptHandler 0071  
 EUSART1_SetTxInterruptHandler@interruptHandler 0071                                    ADC_test@sbuf 0141  
                         __end_of_EUSART1_Write 19A9                           __end_of___fpclassifyf 107F  
                                   vfprintf@fmt 00E8                                        ??___flge 0048  
                                      ??___fleq 0020                                ??_PMD_Initialize 0071  
                                      ??___wmul 0075                           _EUSART1_RxDataHandler 27B2  
                                      ??_efgtoa 00A5                  ?_EUSART1_SetRxInterruptHandler 0071  
                                     __Umul8_16 18E2                                        ??_config 0077  
                                      ??_floorf 005E                                        ??_strcpy 0073  
                                      ??_strlen 0073                                  _eusart1RxCount 016B  
                                     ___fladd@a 0075                                       ___fladd@b 0071  
                      _ADCC_GetSingleConversion 275D                                       ___fldiv@a 0040  
                                     ___fldiv@b 0044                                       ___flmul@a 002A  
                                     ___flmul@b 0026                                     __pbssCOMMON 007C  
                                     ___flsub@a 0040                                       ___flsub@b 0044  
             _EUSART1_RxDefaultInterruptHandler 01D7                                       ___latbits 0003  
                 __size_of_EUSART1_Transmit_ISR 0023                                   __pcstackBANK0 0020  
                                 __pcstackBANK1 00A0                                   __pcstackBANK2 0120  
                             __size_of___xxtofl 00AD                                 sweep@gain_index 0041  
               ??_EUSART1_SetTxInterruptHandler 0073                ??_EUSART1_SetFramingErrorHandler 0073  
               ?_EUSART1_SetFramingErrorHandler 0071                    __size_of_EUSART1_Receive_ISR 003D  
                                    setGain@aux 0073                                       _atoi$2220 0026  
                                     _atoi$2221 002A                                       _atoi$2222 0028  
                                     __pnvBANK3 01D1                           __size_of_mess_handler 002C  
                                    setFilt@aux 0074                                     _efgtoa$2161 00AD  
                                   _efgtoa$2155 00A9                                     _efgtoa$2156 00AB  
                                   _efgtoa$2165 00AF                                     _efgtoa$2166 00B1  
                                   _efgtoa$2167 00B3                          _PIN_MANAGER_Initialize 1A60  
                                    setFreq@aux 0073                 ADCC_GetSingleConversion@channel 0074  
                                      ?___fladd 0071                                        ?___fldiv 0040  
                                      ?___awdiv 0071                                        ?___flneg 0071  
                                      ?___awmod 0071                                        ?___flmul 0026  
                                      ?___flsub 0040                                        ?___fltol 0071  
                            _calculate_checksum 27E6                                      ?__Umul8_16 0071  
                  ??_INTERRUPT_InterruptManager 0071                               __size_of_vfprintf 0035  
                                      _BAUD1CON 011F                             ?_calculate_checksum 0071  
                                      ?_measure 0020      __end_of_EUSART1_DefaultOverrunErrorHandler 0804  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0004            ??_EUSART1_DefaultOverrunErrorHandler 0070  
           ?_EUSART1_DefaultOverrunErrorHandler 0070              _EUSART1_DefaultOverrunErrorHandler 0800  
                                      ?_isdigit 0071                            _EUSART1_ErrorHandler 01D1  
                                      ?_setGain 0071                                        ?_setFilt 0071  
                                      ?_setFreq 0071                                        ?_isspace 0071  
                                 measure@offset 0027                                        ?_isupper 0071  
                               sweep@freq_index 0040                         _EUSART1_SetErrorHandler 2708  
                                      _ADC_test 0A3C                                  __size_of__puts 002E  
                                      ?_sprintf 012F                                        ?_tolower 0077  
                                __size_of_fputc 0056                                  __size_of_fputs 0029  
                                      ?_strncmp 0071                                  __size_of_putch 0001  
                                  _mess_handler 19A9                                  __size_of_sweep 00EE  
                                __size_of_write 0022                               setFilt@freq_index 0071  
                                ___wmul@product 0075                                        _LATAbits 0018  
       EUSART1_SetErrorHandler@interruptHandler 0071                                        _LATCbits 001A  
                          ??_calculate_checksum 0072                                       clear_ram0 2726  
                                   __puts@index 0078                                        _PIE3bits 0719  
           __size_of_INTERRUPT_InterruptManager 0027                                     write@lenght 0075  
                                      _PIR3bits 070F                                        _RX1DTPPS 1ECB  
                        ?_EUSART1_RxDataHandler 0070                                       _vfpfcnvrt 0CFD  
                                    _ADCON0bits 0111                                      _ADCON1bits 0112  
                                    _ADCON2bits 0113                                      _ADCON3bits 0114  
                             ___wmul@multiplier 0071                                    _isspace$2251 0075  
                                    vfpfcnvrt@c 012D                                      vfpfcnvrt@f 0129  
                         EUSART1_Read@readValue 0072                                     ADC_test@aux 015F  
                                   ADC_test@num 0163                                      _ADSTATbits 0115  
         __end_of_EUSART1_SetTxInterruptHandler 2726          __size_of_EUSART1_SetTxInterruptHandler 0006  
                 _EUSART1_SetTxInterruptHandler 2720                                      vfprintf@ap 00EA  
                                    vfprintf@fp 00ED                                      sweep@check 0032  
                                    sweep@count 003B                         calculate_checksum@check 0075  
                       ??_OSCILLATOR_Initialize 0071                                     ??__Umul8_16 0073  
                              __size_of___fladd 0238                                __size_of___fldiv 01B4  
                              __size_of___awdiv 005F                                __size_of___flneg 000B  
                              __size_of___awmod 0053                                __size_of___flmul 0257  
                              __size_of___flsub 0020                                __size_of___fltol 0074  
                   __size_of_EUSART1_Initialize 0042                                      ?_vfpfcnvrt 006E  
                            ___fpclassifyf@F465 01C4                       ??_EUSART1_SetErrorHandler 0073  
           __end_of_EUSART1_DefaultErrorHandler 2702                     _EUSART1_DefaultErrorHandler 26FE  
                                    sprintf@fmt 012F                                      sprintf@ret 0136  
                   __end_of_EUSART1_is_rx_ready 2735                                        ___xxtofl 1F53  
                      __size_of_ADCC_Initialize 001B                                __size_of_measure 00EE  
                              __size_of_isdigit 0018                     __end_of_EUSART1_is_tx_ready 273E  
                              __size_of_setGain 003E                                __size_of_setFilt 002F  
                              __size_of_setFreq 0029                                __size_of_isspace 0021  
                                      __ptext10 1A03                                        __ptext11 0A3C  
                                      __ptext20 187C                                        __ptext12 189D  
                                      __ptext21 1D25                                        __ptext13 1A90  
                                      __ptext30 0804                                        __ptext22 27CC  
                                      __ptext14 1AC4                                        __ptext31 2752  
                                      __ptext23 192B                                        __ptext15 0CFD  
                                      __ptext40 185B                                        __ptext32 15A9  
                                      __ptext24 1CCF                                        __ptext16 07A4  
                                      __ptext41 2782                                        __ptext33 18E2  
                                      __ptext25 07FF                                        __ptext17 004F  
                                      __ptext50 1A60                                        __ptext42 181C  
                                      __ptext34 1EC8                                        __ptext26 112E  
                                      __ptext18 1905                                        __ptext51 273E  
                                      __ptext43 19D5                                        __ptext35 1C2D  
                                      __ptext27 1000                                        __ptext19 279A  
                                      __ptext60 272C                                        __ptext52 1BEB  
                                      __ptext44 2735                                        __ptext36 13F5  
                                      __ptext28 1DDD                                        __ptext53 2720  
                                      __ptext45 197D                                        __ptext37 1C7C  
                                      __ptext29 183B                                        __ptext62 18BF  
                                      __ptext54 271A                                        __ptext46 1F53  
                                      __ptext38 1D7E                                        __ptext63 1B31  
                                      __ptext55 2714                                        __ptext47 275D  
                                      __ptext39 107F                                        __ptext64 0800  
                                      __ptext56 270E                                        __ptext48 276F  
                                      __ptext65 0003                                        __ptext57 2708  
                                      __ptext49 2748                                        __ptext66 26FE  
                                      __ptext58 2702                                        __ptext67 27B2  
                                      __ptext59 1801                                __size_of_isupper 0018  
                                      __puts@pt 0073                                __size_of_sprintf 0034  
                              __size_of_tolower 0026                                      strcpy@dest 0078  
                              __size_of_strncmp 005B                                   __size_of_atoi 00AF  
                                 __size_of_main 0038                                      _RC1STAbits 011D  
                                      efgtoa@fp 00C3                                        efgtoa@ne 00B9  
                                      efgtoa@pp 00B7                                        efgtoa@ou 00BD  
EUSART1_SetOverrunErrorHandler@interruptHandler 0071                      ??_ADCC_GetSingleConversion 0074  
                                      int$flags 007E                                        _vfprintf 1AC4  
            __end_of_INTERRUPT_InterruptManager 002B                      _INTERRUPT_InterruptManager 0004  
                   _EUSART1_FramingErrorHandler 01D5                             _EUSART1_Receive_ISR 1B31  
                                _vfpfcnvrt$2181 0120                                  _vfpfcnvrt$2182 0122  
                                _vfpfcnvrt$2186 0124                                      _INTCONbits 000B  
                                      measure@I 002B                                        measure@Q 0020  
                                     sweep@asic 0043                          calculate_checksum@data 0074  
                                __pstringtext10 20D9                                  __pstringtext11 20F4  
                                __pstringtext12 210E                                  __pstringtext13 2813  
                                __pstringtext14 2817                                  __pstringtext15 281B  
                                __pstringtext16 281F                                  __pstringtext17 2823  
                                __pstringtext18 2826                                  __pstringtext19 0000  
                                      isdigit@c 0071                                        intlevel1 0000  
                                     sprintf@ap 0139                            ?_EUSART1_Receive_ISR 0070  
                                      isspace@c 0071                         ?_PIN_MANAGER_Initialize 0070  
        __end_of_EUSART1_SetOverrunErrorHandler 271A         __size_of_EUSART1_SetOverrunErrorHandler 0006  
                _EUSART1_SetOverrunErrorHandler 2714                                       strcpy@src 0071  
                                      isupper@c 0071                    __end_of_EUSART1_Transmit_ISR 18E2  
                                     strncmp@_l 0076                                       strncmp@_r 0071  
                                   efgtoa@nmode 00CA  EUSART1_SetFramingErrorHandler@interruptHandler 0071  
                ?_EUSART1_SetTxInterruptHandler 0071                                     ??_vfpfcnvrt 00E2  
                        __size_of_EUSART1_Write 002C                              _eusart1RxLastError 01D0  
                                      sweep@aux 0033                                        sweep@ret 0042  
                                 __pstringtext1 2000                                   __pstringtext2 2800  
                                 __pstringtext3 280B                                   __pstringtext4 202C  
                                 __pstringtext5 204C                                   __pstringtext6 206A  
                                 __pstringtext7 2087                                   __pstringtext8 20A3  
                                 __pstringtext9 20BE                           calculate_checksum@num 0071  
                        __Umul8_16@multiplicand 0071                                        sprintf@f 013A  
                                      tolower@c 0077                                        sprintf@s 0138  
                        __size_of___fpclassifyf 007F                                        strncmp@l 0079  
                                      strncmp@n 0073                                        strncmp@r 0077  
                                    _TX1STAbits 011E                                   ___fladd@signs 0028  
                         ??_EUSART1_Receive_ISR 0071                  __end_of_PIN_MANAGER_Initialize 1A90  
                             ??_ADCC_Initialize 0071                                    ___fladd@aexp 0029  
                                  ___fladd@bexp 002A                             calculate_checksum@i 0076  
                          __Umul8_16@multiplier 0079                         ??_EUSART1_RxDataHandler 0070  
                             __Umul8_16@product 0075  
